(undo-tree-save-format-version . 1)
"67ec0562ecc1e3427ada3c05d74aad6fe31351d1"
[nil nil nil nil (25774 24311 176505 998000) 0 nil]
([nil nil ((1 . 3) (t . -1)) nil (25774 24311 176504 153000) 0 nil])
([nil nil ((3 . 4)) nil (25774 24311 176498 103000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1640 . 1641) (nil fontified nil 1595 . 1641) (nil fontified nil 1538 . 1595) (nil fontified nil 1485 . 1538) (nil fontified nil 1431 . 1485) (nil fontified nil 1387 . 1431) (nil fontified nil 1351 . 1387) (nil fontified nil 1249 . 1351) (nil fontified nil 1151 . 1249) (nil fontified nil 1051 . 1151) (nil fontified nil 948 . 1051) (nil fontified nil 927 . 948) (nil fontified nil 835 . 927) (nil fontified nil 743 . 835) (nil fontified nil 653 . 743) (nil fontified nil 556 . 653) (nil fontified nil 461 . 556) (nil fontified nil 374 . 461) (nil fontified nil 279 . 374) (nil fontified nil 179 . 279) (nil fontified nil 81 . 179) (nil fontified nil 60 . 81) (nil fontified nil 35 . 60) (nil fontified nil 2 . 35) (2 . 1641) 1 (t 25774 24311 182865 172000)) nil (25774 24336 104545 599000) 0 nil])
([nil nil ((2 . 3)) nil (25774 24336 104540 264000) 0 nil])
([nil nil ((35 . 36) (#("
" 0 1 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t)) . -35) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 2) nil (25774 24336 104538 457000) 0 nil])
([nil nil ((60 . 61) (#("
" 0 1 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t)) . -60) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 35) nil (25774 24336 104488 472000) 0 nil])
([nil nil ((81 . 82)) nil (25774 24336 104412 555000) 0 nil])
([nil nil ((462 . 463) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -462) (undo-tree-id30 . -1) (375 . 376) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -375) (undo-tree-id31 . -1) (280 . 281) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -280) (undo-tree-id32 . -1) (180 . 181) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -180) (undo-tree-id33 . -1) 83 (t 25774 24336 114877 456000)) nil (25774 24349 240718 187000) 0 nil])
([nil nil ((1352 . 1353) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1352) (undo-tree-id20 . -1) (1250 . 1251) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1250) (undo-tree-id21 . -1) (1152 . 1153) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1152) (undo-tree-id22 . -1) (1052 . 1053) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1052) (undo-tree-id23 . -1) (949 . 950) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -949) (undo-tree-id24 . -1) (928 . 929) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -928) (undo-tree-id25 . -1) (836 . 837) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -836) (undo-tree-id26 . -1) (744 . 745) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -744) (undo-tree-id27 . -1) (654 . 655) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -654) (undo-tree-id28 . -1) (557 . 558) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -557) (undo-tree-id29 . -1) 462) nil (25774 24349 240707 451000) 0 nil])
([nil nil ((#("In the previous chapter, we learned about recurrent neural networks (RNNs) and their applications in natural language processing (NLP) through a sentiment analysis project" 0 97 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t) 97 98 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent))) 98 171 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . 83) (undo-tree-id36 . -170) (undo-tree-id37 . -171) (t 25774 24349 246912 505000)) nil (25774 24362 472309 145000) 0 nil])
([nil nil ((#(". " 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . 83) (undo-tree-id34 . -1) (undo-tree-id35 . -2)) nil (25774 24362 472302 564000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . 107) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (t 25774 24362 478966 467000)) nil (25774 24373 306817 162000) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . 106) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (t 25774 24373 315023 932000)) nil (25774 24405 771300 829000) 0 nil])
([nil nil ((83 . 85) (82 . 83) (t 25774 24378 635056 358000)) nil (25774 24443 536600 600000) 0 nil] [nil nil ((#("However, a new architecture has recently emerged that has been shown to outperform the RNN-based sequence-to-sequence (seq2seq) models in several NLP tasks" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t) 1 23 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t) 23 117 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t) 117 118 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent))) 118 155 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . 83) (undo-tree-id79 . -154) (undo-tree-id80 . -23) (undo-tree-id81 . -23) (undo-tree-id82 . -23) (undo-tree-id83 . -23) (undo-tree-id84 . -23) (undo-tree-id85 . -23) (undo-tree-id86 . -23) (undo-tree-id87 . -23) (undo-tree-id88 . -23) (undo-tree-id89 . -23) (undo-tree-id90 . -23) (undo-tree-id91 . -23) (undo-tree-id92 . -23) (undo-tree-id93 . -23) (undo-tree-id94 . -23) (undo-tree-id95 . -23) (undo-tree-id96 . -23) (undo-tree-id97 . -23) (undo-tree-id98 . -23) (undo-tree-id99 . -23) (undo-tree-id100 . -23) (undo-tree-id101 . -23) (undo-tree-id102 . -23) (undo-tree-id103 . -23) (undo-tree-id104 . -23) (undo-tree-id105 . -23) (undo-tree-id106 . -23) (undo-tree-id107 . -23) (undo-tree-id108 . -23) (undo-tree-id109 . -23) (undo-tree-id110 . -23) (undo-tree-id111 . -23) (undo-tree-id112 . -23) (undo-tree-id113 . -23) (undo-tree-id114 . -23) (undo-tree-id115 . -23) (undo-tree-id116 . -23) (undo-tree-id117 . -23) (undo-tree-id118 . -23) (undo-tree-id119 . -23) (undo-tree-id120 . -23) (undo-tree-id121 . -23) (undo-tree-id122 . -23) (undo-tree-id123 . -23) (undo-tree-id124 . -23) (undo-tree-id125 . -23) (undo-tree-id126 . -23) (undo-tree-id127 . -23) (undo-tree-id128 . -23) (undo-tree-id129 . -23) (undo-tree-id130 . -23) (undo-tree-id131 . -23) (undo-tree-id132 . -23) (undo-tree-id133 . -23) (undo-tree-id134 . -23) (undo-tree-id135 . -23) (undo-tree-id136 . -23) (undo-tree-id137 . -23) (undo-tree-id138 . -23) (undo-tree-id139 . -23) (undo-tree-id140 . -23) (undo-tree-id141 . -23) (undo-tree-id142 . -23) (undo-tree-id143 . -23) (undo-tree-id144 . -23) (undo-tree-id145 . -23) (undo-tree-id146 . -23) (undo-tree-id147 . -23) (undo-tree-id148 . -7) (undo-tree-id149 . -7) (undo-tree-id150 . -7) (undo-tree-id151 . -7) (undo-tree-id152 . -7) (undo-tree-id153 . -7) (undo-tree-id154 . -7) (undo-tree-id155 . -7) (undo-tree-id156 . -7) (undo-tree-id157 . -7) (undo-tree-id158 . -7) (undo-tree-id159 . -7) (undo-tree-id160 . -7) (undo-tree-id161 . -7) (undo-tree-id162 . -7) (undo-tree-id163 . -7) (undo-tree-id164 . -9) (undo-tree-id165 . -9) (undo-tree-id166 . -9) (undo-tree-id167 . -9) (undo-tree-id168 . -9) (undo-tree-id169 . -9) (undo-tree-id170 . -9) (undo-tree-id171 . -9) (undo-tree-id172 . -9) (undo-tree-id173 . -9) (undo-tree-id174 . -9) (undo-tree-id175 . -9) (undo-tree-id176 . -9) (undo-tree-id177 . -9) (undo-tree-id178 . -9) (undo-tree-id179 . -9) (undo-tree-id180 . -9) (undo-tree-id181 . -9) (undo-tree-id182 . -9) (undo-tree-id183 . -9) (undo-tree-id184 . -9) (undo-tree-id185 . -9) (undo-tree-id186 . -9) (undo-tree-id187 . -9) (undo-tree-id188 . -9) (undo-tree-id189 . -9) (undo-tree-id190 . -11) (undo-tree-id191 . -11) (undo-tree-id192 . -11) (undo-tree-id193 . -11) (undo-tree-id194 . -11) (undo-tree-id195 . -11) (undo-tree-id196 . -11) (undo-tree-id197 . -11) (undo-tree-id198 . -11) (undo-tree-id199 . -11) (undo-tree-id200 . -11) (undo-tree-id201 . -11) (undo-tree-id202 . -11) (undo-tree-id203 . -11) (undo-tree-id204 . -11) (undo-tree-id205 . -11) (undo-tree-id206 . -15) (undo-tree-id207 . -15) (undo-tree-id208 . -15) (undo-tree-id209 . -15) (undo-tree-id210 . -15) (undo-tree-id211 . -15) (undo-tree-id212 . -15) (undo-tree-id213 . -15) (undo-tree-id214 . -15) (undo-tree-id215 . -15) (undo-tree-id216 . -15) (undo-tree-id217 . -15) (undo-tree-id218 . -15) (undo-tree-id219 . -15) (undo-tree-id220 . -15) (undo-tree-id221 . -15) (undo-tree-id222 . -28) (undo-tree-id223 . -28) (undo-tree-id224 . -28) (undo-tree-id225 . -28) (undo-tree-id226 . -28) (undo-tree-id227 . -28) (undo-tree-id228 . -28) (undo-tree-id229 . -28) (undo-tree-id230 . -28) (undo-tree-id231 . -28) (undo-tree-id232 . -28) (undo-tree-id233 . -28) (undo-tree-id234 . -28) (undo-tree-id235 . -28) (undo-tree-id236 . -28) (undo-tree-id237 . -28) (undo-tree-id238 . -28) (undo-tree-id239 . -28) (undo-tree-id240 . -28) (undo-tree-id241 . -28) (undo-tree-id242 . -28) (undo-tree-id243 . -32) (undo-tree-id244 . -32) (undo-tree-id245 . -32) (undo-tree-id246 . -32) (undo-tree-id247 . -32) (undo-tree-id248 . -32) (undo-tree-id249 . -32) (undo-tree-id250 . -32) (undo-tree-id251 . -32) (undo-tree-id252 . -32) (undo-tree-id253 . -32) (undo-tree-id254 . -32) (undo-tree-id255 . -32) (undo-tree-id256 . -32) (undo-tree-id257 . -32) (undo-tree-id258 . -32) (undo-tree-id259 . -41) (undo-tree-id260 . -41) (undo-tree-id261 . -41) (undo-tree-id262 . -41) (undo-tree-id263 . -41) (undo-tree-id264 . -41) (undo-tree-id265 . -41) (undo-tree-id266 . -41) (undo-tree-id267 . -41) (undo-tree-id268 . -41) (undo-tree-id269 . -41) (undo-tree-id270 . -41) (undo-tree-id271 . -41) (undo-tree-id272 . -41) (undo-tree-id273 . -41) (undo-tree-id274 . -41) (undo-tree-id275 . -49) (undo-tree-id276 . -49) (undo-tree-id277 . -49) (undo-tree-id278 . -49) (undo-tree-id279 . -49) (undo-tree-id280 . -49) (undo-tree-id281 . -49) (undo-tree-id282 . -49) (undo-tree-id283 . -49) (undo-tree-id284 . -49) (undo-tree-id285 . -49) (undo-tree-id286 . -49) (undo-tree-id287 . -49) (undo-tree-id288 . -49) (undo-tree-id289 . -49) (undo-tree-id290 . -49) (undo-tree-id291 . -54) (undo-tree-id292 . -54) (undo-tree-id293 . -54) (undo-tree-id294 . -54) (undo-tree-id295 . -54) (undo-tree-id296 . -54) (undo-tree-id297 . -54) (undo-tree-id298 . -54) (undo-tree-id299 . -54) (undo-tree-id300 . -54) (undo-tree-id301 . -54) (undo-tree-id302 . -54) (undo-tree-id303 . -54) (undo-tree-id304 . -54) (undo-tree-id305 . -54) (undo-tree-id306 . -54) (undo-tree-id307 . -58) (undo-tree-id308 . -58) (undo-tree-id309 . -58) (undo-tree-id310 . -58) (undo-tree-id311 . -58) (undo-tree-id312 . -58) (undo-tree-id313 . -58) (undo-tree-id314 . -58) (undo-tree-id315 . -58) (undo-tree-id316 . -58) (undo-tree-id317 . -58) (undo-tree-id318 . -58) (undo-tree-id319 . -58) (undo-tree-id320 . -58) (undo-tree-id321 . -58) (undo-tree-id322 . -58) (undo-tree-id323 . -63) (undo-tree-id324 . -63) (undo-tree-id325 . -63) (undo-tree-id326 . -63) (undo-tree-id327 . -63) (undo-tree-id328 . -63) (undo-tree-id329 . -63) (undo-tree-id330 . -63) (undo-tree-id331 . -63) (undo-tree-id332 . -63) (undo-tree-id333 . -63) (undo-tree-id334 . -63) (undo-tree-id335 . -63) (undo-tree-id336 . -63) (undo-tree-id337 . -63) (undo-tree-id338 . -63) (undo-tree-id339 . -63) (undo-tree-id340 . -63) (undo-tree-id341 . -63) (undo-tree-id342 . -63) (undo-tree-id343 . -63) (undo-tree-id344 . -69) (undo-tree-id345 . -69) (undo-tree-id346 . -69) (undo-tree-id347 . -69) (undo-tree-id348 . -69) (undo-tree-id349 . -69) (undo-tree-id350 . -69) (undo-tree-id351 . -69) (undo-tree-id352 . -69) (undo-tree-id353 . -69) (undo-tree-id354 . -69) (undo-tree-id355 . -69) (undo-tree-id356 . -69) (undo-tree-id357 . -69) (undo-tree-id358 . -69) (undo-tree-id359 . -69) (undo-tree-id360 . -69) (undo-tree-id361 . -69) (undo-tree-id362 . -69) (undo-tree-id363 . -69) (undo-tree-id364 . -69) (undo-tree-id365 . -70) (undo-tree-id366 . -70) (undo-tree-id367 . -70) (undo-tree-id368 . -70) (undo-tree-id369 . -70) (undo-tree-id370 . -70) (undo-tree-id371 . -70) (undo-tree-id372 . -70) (undo-tree-id373 . -70) (undo-tree-id374 . -70) (undo-tree-id375 . -70) (undo-tree-id376 . -70) (undo-tree-id377 . -70) (undo-tree-id378 . -70) (undo-tree-id379 . -70) (undo-tree-id380 . -70) (undo-tree-id381 . -81) (undo-tree-id382 . -81) (undo-tree-id383 . -81) (undo-tree-id384 . -81) (undo-tree-id385 . -81) (undo-tree-id386 . -81) (undo-tree-id387 . -81) (undo-tree-id388 . -81) (undo-tree-id389 . -81) (undo-tree-id390 . -81) (undo-tree-id391 . -81) (undo-tree-id392 . -81) (undo-tree-id393 . -81) (undo-tree-id394 . -81) (undo-tree-id395 . -81) (undo-tree-id396 . -81) (undo-tree-id397 . -85) (undo-tree-id398 . -85) (undo-tree-id399 . -85) (undo-tree-id400 . -85) (undo-tree-id401 . -85) (undo-tree-id402 . -85) (undo-tree-id403 . -85) (undo-tree-id404 . -85) (undo-tree-id405 . -85) (undo-tree-id406 . -85) (undo-tree-id407 . -85) (undo-tree-id408 . -85) (undo-tree-id409 . -85) (undo-tree-id410 . -85) (undo-tree-id411 . -85) (undo-tree-id412 . -85) (undo-tree-id413 . -85) (undo-tree-id414 . -85) (undo-tree-id415 . -85) (undo-tree-id416 . -85) (undo-tree-id417 . -85) (undo-tree-id418 . 68) (undo-tree-id419 . -90) (undo-tree-id420 . -89) (undo-tree-id421 . -89) (undo-tree-id422 . -89) (undo-tree-id423 . -89) (undo-tree-id424 . -89) (undo-tree-id425 . -89) (undo-tree-id426 . -89) (undo-tree-id427 . -89) (undo-tree-id428 . -89) (undo-tree-id429 . -89) (undo-tree-id430 . -89) (undo-tree-id431 . -89) (undo-tree-id432 . -89) (undo-tree-id433 . -89) (undo-tree-id434 . -89) (undo-tree-id435 . -89) (undo-tree-id436 . -90) (undo-tree-id437 . -90) (undo-tree-id438 . -90) (undo-tree-id439 . -90) (undo-tree-id440 . -90) (undo-tree-id441 . -90) (undo-tree-id442 . -90) (undo-tree-id443 . -90) (undo-tree-id444 . -90) (undo-tree-id445 . -90) (undo-tree-id446 . -90) (undo-tree-id447 . -90) (undo-tree-id448 . -90) (undo-tree-id449 . -90) (undo-tree-id450 . -90) (undo-tree-id451 . -90) (undo-tree-id452 . -95) (undo-tree-id453 . -95) (undo-tree-id454 . -95) (undo-tree-id455 . -95) (undo-tree-id456 . -95) (undo-tree-id457 . -95) (undo-tree-id458 . -95) (undo-tree-id459 . -95) (undo-tree-id460 . -95) (undo-tree-id461 . -95) (undo-tree-id462 . -95) (undo-tree-id463 . -95) (undo-tree-id464 . -95) (undo-tree-id465 . -95) (undo-tree-id466 . -95) (undo-tree-id467 . -95) (undo-tree-id468 . -104) (undo-tree-id469 . -104) (undo-tree-id470 . -104) (undo-tree-id471 . -104) (undo-tree-id472 . -104) (undo-tree-id473 . -104) (undo-tree-id474 . -104) (undo-tree-id475 . -104) (undo-tree-id476 . -104) (undo-tree-id477 . -104) (undo-tree-id478 . -104) (undo-tree-id479 . -104) (undo-tree-id480 . -104) (undo-tree-id481 . -104) (undo-tree-id482 . -104) (undo-tree-id483 . -104) (undo-tree-id484 . -105) (undo-tree-id485 . -105) (undo-tree-id486 . -105) (undo-tree-id487 . -105) (undo-tree-id488 . -105) (undo-tree-id489 . -105) (undo-tree-id490 . -105) (undo-tree-id491 . -105) (undo-tree-id492 . -105) (undo-tree-id493 . -105) (undo-tree-id494 . -105) (undo-tree-id495 . -105) (undo-tree-id496 . -105) (undo-tree-id497 . -105) (undo-tree-id498 . -105) (undo-tree-id499 . -105) (undo-tree-id500 . -107) (undo-tree-id501 . -107) (undo-tree-id502 . -107) (undo-tree-id503 . -107) (undo-tree-id504 . -107) (undo-tree-id505 . -107) (undo-tree-id506 . -107) (undo-tree-id507 . -107) (undo-tree-id508 . -107) (undo-tree-id509 . -107) (undo-tree-id510 . -107) (undo-tree-id511 . -107) (undo-tree-id512 . -107) (undo-tree-id513 . -107) (undo-tree-id514 . -107) (undo-tree-id515 . -107) (undo-tree-id516 . -108) (undo-tree-id517 . -108) (undo-tree-id518 . -108) (undo-tree-id519 . -108) (undo-tree-id520 . -108) (undo-tree-id521 . -108) (undo-tree-id522 . -108) (undo-tree-id523 . -108) (undo-tree-id524 . -108) (undo-tree-id525 . -108) (undo-tree-id526 . -108) (undo-tree-id527 . -108) (undo-tree-id528 . -108) (undo-tree-id529 . -108) (undo-tree-id530 . -108) (undo-tree-id531 . -108) (undo-tree-id532 . -116) (undo-tree-id533 . -116) (undo-tree-id534 . -116) (undo-tree-id535 . -116) (undo-tree-id536 . -116) (undo-tree-id537 . -116) (undo-tree-id538 . -116) (undo-tree-id539 . -116) (undo-tree-id540 . -116) (undo-tree-id541 . -116) (undo-tree-id542 . -116) (undo-tree-id543 . -116) (undo-tree-id544 . -116) (undo-tree-id545 . -116) (undo-tree-id546 . -116) (undo-tree-id547 . -116) (undo-tree-id548 . -118) (undo-tree-id549 . -118) (undo-tree-id550 . -118) (undo-tree-id551 . -118) (undo-tree-id552 . -118) (undo-tree-id553 . -118) (undo-tree-id554 . -118) (undo-tree-id555 . -118) (undo-tree-id556 . -118) (undo-tree-id557 . -118) (undo-tree-id558 . -118) (undo-tree-id559 . -118) (undo-tree-id560 . -118) (undo-tree-id561 . -118) (undo-tree-id562 . -118) (undo-tree-id563 . -118) (undo-tree-id564 . -125) (undo-tree-id565 . -125) (undo-tree-id566 . -125) (undo-tree-id567 . -125) (undo-tree-id568 . -125) (undo-tree-id569 . -125) (undo-tree-id570 . -125) (undo-tree-id571 . -125) (undo-tree-id572 . -125) (undo-tree-id573 . -125) (undo-tree-id574 . -125) (undo-tree-id575 . -125) (undo-tree-id576 . -125) (undo-tree-id577 . -125) (undo-tree-id578 . -125) (undo-tree-id579 . -125) (undo-tree-id580 . -126) (undo-tree-id581 . -126) (undo-tree-id582 . -126) (undo-tree-id583 . -126) (undo-tree-id584 . -126) (undo-tree-id585 . -126) (undo-tree-id586 . -126) (undo-tree-id587 . -126) (undo-tree-id588 . -126) (undo-tree-id589 . -126) (undo-tree-id590 . -126) (undo-tree-id591 . -126) (undo-tree-id592 . -126) (undo-tree-id593 . -126) (undo-tree-id594 . -126) (undo-tree-id595 . -126) (undo-tree-id596 . -133) (undo-tree-id597 . -133) (undo-tree-id598 . -133) (undo-tree-id599 . -133) (undo-tree-id600 . -133) (undo-tree-id601 . -133) (undo-tree-id602 . -133) (undo-tree-id603 . -133) (undo-tree-id604 . -133) (undo-tree-id605 . -133) (undo-tree-id606 . -133) (undo-tree-id607 . -133) (undo-tree-id608 . -133) (undo-tree-id609 . -133) (undo-tree-id610 . -133) (undo-tree-id611 . -133) (undo-tree-id612 . -133) (undo-tree-id613 . -133) (undo-tree-id614 . -133) (undo-tree-id615 . -133) (undo-tree-id616 . -133) (undo-tree-id617 . -133) (undo-tree-id618 . -133) (undo-tree-id619 . -133) (undo-tree-id620 . -133) (undo-tree-id621 . -133) (undo-tree-id622 . -133) (undo-tree-id623 . -133) (undo-tree-id624 . -133) (undo-tree-id625 . -133) (undo-tree-id626 . -133) (undo-tree-id627 . -68) (undo-tree-id628 . -68) (undo-tree-id629 . -68) (undo-tree-id630 . -68) (undo-tree-id631 . -68) (undo-tree-id632 . -68) (undo-tree-id633 . -68) (undo-tree-id634 . -68) (undo-tree-id635 . -68) (undo-tree-id636 . -68) (undo-tree-id637 . -68) (undo-tree-id638 . -68) (undo-tree-id639 . -68) (undo-tree-id640 . -68) (undo-tree-id641 . -68) (undo-tree-id642 . -68) (undo-tree-id643 . -5) (undo-tree-id644 . -5) (undo-tree-id645 . -5) (undo-tree-id646 . -5) (undo-tree-id647 . -5) (undo-tree-id648 . -5) (undo-tree-id649 . -5) (undo-tree-id650 . -5) (undo-tree-id651 . -5) (undo-tree-id652 . -5) (undo-tree-id653 . -5) (undo-tree-id654 . -5) (undo-tree-id655 . -5) (undo-tree-id656 . -5) (undo-tree-id657 . -5) (undo-tree-id658 . -5) (undo-tree-id659 . -5) (undo-tree-id660 . -5) (undo-tree-id661 . -5) (undo-tree-id662 . -5) (undo-tree-id663 . -5) (undo-tree-id664 . -155) (t 25774 24378 635056 358000)) ((83 . 238)) (25774 24403 904579 683000) 0 nil])
([nil nil ((84 . 85) (#(" " 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified nil)) . 84) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . -85) (undo-tree-id976 . 1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) 84) nil (25774 24443 536570 542000) 0 nil])
([nil nil ((#(". " 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . 83) (undo-tree-id77 . -1) (undo-tree-id78 . -2)) ((83 . 85)) (25774 24403 903546 0) 0 nil])
([nil nil ((#("However, a" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 1 10 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 85) (undo-tree-id746 . 10) (undo-tree-id747 . -9) (undo-tree-id748 . -9) (undo-tree-id749 . -9) (undo-tree-id750 . -7) (undo-tree-id751 . -7) (undo-tree-id752 . -7) (undo-tree-id753 . -7) (undo-tree-id754 . -7) (undo-tree-id755 . -7) (undo-tree-id756 . -7) (undo-tree-id757 . -7) (undo-tree-id758 . -7) (undo-tree-id759 . -7) (undo-tree-id760 . -7) (undo-tree-id761 . -7) (undo-tree-id762 . -7) (undo-tree-id763 . -7) (undo-tree-id764 . -7) (undo-tree-id765 . -7) (undo-tree-id766 . -9) (undo-tree-id767 . -9) (undo-tree-id768 . -9) (undo-tree-id769 . -9) (undo-tree-id770 . -9) (undo-tree-id771 . -9) (undo-tree-id772 . -9) (undo-tree-id773 . -9) (undo-tree-id774 . -9) (undo-tree-id775 . -9) (undo-tree-id776 . -9) (undo-tree-id777 . -9) (undo-tree-id778 . -9) (undo-tree-id779 . -9) (undo-tree-id780 . -9) (undo-tree-id781 . -9) (undo-tree-id782 . -9) (undo-tree-id783 . -9) (undo-tree-id784 . -9) (undo-tree-id785 . -9) (undo-tree-id786 . -9) (undo-tree-id787 . -9) (undo-tree-id788 . -9) (undo-tree-id789 . -9) (undo-tree-id790 . -9) (undo-tree-id791 . -9) (undo-tree-id792 . -5) (undo-tree-id793 . -5) (undo-tree-id794 . -5) (undo-tree-id795 . -5) (undo-tree-id796 . -5) (undo-tree-id797 . -5) (undo-tree-id798 . -5) (undo-tree-id799 . -5) (undo-tree-id800 . -5) (undo-tree-id801 . -5) (undo-tree-id802 . -5) (undo-tree-id803 . -5) (undo-tree-id804 . -5) (undo-tree-id805 . -5) (undo-tree-id806 . -5) (undo-tree-id807 . -5) (undo-tree-id808 . -5) (undo-tree-id809 . -5) (undo-tree-id810 . -5) (undo-tree-id811 . -5) (undo-tree-id812 . -5) (undo-tree-id813 . -9) (undo-tree-id814 . -10) (undo-tree-id815 . -9) (undo-tree-id816 . -6) (undo-tree-id817 . -6) (undo-tree-id818 . -6) (undo-tree-id819 . -6) (undo-tree-id820 . -6) (undo-tree-id821 . -6) (undo-tree-id822 . -6) (undo-tree-id823 . -6) (undo-tree-id824 . -6) (undo-tree-id825 . -6) (undo-tree-id826 . -6) (undo-tree-id827 . -6) (undo-tree-id828 . -6) (undo-tree-id829 . -6) (undo-tree-id830 . -6) (undo-tree-id831 . -6) (undo-tree-id832 . -6) (undo-tree-id833 . -6) (undo-tree-id834 . -6) (undo-tree-id835 . -6) (undo-tree-id836 . -6) (undo-tree-id837 . -7) (undo-tree-id838 . -7) (undo-tree-id839 . -7) (undo-tree-id840 . -7) (undo-tree-id841 . -7) (undo-tree-id842 . -7) (undo-tree-id843 . -7) (undo-tree-id844 . -7) (undo-tree-id845 . -7) (undo-tree-id846 . -7) (undo-tree-id847 . -7) (undo-tree-id848 . -7) (undo-tree-id849 . -7) (undo-tree-id850 . -7) (undo-tree-id851 . -7) (undo-tree-id852 . -7) (undo-tree-id853 . -7) (undo-tree-id854 . -7) (undo-tree-id855 . -7) (undo-tree-id856 . -7) (undo-tree-id857 . -7) (undo-tree-id858 . -7) (undo-tree-id859 . -7) (undo-tree-id860 . -7) (undo-tree-id861 . -7) (undo-tree-id862 . -7) (undo-tree-id863 . -9) (undo-tree-id864 . -9) (undo-tree-id865 . -9) (undo-tree-id866 . -9) (undo-tree-id867 . -9) (undo-tree-id868 . -9) (undo-tree-id869 . -9) (undo-tree-id870 . -9) (undo-tree-id871 . -9) (undo-tree-id872 . -9) (undo-tree-id873 . -9) (undo-tree-id874 . -9) (undo-tree-id875 . -9) (undo-tree-id876 . -9) (undo-tree-id877 . -9) (undo-tree-id878 . -9) (undo-tree-id879 . -9) (undo-tree-id880 . -9) (undo-tree-id881 . -9) (undo-tree-id882 . -9) (undo-tree-id883 . -9) (undo-tree-id884 . -9) (undo-tree-id885 . -9) (undo-tree-id886 . -9) (undo-tree-id887 . -9) (undo-tree-id888 . -9) (undo-tree-id889 . -9) (undo-tree-id890 . -9) (undo-tree-id891 . -9) (undo-tree-id892 . -9) (undo-tree-id893 . -9) (undo-tree-id894 . -9) (undo-tree-id895 . -9) (undo-tree-id896 . -9) (undo-tree-id897 . -9) (undo-tree-id898 . -9) (undo-tree-id899 . -9) (undo-tree-id900 . -10) 94) nil (25774 24443 535722 933000) 0 nil])
nil
([nil nil ((85 . 86)) nil (25774 24443 534225 388000) 0 nil])
([nil nil ((#("(seq2seq)" 0 9 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 194) (undo-tree-id712 . -8) (undo-tree-id713 . -7) (undo-tree-id714 . -7) (undo-tree-id715 . -7) (undo-tree-id716 . -7) (undo-tree-id717 . -7) (undo-tree-id718 . -7) (undo-tree-id719 . -7) (undo-tree-id720 . -7) (undo-tree-id721 . -7) (undo-tree-id722 . -7) (undo-tree-id723 . -7) (undo-tree-id724 . -7) (undo-tree-id725 . -7) (undo-tree-id726 . -7) (undo-tree-id727 . -7) (undo-tree-id728 . -7) (undo-tree-id729 . -8) (undo-tree-id730 . -8) (undo-tree-id731 . -8) (undo-tree-id732 . -8) (undo-tree-id733 . -8) (undo-tree-id734 . -8) (undo-tree-id735 . -8) (undo-tree-id736 . -8) (undo-tree-id737 . -8) (undo-tree-id738 . -8) (undo-tree-id739 . -8) (undo-tree-id740 . -8) (undo-tree-id741 . -8) (undo-tree-id742 . -8) (undo-tree-id743 . -8) (undo-tree-id744 . -8) (undo-tree-id745 . -9) 148) nil (25774 24443 534223 470000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 194) (undo-tree-id710 . -1) (undo-tree-id711 . -1)) nil (25774 24443 534203 506000) 0 nil])
([nil nil ((#("This " 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 1 5 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 223) (undo-tree-id708 . -4) (undo-tree-id709 . -5)) nil (25774 24443 534201 702000) 0 nil])
([nil nil ((#("is " 0 3 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 223) (undo-tree-id706 . -2) (undo-tree-id707 . -3)) nil (25774 24443 534199 730000) 0 nil])
([nil nil ((#("the " 0 4 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 223) (undo-tree-id704 . -3) (undo-tree-id705 . -4)) nil (25774 24443 534196 598000) 0 nil])
([nil nil ((#("so" 0 2 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 223) (undo-tree-id702 . -1) (undo-tree-id703 . -2)) nil (25774 24443 534194 777000) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 223) (undo-tree-id701 . -1)) nil (25774 24443 534192 891000) 0 nil])
([nil nil ((#("called " 0 7 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 223) (undo-tree-id699 . -6) (undo-tree-id700 . -7)) nil (25774 24443 534191 412000) 0 nil])
([nil nil ((#("transformer" 0 11 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 223) (undo-tree-id665 . -10) (undo-tree-id666 . -10) (undo-tree-id667 . -10) (undo-tree-id668 . -10) (undo-tree-id669 . -11) (undo-tree-id670 . -10) (undo-tree-id671 . -10) (undo-tree-id672 . -10) (undo-tree-id673 . -10) (undo-tree-id674 . -10) (undo-tree-id675 . -10) (undo-tree-id676 . -10) (undo-tree-id677 . -10) (undo-tree-id678 . -10) (undo-tree-id679 . -10) (undo-tree-id680 . -10) (undo-tree-id681 . -10) (undo-tree-id682 . -10) (undo-tree-id683 . -10) (undo-tree-id684 . -10) (undo-tree-id685 . -10) (undo-tree-id686 . -10) (undo-tree-id687 . -10) (undo-tree-id688 . -10) (undo-tree-id689 . -10) (undo-tree-id690 . -10) (undo-tree-id691 . -10) (undo-tree-id692 . -10) (undo-tree-id693 . -10) (undo-tree-id694 . -10) (undo-tree-id695 . -10) (undo-tree-id696 . -10) (undo-tree-id697 . -10) (undo-tree-id698 . -11) 233) nil (25774 24443 534187 456000) 0 nil])
([nil nil ((103 . 106)) nil (25774 24443 534158 606000) 0 nil])
([nil nil ((nil rear-nonsticky nil 115 . 116) (nil fontified nil 105 . 116) (105 . 116) 104) nil (25774 24443 534153 613000) 0 nil])
([nil nil ((#("architecture" 0 12 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 238) (undo-tree-id2248 . -11) (undo-tree-id2249 . -12) (t 25774 24443 543653 261000)) nil (25774 24462 476708 840000) 0 nil])
([nil nil ((#("." 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 238) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1)) nil (25774 24462 476705 51000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . 238) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1)) nil (25774 24462 476701 895000) 0 nil])
([nil nil ((83 . 1164) (#("- Transformers have revolutionized natural language processing and have been at the forefront of many impressive applications ranging from automated language translation (https://ai.googleblog. com/2020/06/recent-advances-in-google-translate.html) and modeling fundamental properties of protein sequences (https://www.pnas.org/content/118/15/e2016239118.short) to creating an AI that helps people write code (https://github.blog/2021-06-29-introducing-github-copilot- ai-pair-programmer). In this chapter, you will learn about the basic mechanisms of attention and self-attention and see how they are used in the original transformer architecture. Then, equipped with an understanding of how transformers work, we will explore some of the most influential NLP models that emerged from this architecture and learn how to use a large-scale language model, the so-called BERT model, in PyTorch. We will cover the following topics:
- A new architecture (transformer) has recently emerged that has been shown to outperform the RNN-based sequence-to-sequence models in several NLP tasks." 0 2 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 2 42 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 42 96 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 96 97 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 97 122 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 122 171 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 171 191 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://ai.googleblog") help-echo "LINK: https://ai.googleblog" fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 191 192 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://ai.googleblog") help-echo "LINK: https://ai.googleblog" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 192 193 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 193 194 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 194 283 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 283 284 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 284 295 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 295 296 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 296 297 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 297 304 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 304 305 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 305 306 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 306 314 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 314 319 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 319 322 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 322 326 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 326 328 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 328 329 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 329 336 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 336 344 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 344 345 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 345 346 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 346 347 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 347 358 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 358 359 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 359 366 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 366 375 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 375 376 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 376 378 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 378 409 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 409 452 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://github.blog/2021-06-29-introducing-github-copilot") help-echo "LINK: https://github.blog/2021-06-29-introducing-github-copilot" fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 452 465 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://github.blog/2021-06-29-introducing-github-copilot") help-echo "LINK: https://github.blog/2021-06-29-introducing-github-copilot" fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 465 466 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://github.blog/2021-06-29-introducing-github-copilot") help-echo "LINK: https://github.blog/2021-06-29-introducing-github-copilot" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 466 467 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 467 468 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 468 488 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 488 489 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 489 591 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 591 592 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 592 597 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 597 691 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 691 692 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 692 789 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 789 790 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 790 891 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 891 892 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 892 927 (fontified nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 927 928 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 928 929 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified nil composition (0 1 [8226])) 929 931 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 931 944 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified nil) 944 950 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified nil) 950 960 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified nil) 960 961 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified nil rear-nonsticky t) 961 1007 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified nil) 1007 1052 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified nil) 1052 1053 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 1053 1080 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified nil) 1080 1081 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified nil)) . 83) (undo-tree-id1045 . 119) (undo-tree-id1046 . -1081) (undo-tree-id1047 . -1081) (undo-tree-id1048 . -950) (undo-tree-id1049 . -930) (undo-tree-id1050 . -930) (undo-tree-id1051 . -930) (undo-tree-id1052 . -930) (undo-tree-id1053 . -930) (undo-tree-id1054 . -930) (undo-tree-id1055 . -930) (undo-tree-id1056 . -930) (undo-tree-id1057 . -930) (undo-tree-id1058 . -930) (undo-tree-id1059 . -930) (undo-tree-id1060 . -930) (undo-tree-id1061 . -930) (undo-tree-id1062 . -930) (undo-tree-id1063 . -930) (undo-tree-id1064 . -930) (undo-tree-id1065 . -930) (undo-tree-id1066 . -930) (undo-tree-id1067 . -930) (undo-tree-id1068 . -930) (undo-tree-id1069 . -930) (undo-tree-id1070 . -930) (undo-tree-id1071 . -930) (undo-tree-id1072 . -930) (undo-tree-id1073 . -930) (undo-tree-id1074 . -930) (undo-tree-id1075 . -930) (undo-tree-id1076 . -930) (undo-tree-id1077 . -930) (undo-tree-id1078 . -930) (undo-tree-id1079 . -930) (undo-tree-id1080 . -930) (undo-tree-id1081 . -930) (undo-tree-id1082 . -930) (undo-tree-id1083 . -930) (undo-tree-id1084 . -930) (undo-tree-id1085 . -930) (undo-tree-id1086 . -930) (undo-tree-id1087 . -930) (undo-tree-id1088 . -930) (undo-tree-id1089 . -930) (undo-tree-id1090 . -930) (undo-tree-id1091 . -1053) (undo-tree-id1092 . -1053) (undo-tree-id1093 . -1053) (undo-tree-id1094 . -1053) (undo-tree-id1095 . -1053) (undo-tree-id1096 . -1053) (undo-tree-id1097 . -1053) (undo-tree-id1098 . -1053) (undo-tree-id1099 . -1053) (undo-tree-id1100 . -1053) (undo-tree-id1101 . -1053) (undo-tree-id1102 . -1053) (undo-tree-id1103 . -1053) (undo-tree-id1104 . -1053) (undo-tree-id1105 . -1053) (undo-tree-id1106 . -1053) (undo-tree-id1107 . -1053) (undo-tree-id1108 . -1053) (undo-tree-id1109 . -1053) (undo-tree-id1110 . -1053) (undo-tree-id1111 . -1053) (undo-tree-id1112 . -1053) (undo-tree-id1113 . -1053) (undo-tree-id1114 . -1053) (undo-tree-id1115 . -1053) (undo-tree-id1116 . -1053) (undo-tree-id1117 . -1053) (undo-tree-id1118 . -1053) (undo-tree-id1119 . -1053) (undo-tree-id1120 . -1053) (undo-tree-id1121 . -1053) (undo-tree-id1122 . -1053) (undo-tree-id1123 . -930) (undo-tree-id1124 . -930) (undo-tree-id1125 . -930) (undo-tree-id1126 . -930) (undo-tree-id1127 . -930) (undo-tree-id1128 . -930) (undo-tree-id1129 . -930) (undo-tree-id1130 . -930) (undo-tree-id1131 . -930) (undo-tree-id1132 . -930) (undo-tree-id1133 . -930) (undo-tree-id1134 . -930) (undo-tree-id1135 . -930) (undo-tree-id1136 . -930) (undo-tree-id1137 . -930) (undo-tree-id1138 . -930) (undo-tree-id1139 . -930) (undo-tree-id1140 . -930) (undo-tree-id1141 . -930) (undo-tree-id1142 . -930) (undo-tree-id1143 . -930) (undo-tree-id1144 . -929) (undo-tree-id1145 . -929) (undo-tree-id1146 . -929) (undo-tree-id1147 . -929) (undo-tree-id1148 . -929) (undo-tree-id1149 . -929) (undo-tree-id1150 . -929) (undo-tree-id1151 . -929) (undo-tree-id1152 . -929) (undo-tree-id1153 . -929) (undo-tree-id1154 . -929) (undo-tree-id1155 . -929) (undo-tree-id1156 . -929) (undo-tree-id1157 . -929) (undo-tree-id1158 . -929) (undo-tree-id1159 . -929) (undo-tree-id1160 . -929) (undo-tree-id1161 . -929) (undo-tree-id1162 . -929) (undo-tree-id1163 . -929) (undo-tree-id1164 . -929) (undo-tree-id1165 . -929) (undo-tree-id1166 . -929) (undo-tree-id1167 . -929) (undo-tree-id1168 . -929) (undo-tree-id1169 . -929) (undo-tree-id1170 . -929) (undo-tree-id1171 . -929) (undo-tree-id1172 . -929) (undo-tree-id1173 . -929) (undo-tree-id1174 . -929) (undo-tree-id1175 . -929) (undo-tree-id1176 . -929) (undo-tree-id1177 . -929) (undo-tree-id1178 . -929) (undo-tree-id1179 . -929) (undo-tree-id1180 . -929) (undo-tree-id1181 . -929) (undo-tree-id1182 . -929) (undo-tree-id1183 . -929) (undo-tree-id1184 . -929) (undo-tree-id1185 . -929) (undo-tree-id1186 . -929) (undo-tree-id1187 . -929) (undo-tree-id1188 . -929) (undo-tree-id1189 . -929) (undo-tree-id1190 . -929) (undo-tree-id1191 . -929) (undo-tree-id1192 . -929) (undo-tree-id1193 . -929) (undo-tree-id1194 . -929) (undo-tree-id1195 . -929) (undo-tree-id1196 . -929) (undo-tree-id1197 . -929) (undo-tree-id1198 . -929) (undo-tree-id1199 . -929) (undo-tree-id1200 . -929) (undo-tree-id1201 . -929) (undo-tree-id1202 . -929) (undo-tree-id1203 . -929) (undo-tree-id1204 . -929) (undo-tree-id1205 . -929) (undo-tree-id1206 . -929) (undo-tree-id1207 . -929) (undo-tree-id1208 . -929) (undo-tree-id1209 . -929) (undo-tree-id1210 . -929) (undo-tree-id1211 . -929) (undo-tree-id1212 . -929) (undo-tree-id1213 . -929) (undo-tree-id1214 . -929) (undo-tree-id1215 . -1081) (undo-tree-id1216 . -1081) (undo-tree-id1217 . -1081) (undo-tree-id1218 . -930) (undo-tree-id1219 . -930) (undo-tree-id1220 . -930) (undo-tree-id1221 . -930) (undo-tree-id1222 . -930) (undo-tree-id1223 . -930) (undo-tree-id1224 . -930) (undo-tree-id1225 . -930) (undo-tree-id1226 . -930) (undo-tree-id1227 . -930) (undo-tree-id1228 . -930) (undo-tree-id1229 . -930) (undo-tree-id1230 . -930) (undo-tree-id1231 . -930) (undo-tree-id1232 . -930) (undo-tree-id1233 . -930) (undo-tree-id1234 . -930) (undo-tree-id1235 . -930) (undo-tree-id1236 . -930) (undo-tree-id1237 . -930) (undo-tree-id1238 . -930) (undo-tree-id1239 . -930) (undo-tree-id1240 . -930) (undo-tree-id1241 . -930) (undo-tree-id1242 . -930) (undo-tree-id1243 . -930) (undo-tree-id1244 . -930) (undo-tree-id1245 . -930) (undo-tree-id1246 . -930) (undo-tree-id1247 . -930) (undo-tree-id1248 . -930) (undo-tree-id1249 . -930) (undo-tree-id1250 . -930) (undo-tree-id1251 . -930) (undo-tree-id1252 . -930) (undo-tree-id1253 . -930) (undo-tree-id1254 . -930) (undo-tree-id1255 . -930) (undo-tree-id1256 . -930) (undo-tree-id1257 . -930) (undo-tree-id1258 . -930) (undo-tree-id1259 . -930) (undo-tree-id1260 . -930) (undo-tree-id1261 . -930) (undo-tree-id1262 . -930) (undo-tree-id1263 . -930) (undo-tree-id1264 . -930) (undo-tree-id1265 . -930) (undo-tree-id1266 . -930) (undo-tree-id1267 . -930) (undo-tree-id1268 . -930) (undo-tree-id1269 . -930) (undo-tree-id1270 . -930) (undo-tree-id1271 . -930) (undo-tree-id1272 . -930) (undo-tree-id1273 . -930) (undo-tree-id1274 . -930) (undo-tree-id1275 . -930) (undo-tree-id1276 . -930) (undo-tree-id1277 . -930) (undo-tree-id1278 . -930) (undo-tree-id1279 . -930) (undo-tree-id1280 . -930) (undo-tree-id1281 . -930) (undo-tree-id1282 . -930) (undo-tree-id1283 . -930) (undo-tree-id1284 . -930) (undo-tree-id1285 . -930) (undo-tree-id1286 . -930) (undo-tree-id1287 . -930) (undo-tree-id1288 . -930) (undo-tree-id1289 . -930) (undo-tree-id1290 . -930) (undo-tree-id1291 . -930) (undo-tree-id1292 . -930) (undo-tree-id1293 . -930) (undo-tree-id1294 . -930) (undo-tree-id1295 . -930) (undo-tree-id1296 . -930) (undo-tree-id1297 . -930) (undo-tree-id1298 . -930) (undo-tree-id1299 . -930) (undo-tree-id1300 . -930) (undo-tree-id1301 . -1081) (undo-tree-id1302 . -1081) (undo-tree-id1303 . -1081) (undo-tree-id1304 . -1081) (undo-tree-id1305 . -1081) (undo-tree-id1306 . -1081) (undo-tree-id1307 . -1081) (undo-tree-id1308 . -1081) (undo-tree-id1309 . -1081) (undo-tree-id1310 . -1081) (undo-tree-id1311 . -1081) (undo-tree-id1312 . -1081) (undo-tree-id1313 . -1081) (undo-tree-id1314 . -1081) (undo-tree-id1315 . -1081) (undo-tree-id1316 . -1081) (undo-tree-id1317 . -1081) (undo-tree-id1318 . -1081) (undo-tree-id1319 . -1081) (undo-tree-id1320 . -1081) (undo-tree-id1321 . -1081) (undo-tree-id1322 . -1081) (undo-tree-id1323 . -1081) (undo-tree-id1324 . -1081) (undo-tree-id1325 . -1081) (undo-tree-id1326 . -1081) (undo-tree-id1327 . -1081) (undo-tree-id1328 . -960) (undo-tree-id1329 . -1081) (undo-tree-id1330 . -960) (undo-tree-id1331 . -960) (undo-tree-id1332 . -960) (undo-tree-id1333 . -960) (undo-tree-id1334 . -960) (undo-tree-id1335 . -960) (undo-tree-id1336 . -960) (undo-tree-id1337 . -960) (undo-tree-id1338 . -960) (undo-tree-id1339 . -960) (undo-tree-id1340 . -960) (undo-tree-id1341 . -960) (undo-tree-id1342 . -960) (undo-tree-id1343 . -960) (undo-tree-id1344 . -960) (undo-tree-id1345 . -960) (undo-tree-id1346 . -960) (undo-tree-id1347 . -960) (undo-tree-id1348 . -960) (undo-tree-id1349 . -960) (undo-tree-id1350 . -960) (undo-tree-id1351 . -960) (undo-tree-id1352 . -960) (undo-tree-id1353 . -960) (undo-tree-id1354 . -960) (undo-tree-id1355 . -960) (undo-tree-id1356 . -960) (undo-tree-id1357 . -960) (undo-tree-id1358 . -960) (undo-tree-id1359 . -961) (undo-tree-id1360 . -961) (undo-tree-id1361 . -961) (undo-tree-id1362 . -961) (undo-tree-id1363 . -961) (undo-tree-id1364 . -961) (undo-tree-id1365 . -961) (undo-tree-id1366 . -961) (undo-tree-id1367 . -961) (undo-tree-id1368 . -961) (undo-tree-id1369 . -961) (undo-tree-id1370 . -961) (undo-tree-id1371 . -961) (undo-tree-id1372 . -961) (undo-tree-id1373 . -961) (undo-tree-id1374 . -961) (undo-tree-id1375 . -961) (undo-tree-id1376 . -961) (undo-tree-id1377 . -961) (undo-tree-id1378 . -961) (undo-tree-id1379 . -961) (undo-tree-id1380 . -965) (undo-tree-id1381 . -965) (undo-tree-id1382 . -965) (undo-tree-id1383 . -965) (undo-tree-id1384 . -965) (undo-tree-id1385 . -965) (undo-tree-id1386 . -965) (undo-tree-id1387 . -965) (undo-tree-id1388 . -965) (undo-tree-id1389 . -965) (undo-tree-id1390 . -965) (undo-tree-id1391 . -965) (undo-tree-id1392 . -965) (undo-tree-id1393 . -965) (undo-tree-id1394 . -965) (undo-tree-id1395 . -965) (undo-tree-id1396 . -974) (undo-tree-id1397 . -974) (undo-tree-id1398 . -974) (undo-tree-id1399 . -974) (undo-tree-id1400 . -974) (undo-tree-id1401 . -974) (undo-tree-id1402 . -974) (undo-tree-id1403 . -974) (undo-tree-id1404 . -974) (undo-tree-id1405 . -974) (undo-tree-id1406 . -974) (undo-tree-id1407 . -974) (undo-tree-id1408 . -974) (undo-tree-id1409 . -974) (undo-tree-id1410 . -974) (undo-tree-id1411 . -974) (undo-tree-id1412 . -982) (undo-tree-id1413 . -982) (undo-tree-id1414 . -982) (undo-tree-id1415 . -982) (undo-tree-id1416 . -982) (undo-tree-id1417 . -982) (undo-tree-id1418 . -982) (undo-tree-id1419 . -982) (undo-tree-id1420 . -982) (undo-tree-id1421 . -982) (undo-tree-id1422 . -982) (undo-tree-id1423 . -982) (undo-tree-id1424 . -982) (undo-tree-id1425 . -982) (undo-tree-id1426 . -982) (undo-tree-id1427 . -982) (undo-tree-id1428 . -987) (undo-tree-id1429 . -987) (undo-tree-id1430 . -987) (undo-tree-id1431 . -987) (undo-tree-id1432 . -987) (undo-tree-id1433 . -987) (undo-tree-id1434 . -987) (undo-tree-id1435 . -987) (undo-tree-id1436 . -987) (undo-tree-id1437 . -987) (undo-tree-id1438 . -987) (undo-tree-id1439 . -987) (undo-tree-id1440 . -987) (undo-tree-id1441 . -987) (undo-tree-id1442 . -987) (undo-tree-id1443 . -987) (undo-tree-id1444 . -991) (undo-tree-id1445 . -991) (undo-tree-id1446 . -991) (undo-tree-id1447 . -991) (undo-tree-id1448 . -991) (undo-tree-id1449 . -991) (undo-tree-id1450 . -991) (undo-tree-id1451 . -991) (undo-tree-id1452 . -991) (undo-tree-id1453 . -991) (undo-tree-id1454 . -991) (undo-tree-id1455 . -991) (undo-tree-id1456 . -991) (undo-tree-id1457 . -991) (undo-tree-id1458 . -991) (undo-tree-id1459 . -991) (undo-tree-id1460 . -996) (undo-tree-id1461 . -996) (undo-tree-id1462 . -996) (undo-tree-id1463 . -996) (undo-tree-id1464 . -996) (undo-tree-id1465 . -996) (undo-tree-id1466 . -996) (undo-tree-id1467 . -996) (undo-tree-id1468 . -996) (undo-tree-id1469 . -996) (undo-tree-id1470 . -996) (undo-tree-id1471 . -996) (undo-tree-id1472 . -996) (undo-tree-id1473 . -996) (undo-tree-id1474 . -996) (undo-tree-id1475 . -996) (undo-tree-id1476 . -996) (undo-tree-id1477 . -996) (undo-tree-id1478 . -996) (undo-tree-id1479 . -996) (undo-tree-id1480 . -996) (undo-tree-id1481 . -1002) (undo-tree-id1482 . -1002) (undo-tree-id1483 . -1002) (undo-tree-id1484 . -1002) (undo-tree-id1485 . -1002) (undo-tree-id1486 . -1002) (undo-tree-id1487 . -1002) (undo-tree-id1488 . -1002) (undo-tree-id1489 . -1002) (undo-tree-id1490 . -1002) (undo-tree-id1491 . -1002) (undo-tree-id1492 . -1002) (undo-tree-id1493 . -1002) (undo-tree-id1494 . -1002) (undo-tree-id1495 . -1002) (undo-tree-id1496 . -1002) (undo-tree-id1497 . -1002) (undo-tree-id1498 . -1002) (undo-tree-id1499 . -1002) (undo-tree-id1500 . -1002) (undo-tree-id1501 . -1002) (undo-tree-id1502 . -1002) (undo-tree-id1503 . -1002) (undo-tree-id1504 . -1002) (undo-tree-id1505 . -1002) (undo-tree-id1506 . -1002) (undo-tree-id1507 . -1062) (undo-tree-id1508 . -1062) (undo-tree-id1509 . -1062) (undo-tree-id1510 . -1062) (undo-tree-id1511 . -1062) (undo-tree-id1512 . -1062) (undo-tree-id1513 . -1062) (undo-tree-id1514 . -1062) (undo-tree-id1515 . -1062) (undo-tree-id1516 . -1062) (undo-tree-id1517 . -1062) (undo-tree-id1518 . -1062) (undo-tree-id1519 . -1062) (undo-tree-id1520 . -1062) (undo-tree-id1521 . -1062) (undo-tree-id1522 . -1062) (undo-tree-id1523 . -1069) (undo-tree-id1524 . -1069) (undo-tree-id1525 . -1069) (undo-tree-id1526 . -1069) (undo-tree-id1527 . -1069) (undo-tree-id1528 . -1069) (undo-tree-id1529 . -1069) (undo-tree-id1530 . -1069) (undo-tree-id1531 . -1069) (undo-tree-id1532 . -1069) (undo-tree-id1533 . -1069) (undo-tree-id1534 . -1069) (undo-tree-id1535 . -1069) (undo-tree-id1536 . -1069) (undo-tree-id1537 . -1069) (undo-tree-id1538 . -1069) (undo-tree-id1539 . -1073) (undo-tree-id1540 . -1073) (undo-tree-id1541 . -1073) (undo-tree-id1542 . -1073) (undo-tree-id1543 . -1073) (undo-tree-id1544 . -1073) (undo-tree-id1545 . -1073) (undo-tree-id1546 . -1073) (undo-tree-id1547 . -1073) (undo-tree-id1548 . -1073) (undo-tree-id1549 . -1073) (undo-tree-id1550 . -1073) (undo-tree-id1551 . -1073) (undo-tree-id1552 . -1073) (undo-tree-id1553 . -1073) (undo-tree-id1554 . -1073) (undo-tree-id1555 . -1079) (undo-tree-id1556 . -1079) (undo-tree-id1557 . -1079) (undo-tree-id1558 . -1079) (undo-tree-id1559 . -1079) (undo-tree-id1560 . -1079) (undo-tree-id1561 . -1079) (undo-tree-id1562 . -1079) (undo-tree-id1563 . -1079) (undo-tree-id1564 . -1079) (undo-tree-id1565 . -1079) (undo-tree-id1566 . -1079) (undo-tree-id1567 . -1079) (undo-tree-id1568 . -1079) (undo-tree-id1569 . -1079) (undo-tree-id1570 . -1079) (undo-tree-id1571 . -1080) (undo-tree-id1572 . -1080) (undo-tree-id1573 . -1080) (undo-tree-id1574 . -1080) (undo-tree-id1575 . -1080) (undo-tree-id1576 . -1080) (undo-tree-id1577 . -1080) (undo-tree-id1578 . -1080) (undo-tree-id1579 . -1080) (undo-tree-id1580 . -1080) (undo-tree-id1581 . -1080) (undo-tree-id1582 . -1080) (undo-tree-id1583 . -1080) (undo-tree-id1584 . -1080) (undo-tree-id1585 . -1080) (undo-tree-id1586 . -1080) (undo-tree-id1587 . -1080) (undo-tree-id1588 . -1080) (undo-tree-id1589 . -1080) (undo-tree-id1590 . -1080) (undo-tree-id1591 . -1080) (undo-tree-id1592 . -1081) (undo-tree-id1593 . -1081) (undo-tree-id1594 . -1081) (undo-tree-id1595 . -1081) (undo-tree-id1596 . -1081) (undo-tree-id1597 . -1081) (undo-tree-id1598 . -1081) (undo-tree-id1599 . -1081) (undo-tree-id1600 . -1081) (undo-tree-id1601 . -1081) (undo-tree-id1602 . -1081) (undo-tree-id1603 . -1081) (undo-tree-id1604 . -1081) (undo-tree-id1605 . -1081) (undo-tree-id1606 . -1081) (undo-tree-id1607 . -1081) (undo-tree-id1608 . -1081) (undo-tree-id1609 . -1081) (undo-tree-id1610 . -1081) (undo-tree-id1611 . -1081) (undo-tree-id1612 . -1081) (undo-tree-id1613 . -1081) (undo-tree-id1614 . -1081) (undo-tree-id1615 . -1081) (undo-tree-id1616 . -1081) (undo-tree-id1617 . -1081) (undo-tree-id1618 . -1081) (undo-tree-id1619 . -1081) (undo-tree-id1620 . -1081) (undo-tree-id1621 . -1081) (undo-tree-id1622 . -1081) (undo-tree-id1623 . -1081) (undo-tree-id1624 . -1081) (undo-tree-id1625 . -1081) (undo-tree-id1626 . -1081) (undo-tree-id1627 . -1081) (undo-tree-id1628 . -1081) (undo-tree-id1629 . -1081) (undo-tree-id1630 . -1081) (undo-tree-id1631 . -1081) (undo-tree-id1632 . -1081) (undo-tree-id1633 . -1081) (undo-tree-id1634 . -1081) (undo-tree-id1635 . -1081) (undo-tree-id1636 . -1081) (undo-tree-id1637 . -1081) (undo-tree-id1638 . -1081) (undo-tree-id1639 . -1081) (undo-tree-id1640 . -1081) (undo-tree-id1641 . -1081) (undo-tree-id1642 . -1081) (undo-tree-id1643 . -1081) (undo-tree-id1644 . -1081) (undo-tree-id1645 . -1081) (undo-tree-id1646 . -1081) (undo-tree-id1647 . -1081) (undo-tree-id1648 . -1081) (undo-tree-id1649 . -1081) (undo-tree-id1650 . -1081) (undo-tree-id1651 . -1081) (undo-tree-id1652 . -1081) (undo-tree-id1653 . -1081) (undo-tree-id1654 . -1081) (undo-tree-id1655 . -1081) (undo-tree-id1656 . -1081) (undo-tree-id1657 . -1081) (undo-tree-id1658 . -1081) (undo-tree-id1659 . -1081) (undo-tree-id1660 . -1081) (undo-tree-id1661 . -1081) (undo-tree-id1662 . -1081) (undo-tree-id1663 . -1081) (undo-tree-id1664 . -1081) (undo-tree-id1665 . -1081) (undo-tree-id1666 . -1081) (undo-tree-id1667 . -1081) (undo-tree-id1668 . -1081) (undo-tree-id1669 . -1081) (undo-tree-id1670 . -1081) (undo-tree-id1671 . -1081) (undo-tree-id1672 . -1081) (undo-tree-id1673 . -1081) (undo-tree-id1674 . -1081) (undo-tree-id1675 . -1081) (undo-tree-id1676 . -1081) (undo-tree-id1677 . -1081) (undo-tree-id1678 . -1081) (undo-tree-id1679 . -1081) (undo-tree-id1680 . -1081) (undo-tree-id1681 . -1081) (undo-tree-id1682 . -1081) (undo-tree-id1683 . -1081) (undo-tree-id1684 . -1081) (undo-tree-id1685 . -1081) (undo-tree-id1686 . -1081) (undo-tree-id1687 . -1081) (undo-tree-id1688 . -1081) (undo-tree-id1689 . -1081) (undo-tree-id1690 . -1081) (undo-tree-id1691 . -1081) (undo-tree-id1692 . -1081) (undo-tree-id1693 . -1081) (undo-tree-id1694 . -1081) (undo-tree-id1695 . -1081) (undo-tree-id1696 . -1081) (undo-tree-id1697 . -1081) (undo-tree-id1698 . -1081) (undo-tree-id1699 . -1081) (undo-tree-id1700 . -1081) (undo-tree-id1701 . -1081) (undo-tree-id1702 . -1081) (undo-tree-id1703 . -1081) (undo-tree-id1704 . -1081) (undo-tree-id1705 . -1081) (undo-tree-id1706 . -1081) (undo-tree-id1707 . -1081) (undo-tree-id1708 . -1081) (undo-tree-id1709 . -1081) (undo-tree-id1710 . -1081) (undo-tree-id1711 . -1081) (undo-tree-id1712 . -1081) (undo-tree-id1713 . -1081) (undo-tree-id1714 . -1081) (undo-tree-id1715 . -1081) (undo-tree-id1716 . -1081) (undo-tree-id1717 . -1081) (undo-tree-id1718 . -1081) (undo-tree-id1719 . -1081) (undo-tree-id1720 . -1081) (undo-tree-id1721 . -1081) (undo-tree-id1722 . -1081) (undo-tree-id1723 . -1081) (undo-tree-id1724 . -1081) (undo-tree-id1725 . -1081) (undo-tree-id1726 . -1081) (undo-tree-id1727 . -1081) (undo-tree-id1728 . -1081) (undo-tree-id1729 . -1081) (undo-tree-id1730 . -1081) (undo-tree-id1731 . -1081) (undo-tree-id1732 . -1081) (undo-tree-id1733 . -1081) (undo-tree-id1734 . -1081) (undo-tree-id1735 . -1081) (undo-tree-id1736 . -1081) (undo-tree-id1737 . -1081) (undo-tree-id1738 . -1081) (undo-tree-id1739 . -1081) (undo-tree-id1740 . -1081) (undo-tree-id1741 . -1081) (undo-tree-id1742 . -1081) (undo-tree-id1743 . -1081) (undo-tree-id1744 . -1081) (undo-tree-id1745 . -1081) (undo-tree-id1746 . -1081) (undo-tree-id1747 . -1081) (undo-tree-id1748 . -1081) (undo-tree-id1749 . -1081) (undo-tree-id1750 . -1081) (undo-tree-id1751 . -1081) (undo-tree-id1752 . -1081) (undo-tree-id1753 . -1081) (undo-tree-id1754 . -1081) (undo-tree-id1755 . -1081) (undo-tree-id1756 . -1081) (undo-tree-id1757 . -1081) (undo-tree-id1758 . -1081) (undo-tree-id1759 . -1081) (undo-tree-id1760 . -1081) (undo-tree-id1761 . -1081) (undo-tree-id1762 . -1081) (undo-tree-id1763 . -1081) (undo-tree-id1764 . -1081) (undo-tree-id1765 . -1081) (undo-tree-id1766 . -1081) (undo-tree-id1767 . -1081) (undo-tree-id1768 . -1081) (undo-tree-id1769 . -1081) (undo-tree-id1770 . -1081) (undo-tree-id1771 . -1081) (undo-tree-id1772 . -1081) (undo-tree-id1773 . -1081) (undo-tree-id1774 . -1081) (undo-tree-id1775 . -1081) (undo-tree-id1776 . -1081) (undo-tree-id1777 . -1081) (undo-tree-id1778 . -1081) (undo-tree-id1779 . -1081) (undo-tree-id1780 . -1081) (undo-tree-id1781 . -1081) (undo-tree-id1782 . -1081) (undo-tree-id1783 . -1081) (undo-tree-id1784 . -1081) (undo-tree-id1785 . -1081) (undo-tree-id1786 . -1081) (undo-tree-id1787 . -1081) (undo-tree-id1788 . -1081) (undo-tree-id1789 . -1081) (undo-tree-id1790 . -1081) (undo-tree-id1791 . -1081) (undo-tree-id1792 . -1081) (undo-tree-id1793 . -1081) (undo-tree-id1794 . -1081) (undo-tree-id1795 . -1081) (undo-tree-id1796 . -1081) (undo-tree-id1797 . -1081) (undo-tree-id1798 . -1081) (undo-tree-id1799 . -1081) (undo-tree-id1800 . -1081) (undo-tree-id1801 . -1021) (undo-tree-id1802 . -1021) (undo-tree-id1803 . -1021) (undo-tree-id1804 . -1021) (undo-tree-id1805 . -1021) (undo-tree-id1806 . -1021) (undo-tree-id1807 . -1021) (undo-tree-id1808 . -1021) (undo-tree-id1809 . -1021) (undo-tree-id1810 . -1021) (undo-tree-id1811 . -1021) (undo-tree-id1812 . -1021) (undo-tree-id1813 . -1021) (undo-tree-id1814 . -1021) (undo-tree-id1815 . -1021) (undo-tree-id1816 . -1021) (undo-tree-id1817 . -1021) (undo-tree-id1818 . -1021) (undo-tree-id1819 . -1021) (undo-tree-id1820 . -1021) (undo-tree-id1821 . -1021) (undo-tree-id1822 . -958) (undo-tree-id1823 . -958) (undo-tree-id1824 . -958) (undo-tree-id1825 . -958) (undo-tree-id1826 . -958) (undo-tree-id1827 . -958) (undo-tree-id1828 . -958) (undo-tree-id1829 . -958) (undo-tree-id1830 . -958) (undo-tree-id1831 . -958) (undo-tree-id1832 . -958) (undo-tree-id1833 . -958) (undo-tree-id1834 . -958) (undo-tree-id1835 . -958) (undo-tree-id1836 . -958) (undo-tree-id1837 . -958) (undo-tree-id1838 . -993) (undo-tree-id1839 . -993) (undo-tree-id1840 . -993) (undo-tree-id1841 . -993) (undo-tree-id1842 . -993) (undo-tree-id1843 . -993) (undo-tree-id1844 . -993) (undo-tree-id1845 . -993) (undo-tree-id1846 . -993) (undo-tree-id1847 . -993) (undo-tree-id1848 . -993) (undo-tree-id1849 . -993) (undo-tree-id1850 . -993) (undo-tree-id1851 . -993) (undo-tree-id1852 . -993) (undo-tree-id1853 . -993) (undo-tree-id1854 . -998) (undo-tree-id1855 . -998) (undo-tree-id1856 . -998) (undo-tree-id1857 . -998) (undo-tree-id1858 . -998) (undo-tree-id1859 . -998) (undo-tree-id1860 . -998) (undo-tree-id1861 . -998) (undo-tree-id1862 . -998) (undo-tree-id1863 . -998) (undo-tree-id1864 . -998) (undo-tree-id1865 . -998) (undo-tree-id1866 . -998) (undo-tree-id1867 . -998) (undo-tree-id1868 . -998) (undo-tree-id1869 . -998) (undo-tree-id1870 . -1004) (undo-tree-id1871 . -1004) (undo-tree-id1872 . -1004) (undo-tree-id1873 . -1004) (undo-tree-id1874 . -1004) (undo-tree-id1875 . -1004) (undo-tree-id1876 . -1004) (undo-tree-id1877 . -1004) (undo-tree-id1878 . -1004) (undo-tree-id1879 . -1004) (undo-tree-id1880 . -1004) (undo-tree-id1881 . -1004) (undo-tree-id1882 . -1004) (undo-tree-id1883 . -1004) (undo-tree-id1884 . -1004) (undo-tree-id1885 . -1004) (undo-tree-id1886 . -1004) (undo-tree-id1887 . -1004) (undo-tree-id1888 . -1004) (undo-tree-id1889 . -1004) (undo-tree-id1890 . -1004) (undo-tree-id1891 . -1064) (undo-tree-id1892 . -1064) (undo-tree-id1893 . -1064) (undo-tree-id1894 . -1064) (undo-tree-id1895 . -1064) (undo-tree-id1896 . -1064) (undo-tree-id1897 . -1064) (undo-tree-id1898 . -1064) (undo-tree-id1899 . -1064) (undo-tree-id1900 . -1064) (undo-tree-id1901 . -1064) (undo-tree-id1902 . -1064) (undo-tree-id1903 . -1064) (undo-tree-id1904 . -1064) (undo-tree-id1905 . -1064) (undo-tree-id1906 . -1064) (undo-tree-id1907 . 10) (undo-tree-id1908 . -1074) (undo-tree-id1909 . -1071) (undo-tree-id1910 . -1071) (undo-tree-id1911 . -1071) (undo-tree-id1912 . -1071) (undo-tree-id1913 . -1071) (undo-tree-id1914 . -1071) (undo-tree-id1915 . -1071) (undo-tree-id1916 . -1071) (undo-tree-id1917 . -1071) (undo-tree-id1918 . -1071) (undo-tree-id1919 . -1071) (undo-tree-id1920 . -1071) (undo-tree-id1921 . -1071) (undo-tree-id1922 . -1071) (undo-tree-id1923 . -1071) (undo-tree-id1924 . -1071) (undo-tree-id1925 . -1075) (undo-tree-id1926 . -1075) (undo-tree-id1927 . -1075) (undo-tree-id1928 . -1075) (undo-tree-id1929 . -1075) (undo-tree-id1930 . -1075) (undo-tree-id1931 . -1075) (undo-tree-id1932 . -1075) (undo-tree-id1933 . -1075) (undo-tree-id1934 . -1075) (undo-tree-id1935 . -1075) (undo-tree-id1936 . -1075) (undo-tree-id1937 . -1075) (undo-tree-id1938 . -1075) (undo-tree-id1939 . -1075) (undo-tree-id1940 . -1075) (undo-tree-id1941 . -1080) (undo-tree-id1942 . -1080) (undo-tree-id1943 . -1080) (undo-tree-id1944 . -1080) (undo-tree-id1945 . -1080) (undo-tree-id1946 . -1080) (undo-tree-id1947 . -1080) (undo-tree-id1948 . -1080) (undo-tree-id1949 . -1080) (undo-tree-id1950 . -1080) (undo-tree-id1951 . -1080) (undo-tree-id1952 . -1080) (undo-tree-id1953 . -1080) (undo-tree-id1954 . -1080) (undo-tree-id1955 . -1080) (undo-tree-id1956 . -1080) (undo-tree-id1957 . -1081) (undo-tree-id1958 . -1081) (undo-tree-id1959 . -1081) (undo-tree-id1960 . -1081) (undo-tree-id1961 . -1081) (undo-tree-id1962 . -1081) (undo-tree-id1963 . -1081) (undo-tree-id1964 . -1081) (undo-tree-id1965 . -1081) (undo-tree-id1966 . -1081) (undo-tree-id1967 . -1081) (undo-tree-id1968 . -1081) (undo-tree-id1969 . -1081) (undo-tree-id1970 . -1081) (undo-tree-id1971 . -1081) (undo-tree-id1972 . -1081) (undo-tree-id1973 . -1081) (undo-tree-id1974 . -1081) (undo-tree-id1975 . -1081) (undo-tree-id1976 . -1081) (undo-tree-id1977 . -1081) (undo-tree-id1978 . -1081) (undo-tree-id1979 . -1081) (undo-tree-id1980 . -1081) (undo-tree-id1981 . -1081) (undo-tree-id1982 . -1081) (undo-tree-id1983 . -1081) (undo-tree-id1984 . -1081) (undo-tree-id1985 . -1081) (undo-tree-id1986 . -1081) (undo-tree-id1987 . -1081) (undo-tree-id1988 . -1081) (undo-tree-id1989 . -1081) (undo-tree-id1990 . -1081) (undo-tree-id1991 . -1081) (undo-tree-id1992 . -1081) (undo-tree-id1993 . -1081) (undo-tree-id1994 . -1081) (undo-tree-id1995 . -1081) (undo-tree-id1996 . -1081) (undo-tree-id1997 . -1081) (undo-tree-id1998 . -1081) (undo-tree-id1999 . -1081) (undo-tree-id2000 . -1081) (undo-tree-id2001 . -1081) (undo-tree-id2002 . -928) (83 . 1011) (#("  Transformers have revolutionized natural language processing and have been at the forefront of many impressive applications ranging from automated language translation (https://ai.googleblog. com/2020/06/recent-advances-in-google-translate.html) and modeling fundamental properties of protein sequences (https://www.pnas.org/content/118/15/e2016239118.short) to creating an AI that helps people write code (https://github.blog/2021-06-29-introducing-github-copilot- ai-pair-programmer). In this chapter, you will learn about the basic mechanisms of attention and self-attention and see how they are used in the original transformer architecture. Then, equipped with an understanding of how transformers work, we will explore some of the most influential NLP models that emerged from this architecture and learn how to use a large-scale language model, the so-called BERT model, in PyTorch. We will cover the following topics:" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 1 2 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 2 42 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 42 96 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 96 97 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 97 122 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 122 171 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 171 191 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://ai.googleblog" htmlize-link (:uri "https://ai.googleblog") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 191 192 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://ai.googleblog" htmlize-link (:uri "https://ai.googleblog") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 192 193 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 193 194 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 194 283 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 283 284 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 284 295 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 295 296 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 296 297 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 297 304 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 304 305 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 305 306 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 306 314 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 314 319 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 319 322 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 322 326 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 326 328 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 328 329 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 329 336 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 336 344 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 344 345 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 345 346 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 346 347 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 347 358 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 358 359 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 359 366 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 366 375 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 375 376 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 376 378 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 378 409 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 409 452 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://github.blog/2021-06-29-introducing-github-copilot" htmlize-link (:uri "https://github.blog/2021-06-29-introducing-github-copilot") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 452 465 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://github.blog/2021-06-29-introducing-github-copilot" htmlize-link (:uri "https://github.blog/2021-06-29-introducing-github-copilot") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 465 466 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://github.blog/2021-06-29-introducing-github-copilot" htmlize-link (:uri "https://github.blog/2021-06-29-introducing-github-copilot") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 466 467 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 467 468 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 468 488 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 488 489 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 489 591 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 591 592 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 592 597 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 597 691 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 691 692 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 692 789 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 789 790 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 790 891 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 891 892 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 892 927 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 236) (undo-tree-id2003 . -2) (undo-tree-id2004 . -2) (undo-tree-id2005 . -1) (undo-tree-id2006 . 926) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -2) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -2) (undo-tree-id2059 . -2) (undo-tree-id2060 . -2) (undo-tree-id2061 . -2) (undo-tree-id2062 . -2) (undo-tree-id2063 . -2) (undo-tree-id2064 . -2) (undo-tree-id2065 . -2) (undo-tree-id2066 . -2) (undo-tree-id2067 . -2) (undo-tree-id2068 . -2) (undo-tree-id2069 . -2) (undo-tree-id2070 . -2) (undo-tree-id2071 . -2) (undo-tree-id2072 . -2) (undo-tree-id2073 . -2) (undo-tree-id2074 . -2) (undo-tree-id2075 . -2) (undo-tree-id2076 . -2) (undo-tree-id2077 . -2) (undo-tree-id2078 . -2) (undo-tree-id2079 . -2) (undo-tree-id2080 . -2) (undo-tree-id2081 . -2) (undo-tree-id2082 . -2) (undo-tree-id2083 . -2) (undo-tree-id2084 . -2) (undo-tree-id2085 . -2) (undo-tree-id2086 . -2) (undo-tree-id2087 . -2) (undo-tree-id2088 . -2) (undo-tree-id2089 . -2) (undo-tree-id2090 . -2) (undo-tree-id2091 . -2) (undo-tree-id2092 . -2) (undo-tree-id2093 . -2) (undo-tree-id2094 . -2) (undo-tree-id2095 . -2) (undo-tree-id2096 . -2) (undo-tree-id2097 . -2) (undo-tree-id2098 . -2) (undo-tree-id2099 . -2) (undo-tree-id2100 . -2) (undo-tree-id2101 . -2) (undo-tree-id2102 . -2) (undo-tree-id2103 . -2) (undo-tree-id2104 . -2) (undo-tree-id2105 . -2) (undo-tree-id2106 . -2) (undo-tree-id2107 . -2) (undo-tree-id2108 . -2) (undo-tree-id2109 . -2) (undo-tree-id2110 . -2) (undo-tree-id2111 . -2) (undo-tree-id2112 . -2) (undo-tree-id2113 . -2) (undo-tree-id2114 . -2) (undo-tree-id2115 . -2) (undo-tree-id2116 . -2) (undo-tree-id2117 . -2) (undo-tree-id2118 . -2) (undo-tree-id2119 . -2) (undo-tree-id2120 . -2) (undo-tree-id2121 . -2) (undo-tree-id2122 . -2) (undo-tree-id2123 . -2) (undo-tree-id2124 . -2) (undo-tree-id2125 . -2) (undo-tree-id2126 . -2) (undo-tree-id2127 . -2) (undo-tree-id2128 . -2) (undo-tree-id2129 . -2) (undo-tree-id2130 . -2) (undo-tree-id2131 . -2) (undo-tree-id2132 . -2) (undo-tree-id2133 . -2) (undo-tree-id2134 . -2) (undo-tree-id2135 . -2) (undo-tree-id2136 . -2) (undo-tree-id2137 . -2) (undo-tree-id2138 . -2) (undo-tree-id2139 . -2) (undo-tree-id2140 . -2) (undo-tree-id2141 . -2) (undo-tree-id2142 . -2) (undo-tree-id2143 . -2) (undo-tree-id2144 . -2) (undo-tree-id2145 . -2) (undo-tree-id2146 . -2) (undo-tree-id2147 . -2) (undo-tree-id2148 . -2) (undo-tree-id2149 . -2) (undo-tree-id2150 . -2) (undo-tree-id2151 . -2) (undo-tree-id2152 . -2) (undo-tree-id2153 . -2) (undo-tree-id2154 . -2) (undo-tree-id2155 . -2) (undo-tree-id2156 . -2) (undo-tree-id2157 . -2) (undo-tree-id2158 . -2) (undo-tree-id2159 . -2) (undo-tree-id2160 . -2) (undo-tree-id2161 . -2) (undo-tree-id2162 . -2) (undo-tree-id2163 . -2) (undo-tree-id2164 . -2) (undo-tree-id2165 . -2) (undo-tree-id2166 . -2) (undo-tree-id2167 . -2) (undo-tree-id2168 . -2) (undo-tree-id2169 . -2) (undo-tree-id2170 . -2) (undo-tree-id2171 . -2) (undo-tree-id2172 . -2) (undo-tree-id2173 . -2) (undo-tree-id2174 . -2) (undo-tree-id2175 . -2) (undo-tree-id2176 . -2) (undo-tree-id2177 . -2) (undo-tree-id2178 . -2) (undo-tree-id2179 . -2) (undo-tree-id2180 . -2) (undo-tree-id2181 . -2) (undo-tree-id2182 . -2) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -2) (undo-tree-id2200 . -2) (undo-tree-id2201 . -2) (undo-tree-id2202 . -2) (undo-tree-id2203 . -2) (undo-tree-id2204 . -2) (undo-tree-id2205 . -2) (undo-tree-id2206 . -2) (undo-tree-id2207 . -2) (undo-tree-id2208 . -2) (undo-tree-id2209 . -2) (undo-tree-id2210 . -2) (undo-tree-id2211 . -2) (undo-tree-id2212 . -2) (undo-tree-id2213 . -2) (undo-tree-id2214 . -2) (undo-tree-id2215 . -2) (undo-tree-id2216 . -2) (undo-tree-id2217 . -2) (undo-tree-id2218 . -2) (undo-tree-id2219 . -2) (undo-tree-id2220 . -2) (undo-tree-id2221 . -2) (undo-tree-id2222 . -2) (undo-tree-id2223 . -2) (undo-tree-id2224 . -2) (undo-tree-id2225 . -2) (undo-tree-id2226 . -2) (undo-tree-id2227 . -2) (undo-tree-id2228 . -2) (undo-tree-id2229 . -2) (undo-tree-id2230 . -2) (undo-tree-id2231 . -2) (undo-tree-id2232 . -2) (undo-tree-id2233 . -2) (undo-tree-id2234 . -2) (undo-tree-id2235 . -2) (undo-tree-id2236 . -2) (undo-tree-id2237 . -2) (undo-tree-id2238 . -2) (undo-tree-id2239 . -2) (undo-tree-id2240 . -2) (undo-tree-id2241 . -2) (undo-tree-id2242 . -2) (undo-tree-id2243 . -2) 238) nil (25774 24462 476646 725000) 0 nil])
([nil nil ((#("Transformers have revolutionized natural language processing and have been at the forefront of many impressive applications ranging from automated language translation (https://ai.googleblog. com/2020/06/recent-advances-in-google-translate.html) and modeling fundamental properties of protein sequences (https://www.pnas.org/content/118/15/e2016239118.short) to creating an AI that helps people write code (https://github.blog/2021-06-29-introducing-github-copilot- ai-pair-programmer). " 0 40 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 40 94 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 94 95 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 95 120 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 120 169 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 169 189 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://ai.googleblog" htmlize-link (:uri "https://ai.googleblog") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 189 190 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://ai.googleblog" htmlize-link (:uri "https://ai.googleblog") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 190 191 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 191 192 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 192 281 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 281 282 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 282 293 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 293 294 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 294 295 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 295 302 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 302 303 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 303 304 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 304 312 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 312 317 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 317 320 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 320 324 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 324 326 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 326 327 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 327 334 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 334 342 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 342 343 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 343 344 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 344 345 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 345 356 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 356 357 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://www.pnas.org/content/118/15/e2016239118.short" htmlize-link (:uri "https://www.pnas.org/content/118/15/e2016239118.short") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 357 364 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 364 373 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 373 374 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 374 376 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 376 407 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 407 450 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://github.blog/2021-06-29-introducing-github-copilot" htmlize-link (:uri "https://github.blog/2021-06-29-introducing-github-copilot") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 450 463 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t help-echo "LINK: https://github.blog/2021-06-29-introducing-github-copilot" htmlize-link (:uri "https://github.blog/2021-06-29-introducing-github-copilot") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 463 464 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://github.blog/2021-06-29-introducing-github-copilot" htmlize-link (:uri "https://github.blog/2021-06-29-introducing-github-copilot") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 464 465 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 465 466 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 466 486 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 486 487 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . 239) (undo-tree-id2250 . 487) (undo-tree-id2251 . -486) (undo-tree-id2252 . -486) (undo-tree-id2253 . -486) (undo-tree-id2254 . -486) (undo-tree-id2255 . -487) (undo-tree-id2256 . -486) (undo-tree-id2257 . -65) (undo-tree-id2258 . -65) (undo-tree-id2259 . -65) (undo-tree-id2260 . -65) (undo-tree-id2261 . -65) (undo-tree-id2262 . -65) (undo-tree-id2263 . -65) (undo-tree-id2264 . -65) (undo-tree-id2265 . -65) (undo-tree-id2266 . -65) (undo-tree-id2267 . -65) (undo-tree-id2268 . -65) (undo-tree-id2269 . -65) (undo-tree-id2270 . -65) (undo-tree-id2271 . -65) (undo-tree-id2272 . -65) (undo-tree-id2273 . -65) (undo-tree-id2274 . -65) (undo-tree-id2275 . -65) (undo-tree-id2276 . -65) (undo-tree-id2277 . -65) (undo-tree-id2278 . -124) (undo-tree-id2279 . -124) (undo-tree-id2280 . -124) (undo-tree-id2281 . -124) (undo-tree-id2282 . -124) (undo-tree-id2283 . -124) (undo-tree-id2284 . -124) (undo-tree-id2285 . -124) (undo-tree-id2286 . -124) (undo-tree-id2287 . -124) (undo-tree-id2288 . -124) (undo-tree-id2289 . -124) (undo-tree-id2290 . -124) (undo-tree-id2291 . -124) (undo-tree-id2292 . -124) (undo-tree-id2293 . -124) (undo-tree-id2294 . -124) (undo-tree-id2295 . -124) (undo-tree-id2296 . -124) (undo-tree-id2297 . -124) (undo-tree-id2298 . -124) (undo-tree-id2299 . -168) (undo-tree-id2300 . -168) (undo-tree-id2301 . -168) (undo-tree-id2302 . -168) (undo-tree-id2303 . -168) (undo-tree-id2304 . -168) (undo-tree-id2305 . -168) (undo-tree-id2306 . -168) (undo-tree-id2307 . -168) (undo-tree-id2308 . -168) (undo-tree-id2309 . -168) (undo-tree-id2310 . -168) (undo-tree-id2311 . -168) (undo-tree-id2312 . -168) (undo-tree-id2313 . -168) (undo-tree-id2314 . -168) (undo-tree-id2315 . -168) (undo-tree-id2316 . -168) (undo-tree-id2317 . -168) (undo-tree-id2318 . -168) (undo-tree-id2319 . -168) (undo-tree-id2320 . -168) (undo-tree-id2321 . -168) (undo-tree-id2322 . -168) (undo-tree-id2323 . -168) (undo-tree-id2324 . -168) (undo-tree-id2325 . -192) (undo-tree-id2326 . -192) (undo-tree-id2327 . -192) (undo-tree-id2328 . -192) (undo-tree-id2329 . -192) (undo-tree-id2330 . -192) (undo-tree-id2331 . -192) (undo-tree-id2332 . -192) (undo-tree-id2333 . -192) (undo-tree-id2334 . -192) (undo-tree-id2335 . -192) (undo-tree-id2336 . -192) (undo-tree-id2337 . -192) (undo-tree-id2338 . -192) (undo-tree-id2339 . -192) (undo-tree-id2340 . -192) (undo-tree-id2341 . -192) (undo-tree-id2342 . -192) (undo-tree-id2343 . -192) (undo-tree-id2344 . -192) (undo-tree-id2345 . -192) (undo-tree-id2346 . -194) (undo-tree-id2347 . -194) (undo-tree-id2348 . -194) (undo-tree-id2349 . -194) (undo-tree-id2350 . -194) (undo-tree-id2351 . -194) (undo-tree-id2352 . -194) (undo-tree-id2353 . -194) (undo-tree-id2354 . -194) (undo-tree-id2355 . -194) (undo-tree-id2356 . -194) (undo-tree-id2357 . -194) (undo-tree-id2358 . -194) (undo-tree-id2359 . -194) (undo-tree-id2360 . -194) (undo-tree-id2361 . -194) (undo-tree-id2362 . -194) (undo-tree-id2363 . -194) (undo-tree-id2364 . -194) (undo-tree-id2365 . -194) (undo-tree-id2366 . -194) (undo-tree-id2367 . -194) (undo-tree-id2368 . -194) (undo-tree-id2369 . -194) (undo-tree-id2370 . -194) (undo-tree-id2371 . -194) (undo-tree-id2372 . -194) (undo-tree-id2373 . -194) (undo-tree-id2374 . -194) (undo-tree-id2375 . -194) (undo-tree-id2376 . -194) (undo-tree-id2377 . -195) (undo-tree-id2378 . -195) (undo-tree-id2379 . -195) (undo-tree-id2380 . -195) (undo-tree-id2381 . -195) (undo-tree-id2382 . -195) (undo-tree-id2383 . -195) (undo-tree-id2384 . -195) (undo-tree-id2385 . -195) (undo-tree-id2386 . -195) (undo-tree-id2387 . -195) (undo-tree-id2388 . -195) (undo-tree-id2389 . -195) (undo-tree-id2390 . -195) (undo-tree-id2391 . -195) (undo-tree-id2392 . -195) (undo-tree-id2393 . -195) (undo-tree-id2394 . -195) (undo-tree-id2395 . -195) (undo-tree-id2396 . -195) (undo-tree-id2397 . -195) (undo-tree-id2398 . -199) (undo-tree-id2399 . -199) (undo-tree-id2400 . -199) (undo-tree-id2401 . -199) (undo-tree-id2402 . -199) (undo-tree-id2403 . -199) (undo-tree-id2404 . -199) (undo-tree-id2405 . -199) (undo-tree-id2406 . -199) (undo-tree-id2407 . -199) (undo-tree-id2408 . -199) (undo-tree-id2409 . -199) (undo-tree-id2410 . -199) (undo-tree-id2411 . -199) (undo-tree-id2412 . -199) (undo-tree-id2413 . -199) (undo-tree-id2414 . -199) (undo-tree-id2415 . -199) (undo-tree-id2416 . -199) (undo-tree-id2417 . -199) (undo-tree-id2418 . -199) (undo-tree-id2419 . -199) (undo-tree-id2420 . -199) (undo-tree-id2421 . -199) (undo-tree-id2422 . -199) (undo-tree-id2423 . -199) (undo-tree-id2424 . -199) (undo-tree-id2425 . -199) (undo-tree-id2426 . -199) (undo-tree-id2427 . -199) (undo-tree-id2428 . -199) (undo-tree-id2429 . -200) (undo-tree-id2430 . -200) (undo-tree-id2431 . -200) (undo-tree-id2432 . -200) (undo-tree-id2433 . -200) (undo-tree-id2434 . -200) (undo-tree-id2435 . -200) (undo-tree-id2436 . -200) (undo-tree-id2437 . -200) (undo-tree-id2438 . -200) (undo-tree-id2439 . -200) (undo-tree-id2440 . -200) (undo-tree-id2441 . -200) (undo-tree-id2442 . -200) (undo-tree-id2443 . -200) (undo-tree-id2444 . -200) (undo-tree-id2445 . -200) (undo-tree-id2446 . -200) (undo-tree-id2447 . -200) (undo-tree-id2448 . -200) (undo-tree-id2449 . -200) (undo-tree-id2450 . -200) (undo-tree-id2451 . -200) (undo-tree-id2452 . -200) (undo-tree-id2453 . -200) (undo-tree-id2454 . -200) (undo-tree-id2455 . -202) (undo-tree-id2456 . -202) (undo-tree-id2457 . -202) (undo-tree-id2458 . -202) (undo-tree-id2459 . -202) (undo-tree-id2460 . -202) (undo-tree-id2461 . -202) (undo-tree-id2462 . -202) (undo-tree-id2463 . -202) (undo-tree-id2464 . -202) (undo-tree-id2465 . -202) (undo-tree-id2466 . -203) (undo-tree-id2467 . -203) (undo-tree-id2468 . -203) (undo-tree-id2469 . -203) (undo-tree-id2470 . -203) (undo-tree-id2471 . -203) (undo-tree-id2472 . -203) (undo-tree-id2473 . -203) (undo-tree-id2474 . -203) (undo-tree-id2475 . -203) (undo-tree-id2476 . -203) (undo-tree-id2477 . -209) (undo-tree-id2478 . -209) (undo-tree-id2479 . -209) (undo-tree-id2480 . -209) (undo-tree-id2481 . -209) (undo-tree-id2482 . -209) (undo-tree-id2483 . -209) (undo-tree-id2484 . -209) (undo-tree-id2485 . -209) (undo-tree-id2486 . -209) (undo-tree-id2487 . -209) (undo-tree-id2488 . -210) (undo-tree-id2489 . -210) (undo-tree-id2490 . -210) (undo-tree-id2491 . -210) (undo-tree-id2492 . -210) (undo-tree-id2493 . -210) (undo-tree-id2494 . -210) (undo-tree-id2495 . -210) (undo-tree-id2496 . -210) (undo-tree-id2497 . -210) (undo-tree-id2498 . -210) (undo-tree-id2499 . -218) (undo-tree-id2500 . -218) (undo-tree-id2501 . -218) (undo-tree-id2502 . -218) (undo-tree-id2503 . -218) (undo-tree-id2504 . -218) (undo-tree-id2505 . -218) (undo-tree-id2506 . -218) (undo-tree-id2507 . -218) (undo-tree-id2508 . -218) (undo-tree-id2509 . -218) (undo-tree-id2510 . -219) (undo-tree-id2511 . -219) (undo-tree-id2512 . -219) (undo-tree-id2513 . -219) (undo-tree-id2514 . -219) (undo-tree-id2515 . -219) (undo-tree-id2516 . -219) (undo-tree-id2517 . -219) (undo-tree-id2518 . -219) (undo-tree-id2519 . -219) (undo-tree-id2520 . -219) (undo-tree-id2521 . -221) (undo-tree-id2522 . -221) (undo-tree-id2523 . -221) (undo-tree-id2524 . -221) (undo-tree-id2525 . -221) (undo-tree-id2526 . -221) (undo-tree-id2527 . -221) (undo-tree-id2528 . -221) (undo-tree-id2529 . -221) (undo-tree-id2530 . -221) (undo-tree-id2531 . -221) (undo-tree-id2532 . -222) (undo-tree-id2533 . -222) (undo-tree-id2534 . -222) (undo-tree-id2535 . -222) (undo-tree-id2536 . -222) (undo-tree-id2537 . -222) (undo-tree-id2538 . -222) (undo-tree-id2539 . -222) (undo-tree-id2540 . -222) (undo-tree-id2541 . -222) (undo-tree-id2542 . -222) (undo-tree-id2543 . -228) (undo-tree-id2544 . -228) (undo-tree-id2545 . -228) (undo-tree-id2546 . -228) (undo-tree-id2547 . -228) (undo-tree-id2548 . -228) (undo-tree-id2549 . -228) (undo-tree-id2550 . -228) (undo-tree-id2551 . -228) (undo-tree-id2552 . -228) (undo-tree-id2553 . -228) (undo-tree-id2554 . -229) (undo-tree-id2555 . -229) (undo-tree-id2556 . -229) (undo-tree-id2557 . -229) (undo-tree-id2558 . -229) (undo-tree-id2559 . -229) (undo-tree-id2560 . -229) (undo-tree-id2561 . -229) (undo-tree-id2562 . -229) (undo-tree-id2563 . -229) (undo-tree-id2564 . -229) (undo-tree-id2565 . -238) (undo-tree-id2566 . -238) (undo-tree-id2567 . -238) (undo-tree-id2568 . -238) (undo-tree-id2569 . -238) (undo-tree-id2570 . -238) (undo-tree-id2571 . -238) (undo-tree-id2572 . -238) (undo-tree-id2573 . -238) (undo-tree-id2574 . -238) (undo-tree-id2575 . -238) (undo-tree-id2576 . -239) (undo-tree-id2577 . -239) (undo-tree-id2578 . -239) (undo-tree-id2579 . -239) (undo-tree-id2580 . -239) (undo-tree-id2581 . -239) (undo-tree-id2582 . -239) (undo-tree-id2583 . -239) (undo-tree-id2584 . -239) (undo-tree-id2585 . -239) (undo-tree-id2586 . -239) (undo-tree-id2587 . 247) (undo-tree-id2588 . -244) (undo-tree-id2589 . -243) (undo-tree-id2590 . -243) (undo-tree-id2591 . -243) (undo-tree-id2592 . -243) (undo-tree-id2593 . -243) (undo-tree-id2594 . -243) (undo-tree-id2595 . -243) (undo-tree-id2596 . -243) (undo-tree-id2597 . -243) (undo-tree-id2598 . -243) (undo-tree-id2599 . -243) (undo-tree-id2600 . -244) (undo-tree-id2601 . -244) (undo-tree-id2602 . -244) (undo-tree-id2603 . -244) (undo-tree-id2604 . -244) (undo-tree-id2605 . -244) (undo-tree-id2606 . -244) (undo-tree-id2607 . -244) (undo-tree-id2608 . -244) (undo-tree-id2609 . -244) (undo-tree-id2610 . -244) (undo-tree-id2611 . -248) (undo-tree-id2612 . -248) (undo-tree-id2613 . -248) (undo-tree-id2614 . -248) (undo-tree-id2615 . -248) (undo-tree-id2616 . -248) (undo-tree-id2617 . -248) (undo-tree-id2618 . -248) (undo-tree-id2619 . -248) (undo-tree-id2620 . -248) (undo-tree-id2621 . -248) (undo-tree-id2622 . -257) (undo-tree-id2623 . -257) (undo-tree-id2624 . -257) (undo-tree-id2625 . -257) (undo-tree-id2626 . -257) (undo-tree-id2627 . -257) (undo-tree-id2628 . -257) (undo-tree-id2629 . -257) (undo-tree-id2630 . -257) (undo-tree-id2631 . -257) (undo-tree-id2632 . -257) (undo-tree-id2633 . -257) (undo-tree-id2634 . -257) (undo-tree-id2635 . -257) (undo-tree-id2636 . -257) (undo-tree-id2637 . -257) (undo-tree-id2638 . -257) (undo-tree-id2639 . -257) (undo-tree-id2640 . -257) (undo-tree-id2641 . -257) (undo-tree-id2642 . -257) (undo-tree-id2643 . -257) (undo-tree-id2644 . -257) (undo-tree-id2645 . -257) (undo-tree-id2646 . -257) (undo-tree-id2647 . -257) (undo-tree-id2648 . -257) (undo-tree-id2649 . -257) (undo-tree-id2650 . -257) (undo-tree-id2651 . -257) (undo-tree-id2652 . -257) (undo-tree-id2653 . -257) (undo-tree-id2654 . -257) (undo-tree-id2655 . -257) (undo-tree-id2656 . -257) (undo-tree-id2657 . -257) (undo-tree-id2658 . -269) (undo-tree-id2659 . -269) (undo-tree-id2660 . -269) (undo-tree-id2661 . -269) (undo-tree-id2662 . -269) (undo-tree-id2663 . -269) (undo-tree-id2664 . -269) (undo-tree-id2665 . -269) (undo-tree-id2666 . -269) (undo-tree-id2667 . -269) (undo-tree-id2668 . -269) (undo-tree-id2669 . -269) (undo-tree-id2670 . -269) (undo-tree-id2671 . -269) (undo-tree-id2672 . -269) (undo-tree-id2673 . -269) (undo-tree-id2674 . -269) (undo-tree-id2675 . -269) (undo-tree-id2676 . -269) (undo-tree-id2677 . -269) (undo-tree-id2678 . -269) (undo-tree-id2679 . -269) (undo-tree-id2680 . -269) (undo-tree-id2681 . -269) (undo-tree-id2682 . -269) (undo-tree-id2683 . -269) (undo-tree-id2684 . -280) (undo-tree-id2685 . -280) (undo-tree-id2686 . -280) (undo-tree-id2687 . -280) (undo-tree-id2688 . -280) (undo-tree-id2689 . -280) (undo-tree-id2690 . -280) (undo-tree-id2691 . -280) (undo-tree-id2692 . -280) (undo-tree-id2693 . -280) (undo-tree-id2694 . -280) (undo-tree-id2695 . -280) (undo-tree-id2696 . -280) (undo-tree-id2697 . -280) (undo-tree-id2698 . -280) (undo-tree-id2699 . -280) (undo-tree-id2700 . -280) (undo-tree-id2701 . -280) (undo-tree-id2702 . -280) (undo-tree-id2703 . -280) (undo-tree-id2704 . -280) (undo-tree-id2705 . -283) (undo-tree-id2706 . -283) (undo-tree-id2707 . -283) (undo-tree-id2708 . -283) (undo-tree-id2709 . -283) (undo-tree-id2710 . -283) (undo-tree-id2711 . -283) (undo-tree-id2712 . -283) (undo-tree-id2713 . -283) (undo-tree-id2714 . -283) (undo-tree-id2715 . -283) (undo-tree-id2716 . -283) (undo-tree-id2717 . -283) (undo-tree-id2718 . -283) (undo-tree-id2719 . -283) (undo-tree-id2720 . -283) (undo-tree-id2721 . -283) (undo-tree-id2722 . -283) (undo-tree-id2723 . -283) (undo-tree-id2724 . -283) (undo-tree-id2725 . -283) (undo-tree-id2726 . -291) (undo-tree-id2727 . -291) (undo-tree-id2728 . -291) (undo-tree-id2729 . -291) (undo-tree-id2730 . -291) (undo-tree-id2731 . -291) (undo-tree-id2732 . -291) (undo-tree-id2733 . -291) (undo-tree-id2734 . -291) (undo-tree-id2735 . -291) (undo-tree-id2736 . -291) (undo-tree-id2737 . -291) (undo-tree-id2738 . -291) (undo-tree-id2739 . -291) (undo-tree-id2740 . -291) (undo-tree-id2741 . -291) (undo-tree-id2742 . -291) (undo-tree-id2743 . -291) (undo-tree-id2744 . -291) (undo-tree-id2745 . -291) (undo-tree-id2746 . -291) (undo-tree-id2747 . -301) (undo-tree-id2748 . -301) (undo-tree-id2749 . -301) (undo-tree-id2750 . -301) (undo-tree-id2751 . -301) (undo-tree-id2752 . -301) (undo-tree-id2753 . -301) (undo-tree-id2754 . -301) (undo-tree-id2755 . -301) (undo-tree-id2756 . -301) (undo-tree-id2757 . -301) (undo-tree-id2758 . -301) (undo-tree-id2759 . -301) (undo-tree-id2760 . -301) (undo-tree-id2761 . -301) (undo-tree-id2762 . -301) (undo-tree-id2763 . -301) (undo-tree-id2764 . -301) (undo-tree-id2765 . -301) (undo-tree-id2766 . -301) (undo-tree-id2767 . -301) (undo-tree-id2768 . -303) (undo-tree-id2769 . -303) (undo-tree-id2770 . -303) (undo-tree-id2771 . -303) (undo-tree-id2772 . -303) (undo-tree-id2773 . -303) (undo-tree-id2774 . -303) (undo-tree-id2775 . -303) (undo-tree-id2776 . -303) (undo-tree-id2777 . -303) (undo-tree-id2778 . -303) (undo-tree-id2779 . -303) (undo-tree-id2780 . -303) (undo-tree-id2781 . -303) (undo-tree-id2782 . -303) (undo-tree-id2783 . -303) (undo-tree-id2784 . -303) (undo-tree-id2785 . -303) (undo-tree-id2786 . -303) (undo-tree-id2787 . -303) (undo-tree-id2788 . -303) (undo-tree-id2789 . -308) (undo-tree-id2790 . -308) (undo-tree-id2791 . -308) (undo-tree-id2792 . -308) (undo-tree-id2793 . -308) (undo-tree-id2794 . -308) (undo-tree-id2795 . -308) (undo-tree-id2796 . -308) (undo-tree-id2797 . -308) (undo-tree-id2798 . -308) (undo-tree-id2799 . -308) (undo-tree-id2800 . -308) (undo-tree-id2801 . -308) (undo-tree-id2802 . -308) (undo-tree-id2803 . -308) (undo-tree-id2804 . -308) (undo-tree-id2805 . -308) (undo-tree-id2806 . -308) (undo-tree-id2807 . -308) (undo-tree-id2808 . -308) (undo-tree-id2809 . -308) (undo-tree-id2810 . -311) (undo-tree-id2811 . -311) (undo-tree-id2812 . -311) (undo-tree-id2813 . -311) (undo-tree-id2814 . -311) (undo-tree-id2815 . -311) (undo-tree-id2816 . -311) (undo-tree-id2817 . -311) (undo-tree-id2818 . -311) (undo-tree-id2819 . -311) (undo-tree-id2820 . -311) (undo-tree-id2821 . -311) (undo-tree-id2822 . -311) (undo-tree-id2823 . -311) (undo-tree-id2824 . -311) (undo-tree-id2825 . -311) (undo-tree-id2826 . -311) (undo-tree-id2827 . -311) (undo-tree-id2828 . -311) (undo-tree-id2829 . -311) (undo-tree-id2830 . -311) (undo-tree-id2831 . -311) (undo-tree-id2832 . -311) (undo-tree-id2833 . -311) (undo-tree-id2834 . -311) (undo-tree-id2835 . -311) (undo-tree-id2836 . -311) (undo-tree-id2837 . -311) (undo-tree-id2838 . -311) (undo-tree-id2839 . -311) (undo-tree-id2840 . -311) (undo-tree-id2841 . -311) (undo-tree-id2842 . -311) (undo-tree-id2843 . -311) (undo-tree-id2844 . -311) (undo-tree-id2845 . -311) (undo-tree-id2846 . -311) (undo-tree-id2847 . -311) (undo-tree-id2848 . -311) (undo-tree-id2849 . -311) (undo-tree-id2850 . -311) (undo-tree-id2851 . -370) (undo-tree-id2852 . -370) (undo-tree-id2853 . -370) (undo-tree-id2854 . -370) (undo-tree-id2855 . -370) (undo-tree-id2856 . -370) (undo-tree-id2857 . -370) (undo-tree-id2858 . -370) (undo-tree-id2859 . -370) (undo-tree-id2860 . -370) (undo-tree-id2861 . -370) (undo-tree-id2862 . -370) (undo-tree-id2863 . -370) (undo-tree-id2864 . -370) (undo-tree-id2865 . -370) (undo-tree-id2866 . -370) (undo-tree-id2867 . -370) (undo-tree-id2868 . -370) (undo-tree-id2869 . -370) (undo-tree-id2870 . -370) (undo-tree-id2871 . -370) (undo-tree-id2872 . -372) (undo-tree-id2873 . -372) (undo-tree-id2874 . -372) (undo-tree-id2875 . -372) (undo-tree-id2876 . -372) (undo-tree-id2877 . -372) (undo-tree-id2878 . -372) (undo-tree-id2879 . -372) (undo-tree-id2880 . -372) (undo-tree-id2881 . -372) (undo-tree-id2882 . -372) (undo-tree-id2883 . -372) (undo-tree-id2884 . -372) (undo-tree-id2885 . -372) (undo-tree-id2886 . -372) (undo-tree-id2887 . -372) (undo-tree-id2888 . -372) (undo-tree-id2889 . -372) (undo-tree-id2890 . -372) (undo-tree-id2891 . -372) (undo-tree-id2892 . -372) (undo-tree-id2893 . -375) (undo-tree-id2894 . -375) (undo-tree-id2895 . -375) (undo-tree-id2896 . -375) (undo-tree-id2897 . -375) (undo-tree-id2898 . -375) (undo-tree-id2899 . -375) (undo-tree-id2900 . -375) (undo-tree-id2901 . -375) (undo-tree-id2902 . -375) (undo-tree-id2903 . -375) (undo-tree-id2904 . -375) (undo-tree-id2905 . -375) (undo-tree-id2906 . -375) (undo-tree-id2907 . -375) (undo-tree-id2908 . -375) (undo-tree-id2909 . -375) (undo-tree-id2910 . -375) (undo-tree-id2911 . -375) (undo-tree-id2912 . -375) (undo-tree-id2913 . -375) (undo-tree-id2914 . -380) (undo-tree-id2915 . -380) (undo-tree-id2916 . -380) (undo-tree-id2917 . -380) (undo-tree-id2918 . -380) (undo-tree-id2919 . -380) (undo-tree-id2920 . -380) (undo-tree-id2921 . -380) (undo-tree-id2922 . -380) (undo-tree-id2923 . -380) (undo-tree-id2924 . -380) (undo-tree-id2925 . -380) (undo-tree-id2926 . -380) (undo-tree-id2927 . -380) (undo-tree-id2928 . -380) (undo-tree-id2929 . -380) (undo-tree-id2930 . -380) (undo-tree-id2931 . -380) (undo-tree-id2932 . -380) (undo-tree-id2933 . -380) (undo-tree-id2934 . -380) (undo-tree-id2935 . -380) (undo-tree-id2936 . -380) (undo-tree-id2937 . -380) (undo-tree-id2938 . -380) (undo-tree-id2939 . -380) (undo-tree-id2940 . -424) (undo-tree-id2941 . -424) (undo-tree-id2942 . -424) (undo-tree-id2943 . -424) (undo-tree-id2944 . -424) (undo-tree-id2945 . -424) (undo-tree-id2946 . -424) (undo-tree-id2947 . -424) (undo-tree-id2948 . -424) (undo-tree-id2949 . -424) (undo-tree-id2950 . -424) (undo-tree-id2951 . -424) (undo-tree-id2952 . -424) (undo-tree-id2953 . -424) (undo-tree-id2954 . -424) (undo-tree-id2955 . -424) (undo-tree-id2956 . -424) (undo-tree-id2957 . -424) (undo-tree-id2958 . -424) (undo-tree-id2959 . -424) (undo-tree-id2960 . -424) (undo-tree-id2961 . -424) (undo-tree-id2962 . -424) (undo-tree-id2963 . -424) (undo-tree-id2964 . -424) (undo-tree-id2965 . -424) (undo-tree-id2966 . -484) (undo-tree-id2967 . -484) (undo-tree-id2968 . -484) (undo-tree-id2969 . -484) (undo-tree-id2970 . -484) (undo-tree-id2971 . -484) (undo-tree-id2972 . -484) (undo-tree-id2973 . -484) (undo-tree-id2974 . -484) (undo-tree-id2975 . -484) (undo-tree-id2976 . -484) (undo-tree-id2977 . -484) (undo-tree-id2978 . -484) (undo-tree-id2979 . -484) (undo-tree-id2980 . -484) (undo-tree-id2981 . -484) (undo-tree-id2982 . -484) (undo-tree-id2983 . -484) (undo-tree-id2984 . -484) (undo-tree-id2985 . -484) (undo-tree-id2986 . -484) (undo-tree-id2987 . -484) (undo-tree-id2988 . -484) (undo-tree-id2989 . -484) (undo-tree-id2990 . -484) (undo-tree-id2991 . -484) (undo-tree-id2992 . -485) (undo-tree-id2993 . -485) (undo-tree-id2994 . -485) (undo-tree-id2995 . -485) (undo-tree-id2996 . -485) (undo-tree-id2997 . -485) (undo-tree-id2998 . -485) (undo-tree-id2999 . -485) (undo-tree-id3000 . -485) (undo-tree-id3001 . -485) (undo-tree-id3002 . -485) (undo-tree-id3003 . -485) (undo-tree-id3004 . -485) (undo-tree-id3005 . -485) (undo-tree-id3006 . -485) (undo-tree-id3007 . -485) (undo-tree-id3008 . -485) (undo-tree-id3009 . -485) (undo-tree-id3010 . -485) (undo-tree-id3011 . -485) (undo-tree-id3012 . -485) (undo-tree-id3013 . -486) (undo-tree-id3014 . -486) (undo-tree-id3015 . -486) (undo-tree-id3016 . -486) (undo-tree-id3017 . -486) (undo-tree-id3018 . -486) (undo-tree-id3019 . -486) (undo-tree-id3020 . -486) (undo-tree-id3021 . -486) (undo-tree-id3022 . -486) (undo-tree-id3023 . -486) (undo-tree-id3024 . -486) (undo-tree-id3025 . -486) (undo-tree-id3026 . -486) (undo-tree-id3027 . -486) (undo-tree-id3028 . -486) (undo-tree-id3029 . -486) (undo-tree-id3030 . -486) (undo-tree-id3031 . -486) (undo-tree-id3032 . -486) (undo-tree-id3033 . -486) (undo-tree-id3034 . -486) (undo-tree-id3035 . -487) 725 (t 25774 24462 487889 958000)) nil (25774 24495 573300 873000) 0 nil])
([nil nil ((#("In this chapter, you will learn about the basic mechanisms of attention and self-attention and see how they are used in the original transformer architecture. Then, equipped with an understanding of how transformers work, we will explore some of the most influential NLP models that emerged from this architecture and learn how to use a large-scale language model, the so-called BERT model, in PyTorch. We will cover the following topics:" 0 102 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 102 103 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 103 108 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 108 202 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 202 203 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 203 300 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 300 301 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 301 402 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t) 402 403 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 403 438 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 239) (undo-tree-id3036 . 438) (undo-tree-id3037 . -437) (undo-tree-id3038 . -437) (undo-tree-id3039 . -437) (undo-tree-id3040 . -437) (undo-tree-id3041 . -438) (undo-tree-id3042 . -437) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -6) (undo-tree-id3065 . -6) (undo-tree-id3066 . -6) (undo-tree-id3067 . -6) (undo-tree-id3068 . -6) (undo-tree-id3069 . -6) (undo-tree-id3070 . -6) (undo-tree-id3071 . -6) (undo-tree-id3072 . -6) (undo-tree-id3073 . -6) (undo-tree-id3074 . -6) (undo-tree-id3075 . -6) (undo-tree-id3076 . -6) (undo-tree-id3077 . -6) (undo-tree-id3078 . -6) (undo-tree-id3079 . -6) (undo-tree-id3080 . -6) (undo-tree-id3081 . -6) (undo-tree-id3082 . -6) (undo-tree-id3083 . -6) (undo-tree-id3084 . -6) (undo-tree-id3085 . -14) (undo-tree-id3086 . -14) (undo-tree-id3087 . -14) (undo-tree-id3088 . -14) (undo-tree-id3089 . -14) (undo-tree-id3090 . -14) (undo-tree-id3091 . -14) (undo-tree-id3092 . -14) (undo-tree-id3093 . -14) (undo-tree-id3094 . -14) (undo-tree-id3095 . -14) (undo-tree-id3096 . -14) (undo-tree-id3097 . -14) (undo-tree-id3098 . -14) (undo-tree-id3099 . -14) (undo-tree-id3100 . -14) (undo-tree-id3101 . -14) (undo-tree-id3102 . -14) (undo-tree-id3103 . -14) (undo-tree-id3104 . -14) (undo-tree-id3105 . -14) (undo-tree-id3106 . -14) (undo-tree-id3107 . -14) (undo-tree-id3108 . -14) (undo-tree-id3109 . -14) (undo-tree-id3110 . -14) (undo-tree-id3111 . -15) (undo-tree-id3112 . -15) (undo-tree-id3113 . -15) (undo-tree-id3114 . -15) (undo-tree-id3115 . -15) (undo-tree-id3116 . -15) (undo-tree-id3117 . -15) (undo-tree-id3118 . -15) (undo-tree-id3119 . -15) (undo-tree-id3120 . -15) (undo-tree-id3121 . -15) (undo-tree-id3122 . -15) (undo-tree-id3123 . -15) (undo-tree-id3124 . -15) (undo-tree-id3125 . -15) (undo-tree-id3126 . -15) (undo-tree-id3127 . -15) (undo-tree-id3128 . -15) (undo-tree-id3129 . -15) (undo-tree-id3130 . -15) (undo-tree-id3131 . -15) (undo-tree-id3132 . -19) (undo-tree-id3133 . -19) (undo-tree-id3134 . -19) (undo-tree-id3135 . -19) (undo-tree-id3136 . -19) (undo-tree-id3137 . -19) (undo-tree-id3138 . -19) (undo-tree-id3139 . -19) (undo-tree-id3140 . -19) (undo-tree-id3141 . -19) (undo-tree-id3142 . -19) (undo-tree-id3143 . -19) (undo-tree-id3144 . -19) (undo-tree-id3145 . -19) (undo-tree-id3146 . -19) (undo-tree-id3147 . -19) (undo-tree-id3148 . -19) (undo-tree-id3149 . -19) (undo-tree-id3150 . -19) (undo-tree-id3151 . -19) (undo-tree-id3152 . -19) (undo-tree-id3153 . -24) (undo-tree-id3154 . -24) (undo-tree-id3155 . -24) (undo-tree-id3156 . -24) (undo-tree-id3157 . -24) (undo-tree-id3158 . -24) (undo-tree-id3159 . -24) (undo-tree-id3160 . -24) (undo-tree-id3161 . -24) (undo-tree-id3162 . -24) (undo-tree-id3163 . -24) (undo-tree-id3164 . -24) (undo-tree-id3165 . -24) (undo-tree-id3166 . -24) (undo-tree-id3167 . -24) (undo-tree-id3168 . -24) (undo-tree-id3169 . -24) (undo-tree-id3170 . -24) (undo-tree-id3171 . -24) (undo-tree-id3172 . -24) (undo-tree-id3173 . -24) (undo-tree-id3174 . -24) (undo-tree-id3175 . -24) (undo-tree-id3176 . -24) (undo-tree-id3177 . -24) (undo-tree-id3178 . -24) (undo-tree-id3179 . -30) (undo-tree-id3180 . -30) (undo-tree-id3181 . -30) (undo-tree-id3182 . -30) (undo-tree-id3183 . -30) (undo-tree-id3184 . -30) (undo-tree-id3185 . -30) (undo-tree-id3186 . -30) (undo-tree-id3187 . -30) (undo-tree-id3188 . -30) (undo-tree-id3189 . -30) (undo-tree-id3190 . -36) (undo-tree-id3191 . -36) (undo-tree-id3192 . -36) (undo-tree-id3193 . -36) (undo-tree-id3194 . -36) (undo-tree-id3195 . -36) (undo-tree-id3196 . -36) (undo-tree-id3197 . -36) (undo-tree-id3198 . -36) (undo-tree-id3199 . -36) (undo-tree-id3200 . -36) (undo-tree-id3201 . -40) (undo-tree-id3202 . -40) (undo-tree-id3203 . -40) (undo-tree-id3204 . -40) (undo-tree-id3205 . -40) (undo-tree-id3206 . -40) (undo-tree-id3207 . -40) (undo-tree-id3208 . -40) (undo-tree-id3209 . -40) (undo-tree-id3210 . -40) (undo-tree-id3211 . -40) (undo-tree-id3212 . -46) (undo-tree-id3213 . -46) (undo-tree-id3214 . -46) (undo-tree-id3215 . -46) (undo-tree-id3216 . -46) (undo-tree-id3217 . -46) (undo-tree-id3218 . -46) (undo-tree-id3219 . -46) (undo-tree-id3220 . -46) (undo-tree-id3221 . -46) (undo-tree-id3222 . -46) (undo-tree-id3223 . -57) (undo-tree-id3224 . -57) (undo-tree-id3225 . -57) (undo-tree-id3226 . -57) (undo-tree-id3227 . -57) (undo-tree-id3228 . -57) (undo-tree-id3229 . -57) (undo-tree-id3230 . -57) (undo-tree-id3231 . -57) (undo-tree-id3232 . -57) (undo-tree-id3233 . -57) (undo-tree-id3234 . -60) (undo-tree-id3235 . -60) (undo-tree-id3236 . -60) (undo-tree-id3237 . -60) (undo-tree-id3238 . -60) (undo-tree-id3239 . -60) (undo-tree-id3240 . -60) (undo-tree-id3241 . -60) (undo-tree-id3242 . -60) (undo-tree-id3243 . -60) (undo-tree-id3244 . -60) (undo-tree-id3245 . -70) (undo-tree-id3246 . -70) (undo-tree-id3247 . -70) (undo-tree-id3248 . -70) (undo-tree-id3249 . -70) (undo-tree-id3250 . -70) (undo-tree-id3251 . -70) (undo-tree-id3252 . -70) (undo-tree-id3253 . -70) (undo-tree-id3254 . -70) (undo-tree-id3255 . -70) (undo-tree-id3256 . -74) (undo-tree-id3257 . -74) (undo-tree-id3258 . -74) (undo-tree-id3259 . -74) (undo-tree-id3260 . -74) (undo-tree-id3261 . -74) (undo-tree-id3262 . -74) (undo-tree-id3263 . -74) (undo-tree-id3264 . -74) (undo-tree-id3265 . -74) (undo-tree-id3266 . -74) (undo-tree-id3267 . -79) (undo-tree-id3268 . -79) (undo-tree-id3269 . -79) (undo-tree-id3270 . -79) (undo-tree-id3271 . -79) (undo-tree-id3272 . -79) (undo-tree-id3273 . -79) (undo-tree-id3274 . -79) (undo-tree-id3275 . -79) (undo-tree-id3276 . -79) (undo-tree-id3277 . -79) (undo-tree-id3278 . -79) (undo-tree-id3279 . -79) (undo-tree-id3280 . -79) (undo-tree-id3281 . -79) (undo-tree-id3282 . -79) (undo-tree-id3283 . -79) (undo-tree-id3284 . -79) (undo-tree-id3285 . -79) (undo-tree-id3286 . -79) (undo-tree-id3287 . -79) (undo-tree-id3288 . -80) (undo-tree-id3289 . -80) (undo-tree-id3290 . -80) (undo-tree-id3291 . -80) (undo-tree-id3292 . -80) (undo-tree-id3293 . -80) (undo-tree-id3294 . -80) (undo-tree-id3295 . -80) (undo-tree-id3296 . -80) (undo-tree-id3297 . -80) (undo-tree-id3298 . -80) (undo-tree-id3299 . -80) (undo-tree-id3300 . -80) (undo-tree-id3301 . -80) (undo-tree-id3302 . -80) (undo-tree-id3303 . -80) (undo-tree-id3304 . -80) (undo-tree-id3305 . -80) (undo-tree-id3306 . -80) (undo-tree-id3307 . -80) (undo-tree-id3308 . -80) (undo-tree-id3309 . -89) (undo-tree-id3310 . -89) (undo-tree-id3311 . -89) (undo-tree-id3312 . -89) (undo-tree-id3313 . -89) (undo-tree-id3314 . -89) (undo-tree-id3315 . -89) (undo-tree-id3316 . -89) (undo-tree-id3317 . -89) (undo-tree-id3318 . -89) (undo-tree-id3319 . -89) (undo-tree-id3320 . -89) (undo-tree-id3321 . -89) (undo-tree-id3322 . -89) (undo-tree-id3323 . -89) (undo-tree-id3324 . -89) (undo-tree-id3325 . -89) (undo-tree-id3326 . -89) (undo-tree-id3327 . -89) (undo-tree-id3328 . -89) (undo-tree-id3329 . -89) (undo-tree-id3330 . -89) (undo-tree-id3331 . -89) (undo-tree-id3332 . -89) (undo-tree-id3333 . -89) (undo-tree-id3334 . -89) (undo-tree-id3335 . -93) (undo-tree-id3336 . -93) (undo-tree-id3337 . -93) (undo-tree-id3338 . -93) (undo-tree-id3339 . -93) (undo-tree-id3340 . -93) (undo-tree-id3341 . -93) (undo-tree-id3342 . -93) (undo-tree-id3343 . -93) (undo-tree-id3344 . -93) (undo-tree-id3345 . -93) (undo-tree-id3346 . -93) (undo-tree-id3347 . -93) (undo-tree-id3348 . -93) (undo-tree-id3349 . -93) (undo-tree-id3350 . -93) (undo-tree-id3351 . -93) (undo-tree-id3352 . -93) (undo-tree-id3353 . -93) (undo-tree-id3354 . -93) (undo-tree-id3355 . -93) (undo-tree-id3356 . -97) (undo-tree-id3357 . -97) (undo-tree-id3358 . -97) (undo-tree-id3359 . -97) (undo-tree-id3360 . -97) (undo-tree-id3361 . -97) (undo-tree-id3362 . -97) (undo-tree-id3363 . -97) (undo-tree-id3364 . -97) (undo-tree-id3365 . -97) (undo-tree-id3366 . -97) (undo-tree-id3367 . -97) (undo-tree-id3368 . -97) (undo-tree-id3369 . -97) (undo-tree-id3370 . -97) (undo-tree-id3371 . -97) (undo-tree-id3372 . -97) (undo-tree-id3373 . -97) (undo-tree-id3374 . -97) (undo-tree-id3375 . -97) (undo-tree-id3376 . -97) (undo-tree-id3377 . -97) (undo-tree-id3378 . -97) (undo-tree-id3379 . -97) (undo-tree-id3380 . -97) (undo-tree-id3381 . -97) (undo-tree-id3382 . -101) (undo-tree-id3383 . -101) (undo-tree-id3384 . -101) (undo-tree-id3385 . -101) (undo-tree-id3386 . -101) (undo-tree-id3387 . -101) (undo-tree-id3388 . -101) (undo-tree-id3389 . -101) (undo-tree-id3390 . -101) (undo-tree-id3391 . -101) (undo-tree-id3392 . -101) (undo-tree-id3393 . -106) (undo-tree-id3394 . -106) (undo-tree-id3395 . -106) (undo-tree-id3396 . -106) (undo-tree-id3397 . -106) (undo-tree-id3398 . -106) (undo-tree-id3399 . -106) (undo-tree-id3400 . -106) (undo-tree-id3401 . -106) (undo-tree-id3402 . -106) (undo-tree-id3403 . -106) (undo-tree-id3404 . -110) (undo-tree-id3405 . -110) (undo-tree-id3406 . -110) (undo-tree-id3407 . -110) (undo-tree-id3408 . -110) (undo-tree-id3409 . -110) (undo-tree-id3410 . -110) (undo-tree-id3411 . -110) (undo-tree-id3412 . -110) (undo-tree-id3413 . -110) (undo-tree-id3414 . -110) (undo-tree-id3415 . -115) (undo-tree-id3416 . -115) (undo-tree-id3417 . -115) (undo-tree-id3418 . -115) (undo-tree-id3419 . -115) (undo-tree-id3420 . -115) (undo-tree-id3421 . -115) (undo-tree-id3422 . -115) (undo-tree-id3423 . -115) (undo-tree-id3424 . -115) (undo-tree-id3425 . -115) (undo-tree-id3426 . -118) (undo-tree-id3427 . -118) (undo-tree-id3428 . -118) (undo-tree-id3429 . -118) (undo-tree-id3430 . -118) (undo-tree-id3431 . -118) (undo-tree-id3432 . -118) (undo-tree-id3433 . -118) (undo-tree-id3434 . -118) (undo-tree-id3435 . -118) (undo-tree-id3436 . -118) (undo-tree-id3437 . -122) (undo-tree-id3438 . -122) (undo-tree-id3439 . -122) (undo-tree-id3440 . -122) (undo-tree-id3441 . -122) (undo-tree-id3442 . -122) (undo-tree-id3443 . -122) (undo-tree-id3444 . -122) (undo-tree-id3445 . -122) (undo-tree-id3446 . -122) (undo-tree-id3447 . -122) (undo-tree-id3448 . -131) (undo-tree-id3449 . -131) (undo-tree-id3450 . -131) (undo-tree-id3451 . -131) (undo-tree-id3452 . -131) (undo-tree-id3453 . -131) (undo-tree-id3454 . -131) (undo-tree-id3455 . -131) (undo-tree-id3456 . -131) (undo-tree-id3457 . -131) (undo-tree-id3458 . -131) (undo-tree-id3459 . -143) (undo-tree-id3460 . -143) (undo-tree-id3461 . -143) (undo-tree-id3462 . -143) (undo-tree-id3463 . -143) (undo-tree-id3464 . -143) (undo-tree-id3465 . -143) (undo-tree-id3466 . -143) (undo-tree-id3467 . -143) (undo-tree-id3468 . -143) (undo-tree-id3469 . -143) (undo-tree-id3470 . -143) (undo-tree-id3471 . -143) (undo-tree-id3472 . -143) (undo-tree-id3473 . -143) (undo-tree-id3474 . -143) (undo-tree-id3475 . -143) (undo-tree-id3476 . -143) (undo-tree-id3477 . -143) (undo-tree-id3478 . -143) (undo-tree-id3479 . -143) (undo-tree-id3480 . -143) (undo-tree-id3481 . -143) (undo-tree-id3482 . -143) (undo-tree-id3483 . -143) (undo-tree-id3484 . -143) (undo-tree-id3485 . -143) (undo-tree-id3486 . -143) (undo-tree-id3487 . -143) (undo-tree-id3488 . -143) (undo-tree-id3489 . -143) (undo-tree-id3490 . -156) (undo-tree-id3491 . -156) (undo-tree-id3492 . -156) (undo-tree-id3493 . -156) (undo-tree-id3494 . -156) (undo-tree-id3495 . -156) (undo-tree-id3496 . -156) (undo-tree-id3497 . -156) (undo-tree-id3498 . -156) (undo-tree-id3499 . -156) (undo-tree-id3500 . -156) (undo-tree-id3501 . -156) (undo-tree-id3502 . -156) (undo-tree-id3503 . -156) (undo-tree-id3504 . -156) (undo-tree-id3505 . -156) (undo-tree-id3506 . -156) (undo-tree-id3507 . -156) (undo-tree-id3508 . -156) (undo-tree-id3509 . -156) (undo-tree-id3510 . -156) (undo-tree-id3511 . -157) (undo-tree-id3512 . -157) (undo-tree-id3513 . -157) (undo-tree-id3514 . -157) (undo-tree-id3515 . -157) (undo-tree-id3516 . -157) (undo-tree-id3517 . -157) (undo-tree-id3518 . -157) (undo-tree-id3519 . -157) (undo-tree-id3520 . -157) (undo-tree-id3521 . -157) (undo-tree-id3522 . -157) (undo-tree-id3523 . -157) (undo-tree-id3524 . -157) (undo-tree-id3525 . -157) (undo-tree-id3526 . -157) (undo-tree-id3527 . -157) (undo-tree-id3528 . -157) (undo-tree-id3529 . -157) (undo-tree-id3530 . -157) (undo-tree-id3531 . -157) (undo-tree-id3532 . -157) (undo-tree-id3533 . -157) (undo-tree-id3534 . -157) (undo-tree-id3535 . -157) (undo-tree-id3536 . -157) (undo-tree-id3537 . -162) (undo-tree-id3538 . -162) (undo-tree-id3539 . -162) (undo-tree-id3540 . -162) (undo-tree-id3541 . -162) (undo-tree-id3542 . -162) (undo-tree-id3543 . -162) (undo-tree-id3544 . -162) (undo-tree-id3545 . -162) (undo-tree-id3546 . -162) (undo-tree-id3547 . -162) (undo-tree-id3548 . -162) (undo-tree-id3549 . -162) (undo-tree-id3550 . -162) (undo-tree-id3551 . -162) (undo-tree-id3552 . -162) (undo-tree-id3553 . -162) (undo-tree-id3554 . -162) (undo-tree-id3555 . -162) (undo-tree-id3556 . -162) (undo-tree-id3557 . -162) (undo-tree-id3558 . -163) (undo-tree-id3559 . -163) (undo-tree-id3560 . -163) (undo-tree-id3561 . -163) (undo-tree-id3562 . -163) (undo-tree-id3563 . -163) (undo-tree-id3564 . -163) (undo-tree-id3565 . -163) (undo-tree-id3566 . -163) (undo-tree-id3567 . -163) (undo-tree-id3568 . -163) (undo-tree-id3569 . -163) (undo-tree-id3570 . -163) (undo-tree-id3571 . -163) (undo-tree-id3572 . -163) (undo-tree-id3573 . -163) (undo-tree-id3574 . -163) (undo-tree-id3575 . -163) (undo-tree-id3576 . -163) (undo-tree-id3577 . -163) (undo-tree-id3578 . -163) (undo-tree-id3579 . -163) (undo-tree-id3580 . -163) (undo-tree-id3581 . -163) (undo-tree-id3582 . -163) (undo-tree-id3583 . -163) (undo-tree-id3584 . -172) (undo-tree-id3585 . -172) (undo-tree-id3586 . -172) (undo-tree-id3587 . -172) (undo-tree-id3588 . -172) (undo-tree-id3589 . -172) (undo-tree-id3590 . -172) (undo-tree-id3591 . -172) (undo-tree-id3592 . -172) (undo-tree-id3593 . -172) (undo-tree-id3594 . -172) (undo-tree-id3595 . -172) (undo-tree-id3596 . -172) (undo-tree-id3597 . -172) (undo-tree-id3598 . -172) (undo-tree-id3599 . -172) (undo-tree-id3600 . -172) (undo-tree-id3601 . -172) (undo-tree-id3602 . -172) (undo-tree-id3603 . -172) (undo-tree-id3604 . -172) (undo-tree-id3605 . -177) (undo-tree-id3606 . -177) (undo-tree-id3607 . -177) (undo-tree-id3608 . -177) (undo-tree-id3609 . -177) (undo-tree-id3610 . -177) (undo-tree-id3611 . -177) (undo-tree-id3612 . -177) (undo-tree-id3613 . -177) (undo-tree-id3614 . -177) (undo-tree-id3615 . -177) (undo-tree-id3616 . -177) (undo-tree-id3617 . -177) (undo-tree-id3618 . -177) (undo-tree-id3619 . -177) (undo-tree-id3620 . -177) (undo-tree-id3621 . -177) (undo-tree-id3622 . -177) (undo-tree-id3623 . -177) (undo-tree-id3624 . -177) (undo-tree-id3625 . -177) (undo-tree-id3626 . -180) (undo-tree-id3627 . -180) (undo-tree-id3628 . -180) (undo-tree-id3629 . -180) (undo-tree-id3630 . -180) (undo-tree-id3631 . -180) (undo-tree-id3632 . -180) (undo-tree-id3633 . -180) (undo-tree-id3634 . -180) (undo-tree-id3635 . -180) (undo-tree-id3636 . -180) (undo-tree-id3637 . -180) (undo-tree-id3638 . -180) (undo-tree-id3639 . -180) (undo-tree-id3640 . -180) (undo-tree-id3641 . -180) (undo-tree-id3642 . -180) (undo-tree-id3643 . -180) (undo-tree-id3644 . -180) (undo-tree-id3645 . -180) (undo-tree-id3646 . -180) (undo-tree-id3647 . -194) (undo-tree-id3648 . -194) (undo-tree-id3649 . -194) (undo-tree-id3650 . -194) (undo-tree-id3651 . -194) (undo-tree-id3652 . -194) (undo-tree-id3653 . -194) (undo-tree-id3654 . -194) (undo-tree-id3655 . -194) (undo-tree-id3656 . -194) (undo-tree-id3657 . -194) (undo-tree-id3658 . -194) (undo-tree-id3659 . -194) (undo-tree-id3660 . -194) (undo-tree-id3661 . -194) (undo-tree-id3662 . -194) (undo-tree-id3663 . -194) (undo-tree-id3664 . -194) (undo-tree-id3665 . -194) (undo-tree-id3666 . -194) (undo-tree-id3667 . -194) (undo-tree-id3668 . -197) (undo-tree-id3669 . -197) (undo-tree-id3670 . -197) (undo-tree-id3671 . -197) (undo-tree-id3672 . -197) (undo-tree-id3673 . -197) (undo-tree-id3674 . -197) (undo-tree-id3675 . -197) (undo-tree-id3676 . -197) (undo-tree-id3677 . -197) (undo-tree-id3678 . -197) (undo-tree-id3679 . -197) (undo-tree-id3680 . -197) (undo-tree-id3681 . -197) (undo-tree-id3682 . -197) (undo-tree-id3683 . -197) (undo-tree-id3684 . -197) (undo-tree-id3685 . -197) (undo-tree-id3686 . -197) (undo-tree-id3687 . -197) (undo-tree-id3688 . -197) (undo-tree-id3689 . -201) (undo-tree-id3690 . -201) (undo-tree-id3691 . -201) (undo-tree-id3692 . -201) (undo-tree-id3693 . -201) (undo-tree-id3694 . -201) (undo-tree-id3695 . -201) (undo-tree-id3696 . -201) (undo-tree-id3697 . -201) (undo-tree-id3698 . -201) (undo-tree-id3699 . -201) (undo-tree-id3700 . -201) (undo-tree-id3701 . -201) (undo-tree-id3702 . -201) (undo-tree-id3703 . -201) (undo-tree-id3704 . -201) (undo-tree-id3705 . -201) (undo-tree-id3706 . -201) (undo-tree-id3707 . -201) (undo-tree-id3708 . -201) (undo-tree-id3709 . -201) (undo-tree-id3710 . -214) (undo-tree-id3711 . -214) (undo-tree-id3712 . -214) (undo-tree-id3713 . -214) (undo-tree-id3714 . -214) (undo-tree-id3715 . -214) (undo-tree-id3716 . -214) (undo-tree-id3717 . -214) (undo-tree-id3718 . -214) (undo-tree-id3719 . -214) (undo-tree-id3720 . -214) (undo-tree-id3721 . -214) (undo-tree-id3722 . -214) (undo-tree-id3723 . -214) (undo-tree-id3724 . -214) (undo-tree-id3725 . -214) (undo-tree-id3726 . -214) (undo-tree-id3727 . -214) (undo-tree-id3728 . -214) (undo-tree-id3729 . -214) (undo-tree-id3730 . -214) (undo-tree-id3731 . -219) (undo-tree-id3732 . -219) (undo-tree-id3733 . -219) (undo-tree-id3734 . -219) (undo-tree-id3735 . -219) (undo-tree-id3736 . -219) (undo-tree-id3737 . -219) (undo-tree-id3738 . -219) (undo-tree-id3739 . -219) (undo-tree-id3740 . -219) (undo-tree-id3741 . -219) (undo-tree-id3742 . -219) (undo-tree-id3743 . -219) (undo-tree-id3744 . -219) (undo-tree-id3745 . -219) (undo-tree-id3746 . -219) (undo-tree-id3747 . -219) (undo-tree-id3748 . -219) (undo-tree-id3749 . -219) (undo-tree-id3750 . -219) (undo-tree-id3751 . -219) (undo-tree-id3752 . -220) (undo-tree-id3753 . -220) (undo-tree-id3754 . -220) (undo-tree-id3755 . -220) (undo-tree-id3756 . -220) (undo-tree-id3757 . -220) (undo-tree-id3758 . -220) (undo-tree-id3759 . -220) (undo-tree-id3760 . -220) (undo-tree-id3761 . -220) (undo-tree-id3762 . -220) (undo-tree-id3763 . -220) (undo-tree-id3764 . -220) (undo-tree-id3765 . -220) (undo-tree-id3766 . -220) (undo-tree-id3767 . -220) (undo-tree-id3768 . -220) (undo-tree-id3769 . -220) (undo-tree-id3770 . -220) (undo-tree-id3771 . -220) (undo-tree-id3772 . -220) (undo-tree-id3773 . -223) (undo-tree-id3774 . -223) (undo-tree-id3775 . -223) (undo-tree-id3776 . -223) (undo-tree-id3777 . -223) (undo-tree-id3778 . -223) (undo-tree-id3779 . -223) (undo-tree-id3780 . -223) (undo-tree-id3781 . -223) (undo-tree-id3782 . -223) (undo-tree-id3783 . -223) (undo-tree-id3784 . -223) (undo-tree-id3785 . -223) (undo-tree-id3786 . -223) (undo-tree-id3787 . -223) (undo-tree-id3788 . -223) (undo-tree-id3789 . -223) (undo-tree-id3790 . -223) (undo-tree-id3791 . -223) (undo-tree-id3792 . -223) (undo-tree-id3793 . -223) (undo-tree-id3794 . -228) (undo-tree-id3795 . -228) (undo-tree-id3796 . -228) (undo-tree-id3797 . -228) (undo-tree-id3798 . -228) (undo-tree-id3799 . -228) (undo-tree-id3800 . -228) (undo-tree-id3801 . -228) (undo-tree-id3802 . -228) (undo-tree-id3803 . -228) (undo-tree-id3804 . -228) (undo-tree-id3805 . -228) (undo-tree-id3806 . -228) (undo-tree-id3807 . -228) (undo-tree-id3808 . -228) (undo-tree-id3809 . -228) (undo-tree-id3810 . -228) (undo-tree-id3811 . -228) (undo-tree-id3812 . -228) (undo-tree-id3813 . -228) (undo-tree-id3814 . -228) (undo-tree-id3815 . -236) (undo-tree-id3816 . -236) (undo-tree-id3817 . -236) (undo-tree-id3818 . -236) (undo-tree-id3819 . -236) (undo-tree-id3820 . -236) (undo-tree-id3821 . -236) (undo-tree-id3822 . -236) (undo-tree-id3823 . -236) (undo-tree-id3824 . -236) (undo-tree-id3825 . -236) (undo-tree-id3826 . -236) (undo-tree-id3827 . -236) (undo-tree-id3828 . -236) (undo-tree-id3829 . -236) (undo-tree-id3830 . -236) (undo-tree-id3831 . -236) (undo-tree-id3832 . -236) (undo-tree-id3833 . -236) (undo-tree-id3834 . -236) (undo-tree-id3835 . -236) (undo-tree-id3836 . -241) (undo-tree-id3837 . -241) (undo-tree-id3838 . -241) (undo-tree-id3839 . -241) (undo-tree-id3840 . -241) (undo-tree-id3841 . -241) (undo-tree-id3842 . -241) (undo-tree-id3843 . -241) (undo-tree-id3844 . -241) (undo-tree-id3845 . -241) (undo-tree-id3846 . -241) (undo-tree-id3847 . -241) (undo-tree-id3848 . -241) (undo-tree-id3849 . -241) (undo-tree-id3850 . -241) (undo-tree-id3851 . -241) (undo-tree-id3852 . -241) (undo-tree-id3853 . -241) (undo-tree-id3854 . -241) (undo-tree-id3855 . -241) (undo-tree-id3856 . -241) (undo-tree-id3857 . -244) (undo-tree-id3858 . -244) (undo-tree-id3859 . -244) (undo-tree-id3860 . -244) (undo-tree-id3861 . -244) (undo-tree-id3862 . -244) (undo-tree-id3863 . -244) (undo-tree-id3864 . -244) (undo-tree-id3865 . -244) (undo-tree-id3866 . -244) (undo-tree-id3867 . -244) (undo-tree-id3868 . -244) (undo-tree-id3869 . -244) (undo-tree-id3870 . -244) (undo-tree-id3871 . -244) (undo-tree-id3872 . -244) (undo-tree-id3873 . -244) (undo-tree-id3874 . -244) (undo-tree-id3875 . -244) (undo-tree-id3876 . -244) (undo-tree-id3877 . -244) (undo-tree-id3878 . -248) (undo-tree-id3879 . -248) (undo-tree-id3880 . -248) (undo-tree-id3881 . -248) (undo-tree-id3882 . -248) (undo-tree-id3883 . -248) (undo-tree-id3884 . -248) (undo-tree-id3885 . -248) (undo-tree-id3886 . -248) (undo-tree-id3887 . -248) (undo-tree-id3888 . -248) (undo-tree-id3889 . -248) (undo-tree-id3890 . -248) (undo-tree-id3891 . -248) (undo-tree-id3892 . -248) (undo-tree-id3893 . -248) (undo-tree-id3894 . -248) (undo-tree-id3895 . -248) (undo-tree-id3896 . -248) (undo-tree-id3897 . -248) (undo-tree-id3898 . -248) (undo-tree-id3899 . -253) (undo-tree-id3900 . -253) (undo-tree-id3901 . -253) (undo-tree-id3902 . -253) (undo-tree-id3903 . -253) (undo-tree-id3904 . -253) (undo-tree-id3905 . -253) (undo-tree-id3906 . -253) (undo-tree-id3907 . -253) (undo-tree-id3908 . -253) (undo-tree-id3909 . -253) (undo-tree-id3910 . -253) (undo-tree-id3911 . -253) (undo-tree-id3912 . -253) (undo-tree-id3913 . -253) (undo-tree-id3914 . -253) (undo-tree-id3915 . -253) (undo-tree-id3916 . -253) (undo-tree-id3917 . -253) (undo-tree-id3918 . -253) (undo-tree-id3919 . -253) (undo-tree-id3920 . -253) (undo-tree-id3921 . -253) (undo-tree-id3922 . -253) (undo-tree-id3923 . -253) (undo-tree-id3924 . -253) (undo-tree-id3925 . -265) (undo-tree-id3926 . -265) (undo-tree-id3927 . -265) (undo-tree-id3928 . -265) (undo-tree-id3929 . -265) (undo-tree-id3930 . -265) (undo-tree-id3931 . -265) (undo-tree-id3932 . -265) (undo-tree-id3933 . -265) (undo-tree-id3934 . -265) (undo-tree-id3935 . -265) (undo-tree-id3936 . -265) (undo-tree-id3937 . -265) (undo-tree-id3938 . -265) (undo-tree-id3939 . -265) (undo-tree-id3940 . -265) (undo-tree-id3941 . -265) (undo-tree-id3942 . -265) (undo-tree-id3943 . -265) (undo-tree-id3944 . -265) (undo-tree-id3945 . -265) (undo-tree-id3946 . 171) (undo-tree-id3947 . -270) (undo-tree-id3948 . -269) (undo-tree-id3949 . -269) (undo-tree-id3950 . -269) (undo-tree-id3951 . -269) (undo-tree-id3952 . -269) (undo-tree-id3953 . -269) (undo-tree-id3954 . -269) (undo-tree-id3955 . -269) (undo-tree-id3956 . -269) (undo-tree-id3957 . -269) (undo-tree-id3958 . -269) (undo-tree-id3959 . -269) (undo-tree-id3960 . -269) (undo-tree-id3961 . -269) (undo-tree-id3962 . -269) (undo-tree-id3963 . -269) (undo-tree-id3964 . -269) (undo-tree-id3965 . -269) (undo-tree-id3966 . -269) (undo-tree-id3967 . -269) (undo-tree-id3968 . -269) (undo-tree-id3969 . -269) (undo-tree-id3970 . -269) (undo-tree-id3971 . -269) (undo-tree-id3972 . -269) (undo-tree-id3973 . -269) (undo-tree-id3974 . -269) (undo-tree-id3975 . -269) (undo-tree-id3976 . -269) (undo-tree-id3977 . -269) (undo-tree-id3978 . -269) (undo-tree-id3979 . -276) (undo-tree-id3980 . -276) (undo-tree-id3981 . -276) (undo-tree-id3982 . -276) (undo-tree-id3983 . -276) (undo-tree-id3984 . -276) (undo-tree-id3985 . -276) (undo-tree-id3986 . -276) (undo-tree-id3987 . -276) (undo-tree-id3988 . -276) (undo-tree-id3989 . -276) (undo-tree-id3990 . -276) (undo-tree-id3991 . -276) (undo-tree-id3992 . -276) (undo-tree-id3993 . -276) (undo-tree-id3994 . -276) (undo-tree-id3995 . -276) (undo-tree-id3996 . -276) (undo-tree-id3997 . -276) (undo-tree-id3998 . -276) (undo-tree-id3999 . -276) (undo-tree-id4000 . -281) (undo-tree-id4001 . -281) (undo-tree-id4002 . -281) (undo-tree-id4003 . -281) (undo-tree-id4004 . -281) (undo-tree-id4005 . -281) (undo-tree-id4006 . -281) (undo-tree-id4007 . -281) (undo-tree-id4008 . -281) (undo-tree-id4009 . -281) (undo-tree-id4010 . -281) (undo-tree-id4011 . -281) (undo-tree-id4012 . -281) (undo-tree-id4013 . -281) (undo-tree-id4014 . -281) (undo-tree-id4015 . -281) (undo-tree-id4016 . -281) (undo-tree-id4017 . -281) (undo-tree-id4018 . -281) (undo-tree-id4019 . -281) (undo-tree-id4020 . -281) (undo-tree-id4021 . -289) (undo-tree-id4022 . -289) (undo-tree-id4023 . -289) (undo-tree-id4024 . -289) (undo-tree-id4025 . -289) (undo-tree-id4026 . -289) (undo-tree-id4027 . -289) (undo-tree-id4028 . -289) (undo-tree-id4029 . -289) (undo-tree-id4030 . -289) (undo-tree-id4031 . -289) (undo-tree-id4032 . -289) (undo-tree-id4033 . -289) (undo-tree-id4034 . -289) (undo-tree-id4035 . -289) (undo-tree-id4036 . -289) (undo-tree-id4037 . -289) (undo-tree-id4038 . -289) (undo-tree-id4039 . -289) (undo-tree-id4040 . -289) (undo-tree-id4041 . -289) (undo-tree-id4042 . -294) (undo-tree-id4043 . -294) (undo-tree-id4044 . -294) (undo-tree-id4045 . -294) (undo-tree-id4046 . -294) (undo-tree-id4047 . -294) (undo-tree-id4048 . -294) (undo-tree-id4049 . -294) (undo-tree-id4050 . -294) (undo-tree-id4051 . -294) (undo-tree-id4052 . -294) (undo-tree-id4053 . -294) (undo-tree-id4054 . -294) (undo-tree-id4055 . -294) (undo-tree-id4056 . -294) (undo-tree-id4057 . -294) (undo-tree-id4058 . -294) (undo-tree-id4059 . -294) (undo-tree-id4060 . -294) (undo-tree-id4061 . -294) (undo-tree-id4062 . -294) (undo-tree-id4063 . -299) (undo-tree-id4064 . -299) (undo-tree-id4065 . -299) (undo-tree-id4066 . -299) (undo-tree-id4067 . -299) (undo-tree-id4068 . -299) (undo-tree-id4069 . -299) (undo-tree-id4070 . -299) (undo-tree-id4071 . -299) (undo-tree-id4072 . -299) (undo-tree-id4073 . -299) (undo-tree-id4074 . -299) (undo-tree-id4075 . -299) (undo-tree-id4076 . -299) (undo-tree-id4077 . -299) (undo-tree-id4078 . -299) (undo-tree-id4079 . -299) (undo-tree-id4080 . -299) (undo-tree-id4081 . -299) (undo-tree-id4082 . -299) (undo-tree-id4083 . -299) (undo-tree-id4084 . -312) (undo-tree-id4085 . -312) (undo-tree-id4086 . -312) (undo-tree-id4087 . -312) (undo-tree-id4088 . -312) (undo-tree-id4089 . -312) (undo-tree-id4090 . -312) (undo-tree-id4091 . -312) (undo-tree-id4092 . -312) (undo-tree-id4093 . -312) (undo-tree-id4094 . -312) (undo-tree-id4095 . -312) (undo-tree-id4096 . -312) (undo-tree-id4097 . -312) (undo-tree-id4098 . -312) (undo-tree-id4099 . -312) (undo-tree-id4100 . -312) (undo-tree-id4101 . -312) (undo-tree-id4102 . -312) (undo-tree-id4103 . -312) (undo-tree-id4104 . -312) (undo-tree-id4105 . -312) (undo-tree-id4106 . -312) (undo-tree-id4107 . -312) (undo-tree-id4108 . -312) (undo-tree-id4109 . -312) (undo-tree-id4110 . -312) (undo-tree-id4111 . -312) (undo-tree-id4112 . -312) (undo-tree-id4113 . -312) (undo-tree-id4114 . -312) (undo-tree-id4115 . -316) (undo-tree-id4116 . -316) (undo-tree-id4117 . -316) (undo-tree-id4118 . -316) (undo-tree-id4119 . -316) (undo-tree-id4120 . -316) (undo-tree-id4121 . -316) (undo-tree-id4122 . -316) (undo-tree-id4123 . -316) (undo-tree-id4124 . -316) (undo-tree-id4125 . -316) (undo-tree-id4126 . -316) (undo-tree-id4127 . -316) (undo-tree-id4128 . -316) (undo-tree-id4129 . -316) (undo-tree-id4130 . -316) (undo-tree-id4131 . -316) (undo-tree-id4132 . -316) (undo-tree-id4133 . -316) (undo-tree-id4134 . -316) (undo-tree-id4135 . -316) (undo-tree-id4136 . -316) (undo-tree-id4137 . -316) (undo-tree-id4138 . -316) (undo-tree-id4139 . -316) (undo-tree-id4140 . -316) (undo-tree-id4141 . -316) (undo-tree-id4142 . -316) (undo-tree-id4143 . -316) (undo-tree-id4144 . -316) (undo-tree-id4145 . -316) (undo-tree-id4146 . -322) (undo-tree-id4147 . -322) (undo-tree-id4148 . -322) (undo-tree-id4149 . -322) (undo-tree-id4150 . -322) (undo-tree-id4151 . -322) (undo-tree-id4152 . -322) (undo-tree-id4153 . -322) (undo-tree-id4154 . -322) (undo-tree-id4155 . -322) (undo-tree-id4156 . -322) (undo-tree-id4157 . -322) (undo-tree-id4158 . -322) (undo-tree-id4159 . -322) (undo-tree-id4160 . -322) (undo-tree-id4161 . -322) (undo-tree-id4162 . -322) (undo-tree-id4163 . -322) (undo-tree-id4164 . -322) (undo-tree-id4165 . -322) (undo-tree-id4166 . -322) (undo-tree-id4167 . -322) (undo-tree-id4168 . -322) (undo-tree-id4169 . -322) (undo-tree-id4170 . -322) (undo-tree-id4171 . -322) (undo-tree-id4172 . -326) (undo-tree-id4173 . -326) (undo-tree-id4174 . -326) (undo-tree-id4175 . -326) (undo-tree-id4176 . -326) (undo-tree-id4177 . -326) (undo-tree-id4178 . -326) (undo-tree-id4179 . -326) (undo-tree-id4180 . -326) (undo-tree-id4181 . -326) (undo-tree-id4182 . -326) (undo-tree-id4183 . -326) (undo-tree-id4184 . -326) (undo-tree-id4185 . -326) (undo-tree-id4186 . -326) (undo-tree-id4187 . -326) (undo-tree-id4188 . -326) (undo-tree-id4189 . -326) (undo-tree-id4190 . -326) (undo-tree-id4191 . -326) (undo-tree-id4192 . -326) (undo-tree-id4193 . -329) (undo-tree-id4194 . -329) (undo-tree-id4195 . -329) (undo-tree-id4196 . -329) (undo-tree-id4197 . -329) (undo-tree-id4198 . -329) (undo-tree-id4199 . -329) (undo-tree-id4200 . -329) (undo-tree-id4201 . -329) (undo-tree-id4202 . -329) (undo-tree-id4203 . -329) (undo-tree-id4204 . -329) (undo-tree-id4205 . -329) (undo-tree-id4206 . -329) (undo-tree-id4207 . -329) (undo-tree-id4208 . -329) (undo-tree-id4209 . -329) (undo-tree-id4210 . -329) (undo-tree-id4211 . -329) (undo-tree-id4212 . -329) (undo-tree-id4213 . -329) (undo-tree-id4214 . -333) (undo-tree-id4215 . -333) (undo-tree-id4216 . -333) (undo-tree-id4217 . -333) (undo-tree-id4218 . -333) (undo-tree-id4219 . -333) (undo-tree-id4220 . -333) (undo-tree-id4221 . -333) (undo-tree-id4222 . -333) (undo-tree-id4223 . -333) (undo-tree-id4224 . -333) (undo-tree-id4225 . -333) (undo-tree-id4226 . -333) (undo-tree-id4227 . -333) (undo-tree-id4228 . -333) (undo-tree-id4229 . -333) (undo-tree-id4230 . -333) (undo-tree-id4231 . -333) (undo-tree-id4232 . -333) (undo-tree-id4233 . -333) (undo-tree-id4234 . -333) (undo-tree-id4235 . -335) (undo-tree-id4236 . -335) (undo-tree-id4237 . -335) (undo-tree-id4238 . -335) (undo-tree-id4239 . -335) (undo-tree-id4240 . -335) (undo-tree-id4241 . -335) (undo-tree-id4242 . -335) (undo-tree-id4243 . -335) (undo-tree-id4244 . -335) (undo-tree-id4245 . -335) (undo-tree-id4246 . -335) (undo-tree-id4247 . -335) (undo-tree-id4248 . -335) (undo-tree-id4249 . -335) (undo-tree-id4250 . -335) (undo-tree-id4251 . -335) (undo-tree-id4252 . -335) (undo-tree-id4253 . -335) (undo-tree-id4254 . -335) (undo-tree-id4255 . -335) (undo-tree-id4256 . -341) (undo-tree-id4257 . -341) (undo-tree-id4258 . -341) (undo-tree-id4259 . -341) (undo-tree-id4260 . -341) (undo-tree-id4261 . -341) (undo-tree-id4262 . -341) (undo-tree-id4263 . -341) (undo-tree-id4264 . -341) (undo-tree-id4265 . -341) (undo-tree-id4266 . -341) (undo-tree-id4267 . -341) (undo-tree-id4268 . -341) (undo-tree-id4269 . -341) (undo-tree-id4270 . -341) (undo-tree-id4271 . -341) (undo-tree-id4272 . -341) (undo-tree-id4273 . -341) (undo-tree-id4274 . -341) (undo-tree-id4275 . -341) (undo-tree-id4276 . -341) (undo-tree-id4277 . -342) (undo-tree-id4278 . -342) (undo-tree-id4279 . -342) (undo-tree-id4280 . -342) (undo-tree-id4281 . -342) (undo-tree-id4282 . -342) (undo-tree-id4283 . -342) (undo-tree-id4284 . -342) (undo-tree-id4285 . -342) (undo-tree-id4286 . -342) (undo-tree-id4287 . -342) (undo-tree-id4288 . -342) (undo-tree-id4289 . -342) (undo-tree-id4290 . -342) (undo-tree-id4291 . -342) (undo-tree-id4292 . -342) (undo-tree-id4293 . -342) (undo-tree-id4294 . -342) (undo-tree-id4295 . -342) (undo-tree-id4296 . -342) (undo-tree-id4297 . -342) (undo-tree-id4298 . -342) (undo-tree-id4299 . -342) (undo-tree-id4300 . -342) (undo-tree-id4301 . -342) (undo-tree-id4302 . -342) (undo-tree-id4303 . -406) (undo-tree-id4304 . -406) (undo-tree-id4305 . -406) (undo-tree-id4306 . -406) (undo-tree-id4307 . -406) (undo-tree-id4308 . -406) (undo-tree-id4309 . -406) (undo-tree-id4310 . -406) (undo-tree-id4311 . -406) (undo-tree-id4312 . -406) (undo-tree-id4313 . -406) (undo-tree-id4314 . -406) (undo-tree-id4315 . -406) (undo-tree-id4316 . -406) (undo-tree-id4317 . -406) (undo-tree-id4318 . -406) (undo-tree-id4319 . -406) (undo-tree-id4320 . -406) (undo-tree-id4321 . -406) (undo-tree-id4322 . -406) (undo-tree-id4323 . -406) (undo-tree-id4324 . -406) (undo-tree-id4325 . -406) (undo-tree-id4326 . -406) (undo-tree-id4327 . -406) (undo-tree-id4328 . -406) (undo-tree-id4329 . -406) (undo-tree-id4330 . -406) (undo-tree-id4331 . -406) (undo-tree-id4332 . -406) (undo-tree-id4333 . -406) (undo-tree-id4334 . -409) (undo-tree-id4335 . -409) (undo-tree-id4336 . -409) (undo-tree-id4337 . -409) (undo-tree-id4338 . -409) (undo-tree-id4339 . -409) (undo-tree-id4340 . -409) (undo-tree-id4341 . -409) (undo-tree-id4342 . -409) (undo-tree-id4343 . -409) (undo-tree-id4344 . -409) (undo-tree-id4345 . -409) (undo-tree-id4346 . -409) (undo-tree-id4347 . -409) (undo-tree-id4348 . -409) (undo-tree-id4349 . -409) (undo-tree-id4350 . -409) (undo-tree-id4351 . -409) (undo-tree-id4352 . -409) (undo-tree-id4353 . -409) (undo-tree-id4354 . -409) (undo-tree-id4355 . -415) (undo-tree-id4356 . -415) (undo-tree-id4357 . -415) (undo-tree-id4358 . -415) (undo-tree-id4359 . -415) (undo-tree-id4360 . -415) (undo-tree-id4361 . -415) (undo-tree-id4362 . -415) (undo-tree-id4363 . -415) (undo-tree-id4364 . -415) (undo-tree-id4365 . -415) (undo-tree-id4366 . -415) (undo-tree-id4367 . -415) (undo-tree-id4368 . -415) (undo-tree-id4369 . -415) (undo-tree-id4370 . -415) (undo-tree-id4371 . -415) (undo-tree-id4372 . -415) (undo-tree-id4373 . -415) (undo-tree-id4374 . -415) (undo-tree-id4375 . -415) (undo-tree-id4376 . -419) (undo-tree-id4377 . -419) (undo-tree-id4378 . -419) (undo-tree-id4379 . -419) (undo-tree-id4380 . -419) (undo-tree-id4381 . -419) (undo-tree-id4382 . -419) (undo-tree-id4383 . -419) (undo-tree-id4384 . -419) (undo-tree-id4385 . -419) (undo-tree-id4386 . -419) (undo-tree-id4387 . -419) (undo-tree-id4388 . -419) (undo-tree-id4389 . -419) (undo-tree-id4390 . -419) (undo-tree-id4391 . -419) (undo-tree-id4392 . -419) (undo-tree-id4393 . -419) (undo-tree-id4394 . -419) (undo-tree-id4395 . -419) (undo-tree-id4396 . -419) (undo-tree-id4397 . -429) (undo-tree-id4398 . -429) (undo-tree-id4399 . -429) (undo-tree-id4400 . -429) (undo-tree-id4401 . -429) (undo-tree-id4402 . -429) (undo-tree-id4403 . -429) (undo-tree-id4404 . -429) (undo-tree-id4405 . -429) (undo-tree-id4406 . -429) (undo-tree-id4407 . -429) (undo-tree-id4408 . -429) (undo-tree-id4409 . -429) (undo-tree-id4410 . -429) (undo-tree-id4411 . -429) (undo-tree-id4412 . -429) (undo-tree-id4413 . -429) (undo-tree-id4414 . -429) (undo-tree-id4415 . -429) (undo-tree-id4416 . -429) (undo-tree-id4417 . -429) (undo-tree-id4418 . -436) (undo-tree-id4419 . -436) (undo-tree-id4420 . -436) (undo-tree-id4421 . -436) (undo-tree-id4422 . -436) (undo-tree-id4423 . -436) (undo-tree-id4424 . -436) (undo-tree-id4425 . -436) (undo-tree-id4426 . -436) (undo-tree-id4427 . -436) (undo-tree-id4428 . -436) (undo-tree-id4429 . -436) (undo-tree-id4430 . -436) (undo-tree-id4431 . -436) (undo-tree-id4432 . -436) (undo-tree-id4433 . -436) (undo-tree-id4434 . -436) (undo-tree-id4435 . -436) (undo-tree-id4436 . -436) (undo-tree-id4437 . -436) (undo-tree-id4438 . -436) (undo-tree-id4439 . -437) (undo-tree-id4440 . -437) (undo-tree-id4441 . -437) (undo-tree-id4442 . -437) (undo-tree-id4443 . -437) (undo-tree-id4444 . -437) (undo-tree-id4445 . -437) (undo-tree-id4446 . -437) (undo-tree-id4447 . -437) (undo-tree-id4448 . -437) (undo-tree-id4449 . -437) (undo-tree-id4450 . -437) (undo-tree-id4451 . -437) (undo-tree-id4452 . -437) (undo-tree-id4453 . -437) (undo-tree-id4454 . -437) (undo-tree-id4455 . -437) (undo-tree-id4456 . -437) (undo-tree-id4457 . -437) (undo-tree-id4458 . -437) (undo-tree-id4459 . -437) (undo-tree-id4460 . -437) (undo-tree-id4461 . -437) (undo-tree-id4462 . -437) (undo-tree-id4463 . -437) (undo-tree-id4464 . -437) (undo-tree-id4465 . -437) (undo-tree-id4466 . -438) 676 (t 25774 24495 576361 423000)) nil (25774 24522 382836 617000) 0 nil])
([nil nil ((#("- 
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 3 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 237) (undo-tree-id4522 . 1) (undo-tree-id4523 . -2) (undo-tree-id4524 . -2) (undo-tree-id4525 . -2) (undo-tree-id4526 . 1) (undo-tree-id4527 . -2) (undo-tree-id4528 . -2) (undo-tree-id4529 . -2) (undo-tree-id4530 . -2) (undo-tree-id4531 . -2) (undo-tree-id4532 . -2) (undo-tree-id4533 . -2) (undo-tree-id4534 . -2) (undo-tree-id4535 . -2) (undo-tree-id4536 . -2) (undo-tree-id4537 . -2) (undo-tree-id4538 . -2) (undo-tree-id4539 . -2) (undo-tree-id4540 . -2) (undo-tree-id4541 . -2) (undo-tree-id4542 . -2) (undo-tree-id4543 . -2) (undo-tree-id4544 . -2) (undo-tree-id4545 . -2) (undo-tree-id4546 . -2) (undo-tree-id4547 . -2) (undo-tree-id4548 . -2) (undo-tree-id4549 . -2) (undo-tree-id4550 . -2) (undo-tree-id4551 . -2) (undo-tree-id4552 . -2) (undo-tree-id4553 . -2) (undo-tree-id4554 . -2) (undo-tree-id4555 . -2) (undo-tree-id4556 . -2) (undo-tree-id4557 . -2) (undo-tree-id4558 . -2) (undo-tree-id4559 . -2) (undo-tree-id4560 . -2) (undo-tree-id4561 . -2) (undo-tree-id4562 . -2) (undo-tree-id4563 . -2) (undo-tree-id4564 . -2) (undo-tree-id4565 . -2) (undo-tree-id4566 . -2) (undo-tree-id4567 . -2) (undo-tree-id4568 . -2) (undo-tree-id4569 . -2) (undo-tree-id4570 . -2) (undo-tree-id4571 . -2) (undo-tree-id4572 . -2) (undo-tree-id4573 . -2) (undo-tree-id4574 . -2) (undo-tree-id4575 . -2) (undo-tree-id4576 . -2) (undo-tree-id4577 . -2) (undo-tree-id4578 . -2) (undo-tree-id4579 . -2) (undo-tree-id4580 . -2) (undo-tree-id4581 . -2) (undo-tree-id4582 . -2) (undo-tree-id4583 . -2) (undo-tree-id4584 . -2) (undo-tree-id4585 . -2) (undo-tree-id4586 . -2) (undo-tree-id4587 . -2) (undo-tree-id4588 . -2) (undo-tree-id4589 . -2) (undo-tree-id4590 . -2) (undo-tree-id4591 . -2) (undo-tree-id4592 . -2) (undo-tree-id4593 . -2) (undo-tree-id4594 . -2) (undo-tree-id4595 . -2) (undo-tree-id4596 . -2) (undo-tree-id4597 . -2) (undo-tree-id4598 . -2) (undo-tree-id4599 . -2) (undo-tree-id4600 . -2) (undo-tree-id4601 . -2) (undo-tree-id4602 . -2) (undo-tree-id4603 . -2) (undo-tree-id4604 . -2) (undo-tree-id4605 . -2) (undo-tree-id4606 . -2) (undo-tree-id4607 . -2) (undo-tree-id4608 . -2) (undo-tree-id4609 . -2) (undo-tree-id4610 . -2) (undo-tree-id4611 . -2) (undo-tree-id4612 . -2) (undo-tree-id4613 . -2) (undo-tree-id4614 . -2) (undo-tree-id4615 . -2) (undo-tree-id4616 . -2) (undo-tree-id4617 . -2) (undo-tree-id4618 . -2) (undo-tree-id4619 . -2) (undo-tree-id4620 . -2) (undo-tree-id4621 . -2) (undo-tree-id4622 . -2) (undo-tree-id4623 . -2) (undo-tree-id4624 . -2) (undo-tree-id4625 . -2) (undo-tree-id4626 . -2) (undo-tree-id4627 . -2) (undo-tree-id4628 . -2) (undo-tree-id4629 . -2) (undo-tree-id4630 . -2) (undo-tree-id4631 . -2) (undo-tree-id4632 . -2) (undo-tree-id4633 . -2) (undo-tree-id4634 . -2) (undo-tree-id4635 . -2) (undo-tree-id4636 . -2) (undo-tree-id4637 . -2) (undo-tree-id4638 . -2) (undo-tree-id4639 . -2) (undo-tree-id4640 . -2) (undo-tree-id4641 . -2) (undo-tree-id4642 . -2) (undo-tree-id4643 . -2) (undo-tree-id4644 . -2) (undo-tree-id4645 . -2) (undo-tree-id4646 . -2) (undo-tree-id4647 . -2) (undo-tree-id4648 . -2) (undo-tree-id4649 . -2) (undo-tree-id4650 . -2) (undo-tree-id4651 . -2) (undo-tree-id4652 . -2) (undo-tree-id4653 . -2) (undo-tree-id4654 . -2) (undo-tree-id4655 . -2) (undo-tree-id4656 . -2) (undo-tree-id4657 . -2) (undo-tree-id4658 . -2) (undo-tree-id4659 . -2) (undo-tree-id4660 . -2) (undo-tree-id4661 . -2) (undo-tree-id4662 . -2) (undo-tree-id4663 . -2) (undo-tree-id4664 . -2) (undo-tree-id4665 . -2) (undo-tree-id4666 . -2) (undo-tree-id4667 . -2) (undo-tree-id4668 . -2) (undo-tree-id4669 . -2) (undo-tree-id4670 . -2) (undo-tree-id4671 . -2) (undo-tree-id4672 . -2) (undo-tree-id4673 . -2) (undo-tree-id4674 . -2) (undo-tree-id4675 . -2) (undo-tree-id4676 . -2) (undo-tree-id4677 . -2) (undo-tree-id4678 . -2) (undo-tree-id4679 . -2) (undo-tree-id4680 . -2) (undo-tree-id4681 . -2) (undo-tree-id4682 . -2) (undo-tree-id4683 . -2) (undo-tree-id4684 . -2) (undo-tree-id4685 . -2) (undo-tree-id4686 . -2) (undo-tree-id4687 . -2) (undo-tree-id4688 . -2) (undo-tree-id4689 . -2) (undo-tree-id4690 . -2) (undo-tree-id4691 . -2) (undo-tree-id4692 . -2) (undo-tree-id4693 . -2) (undo-tree-id4694 . -2) (undo-tree-id4695 . -2) (undo-tree-id4696 . -2) (undo-tree-id4697 . -2) (undo-tree-id4698 . -2) (undo-tree-id4699 . -2) (undo-tree-id4700 . -2) (undo-tree-id4701 . -2) (undo-tree-id4702 . -2) (undo-tree-id4703 . -2) (undo-tree-id4704 . -2) (undo-tree-id4705 . -2) (undo-tree-id4706 . -2) (undo-tree-id4707 . -2) (undo-tree-id4708 . -2) (undo-tree-id4709 . -2) (undo-tree-id4710 . -2) (undo-tree-id4711 . -2) (undo-tree-id4712 . -2) (undo-tree-id4713 . -2) (undo-tree-id4714 . -2) (undo-tree-id4715 . -2) (undo-tree-id4716 . -2) (undo-tree-id4717 . -2) (undo-tree-id4718 . -2) (undo-tree-id4719 . -2) (undo-tree-id4720 . -2) (undo-tree-id4721 . -2) (undo-tree-id4722 . -2) (undo-tree-id4723 . -2) (undo-tree-id4724 . -2) (undo-tree-id4725 . -2) (undo-tree-id4726 . -2) (undo-tree-id4727 . -2) (undo-tree-id4728 . -2) (undo-tree-id4729 . -2) (undo-tree-id4730 . -2) (undo-tree-id4731 . -2) (undo-tree-id4732 . -2) (undo-tree-id4733 . -2) (undo-tree-id4734 . -2) (undo-tree-id4735 . -2) (undo-tree-id4736 . -2) (undo-tree-id4737 . -2) (undo-tree-id4738 . -2) (undo-tree-id4739 . -2) (undo-tree-id4740 . -2) (undo-tree-id4741 . -2) (undo-tree-id4742 . -2) (undo-tree-id4743 . -2) (undo-tree-id4744 . -2) (undo-tree-id4745 . -2) (undo-tree-id4746 . -2) (undo-tree-id4747 . -2) (undo-tree-id4748 . -2) (undo-tree-id4749 . -2) (undo-tree-id4750 . -2) (undo-tree-id4751 . -2) (undo-tree-id4752 . -2) (undo-tree-id4753 . -2) (undo-tree-id4754 . -2) (undo-tree-id4755 . -2) (undo-tree-id4756 . -2) (undo-tree-id4757 . -2) (undo-tree-id4758 . -2) (undo-tree-id4759 . -2) (undo-tree-id4760 . -2) (undo-tree-id4761 . -2) (undo-tree-id4762 . -2) (undo-tree-id4763 . -2) (undo-tree-id4764 . -2) (undo-tree-id4765 . -2) (undo-tree-id4766 . -2) (undo-tree-id4767 . -2) (undo-tree-id4768 . -2) (undo-tree-id4769 . -2) (undo-tree-id4770 . -2) (undo-tree-id4771 . -2) (undo-tree-id4772 . -2) (undo-tree-id4773 . -2) (undo-tree-id4774 . -2) (undo-tree-id4775 . -2) (undo-tree-id4776 . -2) (undo-tree-id4777 . -2) (undo-tree-id4778 . -2) (undo-tree-id4779 . -2) (undo-tree-id4780 . -2) (undo-tree-id4781 . -2) (undo-tree-id4782 . -2) (undo-tree-id4783 . -2) (undo-tree-id4784 . -2) (undo-tree-id4785 . -2) (undo-tree-id4786 . -2) (undo-tree-id4787 . -2) (undo-tree-id4788 . -2) (undo-tree-id4789 . -2) (undo-tree-id4790 . -2) (undo-tree-id4791 . -2) (undo-tree-id4792 . -2) (undo-tree-id4793 . -2) (undo-tree-id4794 . -2) (undo-tree-id4795 . -2) (undo-tree-id4796 . -2) (undo-tree-id4797 . -2) (undo-tree-id4798 . -2) (undo-tree-id4799 . -2) (undo-tree-id4800 . -2) (undo-tree-id4801 . -2) (undo-tree-id4802 . -2) (undo-tree-id4803 . -2) (undo-tree-id4804 . -2) (undo-tree-id4805 . -2) (undo-tree-id4806 . -2) (undo-tree-id4807 . -2) (undo-tree-id4808 . -2) (undo-tree-id4809 . -2) (undo-tree-id4810 . -2) (undo-tree-id4811 . -2) (undo-tree-id4812 . -2) (undo-tree-id4813 . -2) (undo-tree-id4814 . -2) (undo-tree-id4815 . -2) (undo-tree-id4816 . -2) (undo-tree-id4817 . -2) (undo-tree-id4818 . -2) (undo-tree-id4819 . -2) (undo-tree-id4820 . -2) (undo-tree-id4821 . -2) (undo-tree-id4822 . -2) (undo-tree-id4823 . -2) (undo-tree-id4824 . -2) (undo-tree-id4825 . -2) (undo-tree-id4826 . -2) (undo-tree-id4827 . -2) (undo-tree-id4828 . -2) (undo-tree-id4829 . -2) (undo-tree-id4830 . -2) (undo-tree-id4831 . -2) (undo-tree-id4832 . -2) (undo-tree-id4833 . -2) (undo-tree-id4834 . -2) (undo-tree-id4835 . -2) (undo-tree-id4836 . -2) (undo-tree-id4837 . -2) (undo-tree-id4838 . -2) (undo-tree-id4839 . -2) (undo-tree-id4840 . -2) (undo-tree-id4841 . -2) (undo-tree-id4842 . -2) (undo-tree-id4843 . -2) (undo-tree-id4844 . -2) (undo-tree-id4845 . -2) (undo-tree-id4846 . -2) (undo-tree-id4847 . -2) (undo-tree-id4848 . -2) (undo-tree-id4849 . -2) (undo-tree-id4850 . -2) (undo-tree-id4851 . -2) (undo-tree-id4852 . -2) (undo-tree-id4853 . -2) (undo-tree-id4854 . -2) (undo-tree-id4855 . -2) (undo-tree-id4856 . -2) (undo-tree-id4857 . -2) (undo-tree-id4858 . -2) (undo-tree-id4859 . -2) (undo-tree-id4860 . -2) (undo-tree-id4861 . -2) (undo-tree-id4862 . -2) (undo-tree-id4863 . -2) (undo-tree-id4864 . -2) (undo-tree-id4865 . -2) (undo-tree-id4866 . -2) (undo-tree-id4867 . -2) (undo-tree-id4868 . -2) (undo-tree-id4869 . -2) (undo-tree-id4870 . -2) (undo-tree-id4871 . -2) (undo-tree-id4872 . -2) (undo-tree-id4873 . -2) (undo-tree-id4874 . -2) (undo-tree-id4875 . -2) (undo-tree-id4876 . -2) (undo-tree-id4877 . -2) (undo-tree-id4878 . -2) (undo-tree-id4879 . -2) (undo-tree-id4880 . -2) (undo-tree-id4881 . -2) (undo-tree-id4882 . -2) (undo-tree-id4883 . -2) (undo-tree-id4884 . -2) (undo-tree-id4885 . -2) (undo-tree-id4886 . -2) (undo-tree-id4887 . -2) (undo-tree-id4888 . -2) (undo-tree-id4889 . -2) (undo-tree-id4890 . -2) (undo-tree-id4891 . -2) (undo-tree-id4892 . -2) (undo-tree-id4893 . -2) (undo-tree-id4894 . -2) (undo-tree-id4895 . -2) (undo-tree-id4896 . -2) (undo-tree-id4897 . -2) (undo-tree-id4898 . -2) (undo-tree-id4899 . -2) (undo-tree-id4900 . -2) (undo-tree-id4901 . -2) (undo-tree-id4902 . -2) (undo-tree-id4903 . -2) (undo-tree-id4904 . -2) (undo-tree-id4905 . -2) (undo-tree-id4906 . -2) (undo-tree-id4907 . -2) (undo-tree-id4908 . -2) (undo-tree-id4909 . -2) (undo-tree-id4910 . -2) (undo-tree-id4911 . -2) (undo-tree-id4912 . -2) (undo-tree-id4913 . -2) (undo-tree-id4914 . -2) (undo-tree-id4915 . -2) (undo-tree-id4916 . -2) (undo-tree-id4917 . -2) (undo-tree-id4918 . -2) (undo-tree-id4919 . -2) (undo-tree-id4920 . -2) (undo-tree-id4921 . -2) (undo-tree-id4922 . -2) (undo-tree-id4923 . -2) (undo-tree-id4924 . -2) (undo-tree-id4925 . -2) (undo-tree-id4926 . -2) (undo-tree-id4927 . -2) (undo-tree-id4928 . -2) (undo-tree-id4929 . -2) (undo-tree-id4930 . -2) (undo-tree-id4931 . -2) (undo-tree-id4932 . -2) (undo-tree-id4933 . -2) (undo-tree-id4934 . -2) (undo-tree-id4935 . -2) (undo-tree-id4936 . -2) (undo-tree-id4937 . -2) (undo-tree-id4938 . -2) (undo-tree-id4939 . -2) (undo-tree-id4940 . -2) (undo-tree-id4941 . -2) (undo-tree-id4942 . -2) (undo-tree-id4943 . -2) (undo-tree-id4944 . -2) (undo-tree-id4945 . -2) (undo-tree-id4946 . -2) (undo-tree-id4947 . -2) (undo-tree-id4948 . -2) (undo-tree-id4949 . -2) (undo-tree-id4950 . -2) (undo-tree-id4951 . -2) (undo-tree-id4952 . -2) (undo-tree-id4953 . -2) (undo-tree-id4954 . -2) (undo-tree-id4955 . -2) (undo-tree-id4956 . -2) (undo-tree-id4957 . -2) (undo-tree-id4958 . -2) (undo-tree-id4959 . -2) (undo-tree-id4960 . -2) (undo-tree-id4961 . -2) (undo-tree-id4962 . -2) (undo-tree-id4963 . -2) (undo-tree-id4964 . -2) (undo-tree-id4965 . -2) (undo-tree-id4966 . -2) (undo-tree-id4967 . -2) (undo-tree-id4968 . -2) (undo-tree-id4969 . -2) (undo-tree-id4970 . -2) (undo-tree-id4971 . -2) (undo-tree-id4972 . -2) (undo-tree-id4973 . -2) (undo-tree-id4974 . -2) (undo-tree-id4975 . -2) (undo-tree-id4976 . -2) (undo-tree-id4977 . -2) (undo-tree-id4978 . -2) (undo-tree-id4979 . -2) (undo-tree-id4980 . -2) (undo-tree-id4981 . -2) (undo-tree-id4982 . -2) (undo-tree-id4983 . -2) (undo-tree-id4984 . -2) (undo-tree-id4985 . -2) (undo-tree-id4986 . -2) (undo-tree-id4987 . -2) (undo-tree-id4988 . -2) (undo-tree-id4989 . -2) (undo-tree-id4990 . -2) (undo-tree-id4991 . -2) (undo-tree-id4992 . -2) (undo-tree-id4993 . -2) (undo-tree-id4994 . -2) (undo-tree-id4995 . -2) (undo-tree-id4996 . -2) (undo-tree-id4997 . -2) (undo-tree-id4998 . -2) (undo-tree-id4999 . -2) (undo-tree-id5000 . -2) (undo-tree-id5001 . -2) (undo-tree-id5002 . -2) (undo-tree-id5003 . -2) (undo-tree-id5004 . -2) (undo-tree-id5005 . -2) (undo-tree-id5006 . -2) (undo-tree-id5007 . -2) (undo-tree-id5008 . -2) (undo-tree-id5009 . -2) (undo-tree-id5010 . -2) (undo-tree-id5011 . -2) (undo-tree-id5012 . -2) (undo-tree-id5013 . -2) (undo-tree-id5014 . -2) (undo-tree-id5015 . -2) (undo-tree-id5016 . -2) (undo-tree-id5017 . -2) (undo-tree-id5018 . -2) (undo-tree-id5019 . -2) (undo-tree-id5020 . -2) (undo-tree-id5021 . -2) (undo-tree-id5022 . -2) (undo-tree-id5023 . -2) (undo-tree-id5024 . -2) (undo-tree-id5025 . -2) (undo-tree-id5026 . -2) (undo-tree-id5027 . -2) (undo-tree-id5028 . -2) (undo-tree-id5029 . -2) (undo-tree-id5030 . -2) (undo-tree-id5031 . -2) (undo-tree-id5032 . -2) (undo-tree-id5033 . -2) (undo-tree-id5034 . -2) (undo-tree-id5035 . -2) (undo-tree-id5036 . -2) (undo-tree-id5037 . -2) (undo-tree-id5038 . -2) (undo-tree-id5039 . -2) (undo-tree-id5040 . -2) (undo-tree-id5041 . -2) (undo-tree-id5042 . -2) (undo-tree-id5043 . -2) (undo-tree-id5044 . -2) (undo-tree-id5045 . -2) (undo-tree-id5046 . -2) (undo-tree-id5047 . -2) (undo-tree-id5048 . -2) (undo-tree-id5049 . -2) (undo-tree-id5050 . -2) (undo-tree-id5051 . -2) (undo-tree-id5052 . -2) (undo-tree-id5053 . -2) (undo-tree-id5054 . -2) (undo-tree-id5055 . -2) (undo-tree-id5056 . -2) (undo-tree-id5057 . -2) (undo-tree-id5058 . -2) (undo-tree-id5059 . -2) (undo-tree-id5060 . -2) (undo-tree-id5061 . -2) (undo-tree-id5062 . -2) (undo-tree-id5063 . -2) (undo-tree-id5064 . -2) (undo-tree-id5065 . -2) (undo-tree-id5066 . -2) (undo-tree-id5067 . -2) (undo-tree-id5068 . -2) (undo-tree-id5069 . -2) (undo-tree-id5070 . -2) (undo-tree-id5071 . -2) (undo-tree-id5072 . -2) (undo-tree-id5073 . -2) (undo-tree-id5074 . -2) (undo-tree-id5075 . -2) (undo-tree-id5076 . -2) (undo-tree-id5077 . -2) (undo-tree-id5078 . -2) (undo-tree-id5079 . -2) (undo-tree-id5080 . -2) (undo-tree-id5081 . -2) (undo-tree-id5082 . -2) (undo-tree-id5083 . -2) (undo-tree-id5084 . -2) (undo-tree-id5085 . -2) (undo-tree-id5086 . -2) (undo-tree-id5087 . -2) (undo-tree-id5088 . -2) (undo-tree-id5089 . -2) (undo-tree-id5090 . -2) (undo-tree-id5091 . -2) (undo-tree-id5092 . -2) (undo-tree-id5093 . -2) (undo-tree-id5094 . -2) (undo-tree-id5095 . -2) (undo-tree-id5096 . -2) (undo-tree-id5097 . -2) (undo-tree-id5098 . -2) (undo-tree-id5099 . -2) (undo-tree-id5100 . -2) (undo-tree-id5101 . -2) (undo-tree-id5102 . -2) (undo-tree-id5103 . -2) (undo-tree-id5104 . -2) (undo-tree-id5105 . -2) (undo-tree-id5106 . -2) (undo-tree-id5107 . -2) (undo-tree-id5108 . -2) (undo-tree-id5109 . -2) (undo-tree-id5110 . -2) (undo-tree-id5111 . -2) (undo-tree-id5112 . -2) (undo-tree-id5113 . -2) (undo-tree-id5114 . -2) (undo-tree-id5115 . -2) (undo-tree-id5116 . -2) (undo-tree-id5117 . -2) (undo-tree-id5118 . -2) (undo-tree-id5119 . -2) (undo-tree-id5120 . -2) (undo-tree-id5121 . -2) (undo-tree-id5122 . -2) (undo-tree-id5123 . -2) (undo-tree-id5124 . -2) (undo-tree-id5125 . -2) (undo-tree-id5126 . -2) (undo-tree-id5127 . -2) (undo-tree-id5128 . -2) (undo-tree-id5129 . -2) (undo-tree-id5130 . -2) (undo-tree-id5131 . -2) (undo-tree-id5132 . -2) (undo-tree-id5133 . -2) (undo-tree-id5134 . -2) (undo-tree-id5135 . -2) (undo-tree-id5136 . -2) (undo-tree-id5137 . -2) (undo-tree-id5138 . -2) (undo-tree-id5139 . -2) (undo-tree-id5140 . -2) (undo-tree-id5141 . -2) (undo-tree-id5142 . -2) (undo-tree-id5143 . -2) (undo-tree-id5144 . -2) (undo-tree-id5145 . -2) (undo-tree-id5146 . -2) (undo-tree-id5147 . -2) (undo-tree-id5148 . -2) (undo-tree-id5149 . -2) (undo-tree-id5150 . -2) (undo-tree-id5151 . -2) (undo-tree-id5152 . -2) (undo-tree-id5153 . -2) (undo-tree-id5154 . -2) (undo-tree-id5155 . -2) (undo-tree-id5156 . -2) (undo-tree-id5157 . -2) (undo-tree-id5158 . -2) (undo-tree-id5159 . -2) (undo-tree-id5160 . -2) (undo-tree-id5161 . -2) (undo-tree-id5162 . -2) (undo-tree-id5163 . -2) (undo-tree-id5164 . -2) (undo-tree-id5165 . -2) (undo-tree-id5166 . -2) (undo-tree-id5167 . -2) (undo-tree-id5168 . -2) (undo-tree-id5169 . -2) (undo-tree-id5170 . -2) (undo-tree-id5171 . -2) (undo-tree-id5172 . -2) (undo-tree-id5173 . -2) (undo-tree-id5174 . -2) (undo-tree-id5175 . -2) (undo-tree-id5176 . -2) (undo-tree-id5177 . -2) (undo-tree-id5178 . -2) (undo-tree-id5179 . -2) (undo-tree-id5180 . -2) (undo-tree-id5181 . -2) (undo-tree-id5182 . -2) (undo-tree-id5183 . -2) (undo-tree-id5184 . -2) (undo-tree-id5185 . -2) (undo-tree-id5186 . -2) (undo-tree-id5187 . -2) (undo-tree-id5188 . -2) (undo-tree-id5189 . -2) (undo-tree-id5190 . -2) (undo-tree-id5191 . -2) (undo-tree-id5192 . -2) (undo-tree-id5193 . -2) (undo-tree-id5194 . -2) (undo-tree-id5195 . -2) (undo-tree-id5196 . -2) (undo-tree-id5197 . -2) (undo-tree-id5198 . -2) (undo-tree-id5199 . -2) (undo-tree-id5200 . -2) (undo-tree-id5201 . -2) (undo-tree-id5202 . -2) (undo-tree-id5203 . -2) (undo-tree-id5204 . -2) (undo-tree-id5205 . -2) (undo-tree-id5206 . -2) (undo-tree-id5207 . -2) (undo-tree-id5208 . -2) (undo-tree-id5209 . -2) (undo-tree-id5210 . -2) (undo-tree-id5211 . -2) (undo-tree-id5212 . -2) (undo-tree-id5213 . -2) (undo-tree-id5214 . -2) (undo-tree-id5215 . -2) (undo-tree-id5216 . -2) (undo-tree-id5217 . -2) (undo-tree-id5218 . -2) (undo-tree-id5219 . -2) (undo-tree-id5220 . -2) (undo-tree-id5221 . -2) (undo-tree-id5222 . -2) (undo-tree-id5223 . -2) (undo-tree-id5224 . -2) (undo-tree-id5225 . -2) (undo-tree-id5226 . -2) (undo-tree-id5227 . -2) (undo-tree-id5228 . -2) (undo-tree-id5229 . -2) (undo-tree-id5230 . -2) (undo-tree-id5231 . -2) (undo-tree-id5232 . -2) (undo-tree-id5233 . -2) (undo-tree-id5234 . -2) (undo-tree-id5235 . -2) (undo-tree-id5236 . -2) (undo-tree-id5237 . -2) (undo-tree-id5238 . -2) (undo-tree-id5239 . -2) (undo-tree-id5240 . -2) (undo-tree-id5241 . -2) (undo-tree-id5242 . -2) (undo-tree-id5243 . -2) (undo-tree-id5244 . -2) (undo-tree-id5245 . -2) (undo-tree-id5246 . -2) (undo-tree-id5247 . -2) (undo-tree-id5248 . -2) (undo-tree-id5249 . -2) (undo-tree-id5250 . -2) (undo-tree-id5251 . -2) (undo-tree-id5252 . -2) (undo-tree-id5253 . -2) (undo-tree-id5254 . -2) (undo-tree-id5255 . -2) (undo-tree-id5256 . -2) (undo-tree-id5257 . -2) (undo-tree-id5258 . -2) (undo-tree-id5259 . -2) (undo-tree-id5260 . -2) (undo-tree-id5261 . -2) (undo-tree-id5262 . -2) (undo-tree-id5263 . -2) (undo-tree-id5264 . -2) (undo-tree-id5265 . -2) (undo-tree-id5266 . -2) (undo-tree-id5267 . -2) (undo-tree-id5268 . -2) (undo-tree-id5269 . -2) (undo-tree-id5270 . -2) (undo-tree-id5271 . -2) (undo-tree-id5272 . -2) (undo-tree-id5273 . -2) (undo-tree-id5274 . -2) (undo-tree-id5275 . -2) (undo-tree-id5276 . -2) (undo-tree-id5277 . -2) (undo-tree-id5278 . -2) (undo-tree-id5279 . -2) (undo-tree-id5280 . -2) (undo-tree-id5281 . -2) (undo-tree-id5282 . -2) (undo-tree-id5283 . -2) (undo-tree-id5284 . -2) (undo-tree-id5285 . -2) (undo-tree-id5286 . -2) (undo-tree-id5287 . -2) (undo-tree-id5288 . -2) (undo-tree-id5289 . -2) (undo-tree-id5290 . -2) (undo-tree-id5291 . -2) (undo-tree-id5292 . -2) (undo-tree-id5293 . -2) (undo-tree-id5294 . -2) (undo-tree-id5295 . -2) (undo-tree-id5296 . -2) (undo-tree-id5297 . -2) (undo-tree-id5298 . -2) (undo-tree-id5299 . -2) (undo-tree-id5300 . -2) (undo-tree-id5301 . -2) (undo-tree-id5302 . -2) (undo-tree-id5303 . -2) (undo-tree-id5304 . -2) (undo-tree-id5305 . -2) (undo-tree-id5306 . -2) (undo-tree-id5307 . -2) (undo-tree-id5308 . -2) (undo-tree-id5309 . -2) (undo-tree-id5310 . -2) (undo-tree-id5311 . -2) (undo-tree-id5312 . -2) (undo-tree-id5313 . -2) (undo-tree-id5314 . -2) (undo-tree-id5315 . -2) (undo-tree-id5316 . -2) (undo-tree-id5317 . -2) (undo-tree-id5318 . -2) (undo-tree-id5319 . -2) (undo-tree-id5320 . -2) (undo-tree-id5321 . -2) (undo-tree-id5322 . -2) (undo-tree-id5323 . -2) (undo-tree-id5324 . -2) (undo-tree-id5325 . -2) (undo-tree-id5326 . -2) (undo-tree-id5327 . -2) (undo-tree-id5328 . -2) (undo-tree-id5329 . -2) (undo-tree-id5330 . -2) (undo-tree-id5331 . -2) (undo-tree-id5332 . -2) (undo-tree-id5333 . -2) (undo-tree-id5334 . -2) (undo-tree-id5335 . -2) (undo-tree-id5336 . -2) (undo-tree-id5337 . -2) (undo-tree-id5338 . -2) (undo-tree-id5339 . -2) (undo-tree-id5340 . -2) (undo-tree-id5341 . -2) (undo-tree-id5342 . -2) (undo-tree-id5343 . -2) (undo-tree-id5344 . -2) (undo-tree-id5345 . -2) (undo-tree-id5346 . -2) (undo-tree-id5347 . -2) (undo-tree-id5348 . -2) (undo-tree-id5349 . -2) (undo-tree-id5350 . -2) (undo-tree-id5351 . -2) (undo-tree-id5352 . -2) (undo-tree-id5353 . -2) (undo-tree-id5354 . -2) (undo-tree-id5355 . -2) (undo-tree-id5356 . -2) (undo-tree-id5357 . -2) (undo-tree-id5358 . -2) (undo-tree-id5359 . -2) (undo-tree-id5360 . -2) (undo-tree-id5361 . -2) (undo-tree-id5362 . -2) (undo-tree-id5363 . -2) (undo-tree-id5364 . -2) (undo-tree-id5365 . -2) (undo-tree-id5366 . -2) (undo-tree-id5367 . -2) (undo-tree-id5368 . -2) (undo-tree-id5369 . -2) (undo-tree-id5370 . -2) (undo-tree-id5371 . -2) (undo-tree-id5372 . -2) (undo-tree-id5373 . -2) (undo-tree-id5374 . -2) (undo-tree-id5375 . -2) (undo-tree-id5376 . -2) (undo-tree-id5377 . -2) (undo-tree-id5378 . -2) (undo-tree-id5379 . -2) (undo-tree-id5380 . -2) (undo-tree-id5381 . -2) (undo-tree-id5382 . -2) (undo-tree-id5383 . -2) (undo-tree-id5384 . -2) (undo-tree-id5385 . -2) (undo-tree-id5386 . -2) (undo-tree-id5387 . -2) (undo-tree-id5388 . -2) (undo-tree-id5389 . -2) (undo-tree-id5390 . -2) (undo-tree-id5391 . -2) (undo-tree-id5392 . -2) (undo-tree-id5393 . -2) (undo-tree-id5394 . -2) (undo-tree-id5395 . -2) (undo-tree-id5396 . -2) (undo-tree-id5397 . -2) (undo-tree-id5398 . -2) (undo-tree-id5399 . -2) (undo-tree-id5400 . -2) (undo-tree-id5401 . -2) (undo-tree-id5402 . -2) (undo-tree-id5403 . -2) (undo-tree-id5404 . -2) (undo-tree-id5405 . -2) (undo-tree-id5406 . -2) (undo-tree-id5407 . -2) (undo-tree-id5408 . -2) (undo-tree-id5409 . -2) (undo-tree-id5410 . -2) (undo-tree-id5411 . -2) (undo-tree-id5412 . -2) (undo-tree-id5413 . -2) (undo-tree-id5414 . -2) (undo-tree-id5415 . -2) (undo-tree-id5416 . -2) (undo-tree-id5417 . -2) (undo-tree-id5418 . -2) (undo-tree-id5419 . -2) (undo-tree-id5420 . -2) (undo-tree-id5421 . -2) (undo-tree-id5422 . -2) (undo-tree-id5423 . -2) (undo-tree-id5424 . -2) (undo-tree-id5425 . -2) (undo-tree-id5426 . -2) (undo-tree-id5427 . -2) (undo-tree-id5428 . -2) (undo-tree-id5429 . -2) (undo-tree-id5430 . -2) (undo-tree-id5431 . -2) (undo-tree-id5432 . -2) (undo-tree-id5433 . -2) (undo-tree-id5434 . -2) (undo-tree-id5435 . -2) (undo-tree-id5436 . -2) (undo-tree-id5437 . -2) (undo-tree-id5438 . -2) (undo-tree-id5439 . -2) (undo-tree-id5440 . -2) (undo-tree-id5441 . -2) (undo-tree-id5442 . -2) (undo-tree-id5443 . -2) (undo-tree-id5444 . -2) (undo-tree-id5445 . -2) (undo-tree-id5446 . -2) (undo-tree-id5447 . -2) (undo-tree-id5448 . -2) (undo-tree-id5449 . -2) (undo-tree-id5450 . -2) (undo-tree-id5451 . -2) (undo-tree-id5452 . -2) (undo-tree-id5453 . -2) (undo-tree-id5454 . -2) (undo-tree-id5455 . -2) (undo-tree-id5456 . -2) (undo-tree-id5457 . -2) (undo-tree-id5458 . -2) (undo-tree-id5459 . -2) (undo-tree-id5460 . -2) (undo-tree-id5461 . -2) (undo-tree-id5462 . -2) (undo-tree-id5463 . -2) (undo-tree-id5464 . -2) (undo-tree-id5465 . -2) (undo-tree-id5466 . -2) (undo-tree-id5467 . -2) (undo-tree-id5468 . -2) (undo-tree-id5469 . -2) (undo-tree-id5470 . -2) (undo-tree-id5471 . -2) (undo-tree-id5472 . -2) (undo-tree-id5473 . -2) (undo-tree-id5474 . -2) (undo-tree-id5475 . -2) (undo-tree-id5476 . -2) (undo-tree-id5477 . -2) (undo-tree-id5478 . -2) (undo-tree-id5479 . -2) (undo-tree-id5480 . -2) (undo-tree-id5481 . -2) (undo-tree-id5482 . -2) (undo-tree-id5483 . -2) (undo-tree-id5484 . -2) (undo-tree-id5485 . -2) (undo-tree-id5486 . -2) (undo-tree-id5487 . -2) (undo-tree-id5488 . -2) (undo-tree-id5489 . -2) (undo-tree-id5490 . -2) (undo-tree-id5491 . -2) (undo-tree-id5492 . -2) (undo-tree-id5493 . -2) (undo-tree-id5494 . -2) (undo-tree-id5495 . -2) (undo-tree-id5496 . -2) (undo-tree-id5497 . -2) (undo-tree-id5498 . -2) (undo-tree-id5499 . -2) (undo-tree-id5500 . -2) (undo-tree-id5501 . -2) (undo-tree-id5502 . -2) (undo-tree-id5503 . -2) (undo-tree-id5504 . -2) (undo-tree-id5505 . -2) (undo-tree-id5506 . -2) (undo-tree-id5507 . -2) (undo-tree-id5508 . -2) (undo-tree-id5509 . -2) (undo-tree-id5510 . -2) (undo-tree-id5511 . -2) (undo-tree-id5512 . -2) (undo-tree-id5513 . -2) (undo-tree-id5514 . -2) (undo-tree-id5515 . -2) (undo-tree-id5516 . -2) (undo-tree-id5517 . -2) (undo-tree-id5518 . -2) (undo-tree-id5519 . -2) (undo-tree-id5520 . -2) (undo-tree-id5521 . -2) (undo-tree-id5522 . -2) (undo-tree-id5523 . -2) (undo-tree-id5524 . -2) (undo-tree-id5525 . -2) (undo-tree-id5526 . -2) (undo-tree-id5527 . -2) (undo-tree-id5528 . -2) (undo-tree-id5529 . -2) (undo-tree-id5530 . -2) (undo-tree-id5531 . -2) (undo-tree-id5532 . -2) (undo-tree-id5533 . -2) (undo-tree-id5534 . -2) (undo-tree-id5535 . -2) (undo-tree-id5536 . -2) (undo-tree-id5537 . -2) (undo-tree-id5538 . -2) (undo-tree-id5539 . -2) (undo-tree-id5540 . -2) (undo-tree-id5541 . -2) (undo-tree-id5542 . -2) (undo-tree-id5543 . -2) (undo-tree-id5544 . -2) (undo-tree-id5545 . -2) (undo-tree-id5546 . -2) (undo-tree-id5547 . -2) (undo-tree-id5548 . -2) (undo-tree-id5549 . -2) (undo-tree-id5550 . -2) (undo-tree-id5551 . -2) (undo-tree-id5552 . -2) (undo-tree-id5553 . -2) (undo-tree-id5554 . -2) (undo-tree-id5555 . -2) (undo-tree-id5556 . -2) (undo-tree-id5557 . -2) (undo-tree-id5558 . -2) (undo-tree-id5559 . -2) (undo-tree-id5560 . -2) (undo-tree-id5561 . -2) (undo-tree-id5562 . -2) (undo-tree-id5563 . -2) (undo-tree-id5564 . -2) (undo-tree-id5565 . -2) (undo-tree-id5566 . -2) (undo-tree-id5567 . -2) (undo-tree-id5568 . -2) (undo-tree-id5569 . -2) (undo-tree-id5570 . -2) (undo-tree-id5571 . -2) (undo-tree-id5572 . -2) (undo-tree-id5573 . -2) (undo-tree-id5574 . -2) (undo-tree-id5575 . -2) (undo-tree-id5576 . -2) (undo-tree-id5577 . -2) (undo-tree-id5578 . -2) (undo-tree-id5579 . -2) (undo-tree-id5580 . -2) (undo-tree-id5581 . -2) (undo-tree-id5582 . -2) (undo-tree-id5583 . -2) (undo-tree-id5584 . -2) (undo-tree-id5585 . -2) (undo-tree-id5586 . -2) (undo-tree-id5587 . -2) (undo-tree-id5588 . -2) (undo-tree-id5589 . -2) (undo-tree-id5590 . -2) (undo-tree-id5591 . -2) (undo-tree-id5592 . -2) (undo-tree-id5593 . -2) (undo-tree-id5594 . -2) (undo-tree-id5595 . -2) (undo-tree-id5596 . -2) (undo-tree-id5597 . -2) (undo-tree-id5598 . -2) (undo-tree-id5599 . -2) (undo-tree-id5600 . -2) (undo-tree-id5601 . -2) (undo-tree-id5602 . -2) (undo-tree-id5603 . -2) (undo-tree-id5604 . -2) (undo-tree-id5605 . -2) (undo-tree-id5606 . -2) (undo-tree-id5607 . -2) (undo-tree-id5608 . -2) (undo-tree-id5609 . -2) (undo-tree-id5610 . -2) (undo-tree-id5611 . -2) (undo-tree-id5612 . -2) (undo-tree-id5613 . -2) (undo-tree-id5614 . -2) (undo-tree-id5615 . -2) (undo-tree-id5616 . -2) (undo-tree-id5617 . -2) (undo-tree-id5618 . -2) (undo-tree-id5619 . -2) (undo-tree-id5620 . -2) (undo-tree-id5621 . -2) (undo-tree-id5622 . -2) (undo-tree-id5623 . -2) (undo-tree-id5624 . -2) (undo-tree-id5625 . -2) (undo-tree-id5626 . -2) (undo-tree-id5627 . -2) (undo-tree-id5628 . -2) (undo-tree-id5629 . -2) (undo-tree-id5630 . -2) (undo-tree-id5631 . -2) (undo-tree-id5632 . -2) (undo-tree-id5633 . -2) (undo-tree-id5634 . -2) (undo-tree-id5635 . -2) (undo-tree-id5636 . -2) (undo-tree-id5637 . -2) (undo-tree-id5638 . -2) (undo-tree-id5639 . -2) (undo-tree-id5640 . -2) (undo-tree-id5641 . -2) (undo-tree-id5642 . -2) (undo-tree-id5643 . -2) (undo-tree-id5644 . -2) (undo-tree-id5645 . -2) (undo-tree-id5646 . -2) (undo-tree-id5647 . -2) (undo-tree-id5648 . -2) (undo-tree-id5649 . -2) (undo-tree-id5650 . -2) (undo-tree-id5651 . -2) (undo-tree-id5652 . -2) (undo-tree-id5653 . -2) (undo-tree-id5654 . -2) (undo-tree-id5655 . -2) (undo-tree-id5656 . -2) (undo-tree-id5657 . -2) (undo-tree-id5658 . -2) (undo-tree-id5659 . -2) (undo-tree-id5660 . -2) (undo-tree-id5661 . -2) (undo-tree-id5662 . -2) (undo-tree-id5663 . -2) (undo-tree-id5664 . -2) (undo-tree-id5665 . -2) (undo-tree-id5666 . -2) (undo-tree-id5667 . -2) (undo-tree-id5668 . -2) (undo-tree-id5669 . -2) (undo-tree-id5670 . -2) (undo-tree-id5671 . -2) (undo-tree-id5672 . -2) (undo-tree-id5673 . -2) (undo-tree-id5674 . -2) (undo-tree-id5675 . -2) (undo-tree-id5676 . -2) (undo-tree-id5677 . -2) (undo-tree-id5678 . -2) (undo-tree-id5679 . -2) (undo-tree-id5680 . -2) (undo-tree-id5681 . -2) (undo-tree-id5682 . -2) (undo-tree-id5683 . -2) (undo-tree-id5684 . -2) (undo-tree-id5685 . -2) (undo-tree-id5686 . -2) (undo-tree-id5687 . -2) (undo-tree-id5688 . -2) (undo-tree-id5689 . -2) (undo-tree-id5690 . -2) (undo-tree-id5691 . -2) (undo-tree-id5692 . -2) (undo-tree-id5693 . -2) (undo-tree-id5694 . -2) (undo-tree-id5695 . -2) (undo-tree-id5696 . -2) (undo-tree-id5697 . -2) (undo-tree-id5698 . -2) (undo-tree-id5699 . -2) (undo-tree-id5700 . -2) (undo-tree-id5701 . -2) (undo-tree-id5702 . -2) (undo-tree-id5703 . -2) (undo-tree-id5704 . -2) (undo-tree-id5705 . -2) (undo-tree-id5706 . -2) (undo-tree-id5707 . -2) (undo-tree-id5708 . -2) (undo-tree-id5709 . -2) (undo-tree-id5710 . -2) (undo-tree-id5711 . -2) (undo-tree-id5712 . -2) (undo-tree-id5713 . -2) (undo-tree-id5714 . -2) (undo-tree-id5715 . -2) (undo-tree-id5716 . -2) (undo-tree-id5717 . -2) (undo-tree-id5718 . -2) (undo-tree-id5719 . -2) (undo-tree-id5720 . -2) (undo-tree-id5721 . -2) (undo-tree-id5722 . -2) (undo-tree-id5723 . -2) (undo-tree-id5724 . -2) (undo-tree-id5725 . -2) (undo-tree-id5726 . -2) (undo-tree-id5727 . -2) (undo-tree-id5728 . -2) (undo-tree-id5729 . -2) (undo-tree-id5730 . -2) (undo-tree-id5731 . -2) (undo-tree-id5732 . -2) (undo-tree-id5733 . -2) (undo-tree-id5734 . -2) (undo-tree-id5735 . -2) (undo-tree-id5736 . -2) (undo-tree-id5737 . -2) (undo-tree-id5738 . -2) (undo-tree-id5739 . -2) (undo-tree-id5740 . -2) (undo-tree-id5741 . -2) (undo-tree-id5742 . -2) (undo-tree-id5743 . -2) (undo-tree-id5744 . -2) (undo-tree-id5745 . -2) (undo-tree-id5746 . -2) (undo-tree-id5747 . -2) (undo-tree-id5748 . -2) (undo-tree-id5749 . -2) (undo-tree-id5750 . -2) (undo-tree-id5751 . -2) (undo-tree-id5752 . -2) (undo-tree-id5753 . -2) (undo-tree-id5754 . -2) (undo-tree-id5755 . -2) (undo-tree-id5756 . -2) (undo-tree-id5757 . -2) (undo-tree-id5758 . -2) (undo-tree-id5759 . -2) (undo-tree-id5760 . -2) (undo-tree-id5761 . -2) (undo-tree-id5762 . -2) (undo-tree-id5763 . -2) (undo-tree-id5764 . -2) (undo-tree-id5765 . -2) (undo-tree-id5766 . -2) (undo-tree-id5767 . -2) (undo-tree-id5768 . -2) (undo-tree-id5769 . -2) (undo-tree-id5770 . -2) (undo-tree-id5771 . -2) (undo-tree-id5772 . -2) (undo-tree-id5773 . -2) (undo-tree-id5774 . -2) (undo-tree-id5775 . -2) (undo-tree-id5776 . -2) (undo-tree-id5777 . -2) (undo-tree-id5778 . -2) (undo-tree-id5779 . -2) (undo-tree-id5780 . -2) (undo-tree-id5781 . -2) (undo-tree-id5782 . -2) (undo-tree-id5783 . -2) (undo-tree-id5784 . -2) (undo-tree-id5785 . -2) (undo-tree-id5786 . -2) (undo-tree-id5787 . -2) (undo-tree-id5788 . -2) (undo-tree-id5789 . -2) (undo-tree-id5790 . -2) (undo-tree-id5791 . -2) (undo-tree-id5792 . -2) (undo-tree-id5793 . -2) (undo-tree-id5794 . -2) (undo-tree-id5795 . -2) (undo-tree-id5796 . -2) (undo-tree-id5797 . -2) (undo-tree-id5798 . -2) (undo-tree-id5799 . -2) (undo-tree-id5800 . -2) (undo-tree-id5801 . -2) (undo-tree-id5802 . -2) (undo-tree-id5803 . -2) (undo-tree-id5804 . -2) (undo-tree-id5805 . -2) (undo-tree-id5806 . -2) (undo-tree-id5807 . -2) (undo-tree-id5808 . -2) (undo-tree-id5809 . -2) (undo-tree-id5810 . -2) (undo-tree-id5811 . -2) (undo-tree-id5812 . -2) (undo-tree-id5813 . -2) (undo-tree-id5814 . -2) (undo-tree-id5815 . -2) (undo-tree-id5816 . -2) (undo-tree-id5817 . -2) (undo-tree-id5818 . -2) (undo-tree-id5819 . -2) (undo-tree-id5820 . -2) (undo-tree-id5821 . -2) (undo-tree-id5822 . -2) (undo-tree-id5823 . -2) (undo-tree-id5824 . -2) (undo-tree-id5825 . -2) (undo-tree-id5826 . -2) (undo-tree-id5827 . -2) (undo-tree-id5828 . -2) (undo-tree-id5829 . -2) (undo-tree-id5830 . -2) (undo-tree-id5831 . -2) (undo-tree-id5832 . -2) (undo-tree-id5833 . -2) (undo-tree-id5834 . -2) (undo-tree-id5835 . -2) (undo-tree-id5836 . -2) (undo-tree-id5837 . -2) (undo-tree-id5838 . -2) (undo-tree-id5839 . -2) (undo-tree-id5840 . -2) (undo-tree-id5841 . -2) (undo-tree-id5842 . -2) (undo-tree-id5843 . -2) (undo-tree-id5844 . -2) (undo-tree-id5845 . -2) (undo-tree-id5846 . -2) (undo-tree-id5847 . -2) (undo-tree-id5848 . -2) (undo-tree-id5849 . -2) (undo-tree-id5850 . -2) (undo-tree-id5851 . -2) (undo-tree-id5852 . -2) (undo-tree-id5853 . -2) (undo-tree-id5854 . -2) (undo-tree-id5855 . -2) (undo-tree-id5856 . -2) (undo-tree-id5857 . -2) (undo-tree-id5858 . -2) (undo-tree-id5859 . -2) (undo-tree-id5860 . -2) (undo-tree-id5861 . -2) (undo-tree-id5862 . -2) (undo-tree-id5863 . -2) (undo-tree-id5864 . -2) (undo-tree-id5865 . -2) (undo-tree-id5866 . -2) (undo-tree-id5867 . -2) (undo-tree-id5868 . -2) (undo-tree-id5869 . -2) (undo-tree-id5870 . -2) (undo-tree-id5871 . -2) (undo-tree-id5872 . -2) (undo-tree-id5873 . -2) (undo-tree-id5874 . -2) (undo-tree-id5875 . -2) (undo-tree-id5876 . -2) (undo-tree-id5877 . -2) (undo-tree-id5878 . -2) (undo-tree-id5879 . -2) (undo-tree-id5880 . -2) (undo-tree-id5881 . -2) (undo-tree-id5882 . -2) (undo-tree-id5883 . -2) (undo-tree-id5884 . -2) (undo-tree-id5885 . -2) (undo-tree-id5886 . -2) (undo-tree-id5887 . -2) (undo-tree-id5888 . -2) (undo-tree-id5889 . -2) (undo-tree-id5890 . -2) (undo-tree-id5891 . -2) (undo-tree-id5892 . -2) (undo-tree-id5893 . -2) (undo-tree-id5894 . -2) (undo-tree-id5895 . -2) (undo-tree-id5896 . -2) (undo-tree-id5897 . -2) (undo-tree-id5898 . -2) (undo-tree-id5899 . -2) (undo-tree-id5900 . -2) (undo-tree-id5901 . -2) (undo-tree-id5902 . -2) (undo-tree-id5903 . -2) (undo-tree-id5904 . -2) (undo-tree-id5905 . -2) (undo-tree-id5906 . -2) (undo-tree-id5907 . -2) (undo-tree-id5908 . -2) (undo-tree-id5909 . -2) (undo-tree-id5910 . -2) (undo-tree-id5911 . -2) (undo-tree-id5912 . -2) (undo-tree-id5913 . -2) (undo-tree-id5914 . -2) (undo-tree-id5915 . -2) (undo-tree-id5916 . -2) (undo-tree-id5917 . -2) (undo-tree-id5918 . -2) (undo-tree-id5919 . -2) (undo-tree-id5920 . -2) (undo-tree-id5921 . -2) (undo-tree-id5922 . -2) (undo-tree-id5923 . -2) (undo-tree-id5924 . -2) (undo-tree-id5925 . -2) (undo-tree-id5926 . -2) (undo-tree-id5927 . -2) (undo-tree-id5928 . -2) (undo-tree-id5929 . -2) (undo-tree-id5930 . -2) (undo-tree-id5931 . -2) (undo-tree-id5932 . -2) (undo-tree-id5933 . -2) (undo-tree-id5934 . -2) (undo-tree-id5935 . -2) (undo-tree-id5936 . -2) (undo-tree-id5937 . -2) (undo-tree-id5938 . -2) (undo-tree-id5939 . -2) (undo-tree-id5940 . -2) (undo-tree-id5941 . -2) (undo-tree-id5942 . -2) (undo-tree-id5943 . -2) (undo-tree-id5944 . -2) (undo-tree-id5945 . -2) (undo-tree-id5946 . -2) (undo-tree-id5947 . -2) (undo-tree-id5948 . -2) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -3) 238 (t 25774 24522 392792 393000)) nil (25774 24534 723941 351000) 0 nil])
([nil nil ((238 . 239)) nil (25774 24534 722784 234000) 0 nil])
([nil nil ((237 . 239) (#(" " 0 1 (wrap-prefix #("   " 0 2 (face org-indent) 2 3 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -237) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) 238 (237 . 238)) nil (25774 24534 722782 799000) 0 nil])
([nil nil ((#("•" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 239) (undo-tree-id4478 . 1) (undo-tree-id4479 . 1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1)) nil (25774 24534 722774 527000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 239) (undo-tree-id4467 . 1) (undo-tree-id4468 . 1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1)) nil (25774 24534 722745 72000) 0 nil])
([nil nil ((#("- Improving RNNs with an attention mechanism
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 45 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . 237) (undo-tree-id7641 . 43) (undo-tree-id7642 . -44) (undo-tree-id7643 . 43) (undo-tree-id7644 . -2) (undo-tree-id7645 . -2) (undo-tree-id7646 . -2) (undo-tree-id7647 . -2) (undo-tree-id7648 . -2) (undo-tree-id7649 . -2) (undo-tree-id7650 . -2) (undo-tree-id7651 . -2) (undo-tree-id7652 . -2) (undo-tree-id7653 . -2) (undo-tree-id7654 . -2) (undo-tree-id7655 . -2) (undo-tree-id7656 . -2) (undo-tree-id7657 . -2) (undo-tree-id7658 . -2) (undo-tree-id7659 . -2) (undo-tree-id7660 . -2) (undo-tree-id7661 . -2) (undo-tree-id7662 . -2) (undo-tree-id7663 . -2) (undo-tree-id7664 . -2) (undo-tree-id7665 . -2) (undo-tree-id7666 . -2) (undo-tree-id7667 . -2) (undo-tree-id7668 . -2) (undo-tree-id7669 . -2) (undo-tree-id7670 . -2) (undo-tree-id7671 . -2) (undo-tree-id7672 . -2) (undo-tree-id7673 . -2) (undo-tree-id7674 . -2) (undo-tree-id7675 . -2) (undo-tree-id7676 . -2) (undo-tree-id7677 . -2) (undo-tree-id7678 . -2) (undo-tree-id7679 . -2) (undo-tree-id7680 . -2) (undo-tree-id7681 . -2) (undo-tree-id7682 . -2) (undo-tree-id7683 . -2) (undo-tree-id7684 . -2) (undo-tree-id7685 . -2) (undo-tree-id7686 . -2) (undo-tree-id7687 . -2) (undo-tree-id7688 . -2) (undo-tree-id7689 . -2) (undo-tree-id7690 . -2) (undo-tree-id7691 . -2) (undo-tree-id7692 . -2) (undo-tree-id7693 . -2) (undo-tree-id7694 . -2) (undo-tree-id7695 . -2) (undo-tree-id7696 . -2) (undo-tree-id7697 . -2) (undo-tree-id7698 . -2) (undo-tree-id7699 . -2) (undo-tree-id7700 . -2) (undo-tree-id7701 . -45) 239 (t 25774 24534 733004 81000)) nil (25774 24551 955245 872000) 0 nil])
([nil nil ((#("•Introducing the stand-alone self-attention mechanism
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t) 1 54 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . 237) (undo-tree-id7620 . 54) (undo-tree-id7621 . -53) (undo-tree-id7622 . 54) (undo-tree-id7623 . -2) (undo-tree-id7624 . -2) (undo-tree-id7625 . -2) (undo-tree-id7626 . -2) (undo-tree-id7627 . -2) (undo-tree-id7628 . -2) (undo-tree-id7629 . -2) (undo-tree-id7630 . -2) (undo-tree-id7631 . -2) (undo-tree-id7632 . -2) (undo-tree-id7633 . -2) (undo-tree-id7634 . -2) (undo-tree-id7635 . -2) (undo-tree-id7636 . -2) (undo-tree-id7637 . -2) (undo-tree-id7638 . -2) (undo-tree-id7639 . -2) (undo-tree-id7640 . -54) 239) nil (25774 24551 955208 599000) 0 nil])
([nil nil ((#("•Understanding the original transformer architecture
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t) 1 53 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . 237) (undo-tree-id7599 . 53) (undo-tree-id7600 . -52) (undo-tree-id7601 . 53) (undo-tree-id7602 . -2) (undo-tree-id7603 . -2) (undo-tree-id7604 . -2) (undo-tree-id7605 . -2) (undo-tree-id7606 . -2) (undo-tree-id7607 . -2) (undo-tree-id7608 . -2) (undo-tree-id7609 . -2) (undo-tree-id7610 . -2) (undo-tree-id7611 . -2) (undo-tree-id7612 . -2) (undo-tree-id7613 . -2) (undo-tree-id7614 . -2) (undo-tree-id7615 . -2) (undo-tree-id7616 . -2) (undo-tree-id7617 . -2) (undo-tree-id7618 . -2) (undo-tree-id7619 . -53) 239) nil (25774 24551 955194 395000) 0 nil])
([nil nil ((#("•Comparing transformer-based large-scale language models
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t) 1 57 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . 237) (undo-tree-id7578 . 57) (undo-tree-id7579 . -56) (undo-tree-id7580 . 57) (undo-tree-id7581 . -2) (undo-tree-id7582 . -2) (undo-tree-id7583 . -2) (undo-tree-id7584 . -2) (undo-tree-id7585 . -2) (undo-tree-id7586 . -2) (undo-tree-id7587 . -2) (undo-tree-id7588 . -2) (undo-tree-id7589 . -2) (undo-tree-id7590 . -2) (undo-tree-id7591 . -2) (undo-tree-id7592 . -2) (undo-tree-id7593 . -2) (undo-tree-id7594 . -2) (undo-tree-id7595 . -2) (undo-tree-id7596 . -2) (undo-tree-id7597 . -2) (undo-tree-id7598 . -57) 239) nil (25774 24551 955180 874000) 0 nil])
([nil nil ((#("•Fine-tuning BERT for sentiment classification 
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t) 1 45 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t) 45 46 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t rear-nonsticky t) 46 47 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent))) 47 48 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . 237) (undo-tree-id7554 . 48) (undo-tree-id7555 . -47) (undo-tree-id7556 . -48) (undo-tree-id7557 . -45) (undo-tree-id7558 . -45) (undo-tree-id7559 . 48) (undo-tree-id7560 . -2) (undo-tree-id7561 . -2) (undo-tree-id7562 . -2) (undo-tree-id7563 . -2) (undo-tree-id7564 . -2) (undo-tree-id7565 . -2) (undo-tree-id7566 . -2) (undo-tree-id7567 . -2) (undo-tree-id7568 . -2) (undo-tree-id7569 . -2) (undo-tree-id7570 . -2) (undo-tree-id7571 . -2) (undo-tree-id7572 . -2) (undo-tree-id7573 . -2) (undo-tree-id7574 . -2) (undo-tree-id7575 . -2) (undo-tree-id7576 . -2) (undo-tree-id7577 . -48) 239) nil (25774 24551 955167 8000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -236) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) (undo-tree-id6852 . -1) (undo-tree-id6853 . -1) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . -1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (undo-tree-id7410 . -1) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) (undo-tree-id7417 . -1) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) (undo-tree-id7425 . -1) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) (undo-tree-id7429 . -1) (undo-tree-id7430 . -1) (undo-tree-id7431 . -1) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -1) (undo-tree-id7549 . -1) (undo-tree-id7550 . -1) (undo-tree-id7551 . -1) (undo-tree-id7552 . -1) (undo-tree-id7553 . -1) 237) nil (25774 24551 955095 77000) 0 nil])
([nil nil ((240 . 242) (239 . 240) (236 . 239) 208) nil (25774 24551 953822 311000) 0 nil])
([nil nil ((242 . 243)) nil (25774 24551 953816 840000) 0 nil])
([nil nil ((240 . 244) 241 (t 25774 24551 965312 788000)) nil (25774 24604 459790 732000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1179 . 1180) (nil fontified nil 1106 . 1180) (nil fontified nil 1003 . 1106) (nil fontified nil 907 . 1003) (nil fontified nil 859 . 907) (nil fontified nil 787 . 859) (nil fontified nil 682 . 787) (nil fontified nil 584 . 682) (nil fontified nil 476 . 584) (nil fontified nil 377 . 476) (nil fontified nil 280 . 377) (nil fontified nil 242 . 280) (242 . 1180) 241) nil (25774 24604 459788 958000) 0 nil])
([nil nil ((475 . 476) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . -475) (undo-tree-id7978 . -1) (376 . 377) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . -376) (undo-tree-id7979 . -1) (279 . 280) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . -279) (undo-tree-id7980 . -1) (undo-tree-id7981 . -1) (undo-tree-id7982 . -1) (undo-tree-id7983 . -1) (undo-tree-id7984 . -1) (undo-tree-id7985 . -1) (undo-tree-id7986 . -1) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1) (undo-tree-id7991 . -1) (undo-tree-id7992 . -1) (undo-tree-id7993 . -1) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) 242) nil (25774 24604 459784 58000) 0 nil])
([nil nil ((786 . 787) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . -786) (undo-tree-id7975 . -1) (681 . 682) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . -681) (undo-tree-id7976 . -1) (583 . 584) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t)) . -583) (undo-tree-id7977 . -1) 475) nil (25774 24604 459766 563000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) composition (0 1 [8226]))) . 240) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -1) (undo-tree-id7969 . -1) (undo-tree-id7970 . -1) (undo-tree-id7971 . -1) (undo-tree-id7972 . -1) (undo-tree-id7973 . -1) (undo-tree-id7974 . -1)) nil (25774 24604 459761 334000) 0 nil])
([nil nil ((240 . 243)) nil (25774 24604 459747 375000) 0 nil])
([nil nil ((281 . 860) (#(" In this section, we discuss the motivation behind developing an attention mechanism, which helps predictive models to focus on certain parts of the input sequence more than others, and how it was originally used in the context of RNNs. Note that this section provides a historical perspective explaining why the attention mechanism was developed. If individual mathematical details appear complicated, you can feel free to skip over them as they are not needed for the next section, explaining the self-at- tention mechanism for transformers, which is the focus of this chapter." 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 1 97 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 97 98 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 98 196 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 196 197 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 197 304 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 304 305 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 305 402 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 402 403 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 403 459 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 459 460 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 460 461 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 461 462 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 462 507 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 507 508 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 508 579 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . 281) (undo-tree-id7702 . -97) (undo-tree-id7703 . -97) (undo-tree-id7704 . -97) (undo-tree-id7705 . -97) (undo-tree-id7706 . -97) (undo-tree-id7707 . -97) (undo-tree-id7708 . -97) (undo-tree-id7709 . -97) (undo-tree-id7710 . -97) (undo-tree-id7711 . -97) (undo-tree-id7712 . -97) (undo-tree-id7713 . -97) (undo-tree-id7714 . -97) (undo-tree-id7715 . -97) (undo-tree-id7716 . -97) (undo-tree-id7717 . -97) (undo-tree-id7718 . -97) (undo-tree-id7719 . -196) (undo-tree-id7720 . -196) (undo-tree-id7721 . -196) (undo-tree-id7722 . -196) (undo-tree-id7723 . -196) (undo-tree-id7724 . -196) (undo-tree-id7725 . -196) (undo-tree-id7726 . -196) (undo-tree-id7727 . -196) (undo-tree-id7728 . -196) (undo-tree-id7729 . -196) (undo-tree-id7730 . -196) (undo-tree-id7731 . -196) (undo-tree-id7732 . -196) (undo-tree-id7733 . -196) (undo-tree-id7734 . -196) (undo-tree-id7735 . -196) (undo-tree-id7736 . -196) (undo-tree-id7737 . -196) (undo-tree-id7738 . -196) (undo-tree-id7739 . -196) (undo-tree-id7740 . -196) (undo-tree-id7741 . -304) (undo-tree-id7742 . -304) (undo-tree-id7743 . -304) (undo-tree-id7744 . -304) (undo-tree-id7745 . -304) (undo-tree-id7746 . -304) (undo-tree-id7747 . -304) (undo-tree-id7748 . -304) (undo-tree-id7749 . -304) (undo-tree-id7750 . -304) (undo-tree-id7751 . -304) (undo-tree-id7752 . -304) (undo-tree-id7753 . -304) (undo-tree-id7754 . -304) (undo-tree-id7755 . -304) (undo-tree-id7756 . -304) (undo-tree-id7757 . -304) (undo-tree-id7758 . -304) (undo-tree-id7759 . -304) (undo-tree-id7760 . -304) (undo-tree-id7761 . -304) (undo-tree-id7762 . -304) (undo-tree-id7763 . -402) (undo-tree-id7764 . -402) (undo-tree-id7765 . -402) (undo-tree-id7766 . -402) (undo-tree-id7767 . -402) (undo-tree-id7768 . -402) (undo-tree-id7769 . -402) (undo-tree-id7770 . -402) (undo-tree-id7771 . -402) (undo-tree-id7772 . -402) (undo-tree-id7773 . -402) (undo-tree-id7774 . -402) (undo-tree-id7775 . -402) (undo-tree-id7776 . -402) (undo-tree-id7777 . -402) (undo-tree-id7778 . -402) (undo-tree-id7779 . -402) (undo-tree-id7780 . -402) (undo-tree-id7781 . -402) (undo-tree-id7782 . -402) (undo-tree-id7783 . -402) (undo-tree-id7784 . -402) (undo-tree-id7785 . -402) (undo-tree-id7786 . -402) (undo-tree-id7787 . -402) (undo-tree-id7788 . -402) (undo-tree-id7789 . -402) (undo-tree-id7790 . -507) (undo-tree-id7791 . -507) (undo-tree-id7792 . -507) (undo-tree-id7793 . -507) (undo-tree-id7794 . -507) (undo-tree-id7795 . -507) (undo-tree-id7796 . -507) (undo-tree-id7797 . -507) (undo-tree-id7798 . -507) (undo-tree-id7799 . -507) (undo-tree-id7800 . -507) (undo-tree-id7801 . -507) (undo-tree-id7802 . -507) (undo-tree-id7803 . -507) (undo-tree-id7804 . -507) (undo-tree-id7805 . -507) (undo-tree-id7806 . -507) (undo-tree-id7807 . -507) (undo-tree-id7808 . -507) (undo-tree-id7809 . -507) (undo-tree-id7810 . -507) (undo-tree-id7811 . -507) (undo-tree-id7812 . -507) (undo-tree-id7813 . -507) (undo-tree-id7814 . -507) (undo-tree-id7815 . -507) (undo-tree-id7816 . -507) (undo-tree-id7817 . -507) (undo-tree-id7818 . -507) (undo-tree-id7819 . -507) (undo-tree-id7820 . -507) (undo-tree-id7821 . -568) (undo-tree-id7822 . -568) (undo-tree-id7823 . -568) (undo-tree-id7824 . -568) (undo-tree-id7825 . -568) (undo-tree-id7826 . -568) (undo-tree-id7827 . -568) (undo-tree-id7828 . -568) (undo-tree-id7829 . -568) (undo-tree-id7830 . -568) (undo-tree-id7831 . -568) (undo-tree-id7832 . -568) (undo-tree-id7833 . -568) (undo-tree-id7834 . -568) (undo-tree-id7835 . -568) (undo-tree-id7836 . -568) (undo-tree-id7837 . -568) (undo-tree-id7838 . -568) (undo-tree-id7839 . -568) (undo-tree-id7840 . -568) (undo-tree-id7841 . -568) (undo-tree-id7842 . -568) (undo-tree-id7843 . -568) (undo-tree-id7844 . -568) (undo-tree-id7845 . -568) (undo-tree-id7846 . -568) (undo-tree-id7847 . -568) (undo-tree-id7848 . -568) (undo-tree-id7849 . -568) (undo-tree-id7850 . -568) (undo-tree-id7851 . -568) (undo-tree-id7852 . -568) (undo-tree-id7853 . -568) (undo-tree-id7854 . -568) (undo-tree-id7855 . -568) (undo-tree-id7856 . -568) (undo-tree-id7857 . -568) (undo-tree-id7858 . -507) (undo-tree-id7859 . -507) (undo-tree-id7860 . -507) (undo-tree-id7861 . -507) (undo-tree-id7862 . -507) (undo-tree-id7863 . -507) (undo-tree-id7864 . -507) (undo-tree-id7865 . -507) (undo-tree-id7866 . -507) (undo-tree-id7867 . -507) (undo-tree-id7868 . -507) (undo-tree-id7869 . -442) (undo-tree-id7870 . -442) (undo-tree-id7871 . -442) (undo-tree-id7872 . -442) (undo-tree-id7873 . -442) (undo-tree-id7874 . -442) (undo-tree-id7875 . -442) (undo-tree-id7876 . -442) (undo-tree-id7877 . -442) (undo-tree-id7878 . -442) (undo-tree-id7879 . -442) (undo-tree-id7880 . -385) (undo-tree-id7881 . -385) (undo-tree-id7882 . -385) (undo-tree-id7883 . -385) (undo-tree-id7884 . -385) (undo-tree-id7885 . -385) (undo-tree-id7886 . -385) (undo-tree-id7887 . -385) (undo-tree-id7888 . -385) (undo-tree-id7889 . -385) (undo-tree-id7890 . -385) (undo-tree-id7891 . -323) (undo-tree-id7892 . -323) (undo-tree-id7893 . -323) (undo-tree-id7894 . -323) (undo-tree-id7895 . -323) (undo-tree-id7896 . -323) (undo-tree-id7897 . -323) (undo-tree-id7898 . -323) (undo-tree-id7899 . -323) (undo-tree-id7900 . -323) (undo-tree-id7901 . -323) (undo-tree-id7902 . -265) (undo-tree-id7903 . -265) (undo-tree-id7904 . -265) (undo-tree-id7905 . -265) (undo-tree-id7906 . -265) (undo-tree-id7907 . -265) (undo-tree-id7908 . -265) (undo-tree-id7909 . -265) (undo-tree-id7910 . -265) (undo-tree-id7911 . -265) (undo-tree-id7912 . -265) (undo-tree-id7913 . -201) (undo-tree-id7914 . -201) (undo-tree-id7915 . -201) (undo-tree-id7916 . -201) (undo-tree-id7917 . -201) (undo-tree-id7918 . -201) (undo-tree-id7919 . -201) (undo-tree-id7920 . -201) (undo-tree-id7921 . -201) (undo-tree-id7922 . -201) (undo-tree-id7923 . -201) (undo-tree-id7924 . -138) (undo-tree-id7925 . -138) (undo-tree-id7926 . -138) (undo-tree-id7927 . -138) (undo-tree-id7928 . -138) (undo-tree-id7929 . -138) (undo-tree-id7930 . -138) (undo-tree-id7931 . -138) (undo-tree-id7932 . -138) (undo-tree-id7933 . -138) (undo-tree-id7934 . -138) (undo-tree-id7935 . -73) (undo-tree-id7936 . -73) (undo-tree-id7937 . -73) (undo-tree-id7938 . -73) (undo-tree-id7939 . -73) (undo-tree-id7940 . -73) (undo-tree-id7941 . -73) (undo-tree-id7942 . -73) (undo-tree-id7943 . -73) (undo-tree-id7944 . -73) (undo-tree-id7945 . -73) (undo-tree-id7946 . -15) (undo-tree-id7947 . -15) (undo-tree-id7948 . -15) (undo-tree-id7949 . -15) (undo-tree-id7950 . -15) (undo-tree-id7951 . -15) (undo-tree-id7952 . -15) (undo-tree-id7953 . -15) (undo-tree-id7954 . -15) (undo-tree-id7955 . -15) (undo-tree-id7956 . -15)) nil (25774 24604 459733 955000) 0 nil])
([nil nil ((282 . 284)) nil (25774 24604 459420 361000) 0 nil])
([nil nil ((863 . 864) (863 . 866) (t 25774 24604 466337 988000)) nil (25774 24615 455387 750000) 0 nil])
([nil nil ((1113 . 1114) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1113) (undo-tree-id7997 . -1) (1010 . 1011) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1010) (undo-tree-id7998 . -1) 915) nil (25774 24615 455382 860000) 0 nil])
([nil nil ((#("In this section, we discuss the " 0 32 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 284) (undo-tree-id7999 . 32) (undo-tree-id8000 . -31) (undo-tree-id8001 . -31) (undo-tree-id8002 . -31) (undo-tree-id8003 . -31) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -6) (undo-tree-id8026 . -6) (undo-tree-id8027 . -6) (undo-tree-id8028 . -6) (undo-tree-id8029 . -6) (undo-tree-id8030 . -6) (undo-tree-id8031 . -6) (undo-tree-id8032 . -6) (undo-tree-id8033 . -6) (undo-tree-id8034 . -6) (undo-tree-id8035 . -6) (undo-tree-id8036 . -6) (undo-tree-id8037 . -6) (undo-tree-id8038 . -6) (undo-tree-id8039 . -6) (undo-tree-id8040 . -6) (undo-tree-id8041 . -6) (undo-tree-id8042 . -6) (undo-tree-id8043 . -6) (undo-tree-id8044 . -6) (undo-tree-id8045 . -6) (undo-tree-id8046 . -14) (undo-tree-id8047 . -14) (undo-tree-id8048 . -14) (undo-tree-id8049 . -14) (undo-tree-id8050 . -14) (undo-tree-id8051 . -14) (undo-tree-id8052 . -14) (undo-tree-id8053 . -14) (undo-tree-id8054 . -14) (undo-tree-id8055 . -14) (undo-tree-id8056 . -14) (undo-tree-id8057 . -14) (undo-tree-id8058 . -14) (undo-tree-id8059 . -14) (undo-tree-id8060 . -14) (undo-tree-id8061 . -14) (undo-tree-id8062 . -14) (undo-tree-id8063 . -14) (undo-tree-id8064 . -14) (undo-tree-id8065 . -14) (undo-tree-id8066 . -14) (undo-tree-id8067 . -15) (undo-tree-id8068 . -15) (undo-tree-id8069 . -15) (undo-tree-id8070 . -15) (undo-tree-id8071 . -15) (undo-tree-id8072 . -15) (undo-tree-id8073 . -15) (undo-tree-id8074 . -15) (undo-tree-id8075 . -15) (undo-tree-id8076 . -15) (undo-tree-id8077 . -15) (undo-tree-id8078 . -15) (undo-tree-id8079 . -15) (undo-tree-id8080 . -15) (undo-tree-id8081 . -15) (undo-tree-id8082 . -15) (undo-tree-id8083 . -15) (undo-tree-id8084 . -15) (undo-tree-id8085 . -15) (undo-tree-id8086 . -15) (undo-tree-id8087 . -15) (undo-tree-id8088 . -18) (undo-tree-id8089 . -18) (undo-tree-id8090 . -18) (undo-tree-id8091 . -18) (undo-tree-id8092 . -18) (undo-tree-id8093 . -18) (undo-tree-id8094 . -18) (undo-tree-id8095 . -18) (undo-tree-id8096 . -18) (undo-tree-id8097 . -18) (undo-tree-id8098 . -18) (undo-tree-id8099 . -18) (undo-tree-id8100 . -18) (undo-tree-id8101 . -18) (undo-tree-id8102 . -18) (undo-tree-id8103 . -18) (undo-tree-id8104 . -18) (undo-tree-id8105 . -18) (undo-tree-id8106 . -18) (undo-tree-id8107 . -18) (undo-tree-id8108 . -18) (undo-tree-id8109 . -26) (undo-tree-id8110 . -26) (undo-tree-id8111 . -26) (undo-tree-id8112 . -26) (undo-tree-id8113 . -26) (undo-tree-id8114 . -26) (undo-tree-id8115 . -26) (undo-tree-id8116 . -26) (undo-tree-id8117 . -26) (undo-tree-id8118 . -26) (undo-tree-id8119 . -26) (undo-tree-id8120 . -26) (undo-tree-id8121 . -26) (undo-tree-id8122 . -26) (undo-tree-id8123 . -26) (undo-tree-id8124 . -26) (undo-tree-id8125 . -26) (undo-tree-id8126 . -26) (undo-tree-id8127 . -26) (undo-tree-id8128 . -26) (undo-tree-id8129 . -26) (undo-tree-id8130 . -30) (undo-tree-id8131 . -30) (undo-tree-id8132 . -30) (undo-tree-id8133 . -30) (undo-tree-id8134 . -30) (undo-tree-id8135 . -30) (undo-tree-id8136 . -30) (undo-tree-id8137 . -30) (undo-tree-id8138 . -30) (undo-tree-id8139 . -30) (undo-tree-id8140 . -30) (undo-tree-id8141 . -30) (undo-tree-id8142 . -30) (undo-tree-id8143 . -30) (undo-tree-id8144 . -30) (undo-tree-id8145 . -30) (undo-tree-id8146 . -30) (undo-tree-id8147 . -30) (undo-tree-id8148 . -30) (undo-tree-id8149 . -30) (undo-tree-id8150 . -30) (undo-tree-id8151 . -32) (undo-tree-id8152 . -31) (undo-tree-id8153 . -1) (undo-tree-id8154 . -1) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (undo-tree-id8159 . -1) (undo-tree-id8160 . -1) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -6) (undo-tree-id8175 . -6) (undo-tree-id8176 . -6) (undo-tree-id8177 . -6) (undo-tree-id8178 . -6) (undo-tree-id8179 . -6) (undo-tree-id8180 . -6) (undo-tree-id8181 . -6) (undo-tree-id8182 . -6) (undo-tree-id8183 . -6) (undo-tree-id8184 . -6) (undo-tree-id8185 . -6) (undo-tree-id8186 . -6) (undo-tree-id8187 . -6) (undo-tree-id8188 . -6) (undo-tree-id8189 . -6) (undo-tree-id8190 . -6) (undo-tree-id8191 . -6) (undo-tree-id8192 . -6) (undo-tree-id8193 . -6) (undo-tree-id8194 . -6) (undo-tree-id8195 . -14) (undo-tree-id8196 . -14) (undo-tree-id8197 . -14) (undo-tree-id8198 . -14) (undo-tree-id8199 . -14) (undo-tree-id8200 . -14) (undo-tree-id8201 . -14) (undo-tree-id8202 . -14) (undo-tree-id8203 . -14) (undo-tree-id8204 . -14) (undo-tree-id8205 . -14) (undo-tree-id8206 . -14) (undo-tree-id8207 . -14) (undo-tree-id8208 . -14) (undo-tree-id8209 . -14) (undo-tree-id8210 . -14) (undo-tree-id8211 . -14) (undo-tree-id8212 . -14) (undo-tree-id8213 . -14) (undo-tree-id8214 . -14) (undo-tree-id8215 . -14) (undo-tree-id8216 . -15) (undo-tree-id8217 . -15) (undo-tree-id8218 . -15) (undo-tree-id8219 . -15) (undo-tree-id8220 . -15) (undo-tree-id8221 . -15) (undo-tree-id8222 . -15) (undo-tree-id8223 . -15) (undo-tree-id8224 . -15) (undo-tree-id8225 . -15) (undo-tree-id8226 . -15) (undo-tree-id8227 . -15) (undo-tree-id8228 . -15) (undo-tree-id8229 . -15) (undo-tree-id8230 . -15) (undo-tree-id8231 . -15) (undo-tree-id8232 . -15) (undo-tree-id8233 . -15) (undo-tree-id8234 . -15) (undo-tree-id8235 . -15) (undo-tree-id8236 . -15) (undo-tree-id8237 . -18) (undo-tree-id8238 . -18) (undo-tree-id8239 . -18) (undo-tree-id8240 . -18) (undo-tree-id8241 . -18) (undo-tree-id8242 . -18) (undo-tree-id8243 . -18) (undo-tree-id8244 . -18) (undo-tree-id8245 . -18) (undo-tree-id8246 . -18) (undo-tree-id8247 . -18) (undo-tree-id8248 . -18) (undo-tree-id8249 . -18) (undo-tree-id8250 . -18) (undo-tree-id8251 . -18) (undo-tree-id8252 . -18) (undo-tree-id8253 . -18) (undo-tree-id8254 . -18) (undo-tree-id8255 . -18) (undo-tree-id8256 . -18) (undo-tree-id8257 . -18) (undo-tree-id8258 . -26) (undo-tree-id8259 . -26) (undo-tree-id8260 . -26) (undo-tree-id8261 . -26) (undo-tree-id8262 . -26) (undo-tree-id8263 . -26) (undo-tree-id8264 . -26) (undo-tree-id8265 . -26) (undo-tree-id8266 . -26) (undo-tree-id8267 . -26) (undo-tree-id8268 . -26) (undo-tree-id8269 . -26) (undo-tree-id8270 . -26) (undo-tree-id8271 . -26) (undo-tree-id8272 . -26) (undo-tree-id8273 . -26) (undo-tree-id8274 . -26) (undo-tree-id8275 . -26) (undo-tree-id8276 . -26) (undo-tree-id8277 . -26) (undo-tree-id8278 . -26) (undo-tree-id8279 . -26) (undo-tree-id8280 . -26) (undo-tree-id8281 . -26) (undo-tree-id8282 . -26) (undo-tree-id8283 . -26) (undo-tree-id8284 . -27) (undo-tree-id8285 . -27) (undo-tree-id8286 . -27) (undo-tree-id8287 . -27) (undo-tree-id8288 . -27) (undo-tree-id8289 . -27) (undo-tree-id8290 . -27) (undo-tree-id8291 . -27) (undo-tree-id8292 . -27) (undo-tree-id8293 . -27) (undo-tree-id8294 . -27) (undo-tree-id8295 . -27) (undo-tree-id8296 . -27) (undo-tree-id8297 . -27) (undo-tree-id8298 . -27) (undo-tree-id8299 . -27) (undo-tree-id8300 . -27) (undo-tree-id8301 . -27) (undo-tree-id8302 . -27) (undo-tree-id8303 . -27) (undo-tree-id8304 . -27) (undo-tree-id8305 . -28) (undo-tree-id8306 . -28) (undo-tree-id8307 . -28) (undo-tree-id8308 . -28) (undo-tree-id8309 . -28) (undo-tree-id8310 . -28) (undo-tree-id8311 . -28) (undo-tree-id8312 . -28) (undo-tree-id8313 . -28) (undo-tree-id8314 . -28) (undo-tree-id8315 . -28) (undo-tree-id8316 . -28) (undo-tree-id8317 . -28) (undo-tree-id8318 . -28) (undo-tree-id8319 . -28) (undo-tree-id8320 . -28) (undo-tree-id8321 . -28) (undo-tree-id8322 . -28) (undo-tree-id8323 . -28) (undo-tree-id8324 . -28) (undo-tree-id8325 . -28) (undo-tree-id8326 . -29) (undo-tree-id8327 . -29) (undo-tree-id8328 . -29) (undo-tree-id8329 . -29) (undo-tree-id8330 . -29) (undo-tree-id8331 . -29) (undo-tree-id8332 . -29) (undo-tree-id8333 . -29) (undo-tree-id8334 . -29) (undo-tree-id8335 . -29) (undo-tree-id8336 . -29) (undo-tree-id8337 . -29) (undo-tree-id8338 . -29) (undo-tree-id8339 . -29) (undo-tree-id8340 . -29) (undo-tree-id8341 . -29) (undo-tree-id8342 . -29) (undo-tree-id8343 . -29) (undo-tree-id8344 . -29) (undo-tree-id8345 . -29) (undo-tree-id8346 . -29) (undo-tree-id8347 . -30) (undo-tree-id8348 . -30) (undo-tree-id8349 . -30) (undo-tree-id8350 . -30) (undo-tree-id8351 . -30) (undo-tree-id8352 . -30) (undo-tree-id8353 . -30) (undo-tree-id8354 . -30) (undo-tree-id8355 . -30) (undo-tree-id8356 . -30) (undo-tree-id8357 . -30) (undo-tree-id8358 . -30) (undo-tree-id8359 . -30) (undo-tree-id8360 . -30) (undo-tree-id8361 . -30) (undo-tree-id8362 . -30) (undo-tree-id8363 . -30) (undo-tree-id8364 . -30) (undo-tree-id8365 . -30) (undo-tree-id8366 . -30) (undo-tree-id8367 . -30) (undo-tree-id8368 . -31) (undo-tree-id8369 . -31) (undo-tree-id8370 . -31) (undo-tree-id8371 . -31) (undo-tree-id8372 . -31) (undo-tree-id8373 . -31) (undo-tree-id8374 . -31) (undo-tree-id8375 . -31) (undo-tree-id8376 . -31) (undo-tree-id8377 . -31) (undo-tree-id8378 . -31) (undo-tree-id8379 . -31) (undo-tree-id8380 . -31) (undo-tree-id8381 . -31) (undo-tree-id8382 . -31) (undo-tree-id8383 . -31) (undo-tree-id8384 . -31) (undo-tree-id8385 . -31) (undo-tree-id8386 . -31) (undo-tree-id8387 . -31) (undo-tree-id8388 . -31) (undo-tree-id8389 . -31) (undo-tree-id8390 . -32) 315 (t 25774 24615 462567 239000)) nil (25774 24656 834339 816000) 0 nil])
([nil nil ((284 . 285) (#("m" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 284)) nil (25774 24656 831462 702000) 0 nil])
([nil nil ((282 . 831) (#("- which helps predictive models to focus on certain parts of the input sequence more than others, and how it was originally used in the context of RNNs. Note that this section provides a historical perspective explaining why the attention mechanism was developed. If individual mathematical details appear complicated, you can feel free to skip over them as they are not needed for the next section, explaining the self-at- tention mechanism for transformers, which is the focus of this chapter.
- Motivation behind developing an attention mechanism" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 13 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 13 14 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 14 112 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 112 113 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 113 220 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 220 221 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 221 318 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 318 319 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 319 375 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 375 376 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 376 377 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 377 378 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 378 415 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 415 416 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 416 423 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 423 424 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 424 447 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 447 448 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 448 495 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 495 496 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 496 497 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil composition (0 1 [8226])) 497 498 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 498 549 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 282) (undo-tree-id8494 . 51) (undo-tree-id8495 . -549) (undo-tree-id8496 . -549) (undo-tree-id8497 . -498) (undo-tree-id8498 . -498) (undo-tree-id8499 . 50) (undo-tree-id8500 . -498) (undo-tree-id8501 . -498) (undo-tree-id8502 . -498) (undo-tree-id8503 . -498) (undo-tree-id8504 . -498) (undo-tree-id8505 . -498) (undo-tree-id8506 . -498) (undo-tree-id8507 . -498) (undo-tree-id8508 . -498) (undo-tree-id8509 . -498) (undo-tree-id8510 . -498) (undo-tree-id8511 . -498) (undo-tree-id8512 . -498) (undo-tree-id8513 . -498) (undo-tree-id8514 . -498) (undo-tree-id8515 . -498) (undo-tree-id8516 . -498) (undo-tree-id8517 . -498) (undo-tree-id8518 . -498) (undo-tree-id8519 . -498) (undo-tree-id8520 . -498) (undo-tree-id8521 . -498) (undo-tree-id8522 . -498) (undo-tree-id8523 . -498) (undo-tree-id8524 . -498) (undo-tree-id8525 . -498) (undo-tree-id8526 . -498) (undo-tree-id8527 . -498) (undo-tree-id8528 . -498) (undo-tree-id8529 . -498) (undo-tree-id8530 . -498) (undo-tree-id8531 . -498) (undo-tree-id8532 . -498) (undo-tree-id8533 . -498) (undo-tree-id8534 . -498) (undo-tree-id8535 . -498) (undo-tree-id8536 . -498) (undo-tree-id8537 . -498) (undo-tree-id8538 . -498) (undo-tree-id8539 . -498) (undo-tree-id8540 . -498) (undo-tree-id8541 . -498) (undo-tree-id8542 . -498) (undo-tree-id8543 . -498) (undo-tree-id8544 . -498) (undo-tree-id8545 . -498) (undo-tree-id8546 . -498) (undo-tree-id8547 . -498) (undo-tree-id8548 . -498) (undo-tree-id8549 . -498) (undo-tree-id8550 . -498) (undo-tree-id8551 . -498) (undo-tree-id8552 . -498) (undo-tree-id8553 . -498) (undo-tree-id8554 . -498) (undo-tree-id8555 . -498) (undo-tree-id8556 . -498) (undo-tree-id8557 . -498) (undo-tree-id8558 . -498) (undo-tree-id8559 . -498) (undo-tree-id8560 . -498) (undo-tree-id8561 . -498) (undo-tree-id8562 . -498) (undo-tree-id8563 . -498) (undo-tree-id8564 . -498) (undo-tree-id8565 . -498) (undo-tree-id8566 . -498) (undo-tree-id8567 . -498) (undo-tree-id8568 . -498) (undo-tree-id8569 . -498) (undo-tree-id8570 . -498) (undo-tree-id8571 . -498) (undo-tree-id8572 . -498) (undo-tree-id8573 . -498) (undo-tree-id8574 . -498) (undo-tree-id8575 . -498) (undo-tree-id8576 . -498) (undo-tree-id8577 . -498) (undo-tree-id8578 . -498) (undo-tree-id8579 . -498) (undo-tree-id8580 . -498) (undo-tree-id8581 . -498) (undo-tree-id8582 . -498) (undo-tree-id8583 . -498) (undo-tree-id8584 . -498) (undo-tree-id8585 . -498) (undo-tree-id8586 . -498) (undo-tree-id8587 . -498) (undo-tree-id8588 . -498) (undo-tree-id8589 . -498) (undo-tree-id8590 . -498) (undo-tree-id8591 . -498) (undo-tree-id8592 . -498) (undo-tree-id8593 . -498) (undo-tree-id8594 . -498) (undo-tree-id8595 . -498) (undo-tree-id8596 . -498) (undo-tree-id8597 . -498) (undo-tree-id8598 . -498) (undo-tree-id8599 . -498) (undo-tree-id8600 . -498) (undo-tree-id8601 . -498) (undo-tree-id8602 . -498) (undo-tree-id8603 . -498) (undo-tree-id8604 . -498) (undo-tree-id8605 . -498) (undo-tree-id8606 . -498) (undo-tree-id8607 . -498) (undo-tree-id8608 . -498) (undo-tree-id8609 . -498) (undo-tree-id8610 . -498) (undo-tree-id8611 . -498) (undo-tree-id8612 . -498) (undo-tree-id8613 . -498) (undo-tree-id8614 . -498) (undo-tree-id8615 . -498) (undo-tree-id8616 . -498) (undo-tree-id8617 . -498) (undo-tree-id8618 . -498) (undo-tree-id8619 . -498) (undo-tree-id8620 . -498) (undo-tree-id8621 . -498) (undo-tree-id8622 . -498) (undo-tree-id8623 . -498) (undo-tree-id8624 . -498) (undo-tree-id8625 . -498) (undo-tree-id8626 . -498) (undo-tree-id8627 . -498) (undo-tree-id8628 . -498) (undo-tree-id8629 . -498) (undo-tree-id8630 . -498) (undo-tree-id8631 . -498) (undo-tree-id8632 . -498) (undo-tree-id8633 . -498) (undo-tree-id8634 . -498) (undo-tree-id8635 . -498) (undo-tree-id8636 . -498) (undo-tree-id8637 . -498) (undo-tree-id8638 . -498) (undo-tree-id8639 . -498) (undo-tree-id8640 . -498) (undo-tree-id8641 . -498) (undo-tree-id8642 . -498) (undo-tree-id8643 . -498) (undo-tree-id8644 . -498) (undo-tree-id8645 . -498) (undo-tree-id8646 . -498) (undo-tree-id8647 . -498) (undo-tree-id8648 . -498) (undo-tree-id8649 . -498) (undo-tree-id8650 . -498) (undo-tree-id8651 . -498) (undo-tree-id8652 . -498) (undo-tree-id8653 . -498) (undo-tree-id8654 . -498) (undo-tree-id8655 . -498) (undo-tree-id8656 . -498) (undo-tree-id8657 . -498) (undo-tree-id8658 . -498) (undo-tree-id8659 . -498) (undo-tree-id8660 . -498) (undo-tree-id8661 . -498) (undo-tree-id8662 . -498) (undo-tree-id8663 . -498) (undo-tree-id8664 . -498) (undo-tree-id8665 . -498) (undo-tree-id8666 . -498) (undo-tree-id8667 . -498) (undo-tree-id8668 . -498) (undo-tree-id8669 . -498) (undo-tree-id8670 . -498) (undo-tree-id8671 . -498) (undo-tree-id8672 . -498) (undo-tree-id8673 . -498) (undo-tree-id8674 . -498) (undo-tree-id8675 . -498) (undo-tree-id8676 . -498) (undo-tree-id8677 . -498) (undo-tree-id8678 . -498) (undo-tree-id8679 . -498) (undo-tree-id8680 . -498) (undo-tree-id8681 . -498) (undo-tree-id8682 . -498) (undo-tree-id8683 . -498) (undo-tree-id8684 . -498) (undo-tree-id8685 . -498) (undo-tree-id8686 . -498) (undo-tree-id8687 . -498) (undo-tree-id8688 . -498) (undo-tree-id8689 . -498) (undo-tree-id8690 . -498) (undo-tree-id8691 . -498) (undo-tree-id8692 . -498) (undo-tree-id8693 . -498) (undo-tree-id8694 . -498) (undo-tree-id8695 . -498) (undo-tree-id8696 . -498) (undo-tree-id8697 . -498) (undo-tree-id8698 . -498) (undo-tree-id8699 . -498) (undo-tree-id8700 . -498) (undo-tree-id8701 . -498) (undo-tree-id8702 . -498) (undo-tree-id8703 . -498) (undo-tree-id8704 . -498) (undo-tree-id8705 . -498) (undo-tree-id8706 . -498) (undo-tree-id8707 . -498) (undo-tree-id8708 . -498) (undo-tree-id8709 . -498) (undo-tree-id8710 . -498) (undo-tree-id8711 . -498) (undo-tree-id8712 . -498) (undo-tree-id8713 . -498) (undo-tree-id8714 . -498) (undo-tree-id8715 . -498) (undo-tree-id8716 . -498) (undo-tree-id8717 . -498) (undo-tree-id8718 . -498) (undo-tree-id8719 . -498) (undo-tree-id8720 . -498) (undo-tree-id8721 . -498) (undo-tree-id8722 . -498) (undo-tree-id8723 . -498) (undo-tree-id8724 . -498) (undo-tree-id8725 . -498) (undo-tree-id8726 . -498) (undo-tree-id8727 . -498) (undo-tree-id8728 . -498) (undo-tree-id8729 . -498) (undo-tree-id8730 . -498) (undo-tree-id8731 . -498) (undo-tree-id8732 . -498) (undo-tree-id8733 . -498) (undo-tree-id8734 . -498) (undo-tree-id8735 . -498) (undo-tree-id8736 . -498) (undo-tree-id8737 . -498) (undo-tree-id8738 . -498) (undo-tree-id8739 . -498) (undo-tree-id8740 . -498) (undo-tree-id8741 . -498) (undo-tree-id8742 . -498) (undo-tree-id8743 . -498) (undo-tree-id8744 . -498) (undo-tree-id8745 . -498) (undo-tree-id8746 . -498) (undo-tree-id8747 . -498) (undo-tree-id8748 . -498) (undo-tree-id8749 . -498) (undo-tree-id8750 . -498) (undo-tree-id8751 . -498) (undo-tree-id8752 . -498) (undo-tree-id8753 . -498) (undo-tree-id8754 . -498) (undo-tree-id8755 . -498) (undo-tree-id8756 . -498) (undo-tree-id8757 . -498) (undo-tree-id8758 . -498) (undo-tree-id8759 . -498) (undo-tree-id8760 . -498) (undo-tree-id8761 . -498) (undo-tree-id8762 . -498) (undo-tree-id8763 . -498) (undo-tree-id8764 . -498) (undo-tree-id8765 . -498) (undo-tree-id8766 . -498) (undo-tree-id8767 . -498) (undo-tree-id8768 . -498) (undo-tree-id8769 . -498) (undo-tree-id8770 . -498) (undo-tree-id8771 . -498) (undo-tree-id8772 . -498) (undo-tree-id8773 . -498) (undo-tree-id8774 . -498) (undo-tree-id8775 . -498) (undo-tree-id8776 . -498) (undo-tree-id8777 . -498) (undo-tree-id8778 . -498) (undo-tree-id8779 . -498) (undo-tree-id8780 . -498) (undo-tree-id8781 . -498) (undo-tree-id8782 . -498) (undo-tree-id8783 . -498) (undo-tree-id8784 . -498) (undo-tree-id8785 . -498) (undo-tree-id8786 . -498) (undo-tree-id8787 . -498) (undo-tree-id8788 . -498) (undo-tree-id8789 . -498) (undo-tree-id8790 . -498) (undo-tree-id8791 . -498) (undo-tree-id8792 . -498) (undo-tree-id8793 . -498) (undo-tree-id8794 . -498) (undo-tree-id8795 . -498) (undo-tree-id8796 . -498) (undo-tree-id8797 . -498) (undo-tree-id8798 . -498) (undo-tree-id8799 . -498) (undo-tree-id8800 . -498) (undo-tree-id8801 . -498) (undo-tree-id8802 . -498) (undo-tree-id8803 . -498) (undo-tree-id8804 . -498) (undo-tree-id8805 . -498) (undo-tree-id8806 . -498) (undo-tree-id8807 . -498) (undo-tree-id8808 . -498) (undo-tree-id8809 . -498) (undo-tree-id8810 . -498) (undo-tree-id8811 . -498) (undo-tree-id8812 . -498) (undo-tree-id8813 . -498) (undo-tree-id8814 . -498) (undo-tree-id8815 . -498) (undo-tree-id8816 . -498) (undo-tree-id8817 . -498) (undo-tree-id8818 . -498) (undo-tree-id8819 . -498) (undo-tree-id8820 . -498) (undo-tree-id8821 . -498) (undo-tree-id8822 . -498) (undo-tree-id8823 . -498) (undo-tree-id8824 . -498) (undo-tree-id8825 . -498) (undo-tree-id8826 . -498) (undo-tree-id8827 . -498) (undo-tree-id8828 . -498) (undo-tree-id8829 . -498) (undo-tree-id8830 . -498) (undo-tree-id8831 . -498) (undo-tree-id8832 . -498) (undo-tree-id8833 . -498) (undo-tree-id8834 . -498) (undo-tree-id8835 . -498) (undo-tree-id8836 . -498) (undo-tree-id8837 . -498) (undo-tree-id8838 . -498) (undo-tree-id8839 . -498) (undo-tree-id8840 . -498) (undo-tree-id8841 . -498) (undo-tree-id8842 . -498) (undo-tree-id8843 . -498) (undo-tree-id8844 . -498) (undo-tree-id8845 . -498) (undo-tree-id8846 . -498) (undo-tree-id8847 . -498) (undo-tree-id8848 . -498) (undo-tree-id8849 . -498) (undo-tree-id8850 . -498) (undo-tree-id8851 . -498) (undo-tree-id8852 . -498) (undo-tree-id8853 . -498) (undo-tree-id8854 . -498) (undo-tree-id8855 . -498) (undo-tree-id8856 . -498) (undo-tree-id8857 . -498) (undo-tree-id8858 . -498) (undo-tree-id8859 . -498) (undo-tree-id8860 . -498) (undo-tree-id8861 . -498) (undo-tree-id8862 . -498) (undo-tree-id8863 . -498) (undo-tree-id8864 . -498) (undo-tree-id8865 . -498) (undo-tree-id8866 . -498) (undo-tree-id8867 . -498) (undo-tree-id8868 . -498) (undo-tree-id8869 . -498) (undo-tree-id8870 . -498) (undo-tree-id8871 . -498) (undo-tree-id8872 . -498) (undo-tree-id8873 . -498) (undo-tree-id8874 . -498) (undo-tree-id8875 . -498) (undo-tree-id8876 . -498) (undo-tree-id8877 . -498) (undo-tree-id8878 . -498) (undo-tree-id8879 . -498) (undo-tree-id8880 . -498) (undo-tree-id8881 . -498) (undo-tree-id8882 . -498) (undo-tree-id8883 . -498) (undo-tree-id8884 . -498) (undo-tree-id8885 . -498) (undo-tree-id8886 . -549) (undo-tree-id8887 . -498) (undo-tree-id8888 . -498) (undo-tree-id8889 . -498) (undo-tree-id8890 . -498) (undo-tree-id8891 . -498) (undo-tree-id8892 . -498) (undo-tree-id8893 . -498) (undo-tree-id8894 . -498) (undo-tree-id8895 . -498) (undo-tree-id8896 . -498) (undo-tree-id8897 . -498) (undo-tree-id8898 . -498) (undo-tree-id8899 . -498) (undo-tree-id8900 . -498) (undo-tree-id8901 . -498) (undo-tree-id8902 . -498) (undo-tree-id8903 . -498) (undo-tree-id8904 . -498) (undo-tree-id8905 . -498) (undo-tree-id8906 . -498) (undo-tree-id8907 . -498) (undo-tree-id8908 . -498) (undo-tree-id8909 . -498) (undo-tree-id8910 . -498) (undo-tree-id8911 . -498) (undo-tree-id8912 . -498) (undo-tree-id8913 . -498) (undo-tree-id8914 . -498) (undo-tree-id8915 . -498) (undo-tree-id8916 . -498) (undo-tree-id8917 . -498) (undo-tree-id8918 . -498) (undo-tree-id8919 . -498) (undo-tree-id8920 . -498) (undo-tree-id8921 . -498) (undo-tree-id8922 . -498) (undo-tree-id8923 . -498) (undo-tree-id8924 . -498) (undo-tree-id8925 . -498) (undo-tree-id8926 . -498) (undo-tree-id8927 . -498) (undo-tree-id8928 . -498) (undo-tree-id8929 . -498) (undo-tree-id8930 . -498) (undo-tree-id8931 . -507) (undo-tree-id8932 . -507) (undo-tree-id8933 . -507) (undo-tree-id8934 . -507) (undo-tree-id8935 . -507) (undo-tree-id8936 . -507) (undo-tree-id8937 . -507) (undo-tree-id8938 . -507) (undo-tree-id8939 . -507) (undo-tree-id8940 . -507) (undo-tree-id8941 . -507) (undo-tree-id8942 . -507) (undo-tree-id8943 . -507) (undo-tree-id8944 . -507) (undo-tree-id8945 . -507) (undo-tree-id8946 . -507) (undo-tree-id8947 . -514) (undo-tree-id8948 . -514) (undo-tree-id8949 . -514) (undo-tree-id8950 . -514) (undo-tree-id8951 . -514) (undo-tree-id8952 . -514) (undo-tree-id8953 . -514) (undo-tree-id8954 . -514) (undo-tree-id8955 . -514) (undo-tree-id8956 . -514) (undo-tree-id8957 . -514) (undo-tree-id8958 . -514) (undo-tree-id8959 . -514) (undo-tree-id8960 . -514) (undo-tree-id8961 . -514) (undo-tree-id8962 . -514) (undo-tree-id8963 . -525) (undo-tree-id8964 . -525) (undo-tree-id8965 . -525) (undo-tree-id8966 . -525) (undo-tree-id8967 . -525) (undo-tree-id8968 . -525) (undo-tree-id8969 . -525) (undo-tree-id8970 . -525) (undo-tree-id8971 . -525) (undo-tree-id8972 . -525) (undo-tree-id8973 . -525) (undo-tree-id8974 . -525) (undo-tree-id8975 . -525) (undo-tree-id8976 . -525) (undo-tree-id8977 . -525) (undo-tree-id8978 . -525) (undo-tree-id8979 . -525) (undo-tree-id8980 . -525) (undo-tree-id8981 . -525) (undo-tree-id8982 . -525) (undo-tree-id8983 . -525) (undo-tree-id8984 . -528) (undo-tree-id8985 . -528) (undo-tree-id8986 . -528) (undo-tree-id8987 . -528) (undo-tree-id8988 . -528) (undo-tree-id8989 . -528) (undo-tree-id8990 . -528) (undo-tree-id8991 . -528) (undo-tree-id8992 . -528) (undo-tree-id8993 . -528) (undo-tree-id8994 . -528) (undo-tree-id8995 . -528) (undo-tree-id8996 . -528) (undo-tree-id8997 . -528) (undo-tree-id8998 . -528) (undo-tree-id8999 . -528) (undo-tree-id9000 . -538) (undo-tree-id9001 . -538) (undo-tree-id9002 . -538) (undo-tree-id9003 . -538) (undo-tree-id9004 . -538) (undo-tree-id9005 . -538) (undo-tree-id9006 . -538) (undo-tree-id9007 . -538) (undo-tree-id9008 . -538) (undo-tree-id9009 . -538) (undo-tree-id9010 . -538) (undo-tree-id9011 . -538) (undo-tree-id9012 . -538) (undo-tree-id9013 . -538) (undo-tree-id9014 . -538) (undo-tree-id9015 . -538) (undo-tree-id9016 . -548) (undo-tree-id9017 . -548) (undo-tree-id9018 . -548) (undo-tree-id9019 . -548) (undo-tree-id9020 . -548) (undo-tree-id9021 . -548) (undo-tree-id9022 . -548) (undo-tree-id9023 . -548) (undo-tree-id9024 . -548) (undo-tree-id9025 . -548) (undo-tree-id9026 . -548) (undo-tree-id9027 . -548) (undo-tree-id9028 . -548) (undo-tree-id9029 . -548) (undo-tree-id9030 . -548) (undo-tree-id9031 . -548) (undo-tree-id9032 . -549) (undo-tree-id9033 . -549) (undo-tree-id9034 . -549) (undo-tree-id9035 . -549) (undo-tree-id9036 . -549) (undo-tree-id9037 . -549) (undo-tree-id9038 . -549) (undo-tree-id9039 . -549) (undo-tree-id9040 . -549) (undo-tree-id9041 . -549) (undo-tree-id9042 . -549) (undo-tree-id9043 . -549) (undo-tree-id9044 . -549) (undo-tree-id9045 . -549) (undo-tree-id9046 . -549) (undo-tree-id9047 . -549) (undo-tree-id9048 . -549) (undo-tree-id9049 . -549) (undo-tree-id9050 . -549) (undo-tree-id9051 . -549) (undo-tree-id9052 . -549) (undo-tree-id9053 . -549) (undo-tree-id9054 . -549) (undo-tree-id9055 . -549) (undo-tree-id9056 . -549) (undo-tree-id9057 . -549) (undo-tree-id9058 . -549) (undo-tree-id9059 . -549) (undo-tree-id9060 . -549) (undo-tree-id9061 . -549) (undo-tree-id9062 . -549) (undo-tree-id9063 . -549) (undo-tree-id9064 . -549) (undo-tree-id9065 . -549) (undo-tree-id9066 . -549) (undo-tree-id9067 . -549) (undo-tree-id9068 . -549) (undo-tree-id9069 . -549) (undo-tree-id9070 . -549) (undo-tree-id9071 . -549) (undo-tree-id9072 . -549) (undo-tree-id9073 . -549) (undo-tree-id9074 . -549) (undo-tree-id9075 . -549) (undo-tree-id9076 . -549) (undo-tree-id9077 . -549) (undo-tree-id9078 . -549) (undo-tree-id9079 . -549) (undo-tree-id9080 . -549) (undo-tree-id9081 . -549) (undo-tree-id9082 . -549) (undo-tree-id9083 . -549) (undo-tree-id9084 . -549) (undo-tree-id9085 . -549) (undo-tree-id9086 . -549) (undo-tree-id9087 . -549) (undo-tree-id9088 . -549) (undo-tree-id9089 . -549) (undo-tree-id9090 . -549) (undo-tree-id9091 . -549) (undo-tree-id9092 . -496) (282 . 778) (#(" which helps predictive models to focus on certain parts of the input sequence more than others, and how it was originally used in the context of RNNs. Note that this section provides a historical perspective explaining why the attention mechanism was developed. If individual mathematical details appear complicated, you can feel free to skip over them as they are not needed for the next section, explaining the self-at- tention mechanism for transformers, which is the focus of this chapter." 0 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 12 13 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 13 111 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 111 112 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 112 219 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 219 220 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 220 317 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 317 318 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 318 374 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 374 375 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 375 376 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 376 377 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 377 414 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 414 415 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 415 422 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 422 423 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 423 446 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 446 447 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 447 494 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 335) (undo-tree-id9093 . 348) (undo-tree-id9094 . -150) (#("," 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 335) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (t 25774 24656 839469 186000)) nil (25774 24672 652392 43000) 0 nil])
([nil nil ((#("which helps predictive models to focus on certain parts of the input sequence more than others, and how it was originally used in the context of RNNs. Note that this section provides a historical perspective explaining why the attention mechanism was developed. If individual mathematical details appear complicated, you can feel free to skip over them as they are not needed for the next section, explaining the self-at- tention mechanism for transformers, which is the focus of this chapter." 0 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 12 110 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 110 111 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 111 218 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 218 219 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 219 316 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 316 317 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 317 373 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 373 374 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 374 375 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 375 376 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 376 413 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 413 414 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 414 421 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 421 422 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 422 444 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 444 445 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 445 446 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 446 493 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 338) (undo-tree-id8490 . 493) (undo-tree-id8491 . -492) (undo-tree-id8492 . -493) (undo-tree-id8493 . -493)) nil (25774 24672 651746 180000) 0 nil])
([nil nil ((#("- 
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 336) (undo-tree-id8391 . 1) (undo-tree-id8392 . -2) (undo-tree-id8393 . 1) (undo-tree-id8394 . -1) (undo-tree-id8395 . -2) (undo-tree-id8396 . -2) (undo-tree-id8397 . -2) (undo-tree-id8398 . -2) (undo-tree-id8399 . -2) (undo-tree-id8400 . -2) (undo-tree-id8401 . -2) (undo-tree-id8402 . -2) (undo-tree-id8403 . -2) (undo-tree-id8404 . -2) (undo-tree-id8405 . -2) (undo-tree-id8406 . -2) (undo-tree-id8407 . -2) (undo-tree-id8408 . -2) (undo-tree-id8409 . -2) (undo-tree-id8410 . -2) (undo-tree-id8411 . -2) (undo-tree-id8412 . -2) (undo-tree-id8413 . -2) (undo-tree-id8414 . -2) (undo-tree-id8415 . -2) (undo-tree-id8416 . -2) (undo-tree-id8417 . -1) (undo-tree-id8418 . -1) (undo-tree-id8419 . -1) (undo-tree-id8420 . -1) (undo-tree-id8421 . -1) (undo-tree-id8422 . -1) (undo-tree-id8423 . -1) (undo-tree-id8424 . -1) (undo-tree-id8425 . -1) (undo-tree-id8426 . -1) (undo-tree-id8427 . -1) (undo-tree-id8428 . -1) (undo-tree-id8429 . -1) (undo-tree-id8430 . -1) (undo-tree-id8431 . -1) (undo-tree-id8432 . -1) (undo-tree-id8433 . -1) (undo-tree-id8434 . -1) (undo-tree-id8435 . -1) (undo-tree-id8436 . -1) (undo-tree-id8437 . -1) (undo-tree-id8438 . -1) (undo-tree-id8439 . -1) (undo-tree-id8440 . -1) (undo-tree-id8441 . -1) (undo-tree-id8442 . -2) (undo-tree-id8443 . -2) (undo-tree-id8444 . -2) (undo-tree-id8445 . -2) (undo-tree-id8446 . -2) (undo-tree-id8447 . -2) (undo-tree-id8448 . -2) (undo-tree-id8449 . -2) (undo-tree-id8450 . -2) (undo-tree-id8451 . -2) (undo-tree-id8452 . -2) (undo-tree-id8453 . -2) (undo-tree-id8454 . -2) (undo-tree-id8455 . -2) (undo-tree-id8456 . -2) (undo-tree-id8457 . -2) (undo-tree-id8458 . -2) (undo-tree-id8459 . -2) (undo-tree-id8460 . -2) (undo-tree-id8461 . -2) (undo-tree-id8462 . -2) (undo-tree-id8463 . -2) (undo-tree-id8464 . -2) (undo-tree-id8465 . -2) (undo-tree-id8466 . -2) (undo-tree-id8467 . -2) (undo-tree-id8468 . -2) (undo-tree-id8469 . -2) (undo-tree-id8470 . -2) (undo-tree-id8471 . -2) (undo-tree-id8472 . -2) (undo-tree-id8473 . -2) (undo-tree-id8474 . -1) (undo-tree-id8475 . -1) (undo-tree-id8476 . -1) (undo-tree-id8477 . -1) (undo-tree-id8478 . -1) (undo-tree-id8479 . -1) (undo-tree-id8480 . -1) (undo-tree-id8481 . -1) (undo-tree-id8482 . -1) (undo-tree-id8483 . -1) (undo-tree-id8484 . -1) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (undo-tree-id8487 . -1) (undo-tree-id8488 . -1) (undo-tree-id8489 . -3) 337) nil (25774 24672 651736 902000) 0 nil])
([nil nil ((#("To understand the development of an attention mechanism" 0 55 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . 388) (undo-tree-id9104 . -54) (undo-tree-id9105 . -3) (undo-tree-id9106 . -3) (undo-tree-id9107 . -3) (undo-tree-id9108 . -3) (undo-tree-id9109 . -3) (undo-tree-id9110 . -3) (undo-tree-id9111 . -3) (undo-tree-id9112 . -3) (undo-tree-id9113 . -3) (undo-tree-id9114 . -3) (undo-tree-id9115 . -3) (undo-tree-id9116 . -3) (undo-tree-id9117 . -3) (undo-tree-id9118 . -3) (undo-tree-id9119 . -3) (undo-tree-id9120 . -3) (undo-tree-id9121 . -3) (undo-tree-id9122 . -3) (undo-tree-id9123 . -3) (undo-tree-id9124 . -3) (undo-tree-id9125 . -3) (undo-tree-id9126 . -3) (undo-tree-id9127 . -3) (undo-tree-id9128 . -3) (undo-tree-id9129 . -3) (undo-tree-id9130 . -3) (undo-tree-id9131 . -3) (undo-tree-id9132 . -3) (undo-tree-id9133 . -3) (undo-tree-id9134 . -3) (undo-tree-id9135 . -3) (undo-tree-id9136 . -55) (t 25774 24672 659829 62000)) nil (25774 24692 370117 162000) 0 nil])
([nil nil ((388 . 390)) nil (25774 24692 370088 720000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 390) (undo-tree-id9101 . 1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1)) nil (25774 24692 370087 327000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 390) (undo-tree-id9098 . 1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1)) nil (25774 24692 370083 335000) 0 nil])
([nil nil ((390 . 391) (#("c" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 390)) nil (25774 24692 370070 805000) 0 nil])
([nil nil ((388 . 609) (#("- like language translation, which parses the entire input sequence (for instance, one or more sentences) before producing the translation, as shown in Figure 16.1:

- Consider the traditional RNN model for a seq2seq task" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 89 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 89 90 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 90 163 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 163 164 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 164 165 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 165 166 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 166 167 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil composition (0 1 [8226])) 167 168 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 168 206 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 206 207 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 207 221 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 388) (undo-tree-id9654 . 53) (undo-tree-id9655 . -168) (undo-tree-id9656 . -168) (undo-tree-id9657 . 52) (undo-tree-id9658 . -168) (undo-tree-id9659 . -168) (undo-tree-id9660 . -168) (undo-tree-id9661 . -221) (undo-tree-id9662 . -168) (undo-tree-id9663 . -168) (undo-tree-id9664 . -168) (undo-tree-id9665 . -168) (undo-tree-id9666 . -168) (undo-tree-id9667 . -168) (undo-tree-id9668 . -168) (undo-tree-id9669 . -168) (undo-tree-id9670 . -168) (undo-tree-id9671 . -168) (undo-tree-id9672 . -168) (undo-tree-id9673 . -168) (undo-tree-id9674 . -168) (undo-tree-id9675 . -168) (undo-tree-id9676 . -168) (undo-tree-id9677 . -168) (undo-tree-id9678 . -168) (undo-tree-id9679 . -168) (undo-tree-id9680 . -168) (undo-tree-id9681 . -168) (undo-tree-id9682 . -168) (undo-tree-id9683 . -168) (undo-tree-id9684 . -168) (undo-tree-id9685 . -168) (undo-tree-id9686 . -168) (undo-tree-id9687 . -168) (undo-tree-id9688 . -168) (undo-tree-id9689 . -168) (undo-tree-id9690 . -168) (undo-tree-id9691 . -175) (undo-tree-id9692 . -175) (undo-tree-id9693 . -175) (undo-tree-id9694 . -175) (undo-tree-id9695 . -175) (undo-tree-id9696 . -175) (undo-tree-id9697 . -175) (undo-tree-id9698 . -175) (undo-tree-id9699 . -175) (undo-tree-id9700 . -175) (undo-tree-id9701 . -175) (undo-tree-id9702 . -175) (undo-tree-id9703 . -175) (undo-tree-id9704 . -175) (undo-tree-id9705 . -175) (undo-tree-id9706 . -175) (undo-tree-id9707 . -179) (undo-tree-id9708 . -179) (undo-tree-id9709 . -179) (undo-tree-id9710 . -179) (undo-tree-id9711 . -179) (undo-tree-id9712 . -179) (undo-tree-id9713 . -179) (undo-tree-id9714 . -179) (undo-tree-id9715 . -179) (undo-tree-id9716 . -179) (undo-tree-id9717 . -179) (undo-tree-id9718 . -179) (undo-tree-id9719 . -179) (undo-tree-id9720 . -179) (undo-tree-id9721 . -179) (undo-tree-id9722 . -179) (undo-tree-id9723 . -191) (undo-tree-id9724 . -191) (undo-tree-id9725 . -191) (undo-tree-id9726 . -191) (undo-tree-id9727 . -191) (undo-tree-id9728 . -191) (undo-tree-id9729 . -191) (undo-tree-id9730 . -191) (undo-tree-id9731 . -191) (undo-tree-id9732 . -191) (undo-tree-id9733 . -191) (undo-tree-id9734 . -191) (undo-tree-id9735 . -191) (undo-tree-id9736 . -191) (undo-tree-id9737 . -191) (undo-tree-id9738 . -191) (undo-tree-id9739 . 28) (undo-tree-id9740 . -196) (undo-tree-id9741 . -195) (undo-tree-id9742 . -195) (undo-tree-id9743 . -195) (undo-tree-id9744 . -195) (undo-tree-id9745 . -195) (undo-tree-id9746 . -195) (undo-tree-id9747 . -195) (undo-tree-id9748 . -195) (undo-tree-id9749 . -195) (undo-tree-id9750 . -195) (undo-tree-id9751 . -195) (undo-tree-id9752 . -195) (undo-tree-id9753 . -195) (undo-tree-id9754 . -195) (undo-tree-id9755 . -195) (undo-tree-id9756 . -195) (undo-tree-id9757 . -201) (undo-tree-id9758 . -201) (undo-tree-id9759 . -201) (undo-tree-id9760 . -201) (undo-tree-id9761 . -201) (undo-tree-id9762 . -201) (undo-tree-id9763 . -201) (undo-tree-id9764 . -201) (undo-tree-id9765 . -201) (undo-tree-id9766 . -201) (undo-tree-id9767 . -201) (undo-tree-id9768 . -201) (undo-tree-id9769 . -201) (undo-tree-id9770 . -201) (undo-tree-id9771 . -201) (undo-tree-id9772 . -201) (undo-tree-id9773 . -205) (undo-tree-id9774 . -205) (undo-tree-id9775 . -205) (undo-tree-id9776 . -205) (undo-tree-id9777 . -205) (undo-tree-id9778 . -205) (undo-tree-id9779 . -205) (undo-tree-id9780 . -205) (undo-tree-id9781 . -205) (undo-tree-id9782 . -205) (undo-tree-id9783 . -205) (undo-tree-id9784 . -205) (undo-tree-id9785 . -205) (undo-tree-id9786 . -205) (undo-tree-id9787 . -205) (undo-tree-id9788 . -205) (undo-tree-id9789 . -207) (undo-tree-id9790 . -207) (undo-tree-id9791 . -207) (undo-tree-id9792 . -207) (undo-tree-id9793 . -207) (undo-tree-id9794 . -207) (undo-tree-id9795 . -207) (undo-tree-id9796 . -207) (undo-tree-id9797 . -207) (undo-tree-id9798 . -207) (undo-tree-id9799 . -207) (undo-tree-id9800 . -207) (undo-tree-id9801 . -207) (undo-tree-id9802 . -207) (undo-tree-id9803 . -207) (undo-tree-id9804 . -207) (undo-tree-id9805 . -215) (undo-tree-id9806 . -215) (undo-tree-id9807 . -215) (undo-tree-id9808 . -215) (undo-tree-id9809 . -215) (undo-tree-id9810 . -215) (undo-tree-id9811 . -215) (undo-tree-id9812 . -215) (undo-tree-id9813 . -215) (undo-tree-id9814 . -215) (undo-tree-id9815 . -215) (undo-tree-id9816 . -215) (undo-tree-id9817 . -215) (undo-tree-id9818 . -215) (undo-tree-id9819 . -215) (undo-tree-id9820 . -215) (undo-tree-id9821 . -215) (undo-tree-id9822 . -215) (undo-tree-id9823 . -215) (undo-tree-id9824 . -215) (undo-tree-id9825 . -215) (undo-tree-id9826 . -220) (undo-tree-id9827 . -220) (undo-tree-id9828 . -220) (undo-tree-id9829 . -220) (undo-tree-id9830 . -220) (undo-tree-id9831 . -220) (undo-tree-id9832 . -220) (undo-tree-id9833 . -220) (undo-tree-id9834 . -220) (undo-tree-id9835 . -220) (undo-tree-id9836 . -220) (undo-tree-id9837 . -220) (undo-tree-id9838 . -220) (undo-tree-id9839 . -220) (undo-tree-id9840 . -220) (undo-tree-id9841 . -220) (undo-tree-id9842 . -221) (undo-tree-id9843 . -221) (undo-tree-id9844 . -221) (undo-tree-id9845 . -221) (undo-tree-id9846 . -221) (undo-tree-id9847 . -221) (undo-tree-id9848 . -221) (undo-tree-id9849 . -221) (undo-tree-id9850 . -221) (undo-tree-id9851 . -221) (undo-tree-id9852 . -221) (undo-tree-id9853 . -221) (undo-tree-id9854 . -221) (undo-tree-id9855 . -221) (undo-tree-id9856 . -221) (undo-tree-id9857 . -221) (undo-tree-id9858 . -221) (undo-tree-id9859 . -221) (undo-tree-id9860 . -221) (undo-tree-id9861 . -221) (undo-tree-id9862 . -221) (undo-tree-id9863 . -221) (undo-tree-id9864 . -221) (undo-tree-id9865 . -221) (undo-tree-id9866 . -221) (undo-tree-id9867 . -221) (undo-tree-id9868 . -221) (undo-tree-id9869 . -221) (undo-tree-id9870 . -221) (undo-tree-id9871 . -166) (388 . 554) (#(" like language translation, which parses the entire input sequence (for instance, one or more sentences) before producing the translation, as shown in Figure 16.1:" 0 88 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 88 89 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 89 162 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 162 163 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 443) (t 25774 24692 380288 169000)) nil (25774 24775 729 267000) 0 nil])
([nil nil ((#("like language translation" 0 25 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 447) (undo-tree-id9651 . 25) (undo-tree-id9652 . -24) (undo-tree-id9653 . -25)) nil (25774 24775 593 515000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 447) (undo-tree-id9648 . 2) (undo-tree-id9649 . -1) (undo-tree-id9650 . -2)) nil (25774 24775 589 698000) 0 nil])
([nil nil ((#("- which parses the entire input sequence (for instance, one or more sentences) before producing the translation, as shown in Figure 16.1:
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 62 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 62 63 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 63 136 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 136 137 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 137 138 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 445) (undo-tree-id9422 . 136) (undo-tree-id9423 . -137) (undo-tree-id9424 . 1) (undo-tree-id9425 . -2) (undo-tree-id9426 . -2) (undo-tree-id9427 . -2) (undo-tree-id9428 . -2) (undo-tree-id9429 . -2) (undo-tree-id9430 . -2) (undo-tree-id9431 . -2) (undo-tree-id9432 . -2) (undo-tree-id9433 . -2) (undo-tree-id9434 . -2) (undo-tree-id9435 . -2) (undo-tree-id9436 . -2) (undo-tree-id9437 . -2) (undo-tree-id9438 . -2) (undo-tree-id9439 . -2) (undo-tree-id9440 . -2) (undo-tree-id9441 . -2) (undo-tree-id9442 . -2) (undo-tree-id9443 . -2) (undo-tree-id9444 . -2) (undo-tree-id9445 . -2) (undo-tree-id9446 . -2) (undo-tree-id9447 . -2) (undo-tree-id9448 . -2) (undo-tree-id9449 . -2) (undo-tree-id9450 . -2) (undo-tree-id9451 . -2) (undo-tree-id9452 . -2) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . -1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) (undo-tree-id9482 . -1) (undo-tree-id9483 . -1) (undo-tree-id9484 . -1) (undo-tree-id9485 . -1) (undo-tree-id9486 . -1) (undo-tree-id9487 . -1) (undo-tree-id9488 . -2) (undo-tree-id9489 . -2) (undo-tree-id9490 . -2) (undo-tree-id9491 . -2) (undo-tree-id9492 . -2) (undo-tree-id9493 . -2) (undo-tree-id9494 . -2) (undo-tree-id9495 . -2) (undo-tree-id9496 . -2) (undo-tree-id9497 . -2) (undo-tree-id9498 . -2) (undo-tree-id9499 . -2) (undo-tree-id9500 . -2) (undo-tree-id9501 . -2) (undo-tree-id9502 . -2) (undo-tree-id9503 . -2) (undo-tree-id9504 . -2) (undo-tree-id9505 . -2) (undo-tree-id9506 . -2) (undo-tree-id9507 . -2) (undo-tree-id9508 . -2) (undo-tree-id9509 . -2) (undo-tree-id9510 . -2) (undo-tree-id9511 . -2) (undo-tree-id9512 . -2) (undo-tree-id9513 . -2) (undo-tree-id9514 . -2) (undo-tree-id9515 . -2) (undo-tree-id9516 . -2) (undo-tree-id9517 . -2) (undo-tree-id9518 . -2) (undo-tree-id9519 . -2) (undo-tree-id9520 . -2) (undo-tree-id9521 . -2) (undo-tree-id9522 . -2) (undo-tree-id9523 . -2) (undo-tree-id9524 . -2) (undo-tree-id9525 . -2) (undo-tree-id9526 . -2) (undo-tree-id9527 . -2) (undo-tree-id9528 . -2) (undo-tree-id9529 . -2) (undo-tree-id9530 . -2) (undo-tree-id9531 . -2) (undo-tree-id9532 . -2) (undo-tree-id9533 . -2) (undo-tree-id9534 . -2) (undo-tree-id9535 . -2) (undo-tree-id9536 . -2) (undo-tree-id9537 . -2) (undo-tree-id9538 . -2) (undo-tree-id9539 . -2) (undo-tree-id9540 . -2) (undo-tree-id9541 . -2) (undo-tree-id9542 . -2) (undo-tree-id9543 . -2) (undo-tree-id9544 . -2) (undo-tree-id9545 . -2) (undo-tree-id9546 . -2) (undo-tree-id9547 . -2) (undo-tree-id9548 . -2) (undo-tree-id9549 . -2) (undo-tree-id9550 . -2) (undo-tree-id9551 . -2) (undo-tree-id9552 . -2) (undo-tree-id9553 . -2) (undo-tree-id9554 . -2) (undo-tree-id9555 . -2) (undo-tree-id9556 . -2) (undo-tree-id9557 . -2) (undo-tree-id9558 . -2) (undo-tree-id9559 . -2) (undo-tree-id9560 . -2) (undo-tree-id9561 . -2) (undo-tree-id9562 . -2) (undo-tree-id9563 . -2) (undo-tree-id9564 . -2) (undo-tree-id9565 . -2) (undo-tree-id9566 . -2) (undo-tree-id9567 . -2) (undo-tree-id9568 . -2) (undo-tree-id9569 . -2) (undo-tree-id9570 . -2) (undo-tree-id9571 . -2) (undo-tree-id9572 . -2) (undo-tree-id9573 . -2) (undo-tree-id9574 . -2) (undo-tree-id9575 . -2) (undo-tree-id9576 . -2) (undo-tree-id9577 . -2) (undo-tree-id9578 . -2) (undo-tree-id9579 . -2) (undo-tree-id9580 . -2) (undo-tree-id9581 . -2) (undo-tree-id9582 . -2) (undo-tree-id9583 . -2) (undo-tree-id9584 . -2) (undo-tree-id9585 . -2) (undo-tree-id9586 . -2) (undo-tree-id9587 . -2) (undo-tree-id9588 . -2) (undo-tree-id9589 . -2) (undo-tree-id9590 . -2) (undo-tree-id9591 . -2) (undo-tree-id9592 . -2) (undo-tree-id9593 . -2) (undo-tree-id9594 . -2) (undo-tree-id9595 . -2) (undo-tree-id9596 . -2) (undo-tree-id9597 . -2) (undo-tree-id9598 . -2) (undo-tree-id9599 . -2) (undo-tree-id9600 . -2) (undo-tree-id9601 . -2) (undo-tree-id9602 . -2) (undo-tree-id9603 . -2) (undo-tree-id9604 . -2) (undo-tree-id9605 . -2) (undo-tree-id9606 . -2) (undo-tree-id9607 . -2) (undo-tree-id9608 . -2) (undo-tree-id9609 . -2) (undo-tree-id9610 . -2) (undo-tree-id9611 . -2) (undo-tree-id9612 . -2) (undo-tree-id9613 . -2) (undo-tree-id9614 . -2) (undo-tree-id9615 . -2) (undo-tree-id9616 . -2) (undo-tree-id9617 . -2) (undo-tree-id9618 . -2) (undo-tree-id9619 . -2) (undo-tree-id9620 . -2) (undo-tree-id9621 . -2) (undo-tree-id9622 . -2) (undo-tree-id9623 . -2) (undo-tree-id9624 . -2) (undo-tree-id9625 . -2) (undo-tree-id9626 . -2) (undo-tree-id9627 . -2) (undo-tree-id9628 . -2) (undo-tree-id9629 . -2) (undo-tree-id9630 . -2) (undo-tree-id9631 . -2) (undo-tree-id9632 . -2) (undo-tree-id9633 . -2) (undo-tree-id9634 . -2) (undo-tree-id9635 . -2) (undo-tree-id9636 . -2) (undo-tree-id9637 . -2) (undo-tree-id9638 . -2) (undo-tree-id9639 . -2) (undo-tree-id9640 . -2) (undo-tree-id9641 . -2) (undo-tree-id9642 . -2) (undo-tree-id9643 . -2) (undo-tree-id9644 . -2) (undo-tree-id9645 . -2) (undo-tree-id9646 . -2) (undo-tree-id9647 . -138) 447) nil (25774 24775 580 139000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1999 . 2000) (nil fontified nil 1944 . 2000) (nil fontified nil 1846 . 1944) (nil fontified nil 1788 . 1846) (nil fontified nil 1688 . 1788) (nil fontified nil 1588 . 1688) (nil fontified nil 1489 . 1588) (nil fontified nil 1393 . 1489) (nil fontified nil 1295 . 1393) (nil fontified nil 1200 . 1295) (nil fontified nil 1166 . 1200) (nil fontified nil 1068 . 1166) (nil fontified nil 965 . 1068) (nil fontified nil 865 . 965) (nil fontified nil 759 . 865) (nil fontified nil 679 . 759) (nil fontified nil 651 . 679) (nil fontified nil 549 . 651) (nil fontified nil 449 . 549) (449 . 2000)) nil (25774 24774 999816 882000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 445) (undo-tree-id9419 . 1) (undo-tree-id9420 . 1) (undo-tree-id9421 . -1)) nil (25774 24774 999812 831000) 0 nil])
([nil nil ((#("- 
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 445) (undo-tree-id9207 . 3) (undo-tree-id9208 . -2) (undo-tree-id9209 . 3) (undo-tree-id9210 . -3) (undo-tree-id9211 . -3) (undo-tree-id9212 . -3) (undo-tree-id9213 . -3) (undo-tree-id9214 . -3) (undo-tree-id9215 . -3) (undo-tree-id9216 . -3) (undo-tree-id9217 . -3) (undo-tree-id9218 . -3) (undo-tree-id9219 . -3) (undo-tree-id9220 . -3) (undo-tree-id9221 . -3) (undo-tree-id9222 . -3) (undo-tree-id9223 . -3) (undo-tree-id9224 . -3) (undo-tree-id9225 . -3) (undo-tree-id9226 . -3) (undo-tree-id9227 . -3) (undo-tree-id9228 . -3) (undo-tree-id9229 . -3) (undo-tree-id9230 . -3) (undo-tree-id9231 . -3) (undo-tree-id9232 . -3) (undo-tree-id9233 . -3) (undo-tree-id9234 . -3) (undo-tree-id9235 . -3) (undo-tree-id9236 . -3) (undo-tree-id9237 . -3) (undo-tree-id9238 . -3) (undo-tree-id9239 . -3) (undo-tree-id9240 . -3) (undo-tree-id9241 . -3) (undo-tree-id9242 . -3) (undo-tree-id9243 . -3) (undo-tree-id9244 . -3) (undo-tree-id9245 . -3) (undo-tree-id9246 . -3) (undo-tree-id9247 . -3) (undo-tree-id9248 . -3) (undo-tree-id9249 . -3) (undo-tree-id9250 . -3) (undo-tree-id9251 . -3) (undo-tree-id9252 . -3) (undo-tree-id9253 . -3) (undo-tree-id9254 . -3) (undo-tree-id9255 . -3) (undo-tree-id9256 . -3) (undo-tree-id9257 . -3) (undo-tree-id9258 . -3) (undo-tree-id9259 . -3) (undo-tree-id9260 . -3) (undo-tree-id9261 . -3) (undo-tree-id9262 . -3) (undo-tree-id9263 . -3) (undo-tree-id9264 . -3) (undo-tree-id9265 . -3) (undo-tree-id9266 . -3) (undo-tree-id9267 . -3) (undo-tree-id9268 . -3) (undo-tree-id9269 . -3) (undo-tree-id9270 . -3) (undo-tree-id9271 . -3) (undo-tree-id9272 . -3) (undo-tree-id9273 . -3) (undo-tree-id9274 . -3) (undo-tree-id9275 . -3) (undo-tree-id9276 . -3) (undo-tree-id9277 . -3) (undo-tree-id9278 . -3) (undo-tree-id9279 . -3) (undo-tree-id9280 . -3) (undo-tree-id9281 . -3) (undo-tree-id9282 . -3) (undo-tree-id9283 . -3) (undo-tree-id9284 . -3) (undo-tree-id9285 . -3) (undo-tree-id9286 . -3) (undo-tree-id9287 . -3) (undo-tree-id9288 . -3) (undo-tree-id9289 . -3) (undo-tree-id9290 . -3) (undo-tree-id9291 . -3) (undo-tree-id9292 . -3) (undo-tree-id9293 . -3) (undo-tree-id9294 . -3) (undo-tree-id9295 . -3) (undo-tree-id9296 . -3) (undo-tree-id9297 . -3) (undo-tree-id9298 . -3) (undo-tree-id9299 . -3) (undo-tree-id9300 . -3) (undo-tree-id9301 . -3) (undo-tree-id9302 . -3) (undo-tree-id9303 . -3) (undo-tree-id9304 . -3) (undo-tree-id9305 . -3) (undo-tree-id9306 . -3) (undo-tree-id9307 . -3) (undo-tree-id9308 . -3) (undo-tree-id9309 . -3) (undo-tree-id9310 . -3) (undo-tree-id9311 . -3) (undo-tree-id9312 . -3) (undo-tree-id9313 . -3) (undo-tree-id9314 . -3) (undo-tree-id9315 . -3) (undo-tree-id9316 . -3) (undo-tree-id9317 . -3) (undo-tree-id9318 . -3) (undo-tree-id9319 . -3) (undo-tree-id9320 . -3) (undo-tree-id9321 . -3) (undo-tree-id9322 . -3) (undo-tree-id9323 . -3) (undo-tree-id9324 . -3) (undo-tree-id9325 . -3) (undo-tree-id9326 . -3) (undo-tree-id9327 . -3) (undo-tree-id9328 . -3) (undo-tree-id9329 . -3) (undo-tree-id9330 . -3) (undo-tree-id9331 . -3) (undo-tree-id9332 . -3) (undo-tree-id9333 . -3) (undo-tree-id9334 . -3) (undo-tree-id9335 . -3) (undo-tree-id9336 . -3) (undo-tree-id9337 . -3) (undo-tree-id9338 . -3) (undo-tree-id9339 . -3) (undo-tree-id9340 . -3) (undo-tree-id9341 . -3) (undo-tree-id9342 . -3) (undo-tree-id9343 . -3) (undo-tree-id9344 . -3) (undo-tree-id9345 . -3) (undo-tree-id9346 . -3) (undo-tree-id9347 . -3) (undo-tree-id9348 . -3) (undo-tree-id9349 . -3) (undo-tree-id9350 . -3) (undo-tree-id9351 . -3) (undo-tree-id9352 . -3) (undo-tree-id9353 . -3) (undo-tree-id9354 . -3) (undo-tree-id9355 . -3) (undo-tree-id9356 . -3) (undo-tree-id9357 . -3) (undo-tree-id9358 . -3) (undo-tree-id9359 . -3) (undo-tree-id9360 . -3) (undo-tree-id9361 . -3) (undo-tree-id9362 . -3) (undo-tree-id9363 . -3) (undo-tree-id9364 . -3) (undo-tree-id9365 . -3) (undo-tree-id9366 . -3) (undo-tree-id9367 . -3) (undo-tree-id9368 . -3) (undo-tree-id9369 . -3) (undo-tree-id9370 . -3) (undo-tree-id9371 . -3) (undo-tree-id9372 . -3) (undo-tree-id9373 . -3) (undo-tree-id9374 . -3) (undo-tree-id9375 . -3) (undo-tree-id9376 . -3) (undo-tree-id9377 . -3) (undo-tree-id9378 . -3) (undo-tree-id9379 . -3) (undo-tree-id9380 . -3) (undo-tree-id9381 . -3) (undo-tree-id9382 . -3) (undo-tree-id9383 . -3) (undo-tree-id9384 . -3) (undo-tree-id9385 . -3) (undo-tree-id9386 . -3) (undo-tree-id9387 . -3) (undo-tree-id9388 . -3) (undo-tree-id9389 . -3) (undo-tree-id9390 . -3) (undo-tree-id9391 . -3) (undo-tree-id9392 . -3) (undo-tree-id9393 . -3) (undo-tree-id9394 . -3) (undo-tree-id9395 . -3) (undo-tree-id9396 . -3) (undo-tree-id9397 . -3) (undo-tree-id9398 . -3) (undo-tree-id9399 . -3) (undo-tree-id9400 . -3) (undo-tree-id9401 . -3) (undo-tree-id9402 . -3) (undo-tree-id9403 . -3) (undo-tree-id9404 . -3) (undo-tree-id9405 . -3) (undo-tree-id9406 . -3) (undo-tree-id9407 . -3) (undo-tree-id9408 . -3) (undo-tree-id9409 . -3) (undo-tree-id9410 . -3) (undo-tree-id9411 . -3) (undo-tree-id9412 . -3) (undo-tree-id9413 . -3) (undo-tree-id9414 . -3) (undo-tree-id9415 . -3) (undo-tree-id9416 . -3) (undo-tree-id9417 . -3) (undo-tree-id9418 . -3)) nil (25774 24774 999799 674000) 0 nil])
([nil nil ((445 . 447)) nil (25774 24774 999382 964000) 0 nil])
([nil nil ((1941 . 1942) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1941) (undo-tree-id9137 . -1) (1843 . 1844) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1843) (undo-tree-id9138 . -1) (1785 . 1786) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1785) (undo-tree-id9139 . -1) (1685 . 1686) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1685) (undo-tree-id9140 . -1) (undo-tree-id9141 . -1) (undo-tree-id9142 . -1) (undo-tree-id9143 . -1) (undo-tree-id9144 . -1) (undo-tree-id9145 . -1) (undo-tree-id9146 . -1) (undo-tree-id9147 . -1) (undo-tree-id9148 . -1) (undo-tree-id9149 . -1) (undo-tree-id9150 . -1) (undo-tree-id9151 . -1) (undo-tree-id9152 . -1) (undo-tree-id9153 . -1) (undo-tree-id9154 . -1) (undo-tree-id9155 . -1) (undo-tree-id9156 . -1) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (1585 . 1586) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1585) (undo-tree-id9162 . -1) (1486 . 1487) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1486) (undo-tree-id9163 . -1) (1390 . 1391) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1390) (undo-tree-id9164 . -1) (1292 . 1293) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1292) (undo-tree-id9165 . -1) (1197 . 1198) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1197) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1) (undo-tree-id9181 . -1) (undo-tree-id9182 . -1) (1163 . 1164) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1163) (undo-tree-id9183 . -1) (1065 . 1066) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1065) (undo-tree-id9184 . -1) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (962 . 963) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -962) (undo-tree-id9201 . -1) (862 . 863) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -862) (undo-tree-id9202 . -1) (756 . 757) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -756) (undo-tree-id9203 . -1) (676 . 677) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -676) (undo-tree-id9204 . -1) (648 . 649) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -648) (undo-tree-id9205 . -1) (546 . 547) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -546) (undo-tree-id9206 . -1) 446) nil (25774 24774 999373 745000) 0 nil])
([nil nil ((1998 . 1999)) nil (25774 24774 998277 793000) 0 nil])
([nil nil ((#("Why is the " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 447) (undo-tree-id11271 . 11) (undo-tree-id11272 . -10) (undo-tree-id11273 . -10) (undo-tree-id11274 . -10) (undo-tree-id11275 . -10) (undo-tree-id11276 . -11) (undo-tree-id11277 . -10) (undo-tree-id11278 . -2) (undo-tree-id11279 . -2) (undo-tree-id11280 . -2) (undo-tree-id11281 . -2) (undo-tree-id11282 . -2) (undo-tree-id11283 . -2) (undo-tree-id11284 . -2) (undo-tree-id11285 . -2) (undo-tree-id11286 . -2) (undo-tree-id11287 . -2) (undo-tree-id11288 . -2) (undo-tree-id11289 . -2) (undo-tree-id11290 . -2) (undo-tree-id11291 . -2) (undo-tree-id11292 . -2) (undo-tree-id11293 . -2) (undo-tree-id11294 . -2) (undo-tree-id11295 . -2) (undo-tree-id11296 . -2) (undo-tree-id11297 . -2) (undo-tree-id11298 . -2) (undo-tree-id11299 . -5) (undo-tree-id11300 . -5) (undo-tree-id11301 . -5) (undo-tree-id11302 . -5) (undo-tree-id11303 . -5) (undo-tree-id11304 . -5) (undo-tree-id11305 . -5) (undo-tree-id11306 . -5) (undo-tree-id11307 . -5) (undo-tree-id11308 . -5) (undo-tree-id11309 . -5) (undo-tree-id11310 . -5) (undo-tree-id11311 . -5) (undo-tree-id11312 . -5) (undo-tree-id11313 . -5) (undo-tree-id11314 . -5) (undo-tree-id11315 . -5) (undo-tree-id11316 . -5) (undo-tree-id11317 . -5) (undo-tree-id11318 . -5) (undo-tree-id11319 . -5) (undo-tree-id11320 . -9) (undo-tree-id11321 . -9) (undo-tree-id11322 . -9) (undo-tree-id11323 . -9) (undo-tree-id11324 . -9) (undo-tree-id11325 . -9) (undo-tree-id11326 . -9) (undo-tree-id11327 . -9) (undo-tree-id11328 . -9) (undo-tree-id11329 . -9) (undo-tree-id11330 . -9) (undo-tree-id11331 . -9) (undo-tree-id11332 . -9) (undo-tree-id11333 . -9) (undo-tree-id11334 . -9) (undo-tree-id11335 . -9) (undo-tree-id11336 . -9) (undo-tree-id11337 . -9) (undo-tree-id11338 . -9) (undo-tree-id11339 . -9) (undo-tree-id11340 . -9) (undo-tree-id11341 . -10) (undo-tree-id11342 . -10) (undo-tree-id11343 . -10) (undo-tree-id11344 . -10) (undo-tree-id11345 . -10) (undo-tree-id11346 . -10) (undo-tree-id11347 . -10) (undo-tree-id11348 . -10) (undo-tree-id11349 . -10) (undo-tree-id11350 . -10) (undo-tree-id11351 . -10) (undo-tree-id11352 . -10) (undo-tree-id11353 . -10) (undo-tree-id11354 . -10) (undo-tree-id11355 . -10) (undo-tree-id11356 . -10) (undo-tree-id11357 . -10) (undo-tree-id11358 . -10) (undo-tree-id11359 . -10) (undo-tree-id11360 . -10) (undo-tree-id11361 . -10) (undo-tree-id11362 . -10) (undo-tree-id11363 . -10) (undo-tree-id11364 . -10) (undo-tree-id11365 . -10) (undo-tree-id11366 . -10) (undo-tree-id11367 . -10) (undo-tree-id11368 . -11) 457 (t 25774 24775 7790 987000)) nil (25774 24821 934234 661000) 0 nil])
([nil nil ((#("n" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 456) (undo-tree-id11243 . -1) (undo-tree-id11244 . -1) (undo-tree-id11245 . -1) (undo-tree-id11246 . -1) (undo-tree-id11247 . -1) (undo-tree-id11248 . -1) (undo-tree-id11249 . -1) (undo-tree-id11250 . -1) (undo-tree-id11251 . -1) (undo-tree-id11252 . -1) (undo-tree-id11253 . -1) (undo-tree-id11254 . -1) (undo-tree-id11255 . -1) (undo-tree-id11256 . -1) (undo-tree-id11257 . -1) (undo-tree-id11258 . -1) (undo-tree-id11259 . -1) (undo-tree-id11260 . -1) (undo-tree-id11261 . -1) (undo-tree-id11262 . -1) (undo-tree-id11263 . -1) (undo-tree-id11264 . -1) (undo-tree-id11265 . -1) (undo-tree-id11266 . -1) (undo-tree-id11267 . -1) (undo-tree-id11268 . -1) (undo-tree-id11269 . -1) (undo-tree-id11270 . -1)) nil (25774 24821 934177 431000) 0 nil])
([nil nil ((#("g" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 456) (undo-tree-id11240 . -1) (undo-tree-id11241 . -1) (undo-tree-id11242 . -1)) nil (25774 24821 934160 433000) 0 nil])
([nil nil ((455 . 457) (#("i" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -455) (undo-tree-id11136 . -1) (undo-tree-id11137 . -1) (undo-tree-id11138 . -1) (undo-tree-id11139 . -1) (undo-tree-id11140 . -1) (undo-tree-id11141 . -1) (undo-tree-id11142 . -1) (undo-tree-id11143 . -1) (undo-tree-id11144 . -1) (undo-tree-id11145 . -1) (undo-tree-id11146 . -1) (undo-tree-id11147 . -1) (undo-tree-id11148 . -1) (undo-tree-id11149 . -1) (undo-tree-id11150 . -1) (undo-tree-id11151 . -1) (undo-tree-id11152 . -1) (undo-tree-id11153 . -1) (undo-tree-id11154 . -1) (undo-tree-id11155 . -1) (undo-tree-id11156 . -1) (undo-tree-id11157 . -1) (undo-tree-id11158 . -1) (undo-tree-id11159 . -1) (undo-tree-id11160 . -1) (undo-tree-id11161 . -1) (undo-tree-id11162 . -1) (undo-tree-id11163 . -1) (undo-tree-id11164 . -1) (undo-tree-id11165 . -1) (undo-tree-id11166 . -1) (undo-tree-id11167 . -1) (undo-tree-id11168 . -1) (undo-tree-id11169 . -1) (undo-tree-id11170 . -1) (undo-tree-id11171 . -1) (undo-tree-id11172 . -1) (undo-tree-id11173 . -1) (undo-tree-id11174 . -1) (undo-tree-id11175 . -1) (undo-tree-id11176 . -1) (undo-tree-id11177 . -1) (undo-tree-id11178 . -1) (undo-tree-id11179 . -1) (undo-tree-id11180 . -1) (undo-tree-id11181 . -1) (undo-tree-id11182 . -1) (undo-tree-id11183 . -1) (undo-tree-id11184 . -1) (undo-tree-id11185 . -1) (undo-tree-id11186 . -1) (undo-tree-id11187 . -1) (undo-tree-id11188 . -1) (undo-tree-id11189 . -1) (undo-tree-id11190 . -1) (undo-tree-id11191 . -1) (undo-tree-id11192 . -1) (undo-tree-id11193 . -1) (undo-tree-id11194 . -1) (undo-tree-id11195 . -1) (undo-tree-id11196 . -1) (undo-tree-id11197 . -1) (undo-tree-id11198 . -1) (undo-tree-id11199 . -1) (undo-tree-id11200 . -1) (undo-tree-id11201 . -1) (undo-tree-id11202 . -1) (undo-tree-id11203 . -1) (undo-tree-id11204 . -1) (undo-tree-id11205 . -1) (undo-tree-id11206 . -1) (undo-tree-id11207 . -1) (undo-tree-id11208 . -1) (undo-tree-id11209 . -1) (undo-tree-id11210 . -1) (undo-tree-id11211 . -1) (undo-tree-id11212 . -1) (undo-tree-id11213 . -1) (undo-tree-id11214 . -1) (undo-tree-id11215 . -1) (undo-tree-id11216 . -1) (undo-tree-id11217 . -1) (undo-tree-id11218 . -1) (undo-tree-id11219 . -1) (undo-tree-id11220 . -1) (undo-tree-id11221 . -1) (undo-tree-id11222 . -1) (undo-tree-id11223 . -1) (undo-tree-id11224 . -1) (undo-tree-id11225 . -1) (undo-tree-id11226 . -1) (undo-tree-id11227 . -1) (undo-tree-id11228 . -1) (undo-tree-id11229 . -1) (undo-tree-id11230 . -1) (undo-tree-id11231 . -1) (undo-tree-id11232 . -1) (undo-tree-id11233 . -1) (undo-tree-id11234 . -1) (undo-tree-id11235 . -1) (undo-tree-id11236 . -1) (undo-tree-id11237 . -1) (undo-tree-id11238 . -1) (undo-tree-id11239 . -1) 456) nil (25774 24821 934154 733000) 0 nil])
([nil nil ((445 . 1988) (#("- This is motivat- ed by the fact that translating a sentence word by word would likely result in grammatical errors, as illustrated in Figure 16.2: Figure 16.2: Translating a sentence word by word can lead to grammatical errors However, as illustrated in Figure 16.2, one limitation of this seq2seq approach is that the RNN is trying to remember the entire input sequence via one single hidden unit before translating it. Compressing all the information into one hidden unit may cause loss of information, especially for long sequences. Thus, similar to how humans translate sentences, it may be beneficial to have access to the whole input sequence at each time step. In contrast to a regular RNN, an attention mechanism lets the RNN access all input elements at each given time step. However, having access to all input sequence elements at each time step can be overwhelming. So, to help the RNN focus on the most relevant elements of the input sequence, the attention mechanism assigns different attention weights to each input element. These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation.

- RNN parses the whole input sentence before producing the first output" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 18 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 18 19 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 19 120 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 120 121 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 121 148 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 148 149 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 149 156 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 156 228 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 228 229 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 229 334 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 334 335 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 335 417 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 417 419 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 419 428 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 428 429 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 429 430 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 430 431 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 431 434 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 434 435 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 435 537 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 537 538 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 538 635 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 635 636 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 636 656 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 656 669 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 669 670 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 670 764 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 764 765 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 765 862 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 862 863 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 863 935 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 935 958 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 958 959 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 959 1057 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1057 1058 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1058 1157 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1157 1158 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1158 1257 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1257 1258 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1258 1315 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1315 1316 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1316 1413 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1413 1414 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1414 1469 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1469 1470 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1470 1471 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1471 1472 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1472 1473 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1473 1474 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1474 1543 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 445) (undo-tree-id10359 . 59) (undo-tree-id10360 . -1543) (undo-tree-id10361 . -1543) (undo-tree-id10362 . -1474) (undo-tree-id10363 . -1474) (undo-tree-id10364 . 69) (undo-tree-id10365 . -1474) (undo-tree-id10366 . -1474) (undo-tree-id10367 . -1543) (undo-tree-id10368 . -1543) (undo-tree-id10369 . -1543) (undo-tree-id10370 . -1543) (undo-tree-id10371 . -1543) (undo-tree-id10372 . -1543) (undo-tree-id10373 . -1543) (undo-tree-id10374 . -1543) (undo-tree-id10375 . -1543) (undo-tree-id10376 . -1543) (undo-tree-id10377 . -1543) (undo-tree-id10378 . -1543) (undo-tree-id10379 . -1543) (undo-tree-id10380 . -1543) (undo-tree-id10381 . -1543) (undo-tree-id10382 . -1543) (undo-tree-id10383 . -1543) (undo-tree-id10384 . -1543) (undo-tree-id10385 . -1543) (undo-tree-id10386 . -1543) (undo-tree-id10387 . -1543) (undo-tree-id10388 . -1543) (undo-tree-id10389 . -1543) (undo-tree-id10390 . -1543) (undo-tree-id10391 . -1543) (undo-tree-id10392 . -1543) (undo-tree-id10393 . -1543) (undo-tree-id10394 . -1543) (undo-tree-id10395 . -1543) (undo-tree-id10396 . -1543) (undo-tree-id10397 . -1543) (undo-tree-id10398 . -1543) (undo-tree-id10399 . -1543) (undo-tree-id10400 . -1543) (undo-tree-id10401 . -1543) (undo-tree-id10402 . -1543) (undo-tree-id10403 . -1543) (undo-tree-id10404 . -1543) (undo-tree-id10405 . -1543) (undo-tree-id10406 . -1543) (undo-tree-id10407 . -1543) (undo-tree-id10408 . -1543) (undo-tree-id10409 . -1543) (undo-tree-id10410 . -1543) (undo-tree-id10411 . -1543) (undo-tree-id10412 . -1543) (undo-tree-id10413 . -1543) (undo-tree-id10414 . -1543) (undo-tree-id10415 . -1543) (undo-tree-id10416 . -1543) (undo-tree-id10417 . -1543) (undo-tree-id10418 . -1543) (undo-tree-id10419 . -1543) (undo-tree-id10420 . -1543) (undo-tree-id10421 . -1543) (undo-tree-id10422 . -1543) (undo-tree-id10423 . -1543) (undo-tree-id10424 . -1483) (undo-tree-id10425 . -1543) (undo-tree-id10426 . -1474) (undo-tree-id10427 . -1474) (undo-tree-id10428 . -1474) (undo-tree-id10429 . -1474) (undo-tree-id10430 . -1474) (undo-tree-id10431 . -1474) (undo-tree-id10432 . -1474) (undo-tree-id10433 . -1474) (undo-tree-id10434 . -1474) (undo-tree-id10435 . -1474) (undo-tree-id10436 . -1474) (undo-tree-id10437 . -1474) (undo-tree-id10438 . -1474) (undo-tree-id10439 . -1474) (undo-tree-id10440 . -1474) (undo-tree-id10441 . -1474) (undo-tree-id10442 . -1474) (undo-tree-id10443 . -1474) (undo-tree-id10444 . -1474) (undo-tree-id10445 . -1474) (undo-tree-id10446 . -1474) (undo-tree-id10447 . -1474) (undo-tree-id10448 . -1474) (undo-tree-id10449 . -1474) (undo-tree-id10450 . -1474) (undo-tree-id10451 . -1474) (undo-tree-id10452 . -1474) (undo-tree-id10453 . -1474) (undo-tree-id10454 . -1474) (undo-tree-id10455 . -1474) (undo-tree-id10456 . -1474) (undo-tree-id10457 . -1474) (undo-tree-id10458 . -1474) (undo-tree-id10459 . -1474) (undo-tree-id10460 . -1474) (undo-tree-id10461 . -1474) (undo-tree-id10462 . -1474) (undo-tree-id10463 . -1474) (undo-tree-id10464 . -1474) (undo-tree-id10465 . -1474) (undo-tree-id10466 . -1474) (undo-tree-id10467 . -1474) (undo-tree-id10468 . -1474) (undo-tree-id10469 . -1474) (undo-tree-id10470 . -1474) (undo-tree-id10471 . -1474) (undo-tree-id10472 . -1474) (undo-tree-id10473 . -1474) (undo-tree-id10474 . -1474) (undo-tree-id10475 . -1474) (undo-tree-id10476 . -1474) (undo-tree-id10477 . -1474) (undo-tree-id10478 . -1474) (undo-tree-id10479 . -1474) (undo-tree-id10480 . -1474) (undo-tree-id10481 . -1474) (undo-tree-id10482 . -1474) (undo-tree-id10483 . -1474) (undo-tree-id10484 . -1474) (undo-tree-id10485 . -1474) (undo-tree-id10486 . -1474) (undo-tree-id10487 . -1474) (undo-tree-id10488 . -1474) (undo-tree-id10489 . -1474) (undo-tree-id10490 . -1474) (undo-tree-id10491 . -1474) (undo-tree-id10492 . -1474) (undo-tree-id10493 . -1474) (undo-tree-id10494 . -1474) (undo-tree-id10495 . -1474) (undo-tree-id10496 . -1474) (undo-tree-id10497 . -1474) (undo-tree-id10498 . -1474) (undo-tree-id10499 . -1474) (undo-tree-id10500 . -1474) (undo-tree-id10501 . -1474) (undo-tree-id10502 . -1474) (undo-tree-id10503 . -1474) (undo-tree-id10504 . -1474) (undo-tree-id10505 . -1474) (undo-tree-id10506 . -1474) (undo-tree-id10507 . -1474) (undo-tree-id10508 . -1474) (undo-tree-id10509 . -1474) (undo-tree-id10510 . -1474) (undo-tree-id10511 . -1474) (undo-tree-id10512 . -1474) (undo-tree-id10513 . -1474) (undo-tree-id10514 . -1474) (undo-tree-id10515 . -1474) (undo-tree-id10516 . -1474) (undo-tree-id10517 . -1474) (undo-tree-id10518 . -1474) (undo-tree-id10519 . -1474) (undo-tree-id10520 . -1474) (undo-tree-id10521 . -1474) (undo-tree-id10522 . -1474) (undo-tree-id10523 . -1474) (undo-tree-id10524 . -1474) (undo-tree-id10525 . -1474) (undo-tree-id10526 . -1474) (undo-tree-id10527 . -1474) (undo-tree-id10528 . -1474) (undo-tree-id10529 . -1474) (undo-tree-id10530 . -1474) (undo-tree-id10531 . -1474) (undo-tree-id10532 . -1474) (undo-tree-id10533 . -1474) (undo-tree-id10534 . -1474) (undo-tree-id10535 . -1474) (undo-tree-id10536 . -1474) (undo-tree-id10537 . -1474) (undo-tree-id10538 . -1474) (undo-tree-id10539 . -1474) (undo-tree-id10540 . -1474) (undo-tree-id10541 . -1474) (undo-tree-id10542 . -1474) (undo-tree-id10543 . -1474) (undo-tree-id10544 . -1474) (undo-tree-id10545 . -1474) (undo-tree-id10546 . -1474) (undo-tree-id10547 . -1474) (undo-tree-id10548 . -1474) (undo-tree-id10549 . -1474) (undo-tree-id10550 . -1474) (undo-tree-id10551 . -1474) (undo-tree-id10552 . -1474) (undo-tree-id10553 . -1474) (undo-tree-id10554 . -1474) (undo-tree-id10555 . -1474) (undo-tree-id10556 . -1474) (undo-tree-id10557 . -1474) (undo-tree-id10558 . -1474) (undo-tree-id10559 . -1474) (undo-tree-id10560 . -1474) (undo-tree-id10561 . -1474) (undo-tree-id10562 . -1474) (undo-tree-id10563 . -1474) (undo-tree-id10564 . -1474) (undo-tree-id10565 . -1474) (undo-tree-id10566 . -1474) (undo-tree-id10567 . -1474) (undo-tree-id10568 . -1474) (undo-tree-id10569 . -1474) (undo-tree-id10570 . -1474) (undo-tree-id10571 . -1474) (undo-tree-id10572 . -1474) (undo-tree-id10573 . -1474) (undo-tree-id10574 . -1474) (undo-tree-id10575 . -1474) (undo-tree-id10576 . -1474) (undo-tree-id10577 . -1474) (undo-tree-id10578 . -1474) (undo-tree-id10579 . -1474) (undo-tree-id10580 . -1474) (undo-tree-id10581 . -1474) (undo-tree-id10582 . -1474) (undo-tree-id10583 . -1474) (undo-tree-id10584 . -1474) (undo-tree-id10585 . -1474) (undo-tree-id10586 . -1474) (undo-tree-id10587 . -1474) (undo-tree-id10588 . -1474) (undo-tree-id10589 . -1474) (undo-tree-id10590 . -1474) (undo-tree-id10591 . -1474) (undo-tree-id10592 . -1474) (undo-tree-id10593 . -1474) (undo-tree-id10594 . -1474) (undo-tree-id10595 . -1474) (undo-tree-id10596 . -1474) (undo-tree-id10597 . -1474) (undo-tree-id10598 . -1474) (undo-tree-id10599 . -1474) (undo-tree-id10600 . -1474) (undo-tree-id10601 . -1474) (undo-tree-id10602 . 69) (undo-tree-id10603 . -1477) (undo-tree-id10604 . -1474) (undo-tree-id10605 . -1474) (undo-tree-id10606 . -1474) (undo-tree-id10607 . -1474) (undo-tree-id10608 . -1474) (undo-tree-id10609 . -1474) (undo-tree-id10610 . -1474) (undo-tree-id10611 . -1474) (undo-tree-id10612 . -1474) (undo-tree-id10613 . -1474) (undo-tree-id10614 . -1474) (undo-tree-id10615 . -1474) (undo-tree-id10616 . -1474) (undo-tree-id10617 . -1474) (undo-tree-id10618 . -1474) (undo-tree-id10619 . -1474) (undo-tree-id10620 . -1474) (undo-tree-id10621 . -1474) (undo-tree-id10622 . -1474) (undo-tree-id10623 . -1474) (undo-tree-id10624 . -1474) (undo-tree-id10625 . -1474) (undo-tree-id10626 . -1474) (undo-tree-id10627 . -1474) (undo-tree-id10628 . -1474) (undo-tree-id10629 . -1474) (undo-tree-id10630 . -1474) (undo-tree-id10631 . -1474) (undo-tree-id10632 . -1474) (undo-tree-id10633 . -1474) (undo-tree-id10634 . -1474) (undo-tree-id10635 . -1474) (undo-tree-id10636 . -1474) (undo-tree-id10637 . -1476) (undo-tree-id10638 . -1476) (undo-tree-id10639 . -1476) (undo-tree-id10640 . -1476) (undo-tree-id10641 . -1476) (undo-tree-id10642 . -1476) (undo-tree-id10643 . -1476) (undo-tree-id10644 . -1476) (undo-tree-id10645 . -1476) (undo-tree-id10646 . -1476) (undo-tree-id10647 . -1476) (undo-tree-id10648 . -1476) (undo-tree-id10649 . -1476) (undo-tree-id10650 . -1476) (undo-tree-id10651 . -1476) (undo-tree-id10652 . -1476) (undo-tree-id10653 . -1482) (undo-tree-id10654 . -1482) (undo-tree-id10655 . -1482) (undo-tree-id10656 . -1482) (undo-tree-id10657 . -1482) (undo-tree-id10658 . -1482) (undo-tree-id10659 . -1482) (undo-tree-id10660 . -1482) (undo-tree-id10661 . -1482) (undo-tree-id10662 . -1482) (undo-tree-id10663 . -1482) (undo-tree-id10664 . -1482) (undo-tree-id10665 . -1482) (undo-tree-id10666 . -1482) (undo-tree-id10667 . -1482) (undo-tree-id10668 . -1482) (undo-tree-id10669 . -1482) (undo-tree-id10670 . -1482) (undo-tree-id10671 . -1482) (undo-tree-id10672 . -1482) (undo-tree-id10673 . -1482) (undo-tree-id10674 . -1482) (undo-tree-id10675 . -1482) (undo-tree-id10676 . -1482) (undo-tree-id10677 . -1482) (undo-tree-id10678 . -1482) (undo-tree-id10679 . -1482) (undo-tree-id10680 . -1482) (undo-tree-id10681 . -1482) (undo-tree-id10682 . -1482) (undo-tree-id10683 . -1482) (undo-tree-id10684 . -1482) (undo-tree-id10685 . -1482) (undo-tree-id10686 . -1482) (undo-tree-id10687 . -1482) (undo-tree-id10688 . -1482) (undo-tree-id10689 . -1482) (undo-tree-id10690 . -1482) (undo-tree-id10691 . -1482) (undo-tree-id10692 . -1482) (undo-tree-id10693 . -1482) (undo-tree-id10694 . -1482) (undo-tree-id10695 . -1482) (undo-tree-id10696 . -1482) (undo-tree-id10697 . -1482) (undo-tree-id10698 . -1482) (undo-tree-id10699 . -1482) (undo-tree-id10700 . -1482) (undo-tree-id10701 . -1482) (undo-tree-id10702 . -1482) (undo-tree-id10703 . -1482) (undo-tree-id10704 . -1482) (undo-tree-id10705 . -1482) (undo-tree-id10706 . -1482) (undo-tree-id10707 . -1482) (undo-tree-id10708 . -1482) (undo-tree-id10709 . -1482) (undo-tree-id10710 . -1482) (undo-tree-id10711 . -1482) (undo-tree-id10712 . -1482) (undo-tree-id10713 . -1482) (undo-tree-id10714 . -1482) (undo-tree-id10715 . -1482) (undo-tree-id10716 . -1482) (undo-tree-id10717 . -1482) (undo-tree-id10718 . -1482) (undo-tree-id10719 . -1482) (undo-tree-id10720 . -1482) (undo-tree-id10721 . -1482) (undo-tree-id10722 . -1482) (undo-tree-id10723 . -1482) (undo-tree-id10724 . -1482) (undo-tree-id10725 . -1482) (undo-tree-id10726 . -1482) (undo-tree-id10727 . -1482) (undo-tree-id10728 . -1482) (undo-tree-id10729 . -1482) (undo-tree-id10730 . -1482) (undo-tree-id10731 . -1482) (undo-tree-id10732 . -1482) (undo-tree-id10733 . -1482) (undo-tree-id10734 . -1482) (undo-tree-id10735 . -1482) (undo-tree-id10736 . -1482) (undo-tree-id10737 . -1482) (undo-tree-id10738 . -1482) (undo-tree-id10739 . -1482) (undo-tree-id10740 . -1482) (undo-tree-id10741 . -1482) (undo-tree-id10742 . -1482) (undo-tree-id10743 . -1482) (undo-tree-id10744 . -1482) (undo-tree-id10745 . -1482) (undo-tree-id10746 . -1482) (undo-tree-id10747 . -1482) (undo-tree-id10748 . -1482) (undo-tree-id10749 . -1482) (undo-tree-id10750 . -1482) (undo-tree-id10751 . -1482) (undo-tree-id10752 . -1482) (undo-tree-id10753 . -1482) (undo-tree-id10754 . -1482) (undo-tree-id10755 . -1482) (undo-tree-id10756 . -1482) (undo-tree-id10757 . -1482) (undo-tree-id10758 . -1482) (undo-tree-id10759 . -1482) (undo-tree-id10760 . -1482) (undo-tree-id10761 . -1482) (undo-tree-id10762 . -1482) (undo-tree-id10763 . -1482) (undo-tree-id10764 . -1482) (undo-tree-id10765 . -1482) (undo-tree-id10766 . -1482) (undo-tree-id10767 . -1482) (undo-tree-id10768 . -1482) (undo-tree-id10769 . -1482) (undo-tree-id10770 . -1482) (undo-tree-id10771 . -1482) (undo-tree-id10772 . -1482) (undo-tree-id10773 . -1482) (undo-tree-id10774 . -1482) (undo-tree-id10775 . -1482) (undo-tree-id10776 . -1482) (undo-tree-id10777 . -1482) (undo-tree-id10778 . -1482) (undo-tree-id10779 . -1482) (undo-tree-id10780 . -1482) (undo-tree-id10781 . -1482) (undo-tree-id10782 . -1482) (undo-tree-id10783 . -1482) (undo-tree-id10784 . -1483) (undo-tree-id10785 . -1483) (undo-tree-id10786 . -1483) (undo-tree-id10787 . -1483) (undo-tree-id10788 . -1483) (undo-tree-id10789 . -1483) (undo-tree-id10790 . -1483) (undo-tree-id10791 . -1483) (undo-tree-id10792 . -1483) (undo-tree-id10793 . -1483) (undo-tree-id10794 . -1483) (undo-tree-id10795 . -1483) (undo-tree-id10796 . -1483) (undo-tree-id10797 . -1483) (undo-tree-id10798 . -1483) (undo-tree-id10799 . -1483) (undo-tree-id10800 . -1483) (undo-tree-id10801 . -1483) (undo-tree-id10802 . -1483) (undo-tree-id10803 . -1483) (undo-tree-id10804 . -1483) (undo-tree-id10805 . -1483) (undo-tree-id10806 . -1483) (undo-tree-id10807 . -1483) (undo-tree-id10808 . -1483) (undo-tree-id10809 . -1483) (undo-tree-id10810 . -1483) (undo-tree-id10811 . -1483) (undo-tree-id10812 . -1483) (undo-tree-id10813 . -1483) (undo-tree-id10814 . -1484) (undo-tree-id10815 . -1484) (undo-tree-id10816 . -1484) (undo-tree-id10817 . -1484) (undo-tree-id10818 . -1484) (undo-tree-id10819 . -1484) (undo-tree-id10820 . -1484) (undo-tree-id10821 . -1484) (undo-tree-id10822 . -1484) (undo-tree-id10823 . -1484) (undo-tree-id10824 . -1484) (undo-tree-id10825 . -1484) (undo-tree-id10826 . -1484) (undo-tree-id10827 . -1483) (undo-tree-id10828 . -1483) (undo-tree-id10829 . -1483) (undo-tree-id10830 . -1483) (undo-tree-id10831 . -1483) (undo-tree-id10832 . -1483) (undo-tree-id10833 . -1483) (undo-tree-id10834 . -1483) (undo-tree-id10835 . -1483) (undo-tree-id10836 . -1483) (undo-tree-id10837 . -1483) (undo-tree-id10838 . -1483) (undo-tree-id10839 . -1483) (undo-tree-id10840 . -1483) (undo-tree-id10841 . -1483) (undo-tree-id10842 . -1483) (undo-tree-id10843 . -1483) (undo-tree-id10844 . -1483) (undo-tree-id10845 . -1483) (undo-tree-id10846 . -1483) (undo-tree-id10847 . -1483) (undo-tree-id10848 . -1483) (undo-tree-id10849 . -1483) (undo-tree-id10850 . -1483) (undo-tree-id10851 . -1483) (undo-tree-id10852 . -1483) (undo-tree-id10853 . -1483) (undo-tree-id10854 . -1483) (undo-tree-id10855 . -1483) (undo-tree-id10856 . -1483) (undo-tree-id10857 . -1485) (undo-tree-id10858 . -1485) (undo-tree-id10859 . -1485) (undo-tree-id10860 . -1485) (undo-tree-id10861 . -1485) (undo-tree-id10862 . -1485) (undo-tree-id10863 . -1485) (undo-tree-id10864 . -1485) (undo-tree-id10865 . -1485) (undo-tree-id10866 . -1485) (undo-tree-id10867 . -1485) (undo-tree-id10868 . -1485) (undo-tree-id10869 . -1485) (undo-tree-id10870 . -1485) (undo-tree-id10871 . -1485) (undo-tree-id10872 . -1485) (undo-tree-id10873 . -1485) (undo-tree-id10874 . -1485) (undo-tree-id10875 . -1485) (undo-tree-id10876 . -1485) (undo-tree-id10877 . -1485) (undo-tree-id10878 . -1489) (undo-tree-id10879 . -1489) (undo-tree-id10880 . -1489) (undo-tree-id10881 . -1489) (undo-tree-id10882 . -1489) (undo-tree-id10883 . -1489) (undo-tree-id10884 . -1489) (undo-tree-id10885 . -1489) (undo-tree-id10886 . -1489) (undo-tree-id10887 . -1489) (undo-tree-id10888 . -1489) (undo-tree-id10889 . -1489) (undo-tree-id10890 . -1489) (undo-tree-id10891 . -1489) (undo-tree-id10892 . -1489) (undo-tree-id10893 . -1489) (undo-tree-id10894 . -1495) (undo-tree-id10895 . -1495) (undo-tree-id10896 . -1495) (undo-tree-id10897 . -1495) (undo-tree-id10898 . -1495) (undo-tree-id10899 . -1495) (undo-tree-id10900 . -1495) (undo-tree-id10901 . -1495) (undo-tree-id10902 . -1495) (undo-tree-id10903 . -1495) (undo-tree-id10904 . -1495) (undo-tree-id10905 . -1495) (undo-tree-id10906 . -1495) (undo-tree-id10907 . -1495) (undo-tree-id10908 . -1495) (undo-tree-id10909 . -1495) (undo-tree-id10910 . -1501) (undo-tree-id10911 . -1501) (undo-tree-id10912 . -1501) (undo-tree-id10913 . -1501) (undo-tree-id10914 . -1501) (undo-tree-id10915 . -1501) (undo-tree-id10916 . -1501) (undo-tree-id10917 . -1501) (undo-tree-id10918 . -1501) (undo-tree-id10919 . -1501) (undo-tree-id10920 . -1501) (undo-tree-id10921 . -1501) (undo-tree-id10922 . -1501) (undo-tree-id10923 . -1501) (undo-tree-id10924 . -1501) (undo-tree-id10925 . -1501) (undo-tree-id10926 . -1510) (undo-tree-id10927 . -1510) (undo-tree-id10928 . -1510) (undo-tree-id10929 . -1510) (undo-tree-id10930 . -1510) (undo-tree-id10931 . -1510) (undo-tree-id10932 . -1510) (undo-tree-id10933 . -1510) (undo-tree-id10934 . -1510) (undo-tree-id10935 . -1510) (undo-tree-id10936 . -1510) (undo-tree-id10937 . -1510) (undo-tree-id10938 . -1510) (undo-tree-id10939 . -1510) (undo-tree-id10940 . -1510) (undo-tree-id10941 . -1510) (undo-tree-id10942 . -1510) (undo-tree-id10943 . -1510) (undo-tree-id10944 . -1510) (undo-tree-id10945 . -1510) (undo-tree-id10946 . -1510) (undo-tree-id10947 . -1517) (undo-tree-id10948 . -1517) (undo-tree-id10949 . -1517) (undo-tree-id10950 . -1517) (undo-tree-id10951 . -1517) (undo-tree-id10952 . -1517) (undo-tree-id10953 . -1517) (undo-tree-id10954 . -1517) (undo-tree-id10955 . -1517) (undo-tree-id10956 . -1517) (undo-tree-id10957 . -1517) (undo-tree-id10958 . -1517) (undo-tree-id10959 . -1517) (undo-tree-id10960 . -1517) (undo-tree-id10961 . -1517) (undo-tree-id10962 . -1517) (undo-tree-id10963 . -1517) (undo-tree-id10964 . -1517) (undo-tree-id10965 . -1517) (undo-tree-id10966 . -1517) (undo-tree-id10967 . -1517) (undo-tree-id10968 . -1527) (undo-tree-id10969 . -1527) (undo-tree-id10970 . -1527) (undo-tree-id10971 . -1527) (undo-tree-id10972 . -1527) (undo-tree-id10973 . -1527) (undo-tree-id10974 . -1527) (undo-tree-id10975 . -1527) (undo-tree-id10976 . -1527) (undo-tree-id10977 . -1527) (undo-tree-id10978 . -1527) (undo-tree-id10979 . -1527) (undo-tree-id10980 . -1527) (undo-tree-id10981 . -1527) (undo-tree-id10982 . -1527) (undo-tree-id10983 . -1527) (undo-tree-id10984 . -1531) (undo-tree-id10985 . -1531) (undo-tree-id10986 . -1531) (undo-tree-id10987 . -1531) (undo-tree-id10988 . -1531) (undo-tree-id10989 . -1531) (undo-tree-id10990 . -1531) (undo-tree-id10991 . -1531) (undo-tree-id10992 . -1531) (undo-tree-id10993 . -1531) (undo-tree-id10994 . -1531) (undo-tree-id10995 . -1531) (undo-tree-id10996 . -1531) (undo-tree-id10997 . -1531) (undo-tree-id10998 . -1531) (undo-tree-id10999 . -1531) (undo-tree-id11000 . -1537) (undo-tree-id11001 . -1537) (undo-tree-id11002 . -1537) (undo-tree-id11003 . -1537) (undo-tree-id11004 . -1537) (undo-tree-id11005 . -1537) (undo-tree-id11006 . -1537) (undo-tree-id11007 . -1537) (undo-tree-id11008 . -1537) (undo-tree-id11009 . -1537) (undo-tree-id11010 . -1537) (undo-tree-id11011 . -1537) (undo-tree-id11012 . -1537) (undo-tree-id11013 . -1537) (undo-tree-id11014 . -1537) (undo-tree-id11015 . -1537) (undo-tree-id11016 . -1537) (undo-tree-id11017 . -1537) (undo-tree-id11018 . -1537) (undo-tree-id11019 . -1537) (undo-tree-id11020 . -1537) (undo-tree-id11021 . -1537) (undo-tree-id11022 . -1537) (undo-tree-id11023 . -1537) (undo-tree-id11024 . -1537) (undo-tree-id11025 . -1537) (undo-tree-id11026 . -1543) (undo-tree-id11027 . -1543) (undo-tree-id11028 . -1543) (undo-tree-id11029 . -1543) (undo-tree-id11030 . -1543) (undo-tree-id11031 . -1543) (undo-tree-id11032 . -1543) (undo-tree-id11033 . -1543) (undo-tree-id11034 . -1543) (undo-tree-id11035 . -1543) (undo-tree-id11036 . -1543) (undo-tree-id11037 . -1543) (undo-tree-id11038 . -1543) (undo-tree-id11039 . -1543) (undo-tree-id11040 . -1543) (undo-tree-id11041 . -1543) (undo-tree-id11042 . -1543) (undo-tree-id11043 . -1543) (undo-tree-id11044 . -1543) (undo-tree-id11045 . -1543) (undo-tree-id11046 . -1543) (undo-tree-id11047 . -1543) (undo-tree-id11048 . -1543) (undo-tree-id11049 . -1543) (undo-tree-id11050 . -1543) (undo-tree-id11051 . -1543) (undo-tree-id11052 . -1543) (undo-tree-id11053 . -1543) (undo-tree-id11054 . -1543) (undo-tree-id11055 . -1543) (undo-tree-id11056 . -1543) (undo-tree-id11057 . -1543) (undo-tree-id11058 . -1543) (undo-tree-id11059 . -1543) (undo-tree-id11060 . -1543) (undo-tree-id11061 . -1543) (undo-tree-id11062 . -1543) (undo-tree-id11063 . -1543) (undo-tree-id11064 . -1543) (undo-tree-id11065 . -1543) (undo-tree-id11066 . -1543) (undo-tree-id11067 . -1543) (undo-tree-id11068 . -1543) (undo-tree-id11069 . -1543) (undo-tree-id11070 . -1543) (undo-tree-id11071 . -1472) (445 . 1917) (#(" This is motivat- ed by the fact that translating a sentence word by word would likely result in grammatical errors, as illustrated in Figure 16.2: Figure 16.2: Translating a sentence word by word can lead to grammatical errors However, as illustrated in Figure 16.2, one limitation of this seq2seq approach is that the RNN is trying to remember the entire input sequence via one single hidden unit before translating it. Compressing all the information into one hidden unit may cause loss of information, especially for long sequences. Thus, similar to how humans translate sentences, it may be beneficial to have access to the whole input sequence at each time step. In contrast to a regular RNN, an attention mechanism lets the RNN access all input elements at each given time step. However, having access to all input sequence elements at each time step can be overwhelming. So, to help the RNN focus on the most relevant elements of the input sequence, the attention mechanism assigns different attention weights to each input element. These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation." 0 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 17 18 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 18 119 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 119 120 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 120 147 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 147 148 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 148 155 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 155 227 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 227 228 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 228 333 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 333 334 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 334 416 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 416 418 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 418 427 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 427 428 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 428 429 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 429 430 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 430 433 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 433 434 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 434 536 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 536 537 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 537 634 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 634 635 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 635 655 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 655 668 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 668 669 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 669 763 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 763 764 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 764 861 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 861 862 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 862 934 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 934 957 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 957 958 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 958 1056 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1056 1057 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1057 1156 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1156 1157 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1157 1256 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1256 1257 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1257 1314 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1314 1315 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1315 1412 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1412 1413 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1413 1468 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1468 1469 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 516) (undo-tree-id11072 . -1293) (undo-tree-id11073 . -1156) (undo-tree-id11074 . -1156) (undo-tree-id11075 . -1156) (undo-tree-id11076 . -1156) (undo-tree-id11077 . -1156) (undo-tree-id11078 . -1156) (undo-tree-id11079 . -1156) (undo-tree-id11080 . -1156) (undo-tree-id11081 . -1156) (undo-tree-id11082 . -1156) (undo-tree-id11083 . -1156) (undo-tree-id11084 . -1156) (undo-tree-id11085 . -1156) (undo-tree-id11086 . -1156) (undo-tree-id11087 . -1156) (undo-tree-id11088 . -1156) (undo-tree-id11089 . -1156) (undo-tree-id11090 . -1156) (undo-tree-id11091 . -1156) (undo-tree-id11092 . -1156) (undo-tree-id11093 . -1156) (undo-tree-id11094 . -668) (undo-tree-id11095 . -668) (undo-tree-id11096 . -668) (undo-tree-id11097 . -668) (undo-tree-id11098 . -668) (undo-tree-id11099 . -668) (undo-tree-id11100 . -668) (undo-tree-id11101 . -668) (undo-tree-id11102 . -668) (undo-tree-id11103 . -668) (undo-tree-id11104 . -668) (undo-tree-id11105 . -668) (undo-tree-id11106 . -668) (undo-tree-id11107 . -668) (undo-tree-id11108 . -668) (undo-tree-id11109 . -668) (undo-tree-id11110 . -536) (undo-tree-id11111 . -536) (undo-tree-id11112 . -536) (undo-tree-id11113 . -536) (undo-tree-id11114 . -536) (undo-tree-id11115 . -536) (undo-tree-id11116 . -536) (undo-tree-id11117 . -536) (undo-tree-id11118 . -536) (undo-tree-id11119 . -536) (undo-tree-id11120 . -536) (undo-tree-id11121 . -536) (undo-tree-id11122 . -536) (undo-tree-id11123 . -536) (undo-tree-id11124 . -536) (undo-tree-id11125 . -536) (undo-tree-id11126 . 1460) (undo-tree-id11127 . -16) (undo-tree-id11128 . 161) (undo-tree-id11129 . -1312) (undo-tree-id11130 . -1468) (undo-tree-id11131 . -1314) (undo-tree-id11132 . -1412) (#("?" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 516) (undo-tree-id11133 . -1) (undo-tree-id11134 . -1) (undo-tree-id11135 . -1)) nil (25774 24821 934069 315000) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 535) (undo-tree-id10357 . -1) (undo-tree-id10358 . -1)) nil (25774 24821 932791 944000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 535) (undo-tree-id10355 . -1) (undo-tree-id10356 . -1)) nil (25774 24821 932788 894000) 0 nil])
([nil nil ((518 . 1988) (#("- as illustrated in Figure 16.2: Figure 16.2: Translating a sentence word by word can lead to grammatical errors However, as illustrated in Figure 16.2, one limitation of this seq2seq approach is that the RNN is trying to remember the entire input sequence via one single hidden unit before translating it. Compressing all the information into one hidden unit may cause loss of information, especially for long sequences. Thus, similar to how humans translate sentences, it may be beneficial to have access to the whole input sequence at each time step. In contrast to a regular RNN, an attention mechanism lets the RNN access all input elements at each given time step. However, having access to all input sequence elements at each time step can be overwhelming. So, to help the RNN focus on the most relevant elements of the input sequence, the attention mechanism assigns different attention weights to each input element. These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation.

- This is motivated by the fact that translating a sentence word by word would likely result in grammatical errors" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 4 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 4 5 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 32 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 32 33 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 33 40 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 40 112 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 112 113 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 113 218 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 218 219 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 219 301 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 301 303 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 303 311 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 311 312 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 312 313 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 313 314 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 314 315 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 315 318 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 318 319 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 319 385 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 385 386 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 386 387 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 387 421 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 421 422 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 422 519 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 519 520 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 520 540 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 540 553 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 553 554 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 554 648 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 648 649 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 649 746 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 746 747 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 747 819 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 819 842 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 842 843 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 843 941 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 941 942 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 942 1041 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1041 1042 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1042 1141 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1141 1142 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1142 1199 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1199 1200 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1200 1297 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1297 1298 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1298 1353 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1353 1354 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1354 1355 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1355 1356 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1356 1357 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1357 1358 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1358 1373 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1373 1470 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 518) (undo-tree-id9872 . 112) (undo-tree-id9873 . -1470) (undo-tree-id9874 . -1470) (undo-tree-id9875 . -1470) (undo-tree-id9876 . -1358) (undo-tree-id9877 . -1358) (undo-tree-id9878 . -1358) (undo-tree-id9879 . -1358) (undo-tree-id9880 . -1358) (undo-tree-id9881 . -1358) (undo-tree-id9882 . -1358) (undo-tree-id9883 . -1358) (undo-tree-id9884 . -1358) (undo-tree-id9885 . -1358) (undo-tree-id9886 . -1358) (undo-tree-id9887 . -1358) (undo-tree-id9888 . -1358) (undo-tree-id9889 . -1358) (undo-tree-id9890 . -1358) (undo-tree-id9891 . -1358) (undo-tree-id9892 . -1358) (undo-tree-id9893 . -1357) (undo-tree-id9894 . -1357) (undo-tree-id9895 . -1357) (undo-tree-id9896 . -1357) (undo-tree-id9897 . -1357) (undo-tree-id9898 . -1357) (undo-tree-id9899 . -1357) (undo-tree-id9900 . -1357) (undo-tree-id9901 . -1357) (undo-tree-id9902 . -1357) (undo-tree-id9903 . -1357) (undo-tree-id9904 . -1357) (undo-tree-id9905 . -1357) (undo-tree-id9906 . -1357) (undo-tree-id9907 . -1357) (undo-tree-id9908 . -1357) (undo-tree-id9909 . -1357) (undo-tree-id9910 . -1357) (undo-tree-id9911 . -1357) (undo-tree-id9912 . -1357) (undo-tree-id9913 . -1357) (undo-tree-id9914 . -1357) (undo-tree-id9915 . -1357) (undo-tree-id9916 . -1357) (undo-tree-id9917 . -1357) (undo-tree-id9918 . -1358) (undo-tree-id9919 . -1358) (undo-tree-id9920 . -1358) (undo-tree-id9921 . -1358) (undo-tree-id9922 . -1358) (undo-tree-id9923 . -1358) (undo-tree-id9924 . -1358) (undo-tree-id9925 . -1358) (undo-tree-id9926 . -1358) (undo-tree-id9927 . -1358) (undo-tree-id9928 . -1358) (undo-tree-id9929 . -1358) (undo-tree-id9930 . -1358) (undo-tree-id9931 . -1358) (undo-tree-id9932 . -1358) (undo-tree-id9933 . -1358) (undo-tree-id9934 . -1358) (undo-tree-id9935 . -1358) (undo-tree-id9936 . -1358) (undo-tree-id9937 . -1358) (undo-tree-id9938 . -1358) (undo-tree-id9939 . -1358) (undo-tree-id9940 . -1358) (undo-tree-id9941 . -1358) (undo-tree-id9942 . -1358) (undo-tree-id9943 . -1358) (undo-tree-id9944 . -1358) (undo-tree-id9945 . -1358) (undo-tree-id9946 . -1358) (undo-tree-id9947 . -1358) (undo-tree-id9948 . -1358) (undo-tree-id9949 . -1358) (undo-tree-id9950 . -1358) (undo-tree-id9951 . -1358) (undo-tree-id9952 . -1358) (undo-tree-id9953 . -1358) (undo-tree-id9954 . -1358) (undo-tree-id9955 . -1358) (undo-tree-id9956 . -1358) (undo-tree-id9957 . -1358) (undo-tree-id9958 . -1358) (undo-tree-id9959 . -1373) (undo-tree-id9960 . -1373) (undo-tree-id9961 . -1373) (undo-tree-id9962 . -1373) (undo-tree-id9963 . -1373) (undo-tree-id9964 . -1373) (undo-tree-id9965 . -1373) (undo-tree-id9966 . -1373) (undo-tree-id9967 . -1373) (undo-tree-id9968 . -1373) (undo-tree-id9969 . -1373) (undo-tree-id9970 . -1373) (undo-tree-id9971 . -1373) (undo-tree-id9972 . -1373) (undo-tree-id9973 . -1373) (undo-tree-id9974 . -1373) (undo-tree-id9975 . -1373) (undo-tree-id9976 . -1373) (undo-tree-id9977 . -1373) (undo-tree-id9978 . -1373) (undo-tree-id9979 . -1373) (undo-tree-id9980 . -1373) (undo-tree-id9981 . -1373) (undo-tree-id9982 . -1373) (undo-tree-id9983 . -1373) (undo-tree-id9984 . -1373) (undo-tree-id9985 . -1373) (undo-tree-id9986 . -1373) (undo-tree-id9987 . -1373) (undo-tree-id9988 . -1373) (undo-tree-id9989 . -1373) (undo-tree-id9990 . -1373) (undo-tree-id9991 . -1373) (undo-tree-id9992 . -1373) (undo-tree-id9993 . -1373) (undo-tree-id9994 . -1373) (undo-tree-id9995 . -1373) (undo-tree-id9996 . -1373) (undo-tree-id9997 . -1373) (undo-tree-id9998 . -1373) (undo-tree-id9999 . -1373) (undo-tree-id10000 . -1373) (undo-tree-id10001 . -1373) (undo-tree-id10002 . -1373) (undo-tree-id10003 . -1373) (undo-tree-id10004 . -1373) (undo-tree-id10005 . -1373) (undo-tree-id10006 . -1373) (undo-tree-id10007 . -1373) (undo-tree-id10008 . -1373) (undo-tree-id10009 . -1373) (undo-tree-id10010 . -1373) (undo-tree-id10011 . -1373) (undo-tree-id10012 . -1373) (undo-tree-id10013 . -1373) (undo-tree-id10014 . -1373) (undo-tree-id10015 . -1373) (undo-tree-id10016 . -1373) (undo-tree-id10017 . -1373) (undo-tree-id10018 . -1373) (undo-tree-id10019 . -1374) (undo-tree-id10020 . -1374) (undo-tree-id10021 . -1374) (undo-tree-id10022 . -1374) (undo-tree-id10023 . -1374) (undo-tree-id10024 . -1374) (undo-tree-id10025 . -1374) (undo-tree-id10026 . -1374) (undo-tree-id10027 . -1374) (undo-tree-id10028 . -1374) (undo-tree-id10029 . -1374) (undo-tree-id10030 . -1374) (undo-tree-id10031 . -1374) (undo-tree-id10032 . -1374) (undo-tree-id10033 . -1374) (undo-tree-id10034 . -1374) (undo-tree-id10035 . -1377) (undo-tree-id10036 . -1377) (undo-tree-id10037 . -1377) (undo-tree-id10038 . -1377) (undo-tree-id10039 . -1377) (undo-tree-id10040 . -1377) (undo-tree-id10041 . -1377) (undo-tree-id10042 . -1377) (undo-tree-id10043 . -1377) (undo-tree-id10044 . -1377) (undo-tree-id10045 . -1377) (undo-tree-id10046 . -1377) (undo-tree-id10047 . -1377) (undo-tree-id10048 . -1377) (undo-tree-id10049 . -1377) (undo-tree-id10050 . -1377) (undo-tree-id10051 . -1381) (undo-tree-id10052 . -1381) (undo-tree-id10053 . -1381) (undo-tree-id10054 . -1381) (undo-tree-id10055 . -1381) (undo-tree-id10056 . -1381) (undo-tree-id10057 . -1381) (undo-tree-id10058 . -1381) (undo-tree-id10059 . -1381) (undo-tree-id10060 . -1381) (undo-tree-id10061 . -1381) (undo-tree-id10062 . -1381) (undo-tree-id10063 . -1381) (undo-tree-id10064 . -1381) (undo-tree-id10065 . -1381) (undo-tree-id10066 . -1381) (undo-tree-id10067 . -1386) (undo-tree-id10068 . -1386) (undo-tree-id10069 . -1386) (undo-tree-id10070 . -1386) (undo-tree-id10071 . -1386) (undo-tree-id10072 . -1386) (undo-tree-id10073 . -1386) (undo-tree-id10074 . -1386) (undo-tree-id10075 . -1386) (undo-tree-id10076 . -1386) (undo-tree-id10077 . -1386) (undo-tree-id10078 . -1386) (undo-tree-id10079 . -1386) (undo-tree-id10080 . -1386) (undo-tree-id10081 . -1386) (undo-tree-id10082 . -1386) (undo-tree-id10083 . -1386) (undo-tree-id10084 . -1386) (undo-tree-id10085 . -1386) (undo-tree-id10086 . -1386) (undo-tree-id10087 . -1386) (undo-tree-id10088 . -1391) (undo-tree-id10089 . -1391) (undo-tree-id10090 . -1391) (undo-tree-id10091 . -1391) (undo-tree-id10092 . -1391) (undo-tree-id10093 . -1391) (undo-tree-id10094 . -1391) (undo-tree-id10095 . -1391) (undo-tree-id10096 . -1391) (undo-tree-id10097 . -1391) (undo-tree-id10098 . -1391) (undo-tree-id10099 . -1403) (undo-tree-id10100 . -1403) (undo-tree-id10101 . -1403) (undo-tree-id10102 . -1403) (undo-tree-id10103 . -1403) (undo-tree-id10104 . -1403) (undo-tree-id10105 . -1403) (undo-tree-id10106 . -1403) (undo-tree-id10107 . -1403) (undo-tree-id10108 . -1403) (undo-tree-id10109 . -1403) (undo-tree-id10110 . -1405) (undo-tree-id10111 . -1405) (undo-tree-id10112 . -1405) (undo-tree-id10113 . -1405) (undo-tree-id10114 . -1405) (undo-tree-id10115 . -1405) (undo-tree-id10116 . -1405) (undo-tree-id10117 . -1405) (undo-tree-id10118 . -1405) (undo-tree-id10119 . -1405) (undo-tree-id10120 . -1405) (undo-tree-id10121 . -1414) (undo-tree-id10122 . -1414) (undo-tree-id10123 . -1414) (undo-tree-id10124 . -1414) (undo-tree-id10125 . -1414) (undo-tree-id10126 . -1414) (undo-tree-id10127 . -1414) (undo-tree-id10128 . -1414) (undo-tree-id10129 . -1414) (undo-tree-id10130 . -1414) (undo-tree-id10131 . -1414) (undo-tree-id10132 . -1419) (undo-tree-id10133 . -1419) (undo-tree-id10134 . -1419) (undo-tree-id10135 . -1419) (undo-tree-id10136 . -1419) (undo-tree-id10137 . -1419) (undo-tree-id10138 . -1419) (undo-tree-id10139 . -1419) (undo-tree-id10140 . -1419) (undo-tree-id10141 . -1419) (undo-tree-id10142 . -1419) (undo-tree-id10143 . -1422) (undo-tree-id10144 . -1422) (undo-tree-id10145 . -1422) (undo-tree-id10146 . -1422) (undo-tree-id10147 . -1422) (undo-tree-id10148 . -1422) (undo-tree-id10149 . -1422) (undo-tree-id10150 . -1422) (undo-tree-id10151 . -1422) (undo-tree-id10152 . -1422) (undo-tree-id10153 . -1422) (undo-tree-id10154 . -1427) (undo-tree-id10155 . -1427) (undo-tree-id10156 . -1427) (undo-tree-id10157 . -1427) (undo-tree-id10158 . -1427) (undo-tree-id10159 . -1427) (undo-tree-id10160 . -1427) (undo-tree-id10161 . -1427) (undo-tree-id10162 . -1427) (undo-tree-id10163 . -1427) (undo-tree-id10164 . -1427) (undo-tree-id10165 . -1433) (undo-tree-id10166 . -1433) (undo-tree-id10167 . -1433) (undo-tree-id10168 . -1433) (undo-tree-id10169 . -1433) (undo-tree-id10170 . -1433) (undo-tree-id10171 . -1433) (undo-tree-id10172 . -1433) (undo-tree-id10173 . -1433) (undo-tree-id10174 . -1433) (undo-tree-id10175 . -1433) (undo-tree-id10176 . -1440) (undo-tree-id10177 . -1440) (undo-tree-id10178 . -1440) (undo-tree-id10179 . -1440) (undo-tree-id10180 . -1440) (undo-tree-id10181 . -1440) (undo-tree-id10182 . -1440) (undo-tree-id10183 . -1440) (undo-tree-id10184 . -1440) (undo-tree-id10185 . -1440) (undo-tree-id10186 . -1440) (undo-tree-id10187 . -1440) (undo-tree-id10188 . -1440) (undo-tree-id10189 . -1440) (undo-tree-id10190 . -1440) (undo-tree-id10191 . -1440) (undo-tree-id10192 . -1440) (undo-tree-id10193 . -1440) (undo-tree-id10194 . -1440) (undo-tree-id10195 . -1440) (undo-tree-id10196 . -1440) (undo-tree-id10197 . -1440) (undo-tree-id10198 . -1440) (undo-tree-id10199 . -1440) (undo-tree-id10200 . -1440) (undo-tree-id10201 . -1440) (undo-tree-id10202 . -1447) (undo-tree-id10203 . -1447) (undo-tree-id10204 . -1447) (undo-tree-id10205 . -1447) (undo-tree-id10206 . -1447) (undo-tree-id10207 . -1447) (undo-tree-id10208 . -1447) (undo-tree-id10209 . -1447) (undo-tree-id10210 . -1447) (undo-tree-id10211 . -1447) (undo-tree-id10212 . -1447) (undo-tree-id10213 . -1447) (undo-tree-id10214 . -1447) (undo-tree-id10215 . -1447) (undo-tree-id10216 . -1447) (undo-tree-id10217 . -1447) (undo-tree-id10218 . -1447) (undo-tree-id10219 . -1447) (undo-tree-id10220 . -1447) (undo-tree-id10221 . -1447) (undo-tree-id10222 . -1447) (undo-tree-id10223 . -1447) (undo-tree-id10224 . -1447) (undo-tree-id10225 . -1447) (undo-tree-id10226 . -1447) (undo-tree-id10227 . -1447) (undo-tree-id10228 . -1450) (undo-tree-id10229 . -1450) (undo-tree-id10230 . -1450) (undo-tree-id10231 . -1450) (undo-tree-id10232 . -1450) (undo-tree-id10233 . -1450) (undo-tree-id10234 . -1450) (undo-tree-id10235 . -1450) (undo-tree-id10236 . -1450) (undo-tree-id10237 . -1450) (undo-tree-id10238 . -1450) (undo-tree-id10239 . -1450) (undo-tree-id10240 . -1450) (undo-tree-id10241 . -1450) (undo-tree-id10242 . -1450) (undo-tree-id10243 . -1450) (undo-tree-id10244 . -1462) (undo-tree-id10245 . -1462) (undo-tree-id10246 . -1462) (undo-tree-id10247 . -1462) (undo-tree-id10248 . -1462) (undo-tree-id10249 . -1462) (undo-tree-id10250 . -1462) (undo-tree-id10251 . -1462) (undo-tree-id10252 . -1462) (undo-tree-id10253 . -1462) (undo-tree-id10254 . -1462) (undo-tree-id10255 . -1462) (undo-tree-id10256 . -1462) (undo-tree-id10257 . -1462) (undo-tree-id10258 . -1462) (undo-tree-id10259 . -1462) (undo-tree-id10260 . -1462) (undo-tree-id10261 . -1462) (undo-tree-id10262 . -1462) (undo-tree-id10263 . -1462) (undo-tree-id10264 . -1462) (undo-tree-id10265 . -1462) (undo-tree-id10266 . -1462) (undo-tree-id10267 . -1462) (undo-tree-id10268 . -1462) (undo-tree-id10269 . -1462) (undo-tree-id10270 . -1462) (undo-tree-id10271 . -1462) (undo-tree-id10272 . -1462) (undo-tree-id10273 . -1462) (undo-tree-id10274 . -1462) (undo-tree-id10275 . -1462) (undo-tree-id10276 . -1462) (undo-tree-id10277 . -1462) (undo-tree-id10278 . -1462) (undo-tree-id10279 . -1462) (undo-tree-id10280 . -1469) (undo-tree-id10281 . -1469) (undo-tree-id10282 . -1469) (undo-tree-id10283 . -1469) (undo-tree-id10284 . -1469) (undo-tree-id10285 . -1469) (undo-tree-id10286 . -1469) (undo-tree-id10287 . -1469) (undo-tree-id10288 . -1469) (undo-tree-id10289 . -1469) (undo-tree-id10290 . -1469) (undo-tree-id10291 . -1469) (undo-tree-id10292 . -1469) (undo-tree-id10293 . -1469) (undo-tree-id10294 . -1469) (undo-tree-id10295 . -1469) (undo-tree-id10296 . -1469) (undo-tree-id10297 . -1469) (undo-tree-id10298 . -1469) (undo-tree-id10299 . -1469) (undo-tree-id10300 . -1469) (undo-tree-id10301 . -1470) (undo-tree-id10302 . -1470) (undo-tree-id10303 . -1470) (undo-tree-id10304 . -1470) (undo-tree-id10305 . -1470) (undo-tree-id10306 . -1470) (undo-tree-id10307 . -1470) (undo-tree-id10308 . -1470) (undo-tree-id10309 . -1470) (undo-tree-id10310 . -1470) (undo-tree-id10311 . -1470) (undo-tree-id10312 . -1470) (undo-tree-id10313 . -1470) (undo-tree-id10314 . -1470) (undo-tree-id10315 . -1470) (undo-tree-id10316 . -1470) (undo-tree-id10317 . -1470) (undo-tree-id10318 . -1470) (undo-tree-id10319 . -1470) (undo-tree-id10320 . -1470) (undo-tree-id10321 . -1470) (undo-tree-id10322 . -1470) (undo-tree-id10323 . -1470) (undo-tree-id10324 . -1470) (undo-tree-id10325 . -1470) (undo-tree-id10326 . -1470) (undo-tree-id10327 . -1470) (undo-tree-id10328 . -1470) (undo-tree-id10329 . -1470) (undo-tree-id10330 . -1470) (undo-tree-id10331 . -1470) (undo-tree-id10332 . -1470) (undo-tree-id10333 . -1470) (undo-tree-id10334 . -1470) (undo-tree-id10335 . -1470) (undo-tree-id10336 . -1470) (undo-tree-id10337 . -1470) (undo-tree-id10338 . -1470) (undo-tree-id10339 . -1470) (undo-tree-id10340 . -1470) (undo-tree-id10341 . -1470) (undo-tree-id10342 . -1470) (undo-tree-id10343 . -1470) (undo-tree-id10344 . -1470) (undo-tree-id10345 . -1470) (undo-tree-id10346 . -1470) (undo-tree-id10347 . -1470) (undo-tree-id10348 . -1470) (undo-tree-id10349 . -1470) (undo-tree-id10350 . -1470) (undo-tree-id10351 . -1356) (518 . 1874) (#(" as illustrated in Figure 16.2: Figure 16.2: Translating a sentence word by word can lead to grammatical errors However, as illustrated in Figure 16.2, one limitation of this seq2seq approach is that the RNN is trying to remember the entire input sequence via one single hidden unit before translating it. Compressing all the information into one hidden unit may cause loss of information, especially for long sequences. Thus, similar to how humans translate sentences, it may be beneficial to have access to the whole input sequence at each time step. In contrast to a regular RNN, an attention mechanism lets the RNN access all input elements at each given time step. However, having access to all input sequence elements at each time step can be overwhelming. So, to help the RNN focus on the most relevant elements of the input sequence, the attention mechanism assigns different attention weights to each input element. These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation." 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 3 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 4 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 31 32 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 32 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 39 111 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 111 112 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 112 217 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 217 218 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 218 300 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 300 302 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 302 310 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 310 311 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 311 312 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 312 313 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 313 314 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 314 317 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 317 318 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 318 384 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 384 385 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 385 386 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 386 420 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 420 421 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 421 518 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 518 519 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 519 539 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 539 552 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 552 553 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 553 647 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 647 648 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 648 745 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 745 746 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 746 818 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 818 841 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 841 842 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 842 940 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 940 941 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 941 1040 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1040 1041 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1041 1140 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1140 1141 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1141 1198 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1198 1199 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1199 1296 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1296 1297 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1297 1352 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1352 1353 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 632) (#("," 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 632) (undo-tree-id10352 . -1) (undo-tree-id10353 . -1) (undo-tree-id10354 . -1)) nil (25774 24821 932758 80000) 0 nil])
([nil nil ((#("as illustrated in Figure 16.2: Figure 16.2: " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 2 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 30 31 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 31 38 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 38 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 636) (undo-tree-id11369 . 44) (undo-tree-id11370 . -43) (undo-tree-id11371 . -43) (undo-tree-id11372 . -43) (undo-tree-id11373 . -43) (undo-tree-id11374 . -44) (undo-tree-id11375 . -43) (undo-tree-id11376 . -1) (undo-tree-id11377 . -1) (undo-tree-id11378 . -1) (undo-tree-id11379 . -1) (undo-tree-id11380 . -1) (undo-tree-id11381 . -1) (undo-tree-id11382 . -1) (undo-tree-id11383 . -1) (undo-tree-id11384 . -1) (undo-tree-id11385 . -1) (undo-tree-id11386 . -1) (undo-tree-id11387 . -1) (undo-tree-id11388 . -1) (undo-tree-id11389 . -1) (undo-tree-id11390 . -1) (undo-tree-id11391 . -1) (undo-tree-id11392 . -1) (undo-tree-id11393 . -1) (undo-tree-id11394 . -1) (undo-tree-id11395 . -1) (undo-tree-id11396 . -1) (undo-tree-id11397 . -1) (undo-tree-id11398 . -1) (undo-tree-id11399 . -1) (undo-tree-id11400 . -1) (undo-tree-id11401 . -1) (undo-tree-id11402 . -1) (undo-tree-id11403 . -1) (undo-tree-id11404 . -1) (undo-tree-id11405 . -1) (undo-tree-id11406 . -1) (undo-tree-id11407 . -13) (undo-tree-id11408 . -13) (undo-tree-id11409 . -13) (undo-tree-id11410 . -13) (undo-tree-id11411 . -13) (undo-tree-id11412 . -13) (undo-tree-id11413 . -13) (undo-tree-id11414 . -13) (undo-tree-id11415 . -13) (undo-tree-id11416 . -13) (undo-tree-id11417 . -13) (undo-tree-id11418 . -16) (undo-tree-id11419 . -16) (undo-tree-id11420 . -16) (undo-tree-id11421 . -16) (undo-tree-id11422 . -16) (undo-tree-id11423 . -16) (undo-tree-id11424 . -16) (undo-tree-id11425 . -16) (undo-tree-id11426 . -16) (undo-tree-id11427 . -16) (undo-tree-id11428 . -16) (undo-tree-id11429 . -23) (undo-tree-id11430 . -23) (undo-tree-id11431 . -23) (undo-tree-id11432 . -23) (undo-tree-id11433 . -23) (undo-tree-id11434 . -23) (undo-tree-id11435 . -23) (undo-tree-id11436 . -23) (undo-tree-id11437 . -23) (undo-tree-id11438 . -23) (undo-tree-id11439 . -23) (undo-tree-id11440 . -26) (undo-tree-id11441 . -26) (undo-tree-id11442 . -26) (undo-tree-id11443 . -26) (undo-tree-id11444 . -26) (undo-tree-id11445 . -26) (undo-tree-id11446 . -26) (undo-tree-id11447 . -26) (undo-tree-id11448 . -26) (undo-tree-id11449 . -26) (undo-tree-id11450 . -26) (undo-tree-id11451 . -27) (undo-tree-id11452 . -27) (undo-tree-id11453 . -27) (undo-tree-id11454 . -27) (undo-tree-id11455 . -27) (undo-tree-id11456 . -27) (undo-tree-id11457 . -27) (undo-tree-id11458 . -27) (undo-tree-id11459 . -27) (undo-tree-id11460 . -27) (undo-tree-id11461 . -27) (undo-tree-id11462 . -28) (undo-tree-id11463 . -28) (undo-tree-id11464 . -28) (undo-tree-id11465 . -28) (undo-tree-id11466 . -28) (undo-tree-id11467 . -28) (undo-tree-id11468 . -28) (undo-tree-id11469 . -28) (undo-tree-id11470 . -28) (undo-tree-id11471 . -28) (undo-tree-id11472 . -28) (undo-tree-id11473 . -29) (undo-tree-id11474 . -29) (undo-tree-id11475 . -29) (undo-tree-id11476 . -29) (undo-tree-id11477 . -29) (undo-tree-id11478 . -29) (undo-tree-id11479 . -29) (undo-tree-id11480 . -29) (undo-tree-id11481 . -29) (undo-tree-id11482 . -29) (undo-tree-id11483 . -29) (undo-tree-id11484 . -29) (undo-tree-id11485 . -29) (undo-tree-id11486 . -29) (undo-tree-id11487 . -29) (undo-tree-id11488 . -29) (undo-tree-id11489 . -29) (undo-tree-id11490 . -29) (undo-tree-id11491 . -29) (undo-tree-id11492 . -29) (undo-tree-id11493 . -29) (undo-tree-id11494 . -36) (undo-tree-id11495 . -36) (undo-tree-id11496 . -36) (undo-tree-id11497 . -36) (undo-tree-id11498 . -36) (undo-tree-id11499 . -36) (undo-tree-id11500 . -36) (undo-tree-id11501 . -36) (undo-tree-id11502 . -36) (undo-tree-id11503 . -36) (undo-tree-id11504 . -36) (undo-tree-id11505 . -36) (undo-tree-id11506 . -36) (undo-tree-id11507 . -36) (undo-tree-id11508 . -36) (undo-tree-id11509 . -36) (undo-tree-id11510 . -36) (undo-tree-id11511 . -36) (undo-tree-id11512 . -36) (undo-tree-id11513 . -36) (undo-tree-id11514 . -36) (undo-tree-id11515 . -39) (undo-tree-id11516 . -39) (undo-tree-id11517 . -39) (undo-tree-id11518 . -39) (undo-tree-id11519 . -39) (undo-tree-id11520 . -39) (undo-tree-id11521 . -39) (undo-tree-id11522 . -39) (undo-tree-id11523 . -39) (undo-tree-id11524 . -39) (undo-tree-id11525 . -39) (undo-tree-id11526 . -39) (undo-tree-id11527 . -39) (undo-tree-id11528 . -39) (undo-tree-id11529 . -39) (undo-tree-id11530 . -39) (undo-tree-id11531 . -39) (undo-tree-id11532 . -39) (undo-tree-id11533 . -39) (undo-tree-id11534 . -39) (undo-tree-id11535 . -39) (undo-tree-id11536 . -40) (undo-tree-id11537 . -40) (undo-tree-id11538 . -40) (undo-tree-id11539 . -40) (undo-tree-id11540 . -40) (undo-tree-id11541 . -40) (undo-tree-id11542 . -40) (undo-tree-id11543 . -40) (undo-tree-id11544 . -40) (undo-tree-id11545 . -40) (undo-tree-id11546 . -40) (undo-tree-id11547 . -40) (undo-tree-id11548 . -40) (undo-tree-id11549 . -40) (undo-tree-id11550 . -40) (undo-tree-id11551 . -40) (undo-tree-id11552 . -40) (undo-tree-id11553 . -40) (undo-tree-id11554 . -40) (undo-tree-id11555 . -40) (undo-tree-id11556 . -40) (undo-tree-id11557 . -40) (undo-tree-id11558 . -40) (undo-tree-id11559 . -40) (undo-tree-id11560 . -40) (undo-tree-id11561 . -40) (undo-tree-id11562 . -41) (undo-tree-id11563 . -41) (undo-tree-id11564 . -41) (undo-tree-id11565 . -41) (undo-tree-id11566 . -41) (undo-tree-id11567 . -41) (undo-tree-id11568 . -41) (undo-tree-id11569 . -41) (undo-tree-id11570 . -41) (undo-tree-id11571 . -41) (undo-tree-id11572 . -41) (undo-tree-id11573 . -41) (undo-tree-id11574 . -41) (undo-tree-id11575 . -41) (undo-tree-id11576 . -41) (undo-tree-id11577 . -41) (undo-tree-id11578 . -41) (undo-tree-id11579 . -41) (undo-tree-id11580 . -41) (undo-tree-id11581 . -41) (undo-tree-id11582 . -41) (undo-tree-id11583 . -42) (undo-tree-id11584 . -42) (undo-tree-id11585 . -42) (undo-tree-id11586 . -42) (undo-tree-id11587 . -42) (undo-tree-id11588 . -42) (undo-tree-id11589 . -42) (undo-tree-id11590 . -42) (undo-tree-id11591 . -42) (undo-tree-id11592 . -42) (undo-tree-id11593 . -42) (undo-tree-id11594 . -42) (undo-tree-id11595 . -42) (undo-tree-id11596 . -42) (undo-tree-id11597 . -42) (undo-tree-id11598 . -42) (undo-tree-id11599 . -42) (undo-tree-id11600 . -42) (undo-tree-id11601 . -42) (undo-tree-id11602 . -42) (undo-tree-id11603 . -42) (undo-tree-id11604 . -43) (undo-tree-id11605 . -43) (undo-tree-id11606 . -43) (undo-tree-id11607 . -43) (undo-tree-id11608 . -43) (undo-tree-id11609 . -43) (undo-tree-id11610 . -43) (undo-tree-id11611 . -43) (undo-tree-id11612 . -43) (undo-tree-id11613 . -43) (undo-tree-id11614 . -43) (undo-tree-id11615 . -43) (undo-tree-id11616 . -43) (undo-tree-id11617 . -43) (undo-tree-id11618 . -43) (undo-tree-id11619 . -43) (undo-tree-id11620 . -43) (undo-tree-id11621 . -43) (undo-tree-id11622 . -43) (undo-tree-id11623 . -43) (undo-tree-id11624 . -43) (undo-tree-id11625 . -43) (undo-tree-id11626 . -44) 679 (t 25774 24821 942847 112000)) nil (25774 24831 275654 580000) 0 nil])
([nil nil ((#("Translating a sentence word by word can lead to grammatical errors However" 0 66 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 66 67 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 67 74 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 636) (undo-tree-id11639 . 74) (undo-tree-id11640 . -73) (undo-tree-id11641 . 74) (undo-tree-id11642 . -74) (t 25774 24831 286681 550000)) nil (25774 24854 81416 878000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 636) (undo-tree-id11635 . 2) (undo-tree-id11636 . -1) (undo-tree-id11637 . 2) (undo-tree-id11638 . -2)) nil (25774 24854 81412 811000) 0 nil])
([nil nil ((#("as illustrated in Figure 16.2" 0 29 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 636) (undo-tree-id11631 . 29) (undo-tree-id11632 . -28) (undo-tree-id11633 . 29) (undo-tree-id11634 . -29)) nil (25774 24854 81408 983000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 636) (undo-tree-id11627 . 2) (undo-tree-id11628 . -1) (undo-tree-id11629 . 2) (undo-tree-id11630 . -2)) nil (25774 24854 81404 486000) 0 nil])
([nil nil ((636 . 637) (#("o" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 636)) nil (25774 24854 81391 356000) 0 nil])
([nil nil ((634 . 1840) (#("- Compressing all the information into one hidden unit may cause loss of information, especially for long sequences. Thus, similar to how humans translate sentences, it may be beneficial to have access to the whole input sequence at each time step. In contrast to a regular RNN, an attention mechanism lets the RNN access all input elements at each given time step. However, having access to all input sequence elements at each time step can be overwhelming. So, to help the RNN focus on the most relevant elements of the input sequence, the attention mechanism assigns different attention weights to each input element. These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation.

- One limitation of this seq2seq approach is that the RNN is trying to remember the entire input sequence via one single hidden unit before translating it." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 6 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 6 7 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 7 8 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 8 9 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 9 10 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 10 13 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 13 14 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 14 79 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 79 80 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 80 81 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 81 82 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 82 116 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 116 117 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 117 214 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 214 215 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 215 235 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 235 239 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 239 248 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 248 249 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 249 313 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 313 315 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 315 343 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 343 344 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 344 346 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 346 441 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 441 442 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 442 514 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 514 537 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 537 538 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 538 636 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 636 637 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 637 736 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 736 737 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 737 836 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 836 837 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 837 894 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 894 895 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 895 992 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 992 993 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 993 1048 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1048 1049 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1049 1050 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1050 1051 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1051 1052 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1052 1053 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1053 1118 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1118 1119 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1119 1201 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1201 1203 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1203 1206 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 634) (undo-tree-id11643 . 153) (undo-tree-id11644 . -1053) (undo-tree-id11645 . -1053) (undo-tree-id11646 . 152) (undo-tree-id11647 . -1053) (undo-tree-id11648 . -1053) (undo-tree-id11649 . -1053) (undo-tree-id11650 . -1206) (undo-tree-id11651 . -1053) (undo-tree-id11652 . -1053) (undo-tree-id11653 . -1053) (undo-tree-id11654 . -1053) (undo-tree-id11655 . -1053) (undo-tree-id11656 . -1053) (undo-tree-id11657 . -1053) (undo-tree-id11658 . -1053) (undo-tree-id11659 . -1053) (undo-tree-id11660 . -1053) (undo-tree-id11661 . -1053) (undo-tree-id11662 . -1053) (undo-tree-id11663 . -1053) (undo-tree-id11664 . -1053) (undo-tree-id11665 . -1053) (undo-tree-id11666 . -1053) (undo-tree-id11667 . -1053) (undo-tree-id11668 . -1053) (undo-tree-id11669 . -1053) (undo-tree-id11670 . -1053) (undo-tree-id11671 . -1053) (undo-tree-id11672 . -1053) (undo-tree-id11673 . -1053) (undo-tree-id11674 . -1053) (undo-tree-id11675 . -1053) (undo-tree-id11676 . -1053) (undo-tree-id11677 . -1053) (undo-tree-id11678 . -1053) (undo-tree-id11679 . -1053) (undo-tree-id11680 . -1055) (undo-tree-id11681 . -1055) (undo-tree-id11682 . -1055) (undo-tree-id11683 . -1055) (undo-tree-id11684 . -1055) (undo-tree-id11685 . -1055) (undo-tree-id11686 . -1055) (undo-tree-id11687 . -1055) (undo-tree-id11688 . -1055) (undo-tree-id11689 . -1055) (undo-tree-id11690 . -1055) (undo-tree-id11691 . -1055) (undo-tree-id11692 . -1055) (undo-tree-id11693 . -1055) (undo-tree-id11694 . -1055) (undo-tree-id11695 . -1055) (undo-tree-id11696 . -1055) (undo-tree-id11697 . -1055) (undo-tree-id11698 . -1055) (undo-tree-id11699 . -1055) (undo-tree-id11700 . -1055) (undo-tree-id11701 . -1066) (undo-tree-id11702 . -1066) (undo-tree-id11703 . -1066) (undo-tree-id11704 . -1066) (undo-tree-id11705 . -1066) (undo-tree-id11706 . -1066) (undo-tree-id11707 . -1066) (undo-tree-id11708 . -1066) (undo-tree-id11709 . -1066) (undo-tree-id11710 . -1066) (undo-tree-id11711 . -1066) (undo-tree-id11712 . -1069) (undo-tree-id11713 . -1069) (undo-tree-id11714 . -1069) (undo-tree-id11715 . -1069) (undo-tree-id11716 . -1069) (undo-tree-id11717 . -1069) (undo-tree-id11718 . -1069) (undo-tree-id11719 . -1069) (undo-tree-id11720 . -1069) (undo-tree-id11721 . -1069) (undo-tree-id11722 . -1069) (undo-tree-id11723 . -1074) (undo-tree-id11724 . -1074) (undo-tree-id11725 . -1074) (undo-tree-id11726 . -1074) (undo-tree-id11727 . -1074) (undo-tree-id11728 . -1074) (undo-tree-id11729 . -1074) (undo-tree-id11730 . -1074) (undo-tree-id11731 . -1074) (undo-tree-id11732 . -1074) (undo-tree-id11733 . -1074) (undo-tree-id11734 . -1082) (undo-tree-id11735 . -1082) (undo-tree-id11736 . -1082) (undo-tree-id11737 . -1082) (undo-tree-id11738 . -1082) (undo-tree-id11739 . -1082) (undo-tree-id11740 . -1082) (undo-tree-id11741 . -1082) (undo-tree-id11742 . -1082) (undo-tree-id11743 . -1082) (undo-tree-id11744 . -1082) (undo-tree-id11745 . -1091) (undo-tree-id11746 . -1091) (undo-tree-id11747 . -1091) (undo-tree-id11748 . -1091) (undo-tree-id11749 . -1091) (undo-tree-id11750 . -1091) (undo-tree-id11751 . -1091) (undo-tree-id11752 . -1091) (undo-tree-id11753 . -1091) (undo-tree-id11754 . -1091) (undo-tree-id11755 . -1091) (undo-tree-id11756 . -1094) (undo-tree-id11757 . -1094) (undo-tree-id11758 . -1094) (undo-tree-id11759 . -1094) (undo-tree-id11760 . -1094) (undo-tree-id11761 . -1094) (undo-tree-id11762 . -1094) (undo-tree-id11763 . -1094) (undo-tree-id11764 . -1094) (undo-tree-id11765 . -1094) (undo-tree-id11766 . -1094) (undo-tree-id11767 . -1099) (undo-tree-id11768 . -1099) (undo-tree-id11769 . -1099) (undo-tree-id11770 . -1099) (undo-tree-id11771 . -1099) (undo-tree-id11772 . -1099) (undo-tree-id11773 . -1099) (undo-tree-id11774 . -1099) (undo-tree-id11775 . -1099) (undo-tree-id11776 . -1099) (undo-tree-id11777 . -1099) (undo-tree-id11778 . -1103) (undo-tree-id11779 . -1103) (undo-tree-id11780 . -1103) (undo-tree-id11781 . -1103) (undo-tree-id11782 . -1103) (undo-tree-id11783 . -1103) (undo-tree-id11784 . -1103) (undo-tree-id11785 . -1103) (undo-tree-id11786 . -1103) (undo-tree-id11787 . -1103) (undo-tree-id11788 . -1103) (undo-tree-id11789 . 101) (undo-tree-id11790 . -1108) (undo-tree-id11791 . -1107) (undo-tree-id11792 . -1107) (undo-tree-id11793 . -1107) (undo-tree-id11794 . -1107) (undo-tree-id11795 . -1107) (undo-tree-id11796 . -1107) (undo-tree-id11797 . -1107) (undo-tree-id11798 . -1107) (undo-tree-id11799 . -1107) (undo-tree-id11800 . -1107) (undo-tree-id11801 . -1107) (undo-tree-id11802 . -1110) (undo-tree-id11803 . -1110) (undo-tree-id11804 . -1110) (undo-tree-id11805 . -1110) (undo-tree-id11806 . -1110) (undo-tree-id11807 . -1110) (undo-tree-id11808 . -1110) (undo-tree-id11809 . -1110) (undo-tree-id11810 . -1110) (undo-tree-id11811 . -1110) (undo-tree-id11812 . -1110) (undo-tree-id11813 . -1117) (undo-tree-id11814 . -1117) (undo-tree-id11815 . -1117) (undo-tree-id11816 . -1117) (undo-tree-id11817 . -1117) (undo-tree-id11818 . -1117) (undo-tree-id11819 . -1117) (undo-tree-id11820 . -1117) (undo-tree-id11821 . -1117) (undo-tree-id11822 . -1117) (undo-tree-id11823 . -1117) (undo-tree-id11824 . -1117) (undo-tree-id11825 . -1117) (undo-tree-id11826 . -1117) (undo-tree-id11827 . -1117) (undo-tree-id11828 . -1117) (undo-tree-id11829 . -1117) (undo-tree-id11830 . -1117) (undo-tree-id11831 . -1117) (undo-tree-id11832 . -1117) (undo-tree-id11833 . -1117) (undo-tree-id11834 . -1117) (undo-tree-id11835 . -1117) (undo-tree-id11836 . -1117) (undo-tree-id11837 . -1117) (undo-tree-id11838 . -1117) (undo-tree-id11839 . -1117) (undo-tree-id11840 . -1117) (undo-tree-id11841 . -1117) (undo-tree-id11842 . -1117) (undo-tree-id11843 . -1117) (undo-tree-id11844 . -1117) (undo-tree-id11845 . -1117) (undo-tree-id11846 . -1117) (undo-tree-id11847 . -1117) (undo-tree-id11848 . -1117) (undo-tree-id11849 . -1120) (undo-tree-id11850 . -1120) (undo-tree-id11851 . -1120) (undo-tree-id11852 . -1120) (undo-tree-id11853 . -1120) (undo-tree-id11854 . -1120) (undo-tree-id11855 . -1120) (undo-tree-id11856 . -1120) (undo-tree-id11857 . -1120) (undo-tree-id11858 . -1120) (undo-tree-id11859 . -1120) (undo-tree-id11860 . -1120) (undo-tree-id11861 . -1120) (undo-tree-id11862 . -1120) (undo-tree-id11863 . -1120) (undo-tree-id11864 . -1120) (undo-tree-id11865 . -1129) (undo-tree-id11866 . -1129) (undo-tree-id11867 . -1129) (undo-tree-id11868 . -1129) (undo-tree-id11869 . -1129) (undo-tree-id11870 . -1129) (undo-tree-id11871 . -1129) (undo-tree-id11872 . -1129) (undo-tree-id11873 . -1129) (undo-tree-id11874 . -1129) (undo-tree-id11875 . -1129) (undo-tree-id11876 . -1129) (undo-tree-id11877 . -1129) (undo-tree-id11878 . -1129) (undo-tree-id11879 . -1129) (undo-tree-id11880 . -1129) (undo-tree-id11881 . -1133) (undo-tree-id11882 . -1133) (undo-tree-id11883 . -1133) (undo-tree-id11884 . -1133) (undo-tree-id11885 . -1133) (undo-tree-id11886 . -1133) (undo-tree-id11887 . -1133) (undo-tree-id11888 . -1133) (undo-tree-id11889 . -1133) (undo-tree-id11890 . -1133) (undo-tree-id11891 . -1133) (undo-tree-id11892 . -1133) (undo-tree-id11893 . -1133) (undo-tree-id11894 . -1133) (undo-tree-id11895 . -1133) (undo-tree-id11896 . -1133) (undo-tree-id11897 . -1140) (undo-tree-id11898 . -1140) (undo-tree-id11899 . -1140) (undo-tree-id11900 . -1140) (undo-tree-id11901 . -1140) (undo-tree-id11902 . -1140) (undo-tree-id11903 . -1140) (undo-tree-id11904 . -1140) (undo-tree-id11905 . -1140) (undo-tree-id11906 . -1140) (undo-tree-id11907 . -1140) (undo-tree-id11908 . -1140) (undo-tree-id11909 . -1140) (undo-tree-id11910 . -1140) (undo-tree-id11911 . -1140) (undo-tree-id11912 . -1140) (undo-tree-id11913 . -1146) (undo-tree-id11914 . -1146) (undo-tree-id11915 . -1146) (undo-tree-id11916 . -1146) (undo-tree-id11917 . -1146) (undo-tree-id11918 . -1146) (undo-tree-id11919 . -1146) (undo-tree-id11920 . -1146) (undo-tree-id11921 . -1146) (undo-tree-id11922 . -1146) (undo-tree-id11923 . -1146) (undo-tree-id11924 . -1146) (undo-tree-id11925 . -1146) (undo-tree-id11926 . -1146) (undo-tree-id11927 . -1146) (undo-tree-id11928 . -1146) (undo-tree-id11929 . -1155) (undo-tree-id11930 . -1155) (undo-tree-id11931 . -1155) (undo-tree-id11932 . -1155) (undo-tree-id11933 . -1155) (undo-tree-id11934 . -1155) (undo-tree-id11935 . -1155) (undo-tree-id11936 . -1155) (undo-tree-id11937 . -1155) (undo-tree-id11938 . -1155) (undo-tree-id11939 . -1155) (undo-tree-id11940 . -1155) (undo-tree-id11941 . -1155) (undo-tree-id11942 . -1155) (undo-tree-id11943 . -1155) (undo-tree-id11944 . -1155) (undo-tree-id11945 . -1159) (undo-tree-id11946 . -1159) (undo-tree-id11947 . -1159) (undo-tree-id11948 . -1159) (undo-tree-id11949 . -1159) (undo-tree-id11950 . -1159) (undo-tree-id11951 . -1159) (undo-tree-id11952 . -1159) (undo-tree-id11953 . -1159) (undo-tree-id11954 . -1159) (undo-tree-id11955 . -1159) (undo-tree-id11956 . -1159) (undo-tree-id11957 . -1159) (undo-tree-id11958 . -1159) (undo-tree-id11959 . -1159) (undo-tree-id11960 . -1159) (undo-tree-id11961 . -1163) (undo-tree-id11962 . -1163) (undo-tree-id11963 . -1163) (undo-tree-id11964 . -1163) (undo-tree-id11965 . -1163) (undo-tree-id11966 . -1163) (undo-tree-id11967 . -1163) (undo-tree-id11968 . -1163) (undo-tree-id11969 . -1163) (undo-tree-id11970 . -1163) (undo-tree-id11971 . -1163) (undo-tree-id11972 . -1163) (undo-tree-id11973 . -1163) (undo-tree-id11974 . -1163) (undo-tree-id11975 . -1163) (undo-tree-id11976 . -1163) (undo-tree-id11977 . -1170) (undo-tree-id11978 . -1170) (undo-tree-id11979 . -1170) (undo-tree-id11980 . -1170) (undo-tree-id11981 . -1170) (undo-tree-id11982 . -1170) (undo-tree-id11983 . -1170) (undo-tree-id11984 . -1170) (undo-tree-id11985 . -1170) (undo-tree-id11986 . -1170) (undo-tree-id11987 . -1170) (undo-tree-id11988 . -1170) (undo-tree-id11989 . -1170) (undo-tree-id11990 . -1170) (undo-tree-id11991 . -1170) (undo-tree-id11992 . -1170) (undo-tree-id11993 . -1177) (undo-tree-id11994 . -1177) (undo-tree-id11995 . -1177) (undo-tree-id11996 . -1177) (undo-tree-id11997 . -1177) (undo-tree-id11998 . -1177) (undo-tree-id11999 . -1177) (undo-tree-id12000 . -1177) (undo-tree-id12001 . -1177) (undo-tree-id12002 . -1177) (undo-tree-id12003 . -1177) (undo-tree-id12004 . -1177) (undo-tree-id12005 . -1177) (undo-tree-id12006 . -1177) (undo-tree-id12007 . -1177) (undo-tree-id12008 . -1177) (undo-tree-id12009 . -1182) (undo-tree-id12010 . -1182) (undo-tree-id12011 . -1182) (undo-tree-id12012 . -1182) (undo-tree-id12013 . -1182) (undo-tree-id12014 . -1182) (undo-tree-id12015 . -1182) (undo-tree-id12016 . -1182) (undo-tree-id12017 . -1182) (undo-tree-id12018 . -1182) (undo-tree-id12019 . -1182) (undo-tree-id12020 . -1182) (undo-tree-id12021 . -1182) (undo-tree-id12022 . -1182) (undo-tree-id12023 . -1182) (undo-tree-id12024 . -1182) (undo-tree-id12025 . -1182) (undo-tree-id12026 . -1182) (undo-tree-id12027 . -1182) (undo-tree-id12028 . -1182) (undo-tree-id12029 . -1182) (undo-tree-id12030 . -1189) (undo-tree-id12031 . -1189) (undo-tree-id12032 . -1189) (undo-tree-id12033 . -1189) (undo-tree-id12034 . -1189) (undo-tree-id12035 . -1189) (undo-tree-id12036 . -1189) (undo-tree-id12037 . -1189) (undo-tree-id12038 . -1189) (undo-tree-id12039 . -1189) (undo-tree-id12040 . -1189) (undo-tree-id12041 . -1189) (undo-tree-id12042 . -1189) (undo-tree-id12043 . -1189) (undo-tree-id12044 . -1189) (undo-tree-id12045 . -1189) (undo-tree-id12046 . -1189) (undo-tree-id12047 . -1189) (undo-tree-id12048 . -1189) (undo-tree-id12049 . -1189) (undo-tree-id12050 . -1189) (undo-tree-id12051 . -1189) (undo-tree-id12052 . -1189) (undo-tree-id12053 . -1189) (undo-tree-id12054 . -1189) (undo-tree-id12055 . -1189) (undo-tree-id12056 . -1189) (undo-tree-id12057 . -1189) (undo-tree-id12058 . -1189) (undo-tree-id12059 . -1189) (undo-tree-id12060 . -1189) (undo-tree-id12061 . -1201) (undo-tree-id12062 . -1201) (undo-tree-id12063 . -1201) (undo-tree-id12064 . -1201) (undo-tree-id12065 . -1201) (undo-tree-id12066 . -1201) (undo-tree-id12067 . -1201) (undo-tree-id12068 . -1201) (undo-tree-id12069 . -1201) (undo-tree-id12070 . -1201) (undo-tree-id12071 . -1201) (undo-tree-id12072 . -1201) (undo-tree-id12073 . -1201) (undo-tree-id12074 . -1201) (undo-tree-id12075 . -1201) (undo-tree-id12076 . -1201) (undo-tree-id12077 . -1204) (undo-tree-id12078 . -1204) (undo-tree-id12079 . -1204) (undo-tree-id12080 . -1204) (undo-tree-id12081 . -1204) (undo-tree-id12082 . -1204) (undo-tree-id12083 . -1204) (undo-tree-id12084 . -1204) (undo-tree-id12085 . -1204) (undo-tree-id12086 . -1204) (undo-tree-id12087 . -1204) (undo-tree-id12088 . -1204) (undo-tree-id12089 . -1204) (undo-tree-id12090 . -1204) (undo-tree-id12091 . -1204) (undo-tree-id12092 . -1204) (undo-tree-id12093 . -1205) (undo-tree-id12094 . -1205) (undo-tree-id12095 . -1205) (undo-tree-id12096 . -1205) (undo-tree-id12097 . -1205) (undo-tree-id12098 . -1205) (undo-tree-id12099 . -1205) (undo-tree-id12100 . -1205) (undo-tree-id12101 . -1205) (undo-tree-id12102 . -1205) (undo-tree-id12103 . -1205) (undo-tree-id12104 . -1205) (undo-tree-id12105 . -1205) (undo-tree-id12106 . -1205) (undo-tree-id12107 . -1205) (undo-tree-id12108 . -1205) (undo-tree-id12109 . -1205) (undo-tree-id12110 . -1205) (undo-tree-id12111 . -1205) (undo-tree-id12112 . -1205) (undo-tree-id12113 . -1205) (undo-tree-id12114 . -1206) (undo-tree-id12115 . -1206) (undo-tree-id12116 . -1206) (undo-tree-id12117 . -1206) (undo-tree-id12118 . -1206) (undo-tree-id12119 . -1206) (undo-tree-id12120 . -1206) (undo-tree-id12121 . -1206) (undo-tree-id12122 . -1206) (undo-tree-id12123 . -1206) (undo-tree-id12124 . -1206) (undo-tree-id12125 . -1206) (undo-tree-id12126 . -1206) (undo-tree-id12127 . -1206) (undo-tree-id12128 . -1206) (undo-tree-id12129 . -1206) (undo-tree-id12130 . -1206) (undo-tree-id12131 . -1206) (undo-tree-id12132 . -1206) (undo-tree-id12133 . -1206) (undo-tree-id12134 . -1206) (undo-tree-id12135 . -1206) (undo-tree-id12136 . -1206) (undo-tree-id12137 . -1206) (undo-tree-id12138 . -1206) (undo-tree-id12139 . -1206) (undo-tree-id12140 . -1206) (undo-tree-id12141 . -1206) (undo-tree-id12142 . -1206) (undo-tree-id12143 . -1051) (634 . 1685) (#(" Compressing all the information into one hidden unit may cause loss of information, especially for long sequences. Thus, similar to how humans translate sentences, it may be beneficial to have access to the whole input sequence at each time step. In contrast to a regular RNN, an attention mechanism lets the RNN access all input elements at each given time step. However, having access to all input sequence elements at each time step can be overwhelming. So, to help the RNN focus on the most relevant elements of the input sequence, the attention mechanism assigns different attention weights to each input element. These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation." 0 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 5 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 6 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 7 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 8 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 9 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 12 13 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 13 78 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 78 79 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 79 80 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 80 81 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 81 115 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 115 116 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 116 213 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 213 214 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 214 234 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 234 238 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 238 247 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 247 248 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 248 312 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 312 314 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 314 342 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 342 343 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 343 345 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 345 440 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 440 441 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 441 513 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 513 536 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 536 537 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 537 635 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 635 636 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 636 735 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 735 736 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 736 835 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 835 836 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 836 893 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 893 894 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 894 991 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 991 992 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 992 1047 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1047 1048 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 789) (t 25774 24854 90307 37000)) nil (25774 24866 277020 964000) 0 nil])
([nil nil ((791 . 1843) (#("- Thus, similar to how humans translate sentences, it may be beneficial to have access to the whole input sequence at each time step. In contrast to a regular RNN, an attention mechanism lets the RNN access all input elements at each given time step. However, having access to all input sequence elements at each time step can be overwhelming. So, to help the RNN focus on the most relevant elements of the input sequence, the attention mechanism assigns different attention weights to each input element. These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation.

- Compressing all the information into one hidden unit may cause loss of information, especially for long sequences." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 99 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 99 100 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 100 120 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 120 124 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 124 133 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 133 134 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 134 198 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 198 200 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 200 228 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 228 229 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 229 231 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 231 326 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 326 327 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 327 399 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 399 422 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 422 423 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 423 521 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 521 522 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 522 621 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 621 622 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 622 721 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 721 722 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 722 779 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 779 780 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 780 877 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 877 878 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 878 933 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 933 934 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 934 935 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 935 936 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 936 937 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 937 938 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 938 942 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 942 943 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 943 944 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 944 945 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 945 946 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 946 949 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 949 950 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 950 1015 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1015 1016 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1016 1017 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1017 1018 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1018 1052 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 791) (undo-tree-id12144 . 114) (undo-tree-id12145 . -937) (undo-tree-id12146 . -1052) (undo-tree-id12147 . -937) (undo-tree-id12148 . -937) (undo-tree-id12149 . -937) (undo-tree-id12150 . -937) (undo-tree-id12151 . -937) (undo-tree-id12152 . -937) (undo-tree-id12153 . -937) (undo-tree-id12154 . -937) (undo-tree-id12155 . -937) (undo-tree-id12156 . -937) (undo-tree-id12157 . -937) (undo-tree-id12158 . -937) (undo-tree-id12159 . -937) (undo-tree-id12160 . -937) (undo-tree-id12161 . -937) (undo-tree-id12162 . -937) (undo-tree-id12163 . -937) (undo-tree-id12164 . -937) (undo-tree-id12165 . -937) (undo-tree-id12166 . -937) (undo-tree-id12167 . -937) (undo-tree-id12168 . -937) (undo-tree-id12169 . -937) (undo-tree-id12170 . -937) (undo-tree-id12171 . -937) (undo-tree-id12172 . -937) (undo-tree-id12173 . -937) (undo-tree-id12174 . -937) (undo-tree-id12175 . -937) (undo-tree-id12176 . -948) (undo-tree-id12177 . -948) (undo-tree-id12178 . -948) (undo-tree-id12179 . -948) (undo-tree-id12180 . -948) (undo-tree-id12181 . -948) (undo-tree-id12182 . -948) (undo-tree-id12183 . -948) (undo-tree-id12184 . -948) (undo-tree-id12185 . -948) (undo-tree-id12186 . -948) (undo-tree-id12187 . -948) (undo-tree-id12188 . -948) (undo-tree-id12189 . -948) (undo-tree-id12190 . -948) (undo-tree-id12191 . -948) (undo-tree-id12192 . -948) (undo-tree-id12193 . -948) (undo-tree-id12194 . -948) (undo-tree-id12195 . -948) (undo-tree-id12196 . -948) (undo-tree-id12197 . -952) (undo-tree-id12198 . -952) (undo-tree-id12199 . -952) (undo-tree-id12200 . -952) (undo-tree-id12201 . -952) (undo-tree-id12202 . -952) (undo-tree-id12203 . -952) (undo-tree-id12204 . -952) (undo-tree-id12205 . -952) (undo-tree-id12206 . -952) (undo-tree-id12207 . -952) (undo-tree-id12208 . -956) (undo-tree-id12209 . -956) (undo-tree-id12210 . -956) (undo-tree-id12211 . -956) (undo-tree-id12212 . -956) (undo-tree-id12213 . -956) (undo-tree-id12214 . -956) (undo-tree-id12215 . -956) (undo-tree-id12216 . -956) (undo-tree-id12217 . -956) (undo-tree-id12218 . -956) (undo-tree-id12219 . -968) (undo-tree-id12220 . -968) (undo-tree-id12221 . -968) (undo-tree-id12222 . -968) (undo-tree-id12223 . -968) (undo-tree-id12224 . -968) (undo-tree-id12225 . -968) (undo-tree-id12226 . -968) (undo-tree-id12227 . -968) (undo-tree-id12228 . -968) (undo-tree-id12229 . -968) (undo-tree-id12230 . -973) (undo-tree-id12231 . -973) (undo-tree-id12232 . -973) (undo-tree-id12233 . -973) (undo-tree-id12234 . -973) (undo-tree-id12235 . -973) (undo-tree-id12236 . -973) (undo-tree-id12237 . -973) (undo-tree-id12238 . -973) (undo-tree-id12239 . -973) (undo-tree-id12240 . -973) (undo-tree-id12241 . -977) (undo-tree-id12242 . -977) (undo-tree-id12243 . -977) (undo-tree-id12244 . -977) (undo-tree-id12245 . -977) (undo-tree-id12246 . -977) (undo-tree-id12247 . -977) (undo-tree-id12248 . -977) (undo-tree-id12249 . -977) (undo-tree-id12250 . -977) (undo-tree-id12251 . -977) (undo-tree-id12252 . -977) (undo-tree-id12253 . -977) (undo-tree-id12254 . -977) (undo-tree-id12255 . -977) (undo-tree-id12256 . -977) (undo-tree-id12257 . -984) (undo-tree-id12258 . -984) (undo-tree-id12259 . -984) (undo-tree-id12260 . -984) (undo-tree-id12261 . -984) (undo-tree-id12262 . -984) (undo-tree-id12263 . -984) (undo-tree-id12264 . -984) (undo-tree-id12265 . -984) (undo-tree-id12266 . -984) (undo-tree-id12267 . -984) (undo-tree-id12268 . -984) (undo-tree-id12269 . -984) (undo-tree-id12270 . -984) (undo-tree-id12271 . -984) (undo-tree-id12272 . -984) (undo-tree-id12273 . -989) (undo-tree-id12274 . -989) (undo-tree-id12275 . -989) (undo-tree-id12276 . -989) (undo-tree-id12277 . -989) (undo-tree-id12278 . -989) (undo-tree-id12279 . -989) (undo-tree-id12280 . -989) (undo-tree-id12281 . -989) (undo-tree-id12282 . -989) (undo-tree-id12283 . -989) (undo-tree-id12284 . -989) (undo-tree-id12285 . -989) (undo-tree-id12286 . -989) (undo-tree-id12287 . -989) (undo-tree-id12288 . -989) (undo-tree-id12289 . -993) (undo-tree-id12290 . -993) (undo-tree-id12291 . -993) (undo-tree-id12292 . -993) (undo-tree-id12293 . -993) (undo-tree-id12294 . -993) (undo-tree-id12295 . -993) (undo-tree-id12296 . -993) (undo-tree-id12297 . -993) (undo-tree-id12298 . -993) (undo-tree-id12299 . -993) (undo-tree-id12300 . -993) (undo-tree-id12301 . -993) (undo-tree-id12302 . -993) (undo-tree-id12303 . -993) (undo-tree-id12304 . -993) (undo-tree-id12305 . -993) (undo-tree-id12306 . -993) (undo-tree-id12307 . -993) (undo-tree-id12308 . -993) (undo-tree-id12309 . -993) (undo-tree-id12310 . -999) (undo-tree-id12311 . -999) (undo-tree-id12312 . -999) (undo-tree-id12313 . -999) (undo-tree-id12314 . -999) (undo-tree-id12315 . -999) (undo-tree-id12316 . -999) (undo-tree-id12317 . -999) (undo-tree-id12318 . -999) (undo-tree-id12319 . -999) (undo-tree-id12320 . -999) (undo-tree-id12321 . -999) (undo-tree-id12322 . -999) (undo-tree-id12323 . -999) (undo-tree-id12324 . -999) (undo-tree-id12325 . -999) (undo-tree-id12326 . -1004) (undo-tree-id12327 . -1004) (undo-tree-id12328 . -1004) (undo-tree-id12329 . -1004) (undo-tree-id12330 . -1004) (undo-tree-id12331 . -1004) (undo-tree-id12332 . -1004) (undo-tree-id12333 . -1004) (undo-tree-id12334 . -1004) (undo-tree-id12335 . -1004) (undo-tree-id12336 . -1004) (undo-tree-id12337 . -1004) (undo-tree-id12338 . -1004) (undo-tree-id12339 . -1004) (undo-tree-id12340 . -1004) (undo-tree-id12341 . -1004) (undo-tree-id12342 . -1007) (undo-tree-id12343 . -1007) (undo-tree-id12344 . -1007) (undo-tree-id12345 . -1007) (undo-tree-id12346 . -1007) (undo-tree-id12347 . -1007) (undo-tree-id12348 . -1007) (undo-tree-id12349 . -1007) (undo-tree-id12350 . -1007) (undo-tree-id12351 . -1007) (undo-tree-id12352 . -1007) (undo-tree-id12353 . -1007) (undo-tree-id12354 . -1007) (undo-tree-id12355 . -1007) (undo-tree-id12356 . -1007) (undo-tree-id12357 . -1007) (undo-tree-id12358 . -1019) (undo-tree-id12359 . -1019) (undo-tree-id12360 . -1019) (undo-tree-id12361 . -1019) (undo-tree-id12362 . -1019) (undo-tree-id12363 . -1019) (undo-tree-id12364 . -1019) (undo-tree-id12365 . -1019) (undo-tree-id12366 . -1019) (undo-tree-id12367 . -1019) (undo-tree-id12368 . -1019) (undo-tree-id12369 . -1019) (undo-tree-id12370 . -1019) (undo-tree-id12371 . -1019) (undo-tree-id12372 . -1019) (undo-tree-id12373 . -1019) (undo-tree-id12374 . -1020) (undo-tree-id12375 . -1020) (undo-tree-id12376 . -1020) (undo-tree-id12377 . -1020) (undo-tree-id12378 . -1020) (undo-tree-id12379 . -1020) (undo-tree-id12380 . -1020) (undo-tree-id12381 . -1020) (undo-tree-id12382 . -1020) (undo-tree-id12383 . -1020) (undo-tree-id12384 . -1020) (undo-tree-id12385 . -1020) (undo-tree-id12386 . -1020) (undo-tree-id12387 . -1020) (undo-tree-id12388 . -1020) (undo-tree-id12389 . -1020) (undo-tree-id12390 . -1031) (undo-tree-id12391 . -1031) (undo-tree-id12392 . -1031) (undo-tree-id12393 . -1031) (undo-tree-id12394 . -1031) (undo-tree-id12395 . -1031) (undo-tree-id12396 . -1031) (undo-tree-id12397 . -1031) (undo-tree-id12398 . -1031) (undo-tree-id12399 . -1031) (undo-tree-id12400 . -1031) (undo-tree-id12401 . -1031) (undo-tree-id12402 . -1031) (undo-tree-id12403 . -1031) (undo-tree-id12404 . -1031) (undo-tree-id12405 . -1031) (undo-tree-id12406 . -1035) (undo-tree-id12407 . -1035) (undo-tree-id12408 . -1035) (undo-tree-id12409 . -1035) (undo-tree-id12410 . -1035) (undo-tree-id12411 . -1035) (undo-tree-id12412 . -1035) (undo-tree-id12413 . -1035) (undo-tree-id12414 . -1035) (undo-tree-id12415 . -1035) (undo-tree-id12416 . -1035) (undo-tree-id12417 . -1035) (undo-tree-id12418 . -1035) (undo-tree-id12419 . -1035) (undo-tree-id12420 . -1035) (undo-tree-id12421 . -1035) (undo-tree-id12422 . -1035) (undo-tree-id12423 . -1035) (undo-tree-id12424 . -1035) (undo-tree-id12425 . -1035) (undo-tree-id12426 . -1035) (undo-tree-id12427 . -1040) (undo-tree-id12428 . -1040) (undo-tree-id12429 . -1040) (undo-tree-id12430 . -1040) (undo-tree-id12431 . -1040) (undo-tree-id12432 . -1040) (undo-tree-id12433 . -1040) (undo-tree-id12434 . -1040) (undo-tree-id12435 . -1040) (undo-tree-id12436 . -1040) (undo-tree-id12437 . -1040) (undo-tree-id12438 . -1040) (undo-tree-id12439 . -1040) (undo-tree-id12440 . -1040) (undo-tree-id12441 . -1040) (undo-tree-id12442 . -1040) (undo-tree-id12443 . -1050) (undo-tree-id12444 . -1050) (undo-tree-id12445 . -1050) (undo-tree-id12446 . -1050) (undo-tree-id12447 . -1050) (undo-tree-id12448 . -1050) (undo-tree-id12449 . -1050) (undo-tree-id12450 . -1050) (undo-tree-id12451 . -1050) (undo-tree-id12452 . -1050) (undo-tree-id12453 . -1050) (undo-tree-id12454 . -1050) (undo-tree-id12455 . -1050) (undo-tree-id12456 . -1050) (undo-tree-id12457 . -1050) (undo-tree-id12458 . -1050) (undo-tree-id12459 . -1051) (undo-tree-id12460 . -1051) (undo-tree-id12461 . -1051) (undo-tree-id12462 . -1051) (undo-tree-id12463 . -1051) (undo-tree-id12464 . -1051) (undo-tree-id12465 . -1051) (undo-tree-id12466 . -1051) (undo-tree-id12467 . -1051) (undo-tree-id12468 . -1051) (undo-tree-id12469 . -1051) (undo-tree-id12470 . -1051) (undo-tree-id12471 . -1051) (undo-tree-id12472 . -1051) (undo-tree-id12473 . -1051) (undo-tree-id12474 . -1051) (undo-tree-id12475 . -1052) (undo-tree-id12476 . -1052) (undo-tree-id12477 . -1052) (undo-tree-id12478 . -1052) (undo-tree-id12479 . -1052) (undo-tree-id12480 . -1052) (undo-tree-id12481 . -1052) (undo-tree-id12482 . -1052) (undo-tree-id12483 . -1052) (undo-tree-id12484 . -1052) (undo-tree-id12485 . -1052) (undo-tree-id12486 . -1052) (undo-tree-id12487 . -1052) (undo-tree-id12488 . -1052) (undo-tree-id12489 . -1052) (undo-tree-id12490 . -1052) (undo-tree-id12491 . -1052) (undo-tree-id12492 . -1052) (undo-tree-id12493 . -1052) (undo-tree-id12494 . -1052) (undo-tree-id12495 . -1052) (undo-tree-id12496 . -1052) (undo-tree-id12497 . -1052) (undo-tree-id12498 . -1052) (undo-tree-id12499 . -936) (791 . 1727) (#(" Thus, similar to how humans translate sentences, it may be beneficial to have access to the whole input sequence at each time step. In contrast to a regular RNN, an attention mechanism lets the RNN access all input elements at each given time step. However, having access to all input sequence elements at each time step can be overwhelming. So, to help the RNN focus on the most relevant elements of the input sequence, the attention mechanism assigns different attention weights to each input element. These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 98 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 98 99 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 99 119 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 119 123 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 123 132 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 132 133 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 133 197 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 197 199 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 199 227 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 227 228 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 228 230 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 230 325 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 325 326 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 326 398 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 398 421 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 421 422 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 422 520 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 520 521 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 521 620 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 620 621 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 621 720 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 720 721 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 721 778 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 778 779 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 779 876 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 876 877 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 877 932 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 932 933 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 907) (t 25774 24866 286123 475000)) nil (25774 24874 705194 955000) 0 nil])
([nil nil ((#("Thus" 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 911) (undo-tree-id12953 . 4) (undo-tree-id12954 . -3) (undo-tree-id12955 . -4) (t 25774 24874 714003 245000)) nil (25774 24914 500186 291000) 0 nil])
([nil nil ((#(", similar to how humans translate sentences" 0 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 911) (undo-tree-id12950 . 43) (undo-tree-id12951 . -42) (undo-tree-id12952 . -43)) nil (25774 24914 500182 267000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 911) (undo-tree-id12947 . 2) (undo-tree-id12948 . -1) (undo-tree-id12949 . -2)) nil (25774 24914 500177 784000) 0 nil])
([nil nil ((911 . 912) (#("i" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 911)) nil (25774 24914 500174 124000) 0 nil])
([nil nil ((909 . 1797) (#("- In contrast to a regular RNN, an attention mechanism lets the RNN access all input elements at each given time step. However, having access to all input sequence elements at each time step can be overwhelming. So, to help the RNN focus on the most relevant elements of the input sequence, the attention mechanism assigns different attention weights to each input element. These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation.

- It may be beneficial to have access to the whole input sequence at each time step." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 66 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 66 68 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 68 96 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 96 97 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 97 99 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 99 194 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 194 195 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 195 250 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 250 267 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 267 290 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 290 291 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 291 372 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 372 389 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 389 390 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 390 415 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 415 417 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 417 489 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 489 490 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 490 589 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 589 590 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 590 647 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 647 648 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 648 745 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 745 746 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 746 801 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 801 802 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 802 803 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 803 804 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 804 805 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 805 806 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 806 854 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 854 855 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 855 875 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 875 879 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 879 888 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 909) (undo-tree-id12500 . 82) (undo-tree-id12501 . -806) (undo-tree-id12502 . -806) (undo-tree-id12503 . -806) (undo-tree-id12504 . -806) (undo-tree-id12505 . 81) (undo-tree-id12506 . -806) (undo-tree-id12507 . -806) (undo-tree-id12508 . -805) (undo-tree-id12509 . -805) (undo-tree-id12510 . -805) (undo-tree-id12511 . -805) (undo-tree-id12512 . -805) (undo-tree-id12513 . -805) (undo-tree-id12514 . -805) (undo-tree-id12515 . -805) (undo-tree-id12516 . -805) (undo-tree-id12517 . -805) (undo-tree-id12518 . -805) (undo-tree-id12519 . -805) (undo-tree-id12520 . -805) (undo-tree-id12521 . -805) (undo-tree-id12522 . -805) (undo-tree-id12523 . -805) (undo-tree-id12524 . -805) (undo-tree-id12525 . -805) (undo-tree-id12526 . -805) (undo-tree-id12527 . -805) (undo-tree-id12528 . -805) (undo-tree-id12529 . -805) (undo-tree-id12530 . -805) (undo-tree-id12531 . -805) (undo-tree-id12532 . -805) (undo-tree-id12533 . -805) (undo-tree-id12534 . -805) (undo-tree-id12535 . -805) (undo-tree-id12536 . -805) (undo-tree-id12537 . -805) (undo-tree-id12538 . -805) (undo-tree-id12539 . -805) (undo-tree-id12540 . -805) (undo-tree-id12541 . -805) (undo-tree-id12542 . -805) (undo-tree-id12543 . -805) (undo-tree-id12544 . -805) (undo-tree-id12545 . -805) (undo-tree-id12546 . -805) (undo-tree-id12547 . -805) (undo-tree-id12548 . -805) (undo-tree-id12549 . -805) (undo-tree-id12550 . -805) (undo-tree-id12551 . -805) (undo-tree-id12552 . -805) (undo-tree-id12553 . -805) (undo-tree-id12554 . -805) (undo-tree-id12555 . -805) (undo-tree-id12556 . -805) (undo-tree-id12557 . -805) (undo-tree-id12558 . -805) (undo-tree-id12559 . -805) (undo-tree-id12560 . -805) (undo-tree-id12561 . -805) (undo-tree-id12562 . -806) (undo-tree-id12563 . -806) (undo-tree-id12564 . -806) (undo-tree-id12565 . -806) (undo-tree-id12566 . -806) (undo-tree-id12567 . -806) (undo-tree-id12568 . -806) (undo-tree-id12569 . -806) (undo-tree-id12570 . -806) (undo-tree-id12571 . -806) (undo-tree-id12572 . -806) (undo-tree-id12573 . -806) (undo-tree-id12574 . -806) (undo-tree-id12575 . -806) (undo-tree-id12576 . -806) (undo-tree-id12577 . -806) (undo-tree-id12578 . -806) (undo-tree-id12579 . -806) (undo-tree-id12580 . -806) (undo-tree-id12581 . -806) (undo-tree-id12582 . -806) (undo-tree-id12583 . -806) (undo-tree-id12584 . -806) (undo-tree-id12585 . -806) (undo-tree-id12586 . -806) (undo-tree-id12587 . -806) (undo-tree-id12588 . -806) (undo-tree-id12589 . -806) (undo-tree-id12590 . -806) (undo-tree-id12591 . -806) (undo-tree-id12592 . -806) (undo-tree-id12593 . -806) (undo-tree-id12594 . -888) (undo-tree-id12595 . -806) (undo-tree-id12596 . -806) (undo-tree-id12597 . -806) (undo-tree-id12598 . -806) (undo-tree-id12599 . -806) (undo-tree-id12600 . -806) (undo-tree-id12601 . -806) (undo-tree-id12602 . -806) (undo-tree-id12603 . -806) (undo-tree-id12604 . -806) (undo-tree-id12605 . -806) (undo-tree-id12606 . -806) (undo-tree-id12607 . -806) (undo-tree-id12608 . -806) (undo-tree-id12609 . -806) (undo-tree-id12610 . -806) (undo-tree-id12611 . -806) (undo-tree-id12612 . -806) (undo-tree-id12613 . -806) (undo-tree-id12614 . -806) (undo-tree-id12615 . -806) (undo-tree-id12616 . -806) (undo-tree-id12617 . -806) (undo-tree-id12618 . -806) (undo-tree-id12619 . -806) (undo-tree-id12620 . -806) (undo-tree-id12621 . -806) (undo-tree-id12622 . -806) (undo-tree-id12623 . -806) (undo-tree-id12624 . -806) (undo-tree-id12625 . -806) (undo-tree-id12626 . -806) (undo-tree-id12627 . -806) (undo-tree-id12628 . -806) (undo-tree-id12629 . -806) (undo-tree-id12630 . -806) (undo-tree-id12631 . -806) (undo-tree-id12632 . -806) (undo-tree-id12633 . -806) (undo-tree-id12634 . -806) (undo-tree-id12635 . -806) (undo-tree-id12636 . -806) (undo-tree-id12637 . -806) (undo-tree-id12638 . -806) (undo-tree-id12639 . -806) (undo-tree-id12640 . -806) (undo-tree-id12641 . -806) (undo-tree-id12642 . -806) (undo-tree-id12643 . -806) (undo-tree-id12644 . -806) (undo-tree-id12645 . -806) (undo-tree-id12646 . -806) (undo-tree-id12647 . -806) (undo-tree-id12648 . -806) (undo-tree-id12649 . -806) (undo-tree-id12650 . -806) (undo-tree-id12651 . -806) (undo-tree-id12652 . -806) (undo-tree-id12653 . -806) (undo-tree-id12654 . -806) (undo-tree-id12655 . -806) (undo-tree-id12656 . -806) (undo-tree-id12657 . -806) (undo-tree-id12658 . -806) (undo-tree-id12659 . -806) (undo-tree-id12660 . -806) (undo-tree-id12661 . -806) (undo-tree-id12662 . -806) (undo-tree-id12663 . -806) (undo-tree-id12664 . -806) (undo-tree-id12665 . -806) (undo-tree-id12666 . -806) (undo-tree-id12667 . -806) (undo-tree-id12668 . -806) (undo-tree-id12669 . -806) (undo-tree-id12670 . -806) (undo-tree-id12671 . -806) (undo-tree-id12672 . -806) (undo-tree-id12673 . -806) (undo-tree-id12674 . -806) (undo-tree-id12675 . -806) (undo-tree-id12676 . -806) (undo-tree-id12677 . -806) (undo-tree-id12678 . -806) (undo-tree-id12679 . -806) (undo-tree-id12680 . -806) (undo-tree-id12681 . -806) (undo-tree-id12682 . -806) (undo-tree-id12683 . -806) (undo-tree-id12684 . -806) (undo-tree-id12685 . -806) (undo-tree-id12686 . -806) (undo-tree-id12687 . -806) (undo-tree-id12688 . -806) (undo-tree-id12689 . -806) (undo-tree-id12690 . -806) (undo-tree-id12691 . -806) (undo-tree-id12692 . -806) (undo-tree-id12693 . -806) (undo-tree-id12694 . -806) (undo-tree-id12695 . -806) (undo-tree-id12696 . -806) (undo-tree-id12697 . -806) (undo-tree-id12698 . -806) (undo-tree-id12699 . -806) (undo-tree-id12700 . -806) (undo-tree-id12701 . -806) (undo-tree-id12702 . -806) (undo-tree-id12703 . -806) (undo-tree-id12704 . -806) (undo-tree-id12705 . -806) (undo-tree-id12706 . -806) (undo-tree-id12707 . -806) (undo-tree-id12708 . -806) (undo-tree-id12709 . -806) (undo-tree-id12710 . -806) (undo-tree-id12711 . -806) (undo-tree-id12712 . -806) (undo-tree-id12713 . -806) (undo-tree-id12714 . -806) (undo-tree-id12715 . -806) (undo-tree-id12716 . -806) (undo-tree-id12717 . -806) (undo-tree-id12718 . -806) (undo-tree-id12719 . -806) (undo-tree-id12720 . -806) (undo-tree-id12721 . -806) (undo-tree-id12722 . -806) (undo-tree-id12723 . -806) (undo-tree-id12724 . -806) (undo-tree-id12725 . -806) (undo-tree-id12726 . -806) (undo-tree-id12727 . -806) (undo-tree-id12728 . -806) (undo-tree-id12729 . -806) (undo-tree-id12730 . -806) (undo-tree-id12731 . -806) (undo-tree-id12732 . -806) (undo-tree-id12733 . -806) (undo-tree-id12734 . -806) (undo-tree-id12735 . -806) (undo-tree-id12736 . -806) (undo-tree-id12737 . -806) (undo-tree-id12738 . -806) (undo-tree-id12739 . -806) (undo-tree-id12740 . -806) (undo-tree-id12741 . -806) (undo-tree-id12742 . -806) (undo-tree-id12743 . -806) (undo-tree-id12744 . -806) (undo-tree-id12745 . -806) (undo-tree-id12746 . -806) (undo-tree-id12747 . -806) (undo-tree-id12748 . -806) (undo-tree-id12749 . -806) (undo-tree-id12750 . -806) (undo-tree-id12751 . -806) (undo-tree-id12752 . -806) (undo-tree-id12753 . -806) (undo-tree-id12754 . -806) (undo-tree-id12755 . -806) (undo-tree-id12756 . -806) (undo-tree-id12757 . -806) (undo-tree-id12758 . -806) (undo-tree-id12759 . -806) (undo-tree-id12760 . -806) (undo-tree-id12761 . -806) (undo-tree-id12762 . -806) (undo-tree-id12763 . -806) (undo-tree-id12764 . -806) (undo-tree-id12765 . -806) (undo-tree-id12766 . -806) (undo-tree-id12767 . -806) (undo-tree-id12768 . -806) (undo-tree-id12769 . -806) (undo-tree-id12770 . -806) (undo-tree-id12771 . -806) (undo-tree-id12772 . -806) (undo-tree-id12773 . -806) (undo-tree-id12774 . -806) (undo-tree-id12775 . -806) (undo-tree-id12776 . -806) (undo-tree-id12777 . -806) (undo-tree-id12778 . -806) (undo-tree-id12779 . -806) (undo-tree-id12780 . -806) (undo-tree-id12781 . -806) (undo-tree-id12782 . -806) (undo-tree-id12783 . -806) (undo-tree-id12784 . -806) (undo-tree-id12785 . -806) (undo-tree-id12786 . -806) (undo-tree-id12787 . -806) (undo-tree-id12788 . -806) (undo-tree-id12789 . -806) (undo-tree-id12790 . -806) (undo-tree-id12791 . -806) (undo-tree-id12792 . -806) (undo-tree-id12793 . -806) (undo-tree-id12794 . -806) (undo-tree-id12795 . -806) (undo-tree-id12796 . -806) (undo-tree-id12797 . -806) (undo-tree-id12798 . -806) (undo-tree-id12799 . -806) (undo-tree-id12800 . -806) (undo-tree-id12801 . -806) (undo-tree-id12802 . -806) (undo-tree-id12803 . -806) (undo-tree-id12804 . -806) (undo-tree-id12805 . -806) (undo-tree-id12806 . -806) (undo-tree-id12807 . -806) (undo-tree-id12808 . -806) (undo-tree-id12809 . -806) (undo-tree-id12810 . -806) (undo-tree-id12811 . -806) (undo-tree-id12812 . -806) (undo-tree-id12813 . -806) (undo-tree-id12814 . -806) (undo-tree-id12815 . -806) (undo-tree-id12816 . -806) (undo-tree-id12817 . -806) (undo-tree-id12818 . -806) (undo-tree-id12819 . -806) (undo-tree-id12820 . -806) (undo-tree-id12821 . -806) (undo-tree-id12822 . -806) (undo-tree-id12823 . -806) (undo-tree-id12824 . -806) (undo-tree-id12825 . -806) (undo-tree-id12826 . -806) (undo-tree-id12827 . -806) (undo-tree-id12828 . -806) (undo-tree-id12829 . -806) (undo-tree-id12830 . -806) (undo-tree-id12831 . -806) (undo-tree-id12832 . -806) (undo-tree-id12833 . -806) (undo-tree-id12834 . -806) (undo-tree-id12835 . -806) (undo-tree-id12836 . -806) (undo-tree-id12837 . -806) (undo-tree-id12838 . -806) (undo-tree-id12839 . -806) (undo-tree-id12840 . -806) (undo-tree-id12841 . -806) (undo-tree-id12842 . -806) (undo-tree-id12843 . -806) (undo-tree-id12844 . -806) (undo-tree-id12845 . -806) (undo-tree-id12846 . -806) (undo-tree-id12847 . -806) (undo-tree-id12848 . -806) (undo-tree-id12849 . -806) (undo-tree-id12850 . -806) (undo-tree-id12851 . -806) (undo-tree-id12852 . -806) (undo-tree-id12853 . -806) (undo-tree-id12854 . -806) (undo-tree-id12855 . -806) (undo-tree-id12856 . -806) (undo-tree-id12857 . -806) (undo-tree-id12858 . -806) (undo-tree-id12859 . -887) (undo-tree-id12860 . -887) (undo-tree-id12861 . -887) (undo-tree-id12862 . -887) (undo-tree-id12863 . -887) (undo-tree-id12864 . -887) (undo-tree-id12865 . -887) (undo-tree-id12866 . -887) (undo-tree-id12867 . -887) (undo-tree-id12868 . -887) (undo-tree-id12869 . -887) (undo-tree-id12870 . -887) (undo-tree-id12871 . -887) (undo-tree-id12872 . -887) (undo-tree-id12873 . -887) (undo-tree-id12874 . -887) (undo-tree-id12875 . -888) (undo-tree-id12876 . -888) (undo-tree-id12877 . -888) (undo-tree-id12878 . -888) (undo-tree-id12879 . -888) (undo-tree-id12880 . -888) (undo-tree-id12881 . -888) (undo-tree-id12882 . -888) (undo-tree-id12883 . -888) (undo-tree-id12884 . -888) (undo-tree-id12885 . -888) (undo-tree-id12886 . -888) (undo-tree-id12887 . -888) (undo-tree-id12888 . -888) (undo-tree-id12889 . -888) (undo-tree-id12890 . -888) (undo-tree-id12891 . -888) (undo-tree-id12892 . -888) (undo-tree-id12893 . -888) (undo-tree-id12894 . -888) (undo-tree-id12895 . -888) (undo-tree-id12896 . -888) (undo-tree-id12897 . -888) (undo-tree-id12898 . -888) (undo-tree-id12899 . -888) (undo-tree-id12900 . -888) (undo-tree-id12901 . -888) (undo-tree-id12902 . -888) (undo-tree-id12903 . -888) (undo-tree-id12904 . -888) (undo-tree-id12905 . -888) (undo-tree-id12906 . -888) (undo-tree-id12907 . -888) (undo-tree-id12908 . -888) (undo-tree-id12909 . -888) (undo-tree-id12910 . -804) (909 . 1713) (#(" In contrast to a regular RNN, an attention mechanism lets the RNN access all input elements at each given time step. However, having access to all input sequence elements at each time step can be overwhelming. So, to help the RNN focus on the most relevant elements of the input sequence, the attention mechanism assigns different attention weights to each input element. These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 65 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 65 67 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 67 95 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 95 96 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 96 98 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 98 193 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 193 194 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 194 249 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 249 266 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 266 289 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 289 290 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 290 371 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 371 388 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 388 389 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 389 414 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 414 416 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 416 488 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 488 489 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 489 588 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 588 589 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 589 646 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 646 647 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 647 744 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 744 745 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 745 800 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 800 801 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 993) (undo-tree-id12911 . -1) (undo-tree-id12912 . -1) (undo-tree-id12913 . -1) (undo-tree-id12914 . -1) (undo-tree-id12915 . -1) (undo-tree-id12916 . -1) (undo-tree-id12917 . -1) (undo-tree-id12918 . -1) (undo-tree-id12919 . -1) (undo-tree-id12920 . -1) (undo-tree-id12921 . -1) (undo-tree-id12922 . -1) (undo-tree-id12923 . -1) (undo-tree-id12924 . -1) (undo-tree-id12925 . -1) (undo-tree-id12926 . -1) (undo-tree-id12927 . -1) (undo-tree-id12928 . -1) (undo-tree-id12929 . -1) (undo-tree-id12930 . -1) (undo-tree-id12931 . -1) (undo-tree-id12932 . -1) (undo-tree-id12933 . -1) (undo-tree-id12934 . -1) (undo-tree-id12935 . -1) (undo-tree-id12936 . -1) (undo-tree-id12937 . -1) (undo-tree-id12938 . -1) (undo-tree-id12939 . -1) (undo-tree-id12940 . -1) (undo-tree-id12941 . -1) (undo-tree-id12942 . -1) (undo-tree-id12943 . -1) (undo-tree-id12944 . -1) (undo-tree-id12945 . -1) (undo-tree-id12946 . -1) 994) nil (25774 24914 500149 293000) 0 nil])
([nil nil ((#("In contrast to a regular RNN" 0 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 997) (undo-tree-id12959 . 28) (undo-tree-id12960 . -27) (undo-tree-id12961 . -28) (t 25774 24914 509505 816000)) nil (25774 24922 206770 495000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 997) (undo-tree-id12956 . 2) (undo-tree-id12957 . -1) (undo-tree-id12958 . -2)) nil (25774 24922 206766 115000) 0 nil])
([nil nil ((997 . 998) (#("a" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 997)) nil (25774 24922 206753 490000) 0 nil])
([nil nil ((995 . 1770) (#("- However, having access to all input sequence elements at each time step can be overwhelming. So, to help the RNN focus on the most relevant elements of the input sequence, the attention mechanism assigns different attention weights to each input element. These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation.

- An attention mechanism lets the RNN access all input elements at each given time step." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 77 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 77 78 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 78 133 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 133 150 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 150 173 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 173 174 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 174 255 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 255 272 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 272 273 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 273 297 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 297 298 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 298 300 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 300 372 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 372 373 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 373 411 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 411 413 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 413 472 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 472 473 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 473 530 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 530 531 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 531 628 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 628 629 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 629 684 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 684 685 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 685 686 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 686 687 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 687 688 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 688 689 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 689 723 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 723 725 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 725 753 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 753 754 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 754 756 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 756 775 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 995) (undo-tree-id12962 . 86) (undo-tree-id12963 . -689) (undo-tree-id12964 . -689) (undo-tree-id12965 . 85) (undo-tree-id12966 . -689) (undo-tree-id12967 . -689) (undo-tree-id12968 . -689) (undo-tree-id12969 . -775) (undo-tree-id12970 . -689) (undo-tree-id12971 . -689) (undo-tree-id12972 . -689) (undo-tree-id12973 . -689) (undo-tree-id12974 . -689) (undo-tree-id12975 . -689) (undo-tree-id12976 . -689) (undo-tree-id12977 . -689) (undo-tree-id12978 . -689) (undo-tree-id12979 . -689) (undo-tree-id12980 . -689) (undo-tree-id12981 . -689) (undo-tree-id12982 . -689) (undo-tree-id12983 . -689) (undo-tree-id12984 . -689) (undo-tree-id12985 . -689) (undo-tree-id12986 . -689) (undo-tree-id12987 . -689) (undo-tree-id12988 . -689) (undo-tree-id12989 . -689) (undo-tree-id12990 . -689) (undo-tree-id12991 . -689) (undo-tree-id12992 . -689) (undo-tree-id12993 . -689) (undo-tree-id12994 . -689) (undo-tree-id12995 . -689) (undo-tree-id12996 . -689) (undo-tree-id12997 . -689) (undo-tree-id12998 . -689) (undo-tree-id12999 . -689) (undo-tree-id13000 . -689) (undo-tree-id13001 . -689) (undo-tree-id13002 . -689) (undo-tree-id13003 . -689) (undo-tree-id13004 . -689) (undo-tree-id13005 . -689) (undo-tree-id13006 . -689) (undo-tree-id13007 . -689) (undo-tree-id13008 . -689) (undo-tree-id13009 . -689) (undo-tree-id13010 . -689) (undo-tree-id13011 . -689) (undo-tree-id13012 . -689) (undo-tree-id13013 . -689) (undo-tree-id13014 . -689) (undo-tree-id13015 . -689) (undo-tree-id13016 . -689) (undo-tree-id13017 . -689) (undo-tree-id13018 . -689) (undo-tree-id13019 . -689) (undo-tree-id13020 . -689) (undo-tree-id13021 . -689) (undo-tree-id13022 . -689) (undo-tree-id13023 . -689) (undo-tree-id13024 . -689) (undo-tree-id13025 . -689) (undo-tree-id13026 . -689) (undo-tree-id13027 . -689) (undo-tree-id13028 . -689) (undo-tree-id13029 . -689) (undo-tree-id13030 . -689) (undo-tree-id13031 . -689) (undo-tree-id13032 . -689) (undo-tree-id13033 . -689) (undo-tree-id13034 . -774) (undo-tree-id13035 . -774) (undo-tree-id13036 . -774) (undo-tree-id13037 . -774) (undo-tree-id13038 . -774) (undo-tree-id13039 . -774) (undo-tree-id13040 . -774) (undo-tree-id13041 . -774) (undo-tree-id13042 . -774) (undo-tree-id13043 . -774) (undo-tree-id13044 . -774) (undo-tree-id13045 . -774) (undo-tree-id13046 . -774) (undo-tree-id13047 . -774) (undo-tree-id13048 . -774) (undo-tree-id13049 . -774) (undo-tree-id13050 . -775) (undo-tree-id13051 . -775) (undo-tree-id13052 . -775) (undo-tree-id13053 . -775) (undo-tree-id13054 . -775) (undo-tree-id13055 . -775) (undo-tree-id13056 . -775) (undo-tree-id13057 . -775) (undo-tree-id13058 . -775) (undo-tree-id13059 . -775) (undo-tree-id13060 . -775) (undo-tree-id13061 . -775) (undo-tree-id13062 . -775) (undo-tree-id13063 . -775) (undo-tree-id13064 . -775) (undo-tree-id13065 . -775) (undo-tree-id13066 . -775) (undo-tree-id13067 . -775) (undo-tree-id13068 . -775) (undo-tree-id13069 . -775) (undo-tree-id13070 . -775) (undo-tree-id13071 . -775) (undo-tree-id13072 . -775) (undo-tree-id13073 . -775) (undo-tree-id13074 . -687) (995 . 1682) (#(" However, having access to all input sequence elements at each time step can be overwhelming. So, to help the RNN focus on the most relevant elements of the input sequence, the attention mechanism assigns different attention weights to each input element. These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation." 0 76 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 76 77 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 77 132 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 132 149 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 149 172 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 172 173 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 173 254 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 254 271 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 271 272 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 272 296 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 296 297 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 297 299 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 299 371 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 371 372 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 372 410 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 410 412 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 412 471 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 471 472 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 472 529 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 529 530 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 530 627 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 627 628 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 628 683 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 683 684 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 1083) (t 25774 24922 217422 397000)) nil (25774 24929 489041 590000) 0 nil])
([nil nil ((1085 . 1773) (#("- So, to help the RNN focus on the most relevant elements of the input sequence, the attention mechanism assigns different attention weights to each input element. These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation.

- However, having access to all input sequence elements at each time step can be overwhelming." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 40 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 40 57 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 57 80 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 80 81 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 81 162 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 162 179 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 179 180 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 180 204 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 204 205 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 205 207 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 207 279 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 279 280 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 280 317 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 317 318 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 318 320 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 320 379 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 379 380 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 380 437 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 437 438 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 438 535 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 535 536 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 536 591 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 591 592 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 592 593 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 593 594 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 594 595 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 595 596 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 596 671 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 671 672 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 672 688 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 1085) (undo-tree-id13075 . 92) (undo-tree-id13076 . -595) (undo-tree-id13077 . -688) (undo-tree-id13078 . -595) (undo-tree-id13079 . -595) (undo-tree-id13080 . -595) (undo-tree-id13081 . -595) (undo-tree-id13082 . -595) (undo-tree-id13083 . -595) (undo-tree-id13084 . -595) (undo-tree-id13085 . -595) (undo-tree-id13086 . -595) (undo-tree-id13087 . -595) (undo-tree-id13088 . -595) (undo-tree-id13089 . -595) (undo-tree-id13090 . -595) (undo-tree-id13091 . -595) (undo-tree-id13092 . -595) (undo-tree-id13093 . -595) (undo-tree-id13094 . -595) (undo-tree-id13095 . -595) (undo-tree-id13096 . -595) (undo-tree-id13097 . -595) (undo-tree-id13098 . -595) (undo-tree-id13099 . -595) (undo-tree-id13100 . -595) (undo-tree-id13101 . -595) (undo-tree-id13102 . -595) (undo-tree-id13103 . -595) (undo-tree-id13104 . -595) (undo-tree-id13105 . -595) (undo-tree-id13106 . -595) (undo-tree-id13107 . -595) (undo-tree-id13108 . -595) (undo-tree-id13109 . -595) (undo-tree-id13110 . -595) (undo-tree-id13111 . -595) (undo-tree-id13112 . -595) (undo-tree-id13113 . -595) (undo-tree-id13114 . -595) (undo-tree-id13115 . -595) (undo-tree-id13116 . -595) (undo-tree-id13117 . -595) (undo-tree-id13118 . -595) (undo-tree-id13119 . -595) (undo-tree-id13120 . -595) (undo-tree-id13121 . -595) (undo-tree-id13122 . -596) (undo-tree-id13123 . -596) (undo-tree-id13124 . -596) (undo-tree-id13125 . -596) (undo-tree-id13126 . -596) (undo-tree-id13127 . -596) (undo-tree-id13128 . -596) (undo-tree-id13129 . -596) (undo-tree-id13130 . -596) (undo-tree-id13131 . -596) (undo-tree-id13132 . -596) (undo-tree-id13133 . -596) (undo-tree-id13134 . -596) (undo-tree-id13135 . -596) (undo-tree-id13136 . -596) (undo-tree-id13137 . -596) (undo-tree-id13138 . -596) (undo-tree-id13139 . -596) (undo-tree-id13140 . -596) (undo-tree-id13141 . -596) (undo-tree-id13142 . -596) (undo-tree-id13143 . -596) (undo-tree-id13144 . -596) (undo-tree-id13145 . -596) (undo-tree-id13146 . -596) (undo-tree-id13147 . -596) (undo-tree-id13148 . -596) (undo-tree-id13149 . -596) (undo-tree-id13150 . -596) (undo-tree-id13151 . -596) (undo-tree-id13152 . -596) (undo-tree-id13153 . -596) (undo-tree-id13154 . -596) (undo-tree-id13155 . -596) (undo-tree-id13156 . -596) (undo-tree-id13157 . -596) (undo-tree-id13158 . -596) (undo-tree-id13159 . -596) (undo-tree-id13160 . -596) (undo-tree-id13161 . -596) (undo-tree-id13162 . -596) (undo-tree-id13163 . -596) (undo-tree-id13164 . -596) (undo-tree-id13165 . -596) (undo-tree-id13166 . -596) (undo-tree-id13167 . -596) (undo-tree-id13168 . -596) (undo-tree-id13169 . -596) (undo-tree-id13170 . -596) (undo-tree-id13171 . -596) (undo-tree-id13172 . -596) (undo-tree-id13173 . -687) (undo-tree-id13174 . -687) (undo-tree-id13175 . -687) (undo-tree-id13176 . -687) (undo-tree-id13177 . -687) (undo-tree-id13178 . -687) (undo-tree-id13179 . -687) (undo-tree-id13180 . -687) (undo-tree-id13181 . -687) (undo-tree-id13182 . -687) (undo-tree-id13183 . -687) (undo-tree-id13184 . -687) (undo-tree-id13185 . -687) (undo-tree-id13186 . -687) (undo-tree-id13187 . -687) (undo-tree-id13188 . -687) (undo-tree-id13189 . -687) (undo-tree-id13190 . -687) (undo-tree-id13191 . -687) (undo-tree-id13192 . -687) (undo-tree-id13193 . -687) (undo-tree-id13194 . -688) (undo-tree-id13195 . -688) (undo-tree-id13196 . -688) (undo-tree-id13197 . -688) (undo-tree-id13198 . -688) (undo-tree-id13199 . -688) (undo-tree-id13200 . -688) (undo-tree-id13201 . -688) (undo-tree-id13202 . -688) (undo-tree-id13203 . -688) (undo-tree-id13204 . -688) (undo-tree-id13205 . -688) (undo-tree-id13206 . -688) (undo-tree-id13207 . -688) (undo-tree-id13208 . -688) (undo-tree-id13209 . -688) (undo-tree-id13210 . -688) (undo-tree-id13211 . -688) (undo-tree-id13212 . -688) (undo-tree-id13213 . -688) (undo-tree-id13214 . -688) (undo-tree-id13215 . -688) (undo-tree-id13216 . -688) (undo-tree-id13217 . -688) (undo-tree-id13218 . -688) (undo-tree-id13219 . -688) (undo-tree-id13220 . -688) (undo-tree-id13221 . -688) (undo-tree-id13222 . -688) (undo-tree-id13223 . -688) (undo-tree-id13224 . -688) (undo-tree-id13225 . -688) (undo-tree-id13226 . -688) (undo-tree-id13227 . -688) (undo-tree-id13228 . -688) (undo-tree-id13229 . -688) (undo-tree-id13230 . -688) (undo-tree-id13231 . -688) (undo-tree-id13232 . -688) (undo-tree-id13233 . -688) (undo-tree-id13234 . -594) (1085 . 1679) (#(" So, to help the RNN focus on the most relevant elements of the input sequence, the attention mechanism assigns different attention weights to each input element. These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation." 0 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 39 56 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 56 79 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 79 80 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 80 161 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 161 178 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 178 179 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 179 203 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 203 204 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 204 206 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 206 278 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 278 279 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 279 316 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 316 317 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 317 319 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 319 378 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 378 379 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 379 436 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 436 437 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 437 534 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 534 535 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 535 590 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 590 591 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 1179) (undo-tree-id13235 . -1) (undo-tree-id13236 . -1) (undo-tree-id13237 . -1) (undo-tree-id13238 . -1) (undo-tree-id13239 . -1) (undo-tree-id13240 . -1) (undo-tree-id13241 . -1) (undo-tree-id13242 . -1) (undo-tree-id13243 . -1) (undo-tree-id13244 . -1) (undo-tree-id13245 . -1) (undo-tree-id13246 . -1) (undo-tree-id13247 . -1) (undo-tree-id13248 . -1) (undo-tree-id13249 . -1) (undo-tree-id13250 . -1) (undo-tree-id13251 . -1) (undo-tree-id13252 . -1) (undo-tree-id13253 . -1) (undo-tree-id13254 . -1) (undo-tree-id13255 . -1) (undo-tree-id13256 . -1) (undo-tree-id13257 . -1) (undo-tree-id13258 . -1) (undo-tree-id13259 . -1) (undo-tree-id13260 . -1) (undo-tree-id13261 . -1) (undo-tree-id13262 . -1) (undo-tree-id13263 . -1) (undo-tree-id13264 . -1) (undo-tree-id13265 . -1) (undo-tree-id13266 . -1) (undo-tree-id13267 . -1) (undo-tree-id13268 . -1) (undo-tree-id13269 . -1) (undo-tree-id13270 . -1) (undo-tree-id13271 . -1) (undo-tree-id13272 . -1) (undo-tree-id13273 . -1) (undo-tree-id13274 . -1) (undo-tree-id13275 . -1) 1180 (t 25774 24929 497347 329000)) nil (25774 24941 490883 86000) 0 nil])
([nil nil ((1181 . 1776) (#("- These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation.

- So, to help the RNN focus on the most relevant elements of the input sequence, the attention mechanism assigns different attention weights to each input element." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 17 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 17 18 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 18 42 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 42 43 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 43 45 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 45 117 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 117 118 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 118 155 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 155 156 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 156 158 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 158 217 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 217 218 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 218 242 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 242 275 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 275 276 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 276 373 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 373 374 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 374 429 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 429 430 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 430 431 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 431 432 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 432 433 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 433 434 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 434 472 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 472 489 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 489 512 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 512 513 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 513 594 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 594 595 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 1181) (undo-tree-id13659 . 161) (undo-tree-id13660 . -433) (undo-tree-id13661 . -595) (undo-tree-id13662 . -433) (undo-tree-id13663 . -433) (undo-tree-id13664 . -433) (undo-tree-id13665 . -433) (undo-tree-id13666 . -433) (undo-tree-id13667 . -433) (undo-tree-id13668 . -433) (undo-tree-id13669 . -433) (undo-tree-id13670 . -433) (undo-tree-id13671 . -433) (undo-tree-id13672 . -433) (undo-tree-id13673 . -433) (undo-tree-id13674 . -433) (undo-tree-id13675 . -433) (undo-tree-id13676 . -433) (undo-tree-id13677 . -433) (undo-tree-id13678 . -433) (undo-tree-id13679 . -433) (undo-tree-id13680 . -433) (undo-tree-id13681 . -433) (undo-tree-id13682 . -433) (undo-tree-id13683 . -433) (undo-tree-id13684 . -433) (undo-tree-id13685 . -433) (undo-tree-id13686 . -433) (undo-tree-id13687 . -433) (undo-tree-id13688 . -433) (undo-tree-id13689 . -433) (undo-tree-id13690 . -433) (undo-tree-id13691 . -433) (undo-tree-id13692 . -433) (undo-tree-id13693 . -433) (undo-tree-id13694 . -433) (undo-tree-id13695 . -433) (undo-tree-id13696 . -434) (undo-tree-id13697 . -434) (undo-tree-id13698 . -434) (undo-tree-id13699 . -434) (undo-tree-id13700 . -434) (undo-tree-id13701 . -434) (undo-tree-id13702 . -434) (undo-tree-id13703 . -434) (undo-tree-id13704 . -434) (undo-tree-id13705 . -434) (undo-tree-id13706 . -434) (undo-tree-id13707 . -434) (undo-tree-id13708 . -434) (undo-tree-id13709 . -434) (undo-tree-id13710 . -434) (undo-tree-id13711 . -434) (undo-tree-id13712 . -434) (undo-tree-id13713 . -434) (undo-tree-id13714 . -434) (undo-tree-id13715 . -434) (undo-tree-id13716 . -434) (undo-tree-id13717 . -434) (undo-tree-id13718 . -434) (undo-tree-id13719 . -434) (undo-tree-id13720 . -434) (undo-tree-id13721 . -434) (undo-tree-id13722 . -434) (undo-tree-id13723 . -434) (undo-tree-id13724 . -434) (undo-tree-id13725 . -434) (undo-tree-id13726 . -434) (undo-tree-id13727 . -434) (undo-tree-id13728 . -434) (undo-tree-id13729 . -434) (undo-tree-id13730 . -434) (undo-tree-id13731 . -434) (undo-tree-id13732 . -434) (undo-tree-id13733 . -434) (undo-tree-id13734 . -434) (undo-tree-id13735 . -434) (undo-tree-id13736 . -434) (undo-tree-id13737 . -434) (undo-tree-id13738 . -434) (undo-tree-id13739 . -434) (undo-tree-id13740 . -434) (undo-tree-id13741 . -434) (undo-tree-id13742 . -434) (undo-tree-id13743 . -434) (undo-tree-id13744 . -434) (undo-tree-id13745 . -434) (undo-tree-id13746 . -434) (undo-tree-id13747 . -434) (undo-tree-id13748 . -434) (undo-tree-id13749 . -434) (undo-tree-id13750 . -434) (undo-tree-id13751 . -434) (undo-tree-id13752 . -434) (undo-tree-id13753 . -434) (undo-tree-id13754 . -434) (undo-tree-id13755 . -434) (undo-tree-id13756 . -434) (undo-tree-id13757 . -434) (undo-tree-id13758 . -434) (undo-tree-id13759 . -434) (undo-tree-id13760 . -434) (undo-tree-id13761 . -434) (undo-tree-id13762 . -594) (undo-tree-id13763 . -594) (undo-tree-id13764 . -594) (undo-tree-id13765 . -594) (undo-tree-id13766 . -594) (undo-tree-id13767 . -594) (undo-tree-id13768 . -594) (undo-tree-id13769 . -594) (undo-tree-id13770 . -594) (undo-tree-id13771 . -594) (undo-tree-id13772 . -594) (undo-tree-id13773 . -594) (undo-tree-id13774 . -594) (undo-tree-id13775 . -594) (undo-tree-id13776 . -594) (undo-tree-id13777 . -594) (undo-tree-id13778 . -595) (undo-tree-id13779 . -595) (undo-tree-id13780 . -595) (undo-tree-id13781 . -595) (undo-tree-id13782 . -595) (undo-tree-id13783 . -595) (undo-tree-id13784 . -595) (undo-tree-id13785 . -595) (undo-tree-id13786 . -595) (undo-tree-id13787 . -595) (undo-tree-id13788 . -595) (undo-tree-id13789 . -595) (undo-tree-id13790 . -595) (undo-tree-id13791 . -595) (undo-tree-id13792 . -595) (undo-tree-id13793 . -595) (undo-tree-id13794 . -595) (undo-tree-id13795 . -595) (undo-tree-id13796 . -595) (undo-tree-id13797 . -595) (undo-tree-id13798 . -595) (undo-tree-id13799 . -595) (undo-tree-id13800 . -595) (undo-tree-id13801 . -595) (undo-tree-id13802 . -595) (undo-tree-id13803 . -595) (undo-tree-id13804 . -595) (undo-tree-id13805 . -595) (undo-tree-id13806 . -595) (undo-tree-id13807 . -595) (undo-tree-id13808 . -595) (undo-tree-id13809 . -595) (undo-tree-id13810 . -595) (undo-tree-id13811 . -595) (undo-tree-id13812 . -595) (undo-tree-id13813 . -432) (1181 . 1613) (#(" These attention weights designate how important or relevant a given input sequence element is at a given time step. For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation." 0 16 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 16 17 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 17 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 41 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 42 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 44 116 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 116 117 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 117 154 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 154 155 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 155 157 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 157 216 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 216 217 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 217 241 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 241 274 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 274 275 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 275 372 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 372 373 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 373 428 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 428 429 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 1344) (undo-tree-id13814 . -1) (undo-tree-id13815 . -1) (undo-tree-id13816 . -1) (undo-tree-id13817 . -1) (undo-tree-id13818 . -1) (undo-tree-id13819 . -1) (undo-tree-id13820 . -1) (undo-tree-id13821 . -1) (undo-tree-id13822 . -1) (undo-tree-id13823 . -1) (undo-tree-id13824 . -1) (undo-tree-id13825 . -1) (undo-tree-id13826 . -1) (undo-tree-id13827 . -1) (undo-tree-id13828 . -1) (undo-tree-id13829 . -1) (undo-tree-id13830 . -1) (undo-tree-id13831 . -1) (undo-tree-id13832 . -1) (undo-tree-id13833 . -1) (undo-tree-id13834 . -1) (undo-tree-id13835 . -1) (undo-tree-id13836 . -1) (undo-tree-id13837 . -1) (undo-tree-id13838 . -1) (undo-tree-id13839 . -1) (undo-tree-id13840 . -1) (undo-tree-id13841 . -1) (undo-tree-id13842 . -1) (undo-tree-id13843 . -1) (undo-tree-id13844 . -1) (undo-tree-id13845 . -1) (undo-tree-id13846 . -1) (undo-tree-id13847 . -1) (undo-tree-id13848 . -1) (undo-tree-id13849 . -1) 1345 (t 25774 24941 501231 299000)) nil (25774 24969 457 321000) 0 nil])
([nil nil ((1346 . 1779) (#("- For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation.

- These attention weights designate how important or relevant a given input sequence element is at a given time step." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 39 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 39 40 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 40 42 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 42 101 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 101 102 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 102 126 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 126 159 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 159 160 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 160 219 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 219 257 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 257 258 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 258 313 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 313 314 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 314 315 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 315 316 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 316 317 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 317 318 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 318 333 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 333 334 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 334 358 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 358 359 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 359 361 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 361 433 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 1346) (undo-tree-id13534 . 115) (undo-tree-id13535 . -433) (undo-tree-id13536 . -318) (undo-tree-id13537 . -318) (undo-tree-id13538 . -318) (undo-tree-id13539 . -318) (undo-tree-id13540 . -318) (undo-tree-id13541 . -318) (undo-tree-id13542 . -318) (undo-tree-id13543 . -318) (undo-tree-id13544 . -318) (undo-tree-id13545 . -318) (undo-tree-id13546 . -318) (undo-tree-id13547 . -318) (undo-tree-id13548 . -318) (undo-tree-id13549 . -318) (undo-tree-id13550 . -318) (undo-tree-id13551 . -318) (undo-tree-id13552 . -318) (undo-tree-id13553 . -318) (undo-tree-id13554 . -318) (undo-tree-id13555 . -318) (undo-tree-id13556 . -318) (undo-tree-id13557 . -318) (undo-tree-id13558 . -318) (undo-tree-id13559 . -318) (undo-tree-id13560 . -318) (undo-tree-id13561 . -318) (undo-tree-id13562 . -318) (undo-tree-id13563 . -317) (undo-tree-id13564 . -317) (undo-tree-id13565 . -317) (undo-tree-id13566 . -317) (undo-tree-id13567 . -317) (undo-tree-id13568 . -317) (undo-tree-id13569 . -317) (undo-tree-id13570 . -317) (undo-tree-id13571 . -317) (undo-tree-id13572 . -317) (undo-tree-id13573 . -317) (undo-tree-id13574 . -317) (undo-tree-id13575 . -317) (undo-tree-id13576 . -317) (undo-tree-id13577 . -317) (undo-tree-id13578 . -317) (undo-tree-id13579 . -317) (undo-tree-id13580 . -317) (undo-tree-id13581 . -317) (undo-tree-id13582 . -317) (undo-tree-id13583 . -317) (undo-tree-id13584 . -317) (undo-tree-id13585 . -317) (undo-tree-id13586 . -317) (undo-tree-id13587 . -317) (undo-tree-id13588 . -317) (undo-tree-id13589 . -317) (undo-tree-id13590 . -317) (undo-tree-id13591 . -317) (undo-tree-id13592 . -317) (undo-tree-id13593 . -317) (undo-tree-id13594 . -317) (undo-tree-id13595 . -317) (undo-tree-id13596 . -317) (undo-tree-id13597 . -317) (undo-tree-id13598 . -317) (undo-tree-id13599 . -317) (undo-tree-id13600 . -317) (undo-tree-id13601 . -317) (undo-tree-id13602 . -317) (undo-tree-id13603 . -317) (undo-tree-id13604 . -317) (undo-tree-id13605 . -317) (undo-tree-id13606 . -317) (undo-tree-id13607 . -317) (undo-tree-id13608 . -432) (undo-tree-id13609 . -432) (undo-tree-id13610 . -432) (undo-tree-id13611 . -432) (undo-tree-id13612 . -432) (undo-tree-id13613 . -432) (undo-tree-id13614 . -432) (undo-tree-id13615 . -432) (undo-tree-id13616 . -432) (undo-tree-id13617 . -432) (undo-tree-id13618 . -432) (undo-tree-id13619 . -432) (undo-tree-id13620 . -432) (undo-tree-id13621 . -432) (undo-tree-id13622 . -432) (undo-tree-id13623 . -432) (undo-tree-id13624 . -432) (undo-tree-id13625 . -432) (undo-tree-id13626 . -432) (undo-tree-id13627 . -432) (undo-tree-id13628 . -432) (undo-tree-id13629 . -433) (undo-tree-id13630 . -433) (undo-tree-id13631 . -433) (undo-tree-id13632 . -433) (undo-tree-id13633 . -433) (undo-tree-id13634 . -433) (undo-tree-id13635 . -433) (undo-tree-id13636 . -433) (undo-tree-id13637 . -433) (undo-tree-id13638 . -433) (undo-tree-id13639 . -433) (undo-tree-id13640 . -433) (undo-tree-id13641 . -433) (undo-tree-id13642 . -433) (undo-tree-id13643 . -433) (undo-tree-id13644 . -433) (undo-tree-id13645 . -433) (undo-tree-id13646 . -433) (undo-tree-id13647 . -433) (undo-tree-id13648 . -433) (undo-tree-id13649 . -433) (undo-tree-id13650 . -433) (undo-tree-id13651 . -433) (undo-tree-id13652 . -433) (undo-tree-id13653 . -433) (undo-tree-id13654 . -433) (undo-tree-id13655 . -433) (undo-tree-id13656 . -433) (undo-tree-id13657 . -433) (undo-tree-id13658 . -316) (1346 . 1662) (#(" For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.” The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 38 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 38 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 39 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 41 100 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 100 101 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 101 125 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 125 158 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 158 159 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 159 218 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 218 256 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 256 257 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 257 312 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 312 313 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 1463)) nil (25774 24969 332 268000) 0 nil])
([nil nil ((1465 . 1782) (#("- The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation.

- For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.”" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 61 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 61 99 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 99 100 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 100 155 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 155 156 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 156 157 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 157 158 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 158 159 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 159 160 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 160 197 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 197 198 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 198 200 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 200 259 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 259 260 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 260 284 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 284 317 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 1465) (undo-tree-id13276 . 1) (undo-tree-id13277 . -317) (undo-tree-id13278 . -160) (undo-tree-id13279 . -160) (undo-tree-id13280 . -160) (undo-tree-id13281 . -160) (undo-tree-id13282 . -160) (undo-tree-id13283 . -160) (undo-tree-id13284 . -160) (undo-tree-id13285 . -160) (undo-tree-id13286 . -160) (undo-tree-id13287 . -160) (undo-tree-id13288 . -160) (undo-tree-id13289 . -160) (undo-tree-id13290 . -160) (undo-tree-id13291 . -160) (undo-tree-id13292 . -160) (undo-tree-id13293 . -160) (undo-tree-id13294 . -160) (undo-tree-id13295 . -159) (undo-tree-id13296 . -159) (undo-tree-id13297 . -159) (undo-tree-id13298 . -159) (undo-tree-id13299 . -159) (undo-tree-id13300 . -159) (undo-tree-id13301 . -159) (undo-tree-id13302 . -159) (undo-tree-id13303 . -159) (undo-tree-id13304 . -159) (undo-tree-id13305 . -159) (undo-tree-id13306 . -159) (undo-tree-id13307 . -159) (undo-tree-id13308 . -159) (undo-tree-id13309 . -159) (undo-tree-id13310 . -159) (undo-tree-id13311 . -159) (undo-tree-id13312 . -159) (undo-tree-id13313 . -159) (undo-tree-id13314 . -159) (undo-tree-id13315 . -159) (undo-tree-id13316 . -159) (undo-tree-id13317 . -159) (undo-tree-id13318 . -159) (undo-tree-id13319 . -159) (undo-tree-id13320 . -159) (undo-tree-id13321 . -159) (undo-tree-id13322 . -159) (undo-tree-id13323 . -159) (undo-tree-id13324 . -159) (undo-tree-id13325 . -159) (undo-tree-id13326 . -159) (undo-tree-id13327 . -159) (undo-tree-id13328 . -159) (undo-tree-id13329 . -159) (undo-tree-id13330 . -159) (undo-tree-id13331 . -159) (undo-tree-id13332 . -159) (undo-tree-id13333 . -159) (undo-tree-id13334 . -159) (undo-tree-id13335 . -193) (undo-tree-id13336 . -193) (undo-tree-id13337 . -193) (undo-tree-id13338 . -193) (undo-tree-id13339 . -193) (undo-tree-id13340 . -193) (undo-tree-id13341 . -193) (undo-tree-id13342 . -193) (undo-tree-id13343 . -193) (undo-tree-id13344 . -193) (undo-tree-id13345 . -193) (undo-tree-id13346 . -193) (undo-tree-id13347 . -193) (undo-tree-id13348 . -193) (undo-tree-id13349 . -193) (undo-tree-id13350 . -193) (undo-tree-id13351 . -193) (undo-tree-id13352 . -193) (undo-tree-id13353 . -193) (undo-tree-id13354 . -193) (undo-tree-id13355 . -193) (undo-tree-id13356 . -193) (undo-tree-id13357 . -193) (undo-tree-id13358 . -193) (undo-tree-id13359 . -193) (undo-tree-id13360 . -193) (undo-tree-id13361 . -193) (undo-tree-id13362 . -193) (undo-tree-id13363 . -193) (undo-tree-id13364 . -193) (undo-tree-id13365 . -193) (undo-tree-id13366 . 6) (undo-tree-id13367 . -315) (undo-tree-id13368 . -315) (undo-tree-id13369 . -315) (undo-tree-id13370 . -315) (undo-tree-id13371 . -315) (undo-tree-id13372 . -315) (undo-tree-id13373 . -315) (undo-tree-id13374 . -315) (undo-tree-id13375 . -315) (undo-tree-id13376 . -315) (undo-tree-id13377 . -315) (undo-tree-id13378 . -315) (undo-tree-id13379 . -315) (undo-tree-id13380 . -315) (undo-tree-id13381 . -315) (undo-tree-id13382 . -315) (undo-tree-id13383 . -315) (undo-tree-id13384 . -315) (undo-tree-id13385 . -315) (undo-tree-id13386 . -315) (undo-tree-id13387 . -315) (undo-tree-id13388 . -315) (undo-tree-id13389 . -316) (undo-tree-id13390 . -316) (undo-tree-id13391 . -316) (undo-tree-id13392 . -316) (undo-tree-id13393 . -316) (undo-tree-id13394 . -316) (undo-tree-id13395 . -316) (undo-tree-id13396 . -316) (undo-tree-id13397 . -316) (undo-tree-id13398 . -316) (undo-tree-id13399 . -316) (undo-tree-id13400 . -316) (undo-tree-id13401 . -316) (undo-tree-id13402 . -316) (undo-tree-id13403 . -316) (undo-tree-id13404 . -316) (undo-tree-id13405 . -316) (undo-tree-id13406 . -316) (undo-tree-id13407 . -316) (undo-tree-id13408 . -316) (undo-tree-id13409 . -316) (undo-tree-id13410 . -316) (undo-tree-id13411 . -316) (undo-tree-id13412 . -316) (undo-tree-id13413 . -316) (undo-tree-id13414 . -316) (undo-tree-id13415 . -316) (undo-tree-id13416 . -316) (undo-tree-id13417 . -315) (undo-tree-id13418 . -315) (undo-tree-id13419 . -315) (undo-tree-id13420 . -315) (undo-tree-id13421 . -315) (undo-tree-id13422 . -315) (undo-tree-id13423 . -315) (undo-tree-id13424 . -315) (undo-tree-id13425 . -315) (undo-tree-id13426 . -315) (undo-tree-id13427 . -315) (undo-tree-id13428 . -315) (undo-tree-id13429 . -315) (undo-tree-id13430 . -315) (undo-tree-id13431 . -315) (undo-tree-id13432 . -315) (undo-tree-id13433 . -315) (undo-tree-id13434 . -315) (undo-tree-id13435 . -315) (undo-tree-id13436 . -315) (undo-tree-id13437 . -315) (undo-tree-id13438 . -315) (undo-tree-id13439 . -315) (undo-tree-id13440 . -315) (undo-tree-id13441 . -315) (undo-tree-id13442 . -317) (undo-tree-id13443 . -317) (undo-tree-id13444 . -317) (undo-tree-id13445 . -317) (undo-tree-id13446 . -317) (undo-tree-id13447 . -317) (undo-tree-id13448 . -317) (undo-tree-id13449 . -317) (undo-tree-id13450 . -317) (undo-tree-id13451 . -317) (undo-tree-id13452 . -317) (undo-tree-id13453 . -317) (undo-tree-id13454 . -317) (undo-tree-id13455 . -317) (undo-tree-id13456 . -317) (undo-tree-id13457 . -317) (undo-tree-id13458 . -317) (undo-tree-id13459 . -317) (undo-tree-id13460 . -317) (undo-tree-id13461 . -317) (undo-tree-id13462 . -317) (undo-tree-id13463 . -317) (undo-tree-id13464 . -317) (undo-tree-id13465 . -317) (undo-tree-id13466 . -317) (undo-tree-id13467 . -317) (undo-tree-id13468 . -317) (undo-tree-id13469 . -317) (undo-tree-id13470 . -317) (undo-tree-id13471 . -317) (undo-tree-id13472 . -317) (undo-tree-id13473 . -317) (undo-tree-id13474 . -317) (undo-tree-id13475 . -317) (undo-tree-id13476 . -317) (undo-tree-id13477 . -317) (undo-tree-id13478 . -317) (undo-tree-id13479 . -317) (undo-tree-id13480 . -317) (undo-tree-id13481 . -317) (undo-tree-id13482 . -317) (undo-tree-id13483 . -317) (undo-tree-id13484 . -317) (undo-tree-id13485 . -317) (undo-tree-id13486 . -317) (undo-tree-id13487 . -158) (1465 . 1623) (#(" The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 60 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 60 98 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 98 99 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 99 154 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 154 155 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 1624) (undo-tree-id13488 . -1) (undo-tree-id13489 . -1) (undo-tree-id13490 . -1) (undo-tree-id13491 . -1) (undo-tree-id13492 . -1) (undo-tree-id13493 . -1) (undo-tree-id13494 . -1) (undo-tree-id13495 . -1) (undo-tree-id13496 . -1) (undo-tree-id13497 . -1) (undo-tree-id13498 . -1) (undo-tree-id13499 . -1) (undo-tree-id13500 . -1) (undo-tree-id13501 . -1) (undo-tree-id13502 . -1) (undo-tree-id13503 . -1) (undo-tree-id13504 . -1) (undo-tree-id13505 . -1) (undo-tree-id13506 . -1) (undo-tree-id13507 . -1) (undo-tree-id13508 . -1) (undo-tree-id13509 . -1) (undo-tree-id13510 . -1) (undo-tree-id13511 . -1) (undo-tree-id13512 . -1) (undo-tree-id13513 . -1) (undo-tree-id13514 . -1) (undo-tree-id13515 . -1) (undo-tree-id13516 . -1) (undo-tree-id13517 . -1) (undo-tree-id13518 . -1) (undo-tree-id13519 . -1) (undo-tree-id13520 . -1) (undo-tree-id13521 . -1) (undo-tree-id13522 . -1) (undo-tree-id13523 . -1) (undo-tree-id13524 . -1) (undo-tree-id13525 . -1) (undo-tree-id13526 . -1) (undo-tree-id13527 . -1) (undo-tree-id13528 . -1) (undo-tree-id13529 . -1) (undo-tree-id13530 . -1) (undo-tree-id13531 . -1) (undo-tree-id13532 . -1) (undo-tree-id13533 . -1) 1625) nil (25774 24969 233 670000) 0 nil])
([nil nil ((#("One limitation of this seq2seq approach is that the " 0 52 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 636) (undo-tree-id13850 . -51) (undo-tree-id13851 . -52) (t 25774 24969 9000 696000)) nil (25774 24988 23538 330000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 736) (undo-tree-id13862 . -1) (undo-tree-id13863 . -1) (t 25774 24988 32868 885000)) nil (25774 25015 764345 945000) 0 nil])
([nil nil ((#("Compressing all " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 4 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 5 6 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 6 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 7 8 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 8 11 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 11 12 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 12 16 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 740) (undo-tree-id13860 . -15) (undo-tree-id13861 . -16)) nil (25774 25015 764342 959000) 0 nil])
([nil nil ((#("the informa" 0 11 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 740) (undo-tree-id13858 . -10) (undo-tree-id13859 . -11)) nil (25774 25015 764340 461000) 0 nil])
([nil nil ((#("tion in" 0 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 740) (undo-tree-id13854 . -6) (undo-tree-id13855 . 7) (undo-tree-id13856 . -4) (undo-tree-id13857 . -7)) nil (25774 25015 764338 195000) 0 nil])
([nil nil ((#("to one hidden uni" 0 17 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 740) (undo-tree-id13852 . -16) (undo-tree-id13853 . -17)) nil (25774 25015 764333 275000) 0 nil])
([nil nil ((741 . 744)) nil (25774 25015 764325 168000) 0 nil])
([nil nil ((740 . 741) (#("t" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 740)) nil (25774 25018 61834 517000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 805) (undo-tree-id13914 . -1) (undo-tree-id13915 . -1) (t 25774 25015 780715 294000)) nil (25774 25046 156566 960000) 0 nil] [nil nil ((#("
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -806) (undo-tree-id13864 . -1) 740 (t 25774 25015 780715 294000)) ((806 . 807)) (25774 25018 61077 574000) 0 nil])
([nil nil ((387 . 388) 353) nil (25774 25046 156563 229000) 0 nil])
nil
([nil nil ((#("first " 0 6 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 505) (undo-tree-id13865 . -5) (undo-tree-id13866 . -6) (undo-tree-id13867 . -6) (undo-tree-id13868 . -6) (undo-tree-id13869 . -6) (undo-tree-id13870 . -6) (undo-tree-id13871 . -6) (undo-tree-id13872 . -6) (undo-tree-id13873 . -6) (undo-tree-id13874 . -6) (undo-tree-id13875 . -6) (undo-tree-id13876 . -6) (undo-tree-id13877 . -6) (undo-tree-id13878 . -6) (undo-tree-id13879 . -6) (undo-tree-id13880 . -6) (undo-tree-id13881 . -6) (undo-tree-id13882 . -6) (undo-tree-id13883 . -6) (undo-tree-id13884 . -6) (undo-tree-id13885 . -6) (undo-tree-id13886 . -6) (undo-tree-id13887 . -6) (undo-tree-id13888 . -6) (undo-tree-id13889 . -6) (undo-tree-id13890 . -6) (undo-tree-id13891 . -6) (undo-tree-id13892 . -6) (undo-tree-id13893 . -6) (undo-tree-id13894 . -6) (undo-tree-id13895 . -6) (undo-tree-id13896 . -6) (undo-tree-id13897 . -6) (undo-tree-id13898 . -6) (undo-tree-id13899 . -6) (undo-tree-id13900 . -6) (undo-tree-id13901 . -6) (undo-tree-id13902 . -6) (undo-tree-id13903 . -6) (undo-tree-id13904 . -6) (undo-tree-id13905 . -6) (undo-tree-id13906 . -6) (undo-tree-id13907 . -6) (undo-tree-id13908 . -6) (undo-tree-id13909 . -6) (undo-tree-id13910 . -6) (undo-tree-id13911 . -6) (undo-tree-id13912 . -6) (undo-tree-id13913 . -6)) nil (25774 25046 156557 956000) 0 nil])
([nil nil ((#("This is mo" 0 10 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 515) (undo-tree-id13929 . -9) (undo-tree-id13930 . -10) (t 25774 25046 172597 111000)) nil (25774 25076 611635 56000) 0 nil])
([nil nil ((#("tiva" 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 515) (undo-tree-id13926 . -3) (undo-tree-id13927 . 4) (undo-tree-id13928 . -4)) nil (25774 25076 611632 856000) 0 nil])
([nil nil ((#("ted by " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 515) (undo-tree-id13924 . -6) (undo-tree-id13925 . -7)) nil (25774 25076 611630 64000) 0 nil])
([nil nil ((#("the fac" 0 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 515) (undo-tree-id13922 . -6) (undo-tree-id13923 . -7)) nil (25774 25076 611627 930000) 0 nil])
([nil nil ((#("t " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 515) (undo-tree-id13920 . -1) (undo-tree-id13921 . -2)) nil (25774 25076 611625 842000) 0 nil])
([nil nil ((#("tha" 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 515) (undo-tree-id13918 . -2) (undo-tree-id13919 . -3)) nil (25774 25076 611623 640000) 0 nil])
([nil nil ((#("t " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 515) (undo-tree-id13916 . -1) (undo-tree-id13917 . -2)) nil (25774 25076 611620 842000) 0 nil])
([nil nil ((515 . 516) (#("t" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 515)) nil (25774 25076 611605 236000) 0 nil])
([nil nil ((#("a " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 527) (undo-tree-id13933 . -1) (undo-tree-id13934 . -2) (t 25774 25076 624528 234000)) nil (25774 25084 745726 352000) 0 nil])
([nil nil ((#("sentence " 0 9 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 527) (undo-tree-id13931 . -8) (undo-tree-id13932 . -9)) nil (25774 25084 745718 590000) 0 nil])
([nil nil ((#("likely " 0 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 546) (undo-tree-id13935 . -6) (undo-tree-id13936 . -7) (t 25774 25084 760517 855000)) nil (25774 25095 771834 945000) 0 nil])
([nil nil ((#("before " 0 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 657) (undo-tree-id13941 . -6) (undo-tree-id13942 . -7) (t 25774 25095 788509 14000)) nil (25774 25112 934432 589000) 0 nil])
([nil nil ((#("translating " 0 10 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 10 12 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 657) (undo-tree-id13939 . -11) (undo-tree-id13940 . -12)) nil (25774 25112 934429 752000) 0 nil])
([nil nil ((#("it" 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 657) (undo-tree-id13937 . -1) (undo-tree-id13938 . -2)) nil (25774 25112 934424 125000) 0 nil])
([nil nil ((#("is " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 582) (undo-tree-id13951 . -2) (undo-tree-id13952 . -3) (t 25774 25112 948506 941000)) nil (25774 25138 765284 114000) 0 nil])
([nil nil ((#("This " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 658) (undo-tree-id13948 . -4) (undo-tree-id13949 . -3) (undo-tree-id13950 . -5)) nil (25774 25138 765281 900000) 0 nil])
([nil nil ((658 . 659) (#("m" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 658)) nil (25774 25138 765278 463000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 687) (undo-tree-id13946 . -1) (undo-tree-id13947 . -2)) nil (25774 25138 765277 187000) 0 nil])
([nil nil ((#("especially " 0 11 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 687) (undo-tree-id13943 . -10) (undo-tree-id13944 . -10) (undo-tree-id13945 . -11)) nil (25774 25138 765273 962000) 0 nil])
([nil nil ((687 . 688)) nil (25774 25138 765259 248000) 0 nil])
([nil nil ((#("It " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 710) (undo-tree-id13953 . -2) (undo-tree-id13954 . -3) (t 25774 25138 780529 733000)) nil (25774 25144 590018 724000) 0 nil])
([nil nil ((710 . 711) (#("m" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 710)) nil (25774 25144 590007 13000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 788) (undo-tree-id14175 . -1) (undo-tree-id14176 . -1) (t 25774 25144 604539 39000)) nil (25774 25199 295784 459000) 0 nil])
([nil nil ((#("- May be beneficial to have access to the whole input sequence at each time step
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 47 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 47 48 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 48 68 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 68 72 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 72 80 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 80 81 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 708) (undo-tree-id13971 . -80) (undo-tree-id13972 . -2) (undo-tree-id13973 . -2) (undo-tree-id13974 . 78) (undo-tree-id13975 . -2) (undo-tree-id13976 . -2) (undo-tree-id13977 . -2) (undo-tree-id13978 . -2) (undo-tree-id13979 . -2) (undo-tree-id13980 . -2) (undo-tree-id13981 . -2) (undo-tree-id13982 . -2) (undo-tree-id13983 . -2) (undo-tree-id13984 . -2) (undo-tree-id13985 . -2) (undo-tree-id13986 . -2) (undo-tree-id13987 . -2) (undo-tree-id13988 . -2) (undo-tree-id13989 . -2) (undo-tree-id13990 . -2) (undo-tree-id13991 . -2) (undo-tree-id13992 . -2) (undo-tree-id13993 . -2) (undo-tree-id13994 . -2) (undo-tree-id13995 . -2) (undo-tree-id13996 . -2) (undo-tree-id13997 . -2) (undo-tree-id13998 . -2) (undo-tree-id13999 . -2) (undo-tree-id14000 . -2) (undo-tree-id14001 . -2) (undo-tree-id14002 . -2) (undo-tree-id14003 . -2) (undo-tree-id14004 . -2) (undo-tree-id14005 . -2) (undo-tree-id14006 . -2) (undo-tree-id14007 . -2) (undo-tree-id14008 . -2) (undo-tree-id14009 . -2) (undo-tree-id14010 . -2) (undo-tree-id14011 . -2) (undo-tree-id14012 . -2) (undo-tree-id14013 . -2) (undo-tree-id14014 . -2) (undo-tree-id14015 . -2) (undo-tree-id14016 . -2) (undo-tree-id14017 . -2) (undo-tree-id14018 . -2) (undo-tree-id14019 . -2) (undo-tree-id14020 . -2) (undo-tree-id14021 . -2) (undo-tree-id14022 . -2) (undo-tree-id14023 . -2) (undo-tree-id14024 . -2) (undo-tree-id14025 . -2) (undo-tree-id14026 . -2) (undo-tree-id14027 . -2) (undo-tree-id14028 . -2) (undo-tree-id14029 . -2) (undo-tree-id14030 . -2) (undo-tree-id14031 . -2) (undo-tree-id14032 . -2) (undo-tree-id14033 . -2) (undo-tree-id14034 . -2) (undo-tree-id14035 . -2) (undo-tree-id14036 . -2) (undo-tree-id14037 . -2) (undo-tree-id14038 . -2) (undo-tree-id14039 . -2) (undo-tree-id14040 . -2) (undo-tree-id14041 . -2) (undo-tree-id14042 . -2) (undo-tree-id14043 . -80) (undo-tree-id14044 . -80) (undo-tree-id14045 . -80) (undo-tree-id14046 . -80) (undo-tree-id14047 . -80) (undo-tree-id14048 . -80) (undo-tree-id14049 . -80) (undo-tree-id14050 . -80) (undo-tree-id14051 . -80) (undo-tree-id14052 . -80) (undo-tree-id14053 . -80) (undo-tree-id14054 . -80) (undo-tree-id14055 . -80) (undo-tree-id14056 . -80) (undo-tree-id14057 . -80) (undo-tree-id14058 . -80) (undo-tree-id14059 . -80) (undo-tree-id14060 . -80) (undo-tree-id14061 . -80) (undo-tree-id14062 . -80) (undo-tree-id14063 . -80) (undo-tree-id14064 . -80) (undo-tree-id14065 . -80) (undo-tree-id14066 . -80) (undo-tree-id14067 . -80) (undo-tree-id14068 . -80) (undo-tree-id14069 . -80) (undo-tree-id14070 . -79) (undo-tree-id14071 . -79) (undo-tree-id14072 . -79) (undo-tree-id14073 . -79) (undo-tree-id14074 . -79) (undo-tree-id14075 . -79) (undo-tree-id14076 . -79) (undo-tree-id14077 . -79) (undo-tree-id14078 . -79) (undo-tree-id14079 . -79) (undo-tree-id14080 . -79) (undo-tree-id14081 . -79) (undo-tree-id14082 . -79) (undo-tree-id14083 . -79) (undo-tree-id14084 . -79) (undo-tree-id14085 . -79) (undo-tree-id14086 . -79) (undo-tree-id14087 . -79) (undo-tree-id14088 . -79) (undo-tree-id14089 . -79) (undo-tree-id14090 . -79) (undo-tree-id14091 . -79) (undo-tree-id14092 . -79) (undo-tree-id14093 . -79) (undo-tree-id14094 . -79) (undo-tree-id14095 . -79) (undo-tree-id14096 . -79) (undo-tree-id14097 . -79) (undo-tree-id14098 . -79) (undo-tree-id14099 . -79) (undo-tree-id14100 . -79) (undo-tree-id14101 . -79) (undo-tree-id14102 . -81) (undo-tree-id14103 . -81) (undo-tree-id14104 . -81) (undo-tree-id14105 . -81) (undo-tree-id14106 . -81) (undo-tree-id14107 . -81) (undo-tree-id14108 . -81) (undo-tree-id14109 . -81) (undo-tree-id14110 . -81) (undo-tree-id14111 . -81) (undo-tree-id14112 . -81) (undo-tree-id14113 . -81) (undo-tree-id14114 . -81) (undo-tree-id14115 . -81) (undo-tree-id14116 . -81) (undo-tree-id14117 . -81) (undo-tree-id14118 . -81) (undo-tree-id14119 . -63) (undo-tree-id14120 . -63) (undo-tree-id14121 . -63) (undo-tree-id14122 . -63) (undo-tree-id14123 . -63) (undo-tree-id14124 . -63) (undo-tree-id14125 . -63) (undo-tree-id14126 . -63) (undo-tree-id14127 . -63) (undo-tree-id14128 . -63) (undo-tree-id14129 . -63) (undo-tree-id14130 . -63) (undo-tree-id14131 . -63) (undo-tree-id14132 . -63) (undo-tree-id14133 . -63) (undo-tree-id14134 . -63) (undo-tree-id14135 . -2) (undo-tree-id14136 . -2) (undo-tree-id14137 . -2) (undo-tree-id14138 . -2) (undo-tree-id14139 . -2) (undo-tree-id14140 . -2) (undo-tree-id14141 . -2) (undo-tree-id14142 . -2) (undo-tree-id14143 . -2) (undo-tree-id14144 . -2) (undo-tree-id14145 . -2) (undo-tree-id14146 . -2) (undo-tree-id14147 . -2) (undo-tree-id14148 . -2) (undo-tree-id14149 . -2) (undo-tree-id14150 . -2) (undo-tree-id14151 . -2) (undo-tree-id14152 . -2) (undo-tree-id14153 . -2) (undo-tree-id14154 . -2) (undo-tree-id14155 . -2) (undo-tree-id14156 . -2) (undo-tree-id14157 . -2) (undo-tree-id14158 . -2) (undo-tree-id14159 . -2) (undo-tree-id14160 . -2) (undo-tree-id14161 . -2) (undo-tree-id14162 . -2) (undo-tree-id14163 . -2) (undo-tree-id14164 . -2) (undo-tree-id14165 . -2) (undo-tree-id14166 . -2) (undo-tree-id14167 . -2) (undo-tree-id14168 . -2) (undo-tree-id14169 . -2) (undo-tree-id14170 . -2) (undo-tree-id14171 . -2) (undo-tree-id14172 . -2) (undo-tree-id14173 . -2) (undo-tree-id14174 . -81) 710) nil (25774 25199 295774 516000) 0 nil])
([nil nil ((#("An " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 711) (undo-tree-id13969 . -2) (undo-tree-id13970 . -3)) nil (25774 25199 294587 994000) 0 nil])
([nil nil ((711 . 712) (#("a" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 711)) nil (25774 25199 294585 719000) 0 nil])
([nil nil ((#("However, " 0 9 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 798) (undo-tree-id13967 . -8) (undo-tree-id13968 . -9)) nil (25774 25199 294584 648000) 0 nil])
([nil nil ((#("having access to all input sequence elements at eac" 0 51 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 798) (undo-tree-id13965 . -50) (undo-tree-id13966 . -51)) nil (25774 25199 294582 680000) 0 nil])
([nil nil ((#("h " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 798) (undo-tree-id13963 . -1) (undo-tree-id13964 . -2)) nil (25774 25199 294580 440000) 0 nil])
([nil nil ((#("time " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 798) (undo-tree-id13961 . -4) (undo-tree-id13962 . -5)) nil (25774 25199 294578 176000) 0 nil])
([nil nil ((#("step " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 798) (undo-tree-id13959 . -4) (undo-tree-id13960 . -5)) nil (25774 25199 294576 204000) 0 nil])
([nil nil ((802 . 803) (798 . 802)) nil (25774 25199 294574 13000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 822) (undo-tree-id13957 . -1) (undo-tree-id13958 . -1)) nil (25774 25199 294572 438000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 793) (undo-tree-id13955 . -1) (undo-tree-id13956 . -1)) nil (25774 25199 294564 480000) 0 nil])
([nil nil ((#("So" 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 825) (undo-tree-id14189 . -1) (undo-tree-id14190 . -2) (t 25774 25199 312697 200000)) nil (25774 25237 226425 460000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 825) (undo-tree-id14187 . -1) (undo-tree-id14188 . -2)) nil (25774 25237 226422 990000) 0 nil])
([nil nil ((#("help " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 828) (undo-tree-id14185 . -4) (undo-tree-id14186 . -5)) nil (25774 25237 226419 399000) 0 nil])
([nil nil ((#("the " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 828) (undo-tree-id14183 . -3) (undo-tree-id14184 . -4)) nil (25774 25237 226416 939000) 0 nil])
([nil nil ((#("RNN " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 828) (undo-tree-id14179 . -3) (undo-tree-id14180 . 4) (undo-tree-id14181 . -3) (undo-tree-id14182 . -4)) nil (25774 25237 226414 745000) 0 nil])
([nil nil ((825 . 826) (#("t" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 825)) nil (25774 25237 226722 540000) 0 nil])
([nil nil ((#("sequence" 0 8 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 877) (undo-tree-id14244 . -7) (undo-tree-id14245 . -8)) nil (25774 25247 857543 608000) 0 nil] [nil nil ((#("of " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 864) (undo-tree-id14177 . -2) (undo-tree-id14178 . -3)) ((864 . 867)) (25774 25237 226406 312000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 876) (undo-tree-id14191 . -1) (undo-tree-id14192 . -1) (undo-tree-id14193 . -1) (undo-tree-id14194 . -1) (undo-tree-id14195 . -1) (undo-tree-id14196 . -1) (undo-tree-id14197 . -1) (undo-tree-id14198 . -1) (undo-tree-id14199 . -1) (undo-tree-id14200 . -1) (undo-tree-id14201 . -1) (undo-tree-id14202 . -1) (undo-tree-id14203 . -1) (undo-tree-id14204 . -1) (undo-tree-id14205 . -1) (undo-tree-id14206 . -1) (undo-tree-id14207 . -1) (undo-tree-id14208 . -1) (undo-tree-id14209 . -1) (undo-tree-id14210 . -1) (undo-tree-id14211 . -1) (undo-tree-id14212 . -1) (undo-tree-id14213 . -1) (undo-tree-id14214 . -1) (undo-tree-id14215 . -1) (undo-tree-id14216 . -1) (undo-tree-id14217 . -1) (undo-tree-id14218 . -1) (undo-tree-id14219 . -1) (undo-tree-id14220 . -1) (undo-tree-id14221 . -1) (undo-tree-id14222 . -1) (undo-tree-id14223 . -1) (undo-tree-id14224 . -1) (undo-tree-id14225 . -1) (undo-tree-id14226 . -1) (undo-tree-id14227 . -1) (undo-tree-id14228 . -1) (undo-tree-id14229 . -1) (undo-tree-id14230 . -1) (undo-tree-id14231 . -1) (undo-tree-id14232 . -1) (undo-tree-id14233 . -1) (undo-tree-id14234 . -1) (undo-tree-id14235 . -1) (undo-tree-id14236 . -1) (undo-tree-id14237 . -1) (undo-tree-id14238 . -1) (undo-tree-id14239 . -1) (undo-tree-id14240 . -1) (undo-tree-id14241 . -1) (undo-tree-id14242 . -1) (undo-tree-id14243 . -1)) nil (25774 25247 857536 417000) 0 nil])
nil
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 959) (undo-tree-id14246 . -1) (undo-tree-id14247 . -1) (t 25774 25247 868937 404000)) nil (25774 25251 941260 337000) 0 nil])
([nil nil ((#("attention " 0 9 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 9 10 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 969) (undo-tree-id14305 . -9) (undo-tree-id14306 . -8) (undo-tree-id14307 . -8) (undo-tree-id14308 . -8) (undo-tree-id14309 . -8) (undo-tree-id14310 . -8) (undo-tree-id14311 . -8) (undo-tree-id14312 . -8) (undo-tree-id14313 . -8) (undo-tree-id14314 . -8) (undo-tree-id14315 . -8) (undo-tree-id14316 . -8) (undo-tree-id14317 . -8) (undo-tree-id14318 . -8) (undo-tree-id14319 . -8) (undo-tree-id14320 . -8) (undo-tree-id14321 . -8) (undo-tree-id14322 . -10) (t 25774 25251 952961 592000)) nil (25774 25282 689468 619000) 0 nil])
([nil nil ((#("or " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1001) (undo-tree-id14282 . -2) (undo-tree-id14283 . -1) (undo-tree-id14284 . -1) (undo-tree-id14285 . -1) (undo-tree-id14286 . -1) (undo-tree-id14287 . -1) (undo-tree-id14288 . -1) (undo-tree-id14289 . -1) (undo-tree-id14290 . -1) (undo-tree-id14291 . -1) (undo-tree-id14292 . -1) (undo-tree-id14293 . -1) (undo-tree-id14294 . -1) (undo-tree-id14295 . -1) (undo-tree-id14296 . -1) (undo-tree-id14297 . -1) (undo-tree-id14298 . -1) (undo-tree-id14299 . -1) (undo-tree-id14300 . -1) (undo-tree-id14301 . -1) (undo-tree-id14302 . -1) (undo-tree-id14303 . -1) (undo-tree-id14304 . -3)) nil (25774 25282 689058 115000) 0 nil])
([nil nil ((#("relevant " 0 9 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1001) (undo-tree-id14248 . -8) (undo-tree-id14249 . -7) (undo-tree-id14250 . -7) (undo-tree-id14251 . -7) (undo-tree-id14252 . -7) (undo-tree-id14253 . -7) (undo-tree-id14254 . -7) (undo-tree-id14255 . -7) (undo-tree-id14256 . -7) (undo-tree-id14257 . -7) (undo-tree-id14258 . -7) (undo-tree-id14259 . -7) (undo-tree-id14260 . -7) (undo-tree-id14261 . -7) (undo-tree-id14262 . -7) (undo-tree-id14263 . -7) (undo-tree-id14264 . -7) (undo-tree-id14265 . -9) (undo-tree-id14266 . -9) (undo-tree-id14267 . -9) (undo-tree-id14268 . -9) (undo-tree-id14269 . -9) (undo-tree-id14270 . -9) (undo-tree-id14271 . -9) (undo-tree-id14272 . -9) (undo-tree-id14273 . -9) (undo-tree-id14274 . -9) (undo-tree-id14275 . -9) (undo-tree-id14276 . -9) (undo-tree-id14277 . -9) (undo-tree-id14278 . -9) (undo-tree-id14279 . -9) (undo-tree-id14280 . -9) (undo-tree-id14281 . -9)) nil (25774 25282 689037 737000) 0 nil])
([nil nil ((#("input " 0 6 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1009) (undo-tree-id14328 . -5) (undo-tree-id14329 . -6) (t 25774 25282 701162 549000)) nil (25774 25298 882844 593000) 0 nil])
([nil nil ((#("sequence " 0 9 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1009) (undo-tree-id14326 . -8) (undo-tree-id14327 . -9)) nil (25774 25298 882842 113000) 0 nil])
([nil nil ((#("at a given time step." 0 21 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1020) (undo-tree-id14323 . -20) (undo-tree-id14324 . -21) (undo-tree-id14325 . -21)) nil (25774 25298 882838 494000) 0 nil])
([nil nil ((1019 . 1020)) nil (25774 25298 882825 380000) 0 nil])
([nil nil ((#("- For example, revisiting Figure 16.2, the words “mir, helfen, zu” may be more relevant for producing the output word “help” than the words “kannst, du, Satz.”
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 39 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 39 40 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 40 42 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 42 101 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 101 102 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 102 126 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 126 159 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 159 160 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1023) (undo-tree-id14331 . -159) (undo-tree-id14332 . 7) (undo-tree-id14333 . -157) (undo-tree-id14334 . 97) (undo-tree-id14335 . -65) (undo-tree-id14336 . -63) (undo-tree-id14337 . -6) (undo-tree-id14338 . -63) (undo-tree-id14339 . -63) (undo-tree-id14340 . -63) (undo-tree-id14341 . -63) (undo-tree-id14342 . -63) (undo-tree-id14343 . -63) (undo-tree-id14344 . -63) (undo-tree-id14345 . -63) (undo-tree-id14346 . -63) (undo-tree-id14347 . -63) (undo-tree-id14348 . -63) (undo-tree-id14349 . -63) (undo-tree-id14350 . -63) (undo-tree-id14351 . -63) (undo-tree-id14352 . -63) (undo-tree-id14353 . -63) (undo-tree-id14354 . -63) (undo-tree-id14355 . -63) (undo-tree-id14356 . -63) (undo-tree-id14357 . -63) (undo-tree-id14358 . -63) (undo-tree-id14359 . -63) (undo-tree-id14360 . -63) (undo-tree-id14361 . -63) (undo-tree-id14362 . -63) (undo-tree-id14363 . -63) (undo-tree-id14364 . -63) (undo-tree-id14365 . -63) (undo-tree-id14366 . -63) (undo-tree-id14367 . -63) (undo-tree-id14368 . -63) (undo-tree-id14369 . -63) (undo-tree-id14370 . -63) (undo-tree-id14371 . -63) (undo-tree-id14372 . -2) (undo-tree-id14373 . -2) (undo-tree-id14374 . -2) (undo-tree-id14375 . -2) (undo-tree-id14376 . -2) (undo-tree-id14377 . -2) (undo-tree-id14378 . -2) (undo-tree-id14379 . -2) (undo-tree-id14380 . -2) (undo-tree-id14381 . -2) (undo-tree-id14382 . -2) (undo-tree-id14383 . -2) (undo-tree-id14384 . -2) (undo-tree-id14385 . -2) (undo-tree-id14386 . -2) (undo-tree-id14387 . -2) (undo-tree-id14388 . -2) (undo-tree-id14389 . -2) (undo-tree-id14390 . -2) (undo-tree-id14391 . -2) (undo-tree-id14392 . -2) (undo-tree-id14393 . -2) (undo-tree-id14394 . -2) (undo-tree-id14395 . -2) (undo-tree-id14396 . -2) (undo-tree-id14397 . -2) (undo-tree-id14398 . -2) (undo-tree-id14399 . -2) (undo-tree-id14400 . -2) (undo-tree-id14401 . -2) (undo-tree-id14402 . -2) (undo-tree-id14403 . -2) (undo-tree-id14404 . -6) (undo-tree-id14405 . -6) (undo-tree-id14406 . -6) (undo-tree-id14407 . -6) (undo-tree-id14408 . -6) (undo-tree-id14409 . -6) (undo-tree-id14410 . -6) (undo-tree-id14411 . -6) (undo-tree-id14412 . -6) (undo-tree-id14413 . -6) (undo-tree-id14414 . -6) (undo-tree-id14415 . -6) (undo-tree-id14416 . -6) (undo-tree-id14417 . -6) (undo-tree-id14418 . -6) (undo-tree-id14419 . -6) (undo-tree-id14420 . -6) (undo-tree-id14421 . -6) (undo-tree-id14422 . -6) (undo-tree-id14423 . -6) (undo-tree-id14424 . -6) (undo-tree-id14425 . -6) (undo-tree-id14426 . -6) (undo-tree-id14427 . -6) (undo-tree-id14428 . -6) (undo-tree-id14429 . -6) (undo-tree-id14430 . -6) (undo-tree-id14431 . -6) (undo-tree-id14432 . -6) (undo-tree-id14433 . -6) (undo-tree-id14434 . -6) (undo-tree-id14435 . -6) (undo-tree-id14436 . -6) (undo-tree-id14437 . -6) (undo-tree-id14438 . -6) (undo-tree-id14439 . -6) (undo-tree-id14440 . -6) (undo-tree-id14441 . -6) (undo-tree-id14442 . -6) (undo-tree-id14443 . -6) (undo-tree-id14444 . -6) (undo-tree-id14445 . -6) (undo-tree-id14446 . -6) (undo-tree-id14447 . -6) (undo-tree-id14448 . -6) (undo-tree-id14449 . -6) (undo-tree-id14450 . -6) (undo-tree-id14451 . -6) (undo-tree-id14452 . -6) (undo-tree-id14453 . -6) (undo-tree-id14454 . -6) (undo-tree-id14455 . -6) (undo-tree-id14456 . -6) (undo-tree-id14457 . -6) (undo-tree-id14458 . -6) (undo-tree-id14459 . -6) (undo-tree-id14460 . -6) (undo-tree-id14461 . -6) (undo-tree-id14462 . -6) (undo-tree-id14463 . -6) (undo-tree-id14464 . -6) (undo-tree-id14465 . -6) (undo-tree-id14466 . -6) (undo-tree-id14467 . -6) (undo-tree-id14468 . -6) (undo-tree-id14469 . -6) (undo-tree-id14470 . -6) (undo-tree-id14471 . -6) (undo-tree-id14472 . -6) (undo-tree-id14473 . -6) (undo-tree-id14474 . -6) (undo-tree-id14475 . -6) (undo-tree-id14476 . -6) (undo-tree-id14477 . -6) (undo-tree-id14478 . -160) 1029 (t 25774 25298 897281 318000)) nil (25774 25329 71793 650000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1023) (undo-tree-id14330 . -1)) nil (25774 25329 71684 438000) 0 nil])
([nil nil ((#("- The next subsection introduces an RNN architecture that was outfitted with an attention mechanism to help process long sequences for language translation.
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 61 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 61 99 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 99 100 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 100 155 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 155 156 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 156 157 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 1023) (undo-tree-id14529 . -156) (undo-tree-id14530 . -2) (undo-tree-id14531 . -2) (undo-tree-id14532 . -2) (undo-tree-id14533 . -2) (undo-tree-id14534 . -2) (undo-tree-id14535 . -2) (undo-tree-id14536 . -2) (undo-tree-id14537 . -2) (undo-tree-id14538 . -2) (undo-tree-id14539 . -2) (undo-tree-id14540 . -2) (undo-tree-id14541 . -2) (undo-tree-id14542 . -2) (undo-tree-id14543 . -2) (undo-tree-id14544 . -2) (undo-tree-id14545 . -2) (undo-tree-id14546 . -2) (undo-tree-id14547 . -2) (undo-tree-id14548 . -2) (undo-tree-id14549 . -2) (undo-tree-id14550 . -2) (undo-tree-id14551 . -2) (undo-tree-id14552 . -2) (undo-tree-id14553 . -2) (undo-tree-id14554 . -2) (undo-tree-id14555 . -2) (undo-tree-id14556 . -2) (undo-tree-id14557 . -2) (undo-tree-id14558 . -2) (undo-tree-id14559 . -2) (undo-tree-id14560 . -2) (undo-tree-id14561 . -2) (undo-tree-id14562 . -2) (undo-tree-id14563 . -2) (undo-tree-id14564 . -2) (undo-tree-id14565 . -2) (undo-tree-id14566 . -2) (undo-tree-id14567 . -2) (undo-tree-id14568 . -2) (undo-tree-id14569 . -2) (undo-tree-id14570 . -2) (undo-tree-id14571 . -2) (undo-tree-id14572 . -2) (undo-tree-id14573 . -2) (undo-tree-id14574 . -2) (undo-tree-id14575 . -2) (undo-tree-id14576 . -2) (undo-tree-id14577 . -2) (undo-tree-id14578 . -2) (undo-tree-id14579 . -2) (undo-tree-id14580 . -2) (undo-tree-id14581 . -2) (undo-tree-id14582 . -2) (undo-tree-id14583 . -2) (undo-tree-id14584 . -2) (undo-tree-id14585 . -2) (undo-tree-id14586 . -2) (undo-tree-id14587 . -2) (undo-tree-id14588 . -2) (undo-tree-id14589 . -2) (undo-tree-id14590 . -157) 1025 (t 25774 25329 81525 292000)) nil (25774 25358 735861 379000) 0 nil])
([nil nil ((1023 . 1026)) nil (25774 25358 735726 144000) 0 nil])
([nil nil ((1027 . 1028) (1026 . 1027) 1025) nil (25774 25358 735725 402000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1969 . 1970) (nil fontified nil 1917 . 1970) (nil fontified nil 1818 . 1917) (nil fontified nil 1719 . 1818) (nil fontified nil 1617 . 1719) (nil fontified nil 1513 . 1617) (nil fontified nil 1401 . 1513) (nil fontified nil 1376 . 1401) (nil fontified nil 1271 . 1376) (nil fontified nil 1169 . 1271) (nil fontified nil 1070 . 1169) (nil fontified nil 1028 . 1070) (1028 . 1970)) nil (25774 25358 735723 904000) 0 nil])
([nil nil ((1025 . 1026) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -1025) (undo-tree-id14479 . -1) (undo-tree-id14480 . -1) (undo-tree-id14481 . -1) (undo-tree-id14482 . -1) (undo-tree-id14483 . -1) (undo-tree-id14484 . -1) (undo-tree-id14485 . -1) (undo-tree-id14486 . -1) (undo-tree-id14487 . -1) (undo-tree-id14488 . -1) (undo-tree-id14489 . -1) (undo-tree-id14490 . -1) (undo-tree-id14491 . -1) (undo-tree-id14492 . -1) (undo-tree-id14493 . -1) (undo-tree-id14494 . -1) (undo-tree-id14495 . -1) (undo-tree-id14496 . -1) (undo-tree-id14497 . -1) (undo-tree-id14498 . -1) (undo-tree-id14499 . -1) (undo-tree-id14500 . -1) (undo-tree-id14501 . -1) (undo-tree-id14502 . -1) (undo-tree-id14503 . -1) (undo-tree-id14504 . -1) (undo-tree-id14505 . -1) (undo-tree-id14506 . -1) (undo-tree-id14507 . -1) (undo-tree-id14508 . -1) (undo-tree-id14509 . -1) (#(" " 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 1025) (undo-tree-id14510 . -1) (undo-tree-id14511 . -1) (undo-tree-id14512 . -1) (undo-tree-id14513 . -1) (undo-tree-id14514 . -1) (undo-tree-id14515 . -1) (undo-tree-id14516 . -1) (undo-tree-id14517 . -1) (undo-tree-id14518 . -1) (undo-tree-id14519 . -1) (#("
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . -1026) (undo-tree-id14520 . -1) (undo-tree-id14521 . -1) (undo-tree-id14522 . -1) (undo-tree-id14523 . -1) (undo-tree-id14524 . -1) (undo-tree-id14525 . -1) (undo-tree-id14526 . -1) (undo-tree-id14527 . -1) (undo-tree-id14528 . -1) 1023) nil (25774 25358 735718 413000) 0 nil])
([nil nil ((1968 . 1969)) nil (25774 25358 735419 484000) 0 nil])
([nil nil ((1068 . 1070) (t 25774 25358 749792 417000)) nil (25774 25427 697908 310000) 0 nil])
([nil nil ((1916 . 1917) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1916) (undo-tree-id15318 . -1) (1817 . 1818) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1817) (undo-tree-id15319 . -1) (1718 . 1719) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1718) (undo-tree-id15320 . -1) (1616 . 1617) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1616) (undo-tree-id15321 . -1) (1512 . 1513) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1512) (undo-tree-id15322 . -1) (1400 . 1401) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1400) (undo-tree-id15323 . -1) (nil face org-link 1375 . 1376) (nil font-lock-multiline t 1375 . 1376) (nil line-prefix #("    " 0 4 (face org-indent)) 1375 . 1376) (nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) 1375 . 1376) (nil fontified nil 1375 . 1376) (1375 . 1376) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1375) (undo-tree-id15324 . -1) (1270 . 1271) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1270) (undo-tree-id15325 . -1) (1168 . 1169) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1168) (undo-tree-id15326 . -1) 1069) nil (25774 25427 697905 294000) 0 nil])
([nil nil ((1068 . 1972) (#("- Given an input sequence 𝑥𝑥 𝑥 𝑥𝑥𝑥 (1) , 𝑥𝑥 (2) , … , 𝑥𝑥 (𝑇𝑇) ), the attention mechanism assigns a weight to each element 𝑥𝑥 (𝑖𝑖) (or, to be more specific, its hidden representation) and helps the model identify which part of the input it should focus on. For example, suppose our input is a sentence, and a word with a larger weight contributes more to our understanding of the whole sentence. The RNN with the atten- tion mechanism shown in Figure 16.3 (modeled after the previously mentioned paper) illustrates the overall concept of generating the second output word:
- In this subsection, we will summarize the mechanics of the attention mechanism that was originally developed for language translation and first appeared in the following paper: Neural Machine Transla- tion by Jointly Learning to Align and Translate by Bahdanau, D., Cho, K., and Bengio, Y., 2014, https:// arxiv.org/abs/1409.0473." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 113 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 113 114 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 114 129 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 129 217 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 217 218 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 218 319 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 319 320 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 320 418 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 418 419 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 419 517 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 517 518 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 518 570 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 570 571 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 571 572 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 572 573 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil composition (0 1 [8226])) 573 574 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 574 672 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 672 673 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 673 774 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 774 775 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 775 871 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 871 878 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil help-echo "LINK: https://" htmlize-link (:uri "https://") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 878 879 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://" htmlize-link (:uri "https://") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 879 880 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 880 904 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 1068) (undo-tree-id14795 . 330) (undo-tree-id14796 . -904) (undo-tree-id14797 . 330) (undo-tree-id14798 . -904) (undo-tree-id14799 . -573) (undo-tree-id14800 . -573) (undo-tree-id14801 . -573) (undo-tree-id14802 . -573) (undo-tree-id14803 . -573) (undo-tree-id14804 . -573) (undo-tree-id14805 . -573) (undo-tree-id14806 . -573) (undo-tree-id14807 . -573) (undo-tree-id14808 . -573) (undo-tree-id14809 . -573) (undo-tree-id14810 . -573) (undo-tree-id14811 . -573) (undo-tree-id14812 . -573) (undo-tree-id14813 . -573) (undo-tree-id14814 . -573) (undo-tree-id14815 . -573) (undo-tree-id14816 . -573) (undo-tree-id14817 . -573) (undo-tree-id14818 . -573) (undo-tree-id14819 . -573) (undo-tree-id14820 . -573) (undo-tree-id14821 . -573) (undo-tree-id14822 . -573) (undo-tree-id14823 . -574) (undo-tree-id14824 . -574) (undo-tree-id14825 . -574) (undo-tree-id14826 . -574) (undo-tree-id14827 . -574) (undo-tree-id14828 . -574) (undo-tree-id14829 . -574) (undo-tree-id14830 . -574) (undo-tree-id14831 . -574) (undo-tree-id14832 . -574) (undo-tree-id14833 . -574) (undo-tree-id14834 . -574) (undo-tree-id14835 . -574) (undo-tree-id14836 . -574) (undo-tree-id14837 . -574) (undo-tree-id14838 . -574) (undo-tree-id14839 . -574) (undo-tree-id14840 . -573) (undo-tree-id14841 . -573) (undo-tree-id14842 . -573) (undo-tree-id14843 . -573) (undo-tree-id14844 . -573) (undo-tree-id14845 . -573) (undo-tree-id14846 . -573) (undo-tree-id14847 . -573) (undo-tree-id14848 . -573) (undo-tree-id14849 . -573) (undo-tree-id14850 . -573) (undo-tree-id14851 . -573) (undo-tree-id14852 . -573) (undo-tree-id14853 . -573) (undo-tree-id14854 . -573) (undo-tree-id14855 . -573) (undo-tree-id14856 . -573) (undo-tree-id14857 . -573) (undo-tree-id14858 . -573) (undo-tree-id14859 . -573) (undo-tree-id14860 . -573) (undo-tree-id14861 . -573) (undo-tree-id14862 . -573) (undo-tree-id14863 . -573) (undo-tree-id14864 . -573) (undo-tree-id14865 . -573) (undo-tree-id14866 . -573) (undo-tree-id14867 . -573) (undo-tree-id14868 . -573) (undo-tree-id14869 . -573) (undo-tree-id14870 . -573) (undo-tree-id14871 . -573) (undo-tree-id14872 . -573) (undo-tree-id14873 . -573) (undo-tree-id14874 . -573) (undo-tree-id14875 . -573) (undo-tree-id14876 . -672) (undo-tree-id14877 . -672) (undo-tree-id14878 . -672) (undo-tree-id14879 . -672) (undo-tree-id14880 . -672) (undo-tree-id14881 . -672) (undo-tree-id14882 . -672) (undo-tree-id14883 . -672) (undo-tree-id14884 . -672) (undo-tree-id14885 . -672) (undo-tree-id14886 . -672) (undo-tree-id14887 . -672) (undo-tree-id14888 . -672) (undo-tree-id14889 . -672) (undo-tree-id14890 . -672) (undo-tree-id14891 . -672) (undo-tree-id14892 . -672) (undo-tree-id14893 . -672) (undo-tree-id14894 . -672) (undo-tree-id14895 . -672) (undo-tree-id14896 . -672) (undo-tree-id14897 . -672) (undo-tree-id14898 . 138) (undo-tree-id14899 . -773) (undo-tree-id14900 . -774) (undo-tree-id14901 . -774) (undo-tree-id14902 . -774) (undo-tree-id14903 . -774) (undo-tree-id14904 . -774) (undo-tree-id14905 . -774) (undo-tree-id14906 . -774) (undo-tree-id14907 . -774) (undo-tree-id14908 . -774) (undo-tree-id14909 . -774) (undo-tree-id14910 . -774) (undo-tree-id14911 . -774) (undo-tree-id14912 . -879) (undo-tree-id14913 . -879) (undo-tree-id14914 . -879) (undo-tree-id14915 . -879) (undo-tree-id14916 . -879) (undo-tree-id14917 . -879) (undo-tree-id14918 . -879) (undo-tree-id14919 . -879) (undo-tree-id14920 . -879) (undo-tree-id14921 . -879) (undo-tree-id14922 . -879) (undo-tree-id14923 . -904) (undo-tree-id14924 . -904) (undo-tree-id14925 . -904) (undo-tree-id14926 . -904) (undo-tree-id14927 . -904) (undo-tree-id14928 . -904) (undo-tree-id14929 . -904) (undo-tree-id14930 . -904) (undo-tree-id14931 . -904) (undo-tree-id14932 . -904) (undo-tree-id14933 . -904) (undo-tree-id14934 . -904) (undo-tree-id14935 . -904) (undo-tree-id14936 . -904) (undo-tree-id14937 . -904) (undo-tree-id14938 . -904) (undo-tree-id14939 . -904) (undo-tree-id14940 . -904) (undo-tree-id14941 . -904) (undo-tree-id14942 . -904) (undo-tree-id14943 . -904) (undo-tree-id14944 . -904) (undo-tree-id14945 . -904) (undo-tree-id14946 . -904) (undo-tree-id14947 . -904) (undo-tree-id14948 . -904) (undo-tree-id14949 . -904) (undo-tree-id14950 . -904) (undo-tree-id14951 . -904) (undo-tree-id14952 . -904) (undo-tree-id14953 . -904) (undo-tree-id14954 . -904) (undo-tree-id14955 . -904) (undo-tree-id14956 . -904) (undo-tree-id14957 . -904) (undo-tree-id14958 . -904) (undo-tree-id14959 . -904) (undo-tree-id14960 . -904) (undo-tree-id14961 . -904) (undo-tree-id14962 . -904) (undo-tree-id14963 . -904) (undo-tree-id14964 . -904) (undo-tree-id14965 . -904) (undo-tree-id14966 . -904) (undo-tree-id14967 . -904) (undo-tree-id14968 . -904) (undo-tree-id14969 . -904) (undo-tree-id14970 . -904) (undo-tree-id14971 . -904) (undo-tree-id14972 . -904) (undo-tree-id14973 . -904) (undo-tree-id14974 . -904) (undo-tree-id14975 . -904) (undo-tree-id14976 . -904) (undo-tree-id14977 . -904) (undo-tree-id14978 . -904) (undo-tree-id14979 . -904) (undo-tree-id14980 . -904) (undo-tree-id14981 . -904) (undo-tree-id14982 . -904) (undo-tree-id14983 . -904) (undo-tree-id14984 . -904) (undo-tree-id14985 . -904) (undo-tree-id14986 . -904) (undo-tree-id14987 . -904) (undo-tree-id14988 . -904) (undo-tree-id14989 . -904) (undo-tree-id14990 . -904) (undo-tree-id14991 . -904) (undo-tree-id14992 . -904) (undo-tree-id14993 . -904) (undo-tree-id14994 . -904) (undo-tree-id14995 . -904) (undo-tree-id14996 . -904) (undo-tree-id14997 . -904) (undo-tree-id14998 . -904) (undo-tree-id14999 . -904) (undo-tree-id15000 . -904) (undo-tree-id15001 . -904) (undo-tree-id15002 . -904) (undo-tree-id15003 . -904) (undo-tree-id15004 . -904) (undo-tree-id15005 . -904) (undo-tree-id15006 . -904) (undo-tree-id15007 . -904) (undo-tree-id15008 . -904) (undo-tree-id15009 . -904) (undo-tree-id15010 . -904) (undo-tree-id15011 . -904) (undo-tree-id15012 . -904) (undo-tree-id15013 . -904) (undo-tree-id15014 . -904) (undo-tree-id15015 . -904) (undo-tree-id15016 . -904) (undo-tree-id15017 . -904) (undo-tree-id15018 . -904) (undo-tree-id15019 . -574) (undo-tree-id15020 . -574) (undo-tree-id15021 . -574) (undo-tree-id15022 . -574) (undo-tree-id15023 . -574) (undo-tree-id15024 . -574) (undo-tree-id15025 . -574) (undo-tree-id15026 . -574) (undo-tree-id15027 . -574) (undo-tree-id15028 . -574) (undo-tree-id15029 . -574) (undo-tree-id15030 . -574) (undo-tree-id15031 . -574) (undo-tree-id15032 . -574) (undo-tree-id15033 . -574) (undo-tree-id15034 . -574) (undo-tree-id15035 . -574) (undo-tree-id15036 . -574) (undo-tree-id15037 . -574) (undo-tree-id15038 . -574) (undo-tree-id15039 . -574) (undo-tree-id15040 . -574) (undo-tree-id15041 . -574) (undo-tree-id15042 . -574) (undo-tree-id15043 . -574) (undo-tree-id15044 . -574) (undo-tree-id15045 . -574) (undo-tree-id15046 . -574) (undo-tree-id15047 . -574) (undo-tree-id15048 . -574) (undo-tree-id15049 . -574) (undo-tree-id15050 . -574) (undo-tree-id15051 . -574) (undo-tree-id15052 . -574) (undo-tree-id15053 . -574) (undo-tree-id15054 . -574) (undo-tree-id15055 . -837) (undo-tree-id15056 . -837) (undo-tree-id15057 . -837) (undo-tree-id15058 . -837) (undo-tree-id15059 . -837) (undo-tree-id15060 . -837) (undo-tree-id15061 . -837) (undo-tree-id15062 . -837) (undo-tree-id15063 . -837) (undo-tree-id15064 . -837) (undo-tree-id15065 . -837) (undo-tree-id15066 . -837) (undo-tree-id15067 . -837) (undo-tree-id15068 . -837) (undo-tree-id15069 . -837) (undo-tree-id15070 . -837) (undo-tree-id15071 . -837) (undo-tree-id15072 . -837) (undo-tree-id15073 . -837) (undo-tree-id15074 . -837) (undo-tree-id15075 . -837) (undo-tree-id15076 . 64) (undo-tree-id15077 . -843) (undo-tree-id15078 . -840) (undo-tree-id15079 . -840) (undo-tree-id15080 . -840) (undo-tree-id15081 . -840) (undo-tree-id15082 . -840) (undo-tree-id15083 . -840) (undo-tree-id15084 . -840) (undo-tree-id15085 . -840) (undo-tree-id15086 . -840) (undo-tree-id15087 . -840) (undo-tree-id15088 . -840) (undo-tree-id15089 . -840) (undo-tree-id15090 . -840) (undo-tree-id15091 . -840) (undo-tree-id15092 . -840) (undo-tree-id15093 . -840) (undo-tree-id15094 . -840) (undo-tree-id15095 . -840) (undo-tree-id15096 . -840) (undo-tree-id15097 . -840) (undo-tree-id15098 . -840) (undo-tree-id15099 . -840) (undo-tree-id15100 . -840) (undo-tree-id15101 . -840) (undo-tree-id15102 . -840) (undo-tree-id15103 . -840) (undo-tree-id15104 . -840) (undo-tree-id15105 . -840) (undo-tree-id15106 . -840) (undo-tree-id15107 . -840) (undo-tree-id15108 . -840) (undo-tree-id15109 . -840) (undo-tree-id15110 . -840) (undo-tree-id15111 . -840) (undo-tree-id15112 . -840) (undo-tree-id15113 . -840) (undo-tree-id15114 . -846) (undo-tree-id15115 . -846) (undo-tree-id15116 . -846) (undo-tree-id15117 . -846) (undo-tree-id15118 . -846) (undo-tree-id15119 . -846) (undo-tree-id15120 . -846) (undo-tree-id15121 . -846) (undo-tree-id15122 . -846) (undo-tree-id15123 . -846) (undo-tree-id15124 . -846) (undo-tree-id15125 . -846) (undo-tree-id15126 . -846) (undo-tree-id15127 . -846) (undo-tree-id15128 . -846) (undo-tree-id15129 . -846) (undo-tree-id15130 . -862) (undo-tree-id15131 . -862) (undo-tree-id15132 . -862) (undo-tree-id15133 . -862) (undo-tree-id15134 . -862) (undo-tree-id15135 . -862) (undo-tree-id15136 . -862) (undo-tree-id15137 . -862) (undo-tree-id15138 . -862) (undo-tree-id15139 . -862) (undo-tree-id15140 . -862) (undo-tree-id15141 . -862) (undo-tree-id15142 . -862) (undo-tree-id15143 . -862) (undo-tree-id15144 . -862) (undo-tree-id15145 . -862) (undo-tree-id15146 . 24) (undo-tree-id15147 . -885) (undo-tree-id15148 . -885) (undo-tree-id15149 . -885) (undo-tree-id15150 . -885) (undo-tree-id15151 . -885) (undo-tree-id15152 . -885) (undo-tree-id15153 . -885) (undo-tree-id15154 . -885) (undo-tree-id15155 . -885) (undo-tree-id15156 . -885) (undo-tree-id15157 . -885) (undo-tree-id15158 . -885) (undo-tree-id15159 . -885) (undo-tree-id15160 . -885) (undo-tree-id15161 . -885) (undo-tree-id15162 . -885) (undo-tree-id15163 . -885) (undo-tree-id15164 . -885) (undo-tree-id15165 . -885) (undo-tree-id15166 . -885) (undo-tree-id15167 . -885) (undo-tree-id15168 . -885) (undo-tree-id15169 . -898) (undo-tree-id15170 . -898) (undo-tree-id15171 . -898) (undo-tree-id15172 . -898) (undo-tree-id15173 . -898) (undo-tree-id15174 . -898) (undo-tree-id15175 . -898) (undo-tree-id15176 . -898) (undo-tree-id15177 . -898) (undo-tree-id15178 . -898) (undo-tree-id15179 . -898) (undo-tree-id15180 . -898) (undo-tree-id15181 . -898) (undo-tree-id15182 . -898) (undo-tree-id15183 . -898) (undo-tree-id15184 . -898) (undo-tree-id15185 . -903) (undo-tree-id15186 . -903) (undo-tree-id15187 . -903) (undo-tree-id15188 . -903) (undo-tree-id15189 . -903) (undo-tree-id15190 . -903) (undo-tree-id15191 . -903) (undo-tree-id15192 . -903) (undo-tree-id15193 . -903) (undo-tree-id15194 . -903) (undo-tree-id15195 . -903) (undo-tree-id15196 . -903) (undo-tree-id15197 . -903) (undo-tree-id15198 . -903) (undo-tree-id15199 . -903) (undo-tree-id15200 . -903) (undo-tree-id15201 . -904) (undo-tree-id15202 . -904) (undo-tree-id15203 . -904) (undo-tree-id15204 . -904) (undo-tree-id15205 . -904) (undo-tree-id15206 . -904) (undo-tree-id15207 . -904) (undo-tree-id15208 . -904) (undo-tree-id15209 . -904) (undo-tree-id15210 . -904) (undo-tree-id15211 . -904) (undo-tree-id15212 . -904) (undo-tree-id15213 . -904) (undo-tree-id15214 . -904) (undo-tree-id15215 . -904) (undo-tree-id15216 . -904) (undo-tree-id15217 . -904) (undo-tree-id15218 . -904) (undo-tree-id15219 . -904) (undo-tree-id15220 . -904) (undo-tree-id15221 . -904) (undo-tree-id15222 . -904) (undo-tree-id15223 . -904) (undo-tree-id15224 . -904) (undo-tree-id15225 . -904) (undo-tree-id15226 . -904) (undo-tree-id15227 . -904) (undo-tree-id15228 . -904) (undo-tree-id15229 . -904) (undo-tree-id15230 . -572) (1068 . 1640) (#(" Given an input sequence 𝑥𝑥 𝑥 𝑥𝑥𝑥 (1) , 𝑥𝑥 (2) , … , 𝑥𝑥 (𝑇𝑇) ), the attention mechanism assigns a weight to each element 𝑥𝑥 (𝑖𝑖) (or, to be more specific, its hidden representation) and helps the model identify which part of the input it should focus on. For example, suppose our input is a sentence, and a word with a larger weight contributes more to our understanding of the whole sentence. The RNN with the atten- tion mechanism shown in Figure 16.3 (modeled after the previously mentioned paper) illustrates the overall concept of generating the second output word:" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 112 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 112 113 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 113 128 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 128 216 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 216 217 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 217 318 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 318 319 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 319 417 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 417 418 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 418 516 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 516 517 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 517 569 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 569 570 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 1400) (undo-tree-id15231 . -515) (undo-tree-id15232 . -112) (undo-tree-id15233 . -112) (undo-tree-id15234 . -112) (undo-tree-id15235 . -112) (undo-tree-id15236 . -112) (undo-tree-id15237 . -112) (undo-tree-id15238 . -112) (undo-tree-id15239 . -112) (undo-tree-id15240 . -112) (undo-tree-id15241 . -112) (undo-tree-id15242 . -112) (undo-tree-id15243 . -112) (undo-tree-id15244 . -216) (undo-tree-id15245 . -216) (undo-tree-id15246 . -216) (undo-tree-id15247 . -216) (undo-tree-id15248 . -216) (undo-tree-id15249 . -216) (undo-tree-id15250 . -216) (undo-tree-id15251 . -216) (undo-tree-id15252 . -216) (undo-tree-id15253 . -216) (undo-tree-id15254 . -216) (undo-tree-id15255 . -216) (undo-tree-id15256 . -318) (undo-tree-id15257 . -318) (undo-tree-id15258 . -318) (undo-tree-id15259 . -318) (undo-tree-id15260 . -318) (undo-tree-id15261 . -318) (undo-tree-id15262 . -318) (undo-tree-id15263 . -318) (undo-tree-id15264 . -318) (undo-tree-id15265 . -318) (undo-tree-id15266 . -318) (undo-tree-id15267 . -318) (undo-tree-id15268 . 159) (undo-tree-id15269 . -416) (undo-tree-id15270 . -417) (undo-tree-id15271 . -417) (undo-tree-id15272 . -417) (undo-tree-id15273 . -417) (undo-tree-id15274 . -417) (undo-tree-id15275 . -417) (undo-tree-id15276 . -417) (undo-tree-id15277 . -417) (undo-tree-id15278 . -417) (undo-tree-id15279 . -417) (undo-tree-id15280 . -417) (undo-tree-id15281 . -417) (undo-tree-id15282 . -417) (undo-tree-id15283 . -417) (undo-tree-id15284 . -417) (undo-tree-id15285 . -417) (undo-tree-id15286 . -417) (undo-tree-id15287 . -516) (undo-tree-id15288 . -516) (undo-tree-id15289 . -516) (undo-tree-id15290 . -516) (undo-tree-id15291 . -516) (undo-tree-id15292 . -516) (undo-tree-id15293 . -516) (undo-tree-id15294 . -516) (undo-tree-id15295 . -516) (undo-tree-id15296 . -516) (undo-tree-id15297 . -516) (undo-tree-id15298 . -516) (undo-tree-id15299 . -516) (undo-tree-id15300 . -516) (undo-tree-id15301 . -516) (undo-tree-id15302 . -516) (undo-tree-id15303 . -516) (undo-tree-id15304 . -516) (undo-tree-id15305 . -516) (undo-tree-id15306 . -516) (undo-tree-id15307 . -516) (undo-tree-id15308 . -516) (undo-tree-id15309 . -516) (undo-tree-id15310 . -516) (undo-tree-id15311 . -516) (undo-tree-id15312 . -516) (undo-tree-id15313 . -516) (undo-tree-id15314 . -516) (undo-tree-id15315 . -516) (undo-tree-id15316 . -516) (undo-tree-id15317 . -516)) nil (25774 25427 697877 828000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1401) (undo-tree-id14785 . -2) (undo-tree-id14786 . -2) (undo-tree-id14787 . -2) (undo-tree-id14788 . -2) (undo-tree-id14789 . -2) (undo-tree-id14790 . -2) (undo-tree-id14791 . -2) (undo-tree-id14792 . -2) (undo-tree-id14793 . -2) (undo-tree-id14794 . -2) 1403 (1400 . 1403) 1367) nil (25774 25427 697481 53000) 0 nil])
([nil nil ((1402 . 1976) (#("- For example, suppose our input is a sentence, and a word with a larger weight contributes more to our understanding of the whole sentence. The RNN with the atten- tion mechanism shown in Figure 16.3 (modeled after the previously mentioned paper) illustrates the overall concept of generating the second output word:

- Given an input sequence 𝑥𝑥 𝑥 𝑥𝑥𝑥 (1) , 𝑥𝑥 (2) , … , 𝑥𝑥 (𝑇𝑇) ), the attention mechanism assigns a weight to each element 𝑥𝑥 (𝑖𝑖) (or, to be more specific, its hidden representation) and helps the model identify which part of the input it should focus on." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 65 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 65 66 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 66 164 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 164 165 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 165 263 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 263 264 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 264 316 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 316 317 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 317 318 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 318 319 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 319 320 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 320 321 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 321 432 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 432 433 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 433 448 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 448 486 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 486 536 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 536 537 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 537 574 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 1402) (undo-tree-id14681 . -574) (undo-tree-id14682 . -321) (undo-tree-id14683 . -321) (undo-tree-id14684 . -321) (undo-tree-id14685 . -321) (undo-tree-id14686 . -321) (undo-tree-id14687 . -321) (undo-tree-id14688 . -321) (undo-tree-id14689 . -321) (undo-tree-id14690 . -321) (undo-tree-id14691 . -321) (undo-tree-id14692 . -321) (undo-tree-id14693 . -321) (undo-tree-id14694 . -321) (undo-tree-id14695 . -321) (undo-tree-id14696 . -321) (undo-tree-id14697 . -321) (undo-tree-id14698 . -321) (undo-tree-id14699 . -321) (undo-tree-id14700 . -321) (undo-tree-id14701 . -321) (undo-tree-id14702 . -321) (undo-tree-id14703 . -321) (undo-tree-id14704 . -320) (undo-tree-id14705 . -320) (undo-tree-id14706 . -320) (undo-tree-id14707 . -320) (undo-tree-id14708 . -320) (undo-tree-id14709 . -320) (undo-tree-id14710 . -320) (undo-tree-id14711 . -320) (undo-tree-id14712 . -320) (undo-tree-id14713 . -320) (undo-tree-id14714 . -320) (undo-tree-id14715 . -320) (undo-tree-id14716 . -320) (undo-tree-id14717 . -320) (undo-tree-id14718 . -320) (undo-tree-id14719 . -320) (undo-tree-id14720 . -320) (undo-tree-id14721 . -320) (undo-tree-id14722 . -320) (undo-tree-id14723 . -320) (undo-tree-id14724 . -320) (undo-tree-id14725 . -320) (undo-tree-id14726 . -320) (undo-tree-id14727 . -320) (undo-tree-id14728 . -320) (undo-tree-id14729 . -320) (undo-tree-id14730 . -320) (undo-tree-id14731 . -320) (undo-tree-id14732 . -320) (undo-tree-id14733 . -320) (undo-tree-id14734 . -573) (undo-tree-id14735 . -573) (undo-tree-id14736 . -573) (undo-tree-id14737 . -573) (undo-tree-id14738 . -573) (undo-tree-id14739 . -573) (undo-tree-id14740 . -573) (undo-tree-id14741 . -573) (undo-tree-id14742 . -573) (undo-tree-id14743 . -573) (undo-tree-id14744 . -573) (undo-tree-id14745 . -573) (undo-tree-id14746 . -573) (undo-tree-id14747 . -573) (undo-tree-id14748 . -573) (undo-tree-id14749 . -573) (undo-tree-id14750 . -573) (undo-tree-id14751 . -573) (undo-tree-id14752 . -573) (undo-tree-id14753 . -573) (undo-tree-id14754 . -573) (undo-tree-id14755 . -574) (undo-tree-id14756 . -574) (undo-tree-id14757 . -574) (undo-tree-id14758 . -574) (undo-tree-id14759 . -574) (undo-tree-id14760 . -574) (undo-tree-id14761 . -574) (undo-tree-id14762 . -574) (undo-tree-id14763 . -574) (undo-tree-id14764 . -574) (undo-tree-id14765 . -574) (undo-tree-id14766 . -574) (undo-tree-id14767 . -574) (undo-tree-id14768 . -574) (undo-tree-id14769 . -574) (undo-tree-id14770 . -574) (undo-tree-id14771 . -574) (undo-tree-id14772 . -574) (undo-tree-id14773 . -574) (undo-tree-id14774 . -574) (undo-tree-id14775 . -574) (undo-tree-id14776 . -574) (undo-tree-id14777 . -574) (undo-tree-id14778 . -574) (undo-tree-id14779 . -574) (undo-tree-id14780 . -574) (undo-tree-id14781 . -574) (undo-tree-id14782 . -574) (undo-tree-id14783 . -574) (undo-tree-id14784 . -319) (1402 . 1721) (#(" For example, suppose our input is a sentence, and a word with a larger weight contributes more to our understanding of the whole sentence. The RNN with the atten- tion mechanism shown in Figure 16.3 (modeled after the previously mentioned paper) illustrates the overall concept of generating the second output word:" 0 64 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 64 65 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 65 163 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 163 164 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 164 262 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 262 263 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 263 315 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 315 316 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 1657)) nil (25774 25427 697469 449000) 0 nil])
([nil nil ((1659 . 1979) (#("- The RNN with the atten- tion mechanism shown in Figure 16.3 (modeled after the previously mentioned paper) illustrates the overall concept of generating the second output word:

- For example, suppose our input is a sentence, and a word with a larger weight contributes more to our understanding of the whole sentence." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 25 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 25 26 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 26 104 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 104 124 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 124 125 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 125 177 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 177 178 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 178 179 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 179 180 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 180 181 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 181 182 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 182 245 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 245 246 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 246 320 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 1659) (undo-tree-id14591 . 138) (undo-tree-id14592 . -320) (undo-tree-id14593 . -182) (undo-tree-id14594 . -182) (undo-tree-id14595 . -182) (undo-tree-id14596 . -182) (undo-tree-id14597 . -182) (undo-tree-id14598 . -182) (undo-tree-id14599 . -182) (undo-tree-id14600 . -182) (undo-tree-id14601 . -182) (undo-tree-id14602 . -182) (undo-tree-id14603 . -182) (undo-tree-id14604 . -182) (undo-tree-id14605 . -182) (undo-tree-id14606 . -182) (undo-tree-id14607 . -182) (undo-tree-id14608 . -182) (undo-tree-id14609 . -182) (undo-tree-id14610 . -181) (undo-tree-id14611 . -181) (undo-tree-id14612 . -181) (undo-tree-id14613 . -181) (undo-tree-id14614 . -181) (undo-tree-id14615 . -181) (undo-tree-id14616 . -181) (undo-tree-id14617 . -181) (undo-tree-id14618 . -181) (undo-tree-id14619 . -181) (undo-tree-id14620 . -181) (undo-tree-id14621 . -181) (undo-tree-id14622 . -181) (undo-tree-id14623 . -181) (undo-tree-id14624 . -181) (undo-tree-id14625 . -181) (undo-tree-id14626 . -181) (undo-tree-id14627 . -181) (undo-tree-id14628 . -181) (undo-tree-id14629 . -181) (undo-tree-id14630 . -181) (undo-tree-id14631 . -181) (undo-tree-id14632 . -181) (undo-tree-id14633 . -181) (undo-tree-id14634 . -181) (undo-tree-id14635 . -181) (undo-tree-id14636 . -181) (undo-tree-id14637 . -181) (undo-tree-id14638 . -181) (undo-tree-id14639 . -181) (undo-tree-id14640 . -319) (undo-tree-id14641 . -319) (undo-tree-id14642 . -319) (undo-tree-id14643 . -319) (undo-tree-id14644 . -319) (undo-tree-id14645 . -319) (undo-tree-id14646 . -319) (undo-tree-id14647 . -319) (undo-tree-id14648 . -319) (undo-tree-id14649 . -319) (undo-tree-id14650 . -319) (undo-tree-id14651 . -319) (undo-tree-id14652 . -319) (undo-tree-id14653 . -319) (undo-tree-id14654 . -319) (undo-tree-id14655 . -319) (undo-tree-id14656 . -319) (undo-tree-id14657 . -319) (undo-tree-id14658 . -319) (undo-tree-id14659 . -319) (undo-tree-id14660 . -319) (undo-tree-id14661 . -320) (undo-tree-id14662 . -320) (undo-tree-id14663 . -320) (undo-tree-id14664 . -320) (undo-tree-id14665 . -320) (undo-tree-id14666 . -320) (undo-tree-id14667 . -320) (undo-tree-id14668 . -320) (undo-tree-id14669 . -320) (undo-tree-id14670 . -320) (undo-tree-id14671 . -320) (undo-tree-id14672 . -320) (undo-tree-id14673 . -320) (undo-tree-id14674 . -320) (undo-tree-id14675 . -320) (undo-tree-id14676 . -320) (undo-tree-id14677 . -320) (undo-tree-id14678 . -320) (undo-tree-id14679 . -320) (undo-tree-id14680 . -180) (1659 . 1839) (#(" The RNN with the atten- tion mechanism shown in Figure 16.3 (modeled after the previously mentioned paper) illustrates the overall concept of generating the second output word:" 0 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 24 25 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 25 103 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 103 123 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 123 124 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 124 176 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 176 177 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 1799)) nil (25774 25427 698237 267000) 0 nil])
([nil nil ((#("In " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1070) (undo-tree-id16263 . -2) (undo-tree-id16264 . -3) (undo-tree-id16265 . -3) (undo-tree-id16266 . -3) (undo-tree-id16267 . -3) (undo-tree-id16268 . -3) (undo-tree-id16269 . -3) (undo-tree-id16270 . -3) (undo-tree-id16271 . -3) (undo-tree-id16272 . -3) (undo-tree-id16273 . -3) (undo-tree-id16274 . -3) (undo-tree-id16275 . -3) (undo-tree-id16276 . -3) (undo-tree-id16277 . -3) (undo-tree-id16278 . -3) (undo-tree-id16279 . -3) (undo-tree-id16280 . -3)) nil (25774 25460 740826 456000) 0 nil] [nil nil ((1801 . 1805) 1803) ((#("- 

" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 1801) (undo-tree-id15327 . 2) (undo-tree-id15328 . -1)) (25774 25427 694995 692000) 0 nil])
([nil nil ((#("this " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1070) (undo-tree-id16245 . -4) (undo-tree-id16246 . -4) (undo-tree-id16247 . -4) (undo-tree-id16248 . -4) (undo-tree-id16249 . -4) (undo-tree-id16250 . -4) (undo-tree-id16251 . -4) (undo-tree-id16252 . -4) (undo-tree-id16253 . -4) (undo-tree-id16254 . -4) (undo-tree-id16255 . -4) (undo-tree-id16256 . -4) (undo-tree-id16257 . -4) (undo-tree-id16258 . -4) (undo-tree-id16259 . -4) (undo-tree-id16260 . -4) (undo-tree-id16261 . -4) (undo-tree-id16262 . -5)) nil (25774 25460 740814 629000) 0 nil])
nil
([nil nil ((#("subsection" 0 10 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1070) (undo-tree-id16227 . -9) (undo-tree-id16228 . -2) (undo-tree-id16229 . -2) (undo-tree-id16230 . -2) (undo-tree-id16231 . -2) (undo-tree-id16232 . -2) (undo-tree-id16233 . -2) (undo-tree-id16234 . -2) (undo-tree-id16235 . -2) (undo-tree-id16236 . -2) (undo-tree-id16237 . -2) (undo-tree-id16238 . -2) (undo-tree-id16239 . -2) (undo-tree-id16240 . -2) (undo-tree-id16241 . -2) (undo-tree-id16242 . -2) (undo-tree-id16243 . -2) (undo-tree-id16244 . -10)) nil (25774 25460 740800 788000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1070) (undo-tree-id16225 . -1) (undo-tree-id16226 . -2)) nil (25774 25460 740789 859000) 0 nil])
([nil nil ((#("we " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1070) (undo-tree-id16223 . -2) (undo-tree-id16224 . -3)) nil (25774 25460 740787 339000) 0 nil])
([nil nil ((#("will " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1070) (undo-tree-id16221 . -4) (undo-tree-id16222 . -5)) nil (25774 25460 740784 610000) 0 nil])
([nil nil ((#("summarize " 0 10 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1070) (undo-tree-id16219 . -9) (undo-tree-id16220 . -10)) nil (25774 25460 740782 709000) 0 nil])
([nil nil ((#("the " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1070) (undo-tree-id16217 . -3) (undo-tree-id16218 . -4)) nil (25774 25460 740780 707000) 0 nil])
([nil nil ((1070 . 1071) (#("m" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1070)) nil (25774 25460 740778 630000) 0 nil])
([nil nil ((1068 . 1361) (#("- that was originally developed for language translation and first appeared in the following paper: Neural Machine Transla- tion by Jointly Learning to Align and Translate by Bahdanau, D., Cho, K., and Bengio, Y., 2014, https:// arxiv.org/abs/1409.0473.

- Mechanics of the attention mechanism" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 21 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 22 123 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 123 124 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 124 220 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 220 227 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil help-echo "LINK: https://" htmlize-link (:uri "https://")) 227 228 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://" htmlize-link (:uri "https://")) 228 229 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 229 253 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 253 254 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 254 255 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 255 256 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) composition (0 1 [8226])) 256 257 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 257 293 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1068) (undo-tree-id15563 . -257) (undo-tree-id15564 . -257) (undo-tree-id15565 . -257) (undo-tree-id15566 . -257) (undo-tree-id15567 . 35) (undo-tree-id15568 . -257) (undo-tree-id15569 . -257) (undo-tree-id15570 . -293) (undo-tree-id15571 . -293) (undo-tree-id15572 . -293) (undo-tree-id15573 . -293) (undo-tree-id15574 . -293) (undo-tree-id15575 . -293) (undo-tree-id15576 . -293) (undo-tree-id15577 . -293) (undo-tree-id15578 . -293) (undo-tree-id15579 . -293) (undo-tree-id15580 . -293) (undo-tree-id15581 . -293) (undo-tree-id15582 . -293) (undo-tree-id15583 . -293) (undo-tree-id15584 . -293) (undo-tree-id15585 . -293) (undo-tree-id15586 . -293) (undo-tree-id15587 . -293) (undo-tree-id15588 . -293) (undo-tree-id15589 . -293) (undo-tree-id15590 . -293) (undo-tree-id15591 . -293) (undo-tree-id15592 . -293) (undo-tree-id15593 . -293) (undo-tree-id15594 . -293) (undo-tree-id15595 . -293) (undo-tree-id15596 . -293) (undo-tree-id15597 . -293) (undo-tree-id15598 . -293) (undo-tree-id15599 . -293) (undo-tree-id15600 . -293) (undo-tree-id15601 . -293) (undo-tree-id15602 . -293) (undo-tree-id15603 . -293) (undo-tree-id15604 . -293) (undo-tree-id15605 . -293) (undo-tree-id15606 . -293) (undo-tree-id15607 . -293) (undo-tree-id15608 . -293) (undo-tree-id15609 . -293) (undo-tree-id15610 . -293) (undo-tree-id15611 . -293) (undo-tree-id15612 . -293) (undo-tree-id15613 . -293) (undo-tree-id15614 . -293) (undo-tree-id15615 . -293) (undo-tree-id15616 . -293) (undo-tree-id15617 . -293) (undo-tree-id15618 . -293) (undo-tree-id15619 . -293) (undo-tree-id15620 . -293) (undo-tree-id15621 . -293) (undo-tree-id15622 . -293) (undo-tree-id15623 . -293) (undo-tree-id15624 . -293) (undo-tree-id15625 . -274) (undo-tree-id15626 . -274) (undo-tree-id15627 . -274) (undo-tree-id15628 . -274) (undo-tree-id15629 . -274) (undo-tree-id15630 . -274) (undo-tree-id15631 . -274) (undo-tree-id15632 . -274) (undo-tree-id15633 . -274) (undo-tree-id15634 . -274) (undo-tree-id15635 . -274) (undo-tree-id15636 . -274) (undo-tree-id15637 . -274) (undo-tree-id15638 . -274) (undo-tree-id15639 . -274) (undo-tree-id15640 . -274) (undo-tree-id15641 . -274) (undo-tree-id15642 . -274) (undo-tree-id15643 . -274) (undo-tree-id15644 . -274) (undo-tree-id15645 . -274) (undo-tree-id15646 . -284) (undo-tree-id15647 . -284) (undo-tree-id15648 . -284) (undo-tree-id15649 . -284) (undo-tree-id15650 . -284) (undo-tree-id15651 . -284) (undo-tree-id15652 . -284) (undo-tree-id15653 . -284) (undo-tree-id15654 . -284) (undo-tree-id15655 . -284) (undo-tree-id15656 . -284) (undo-tree-id15657 . -284) (undo-tree-id15658 . -284) (undo-tree-id15659 . -284) (undo-tree-id15660 . -284) (undo-tree-id15661 . -284) (undo-tree-id15662 . -284) (undo-tree-id15663 . -284) (undo-tree-id15664 . -284) (undo-tree-id15665 . -284) (undo-tree-id15666 . -284) (undo-tree-id15667 . -284) (undo-tree-id15668 . -284) (undo-tree-id15669 . -284) (undo-tree-id15670 . -284) (undo-tree-id15671 . -284) (undo-tree-id15672 . -284) (undo-tree-id15673 . -284) (undo-tree-id15674 . -284) (undo-tree-id15675 . -284) (undo-tree-id15676 . -284) (undo-tree-id15677 . -284) (undo-tree-id15678 . -284) (undo-tree-id15679 . -284) (undo-tree-id15680 . -284) (undo-tree-id15681 . -284) (undo-tree-id15682 . -257) (undo-tree-id15683 . -257) (undo-tree-id15684 . -257) (undo-tree-id15685 . -257) (undo-tree-id15686 . -257) (undo-tree-id15687 . -257) (undo-tree-id15688 . -257) (undo-tree-id15689 . -257) (undo-tree-id15690 . -257) (undo-tree-id15691 . -257) (undo-tree-id15692 . -257) (undo-tree-id15693 . -257) (undo-tree-id15694 . -257) (undo-tree-id15695 . -257) (undo-tree-id15696 . -257) (undo-tree-id15697 . -257) (undo-tree-id15698 . -257) (undo-tree-id15699 . -257) (undo-tree-id15700 . -257) (undo-tree-id15701 . -257) (undo-tree-id15702 . -257) (undo-tree-id15703 . -257) (undo-tree-id15704 . -257) (undo-tree-id15705 . -257) (undo-tree-id15706 . -257) (undo-tree-id15707 . -257) (undo-tree-id15708 . -257) (undo-tree-id15709 . -257) (undo-tree-id15710 . -257) (undo-tree-id15711 . -257) (undo-tree-id15712 . -257) (undo-tree-id15713 . -257) (undo-tree-id15714 . -257) (undo-tree-id15715 . -257) (undo-tree-id15716 . -257) (undo-tree-id15717 . -257) (undo-tree-id15718 . -257) (undo-tree-id15719 . -257) (undo-tree-id15720 . -257) (undo-tree-id15721 . -257) (undo-tree-id15722 . -257) (undo-tree-id15723 . -257) (undo-tree-id15724 . -257) (undo-tree-id15725 . -257) (undo-tree-id15726 . -257) (undo-tree-id15727 . -257) (undo-tree-id15728 . -257) (undo-tree-id15729 . -257) (undo-tree-id15730 . -257) (undo-tree-id15731 . -257) (undo-tree-id15732 . -257) (undo-tree-id15733 . -257) (undo-tree-id15734 . -257) (undo-tree-id15735 . -257) (undo-tree-id15736 . -257) (undo-tree-id15737 . -257) (undo-tree-id15738 . -257) (undo-tree-id15739 . -257) (undo-tree-id15740 . -257) (undo-tree-id15741 . -257) (undo-tree-id15742 . -257) (undo-tree-id15743 . -257) (undo-tree-id15744 . -257) (undo-tree-id15745 . -257) (undo-tree-id15746 . -257) (undo-tree-id15747 . -257) (undo-tree-id15748 . -257) (undo-tree-id15749 . -257) (undo-tree-id15750 . -257) (undo-tree-id15751 . -257) (undo-tree-id15752 . -257) (undo-tree-id15753 . -257) (undo-tree-id15754 . -257) (undo-tree-id15755 . -257) (undo-tree-id15756 . -257) (undo-tree-id15757 . -257) (undo-tree-id15758 . -257) (undo-tree-id15759 . -257) (undo-tree-id15760 . -257) (undo-tree-id15761 . -257) (undo-tree-id15762 . -257) (undo-tree-id15763 . -257) (undo-tree-id15764 . -257) (undo-tree-id15765 . -257) (undo-tree-id15766 . -257) (undo-tree-id15767 . -257) (undo-tree-id15768 . -257) (undo-tree-id15769 . -257) (undo-tree-id15770 . -257) (undo-tree-id15771 . -257) (undo-tree-id15772 . -257) (undo-tree-id15773 . -257) (undo-tree-id15774 . -257) (undo-tree-id15775 . -257) (undo-tree-id15776 . -257) (undo-tree-id15777 . -257) (undo-tree-id15778 . -257) (undo-tree-id15779 . -257) (undo-tree-id15780 . -257) (undo-tree-id15781 . -257) (undo-tree-id15782 . -257) (undo-tree-id15783 . -257) (undo-tree-id15784 . -257) (undo-tree-id15785 . -257) (undo-tree-id15786 . -257) (undo-tree-id15787 . -257) (undo-tree-id15788 . -257) (undo-tree-id15789 . -257) (undo-tree-id15790 . -257) (undo-tree-id15791 . -257) (undo-tree-id15792 . -257) (undo-tree-id15793 . -257) (undo-tree-id15794 . -257) (undo-tree-id15795 . -257) (undo-tree-id15796 . -257) (undo-tree-id15797 . -257) (undo-tree-id15798 . -257) (undo-tree-id15799 . -257) (undo-tree-id15800 . -257) (undo-tree-id15801 . -257) (undo-tree-id15802 . -257) (undo-tree-id15803 . -257) (undo-tree-id15804 . -257) (undo-tree-id15805 . -257) (undo-tree-id15806 . -257) (undo-tree-id15807 . -257) (undo-tree-id15808 . -257) (undo-tree-id15809 . -257) (undo-tree-id15810 . -257) (undo-tree-id15811 . -257) (undo-tree-id15812 . -257) (undo-tree-id15813 . -257) (undo-tree-id15814 . -257) (undo-tree-id15815 . -257) (undo-tree-id15816 . -257) (undo-tree-id15817 . -257) (undo-tree-id15818 . -257) (undo-tree-id15819 . -257) (undo-tree-id15820 . -257) (undo-tree-id15821 . -257) (undo-tree-id15822 . -257) (undo-tree-id15823 . -257) (undo-tree-id15824 . -257) (undo-tree-id15825 . -257) (undo-tree-id15826 . -257) (undo-tree-id15827 . -257) (undo-tree-id15828 . -257) (undo-tree-id15829 . -257) (undo-tree-id15830 . -257) (undo-tree-id15831 . -257) (undo-tree-id15832 . -257) (undo-tree-id15833 . -257) (undo-tree-id15834 . -257) (undo-tree-id15835 . -257) (undo-tree-id15836 . -257) (undo-tree-id15837 . -257) (undo-tree-id15838 . -257) (undo-tree-id15839 . -257) (undo-tree-id15840 . -257) (undo-tree-id15841 . -257) (undo-tree-id15842 . -257) (undo-tree-id15843 . -257) (undo-tree-id15844 . -257) (undo-tree-id15845 . -257) (undo-tree-id15846 . -257) (undo-tree-id15847 . -257) (undo-tree-id15848 . -257) (undo-tree-id15849 . -257) (undo-tree-id15850 . -257) (undo-tree-id15851 . -257) (undo-tree-id15852 . -257) (undo-tree-id15853 . -257) (undo-tree-id15854 . -257) (undo-tree-id15855 . -257) (undo-tree-id15856 . -257) (undo-tree-id15857 . -257) (undo-tree-id15858 . -257) (undo-tree-id15859 . -257) (undo-tree-id15860 . -257) (undo-tree-id15861 . -257) (undo-tree-id15862 . -257) (undo-tree-id15863 . -257) (undo-tree-id15864 . -257) (undo-tree-id15865 . -257) (undo-tree-id15866 . -257) (undo-tree-id15867 . -257) (undo-tree-id15868 . -257) (undo-tree-id15869 . -257) (undo-tree-id15870 . -257) (undo-tree-id15871 . -257) (undo-tree-id15872 . -257) (undo-tree-id15873 . -257) (undo-tree-id15874 . -257) (undo-tree-id15875 . -257) (undo-tree-id15876 . -257) (undo-tree-id15877 . -257) (undo-tree-id15878 . -257) (undo-tree-id15879 . -257) (undo-tree-id15880 . -257) (undo-tree-id15881 . -257) (undo-tree-id15882 . -257) (undo-tree-id15883 . -257) (undo-tree-id15884 . -257) (undo-tree-id15885 . -257) (undo-tree-id15886 . -257) (undo-tree-id15887 . -257) (undo-tree-id15888 . -257) (undo-tree-id15889 . -257) (undo-tree-id15890 . -257) (undo-tree-id15891 . -257) (undo-tree-id15892 . -257) (undo-tree-id15893 . -257) (undo-tree-id15894 . -257) (undo-tree-id15895 . -257) (undo-tree-id15896 . -257) (undo-tree-id15897 . -257) (undo-tree-id15898 . -257) (undo-tree-id15899 . -257) (undo-tree-id15900 . -257) (undo-tree-id15901 . -257) (undo-tree-id15902 . -257) (undo-tree-id15903 . -257) (undo-tree-id15904 . -257) (undo-tree-id15905 . -257) (undo-tree-id15906 . -257) (undo-tree-id15907 . -257) (undo-tree-id15908 . -257) (undo-tree-id15909 . -257) (undo-tree-id15910 . -257) (undo-tree-id15911 . -257) (undo-tree-id15912 . -257) (undo-tree-id15913 . -257) (undo-tree-id15914 . -257) (undo-tree-id15915 . -257) (undo-tree-id15916 . -257) (undo-tree-id15917 . -257) (undo-tree-id15918 . -257) (undo-tree-id15919 . -257) (undo-tree-id15920 . -257) (undo-tree-id15921 . -257) (undo-tree-id15922 . -257) (undo-tree-id15923 . -257) (undo-tree-id15924 . -257) (undo-tree-id15925 . -257) (undo-tree-id15926 . -257) (undo-tree-id15927 . -257) (undo-tree-id15928 . -257) (undo-tree-id15929 . -257) (undo-tree-id15930 . -257) (undo-tree-id15931 . -257) (undo-tree-id15932 . -257) (undo-tree-id15933 . -257) (undo-tree-id15934 . -257) (undo-tree-id15935 . -257) (undo-tree-id15936 . -257) (undo-tree-id15937 . -257) (undo-tree-id15938 . -257) (undo-tree-id15939 . -257) (undo-tree-id15940 . -257) (undo-tree-id15941 . -257) (undo-tree-id15942 . -257) (undo-tree-id15943 . -257) (undo-tree-id15944 . -257) (undo-tree-id15945 . -257) (undo-tree-id15946 . -257) (undo-tree-id15947 . -257) (undo-tree-id15948 . -257) (undo-tree-id15949 . -257) (undo-tree-id15950 . -257) (undo-tree-id15951 . -257) (undo-tree-id15952 . -257) (undo-tree-id15953 . -257) (undo-tree-id15954 . -257) (undo-tree-id15955 . -257) (undo-tree-id15956 . -257) (undo-tree-id15957 . -257) (undo-tree-id15958 . -257) (undo-tree-id15959 . -257) (undo-tree-id15960 . -257) (undo-tree-id15961 . -257) (undo-tree-id15962 . -257) (undo-tree-id15963 . -257) (undo-tree-id15964 . -257) (undo-tree-id15965 . -257) (undo-tree-id15966 . -257) (undo-tree-id15967 . -257) (undo-tree-id15968 . -257) (undo-tree-id15969 . -257) (undo-tree-id15970 . -257) (undo-tree-id15971 . -257) (undo-tree-id15972 . -257) (undo-tree-id15973 . -257) (undo-tree-id15974 . -257) (undo-tree-id15975 . -257) (undo-tree-id15976 . -257) (undo-tree-id15977 . -257) (undo-tree-id15978 . -257) (undo-tree-id15979 . -257) (undo-tree-id15980 . -257) (undo-tree-id15981 . -257) (undo-tree-id15982 . -257) (undo-tree-id15983 . -257) (undo-tree-id15984 . -257) (undo-tree-id15985 . -257) (undo-tree-id15986 . -257) (undo-tree-id15987 . -257) (undo-tree-id15988 . -257) (undo-tree-id15989 . -257) (undo-tree-id15990 . -257) (undo-tree-id15991 . -257) (undo-tree-id15992 . -257) (undo-tree-id15993 . -257) (undo-tree-id15994 . -257) (undo-tree-id15995 . -257) (undo-tree-id15996 . -257) (undo-tree-id15997 . -257) (undo-tree-id15998 . -257) (undo-tree-id15999 . -257) (undo-tree-id16000 . -257) (undo-tree-id16001 . -257) (undo-tree-id16002 . -257) (undo-tree-id16003 . -257) (undo-tree-id16004 . -257) (undo-tree-id16005 . -257) (undo-tree-id16006 . -257) (undo-tree-id16007 . -257) (undo-tree-id16008 . -257) (undo-tree-id16009 . -257) (undo-tree-id16010 . -257) (undo-tree-id16011 . -257) (undo-tree-id16012 . -257) (undo-tree-id16013 . -257) (undo-tree-id16014 . -257) (undo-tree-id16015 . -257) (undo-tree-id16016 . -257) (undo-tree-id16017 . -257) (undo-tree-id16018 . -257) (undo-tree-id16019 . -257) (undo-tree-id16020 . -257) (undo-tree-id16021 . -257) (undo-tree-id16022 . -257) (undo-tree-id16023 . -257) (undo-tree-id16024 . -257) (undo-tree-id16025 . -257) (undo-tree-id16026 . -257) (undo-tree-id16027 . -265) (undo-tree-id16028 . -265) (undo-tree-id16029 . -265) (undo-tree-id16030 . -265) (undo-tree-id16031 . -265) (undo-tree-id16032 . -265) (undo-tree-id16033 . -265) (undo-tree-id16034 . -265) (undo-tree-id16035 . -265) (undo-tree-id16036 . -265) (undo-tree-id16037 . -265) (undo-tree-id16038 . -265) (undo-tree-id16039 . -265) (undo-tree-id16040 . -265) (undo-tree-id16041 . -265) (undo-tree-id16042 . -265) (undo-tree-id16043 . -268) (undo-tree-id16044 . -268) (undo-tree-id16045 . -268) (undo-tree-id16046 . -268) (undo-tree-id16047 . -268) (undo-tree-id16048 . -268) (undo-tree-id16049 . -268) (undo-tree-id16050 . -268) (undo-tree-id16051 . -268) (undo-tree-id16052 . -268) (undo-tree-id16053 . -268) (undo-tree-id16054 . -268) (undo-tree-id16055 . -268) (undo-tree-id16056 . -268) (undo-tree-id16057 . -268) (undo-tree-id16058 . -268) (undo-tree-id16059 . -272) (undo-tree-id16060 . -272) (undo-tree-id16061 . -272) (undo-tree-id16062 . -272) (undo-tree-id16063 . -272) (undo-tree-id16064 . -272) (undo-tree-id16065 . -272) (undo-tree-id16066 . -272) (undo-tree-id16067 . -272) (undo-tree-id16068 . -272) (undo-tree-id16069 . -272) (undo-tree-id16070 . -272) (undo-tree-id16071 . -272) (undo-tree-id16072 . -272) (undo-tree-id16073 . -272) (undo-tree-id16074 . -272) (undo-tree-id16075 . -282) (undo-tree-id16076 . -282) (undo-tree-id16077 . -282) (undo-tree-id16078 . -282) (undo-tree-id16079 . -282) (undo-tree-id16080 . -282) (undo-tree-id16081 . -282) (undo-tree-id16082 . -282) (undo-tree-id16083 . -282) (undo-tree-id16084 . -282) (undo-tree-id16085 . -282) (undo-tree-id16086 . -282) (undo-tree-id16087 . -282) (undo-tree-id16088 . -282) (undo-tree-id16089 . -282) (undo-tree-id16090 . -282) (undo-tree-id16091 . -282) (undo-tree-id16092 . -282) (undo-tree-id16093 . -282) (undo-tree-id16094 . -282) (undo-tree-id16095 . -282) (undo-tree-id16096 . -282) (undo-tree-id16097 . -282) (undo-tree-id16098 . -282) (undo-tree-id16099 . -282) (undo-tree-id16100 . -282) (undo-tree-id16101 . -292) (undo-tree-id16102 . -292) (undo-tree-id16103 . -292) (undo-tree-id16104 . -292) (undo-tree-id16105 . -292) (undo-tree-id16106 . -292) (undo-tree-id16107 . -292) (undo-tree-id16108 . -292) (undo-tree-id16109 . -292) (undo-tree-id16110 . -292) (undo-tree-id16111 . -292) (undo-tree-id16112 . -292) (undo-tree-id16113 . -292) (undo-tree-id16114 . -292) (undo-tree-id16115 . -292) (undo-tree-id16116 . -292) (undo-tree-id16117 . -292) (undo-tree-id16118 . -292) (undo-tree-id16119 . -292) (undo-tree-id16120 . -292) (undo-tree-id16121 . -292) (undo-tree-id16122 . -293) (undo-tree-id16123 . -293) (undo-tree-id16124 . -293) (undo-tree-id16125 . -293) (undo-tree-id16126 . -293) (undo-tree-id16127 . -293) (undo-tree-id16128 . -293) (undo-tree-id16129 . -293) (undo-tree-id16130 . -293) (undo-tree-id16131 . -293) (undo-tree-id16132 . -293) (undo-tree-id16133 . -293) (undo-tree-id16134 . -293) (undo-tree-id16135 . -293) (undo-tree-id16136 . -293) (undo-tree-id16137 . -293) (undo-tree-id16138 . -293) (undo-tree-id16139 . -293) (undo-tree-id16140 . -293) (undo-tree-id16141 . -293) (undo-tree-id16142 . -293) (undo-tree-id16143 . -293) (undo-tree-id16144 . -293) (undo-tree-id16145 . -293) (undo-tree-id16146 . -293) (undo-tree-id16147 . -293) (undo-tree-id16148 . -293) (undo-tree-id16149 . -293) (undo-tree-id16150 . -293) (undo-tree-id16151 . -293) (undo-tree-id16152 . -293) (undo-tree-id16153 . -293) (undo-tree-id16154 . -293) (undo-tree-id16155 . -293) (undo-tree-id16156 . -255) (1068 . 1323) (#(" that was originally developed for language translation and first appeared in the following paper: Neural Machine Transla- tion by Jointly Learning to Align and Translate by Bahdanau, D., Cho, K., and Bengio, Y., 2014, https:// arxiv.org/abs/1409.0473." 0 20 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 20 21 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 21 122 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 122 123 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 123 219 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 219 226 (htmlize-link (:uri "https://") help-echo "LINK: https://" fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 226 227 (htmlize-link (:uri "https://") help-echo "LINK: https://" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 227 228 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 228 252 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1106) (undo-tree-id16157 . 138) (undo-tree-id16158 . -121) (undo-tree-id16159 . 64) (undo-tree-id16160 . -191) (undo-tree-id16161 . 24) (undo-tree-id16162 . -233) (undo-tree-id16163 . -219) (undo-tree-id16164 . -219) (undo-tree-id16165 . -219) (undo-tree-id16166 . -219) (undo-tree-id16167 . -219) (undo-tree-id16168 . -219) (undo-tree-id16169 . -219) (undo-tree-id16170 . -219) (undo-tree-id16171 . -219) (undo-tree-id16172 . -219) (undo-tree-id16173 . -219) (undo-tree-id16174 . -161) (undo-tree-id16175 . -161) (undo-tree-id16176 . -161) (undo-tree-id16177 . -161) (undo-tree-id16178 . -161) (undo-tree-id16179 . -161) (undo-tree-id16180 . -161) (undo-tree-id16181 . -161) (undo-tree-id16182 . -161) (undo-tree-id16183 . -161) (undo-tree-id16184 . -161) (undo-tree-id16185 . -106) (undo-tree-id16186 . -106) (undo-tree-id16187 . -106) (undo-tree-id16188 . -106) (undo-tree-id16189 . -106) (undo-tree-id16190 . -106) (undo-tree-id16191 . -106) (undo-tree-id16192 . -106) (undo-tree-id16193 . -106) (undo-tree-id16194 . -106) (undo-tree-id16195 . -106) (undo-tree-id16196 . -106) (undo-tree-id16197 . -106) (undo-tree-id16198 . -106) (undo-tree-id16199 . -106) (undo-tree-id16200 . -106) (undo-tree-id16201 . -44) (undo-tree-id16202 . -44) (undo-tree-id16203 . -44) (undo-tree-id16204 . -44) (undo-tree-id16205 . -44) (undo-tree-id16206 . -44) (undo-tree-id16207 . -44) (undo-tree-id16208 . -44) (undo-tree-id16209 . -44) (undo-tree-id16210 . -44) (undo-tree-id16211 . -44) (undo-tree-id16212 . -44) (undo-tree-id16213 . -44) (undo-tree-id16214 . -44) (undo-tree-id16215 . -44) (undo-tree-id16216 . -44)) nil (25774 25460 740757 786000) 0 nil])
([nil nil ((#("- that was originally developed for language translation and first appeared in the following paper: Neural Machine Transla- tion by Jointly Learning to Align and Translate by Bahdanau, D., Cho, K., and Bengio, Y., 2014, https:// arxiv.org/abs/1409.0473.
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 21 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 21 22 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 22 123 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 123 124 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 124 220 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 220 227 (htmlize-link (:uri "https://") help-echo "LINK: https://" fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 227 228 (htmlize-link (:uri "https://") help-echo "LINK: https://" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 228 229 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 229 253 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 253 254 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 1108) (undo-tree-id15433 . 252) (undo-tree-id15434 . -253) (undo-tree-id15435 . 1) (undo-tree-id15436 . -2) (undo-tree-id15437 . -254) (undo-tree-id15438 . -254) (undo-tree-id15439 . -254) (undo-tree-id15440 . -254) (undo-tree-id15441 . -254) (undo-tree-id15442 . -254) (undo-tree-id15443 . -254) (undo-tree-id15444 . -254) (undo-tree-id15445 . -254) (undo-tree-id15446 . -254) (undo-tree-id15447 . -254) (undo-tree-id15448 . -254) (undo-tree-id15449 . -254) (undo-tree-id15450 . -254) (undo-tree-id15451 . -2) (undo-tree-id15452 . -2) (undo-tree-id15453 . -2) (undo-tree-id15454 . -2) (undo-tree-id15455 . -2) (undo-tree-id15456 . -2) (undo-tree-id15457 . -2) (undo-tree-id15458 . -2) (undo-tree-id15459 . -2) (undo-tree-id15460 . -2) (undo-tree-id15461 . -2) (undo-tree-id15462 . -2) (undo-tree-id15463 . -2) (undo-tree-id15464 . -2) (undo-tree-id15465 . -2) (undo-tree-id15466 . -2) (undo-tree-id15467 . -2) (undo-tree-id15468 . -2) (undo-tree-id15469 . -2) (undo-tree-id15470 . -2) (undo-tree-id15471 . -2) (undo-tree-id15472 . -2) (undo-tree-id15473 . -1) (undo-tree-id15474 . -1) (undo-tree-id15475 . -1) (undo-tree-id15476 . -1) (undo-tree-id15477 . -1) (undo-tree-id15478 . -1) (undo-tree-id15479 . -1) (undo-tree-id15480 . -1) (undo-tree-id15481 . -1) (undo-tree-id15482 . -1) (undo-tree-id15483 . -1) (undo-tree-id15484 . -1) (undo-tree-id15485 . -1) (undo-tree-id15486 . -1) (undo-tree-id15487 . -1) (undo-tree-id15488 . -1) (undo-tree-id15489 . -1) (undo-tree-id15490 . -1) (undo-tree-id15491 . -1) (undo-tree-id15492 . -1) (undo-tree-id15493 . -1) (undo-tree-id15494 . -1) (undo-tree-id15495 . -1) (undo-tree-id15496 . -1) (undo-tree-id15497 . -1) (undo-tree-id15498 . -2) (undo-tree-id15499 . -2) (undo-tree-id15500 . -2) (undo-tree-id15501 . -2) (undo-tree-id15502 . -2) (undo-tree-id15503 . -2) (undo-tree-id15504 . -2) (undo-tree-id15505 . -2) (undo-tree-id15506 . -2) (undo-tree-id15507 . -2) (undo-tree-id15508 . -2) (undo-tree-id15509 . -2) (undo-tree-id15510 . -2) (undo-tree-id15511 . -2) (undo-tree-id15512 . -2) (undo-tree-id15513 . -2) (undo-tree-id15514 . -2) (undo-tree-id15515 . -2) (undo-tree-id15516 . -2) (undo-tree-id15517 . -2) (undo-tree-id15518 . -2) (undo-tree-id15519 . -2) (undo-tree-id15520 . -2) (undo-tree-id15521 . -2) (undo-tree-id15522 . -2) (undo-tree-id15523 . -2) (undo-tree-id15524 . -2) (undo-tree-id15525 . -2) (undo-tree-id15526 . -2) (undo-tree-id15527 . -2) (undo-tree-id15528 . -2) (undo-tree-id15529 . -2) (undo-tree-id15530 . -2) (undo-tree-id15531 . -2) (undo-tree-id15532 . -2) (undo-tree-id15533 . -2) (undo-tree-id15534 . -2) (undo-tree-id15535 . -2) (undo-tree-id15536 . -2) (undo-tree-id15537 . -2) (undo-tree-id15538 . -2) (undo-tree-id15539 . -2) (undo-tree-id15540 . -2) (undo-tree-id15541 . -2) (undo-tree-id15542 . -2) (undo-tree-id15543 . -2) (undo-tree-id15544 . -2) (undo-tree-id15545 . -2) (undo-tree-id15546 . -2) (undo-tree-id15547 . -2) (undo-tree-id15548 . -2) (undo-tree-id15549 . -2) (undo-tree-id15550 . -2) (undo-tree-id15551 . -2) (undo-tree-id15552 . -2) (undo-tree-id15553 . -2) (undo-tree-id15554 . -2) (undo-tree-id15555 . -2) (undo-tree-id15556 . -2) (undo-tree-id15557 . -2) (undo-tree-id15558 . -2) (undo-tree-id15559 . -2) (undo-tree-id15560 . -2) (undo-tree-id15561 . -2) (undo-tree-id15562 . -254) 1110) nil (25774 25460 740032 298000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1108) (undo-tree-id15329 . 1) (undo-tree-id15330 . 1) (undo-tree-id15331 . -1) (undo-tree-id15332 . -1) (undo-tree-id15333 . -1) (undo-tree-id15334 . -1) (undo-tree-id15335 . -1) (undo-tree-id15336 . -1) (undo-tree-id15337 . -1) (undo-tree-id15338 . -1) (undo-tree-id15339 . -1) (undo-tree-id15340 . -1) (undo-tree-id15341 . -1) (undo-tree-id15342 . -1) (undo-tree-id15343 . -1) (undo-tree-id15344 . -1) (undo-tree-id15345 . -1) (undo-tree-id15346 . -1) (undo-tree-id15347 . -1) (undo-tree-id15348 . -1) (undo-tree-id15349 . -1) (undo-tree-id15350 . -1) (undo-tree-id15351 . -1) (undo-tree-id15352 . -1) (undo-tree-id15353 . -1) (undo-tree-id15354 . -1) (undo-tree-id15355 . -1) (undo-tree-id15356 . -1) (undo-tree-id15357 . -1) (undo-tree-id15358 . -1) (undo-tree-id15359 . -1) (undo-tree-id15360 . -1) (undo-tree-id15361 . -1) (undo-tree-id15362 . -1) (undo-tree-id15363 . -1) (undo-tree-id15364 . -1) (undo-tree-id15365 . -1) (undo-tree-id15366 . -1) (undo-tree-id15367 . -1) (undo-tree-id15368 . -1) (undo-tree-id15369 . -1) (undo-tree-id15370 . -1) (undo-tree-id15371 . -1) (undo-tree-id15372 . -1) (undo-tree-id15373 . -1) (undo-tree-id15374 . -1) (undo-tree-id15375 . -1) (undo-tree-id15376 . -1) (undo-tree-id15377 . -1) (undo-tree-id15378 . -1) (undo-tree-id15379 . -1) (undo-tree-id15380 . -1) (undo-tree-id15381 . -1) (undo-tree-id15382 . -1) (undo-tree-id15383 . -1) (undo-tree-id15384 . -1) (undo-tree-id15385 . -1) (undo-tree-id15386 . -1) (undo-tree-id15387 . -1) (undo-tree-id15388 . -1) (undo-tree-id15389 . -1) (undo-tree-id15390 . -1) (undo-tree-id15391 . -1) (undo-tree-id15392 . -1) (undo-tree-id15393 . -1) (undo-tree-id15394 . -1) (undo-tree-id15395 . -1) (undo-tree-id15396 . -1) (undo-tree-id15397 . -1) (undo-tree-id15398 . -1) (undo-tree-id15399 . -1) (undo-tree-id15400 . -1) (undo-tree-id15401 . -1) (undo-tree-id15402 . -1) (undo-tree-id15403 . -1) (undo-tree-id15404 . -1) (undo-tree-id15405 . -1) (undo-tree-id15406 . -1) (undo-tree-id15407 . -1) (undo-tree-id15408 . -1) (undo-tree-id15409 . -1) (undo-tree-id15410 . -1) (undo-tree-id15411 . -1) (undo-tree-id15412 . -1) (undo-tree-id15413 . -1) (undo-tree-id15414 . -1) (undo-tree-id15415 . -1) (undo-tree-id15416 . -1) (undo-tree-id15417 . -1) (undo-tree-id15418 . -1) (undo-tree-id15419 . -1) (undo-tree-id15420 . -1) (undo-tree-id15421 . -1) (undo-tree-id15422 . -1) (undo-tree-id15423 . -1) (undo-tree-id15424 . -1) (undo-tree-id15425 . -1) (undo-tree-id15426 . -1) (undo-tree-id15427 . -1) (undo-tree-id15428 . -1) (undo-tree-id15429 . -1) (undo-tree-id15430 . -1) (undo-tree-id15431 . -1) (undo-tree-id15432 . -1)) nil (25774 25460 739547 980000) 0 nil])
([nil nil ((1133 . 1134) (t 25774 25460 754896 982000)) nil (25774 25503 244505 729000) 0 nil])
([nil nil ((#("𝑥𝑥 𝑥 𝑥𝑥𝑥 (1) , 𝑥𝑥 (2) , … , 𝑥𝑥 (𝑇𝑇) )" 0 37 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1135) (undo-tree-id16909 . -36) (undo-tree-id16910 . -36) (undo-tree-id16911 . -36) (undo-tree-id16912 . -36) (undo-tree-id16913 . -3) (undo-tree-id16914 . -3) (undo-tree-id16915 . -3) (undo-tree-id16916 . -3) (undo-tree-id16917 . -3) (undo-tree-id16918 . -3) (undo-tree-id16919 . -3) (undo-tree-id16920 . -3) (undo-tree-id16921 . -3) (undo-tree-id16922 . -3) (undo-tree-id16923 . -3) (undo-tree-id16924 . -3) (undo-tree-id16925 . -3) (undo-tree-id16926 . -3) (undo-tree-id16927 . -3) (undo-tree-id16928 . -3) (undo-tree-id16929 . -3) (undo-tree-id16930 . -3) (undo-tree-id16931 . -3) (undo-tree-id16932 . -3) (undo-tree-id16933 . -3) (undo-tree-id16934 . -3) (undo-tree-id16935 . -3) (undo-tree-id16936 . -3) (undo-tree-id16937 . -3) (undo-tree-id16938 . -3) (undo-tree-id16939 . -3) (undo-tree-id16940 . -3) (undo-tree-id16941 . -3) (undo-tree-id16942 . -3) (undo-tree-id16943 . -3) (undo-tree-id16944 . -3) (undo-tree-id16945 . -3) (undo-tree-id16946 . -3) (undo-tree-id16947 . -3) (undo-tree-id16948 . -3) (undo-tree-id16949 . -37) (undo-tree-id16950 . -36) (undo-tree-id16951 . -1) (undo-tree-id16952 . -1) (undo-tree-id16953 . -1) (undo-tree-id16954 . -1) (undo-tree-id16955 . -1) (undo-tree-id16956 . -1) (undo-tree-id16957 . -1) (undo-tree-id16958 . -1) (undo-tree-id16959 . -1) (undo-tree-id16960 . -1) (undo-tree-id16961 . -1) (undo-tree-id16962 . -1) (undo-tree-id16963 . -1) (undo-tree-id16964 . -1) (undo-tree-id16965 . -1) (undo-tree-id16966 . -1) (undo-tree-id16967 . -1) (undo-tree-id16968 . -1) (undo-tree-id16969 . -1) (undo-tree-id16970 . -1) (undo-tree-id16971 . -1) (undo-tree-id16972 . -3) (undo-tree-id16973 . -3) (undo-tree-id16974 . -3) (undo-tree-id16975 . -3) (undo-tree-id16976 . -3) (undo-tree-id16977 . -3) (undo-tree-id16978 . -3) (undo-tree-id16979 . -3) (undo-tree-id16980 . -3) (undo-tree-id16981 . -3) (undo-tree-id16982 . -3) (undo-tree-id16983 . -3) (undo-tree-id16984 . -3) (undo-tree-id16985 . -3) (undo-tree-id16986 . -3) (undo-tree-id16987 . -3) (undo-tree-id16988 . -3) (undo-tree-id16989 . -3) (undo-tree-id16990 . -3) (undo-tree-id16991 . -3) (undo-tree-id16992 . -3) (undo-tree-id16993 . -7) (undo-tree-id16994 . -7) (undo-tree-id16995 . -7) (undo-tree-id16996 . -7) (undo-tree-id16997 . -7) (undo-tree-id16998 . -7) (undo-tree-id16999 . -7) (undo-tree-id17000 . -7) (undo-tree-id17001 . -7) (undo-tree-id17002 . -7) (undo-tree-id17003 . -7) (undo-tree-id17004 . -7) (undo-tree-id17005 . -7) (undo-tree-id17006 . -7) (undo-tree-id17007 . -7) (undo-tree-id17008 . -7) (undo-tree-id17009 . -7) (undo-tree-id17010 . -7) (undo-tree-id17011 . -7) (undo-tree-id17012 . -7) (undo-tree-id17013 . -7) (undo-tree-id17014 . -9) (undo-tree-id17015 . -9) (undo-tree-id17016 . -9) (undo-tree-id17017 . -9) (undo-tree-id17018 . -9) (undo-tree-id17019 . -9) (undo-tree-id17020 . -9) (undo-tree-id17021 . -9) (undo-tree-id17022 . -9) (undo-tree-id17023 . -9) (undo-tree-id17024 . -9) (undo-tree-id17025 . -9) (undo-tree-id17026 . -9) (undo-tree-id17027 . -9) (undo-tree-id17028 . -9) (undo-tree-id17029 . -9) (undo-tree-id17030 . -9) (undo-tree-id17031 . -9) (undo-tree-id17032 . -9) (undo-tree-id17033 . -9) (undo-tree-id17034 . -9) (undo-tree-id17035 . -10) (undo-tree-id17036 . -10) (undo-tree-id17037 . -10) (undo-tree-id17038 . -10) (undo-tree-id17039 . -10) (undo-tree-id17040 . -10) (undo-tree-id17041 . -10) (undo-tree-id17042 . -10) (undo-tree-id17043 . -10) (undo-tree-id17044 . -10) (undo-tree-id17045 . -10) (undo-tree-id17046 . -10) (undo-tree-id17047 . -10) (undo-tree-id17048 . -10) (undo-tree-id17049 . -10) (undo-tree-id17050 . -10) (undo-tree-id17051 . -10) (undo-tree-id17052 . -10) (undo-tree-id17053 . -10) (undo-tree-id17054 . -10) (undo-tree-id17055 . -10) (undo-tree-id17056 . -11) (undo-tree-id17057 . -11) (undo-tree-id17058 . -11) (undo-tree-id17059 . -11) (undo-tree-id17060 . -11) (undo-tree-id17061 . -11) (undo-tree-id17062 . -11) (undo-tree-id17063 . -11) (undo-tree-id17064 . -11) (undo-tree-id17065 . -11) (undo-tree-id17066 . -11) (undo-tree-id17067 . -11) (undo-tree-id17068 . -11) (undo-tree-id17069 . -11) (undo-tree-id17070 . -11) (undo-tree-id17071 . -11) (undo-tree-id17072 . -11) (undo-tree-id17073 . -11) (undo-tree-id17074 . -11) (undo-tree-id17075 . -11) (undo-tree-id17076 . -11) (undo-tree-id17077 . -13) (undo-tree-id17078 . -13) (undo-tree-id17079 . -13) (undo-tree-id17080 . -13) (undo-tree-id17081 . -13) (undo-tree-id17082 . -13) (undo-tree-id17083 . -13) (undo-tree-id17084 . -13) (undo-tree-id17085 . -13) (undo-tree-id17086 . -13) (undo-tree-id17087 . -13) (undo-tree-id17088 . -13) (undo-tree-id17089 . -13) (undo-tree-id17090 . -13) (undo-tree-id17091 . -13) (undo-tree-id17092 . -13) (undo-tree-id17093 . -13) (undo-tree-id17094 . -13) (undo-tree-id17095 . -13) (undo-tree-id17096 . -13) (undo-tree-id17097 . -13) (undo-tree-id17098 . -16) (undo-tree-id17099 . -16) (undo-tree-id17100 . -16) (undo-tree-id17101 . -16) (undo-tree-id17102 . -16) (undo-tree-id17103 . -16) (undo-tree-id17104 . -16) (undo-tree-id17105 . -16) (undo-tree-id17106 . -16) (undo-tree-id17107 . -16) (undo-tree-id17108 . -16) (undo-tree-id17109 . -16) (undo-tree-id17110 . -16) (undo-tree-id17111 . -16) (undo-tree-id17112 . -16) (undo-tree-id17113 . -16) (undo-tree-id17114 . -16) (undo-tree-id17115 . -16) (undo-tree-id17116 . -16) (undo-tree-id17117 . -16) (undo-tree-id17118 . -16) (undo-tree-id17119 . -18) (undo-tree-id17120 . -18) (undo-tree-id17121 . -18) (undo-tree-id17122 . -18) (undo-tree-id17123 . -18) (undo-tree-id17124 . -18) (undo-tree-id17125 . -18) (undo-tree-id17126 . -18) (undo-tree-id17127 . -18) (undo-tree-id17128 . -18) (undo-tree-id17129 . -18) (undo-tree-id17130 . -18) (undo-tree-id17131 . -18) (undo-tree-id17132 . -18) (undo-tree-id17133 . -18) (undo-tree-id17134 . -18) (undo-tree-id17135 . -18) (undo-tree-id17136 . -18) (undo-tree-id17137 . -18) (undo-tree-id17138 . -18) (undo-tree-id17139 . -18) (undo-tree-id17140 . -19) (undo-tree-id17141 . -19) (undo-tree-id17142 . -19) (undo-tree-id17143 . -19) (undo-tree-id17144 . -19) (undo-tree-id17145 . -19) (undo-tree-id17146 . -19) (undo-tree-id17147 . -19) (undo-tree-id17148 . -19) (undo-tree-id17149 . -19) (undo-tree-id17150 . -19) (undo-tree-id17151 . -19) (undo-tree-id17152 . -19) (undo-tree-id17153 . -19) (undo-tree-id17154 . -19) (undo-tree-id17155 . -19) (undo-tree-id17156 . -19) (undo-tree-id17157 . -19) (undo-tree-id17158 . -19) (undo-tree-id17159 . -19) (undo-tree-id17160 . -19) (undo-tree-id17161 . -19) (undo-tree-id17162 . -19) (undo-tree-id17163 . -19) (undo-tree-id17164 . -19) (undo-tree-id17165 . -19) (undo-tree-id17166 . -19) (undo-tree-id17167 . -19) (undo-tree-id17168 . -19) (undo-tree-id17169 . -19) (undo-tree-id17170 . -19) (undo-tree-id17171 . -19) (undo-tree-id17172 . -19) (undo-tree-id17173 . -19) (undo-tree-id17174 . -19) (undo-tree-id17175 . -19) (undo-tree-id17176 . -20) (undo-tree-id17177 . -20) (undo-tree-id17178 . -20) (undo-tree-id17179 . -20) (undo-tree-id17180 . -20) (undo-tree-id17181 . -20) (undo-tree-id17182 . -20) (undo-tree-id17183 . -20) (undo-tree-id17184 . -20) (undo-tree-id17185 . -20) (undo-tree-id17186 . -20) (undo-tree-id17187 . -20) (undo-tree-id17188 . -20) (undo-tree-id17189 . -20) (undo-tree-id17190 . -20) (undo-tree-id17191 . -20) (undo-tree-id17192 . -20) (undo-tree-id17193 . -20) (undo-tree-id17194 . -20) (undo-tree-id17195 . -20) (undo-tree-id17196 . -20) (undo-tree-id17197 . -22) (undo-tree-id17198 . -22) (undo-tree-id17199 . -22) (undo-tree-id17200 . -22) (undo-tree-id17201 . -22) (undo-tree-id17202 . -22) (undo-tree-id17203 . -22) (undo-tree-id17204 . -22) (undo-tree-id17205 . -22) (undo-tree-id17206 . -22) (undo-tree-id17207 . -22) (undo-tree-id17208 . -22) (undo-tree-id17209 . -22) (undo-tree-id17210 . -22) (undo-tree-id17211 . -22) (undo-tree-id17212 . -22) (undo-tree-id17213 . -22) (undo-tree-id17214 . -22) (undo-tree-id17215 . -22) (undo-tree-id17216 . -22) (undo-tree-id17217 . -22) (undo-tree-id17218 . -24) (undo-tree-id17219 . -24) (undo-tree-id17220 . -24) (undo-tree-id17221 . -24) (undo-tree-id17222 . -24) (undo-tree-id17223 . -24) (undo-tree-id17224 . -24) (undo-tree-id17225 . -24) (undo-tree-id17226 . -24) (undo-tree-id17227 . -24) (undo-tree-id17228 . -24) (undo-tree-id17229 . -24) (undo-tree-id17230 . -24) (undo-tree-id17231 . -24) (undo-tree-id17232 . -24) (undo-tree-id17233 . -24) (undo-tree-id17234 . -24) (undo-tree-id17235 . -24) (undo-tree-id17236 . -24) (undo-tree-id17237 . -24) (undo-tree-id17238 . -24) (undo-tree-id17239 . -26) (undo-tree-id17240 . -26) (undo-tree-id17241 . -26) (undo-tree-id17242 . -26) (undo-tree-id17243 . -26) (undo-tree-id17244 . -26) (undo-tree-id17245 . -26) (undo-tree-id17246 . -26) (undo-tree-id17247 . -26) (undo-tree-id17248 . -26) (undo-tree-id17249 . -26) (undo-tree-id17250 . -26) (undo-tree-id17251 . -26) (undo-tree-id17252 . -26) (undo-tree-id17253 . -26) (undo-tree-id17254 . -26) (undo-tree-id17255 . -26) (undo-tree-id17256 . -26) (undo-tree-id17257 . -26) (undo-tree-id17258 . -26) (undo-tree-id17259 . -26) (undo-tree-id17260 . -29) (undo-tree-id17261 . -29) (undo-tree-id17262 . -29) (undo-tree-id17263 . -29) (undo-tree-id17264 . -29) (undo-tree-id17265 . -29) (undo-tree-id17266 . -29) (undo-tree-id17267 . -29) (undo-tree-id17268 . -29) (undo-tree-id17269 . -29) (undo-tree-id17270 . -29) (undo-tree-id17271 . -29) (undo-tree-id17272 . -29) (undo-tree-id17273 . -29) (undo-tree-id17274 . -29) (undo-tree-id17275 . -29) (undo-tree-id17276 . -29) (undo-tree-id17277 . -29) (undo-tree-id17278 . -29) (undo-tree-id17279 . -29) (undo-tree-id17280 . -29) (undo-tree-id17281 . -31) (undo-tree-id17282 . -31) (undo-tree-id17283 . -31) (undo-tree-id17284 . -31) (undo-tree-id17285 . -31) (undo-tree-id17286 . -31) (undo-tree-id17287 . -31) (undo-tree-id17288 . -31) (undo-tree-id17289 . -31) (undo-tree-id17290 . -31) (undo-tree-id17291 . -31) (undo-tree-id17292 . -31) (undo-tree-id17293 . -31) (undo-tree-id17294 . -31) (undo-tree-id17295 . -31) (undo-tree-id17296 . -31) (undo-tree-id17297 . -31) (undo-tree-id17298 . -31) (undo-tree-id17299 . -31) (undo-tree-id17300 . -31) (undo-tree-id17301 . -31) (undo-tree-id17302 . -33) (undo-tree-id17303 . -33) (undo-tree-id17304 . -33) (undo-tree-id17305 . -33) (undo-tree-id17306 . -33) (undo-tree-id17307 . -33) (undo-tree-id17308 . -33) (undo-tree-id17309 . -33) (undo-tree-id17310 . -33) (undo-tree-id17311 . -33) (undo-tree-id17312 . -33) (undo-tree-id17313 . -33) (undo-tree-id17314 . -33) (undo-tree-id17315 . -33) (undo-tree-id17316 . -33) (undo-tree-id17317 . -33) (undo-tree-id17318 . -33) (undo-tree-id17319 . -33) (undo-tree-id17320 . -33) (undo-tree-id17321 . -33) (undo-tree-id17322 . -33) (undo-tree-id17323 . -34) (undo-tree-id17324 . -34) (undo-tree-id17325 . -34) (undo-tree-id17326 . -34) (undo-tree-id17327 . -34) (undo-tree-id17328 . -34) (undo-tree-id17329 . -34) (undo-tree-id17330 . -34) (undo-tree-id17331 . -34) (undo-tree-id17332 . -34) (undo-tree-id17333 . -34) (undo-tree-id17334 . -34) (undo-tree-id17335 . -34) (undo-tree-id17336 . -34) (undo-tree-id17337 . -34) (undo-tree-id17338 . -34) (undo-tree-id17339 . -34) (undo-tree-id17340 . -34) (undo-tree-id17341 . -34) (undo-tree-id17342 . -34) (undo-tree-id17343 . -34) (undo-tree-id17344 . -37) (undo-tree-id17345 . -37) (undo-tree-id17346 . -37) (undo-tree-id17347 . -37) (undo-tree-id17348 . -37) (undo-tree-id17349 . -37) (undo-tree-id17350 . -37) (undo-tree-id17351 . -37) (undo-tree-id17352 . -37) (undo-tree-id17353 . -37) (undo-tree-id17354 . -37) (undo-tree-id17355 . -37) (undo-tree-id17356 . -37) (undo-tree-id17357 . -37) (undo-tree-id17358 . -37) (undo-tree-id17359 . -37) (undo-tree-id17360 . -37) (undo-tree-id17361 . -37) (undo-tree-id17362 . -37) (undo-tree-id17363 . -37) (undo-tree-id17364 . -37) (undo-tree-id17365 . -37) (undo-tree-id17366 . -37) (undo-tree-id17367 . -37) (undo-tree-id17368 . -37) (undo-tree-id17369 . -37) (undo-tree-id17370 . -36) (undo-tree-id17371 . -36) (undo-tree-id17372 . -36) (undo-tree-id17373 . -36) (undo-tree-id17374 . -36) (undo-tree-id17375 . -36) (undo-tree-id17376 . -36) (undo-tree-id17377 . -36) (undo-tree-id17378 . -36) (undo-tree-id17379 . -36) (undo-tree-id17380 . -36) (undo-tree-id17381 . -36) (undo-tree-id17382 . -36) (undo-tree-id17383 . -36) (undo-tree-id17384 . -36) (undo-tree-id17385 . 1) (undo-tree-id17386 . -37) (undo-tree-id17387 . -36) (undo-tree-id17388 . -36) (undo-tree-id17389 . -36) (undo-tree-id17390 . -36) (undo-tree-id17391 . -36) (undo-tree-id17392 . -36) (undo-tree-id17393 . -36) (undo-tree-id17394 . -37) 1171) nil (25774 25503 244489 280000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1134) (undo-tree-id16322 . 1) (undo-tree-id16323 . -1) (undo-tree-id16324 . -1) (undo-tree-id16325 . -1) (undo-tree-id16326 . -1) (undo-tree-id16327 . -1) (undo-tree-id16328 . -1) (undo-tree-id16329 . -1) (undo-tree-id16330 . -1) (undo-tree-id16331 . -1) (undo-tree-id16332 . -1) (undo-tree-id16333 . -1) (undo-tree-id16334 . -1) (undo-tree-id16335 . -1) (undo-tree-id16336 . -1) (undo-tree-id16337 . -1) (undo-tree-id16338 . -1) (undo-tree-id16339 . -1) (undo-tree-id16340 . -1) (undo-tree-id16341 . -1) (undo-tree-id16342 . -1) (undo-tree-id16343 . -1) (undo-tree-id16344 . -1) (undo-tree-id16345 . -1) (undo-tree-id16346 . -1) (undo-tree-id16347 . -1) (undo-tree-id16348 . -1) (undo-tree-id16349 . -1) (undo-tree-id16350 . -1) (undo-tree-id16351 . -1) (undo-tree-id16352 . -1) (undo-tree-id16353 . -1) (undo-tree-id16354 . -1) (undo-tree-id16355 . -1) (undo-tree-id16356 . -1) (undo-tree-id16357 . -1) (undo-tree-id16358 . -1) (undo-tree-id16359 . -1) (undo-tree-id16360 . -1) (undo-tree-id16361 . -1) (undo-tree-id16362 . -1) (undo-tree-id16363 . -1) (undo-tree-id16364 . -1) (undo-tree-id16365 . -1) (undo-tree-id16366 . -1) (undo-tree-id16367 . -1) (undo-tree-id16368 . -1) (undo-tree-id16369 . -1) (undo-tree-id16370 . -1) (undo-tree-id16371 . -1) (undo-tree-id16372 . -1) (undo-tree-id16373 . -1) (undo-tree-id16374 . -1) (undo-tree-id16375 . -1) (undo-tree-id16376 . -1) (undo-tree-id16377 . -1) (undo-tree-id16378 . -1) (undo-tree-id16379 . -1) (undo-tree-id16380 . -1) (undo-tree-id16381 . -1) (undo-tree-id16382 . -1) (undo-tree-id16383 . -1) (undo-tree-id16384 . -1) (undo-tree-id16385 . -1) (undo-tree-id16386 . -1) (undo-tree-id16387 . -1) (undo-tree-id16388 . -1) (undo-tree-id16389 . -1) (undo-tree-id16390 . -1) (undo-tree-id16391 . -1) (undo-tree-id16392 . -1) (undo-tree-id16393 . -1) (undo-tree-id16394 . -1) (undo-tree-id16395 . -1) (undo-tree-id16396 . -1) (undo-tree-id16397 . -1) (undo-tree-id16398 . -1) (undo-tree-id16399 . -1) (undo-tree-id16400 . -1) (undo-tree-id16401 . -1) (undo-tree-id16402 . -1) (undo-tree-id16403 . -1) (undo-tree-id16404 . -1) (undo-tree-id16405 . -1) (undo-tree-id16406 . -1) (undo-tree-id16407 . -1) (undo-tree-id16408 . -1) (undo-tree-id16409 . -1) (undo-tree-id16410 . -1) (undo-tree-id16411 . -1) (undo-tree-id16412 . -1) (undo-tree-id16413 . -1) (undo-tree-id16414 . -1) (undo-tree-id16415 . -1) (undo-tree-id16416 . -1) (undo-tree-id16417 . -1) (undo-tree-id16418 . -1) (undo-tree-id16419 . -1) (undo-tree-id16420 . -1) (undo-tree-id16421 . -1) (undo-tree-id16422 . -1) (undo-tree-id16423 . -1) (undo-tree-id16424 . -1) (undo-tree-id16425 . -1) (undo-tree-id16426 . -1) (undo-tree-id16427 . -1) (undo-tree-id16428 . -1) (undo-tree-id16429 . -1) (undo-tree-id16430 . -1) (undo-tree-id16431 . -1) (undo-tree-id16432 . -1) (undo-tree-id16433 . -1) (undo-tree-id16434 . -1) (undo-tree-id16435 . -1) (undo-tree-id16436 . -1) (undo-tree-id16437 . -1) (undo-tree-id16438 . -1) (undo-tree-id16439 . -1) (undo-tree-id16440 . -1) (undo-tree-id16441 . -1) (undo-tree-id16442 . -1) (undo-tree-id16443 . -1) (undo-tree-id16444 . -1) (undo-tree-id16445 . -1) (undo-tree-id16446 . -1) (undo-tree-id16447 . -1) (undo-tree-id16448 . -1) (undo-tree-id16449 . -1) (undo-tree-id16450 . -1) (undo-tree-id16451 . -1) (undo-tree-id16452 . -1) (undo-tree-id16453 . -1) (undo-tree-id16454 . -1) (undo-tree-id16455 . -1) (undo-tree-id16456 . -1) (undo-tree-id16457 . -1) (undo-tree-id16458 . -1) (undo-tree-id16459 . -1) (undo-tree-id16460 . -1) (undo-tree-id16461 . -1) (undo-tree-id16462 . -1) (undo-tree-id16463 . -1) (undo-tree-id16464 . -1) (undo-tree-id16465 . -1) (undo-tree-id16466 . -1) (undo-tree-id16467 . -1) (undo-tree-id16468 . -1) (undo-tree-id16469 . -1) (undo-tree-id16470 . -1) (undo-tree-id16471 . -1) (undo-tree-id16472 . -1) (undo-tree-id16473 . -1) (undo-tree-id16474 . -1) (undo-tree-id16475 . -1) (undo-tree-id16476 . -1) (undo-tree-id16477 . -1) (undo-tree-id16478 . -1) (undo-tree-id16479 . -1) (undo-tree-id16480 . -1) (undo-tree-id16481 . -1) (undo-tree-id16482 . -1) (undo-tree-id16483 . -1) (undo-tree-id16484 . -1) (undo-tree-id16485 . -1) (undo-tree-id16486 . -1) (undo-tree-id16487 . -1) (undo-tree-id16488 . -1) (undo-tree-id16489 . -1) (undo-tree-id16490 . -1) (undo-tree-id16491 . -1) (undo-tree-id16492 . -1) (undo-tree-id16493 . -1) (undo-tree-id16494 . -1) (undo-tree-id16495 . -1) (undo-tree-id16496 . -1) (undo-tree-id16497 . -1) (undo-tree-id16498 . -1) (undo-tree-id16499 . -1) (undo-tree-id16500 . -1) (undo-tree-id16501 . -1) (undo-tree-id16502 . -1) (undo-tree-id16503 . -1) (undo-tree-id16504 . -1) (undo-tree-id16505 . -1) (undo-tree-id16506 . -1) (undo-tree-id16507 . -1) (undo-tree-id16508 . -1) (undo-tree-id16509 . -1) (undo-tree-id16510 . -1) (undo-tree-id16511 . -1) (undo-tree-id16512 . -1) (undo-tree-id16513 . -1) (undo-tree-id16514 . -1) (undo-tree-id16515 . -1) (undo-tree-id16516 . -1) (undo-tree-id16517 . -1) (undo-tree-id16518 . -1) (undo-tree-id16519 . -1) (undo-tree-id16520 . -1) (undo-tree-id16521 . -1) (undo-tree-id16522 . -1) (undo-tree-id16523 . -1) (undo-tree-id16524 . -1) (undo-tree-id16525 . -1) (undo-tree-id16526 . -1) (undo-tree-id16527 . -1) (undo-tree-id16528 . -1) (undo-tree-id16529 . -1) (undo-tree-id16530 . -1) (undo-tree-id16531 . -1) (undo-tree-id16532 . -1) (undo-tree-id16533 . -1) (undo-tree-id16534 . -1) (undo-tree-id16535 . -1) (undo-tree-id16536 . -1) (undo-tree-id16537 . -1) (undo-tree-id16538 . -1) (undo-tree-id16539 . -1) (undo-tree-id16540 . -1) (undo-tree-id16541 . -1) (undo-tree-id16542 . -1) (undo-tree-id16543 . -1) (undo-tree-id16544 . -1) (undo-tree-id16545 . -1) (undo-tree-id16546 . -1) (undo-tree-id16547 . -1) (undo-tree-id16548 . -1) (undo-tree-id16549 . -1) (undo-tree-id16550 . -1) (undo-tree-id16551 . -1) (undo-tree-id16552 . -1) (undo-tree-id16553 . -1) (undo-tree-id16554 . -1) (undo-tree-id16555 . -1) (undo-tree-id16556 . -1) (undo-tree-id16557 . -1) (undo-tree-id16558 . -1) (undo-tree-id16559 . -1) (undo-tree-id16560 . -1) (undo-tree-id16561 . -1) (undo-tree-id16562 . -1) (undo-tree-id16563 . -1) (undo-tree-id16564 . -1) (undo-tree-id16565 . -1) (undo-tree-id16566 . -1) (undo-tree-id16567 . -1) (undo-tree-id16568 . -1) (undo-tree-id16569 . -1) (undo-tree-id16570 . -1) (undo-tree-id16571 . -1) (undo-tree-id16572 . -1) (undo-tree-id16573 . -1) (undo-tree-id16574 . -1) (undo-tree-id16575 . -1) (undo-tree-id16576 . -1) (undo-tree-id16577 . -1) (undo-tree-id16578 . -1) (undo-tree-id16579 . -1) (undo-tree-id16580 . -1) (undo-tree-id16581 . -1) (undo-tree-id16582 . -1) (undo-tree-id16583 . -1) (undo-tree-id16584 . -1) (undo-tree-id16585 . -1) (undo-tree-id16586 . -1) (undo-tree-id16587 . -1) (undo-tree-id16588 . -1) (undo-tree-id16589 . -1) (undo-tree-id16590 . -1) (undo-tree-id16591 . -1) (undo-tree-id16592 . -1) (undo-tree-id16593 . -1) (undo-tree-id16594 . -1) (undo-tree-id16595 . -1) (undo-tree-id16596 . -1) (undo-tree-id16597 . -1) (undo-tree-id16598 . -1) (undo-tree-id16599 . -1) (undo-tree-id16600 . -1) (undo-tree-id16601 . -1) (undo-tree-id16602 . -1) (undo-tree-id16603 . -1) (undo-tree-id16604 . -1) (undo-tree-id16605 . -1) (undo-tree-id16606 . -1) (undo-tree-id16607 . -1) (undo-tree-id16608 . -1) (undo-tree-id16609 . -1) (undo-tree-id16610 . -1) (undo-tree-id16611 . -1) (undo-tree-id16612 . -1) (undo-tree-id16613 . -1) (undo-tree-id16614 . -1) (undo-tree-id16615 . -1) (undo-tree-id16616 . -1) (undo-tree-id16617 . -1) (undo-tree-id16618 . -1) (undo-tree-id16619 . -1) (undo-tree-id16620 . -1) (undo-tree-id16621 . -1) (undo-tree-id16622 . -1) (undo-tree-id16623 . -1) (undo-tree-id16624 . -1) (undo-tree-id16625 . -1) (undo-tree-id16626 . -1) (undo-tree-id16627 . -1) (undo-tree-id16628 . -1) (undo-tree-id16629 . -1) (undo-tree-id16630 . -1) (undo-tree-id16631 . -1) (undo-tree-id16632 . -1) (undo-tree-id16633 . -1) (undo-tree-id16634 . -1) (undo-tree-id16635 . -1) (undo-tree-id16636 . -1) (undo-tree-id16637 . -1) (undo-tree-id16638 . -1) (undo-tree-id16639 . -1) (undo-tree-id16640 . -1) (undo-tree-id16641 . -1) (undo-tree-id16642 . -1) (undo-tree-id16643 . -1) (undo-tree-id16644 . -1) (undo-tree-id16645 . -1) (undo-tree-id16646 . -1) (undo-tree-id16647 . -1) (undo-tree-id16648 . -1) (undo-tree-id16649 . -1) (undo-tree-id16650 . -1) (undo-tree-id16651 . -1) (undo-tree-id16652 . -1) (undo-tree-id16653 . -1) (undo-tree-id16654 . -1) (undo-tree-id16655 . -1) (undo-tree-id16656 . -1) (undo-tree-id16657 . -1) (undo-tree-id16658 . -1) (undo-tree-id16659 . -1) (undo-tree-id16660 . -1) (undo-tree-id16661 . -1) (undo-tree-id16662 . -1) (undo-tree-id16663 . -1) (undo-tree-id16664 . -1) (undo-tree-id16665 . -1) (undo-tree-id16666 . -1) (undo-tree-id16667 . -1) (undo-tree-id16668 . -1) (undo-tree-id16669 . -1) (undo-tree-id16670 . -1) (undo-tree-id16671 . -1) (undo-tree-id16672 . -1) (undo-tree-id16673 . -1) (undo-tree-id16674 . -1) (undo-tree-id16675 . -1) (undo-tree-id16676 . -1) (undo-tree-id16677 . -1) (undo-tree-id16678 . -1) (undo-tree-id16679 . -1) (undo-tree-id16680 . -1) (undo-tree-id16681 . -1) (undo-tree-id16682 . -1) (undo-tree-id16683 . -1) (undo-tree-id16684 . -1) (undo-tree-id16685 . -1) (undo-tree-id16686 . -1) (undo-tree-id16687 . -1) (undo-tree-id16688 . -1) (undo-tree-id16689 . -1) (undo-tree-id16690 . -1) (undo-tree-id16691 . -1) (undo-tree-id16692 . -1) (undo-tree-id16693 . -1) (undo-tree-id16694 . -1) (undo-tree-id16695 . -1) (undo-tree-id16696 . -1) (undo-tree-id16697 . -1) (undo-tree-id16698 . -1) (undo-tree-id16699 . -1) (undo-tree-id16700 . -1) (undo-tree-id16701 . -1) (undo-tree-id16702 . -1) (undo-tree-id16703 . -1) (undo-tree-id16704 . -1) (undo-tree-id16705 . -1) (undo-tree-id16706 . -1) (undo-tree-id16707 . -1) (undo-tree-id16708 . -1) (undo-tree-id16709 . -1) (undo-tree-id16710 . -1) (undo-tree-id16711 . -1) (undo-tree-id16712 . -1) (undo-tree-id16713 . -1) (undo-tree-id16714 . -1) (undo-tree-id16715 . -1) (undo-tree-id16716 . -1) (undo-tree-id16717 . -1) (undo-tree-id16718 . -1) (undo-tree-id16719 . -1) (undo-tree-id16720 . -1) (undo-tree-id16721 . -1) (undo-tree-id16722 . -1) (undo-tree-id16723 . -1) (undo-tree-id16724 . -1) (undo-tree-id16725 . -1) (undo-tree-id16726 . -1) (undo-tree-id16727 . -1) (undo-tree-id16728 . -1) (undo-tree-id16729 . -1) (undo-tree-id16730 . -1) (undo-tree-id16731 . -1) (undo-tree-id16732 . -1) (undo-tree-id16733 . -1) (undo-tree-id16734 . -1) (undo-tree-id16735 . -1) (undo-tree-id16736 . -1) (undo-tree-id16737 . -1) (undo-tree-id16738 . -1) (undo-tree-id16739 . -1) (undo-tree-id16740 . -1) (undo-tree-id16741 . -1) (undo-tree-id16742 . -1) (undo-tree-id16743 . -1) (undo-tree-id16744 . -1) (undo-tree-id16745 . -1) (undo-tree-id16746 . -1) (undo-tree-id16747 . -1) (undo-tree-id16748 . -1) (undo-tree-id16749 . -1) (undo-tree-id16750 . -1) (undo-tree-id16751 . -1) (undo-tree-id16752 . -1) (undo-tree-id16753 . -1) (undo-tree-id16754 . -1) (undo-tree-id16755 . -1) (undo-tree-id16756 . -1) (undo-tree-id16757 . -1) (undo-tree-id16758 . -1) (undo-tree-id16759 . -1) (undo-tree-id16760 . -1) (undo-tree-id16761 . -1) (undo-tree-id16762 . -1) (undo-tree-id16763 . -1) (undo-tree-id16764 . -1) (undo-tree-id16765 . -1) (undo-tree-id16766 . -1) (undo-tree-id16767 . -1) (undo-tree-id16768 . -1) (undo-tree-id16769 . -1) (undo-tree-id16770 . -1) (undo-tree-id16771 . -1) (undo-tree-id16772 . -1) (undo-tree-id16773 . -1) (undo-tree-id16774 . -1) (undo-tree-id16775 . -1) (undo-tree-id16776 . -1) (undo-tree-id16777 . -1) (undo-tree-id16778 . -1) (undo-tree-id16779 . -1) (undo-tree-id16780 . -1) (undo-tree-id16781 . -1) (undo-tree-id16782 . -1) (undo-tree-id16783 . -1) (undo-tree-id16784 . -1) (undo-tree-id16785 . -1) (undo-tree-id16786 . -1) (undo-tree-id16787 . -1) (undo-tree-id16788 . -1) (undo-tree-id16789 . -1) (undo-tree-id16790 . -1) (undo-tree-id16791 . -1) (undo-tree-id16792 . -1) (undo-tree-id16793 . -1) (undo-tree-id16794 . -1) (undo-tree-id16795 . -1) (undo-tree-id16796 . -1) (undo-tree-id16797 . -1) (undo-tree-id16798 . -1) (undo-tree-id16799 . -1) (undo-tree-id16800 . -1) (undo-tree-id16801 . -1) (undo-tree-id16802 . -1) (undo-tree-id16803 . -1) (undo-tree-id16804 . -1) (undo-tree-id16805 . -1) (undo-tree-id16806 . -1) (undo-tree-id16807 . -1) (undo-tree-id16808 . -1) (undo-tree-id16809 . -1) (undo-tree-id16810 . -1) (undo-tree-id16811 . -1) (undo-tree-id16812 . -1) (undo-tree-id16813 . -1) (undo-tree-id16814 . -1) (undo-tree-id16815 . -1) (undo-tree-id16816 . -1) (undo-tree-id16817 . -1) (undo-tree-id16818 . -1) (undo-tree-id16819 . -1) (undo-tree-id16820 . -1) (undo-tree-id16821 . -1) (undo-tree-id16822 . -1) (undo-tree-id16823 . -1) (undo-tree-id16824 . -1) (undo-tree-id16825 . -1) (undo-tree-id16826 . -1) (undo-tree-id16827 . -1) (undo-tree-id16828 . -1) (undo-tree-id16829 . -1) (undo-tree-id16830 . -1) (undo-tree-id16831 . -1) (undo-tree-id16832 . -1) (undo-tree-id16833 . -1) (undo-tree-id16834 . -1) (undo-tree-id16835 . -1) (undo-tree-id16836 . -1) (undo-tree-id16837 . -1) (undo-tree-id16838 . -1) (undo-tree-id16839 . -1) (undo-tree-id16840 . -1) (undo-tree-id16841 . -1) (undo-tree-id16842 . -1) (undo-tree-id16843 . -1) (undo-tree-id16844 . -1) (undo-tree-id16845 . -1) (undo-tree-id16846 . -1) (undo-tree-id16847 . -1) (undo-tree-id16848 . -1) (undo-tree-id16849 . -1) (undo-tree-id16850 . -1) (undo-tree-id16851 . -1) (undo-tree-id16852 . -1) (undo-tree-id16853 . -1) (undo-tree-id16854 . -1) (undo-tree-id16855 . -1) (undo-tree-id16856 . -1) (undo-tree-id16857 . -1) (undo-tree-id16858 . -1) (undo-tree-id16859 . -1) (undo-tree-id16860 . -1) (undo-tree-id16861 . -1) (undo-tree-id16862 . -1) (undo-tree-id16863 . -1) (undo-tree-id16864 . -1) (undo-tree-id16865 . -1) (undo-tree-id16866 . -1) (undo-tree-id16867 . -1) (undo-tree-id16868 . -1) (undo-tree-id16869 . -1) (undo-tree-id16870 . -1) (undo-tree-id16871 . -1) (undo-tree-id16872 . -1) (undo-tree-id16873 . -1) (undo-tree-id16874 . -1) (undo-tree-id16875 . -1) (undo-tree-id16876 . -1) (undo-tree-id16877 . -1) (undo-tree-id16878 . -1) (undo-tree-id16879 . -1) (undo-tree-id16880 . -1) (undo-tree-id16881 . -1) (undo-tree-id16882 . -1) (undo-tree-id16883 . -1) (undo-tree-id16884 . -1) (undo-tree-id16885 . -1) (undo-tree-id16886 . -1) (undo-tree-id16887 . -1) (undo-tree-id16888 . -1) (undo-tree-id16889 . -1) (undo-tree-id16890 . -1) (undo-tree-id16891 . -1) (undo-tree-id16892 . -1) (undo-tree-id16893 . -1) (undo-tree-id16894 . -1) (undo-tree-id16895 . -1) (undo-tree-id16896 . -1) (undo-tree-id16897 . -1) (undo-tree-id16898 . -1) (undo-tree-id16899 . -1) (undo-tree-id16900 . -1) (undo-tree-id16901 . -1) (undo-tree-id16902 . -1) (undo-tree-id16903 . -1) (undo-tree-id16904 . -1) (undo-tree-id16905 . -1) (undo-tree-id16906 . -1) (undo-tree-id16907 . -1) (undo-tree-id16908 . -1)) nil (25774 25503 244167 276000) 0 nil])
([nil nil ((#("," 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1134) (undo-tree-id16318 . 1) (undo-tree-id16319 . 1) (undo-tree-id16320 . -1) (undo-tree-id16321 . -1)) nil (25774 25503 242400 208000) 0 nil])
([nil nil ((#("𝑥𝑥 " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1192) (undo-tree-id16290 . -2) (undo-tree-id16291 . -1) (undo-tree-id16292 . -1) (undo-tree-id16293 . -1) (undo-tree-id16294 . -1) (undo-tree-id16295 . -1) (undo-tree-id16296 . -1) (undo-tree-id16297 . -1) (undo-tree-id16298 . -1) (undo-tree-id16299 . -1) (undo-tree-id16300 . -1) (undo-tree-id16301 . -1) (undo-tree-id16302 . -1) (undo-tree-id16303 . -1) (undo-tree-id16304 . -1) (undo-tree-id16305 . -1) (undo-tree-id16306 . -1) (undo-tree-id16307 . -1) (undo-tree-id16308 . -1) (undo-tree-id16309 . -1) (undo-tree-id16310 . -1) (undo-tree-id16311 . -1) (undo-tree-id16312 . -1) (undo-tree-id16313 . -1) (undo-tree-id16314 . -1) (undo-tree-id16315 . -1) (undo-tree-id16316 . -1) (undo-tree-id16317 . -3)) nil (25774 25503 242392 980000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1192) (undo-tree-id16287 . 1) (undo-tree-id16288 . -1) (undo-tree-id16289 . -1)) nil (25774 25503 242363 369000) 0 nil])
([nil nil ((#("𝑖𝑖" 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1192) (undo-tree-id16285 . -1) (undo-tree-id16286 . -2)) nil (25774 25503 242356 419000) 0 nil])
([nil nil ((#(") " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1192) (undo-tree-id16281 . -1) (undo-tree-id16282 . 2) (undo-tree-id16283 . -1) (undo-tree-id16284 . -2)) nil (25774 25503 242349 341000) 0 nil])
([nil nil ((#("(or, to be more specific, its hidden representation)" 0 37 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 37 52 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1192) (undo-tree-id17397 . -51) (undo-tree-id17398 . -1) (undo-tree-id17399 . -1) (undo-tree-id17400 . -1) (undo-tree-id17401 . -1) (undo-tree-id17402 . -1) (undo-tree-id17403 . -1) (undo-tree-id17404 . -1) (undo-tree-id17405 . -1) (undo-tree-id17406 . -1) (undo-tree-id17407 . -1) (undo-tree-id17408 . -1) (undo-tree-id17409 . -1) (undo-tree-id17410 . -1) (undo-tree-id17411 . -1) (undo-tree-id17412 . -1) (undo-tree-id17413 . -1) (undo-tree-id17414 . -1) (undo-tree-id17415 . -1) (undo-tree-id17416 . -1) (undo-tree-id17417 . -1) (undo-tree-id17418 . -1) (undo-tree-id17419 . -1) (undo-tree-id17420 . -1) (undo-tree-id17421 . -1) (undo-tree-id17422 . -1) (undo-tree-id17423 . -1) (undo-tree-id17424 . -1) (undo-tree-id17425 . -1) (undo-tree-id17426 . -1) (undo-tree-id17427 . -1) (undo-tree-id17428 . -1) (undo-tree-id17429 . -1) (undo-tree-id17430 . -1) (undo-tree-id17431 . -1) (undo-tree-id17432 . -1) (undo-tree-id17433 . -1) (undo-tree-id17434 . -1) (undo-tree-id17435 . -1) (undo-tree-id17436 . -1) (undo-tree-id17437 . -1) (undo-tree-id17438 . -1) (undo-tree-id17439 . -1) (undo-tree-id17440 . -1) (undo-tree-id17441 . -1) (undo-tree-id17442 . -1) (undo-tree-id17443 . -1) (undo-tree-id17444 . -1) (undo-tree-id17445 . -1) (undo-tree-id17446 . -1) (undo-tree-id17447 . -1) (undo-tree-id17448 . -1) (undo-tree-id17449 . -1) (undo-tree-id17450 . -1) (undo-tree-id17451 . -1) (undo-tree-id17452 . -1) (undo-tree-id17453 . -1) (undo-tree-id17454 . -1) (undo-tree-id17455 . -1) (undo-tree-id17456 . -1) (undo-tree-id17457 . -1) (undo-tree-id17458 . -1) (undo-tree-id17459 . -1) (undo-tree-id17460 . -1) (undo-tree-id17461 . -1) (undo-tree-id17462 . -1) (undo-tree-id17463 . -1) (undo-tree-id17464 . -1) (undo-tree-id17465 . -1) (undo-tree-id17466 . -1) (undo-tree-id17467 . -1) (undo-tree-id17468 . -1) (undo-tree-id17469 . -1) (undo-tree-id17470 . -1) (undo-tree-id17471 . -1) (undo-tree-id17472 . -1) (undo-tree-id17473 . -52) 1193 (t 25774 25503 259433 264000)) nil (25774 25525 729319 748000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1192) (undo-tree-id17395 . -1) (undo-tree-id17396 . -1)) nil (25774 25552 773252 390000) 0 nil])
([nil nil ((#("- For example, suppose our input is a sentence, and a word with a larger weight contributes more to our understanding of the whole sentence.
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 15 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 15 16 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 16 65 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 65 66 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 66 140 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 140 141 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1266) (undo-tree-id17857 . -140) (undo-tree-id17858 . -14) (undo-tree-id17859 . -2) (undo-tree-id17860 . 125) (undo-tree-id17861 . -2) (undo-tree-id17862 . -14) (undo-tree-id17863 . -2) (undo-tree-id17864 . -14) 1280) nil (25774 25699 994314 792000) 0 nil] [nil nil ((#("For example, " 0 13 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1268) (undo-tree-id17474 . -12) (undo-tree-id17475 . -12) (undo-tree-id17476 . -12) (undo-tree-id17477 . -12) (undo-tree-id17478 . -13) (undo-tree-id17479 . -12) (undo-tree-id17480 . -2) (undo-tree-id17481 . -2) (undo-tree-id17482 . -2) (undo-tree-id17483 . -2) (undo-tree-id17484 . -2) (undo-tree-id17485 . -2) (undo-tree-id17486 . -2) (undo-tree-id17487 . -2) (undo-tree-id17488 . -2) (undo-tree-id17489 . -2) (undo-tree-id17490 . -2) (undo-tree-id17491 . -2) (undo-tree-id17492 . -2) (undo-tree-id17493 . -2) (undo-tree-id17494 . -2) (undo-tree-id17495 . -2) (undo-tree-id17496 . -2) (undo-tree-id17497 . -2) (undo-tree-id17498 . -2) (undo-tree-id17499 . -2) (undo-tree-id17500 . -2) (undo-tree-id17501 . -10) (undo-tree-id17502 . -10) (undo-tree-id17503 . -10) (undo-tree-id17504 . -10) (undo-tree-id17505 . -10) (undo-tree-id17506 . -10) (undo-tree-id17507 . -10) (undo-tree-id17508 . -10) (undo-tree-id17509 . -10) (undo-tree-id17510 . -10) (undo-tree-id17511 . -10) (undo-tree-id17512 . -10) (undo-tree-id17513 . -10) (undo-tree-id17514 . -10) (undo-tree-id17515 . -10) (undo-tree-id17516 . -10) (undo-tree-id17517 . -10) (undo-tree-id17518 . -10) (undo-tree-id17519 . -10) (undo-tree-id17520 . -10) (undo-tree-id17521 . -10) (undo-tree-id17522 . -10) (undo-tree-id17523 . -10) (undo-tree-id17524 . -10) (undo-tree-id17525 . -10) (undo-tree-id17526 . -10) (undo-tree-id17527 . -11) (undo-tree-id17528 . -11) (undo-tree-id17529 . -11) (undo-tree-id17530 . -11) (undo-tree-id17531 . -11) (undo-tree-id17532 . -11) (undo-tree-id17533 . -11) (undo-tree-id17534 . -11) (undo-tree-id17535 . -11) (undo-tree-id17536 . -11) (undo-tree-id17537 . -11) (undo-tree-id17538 . -11) (undo-tree-id17539 . -11) (undo-tree-id17540 . -11) (undo-tree-id17541 . -11) (undo-tree-id17542 . -11) (undo-tree-id17543 . -11) (undo-tree-id17544 . -11) (undo-tree-id17545 . -11) (undo-tree-id17546 . -11) (undo-tree-id17547 . -11) (undo-tree-id17548 . -11) (undo-tree-id17549 . -11) (undo-tree-id17550 . -11) (undo-tree-id17551 . -11) (undo-tree-id17552 . -11) (undo-tree-id17553 . -12) (undo-tree-id17554 . -12) (undo-tree-id17555 . -12) (undo-tree-id17556 . -12) (undo-tree-id17557 . -12) (undo-tree-id17558 . -12) (undo-tree-id17559 . -12) (undo-tree-id17560 . -12) (undo-tree-id17561 . -12) (undo-tree-id17562 . -12) (undo-tree-id17563 . -12) (undo-tree-id17564 . -12) (undo-tree-id17565 . -12) (undo-tree-id17566 . -12) (undo-tree-id17567 . -12) (undo-tree-id17568 . -12) (undo-tree-id17569 . -12) (undo-tree-id17570 . -12) (undo-tree-id17571 . -12) (undo-tree-id17572 . -12) (undo-tree-id17573 . -12) (undo-tree-id17574 . -12) (undo-tree-id17575 . -12) (undo-tree-id17576 . -12) (undo-tree-id17577 . -12) (undo-tree-id17578 . -12) (undo-tree-id17579 . -12) (undo-tree-id17580 . -12) (undo-tree-id17581 . -12) (undo-tree-id17582 . -12) (undo-tree-id17583 . -12) (undo-tree-id17584 . -12) (undo-tree-id17585 . -12) (undo-tree-id17586 . -12) (undo-tree-id17587 . -12) (undo-tree-id17588 . -12) (undo-tree-id17589 . -12) (undo-tree-id17590 . -13) 1280 (t 25774 25525 747733 199000)) ((1268 . 1281)) (25774 25543 368468 329000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1266) (undo-tree-id17856 . 1)) nil (25774 25699 994308 97000) 0 nil])
([nil nil ((1268 . 1269) (#("s" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1268)) ((1268 . 1269) (#("S" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1268) (t 25774 25534 955859 90000)) (25774 25534 933146 87000) 0 nil])
([nil nil ((#("- The RNN with the atten- tion mechanism shown in Figure 16.3 (modeled after the previously mentioned paper) illustrates the overall concept of generating the second output word:
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 25 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 25 26 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 26 104 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 104 124 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 124 125 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 125 177 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 177 178 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 178 179 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 1266) (undo-tree-id17854 . -178) (undo-tree-id17855 . 179)) nil (25774 25699 994306 743000) 0 nil])
nil
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1265) (undo-tree-id17846 . -1) (undo-tree-id17847 . -1) (undo-tree-id17848 . -1) (undo-tree-id17849 . -1) (undo-tree-id17850 . -1) (undo-tree-id17851 . -1) (undo-tree-id17852 . -1) (undo-tree-id17853 . -1) 1266) nil (25774 25699 994304 620000) 0 nil])
([nil nil ((1265 . 1266) (1265 . 1268)) nil (25774 25699 994299 228000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3192 . 3193) (nil fontified nil 3151 . 3193) (nil fontified nil 3050 . 3151) (nil fontified nil 2986 . 3050) (nil fontified nil 2884 . 2986) (nil fontified nil 2783 . 2884) (nil fontified nil 2779 . 2783) (nil fontified nil 2775 . 2779) (nil fontified nil 2675 . 2775) (nil fontified nil 2565 . 2675) (nil fontified nil 2466 . 2565) (nil fontified nil 2369 . 2466) (nil fontified nil 2300 . 2369) (nil fontified nil 2203 . 2300) (nil fontified nil 2104 . 2203) (nil fontified nil 1998 . 2104) (nil fontified nil 1893 . 1998) (nil fontified nil 1835 . 1893) (nil fontified nil 1735 . 1835) (nil fontified nil 1637 . 1735) (nil fontified nil 1532 . 1637) (nil fontified nil 1420 . 1532) (nil fontified nil 1317 . 1420) (nil fontified nil 1269 . 1317) (1269 . 3193) 1268) nil (25774 25699 994297 636000) 0 nil])
([nil nil ((3150 . 3151) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3150) (3049 . 3050) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3049) (2985 . 2986) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2985) (2883 . 2884) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2883) (2782 . 2783) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2782) (2778 . 2779) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2778) (2774 . 2775) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2774) (2674 . 2675) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2674) (2564 . 2565) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2564) (2465 . 2466) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2465) (2368 . 2369) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2368) (2299 . 2300) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2299) (2202 . 2203) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2202) (2103 . 2104) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2103) (1997 . 1998) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1997) (1892 . 1893) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1892) (1834 . 1835) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1834) (1734 . 1735) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1734) (1636 . 1637) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1636) (1531 . 1532) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1531) (1419 . 1420) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1419) 1317) nil (25774 25699 994290 30000) 0 nil])
([nil nil ((1317 . 1319)) nil (25774 25699 994284 68000) 0 nil])
([nil nil ((1317 . 3197) (#("- You can think of a context vector as an augmented version of the input vector, 𝑥𝑥 (𝑖𝑖). In other words, the 𝑐𝑐𝑖𝑖 input vector also incorporates information from all other input elements via an attention mechanism. As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs. In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
- The first RNN (RNN #1) of the attention-based RNN in Figure 16.3 is a bidirectional RNN that generates context vectors, 𝑐𝑐𝑖𝑖 ." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 89 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 89 90 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 90 194 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 194 195 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 195 292 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 292 293 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 293 326 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 326 373 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 373 374 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 374 375 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 375 392 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 392 393 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 393 450 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 450 451 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 451 555 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 555 556 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 556 661 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 661 662 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 662 760 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 760 761 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 761 857 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 857 858 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 858 893 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 893 926 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 926 927 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 927 1023 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1023 1024 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1024 1122 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1122 1123 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1123 1232 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1232 1233 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1233 1332 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1332 1333 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1333 1336 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1336 1337 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1337 1340 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1340 1341 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1341 1427 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1427 1441 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1441 1442 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1442 1543 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1543 1544 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1544 1607 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1607 1608 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1608 1708 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1708 1709 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1709 1750 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1750 1751 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1751 1752 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1752 1753 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil composition (0 1 [8226])) 1753 1754 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1754 1856 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1856 1857 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1857 1880 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 1317) (undo-tree-id17841 . 126) (undo-tree-id17842 . -1880) (undo-tree-id17843 . -1816) (undo-tree-id17844 . -1880) (1317 . 3069) (#(" You can think of a context vector as an augmented version of the input vector, 𝑥𝑥 (𝑖𝑖). In other words, the 𝑐𝑐𝑖𝑖 input vector also incorporates information from all other input elements via an attention mechanism. As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs. In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 88 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 88 89 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 89 193 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 193 194 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 194 291 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 291 292 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 292 325 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 325 372 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 372 373 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 373 374 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 374 391 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 391 392 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 392 449 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 449 450 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 450 554 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 554 555 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 555 660 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 660 661 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 661 759 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 759 760 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 760 856 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 856 857 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 857 892 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 892 925 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 925 926 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 926 1022 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1022 1023 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1023 1121 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1121 1122 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1122 1231 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1231 1232 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1232 1331 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1331 1332 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1332 1335 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1335 1336 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1336 1339 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1339 1340 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1340 1426 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1426 1440 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1440 1441 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1441 1542 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1542 1543 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1543 1606 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1606 1607 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1607 1707 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1707 1708 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1708 1749 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1749 1750 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 1445) (undo-tree-id17845 . -1749)) nil (25774 25699 994282 873000) 0 nil])
([nil nil ((1446 . 3199) (#("- In other words, the 𝑐𝑐𝑖𝑖 input vector also incorporates information from all other input elements via an attention mechanism. As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs. In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
- You can think of a context vector as an augmented version of the input vector, 𝑥𝑥 (𝑖𝑖)." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 106 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 106 107 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 107 204 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 204 205 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 205 238 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 238 283 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 283 285 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 285 286 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 286 287 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 287 304 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 304 305 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 305 362 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 362 363 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 363 467 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 467 468 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 468 573 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 573 574 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 574 672 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 672 673 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 673 769 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 769 770 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 770 805 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 805 838 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 838 839 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 839 935 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 935 936 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 936 1034 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1034 1035 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1035 1144 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1144 1145 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1145 1244 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1244 1245 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1245 1248 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1248 1249 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1249 1252 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1252 1253 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1253 1339 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1339 1353 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1353 1354 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1354 1455 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1455 1456 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1456 1519 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1519 1520 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1520 1620 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1620 1621 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1621 1662 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1662 1663 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1663 1664 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1664 1665 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1665 1666 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1666 1753 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 1446) (undo-tree-id17838 . 87) (undo-tree-id17839 . -1665) (undo-tree-id17840 . -1753) (1446 . 3110) (#(" In other words, the 𝑐𝑐𝑖𝑖 input vector also incorporates information from all other input elements via an attention mechanism. As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs. In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 105 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 105 106 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 106 203 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 203 204 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 204 237 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 237 282 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 282 284 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 284 285 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 285 286 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 286 303 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 303 304 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 304 361 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 361 362 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 362 466 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 466 467 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 467 572 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 572 573 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 573 671 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 671 672 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 672 768 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 768 769 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 769 804 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 804 837 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 837 838 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 838 934 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 934 935 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 935 1033 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1033 1034 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1034 1143 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1143 1144 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1144 1243 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1243 1244 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1244 1247 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1247 1248 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1248 1251 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1251 1252 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1252 1338 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1338 1352 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1352 1353 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1353 1454 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1454 1455 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1455 1518 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1518 1519 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1519 1619 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1619 1620 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1620 1661 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1661 1662 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 1535)) nil (25774 25699 994277 369000) 0 nil])
([nil nil ((1536 . 3201) (#("- As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs. In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
- In other words, the 𝑐𝑐𝑖𝑖 input vector also incorporates information from all other input elements via an attention mechanism." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 78 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 78 79 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 79 112 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 112 157 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 157 159 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 159 160 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 160 161 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 161 178 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 178 179 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 179 236 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 236 237 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 237 284 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 284 341 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 341 342 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 342 447 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 447 448 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 448 546 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 546 547 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 547 643 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 643 644 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 644 679 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 679 712 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 712 713 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 713 809 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 809 810 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 810 908 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 908 909 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 909 1018 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1018 1019 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1019 1118 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1118 1119 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1119 1122 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1122 1123 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1123 1126 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1126 1127 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1127 1213 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1213 1227 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1227 1228 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1228 1329 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1329 1330 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1330 1393 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1393 1394 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1394 1494 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1494 1495 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1495 1536 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1536 1537 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1537 1538 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1538 1539 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1539 1540 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1540 1644 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1644 1645 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1645 1665 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 1536) (undo-tree-id17835 . 125) (undo-tree-id17836 . -1539) (undo-tree-id17837 . -1665) (1536 . 3074) (#(" As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs. In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 77 78 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 78 111 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 111 156 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 156 158 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 158 159 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 159 160 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 160 177 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 177 178 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 178 235 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 235 236 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 236 283 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 283 340 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 340 341 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 341 446 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 446 447 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 447 545 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 545 546 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 546 642 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 642 643 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 643 678 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 678 711 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 711 712 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 712 808 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 808 809 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 809 907 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 907 908 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 908 1017 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1017 1018 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1018 1117 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1117 1118 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1118 1121 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1121 1122 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1122 1125 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1125 1126 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1126 1212 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1212 1226 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1226 1227 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1227 1328 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1328 1329 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1329 1392 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1392 1393 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1393 1493 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1493 1494 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1494 1535 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1535 1536 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 1663)) nil (25774 25699 994274 291000) 0 nil])
([nil nil ((1664 . 3203) (#("- In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
- As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 44 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 44 46 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 46 47 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 47 48 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 48 65 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 65 66 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 66 123 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 123 124 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 124 171 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 171 228 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 228 229 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 229 259 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 259 334 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 334 335 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 335 433 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 433 434 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 434 530 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 530 531 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 531 566 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 566 599 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 599 600 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 600 696 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 696 697 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 697 795 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 795 796 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 796 905 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 905 906 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 906 1005 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1005 1006 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1006 1009 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1009 1010 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1010 1013 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1013 1014 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1014 1100 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1100 1114 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1114 1115 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1115 1216 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1216 1217 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1217 1280 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1280 1281 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1281 1381 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1381 1382 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1382 1423 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1423 1424 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1424 1425 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1425 1426 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1426 1427 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1427 1503 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1503 1504 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1504 1537 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1537 1539 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 1664) (undo-tree-id17832 . 112) (undo-tree-id17833 . -1453) (undo-tree-id17834 . -1539) (1664 . 3089) (#(" In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 43 45 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 45 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 46 47 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 47 64 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 64 65 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 65 122 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 122 123 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 123 170 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 170 227 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 227 228 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 228 258 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 258 333 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 333 334 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 334 432 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 432 433 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 433 529 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 529 530 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 530 565 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 565 598 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 598 599 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 599 695 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 695 696 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 696 794 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 794 795 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 795 904 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 904 905 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 905 1004 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1004 1005 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1005 1008 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1008 1009 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1009 1012 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1012 1013 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1013 1099 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1099 1113 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1113 1114 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1114 1215 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1215 1216 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1216 1279 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1279 1280 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1280 1380 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1380 1381 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1381 1422 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1422 1423 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 1778)) nil (25774 25699 994271 267000) 0 nil])
([nil nil ((1779 . 3205) (#("- The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
- In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 49 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 49 106 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 106 107 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 107 137 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 137 212 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 212 213 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 213 263 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 263 311 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 311 312 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 312 408 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 408 409 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 409 444 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 444 477 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 477 478 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 478 574 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 574 575 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 575 673 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 673 674 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 674 783 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 783 784 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 784 883 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 883 884 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 884 887 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 887 888 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 888 891 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 891 892 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 892 978 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 978 992 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 992 993 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 993 1094 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1094 1095 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1095 1158 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1158 1159 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1159 1259 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1259 1260 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1260 1301 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1301 1302 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1302 1303 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1303 1304 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1304 1305 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1305 1347 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1347 1349 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1349 1350 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1350 1351 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1351 1368 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1368 1369 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1369 1426 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 1779) (undo-tree-id17829 . 121) (undo-tree-id17830 . -1304) (undo-tree-id17831 . -1426) (1779 . 3082) (#(" The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 48 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 48 105 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 105 106 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 106 136 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 136 211 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 211 212 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 212 262 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 262 310 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 310 311 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 311 407 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 407 408 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 408 443 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 443 476 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 476 477 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 477 573 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 573 574 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 574 672 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 672 673 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 673 782 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 782 783 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 783 882 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 882 883 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 883 886 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 886 887 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 887 890 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 890 891 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 891 977 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 977 991 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 991 992 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 992 1093 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1093 1094 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1094 1157 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1157 1158 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1158 1258 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1258 1259 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1259 1300 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1300 1301 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 1902)) nil (25774 25699 994268 93000) 0 nil])
([nil nil ((1903 . 3207) (#("- Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
- The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇)." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 77 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 77 78 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 78 128 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 128 176 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 176 177 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 177 241 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 241 273 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 273 274 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 274 309 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 309 342 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 342 343 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 343 439 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 439 440 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 440 538 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 538 539 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 539 648 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 648 649 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 649 748 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 748 749 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 749 752 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 752 753 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 753 756 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 756 757 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 757 843 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 843 857 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 857 858 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 858 959 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 959 960 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 960 1023 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1023 1024 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1024 1124 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1124 1125 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1125 1166 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1166 1167 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1167 1168 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1168 1169 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1169 1170 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1170 1217 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1217 1274 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1274 1275 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1275 1304 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 1903) (undo-tree-id17825 . 42) (undo-tree-id17826 . -1265) (undo-tree-id17827 . -1304) (undo-tree-id17828 . -1169) (1903 . 3071) (#(" Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 76 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 76 77 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 77 127 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 127 175 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 175 176 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 176 240 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 240 272 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 272 273 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 273 308 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 308 341 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 341 342 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 342 438 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 438 439 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 439 537 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 537 538 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 538 647 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 647 648 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 648 747 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 747 748 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 748 751 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 751 752 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 752 755 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 755 756 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 756 842 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 842 856 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 856 857 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 857 958 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 958 959 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 959 1022 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1022 1023 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1023 1123 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1123 1124 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1124 1165 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1165 1166 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2039)) nil (25774 25699 994264 709000) 0 nil])
([nil nil ((2040 . 3209) (#("- The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
- Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 22 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 22 23 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 23 87 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 87 119 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 119 120 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 120 155 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 155 188 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 188 189 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 189 209 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 209 285 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 285 286 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 286 384 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 384 385 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 385 494 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 494 495 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 495 594 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 594 595 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 595 598 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 598 599 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 599 602 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 602 603 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 603 689 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 689 703 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 703 704 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 704 805 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 805 806 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 806 869 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 869 870 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 870 970 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 970 971 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 971 1012 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1012 1013 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1013 1014 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1014 1015 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1015 1016 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1016 1091 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1091 1092 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1092 1142 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1142 1169 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2040) (undo-tree-id17822 . 153) (undo-tree-id17823 . -1015) (undo-tree-id17824 . -1169) (2040 . 3054) (#(" The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 21 22 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 22 86 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 86 118 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 118 119 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 119 154 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 154 187 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 187 188 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 188 208 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 208 284 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 284 285 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 285 383 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 383 384 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 384 493 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 493 494 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 494 593 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 593 594 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 594 597 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 597 598 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 598 601 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 601 602 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 602 688 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 688 702 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 702 703 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 703 804 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 804 805 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 805 868 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 868 869 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 869 969 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 969 970 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 970 1011 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1011 1012 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2195)) nil (25774 25699 994261 74000) 0 nil])
([nil nil ((2196 . 3211) (#("- Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
- The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 22 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 22 98 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 98 99 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 99 157 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 157 197 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 197 198 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 198 307 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 307 308 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 308 407 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 407 408 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 408 411 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 411 412 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 412 415 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 415 416 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 416 502 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 502 516 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 516 517 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 517 618 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 618 619 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 619 682 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 682 683 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 683 783 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 783 784 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 784 825 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 825 826 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 826 827 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 827 828 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 828 829 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 829 849 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 849 850 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 850 914 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 914 946 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 946 947 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 947 982 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 982 1015 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2196) (undo-tree-id17819 . 186) (undo-tree-id17820 . -828) (undo-tree-id17821 . -1015) (2196 . 3023) (#(" Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 21 97 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 97 98 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 98 156 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 156 196 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 196 197 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 197 306 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 306 307 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 307 406 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 406 407 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 407 410 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 410 411 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 411 414 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 414 415 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 415 501 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 501 515 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 515 516 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 516 617 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 617 618 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 618 681 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 681 682 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 682 782 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 782 783 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 783 824 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 824 825 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2384)) nil (25774 25699 994258 83000) 0 nil])
([nil nil ((2385 . 3213) (#("- For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
- Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 13 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 13 53 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 53 54 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 54 163 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 163 164 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 164 167 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 167 263 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 263 264 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 264 267 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 267 268 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 268 271 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 271 272 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 272 358 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 358 372 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 372 373 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 373 474 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 474 475 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 475 538 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 538 539 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 539 639 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 639 640 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 640 681 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 681 682 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 682 683 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 683 684 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 684 685 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 685 705 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 705 781 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 781 782 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 782 828 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2385) (undo-tree-id17816 . 143) (undo-tree-id17817 . -684) (undo-tree-id17818 . -828) (2385 . 3068) (#(" For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 12 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 52 53 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 53 162 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 162 163 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 163 166 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 166 262 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 262 263 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 263 266 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 266 267 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 267 270 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 270 271 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 271 357 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 357 371 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 371 372 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 372 473 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 473 474 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 474 537 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 537 538 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 538 638 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 638 639 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 639 680 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 680 681 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2530)) nil (25774 25699 994253 869000) 0 nil])
([nil nil ((2531 . 3215) (#("- These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
- For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 95 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 95 96 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 96 99 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 99 100 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 100 103 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 103 104 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 104 186 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 186 190 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 190 204 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 204 205 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 205 306 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 306 307 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 307 370 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 370 371 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 371 471 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 471 472 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 472 513 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 513 514 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 514 515 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 515 516 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 516 517 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 517 528 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 528 568 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 568 569 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 569 678 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 678 679 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 679 682 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 682 684 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2531) (undo-tree-id17813 . 167) (undo-tree-id17814 . -516) (undo-tree-id17815 . -684) (2531 . 3046) (#(" These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 94 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 94 95 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 95 98 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 98 99 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 99 102 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 102 103 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 103 185 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 185 189 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 189 203 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 203 204 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 204 305 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 305 306 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 306 369 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 369 370 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 370 470 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 470 471 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 471 512 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 512 513 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2700)) nil (25774 25699 994244 105000) 0 nil])
([nil nil ((2701 . 3217) (#("- For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
- These two hidden states are then concatenated to form the hidden state ℎ(2) ." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 17 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 17 18 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 18 21 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 21 22 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 22 25 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 25 26 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 26 108 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 108 112 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 112 126 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 126 127 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 127 228 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 228 229 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 229 252 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 252 292 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 292 293 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 293 393 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 393 394 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 394 435 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 435 436 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 436 437 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 437 438 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 438 439 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 439 516 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2701) (undo-tree-id17773 . 77) (undo-tree-id17774 . -438) (undo-tree-id17775 . -516) (undo-tree-id17776 . -438) (undo-tree-id17777 . -515) (undo-tree-id17778 . -515) (undo-tree-id17779 . -515) (undo-tree-id17780 . -515) (undo-tree-id17781 . -515) (undo-tree-id17782 . -515) (undo-tree-id17783 . -515) (undo-tree-id17784 . -515) (undo-tree-id17785 . -515) (undo-tree-id17786 . -515) (undo-tree-id17787 . -515) (undo-tree-id17788 . -515) (undo-tree-id17789 . -515) (undo-tree-id17790 . -515) (undo-tree-id17791 . -515) (undo-tree-id17792 . -515) (undo-tree-id17793 . -516) (undo-tree-id17794 . -516) (undo-tree-id17795 . -516) (undo-tree-id17796 . -516) (undo-tree-id17797 . -516) (undo-tree-id17798 . -516) (undo-tree-id17799 . -516) (undo-tree-id17800 . -516) (undo-tree-id17801 . -516) (undo-tree-id17802 . -516) (undo-tree-id17803 . -516) (undo-tree-id17804 . -516) (undo-tree-id17805 . -516) (undo-tree-id17806 . -516) (undo-tree-id17807 . -516) (undo-tree-id17808 . -516) (undo-tree-id17809 . -516) (undo-tree-id17810 . -516) (undo-tree-id17811 . -516) (undo-tree-id17812 . -437) (2701 . 3138) (#(" For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 16 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 16 17 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 17 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 20 21 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 21 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 24 25 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 25 107 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 107 111 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 111 125 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 125 126 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 126 227 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 227 228 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 228 251 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 251 291 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 291 292 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 292 392 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 392 393 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 393 434 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 434 435 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2780)) nil (25774 25699 994239 925000) 0 nil])
([nil nil ((2781 . 3219) (#("- We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
- For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 93 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 93 94 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 94 117 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 117 157 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 157 158 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 158 258 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 258 259 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 259 285 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 285 300 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 300 301 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 301 302 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 302 303 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 303 304 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 304 319 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 319 320 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 320 323 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 323 324 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 324 327 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 327 328 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 328 410 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 410 414 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 414 428 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 428 429 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 429 438 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2781) (undo-tree-id17682 . 134) (undo-tree-id17683 . -303) (undo-tree-id17684 . -438) (undo-tree-id17685 . -304) (undo-tree-id17686 . -304) (undo-tree-id17687 . -304) (undo-tree-id17688 . -304) (undo-tree-id17689 . -304) (undo-tree-id17690 . -304) (undo-tree-id17691 . -304) (undo-tree-id17692 . -304) (undo-tree-id17693 . -304) (undo-tree-id17694 . -304) (undo-tree-id17695 . -304) (undo-tree-id17696 . -304) (undo-tree-id17697 . -304) (undo-tree-id17698 . -304) (undo-tree-id17699 . -304) (undo-tree-id17700 . -304) (undo-tree-id17701 . -304) (undo-tree-id17702 . -303) (undo-tree-id17703 . -303) (undo-tree-id17704 . -303) (undo-tree-id17705 . -303) (undo-tree-id17706 . -303) (undo-tree-id17707 . -303) (undo-tree-id17708 . -303) (undo-tree-id17709 . -303) (undo-tree-id17710 . -303) (undo-tree-id17711 . -303) (undo-tree-id17712 . -303) (undo-tree-id17713 . -303) (undo-tree-id17714 . -303) (undo-tree-id17715 . -303) (undo-tree-id17716 . -303) (undo-tree-id17717 . -303) (undo-tree-id17718 . -303) (undo-tree-id17719 . -303) (undo-tree-id17720 . -303) (undo-tree-id17721 . -303) (undo-tree-id17722 . -303) (undo-tree-id17723 . -303) (undo-tree-id17724 . -303) (undo-tree-id17725 . -303) (undo-tree-id17726 . -303) (undo-tree-id17727 . -437) (undo-tree-id17728 . -437) (undo-tree-id17729 . -437) (undo-tree-id17730 . -437) (undo-tree-id17731 . -437) (undo-tree-id17732 . -437) (undo-tree-id17733 . -437) (undo-tree-id17734 . -437) (undo-tree-id17735 . -437) (undo-tree-id17736 . -437) (undo-tree-id17737 . -437) (undo-tree-id17738 . -437) (undo-tree-id17739 . -437) (undo-tree-id17740 . -437) (undo-tree-id17741 . -437) (undo-tree-id17742 . -437) (undo-tree-id17743 . -437) (undo-tree-id17744 . -437) (undo-tree-id17745 . -437) (undo-tree-id17746 . -437) (undo-tree-id17747 . -437) (undo-tree-id17748 . -437) (undo-tree-id17749 . -437) (undo-tree-id17750 . -437) (undo-tree-id17751 . -437) (undo-tree-id17752 . -437) (undo-tree-id17753 . -438) (undo-tree-id17754 . -438) (undo-tree-id17755 . -438) (undo-tree-id17756 . -438) (undo-tree-id17757 . -438) (undo-tree-id17758 . -438) (undo-tree-id17759 . -438) (undo-tree-id17760 . -438) (undo-tree-id17761 . -438) (undo-tree-id17762 . -438) (undo-tree-id17763 . -438) (undo-tree-id17764 . -438) (undo-tree-id17765 . -438) (undo-tree-id17766 . -438) (undo-tree-id17767 . -438) (undo-tree-id17768 . -438) (undo-tree-id17769 . -438) (undo-tree-id17770 . -438) (undo-tree-id17771 . -438) (undo-tree-id17772 . -302) (2781 . 3083) (#(" We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 92 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 92 93 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 93 116 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 116 156 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 156 157 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 157 257 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 257 258 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 258 284 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 284 299 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 299 300 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2917)) nil (25774 25699 994196 599000) 0 nil])
([nil nil ((2918 . 3221) (#("- In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
- We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 102 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 102 103 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 103 129 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 129 144 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 144 145 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 145 146 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 146 147 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 147 148 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 148 239 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 239 240 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 240 263 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 263 303 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2918) (undo-tree-id17591 . 155) (undo-tree-id17592 . -147) (undo-tree-id17593 . -303) (undo-tree-id17594 . -148) (undo-tree-id17595 . -148) (undo-tree-id17596 . -148) (undo-tree-id17597 . -148) (undo-tree-id17598 . -148) (undo-tree-id17599 . -148) (undo-tree-id17600 . -148) (undo-tree-id17601 . -148) (undo-tree-id17602 . -148) (undo-tree-id17603 . -148) (undo-tree-id17604 . -148) (undo-tree-id17605 . -148) (undo-tree-id17606 . -148) (undo-tree-id17607 . -148) (undo-tree-id17608 . -148) (undo-tree-id17609 . -148) (undo-tree-id17610 . -148) (undo-tree-id17611 . -148) (undo-tree-id17612 . -148) (undo-tree-id17613 . -148) (undo-tree-id17614 . -148) (undo-tree-id17615 . -148) (undo-tree-id17616 . -147) (undo-tree-id17617 . -147) (undo-tree-id17618 . -147) (undo-tree-id17619 . -147) (undo-tree-id17620 . -147) (undo-tree-id17621 . -147) (undo-tree-id17622 . -147) (undo-tree-id17623 . -147) (undo-tree-id17624 . -147) (undo-tree-id17625 . -147) (undo-tree-id17626 . -147) (undo-tree-id17627 . -147) (undo-tree-id17628 . -147) (undo-tree-id17629 . -147) (undo-tree-id17630 . -147) (undo-tree-id17631 . -147) (undo-tree-id17632 . -147) (undo-tree-id17633 . -147) (undo-tree-id17634 . -147) (undo-tree-id17635 . -147) (undo-tree-id17636 . -147) (undo-tree-id17637 . -147) (undo-tree-id17638 . -147) (undo-tree-id17639 . -147) (undo-tree-id17640 . -147) (undo-tree-id17641 . -302) (undo-tree-id17642 . -302) (undo-tree-id17643 . -302) (undo-tree-id17644 . -302) (undo-tree-id17645 . -302) (undo-tree-id17646 . -302) (undo-tree-id17647 . -302) (undo-tree-id17648 . -302) (undo-tree-id17649 . -302) (undo-tree-id17650 . -302) (undo-tree-id17651 . -302) (undo-tree-id17652 . -302) (undo-tree-id17653 . -302) (undo-tree-id17654 . -302) (undo-tree-id17655 . -302) (undo-tree-id17656 . -302) (undo-tree-id17657 . -302) (undo-tree-id17658 . -302) (undo-tree-id17659 . -302) (undo-tree-id17660 . -302) (undo-tree-id17661 . -302) (undo-tree-id17662 . -303) (undo-tree-id17663 . -303) (undo-tree-id17664 . -303) (undo-tree-id17665 . -303) (undo-tree-id17666 . -303) (undo-tree-id17667 . -303) (undo-tree-id17668 . -303) (undo-tree-id17669 . -303) (undo-tree-id17670 . -303) (undo-tree-id17671 . -303) (undo-tree-id17672 . -303) (undo-tree-id17673 . -303) (undo-tree-id17674 . -303) (undo-tree-id17675 . -303) (undo-tree-id17676 . -303) (undo-tree-id17677 . -303) (undo-tree-id17678 . -303) (undo-tree-id17679 . -303) (undo-tree-id17680 . -303) (undo-tree-id17681 . -146) (2918 . 3064) (#(" In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 101 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 101 102 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 102 128 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 128 143 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 143 144 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3075)) nil (25774 25699 994010 133000) 0 nil])
([nil nil ((3221 . 3222)) nil (25774 25699 993939 225000) 0 nil])
([nil nil ((1067 . 1068) (t 25774 25700 10383 626000) 1023) nil (25774 25709 739335 704000) 0 nil])
([nil nil ((1317 . 1318) (t 25774 25709 758546 806000) 1270) nil (25774 25713 262095 652000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1448) (undo-tree-id17865 . -2) (undo-tree-id17866 . -2) (undo-tree-id17867 . -2) (undo-tree-id17868 . -2) (undo-tree-id17869 . -2) (undo-tree-id17870 . -2) (undo-tree-id17871 . -2) (undo-tree-id17872 . -2) (undo-tree-id17873 . -2) (undo-tree-id17874 . -2) 1450 (1447 . 1450) (t 25774 25713 278606 73000) 1446) nil (25774 25756 178979 872000) 0 nil])
([nil nil ((#("The first RNN (RNN #1) of the attention-based RNN in Figure 16.3 is a bidirectional RNN that generates context vectors, 𝑐𝑐𝑖𝑖 ." 0 102 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 102 103 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 103 126 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1321) (undo-tree-id18768 . -125) (undo-tree-id18769 . -120) (undo-tree-id18770 . -120) (undo-tree-id18771 . -120) (undo-tree-id18772 . -120) (undo-tree-id18773 . -120) (undo-tree-id18774 . -120) (undo-tree-id18775 . -120) (undo-tree-id18776 . -120) (undo-tree-id18777 . -120) (undo-tree-id18778 . -120) (undo-tree-id18779 . -120) (undo-tree-id18780 . -120) (undo-tree-id18781 . -120) (undo-tree-id18782 . -120) (undo-tree-id18783 . -120) (undo-tree-id18784 . -120) (undo-tree-id18785 . -60) (undo-tree-id18786 . -60) (undo-tree-id18787 . -60) (undo-tree-id18788 . -60) (undo-tree-id18789 . -60) (undo-tree-id18790 . -60) (undo-tree-id18791 . -60) (undo-tree-id18792 . -60) (undo-tree-id18793 . -60) (undo-tree-id18794 . -60) (undo-tree-id18795 . -60) (undo-tree-id18796 . -60) (undo-tree-id18797 . -60) (undo-tree-id18798 . -60) (undo-tree-id18799 . -60) (undo-tree-id18800 . -60) (undo-tree-id18801 . -60) (undo-tree-id18802 . -60) (undo-tree-id18803 . -60) (undo-tree-id18804 . -60) (undo-tree-id18805 . -60) (undo-tree-id18806 . -60) (undo-tree-id18807 . -60) (undo-tree-id18808 . -60) (undo-tree-id18809 . -60) (undo-tree-id18810 . -60) (undo-tree-id18811 . -60) (undo-tree-id18812 . -60) (undo-tree-id18813 . -60) (undo-tree-id18814 . -60) (undo-tree-id18815 . -60) (undo-tree-id18816 . -60) (undo-tree-id18817 . -60) (undo-tree-id18818 . -60) (undo-tree-id18819 . -60) (undo-tree-id18820 . -60) (undo-tree-id18821 . -111) (undo-tree-id18822 . -111) (undo-tree-id18823 . -111) (undo-tree-id18824 . -111) (undo-tree-id18825 . -111) (undo-tree-id18826 . -111) (undo-tree-id18827 . -111) (undo-tree-id18828 . -111) (undo-tree-id18829 . -111) (undo-tree-id18830 . -111) (undo-tree-id18831 . -111) (undo-tree-id18832 . -111) (undo-tree-id18833 . -111) (undo-tree-id18834 . -111) (undo-tree-id18835 . -111) (undo-tree-id18836 . -111) (undo-tree-id18837 . -111) (undo-tree-id18838 . -111) (undo-tree-id18839 . -111) (undo-tree-id18840 . -111) (undo-tree-id18841 . -111) (undo-tree-id18842 . -111) (undo-tree-id18843 . -111) (undo-tree-id18844 . -111) (undo-tree-id18845 . -111) (undo-tree-id18846 . -111) (undo-tree-id18847 . -111) (undo-tree-id18848 . -111) (undo-tree-id18849 . -111) (undo-tree-id18850 . -111) (undo-tree-id18851 . -111) (undo-tree-id18852 . -111) (undo-tree-id18853 . -111) (undo-tree-id18854 . -111) (undo-tree-id18855 . -111) (undo-tree-id18856 . -111) (undo-tree-id18857 . -111) (undo-tree-id18858 . -111) (undo-tree-id18859 . -111) (undo-tree-id18860 . -111) (undo-tree-id18861 . -111) (undo-tree-id18862 . -111) (undo-tree-id18863 . -111) (undo-tree-id18864 . -111) (undo-tree-id18865 . -111) (undo-tree-id18866 . -111) (undo-tree-id18867 . -111) (undo-tree-id18868 . -111) (undo-tree-id18869 . -111) (undo-tree-id18870 . -111) (undo-tree-id18871 . -111) (undo-tree-id18872 . -111) (undo-tree-id18873 . -111) (undo-tree-id18874 . -111) (undo-tree-id18875 . -111) (undo-tree-id18876 . -111) (undo-tree-id18877 . -111) (undo-tree-id18878 . -111) (undo-tree-id18879 . -111) (undo-tree-id18880 . -111) (undo-tree-id18881 . -111) (undo-tree-id18882 . -111) (undo-tree-id18883 . -111) (undo-tree-id18884 . -111) (undo-tree-id18885 . -111) (undo-tree-id18886 . -111) (undo-tree-id18887 . -111) (undo-tree-id18888 . -111) (undo-tree-id18889 . -111) (undo-tree-id18890 . -111) (undo-tree-id18891 . -111) (undo-tree-id18892 . -111) (undo-tree-id18893 . -111) (undo-tree-id18894 . -111) (undo-tree-id18895 . -111) (undo-tree-id18896 . -111) (undo-tree-id18897 . -111) (undo-tree-id18898 . -111) (undo-tree-id18899 . -111) (undo-tree-id18900 . -111) (undo-tree-id18901 . -111) (undo-tree-id18902 . -111) (undo-tree-id18903 . -111) (undo-tree-id18904 . -111) (undo-tree-id18905 . -111) (undo-tree-id18906 . -111) (undo-tree-id18907 . -111) (undo-tree-id18908 . -111) (undo-tree-id18909 . -111) (undo-tree-id18910 . -111) (undo-tree-id18911 . -111) (undo-tree-id18912 . -111) (undo-tree-id18913 . -111) (undo-tree-id18914 . -111) (undo-tree-id18915 . -111) (undo-tree-id18916 . -111) (undo-tree-id18917 . -111) (undo-tree-id18918 . -111) (undo-tree-id18919 . -111) (undo-tree-id18920 . -111) (undo-tree-id18921 . -111) (undo-tree-id18922 . -111) (undo-tree-id18923 . -111) (undo-tree-id18924 . -111) (undo-tree-id18925 . -111) (undo-tree-id18926 . -111) (undo-tree-id18927 . -111) (undo-tree-id18928 . -111) (undo-tree-id18929 . -111) (undo-tree-id18930 . -111) (undo-tree-id18931 . -111) (undo-tree-id18932 . -111) (undo-tree-id18933 . -111) (undo-tree-id18934 . -111) (undo-tree-id18935 . -111) (undo-tree-id18936 . -111) (undo-tree-id18937 . -111) (undo-tree-id18938 . -111) (undo-tree-id18939 . -111) (undo-tree-id18940 . -111) (undo-tree-id18941 . -111) (undo-tree-id18942 . -111) (undo-tree-id18943 . -111) (undo-tree-id18944 . -111) (undo-tree-id18945 . -111) (undo-tree-id18946 . -111) (undo-tree-id18947 . -111) (undo-tree-id18948 . -111) (undo-tree-id18949 . -111) (undo-tree-id18950 . -111) (undo-tree-id18951 . -111) (undo-tree-id18952 . -111) (undo-tree-id18953 . -51) (undo-tree-id18954 . -51) (undo-tree-id18955 . -51) (undo-tree-id18956 . -51) (undo-tree-id18957 . -51) (undo-tree-id18958 . -51) (undo-tree-id18959 . -51) (undo-tree-id18960 . -51) (undo-tree-id18961 . -51) (undo-tree-id18962 . -51) (undo-tree-id18963 . -51) (undo-tree-id18964 . -51) (undo-tree-id18965 . -51) (undo-tree-id18966 . -51) (undo-tree-id18967 . -51) (undo-tree-id18968 . -51) (undo-tree-id18969 . -53) (undo-tree-id18970 . -53) (undo-tree-id18971 . -53) (undo-tree-id18972 . -53) (undo-tree-id18973 . -53) (undo-tree-id18974 . -53) (undo-tree-id18975 . -53) (undo-tree-id18976 . -53) (undo-tree-id18977 . -53) (undo-tree-id18978 . -53) (undo-tree-id18979 . -53) (undo-tree-id18980 . -53) (undo-tree-id18981 . -53) (undo-tree-id18982 . -53) (undo-tree-id18983 . -53) (undo-tree-id18984 . -53) (undo-tree-id18985 . -53) (undo-tree-id18986 . -53) (undo-tree-id18987 . -53) (undo-tree-id18988 . -53) (undo-tree-id18989 . -53) (undo-tree-id18990 . -126) (undo-tree-id18991 . -126)) nil (25774 25762 583331 221000) 0 nil] [nil nil ((#("* Transformers – Improving Natural Language Processing with Attention Mechanisms

- A new architecture (transformer) has recently emerged that has been shown to outperform the RNN-based sequence-to-sequence models in several NLP tasks.
  
**  Adding an attention mechanism to RNNs
- Motivation behind developing an attention mechanism

** Attention helps RNNs with accessing information

- Consider the traditional RNN model for a seq2seq task

- RNN parses the whole input sentence before producing the output

- Translating word by word would result in grammatical errors

- RNN trying to remember the entire input sequence via one single hidden unit 

- May cause loss of information for long sequences


- Attention mechanism lets the RNN access all input elements at each given time step

- This can be overwhelming

- To focus on the most relevant elements of the input, the attention mechanism assigns different attention weights to each input element

- These weights designate how important a given element is. 

** The original attention mechanism for RNNs

- Mechanics of the attention mechanism

- Given an input sequence, the attention mechanism assigns a weight to each element and helps the model identify which part of the input it should focus on.

** Processing the inputs using a bidirectional RNN

- The first RNN (RNN #1) of the attention-based RNN in Figure 16.3 is a bidirectional RNN that generates context vectors, 𝑐𝑐𝑖𝑖 .

- You can think of a context vector as an augmented version of the input vector, 𝑥𝑥 (𝑖𝑖).
- In other words, the 𝑐𝑐𝑖𝑖 input vector also incorporates information from all other input elements via an attention mechanism.
- As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs.
- In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection.
- The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇).
- Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order.
- The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both.
- Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element.
- For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass.
- These two hidden states are then concatenated to form the hidden state ℎ(2) .
- For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements.
- We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions.
- In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) composition (1 1 [9673]) keymap (keymap) face org-level-1) 1 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1) 2 34 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1) 34 35 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1) 35 59 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1) 59 60 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1) 60 80 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1) 80 81 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t) 81 82 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t) 82 83 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) composition (0 1 [8226])) 83 85 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 85 98 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 98 104 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 104 114 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 114 115 (rear-nonsticky t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 115 161 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 161 206 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 206 207 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 207 234 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 234 235 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 235 236 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 236 239 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 239 240 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 240 241 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (2 1 [9679]) keymap (keymap) face org-level-2) 241 242 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 242 243 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 243 280 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 280 281 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t) 281 282 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) composition (0 1 [8226])) 282 283 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 283 334 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 334 335 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 335 336 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 336 337 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 337 338 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (2 1 [9679]) keymap (keymap) face org-level-2) 338 339 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 339 386 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 386 387 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 387 388 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t) 388 389 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) composition (0 1 [8226])) 389 390 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 390 428 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 428 429 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 429 443 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 443 444 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 444 445 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 445 446 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 446 447 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 447 510 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 510 511 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 511 512 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 512 513 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 513 514 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 514 573 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 573 574 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 574 575 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 575 576 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 576 577 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 577 587 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 587 588 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 588 653 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 653 654 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 654 655 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 655 656 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 656 657 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 657 681 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 681 682 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 682 683 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 683 684 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 684 705 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 705 706 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 706 707 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 707 708 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 708 709 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 709 710 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 710 741 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 741 743 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 743 771 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 771 772 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 772 774 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 774 792 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 792 793 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 793 794 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 794 795 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 795 801 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 801 804 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 804 805 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 805 820 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 820 821 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 821 822 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 822 823 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 823 824 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 824 845 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 845 862 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 862 863 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 863 866 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 866 876 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 876 877 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 877 958 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 958 959 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 959 960 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 960 961 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 961 962 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 962 968 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 968 992 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 992 993 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 993 995 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 995 1020 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1020 1021 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1021 1022 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1022 1023 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1023 1024 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (2 1 [9679]) keymap (keymap) face org-level-2) 1024 1025 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 1025 1066 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 1066 1067 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 1067 1068 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t) 1068 1069 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t composition (0 1 [8226])) 1069 1070 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1070 1106 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1106 1107 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1107 1108 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1108 1109 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1109 1110 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1110 1183 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1183 1184 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1184 1192 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1192 1226 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1226 1227 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1227 1264 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1264 1265 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1265 1266 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1266 1267 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1267 1268 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (2 1 [9679]) keymap (keymap) face org-level-2) 1268 1269 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 1269 1316 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 1316 1317 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 1317 1318 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t) 1318 1319 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) composition (0 1 [8226])) 1319 1320 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1320 1422 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1422 1423 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1423 1446 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1446 1447 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1447 1448 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1448 1449 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1449 1450 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1450 1537 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1537 1538 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1538 1539 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1539 1540 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1540 1644 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1644 1645 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1645 1665 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1665 1666 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1666 1667 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1667 1668 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1668 1744 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1744 1745 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1745 1778 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1778 1780 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1780 1781 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1781 1782 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1782 1783 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1783 1825 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1825 1827 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1827 1828 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1828 1829 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1829 1846 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1846 1847 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1847 1904 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1904 1905 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1905 1906 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1906 1907 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1907 1954 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1954 2011 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2011 2012 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2012 2041 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2041 2042 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2042 2043 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 2043 2044 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2044 2119 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2119 2120 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2120 2170 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2170 2197 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2197 2198 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2198 2199 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 2199 2200 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2200 2220 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2220 2221 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2221 2285 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2285 2317 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2317 2318 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2318 2353 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2353 2386 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2386 2387 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2387 2388 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 2388 2389 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2389 2409 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2409 2485 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2485 2486 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2486 2532 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2532 2533 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2533 2534 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 2534 2535 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2535 2546 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2546 2586 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2586 2587 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2587 2696 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2696 2697 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2697 2700 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2700 2702 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2702 2703 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2703 2704 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 2704 2705 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2705 2782 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2782 2783 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2783 2784 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 2784 2785 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2785 2800 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2800 2801 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2801 2804 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2804 2805 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2805 2808 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2808 2809 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2809 2891 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2891 2895 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2895 2909 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2909 2910 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2910 2919 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2919 2920 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2920 2921 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 2921 2922 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2922 3013 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3013 3014 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3014 3037 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3037 3077 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3077 3078 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3078 3079 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 3079 3080 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3080 3180 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 3180 3181 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3181 3207 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 3207 3222 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 3222 3223 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 3223 3224 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 1) (undo-tree-id17952 . 1777) (undo-tree-id17953 . -3223) (undo-tree-id17954 . -1431) (undo-tree-id17955 . -1) (undo-tree-id17956 . -235) (undo-tree-id17957 . -1264) (undo-tree-id17958 . 1907) (undo-tree-id17959 . -1264) (undo-tree-id17960 . -1316) (undo-tree-id17961 . 2999) (undo-tree-id17962 . -228) (undo-tree-id17963 . -243) (undo-tree-id17964 . 2809) (undo-tree-id17965 . -418) (undo-tree-id17966 . -445) (undo-tree-id17967 . 2948) (undo-tree-id17968 . -280) (undo-tree-id17969 . -657) (undo-tree-id17970 . 2777) (undo-tree-id17971 . -450) (undo-tree-id17972 . 2647) (undo-tree-id17973 . -580) (undo-tree-id17974 . 2485) (undo-tree-id17975 . -742) (undo-tree-id17976 . -1024) (undo-tree-id17977 . -1068) (undo-tree-id17978 . -1068) (undo-tree-id17979 . -1068) (undo-tree-id17980 . -1068) (undo-tree-id17981 . -1068) (undo-tree-id17982 . -1068) (undo-tree-id17983 . -1068) (undo-tree-id17984 . -1068) (undo-tree-id17985 . -1068) (undo-tree-id17986 . -1068) (undo-tree-id17987 . -1068) (undo-tree-id17988 . -1068) (undo-tree-id17989 . -1068) (undo-tree-id17990 . -1068) (undo-tree-id17991 . -1068) (undo-tree-id17992 . -1068) (undo-tree-id17993 . -1068) (undo-tree-id17994 . -1068) (undo-tree-id17995 . -1068) (undo-tree-id17996 . -1068) (undo-tree-id17997 . -1068) (undo-tree-id17998 . -1068) (undo-tree-id17999 . -1068) (undo-tree-id18000 . -1068) (undo-tree-id18001 . -1068) (undo-tree-id18002 . -1068) (undo-tree-id18003 . -1068) (undo-tree-id18004 . -1068) (undo-tree-id18005 . -1068) (undo-tree-id18006 . -1068) (undo-tree-id18007 . -1068) (undo-tree-id18008 . -1068) (undo-tree-id18009 . -1068) (undo-tree-id18010 . -1068) (undo-tree-id18011 . -1068) (undo-tree-id18012 . -1068) (undo-tree-id18013 . -1068) (undo-tree-id18014 . -1068) (undo-tree-id18015 . -1068) (undo-tree-id18016 . -1068) (undo-tree-id18017 . -1068) (undo-tree-id18018 . -1068) (undo-tree-id18019 . -1068) (undo-tree-id18020 . -1068) (undo-tree-id18021 . -1068) (undo-tree-id18022 . -1068) (undo-tree-id18023 . -1068) (undo-tree-id18024 . -1068) (undo-tree-id18025 . -1781) (undo-tree-id18026 . -1905) (undo-tree-id18027 . -1905) (undo-tree-id18028 . -2042) (undo-tree-id18029 . -2042) (undo-tree-id18030 . -2198) (undo-tree-id18031 . -2198) (undo-tree-id18032 . -2387) (undo-tree-id18033 . -2387) (undo-tree-id18034 . -2533) (undo-tree-id18035 . -2533) (undo-tree-id18036 . -2703) (undo-tree-id18037 . -2703) (undo-tree-id18038 . -2783) (undo-tree-id18039 . -2783) (undo-tree-id18040 . -2920) (undo-tree-id18041 . 1186) (undo-tree-id18042 . -2039) (undo-tree-id18043 . 2162) (undo-tree-id18044 . -1066) (undo-tree-id18045 . -1447) (undo-tree-id18046 . -1447) (undo-tree-id18047 . -1447) (undo-tree-id18048 . -1447) (undo-tree-id18049 . -1447) (undo-tree-id18050 . -1447) (undo-tree-id18051 . -1447) (undo-tree-id18052 . -1447) (undo-tree-id18053 . -1447) (undo-tree-id18054 . -1447) (undo-tree-id18055 . -1447) (undo-tree-id18056 . -1447) (undo-tree-id18057 . -1447) (undo-tree-id18058 . -1447) (undo-tree-id18059 . -1447) (undo-tree-id18060 . -1447) (undo-tree-id18061 . -1447) (undo-tree-id18062 . -1447) (undo-tree-id18063 . -1447) (undo-tree-id18064 . -1447) (undo-tree-id18065 . -1447) (undo-tree-id18066 . -1447) (undo-tree-id18067 . -1440) (undo-tree-id18068 . -1440) (undo-tree-id18069 . -1440) (undo-tree-id18070 . -1440) (undo-tree-id18071 . -1440) (undo-tree-id18072 . -1440) (undo-tree-id18073 . -1440) (undo-tree-id18074 . -1440) (undo-tree-id18075 . -1440) (undo-tree-id18076 . -1440) (undo-tree-id18077 . -1440) (undo-tree-id18078 . -1440) (undo-tree-id18079 . -1440) (undo-tree-id18080 . -1440) (undo-tree-id18081 . -1440) (undo-tree-id18082 . -1440) (undo-tree-id18083 . -1380) (undo-tree-id18084 . -1380) (undo-tree-id18085 . -1380) (undo-tree-id18086 . -1380) (undo-tree-id18087 . -1380) (undo-tree-id18088 . -1380) (undo-tree-id18089 . -1380) (undo-tree-id18090 . -1380) (undo-tree-id18091 . -1380) (undo-tree-id18092 . -1380) (undo-tree-id18093 . -1380) (undo-tree-id18094 . -1380) (undo-tree-id18095 . -1380) (undo-tree-id18096 . -1380) (undo-tree-id18097 . -1380) (undo-tree-id18098 . -1380) (undo-tree-id18099 . -1380) (undo-tree-id18100 . -1380) (undo-tree-id18101 . -1380) (undo-tree-id18102 . -1380) (undo-tree-id18103 . -1380) (undo-tree-id18104 . -1380) (undo-tree-id18105 . -1380) (undo-tree-id18106 . -1380) (undo-tree-id18107 . -1380) (undo-tree-id18108 . -1380) (undo-tree-id18109 . -1380) (undo-tree-id18110 . -1380) (undo-tree-id18111 . -1380) (undo-tree-id18112 . -1380) (undo-tree-id18113 . -1380) (undo-tree-id18114 . -1380) (undo-tree-id18115 . -1380) (undo-tree-id18116 . -1380) (undo-tree-id18117 . -1380) (undo-tree-id18118 . -1380) (undo-tree-id18119 . -512) (undo-tree-id18120 . -1318) (undo-tree-id18121 . -1431) (undo-tree-id18122 . -1318) (undo-tree-id18123 . -1318) (undo-tree-id18124 . -1318) (undo-tree-id18125 . -1318) (undo-tree-id18126 . -1318) (undo-tree-id18127 . -1318) (undo-tree-id18128 . -1318) (undo-tree-id18129 . -1318) (undo-tree-id18130 . -1318) (undo-tree-id18131 . -1318) (undo-tree-id18132 . -1318) (undo-tree-id18133 . -1318) (undo-tree-id18134 . -1318) (undo-tree-id18135 . -1318) (undo-tree-id18136 . -1448) (undo-tree-id18137 . -1448) (undo-tree-id18138 . -1448) (undo-tree-id18139 . -1448) (undo-tree-id18140 . -1448) (undo-tree-id18141 . -1448) (undo-tree-id18142 . -1448) (undo-tree-id18143 . -1448) (undo-tree-id18144 . -1448) (undo-tree-id18145 . -1448) (undo-tree-id18146 . -1448) (undo-tree-id18147 . -1448) (undo-tree-id18148 . -1448) (undo-tree-id18149 . -1448) (undo-tree-id18150 . -1448) (undo-tree-id18151 . -1448) (undo-tree-id18152 . -1448) (undo-tree-id18153 . -1448) (undo-tree-id18154 . -1448) (undo-tree-id18155 . -1448) (undo-tree-id18156 . -1448) (undo-tree-id18157 . -1450) (undo-tree-id18158 . -1450) (undo-tree-id18159 . -1450) (undo-tree-id18160 . -1450) (undo-tree-id18161 . -1450) (undo-tree-id18162 . -1450) (undo-tree-id18163 . -1450) (undo-tree-id18164 . -1450) (undo-tree-id18165 . -1450) (undo-tree-id18166 . -1450) (undo-tree-id18167 . -1450) (undo-tree-id18168 . -1450) (undo-tree-id18169 . -1450) (undo-tree-id18170 . -1450) (undo-tree-id18171 . -1450) (undo-tree-id18172 . -1450) (undo-tree-id18173 . -1450) (undo-tree-id18174 . -1450) (undo-tree-id18175 . -1450) (undo-tree-id18176 . -1450) (undo-tree-id18177 . -1450) (undo-tree-id18178 . -1450) (undo-tree-id18179 . -1450) (undo-tree-id18180 . -1450) (undo-tree-id18181 . -1450) (undo-tree-id18182 . -1450) (undo-tree-id18183 . -1450) (undo-tree-id18184 . -1450) (undo-tree-id18185 . -1450) (undo-tree-id18186 . -1450) (undo-tree-id18187 . -1450) (undo-tree-id18188 . -1450) (undo-tree-id18189 . -1450) (undo-tree-id18190 . -1450) (undo-tree-id18191 . -1450) (undo-tree-id18192 . -1450) (undo-tree-id18193 . 1911) (undo-tree-id18194 . -1316) (undo-tree-id18195 . -1318) (undo-tree-id18196 . -1318) (undo-tree-id18197 . -1318) (undo-tree-id18198 . -1318) (undo-tree-id18199 . -1318) (undo-tree-id18200 . -1318) (undo-tree-id18201 . -1318) (undo-tree-id18202 . -1318) (undo-tree-id18203 . -1318) (undo-tree-id18204 . -1318) (undo-tree-id18205 . -1318) (undo-tree-id18206 . -1318) (undo-tree-id18207 . -1318) (undo-tree-id18208 . -1318) (undo-tree-id18209 . -1318) (undo-tree-id18210 . -1318) (undo-tree-id18211 . -1318) (undo-tree-id18212 . -1318) (undo-tree-id18213 . -1318) (undo-tree-id18214 . -1318) (undo-tree-id18215 . -1318) (undo-tree-id18216 . -1318) (undo-tree-id18217 . -1318) (undo-tree-id18218 . -1318) (undo-tree-id18219 . -1318) (undo-tree-id18220 . -1318) (undo-tree-id18221 . -1318) (undo-tree-id18222 . -1318) (undo-tree-id18223 . -1318) (undo-tree-id18224 . -1318) (undo-tree-id18225 . -1318) (undo-tree-id18226 . -1318) (undo-tree-id18227 . -1318) (undo-tree-id18228 . -1318) (undo-tree-id18229 . -1318) (undo-tree-id18230 . -1318) (undo-tree-id18231 . -1318) (undo-tree-id18232 . -1318) (undo-tree-id18233 . -1318) (undo-tree-id18234 . -1318) (undo-tree-id18235 . -1318) (undo-tree-id18236 . -1318) (undo-tree-id18237 . -1318) (undo-tree-id18238 . -1318) (undo-tree-id18239 . -1318) (undo-tree-id18240 . -1318) (undo-tree-id18241 . -1318) (undo-tree-id18242 . -1318) (undo-tree-id18243 . -1318) (undo-tree-id18244 . -1318) (undo-tree-id18245 . -1318) (undo-tree-id18246 . -1318) (undo-tree-id18247 . -1318) (undo-tree-id18248 . -1318) (undo-tree-id18249 . -1318) (undo-tree-id18250 . -1318) (undo-tree-id18251 . -1318) (undo-tree-id18252 . -1318) (undo-tree-id18253 . -1318) (undo-tree-id18254 . -1318) (undo-tree-id18255 . -1318) (undo-tree-id18256 . -1318) (undo-tree-id18257 . -1318) (undo-tree-id18258 . -1318) (undo-tree-id18259 . -1318) (undo-tree-id18260 . -1318) (undo-tree-id18261 . -1318) (undo-tree-id18262 . -1318) (undo-tree-id18263 . -1318) (undo-tree-id18264 . -1318) (undo-tree-id18265 . -1318) (undo-tree-id18266 . -1318) (undo-tree-id18267 . -1318) (undo-tree-id18268 . -1318) (undo-tree-id18269 . -1318) (undo-tree-id18270 . -1318) (undo-tree-id18271 . -1318) (undo-tree-id18272 . -1318) (undo-tree-id18273 . -1318) (undo-tree-id18274 . -1318) (undo-tree-id18275 . -1318) (undo-tree-id18276 . -1318) (undo-tree-id18277 . -1318) (undo-tree-id18278 . -1318) (undo-tree-id18279 . -1318) (undo-tree-id18280 . -1318) (undo-tree-id18281 . -1318) (undo-tree-id18282 . -1318) (undo-tree-id18283 . -1318) (undo-tree-id18284 . -1318) (undo-tree-id18285 . -1318) (undo-tree-id18286 . -1318) (undo-tree-id18287 . -1318) (undo-tree-id18288 . -1318) (undo-tree-id18289 . -1318) (undo-tree-id18290 . -1318) (undo-tree-id18291 . -1318) (undo-tree-id18292 . -1318) (undo-tree-id18293 . -1318) (undo-tree-id18294 . -1318) (undo-tree-id18295 . -1318) (undo-tree-id18296 . -1318) (undo-tree-id18297 . -1318) (undo-tree-id18298 . -1318) (undo-tree-id18299 . -1318) (undo-tree-id18300 . -1318) (undo-tree-id18301 . -1318) (undo-tree-id18302 . -1318) (undo-tree-id18303 . -1318) (undo-tree-id18304 . -1318) (undo-tree-id18305 . -1318) (undo-tree-id18306 . -1318) (undo-tree-id18307 . -1318) (undo-tree-id18308 . -1318) (undo-tree-id18309 . -1318) (undo-tree-id18310 . -1318) (undo-tree-id18311 . -1318) (undo-tree-id18312 . -1318) (undo-tree-id18313 . -1318) (undo-tree-id18314 . -1318) (undo-tree-id18315 . -1318) (undo-tree-id18316 . -1318) (undo-tree-id18317 . -1318) (undo-tree-id18318 . -1318) (undo-tree-id18319 . -1318) (undo-tree-id18320 . -1318) (undo-tree-id18321 . -1318) (undo-tree-id18322 . -1318) (undo-tree-id18323 . -1318) (undo-tree-id18324 . -1318) (undo-tree-id18325 . -1318) (undo-tree-id18326 . -1318) (undo-tree-id18327 . -1318) (undo-tree-id18328 . -1318) (undo-tree-id18329 . -1318) (undo-tree-id18330 . -1318) (undo-tree-id18331 . -1318) (undo-tree-id18332 . -1318) (undo-tree-id18333 . -1318) (undo-tree-id18334 . -1318) (undo-tree-id18335 . -1264) (undo-tree-id18336 . -1264) (undo-tree-id18337 . -1264) (undo-tree-id18338 . -1264) (undo-tree-id18339 . -1264) (undo-tree-id18340 . -1264) (undo-tree-id18341 . -1264) (undo-tree-id18342 . -1264) (undo-tree-id18343 . -1264) (undo-tree-id18344 . -1264) (undo-tree-id18345 . -1264) (undo-tree-id18346 . -1264) (undo-tree-id18347 . -1264) (undo-tree-id18348 . -1264) (undo-tree-id18349 . -1264) (undo-tree-id18350 . -1264) (undo-tree-id18351 . -1264) (undo-tree-id18352 . -1264) (undo-tree-id18353 . -1264) (undo-tree-id18354 . -1264) (undo-tree-id18355 . -1264) (undo-tree-id18356 . -1264) (undo-tree-id18357 . -1264) (undo-tree-id18358 . -1264) (undo-tree-id18359 . -1265) (undo-tree-id18360 . -1265) (undo-tree-id18361 . -1265) (undo-tree-id18362 . -1265) (undo-tree-id18363 . -1265) (undo-tree-id18364 . -1316) (undo-tree-id18365 . -1316) (undo-tree-id18366 . -1316) (undo-tree-id18367 . -1316) (undo-tree-id18368 . -1316) (undo-tree-id18369 . -1316) (undo-tree-id18370 . -1316) (undo-tree-id18371 . -1316) (undo-tree-id18372 . -1316) (undo-tree-id18373 . -1316) (undo-tree-id18374 . -1316) (undo-tree-id18375 . -1431) (undo-tree-id18376 . -1431) (undo-tree-id18377 . -1431) (undo-tree-id18378 . -1431) (undo-tree-id18379 . -1431) (undo-tree-id18380 . -1431) (undo-tree-id18381 . -1431) (undo-tree-id18382 . -1431) (undo-tree-id18383 . -1431) (undo-tree-id18384 . -1431) (undo-tree-id18385 . -1431) (undo-tree-id18386 . -1431) (undo-tree-id18387 . -1431) (undo-tree-id18388 . -1431) (undo-tree-id18389 . -1431) (undo-tree-id18390 . -1431) (undo-tree-id18391 . -1431) (undo-tree-id18392 . -1431) (undo-tree-id18393 . -1431) (undo-tree-id18394 . -1431) (undo-tree-id18395 . -1431) (undo-tree-id18396 . -1431) (undo-tree-id18397 . -1431) (undo-tree-id18398 . -1431) (undo-tree-id18399 . -1431) (undo-tree-id18400 . -1431) (undo-tree-id18401 . -1431) (undo-tree-id18402 . -1431) (undo-tree-id18403 . -1431) (undo-tree-id18404 . -1431) (undo-tree-id18405 . -1431) (undo-tree-id18406 . -1431) (undo-tree-id18407 . -1431) (undo-tree-id18408 . -1431) (undo-tree-id18409 . -1431) (undo-tree-id18410 . -1431) (undo-tree-id18411 . -1431) (undo-tree-id18412 . -1431) (undo-tree-id18413 . -1431) (undo-tree-id18414 . -1431) (undo-tree-id18415 . -1431) (undo-tree-id18416 . -1431) (undo-tree-id18417 . -1431) (undo-tree-id18418 . -1431) (undo-tree-id18419 . -1431) (undo-tree-id18420 . -1431) (undo-tree-id18421 . -1431) (undo-tree-id18422 . -1431) (undo-tree-id18423 . -1431) (undo-tree-id18424 . -1431) (undo-tree-id18425 . -1431) (undo-tree-id18426 . -1431) (undo-tree-id18427 . -1431) (undo-tree-id18428 . -1431) (undo-tree-id18429 . -1431) (undo-tree-id18430 . -1431) (undo-tree-id18431 . -1431) (undo-tree-id18432 . -1431) (undo-tree-id18433 . -1431) (undo-tree-id18434 . -1431) (undo-tree-id18435 . -1431) (undo-tree-id18436 . -1431) (undo-tree-id18437 . -1431) (undo-tree-id18438 . -1431) (undo-tree-id18439 . -1431) (undo-tree-id18440 . -1431) (undo-tree-id18441 . -1431) (undo-tree-id18442 . -1431) (undo-tree-id18443 . -1431) (undo-tree-id18444 . -1431) (undo-tree-id18445 . -1431) (undo-tree-id18446 . -1431) (undo-tree-id18447 . -1431) (undo-tree-id18448 . -1431) (undo-tree-id18449 . -1431) (undo-tree-id18450 . -1431) (undo-tree-id18451 . -1431) (undo-tree-id18452 . -1431) (undo-tree-id18453 . -1431) (undo-tree-id18454 . -1431) (undo-tree-id18455 . -1431) (undo-tree-id18456 . -1431) (undo-tree-id18457 . -3224) 1432) ((1 . 3225)) (25774 25756 177127 685000) 0 nil] [nil nil ((#("- The first RNN (RNN #1) of the attention-based RNN in Figure 16.3 is a bidirectional RNN that generates context vectors, 𝑐𝑐𝑖𝑖 .
" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2 104 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 104 105 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 105 128 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 128 129 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 1319) (undo-tree-id17875 . -128) (undo-tree-id17876 . -129) (undo-tree-id17877 . -129) (undo-tree-id17878 . -129) (undo-tree-id17879 . -129) (undo-tree-id17880 . -129) (undo-tree-id17881 . -129) (undo-tree-id17882 . -129) (undo-tree-id17883 . -129) (undo-tree-id17884 . -129) (undo-tree-id17885 . -129) (undo-tree-id17886 . -129) (undo-tree-id17887 . -129) (undo-tree-id17888 . -129) (undo-tree-id17889 . -129) (undo-tree-id17890 . -129) (undo-tree-id17891 . -129) (undo-tree-id17892 . -129) (undo-tree-id17893 . -129) (undo-tree-id17894 . -129) (undo-tree-id17895 . -129) (undo-tree-id17896 . -129) (undo-tree-id17897 . -129) (undo-tree-id17898 . -129) (undo-tree-id17899 . -122) (undo-tree-id17900 . -122) (undo-tree-id17901 . -122) (undo-tree-id17902 . -122) (undo-tree-id17903 . -122) (undo-tree-id17904 . -122) (undo-tree-id17905 . -122) (undo-tree-id17906 . -122) (undo-tree-id17907 . -122) (undo-tree-id17908 . -122) (undo-tree-id17909 . -122) (undo-tree-id17910 . -122) (undo-tree-id17911 . -122) (undo-tree-id17912 . -122) (undo-tree-id17913 . -122) (undo-tree-id17914 . -122) (undo-tree-id17915 . -62) (undo-tree-id17916 . -62) (undo-tree-id17917 . -62) (undo-tree-id17918 . -62) (undo-tree-id17919 . -62) (undo-tree-id17920 . -62) (undo-tree-id17921 . -62) (undo-tree-id17922 . -62) (undo-tree-id17923 . -62) (undo-tree-id17924 . -62) (undo-tree-id17925 . -62) (undo-tree-id17926 . -62) (undo-tree-id17927 . -62) (undo-tree-id17928 . -62) (undo-tree-id17929 . -62) (undo-tree-id17930 . -62) (undo-tree-id17931 . -62) (undo-tree-id17932 . -62) (undo-tree-id17933 . -62) (undo-tree-id17934 . -62) (undo-tree-id17935 . -62) (undo-tree-id17936 . -62) (undo-tree-id17937 . -62) (undo-tree-id17938 . -62) (undo-tree-id17939 . -62) (undo-tree-id17940 . -62) (undo-tree-id17941 . -62) (undo-tree-id17942 . -62) (undo-tree-id17943 . -62) (undo-tree-id17944 . -62) (undo-tree-id17945 . -62) (undo-tree-id17946 . -62) (undo-tree-id17947 . -62) (undo-tree-id17948 . -62) (undo-tree-id17949 . -62) (undo-tree-id17950 . -62) (undo-tree-id17951 . -129) (t 25774 25717 418676 10000)) ((1319 . 1448) (t 25774 25726 890836 943000)) (25774 25726 872399 756000) 0 nil])
([nil nil ((#("- 
" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 1319) (undo-tree-id18481 . -2) (undo-tree-id18482 . -3) (undo-tree-id18483 . -3) (undo-tree-id18484 . -3) (undo-tree-id18485 . -3) (undo-tree-id18486 . -3) (undo-tree-id18487 . -3) (undo-tree-id18488 . -3) (undo-tree-id18489 . -3) (undo-tree-id18490 . -3) (undo-tree-id18491 . -3) (undo-tree-id18492 . -3) (undo-tree-id18493 . -3) (undo-tree-id18494 . -3) (undo-tree-id18495 . -3) (undo-tree-id18496 . -3) (undo-tree-id18497 . -3) (undo-tree-id18498 . -3) (undo-tree-id18499 . -3) (undo-tree-id18500 . -3) (undo-tree-id18501 . -3) (undo-tree-id18502 . -3) (undo-tree-id18503 . -3) (undo-tree-id18504 . -2) (undo-tree-id18505 . -2) (undo-tree-id18506 . -2) (undo-tree-id18507 . -2) (undo-tree-id18508 . -2) (undo-tree-id18509 . -2) (undo-tree-id18510 . -2) (undo-tree-id18511 . -2) (undo-tree-id18512 . -2) (undo-tree-id18513 . -2) (undo-tree-id18514 . -2) (undo-tree-id18515 . -2) (undo-tree-id18516 . -2) (undo-tree-id18517 . -2) (undo-tree-id18518 . -2) (undo-tree-id18519 . -2) (undo-tree-id18520 . -2) (undo-tree-id18521 . -2) (undo-tree-id18522 . -2) (undo-tree-id18523 . -2) (undo-tree-id18524 . -2) (undo-tree-id18525 . -2) (undo-tree-id18526 . -2) (undo-tree-id18527 . -2) (undo-tree-id18528 . -2) (undo-tree-id18529 . -2) (undo-tree-id18530 . -2) (undo-tree-id18531 . -2) (undo-tree-id18532 . -2) (undo-tree-id18533 . -2) (undo-tree-id18534 . -2) (undo-tree-id18535 . -2) (undo-tree-id18536 . -2) (undo-tree-id18537 . -2) (undo-tree-id18538 . -2) (undo-tree-id18539 . -2) (undo-tree-id18540 . -2) (undo-tree-id18541 . -2) (undo-tree-id18542 . -2) (undo-tree-id18543 . -2) (undo-tree-id18544 . -2) (undo-tree-id18545 . -2) (undo-tree-id18546 . -2) (undo-tree-id18547 . -2) (undo-tree-id18548 . -2) (undo-tree-id18549 . -2) (undo-tree-id18550 . -2) (undo-tree-id18551 . -2) (undo-tree-id18552 . -2) (undo-tree-id18553 . -2) (undo-tree-id18554 . -2) (undo-tree-id18555 . -2) (undo-tree-id18556 . -1) (undo-tree-id18557 . -2) (undo-tree-id18558 . -2) (undo-tree-id18559 . -2) (undo-tree-id18560 . -2) (undo-tree-id18561 . -2) (undo-tree-id18562 . -2) (undo-tree-id18563 . -2) (undo-tree-id18564 . -2) (undo-tree-id18565 . -2) (undo-tree-id18566 . -2) (undo-tree-id18567 . -2) (undo-tree-id18568 . -2) (undo-tree-id18569 . -2) (undo-tree-id18570 . -2) (undo-tree-id18571 . -2) (undo-tree-id18572 . -2) (undo-tree-id18573 . -2) (undo-tree-id18574 . -2) (undo-tree-id18575 . -2) (undo-tree-id18576 . -2) (undo-tree-id18577 . -2) (undo-tree-id18578 . -2) (undo-tree-id18579 . -2) (undo-tree-id18580 . -2) (undo-tree-id18581 . -2) (undo-tree-id18582 . -2) (undo-tree-id18583 . -2) (undo-tree-id18584 . -2) (undo-tree-id18585 . -2) (undo-tree-id18586 . -2) (undo-tree-id18587 . -2) (undo-tree-id18588 . -2) (undo-tree-id18589 . -2) (undo-tree-id18590 . -2) (undo-tree-id18591 . -2) (undo-tree-id18592 . -2) (undo-tree-id18593 . -2) (undo-tree-id18594 . -2) (undo-tree-id18595 . -2) (undo-tree-id18596 . -2) (undo-tree-id18597 . -2) (undo-tree-id18598 . -2) (undo-tree-id18599 . -2) (undo-tree-id18600 . -2) (undo-tree-id18601 . -2) (undo-tree-id18602 . -2) (undo-tree-id18603 . -2) (undo-tree-id18604 . -2) (undo-tree-id18605 . -2) (undo-tree-id18606 . -2) (undo-tree-id18607 . -2) (undo-tree-id18608 . -2) (undo-tree-id18609 . -2) (undo-tree-id18610 . -2) (undo-tree-id18611 . -2) (undo-tree-id18612 . -2) (undo-tree-id18613 . -2) (undo-tree-id18614 . -2) (undo-tree-id18615 . -2) (undo-tree-id18616 . -2) (undo-tree-id18617 . -2) (undo-tree-id18618 . -2) (undo-tree-id18619 . -2) (undo-tree-id18620 . -2) (undo-tree-id18621 . -2) (undo-tree-id18622 . -2) (undo-tree-id18623 . -2) (undo-tree-id18624 . -2) (undo-tree-id18625 . -2) (undo-tree-id18626 . -2) (undo-tree-id18627 . -2) (undo-tree-id18628 . -2) (undo-tree-id18629 . -2) (undo-tree-id18630 . -2) (undo-tree-id18631 . -2) (undo-tree-id18632 . -2) (undo-tree-id18633 . -2) (undo-tree-id18634 . -2) (undo-tree-id18635 . -2) (undo-tree-id18636 . -2) (undo-tree-id18637 . -2) (undo-tree-id18638 . -2) (undo-tree-id18639 . -2) (undo-tree-id18640 . -2) (undo-tree-id18641 . -2) (undo-tree-id18642 . -2) (undo-tree-id18643 . -2) (undo-tree-id18644 . -2) (undo-tree-id18645 . -2) (undo-tree-id18646 . -2) (undo-tree-id18647 . -2) (undo-tree-id18648 . -2) (undo-tree-id18649 . -2) (undo-tree-id18650 . -2) (undo-tree-id18651 . -2) (undo-tree-id18652 . -2) (undo-tree-id18653 . -2) (undo-tree-id18654 . -2) (undo-tree-id18655 . -2) (undo-tree-id18656 . -2) (undo-tree-id18657 . -2) (undo-tree-id18658 . -2) (undo-tree-id18659 . -2) (undo-tree-id18660 . -2) (undo-tree-id18661 . -2) (undo-tree-id18662 . -2) (undo-tree-id18663 . -2) (undo-tree-id18664 . -2) (undo-tree-id18665 . -2) (undo-tree-id18666 . -2) (undo-tree-id18667 . -2) (undo-tree-id18668 . -2) (undo-tree-id18669 . -2) (undo-tree-id18670 . -2) (undo-tree-id18671 . -2) (undo-tree-id18672 . -2) (undo-tree-id18673 . -2) (undo-tree-id18674 . -2) (undo-tree-id18675 . -2) (undo-tree-id18676 . -2) (undo-tree-id18677 . -2) (undo-tree-id18678 . -2) (undo-tree-id18679 . -2) (undo-tree-id18680 . -2) (undo-tree-id18681 . -2) (undo-tree-id18682 . -2) (undo-tree-id18683 . -2) (undo-tree-id18684 . -2) (undo-tree-id18685 . -2) (undo-tree-id18686 . -2) (undo-tree-id18687 . -2) (undo-tree-id18688 . -2) (undo-tree-id18689 . -2) (undo-tree-id18690 . -2) (undo-tree-id18691 . -2) (undo-tree-id18692 . -2) (undo-tree-id18693 . -2) (undo-tree-id18694 . -2) (undo-tree-id18695 . -2) (undo-tree-id18696 . -2) (undo-tree-id18697 . -2) (undo-tree-id18698 . -2) (undo-tree-id18699 . -2) (undo-tree-id18700 . -2) (undo-tree-id18701 . -2) (undo-tree-id18702 . -2) (undo-tree-id18703 . -2) (undo-tree-id18704 . -2) (undo-tree-id18705 . -2) (undo-tree-id18706 . -2) (undo-tree-id18707 . -2) (undo-tree-id18708 . -2) (undo-tree-id18709 . -2) (undo-tree-id18710 . -2) (undo-tree-id18711 . -2) (undo-tree-id18712 . -2) (undo-tree-id18713 . -2) (undo-tree-id18714 . -2) (undo-tree-id18715 . -2) (undo-tree-id18716 . -2) (undo-tree-id18717 . -2) (undo-tree-id18718 . -2) (undo-tree-id18719 . -2) (undo-tree-id18720 . -2) (undo-tree-id18721 . -2) (undo-tree-id18722 . -2) (undo-tree-id18723 . -2) (undo-tree-id18724 . -2) (undo-tree-id18725 . -2) (undo-tree-id18726 . -2) (undo-tree-id18727 . -2) (undo-tree-id18728 . -2) (undo-tree-id18729 . -2) (undo-tree-id18730 . -2) (undo-tree-id18731 . -2) (undo-tree-id18732 . -2) (undo-tree-id18733 . -2) (undo-tree-id18734 . -2) (undo-tree-id18735 . -2) (undo-tree-id18736 . -2) (undo-tree-id18737 . -2) (undo-tree-id18738 . -2) (undo-tree-id18739 . -2) (undo-tree-id18740 . -2) (undo-tree-id18741 . -2) (undo-tree-id18742 . -2) (undo-tree-id18743 . -2) (undo-tree-id18744 . -2) (undo-tree-id18745 . -2) (undo-tree-id18746 . -2) (undo-tree-id18747 . -2) (undo-tree-id18748 . -2) (undo-tree-id18749 . -2) (undo-tree-id18750 . -2) (undo-tree-id18751 . -2) (undo-tree-id18752 . -2) (undo-tree-id18753 . -1) (undo-tree-id18754 . -1) (undo-tree-id18755 . -1) (undo-tree-id18756 . -1) (undo-tree-id18757 . -1) (undo-tree-id18758 . -1) (undo-tree-id18759 . -1) (undo-tree-id18760 . -1) (undo-tree-id18761 . -1) (undo-tree-id18762 . -1) (undo-tree-id18763 . -1) (undo-tree-id18764 . -1) (undo-tree-id18765 . -1) (undo-tree-id18766 . -1) (undo-tree-id18767 . -3) 1320) nil (25774 25762 583103 101000) 0 nil])
nil
nil
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1319) (undo-tree-id18458 . 1) (undo-tree-id18459 . -1) (undo-tree-id18460 . -1) (undo-tree-id18461 . -1) (undo-tree-id18462 . -1) (undo-tree-id18463 . -1) (undo-tree-id18464 . -1) (undo-tree-id18465 . -1) (undo-tree-id18466 . -1) (undo-tree-id18467 . -1) (undo-tree-id18468 . -1) (undo-tree-id18469 . -1) (undo-tree-id18470 . -1) (undo-tree-id18471 . -1) (undo-tree-id18472 . -1) (undo-tree-id18473 . -1) (undo-tree-id18474 . -1) (undo-tree-id18475 . -1) (undo-tree-id18476 . -1) (undo-tree-id18477 . -1) (undo-tree-id18478 . -1) (undo-tree-id18479 . -1) (undo-tree-id18480 . -1)) nil (25774 25762 582315 979000) 0 nil])
([nil nil ((#("- You can think of a context vector as an augmented version of the input vector, 𝑥𝑥 (𝑖𝑖).
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 73 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 73 89 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 89 90 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1319) (undo-tree-id18992 . 90) (undo-tree-id18993 . -89) (undo-tree-id18994 . -2) (undo-tree-id18995 . -2) (undo-tree-id18996 . -2) (undo-tree-id18997 . -2) (undo-tree-id18998 . -2) (undo-tree-id18999 . -2) (undo-tree-id19000 . -2) (undo-tree-id19001 . -2) (undo-tree-id19002 . -2) (undo-tree-id19003 . -2) (undo-tree-id19004 . -2) (undo-tree-id19005 . -2) (undo-tree-id19006 . -2) (undo-tree-id19007 . -2) (undo-tree-id19008 . -2) (undo-tree-id19009 . -2) (undo-tree-id19010 . -2) (undo-tree-id19011 . -2) (undo-tree-id19012 . -2) (undo-tree-id19013 . -2) (undo-tree-id19014 . -2) (undo-tree-id19015 . -2) (undo-tree-id19016 . -2) (undo-tree-id19017 . -2) (undo-tree-id19018 . -2) (undo-tree-id19019 . -2) (undo-tree-id19020 . -2) (undo-tree-id19021 . -2) (undo-tree-id19022 . -2) (undo-tree-id19023 . -2) (undo-tree-id19024 . -2) (undo-tree-id19025 . -2) (undo-tree-id19026 . -2) (undo-tree-id19027 . -2) (undo-tree-id19028 . -2) (undo-tree-id19029 . -2) (undo-tree-id19030 . -2) (undo-tree-id19031 . -2) (undo-tree-id19032 . -2) (undo-tree-id19033 . -2) (undo-tree-id19034 . -2) (undo-tree-id19035 . -2) (undo-tree-id19036 . -2) (undo-tree-id19037 . -2) (undo-tree-id19038 . -2) (undo-tree-id19039 . -2) (undo-tree-id19040 . -2) (undo-tree-id19041 . -2) (undo-tree-id19042 . -2) (undo-tree-id19043 . -2) (undo-tree-id19044 . -2) (undo-tree-id19045 . -2) (undo-tree-id19046 . -2) (undo-tree-id19047 . -2) (undo-tree-id19048 . -2) (undo-tree-id19049 . -90) 1321 (t 25774 25762 603454 909000)) nil (25774 25768 727961 444000) 0 nil])
([nil nil ((#("In " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1321) (undo-tree-id19060 . -2) (undo-tree-id19061 . -3) (t 25774 25768 751563 23000)) nil (25774 25774 996552 499000) 0 nil])
([nil nil ((#("other " 0 6 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1321) (undo-tree-id19058 . -5) (undo-tree-id19059 . -6)) nil (25774 25774 996548 248000) 0 nil])
([nil nil ((#("words" 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1321) (undo-tree-id19056 . -4) (undo-tree-id19057 . -5)) nil (25774 25774 996543 664000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1321) (undo-tree-id19054 . -1) (undo-tree-id19055 . -2)) nil (25774 25774 996540 684000) 0 nil])
([nil nil ((#("the " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1321) (undo-tree-id19052 . -3) (undo-tree-id19053 . -4)) nil (25774 25774 996535 688000) 0 nil])
([nil nil ((#("𝑐𝑐𝑖𝑖 " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1321) (undo-tree-id19050 . -4) (undo-tree-id19051 . -5)) nil (25774 25774 996527 53000) 0 nil])
([nil nil ((1321 . 1322) (#("i" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1321) (t 25774 25775 19673 752000)) nil (25774 25777 672285 553000) 0 nil])
([nil nil ((1321 . 1322) (#("I" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1321)) nil (25774 25777 672700 590000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1420) (undo-tree-id19074 . -1) (undo-tree-id19075 . -1) (undo-tree-id19076 . -1) (t 25774 25779 171747 380000)) nil (25774 25800 997845 393000) 0 nil] [nil nil ((1321 . 1322) (#("I" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1321) (undo-tree-id19062 . -1)) ((1321 . 1322) (#("w" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 1321) (undo-tree-id19063 . 1)) (25774 25777 672278 499000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1421) (undo-tree-id19064 . -2) (undo-tree-id19065 . -2) (undo-tree-id19066 . -2) (undo-tree-id19067 . -2) (undo-tree-id19068 . -2) (undo-tree-id19069 . -2) (undo-tree-id19070 . -2) (undo-tree-id19071 . -2) (undo-tree-id19072 . -2) (undo-tree-id19073 . -2) 1423 (1420 . 1423) 1379) nil (25774 25800 997838 727000) 0 nil])
nil
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1537) (undo-tree-id19077 . -2) (undo-tree-id19078 . -2) (undo-tree-id19079 . -2) (undo-tree-id19080 . -2) (undo-tree-id19081 . -2) (undo-tree-id19082 . -2) (undo-tree-id19083 . -2) (undo-tree-id19084 . -2) (undo-tree-id19085 . -2) (undo-tree-id19086 . -2) 1539 (1536 . 1539) (t 25774 25801 20138 394000) 1485) nil (25774 25816 985369 509000) 0 nil])
([nil nil ((#("As we can see in Figure 16.3" 0 28 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1424) (undo-tree-id19089 . -27) (undo-tree-id19090 . -28) (t 25774 25817 8428 240000)) nil (25774 25820 791028 456000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1424) (undo-tree-id19087 . -1) (undo-tree-id19088 . -2)) nil (25774 25820 791022 746000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1632) (undo-tree-id19091 . -2) (undo-tree-id19092 . -2) (undo-tree-id19093 . -2) (undo-tree-id19094 . -2) (undo-tree-id19095 . -2) (undo-tree-id19096 . -2) (undo-tree-id19097 . -2) (undo-tree-id19098 . -2) (undo-tree-id19099 . -2) (undo-tree-id19100 . -2) 1634 (1631 . 1634) (t 25774 25820 816497 727000) 1571) nil (25774 25827 178681 231000) 0 nil])
([nil nil ((#("- In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection.
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 44 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 44 46 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 46 47 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 47 48 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 48 63 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 63 65 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 65 66 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 66 123 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 123 124 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 1508) (undo-tree-id19105 . -123) (undo-tree-id19106 . -124) (undo-tree-id19107 . -124) (undo-tree-id19108 . -124) (undo-tree-id19109 . -124) (undo-tree-id19110 . -124) (undo-tree-id19111 . -124) (undo-tree-id19112 . -124) (undo-tree-id19113 . -124) (undo-tree-id19114 . -124) (undo-tree-id19115 . -2) (undo-tree-id19116 . -124) (undo-tree-id19117 . -124) (undo-tree-id19118 . -124) (undo-tree-id19119 . -124) (undo-tree-id19120 . -124) (undo-tree-id19121 . -124) (undo-tree-id19122 . -124) (undo-tree-id19123 . -124) (undo-tree-id19124 . -124) (undo-tree-id19125 . -124) (undo-tree-id19126 . -124) (undo-tree-id19127 . -124) (undo-tree-id19128 . -124) (undo-tree-id19129 . -124) (undo-tree-id19130 . 65) (undo-tree-id19131 . -62) (undo-tree-id19132 . -63) (undo-tree-id19133 . -63) (undo-tree-id19134 . -63) (undo-tree-id19135 . -63) (undo-tree-id19136 . -63) (undo-tree-id19137 . -63) (undo-tree-id19138 . -63) (undo-tree-id19139 . -63) (undo-tree-id19140 . -63) (undo-tree-id19141 . -63) (undo-tree-id19142 . -63) (undo-tree-id19143 . -63) (undo-tree-id19144 . -63) (undo-tree-id19145 . -63) (undo-tree-id19146 . -63) (undo-tree-id19147 . -63) (undo-tree-id19148 . -2) (undo-tree-id19149 . -2) (undo-tree-id19150 . -2) (undo-tree-id19151 . -2) (undo-tree-id19152 . -2) (undo-tree-id19153 . -2) (undo-tree-id19154 . -2) (undo-tree-id19155 . -2) (undo-tree-id19156 . -2) (undo-tree-id19157 . -2) (undo-tree-id19158 . -2) (undo-tree-id19159 . -2) (undo-tree-id19160 . -2) (undo-tree-id19161 . -2) (undo-tree-id19162 . -2) (undo-tree-id19163 . -2) (undo-tree-id19164 . -2) (undo-tree-id19165 . -2) (undo-tree-id19166 . -2) (undo-tree-id19167 . -2) (undo-tree-id19168 . -2) (undo-tree-id19169 . -2) (undo-tree-id19170 . -2) (undo-tree-id19171 . -2) (undo-tree-id19172 . -2) (undo-tree-id19173 . -2) (undo-tree-id19174 . -2) (undo-tree-id19175 . -2) (undo-tree-id19176 . -2) (undo-tree-id19177 . -2) (undo-tree-id19178 . -2) (undo-tree-id19179 . -2) (undo-tree-id19180 . -2) (undo-tree-id19181 . -2) (undo-tree-id19182 . -2) (undo-tree-id19183 . -2) (undo-tree-id19184 . -2) (undo-tree-id19185 . -2) (undo-tree-id19186 . -2) (undo-tree-id19187 . -2) (undo-tree-id19188 . -2) (undo-tree-id19189 . -2) (undo-tree-id19190 . -2) (undo-tree-id19191 . -2) (undo-tree-id19192 . -2) (undo-tree-id19193 . -2) (undo-tree-id19194 . -2) (undo-tree-id19195 . -2) (undo-tree-id19196 . -2) (undo-tree-id19197 . -2) (undo-tree-id19198 . -2) (undo-tree-id19199 . -2) (undo-tree-id19200 . -2) (undo-tree-id19201 . -2) (undo-tree-id19202 . -2) (undo-tree-id19203 . -2) (undo-tree-id19204 . -2) (undo-tree-id19205 . -2) (undo-tree-id19206 . -2) (undo-tree-id19207 . -124) 1510 (t 25774 25827 200614 600000)) nil (25774 25840 363560 822000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1508) (undo-tree-id19101 . 1) (undo-tree-id19102 . -1) (undo-tree-id19103 . -1) (undo-tree-id19104 . -1)) nil (25774 25840 363485 849000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1564) (undo-tree-id19281 . -1) (undo-tree-id19282 . -1) (t 25774 25840 380857 381000)) nil (25774 25862 700712 362000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1564) (undo-tree-id19279 . -1) (undo-tree-id19280 . -1)) nil (25774 25862 700709 928000) 0 nil])
([nil nil ((#("(1. . . 𝑇𝑇 )" 0 12 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1597) (undo-tree-id19242 . -11) (undo-tree-id19243 . -2) (undo-tree-id19244 . -2) (undo-tree-id19245 . -2) (undo-tree-id19246 . -2) (undo-tree-id19247 . -2) (undo-tree-id19248 . -2) (undo-tree-id19249 . -2) (undo-tree-id19250 . -2) (undo-tree-id19251 . -2) (undo-tree-id19252 . -2) (undo-tree-id19253 . -2) (undo-tree-id19254 . -2) (undo-tree-id19255 . -2) (undo-tree-id19256 . -2) (undo-tree-id19257 . -2) (undo-tree-id19258 . -2) (undo-tree-id19259 . -2) (undo-tree-id19260 . -2) (undo-tree-id19261 . -2) (undo-tree-id19262 . -2) (undo-tree-id19263 . -2) (undo-tree-id19264 . -2) (undo-tree-id19265 . -2) (undo-tree-id19266 . -2) (undo-tree-id19267 . -2) (undo-tree-id19268 . -2) (undo-tree-id19269 . -2) (undo-tree-id19270 . -2) (undo-tree-id19271 . -2) (undo-tree-id19272 . -2) (undo-tree-id19273 . -2) (undo-tree-id19274 . 12) (undo-tree-id19275 . -1) (undo-tree-id19276 . 1) (undo-tree-id19277 . -12) (undo-tree-id19278 . -12)) nil (25774 25862 700706 433000) 0 nil])
([nil nil ((#("(𝑇𝑇𝑇 𝑇 𝑇 𝑇)" 0 9 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 9 11 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1618) (undo-tree-id19240 . -10) (undo-tree-id19241 . -11) 1597) nil (25774 25862 700672 677000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1617) (undo-tree-id19210 . -1) (undo-tree-id19211 . -1) (undo-tree-id19212 . -1) (undo-tree-id19213 . -1) (undo-tree-id19214 . -1) (undo-tree-id19215 . -1) (undo-tree-id19216 . -1) (undo-tree-id19217 . -1) (undo-tree-id19218 . -1) (undo-tree-id19219 . -1) (undo-tree-id19220 . -1) (undo-tree-id19221 . -1) (undo-tree-id19222 . -1) (undo-tree-id19223 . -1) (undo-tree-id19224 . -1) (undo-tree-id19225 . -1) (undo-tree-id19226 . -1) (undo-tree-id19227 . -1) (undo-tree-id19228 . -1) (undo-tree-id19229 . -1) (undo-tree-id19230 . -1) (undo-tree-id19231 . -1) (undo-tree-id19232 . -1) (undo-tree-id19233 . -1) (undo-tree-id19234 . -1) (undo-tree-id19235 . -1) (undo-tree-id19236 . -1) (undo-tree-id19237 . -1) (undo-tree-id19238 . -1) (undo-tree-id19239 . -1)) nil (25774 25862 701191 743000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1597) (undo-tree-id19283 . -1) (undo-tree-id19284 . -1) (undo-tree-id19285 . -1) (undo-tree-id19286 . -1) (undo-tree-id19287 . -1) (undo-tree-id19288 . -1) (undo-tree-id19289 . -1) (undo-tree-id19290 . -1) (undo-tree-id19291 . -1) (undo-tree-id19292 . -1) (undo-tree-id19293 . -1) (undo-tree-id19294 . -1) (undo-tree-id19295 . -1) (undo-tree-id19296 . -1) (undo-tree-id19297 . -1) (undo-tree-id19298 . -1) (undo-tree-id19299 . -1) (undo-tree-id19300 . -1)) nil (25774 25864 383025 87000) 0 nil] [nil nil ((#("s" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1599) (undo-tree-id19208 . -1) (undo-tree-id19209 . -1)) ((1599 . 1600)) (25774 25862 700343 199000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1618) (undo-tree-id19301 . -2) (undo-tree-id19302 . -2) (undo-tree-id19303 . -2) (undo-tree-id19304 . -2) (undo-tree-id19305 . -2) (undo-tree-id19306 . -2) (undo-tree-id19307 . -2) (undo-tree-id19308 . -2) (undo-tree-id19309 . -2) (undo-tree-id19310 . -2) 1620 (1617 . 1620) (t 25774 25864 401304 855000) 1597) nil (25774 25866 417663 733000) 0 nil])
nil
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1775) (undo-tree-id19311 . -2) (undo-tree-id19312 . -2) (undo-tree-id19313 . -2) (undo-tree-id19314 . -2) (undo-tree-id19315 . -2) (undo-tree-id19316 . -2) (undo-tree-id19317 . -2) (undo-tree-id19318 . -2) (undo-tree-id19319 . -2) (undo-tree-id19320 . -2) 1777 (1774 . 1777) (t 25774 25866 437343 75000) 1738) nil (25774 25873 521544 991000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1695) (undo-tree-id19323 . -1) (undo-tree-id19324 . -1) (t 25774 25873 541476 779000)) nil (25774 25882 582422 597000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1695) (undo-tree-id19321 . -1) (undo-tree-id19322 . -1)) nil (25774 25882 582416 461000) 0 nil])
([nil nil ((#("—think of reading a sentence in reverse order.
" 0 10 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 10 19 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 19 46 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 46 47 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 1726) (undo-tree-id19325 . -46) (undo-tree-id19326 . -46) (undo-tree-id19327 . -46) (undo-tree-id19328 . -46) (undo-tree-id19329 . -47) (undo-tree-id19330 . -46) (undo-tree-id19331 . -5) (undo-tree-id19332 . -5) (undo-tree-id19333 . -5) (undo-tree-id19334 . -5) (undo-tree-id19335 . -5) (undo-tree-id19336 . -5) (undo-tree-id19337 . -5) (undo-tree-id19338 . -5) (undo-tree-id19339 . -5) (undo-tree-id19340 . -5) (undo-tree-id19341 . -5) (undo-tree-id19342 . -5) (undo-tree-id19343 . -5) (undo-tree-id19344 . -5) (undo-tree-id19345 . -5) (undo-tree-id19346 . -5) (undo-tree-id19347 . -5) (undo-tree-id19348 . -5) (undo-tree-id19349 . -5) (undo-tree-id19350 . -5) (undo-tree-id19351 . -5) (undo-tree-id19352 . -5) (undo-tree-id19353 . -5) (undo-tree-id19354 . -5) (undo-tree-id19355 . -5) (undo-tree-id19356 . -5) (undo-tree-id19357 . -5) (undo-tree-id19358 . -5) (undo-tree-id19359 . -5) (undo-tree-id19360 . -5) (undo-tree-id19361 . -5) (undo-tree-id19362 . -46) (undo-tree-id19363 . -46) (undo-tree-id19364 . -46) (undo-tree-id19365 . -46) (undo-tree-id19366 . -46) (undo-tree-id19367 . -46) (undo-tree-id19368 . -46) (undo-tree-id19369 . -46) (undo-tree-id19370 . -46) (undo-tree-id19371 . -46) (undo-tree-id19372 . -46) (undo-tree-id19373 . -46) (undo-tree-id19374 . -46) (undo-tree-id19375 . -46) (undo-tree-id19376 . -46) (undo-tree-id19377 . -46) (undo-tree-id19378 . -46) (undo-tree-id19379 . -46) (undo-tree-id19380 . -46) (undo-tree-id19381 . -46) (undo-tree-id19382 . -46) (undo-tree-id19383 . -46) (undo-tree-id19384 . -47) 1772 (t 25774 25882 601648 74000)) nil (25774 25904 202249 84000) 0 nil])
([nil nil ((1726 . 1727)) nil (25774 25904 202194 121000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1917) (undo-tree-id19385 . -2) (undo-tree-id19386 . -2) (undo-tree-id19387 . -2) (undo-tree-id19388 . -2) (undo-tree-id19389 . -2) (undo-tree-id19390 . -2) (undo-tree-id19391 . -2) (undo-tree-id19392 . -2) (undo-tree-id19393 . -2) (undo-tree-id19394 . -2) 1919 (1916 . 1919) (t 25774 25904 222060 261000) 1911) nil (25774 25922 838218 479000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1915) (undo-tree-id19405 . -1) (undo-tree-id19406 . -1) (t 25774 25922 858419 315000)) nil (25774 25962 949891 633000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -2063) (undo-tree-id19395 . -2) (undo-tree-id19396 . -2) (undo-tree-id19397 . -2) (undo-tree-id19398 . -2) (undo-tree-id19399 . -2) (undo-tree-id19400 . -2) (undo-tree-id19401 . -2) (undo-tree-id19402 . -2) (undo-tree-id19403 . -2) (undo-tree-id19404 . -2) 2065 (2062 . 2065) 2061) nil (25774 25962 949885 532000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -2234) (undo-tree-id19437 . -2) (undo-tree-id19438 . -2) (undo-tree-id19439 . -2) (undo-tree-id19440 . -2) (undo-tree-id19441 . -2) (undo-tree-id19442 . -2) (undo-tree-id19443 . -2) (undo-tree-id19444 . -2) (undo-tree-id19445 . -2) (undo-tree-id19446 . -2) 2236 (2233 . 2236) (t 25774 25962 971203 328000) 2190) nil (25774 25975 87625 335000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -2315) (undo-tree-id19427 . -2) (undo-tree-id19428 . -2) (undo-tree-id19429 . -2) (undo-tree-id19430 . -2) (undo-tree-id19431 . -2) (undo-tree-id19432 . -2) (undo-tree-id19433 . -2) (undo-tree-id19434 . -2) (undo-tree-id19435 . -2) (undo-tree-id19436 . -2) 2317 (2314 . 2317) 2295) nil (25774 25975 87615 242000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -2453) (undo-tree-id19417 . -2) (undo-tree-id19418 . -2) (undo-tree-id19419 . -2) (undo-tree-id19420 . -2) (undo-tree-id19421 . -2) (undo-tree-id19422 . -2) (undo-tree-id19423 . -2) (undo-tree-id19424 . -2) (undo-tree-id19425 . -2) (undo-tree-id19426 . -2) 2455 (2452 . 2455) 2439) nil (25774 25975 87606 671000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -2612) (undo-tree-id19407 . -2) (undo-tree-id19408 . -2) (undo-tree-id19409 . -2) (undo-tree-id19410 . -2) (undo-tree-id19411 . -2) (undo-tree-id19412 . -2) (undo-tree-id19413 . -2) (undo-tree-id19414 . -2) (undo-tree-id19415 . -2) (undo-tree-id19416 . -2) 2614 (2611 . 2614) 2564) nil (25774 25975 87596 77000) 0 nil])
([nil nil ((1318 . 1320) (1317 . 1318) (t 25774 25975 111443 485000)) nil (25774 26240 768935 375000) 0 nil])
([nil nil ((1317 . 1318) 1271) nil (25774 26240 772293 880000) 0 nil])
([nil nil ((1320 . 1321)) nil (25774 26259 981987 649000) 0 nil] [nil nil ((nil rear-nonsticky nil 1448 . 1449) (nil fontified nil 1422 . 1449) (nil fontified nil 1319 . 1422) (1319 . 1449)) ((#("The first RNN (RNN #1) of the attention-based RNN in Figure 16.3 is a bidirectional RNN that generates
context vectors, 𝑐𝑐𝑖𝑖 . You" 0 103 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 103 129 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 129 130 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil rear-nonsticky nil)) . 1319) (undo-tree-id19447 . -129) (undo-tree-id19448 . -129) (undo-tree-id19449 . -129) (undo-tree-id19450 . -129) (nil fontified t 1319 . 1422) (nil rear-nonsticky t 1448 . 1449)) (25774 26240 768928 663000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1450 . 1451) (nil fontified nil 1424 . 1451) (nil fontified nil 1321 . 1424) (1321 . 1451) 1320) nil (25774 26259 981986 720000) 0 nil])
nil
([nil nil ((#("The first RNN (" 0 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 1321) (undo-tree-id19741 . -14) (undo-tree-id19742 . -14) (undo-tree-id19743 . -14) (undo-tree-id19744 . -14) (undo-tree-id19745 . -4) (undo-tree-id19746 . -4) (undo-tree-id19747 . -4) (undo-tree-id19748 . -4) (undo-tree-id19749 . -4) (undo-tree-id19750 . -4) (undo-tree-id19751 . -4) (undo-tree-id19752 . -4) (undo-tree-id19753 . -4) (undo-tree-id19754 . -4) (undo-tree-id19755 . -4) (undo-tree-id19756 . -4) (undo-tree-id19757 . -4) (undo-tree-id19758 . -4) (undo-tree-id19759 . -4) (undo-tree-id19760 . -4) (undo-tree-id19761 . -10) (undo-tree-id19762 . -10) (undo-tree-id19763 . -10) (undo-tree-id19764 . -10) (undo-tree-id19765 . -10) (undo-tree-id19766 . -10) (undo-tree-id19767 . -10) (undo-tree-id19768 . -10) (undo-tree-id19769 . -10) (undo-tree-id19770 . -10) (undo-tree-id19771 . -10) (undo-tree-id19772 . -10) (undo-tree-id19773 . -10) (undo-tree-id19774 . -10) (undo-tree-id19775 . -10) (undo-tree-id19776 . -10) (undo-tree-id19777 . -14) (undo-tree-id19778 . -14) (undo-tree-id19779 . -14) (undo-tree-id19780 . -14) (undo-tree-id19781 . -14) (undo-tree-id19782 . -14) (undo-tree-id19783 . -14) (undo-tree-id19784 . -14) (undo-tree-id19785 . -14) (undo-tree-id19786 . -14) (undo-tree-id19787 . -14) (undo-tree-id19788 . -14) (undo-tree-id19789 . -14) (undo-tree-id19790 . -14) (undo-tree-id19791 . -14) (undo-tree-id19792 . -14) (undo-tree-id19793 . -14) (undo-tree-id19794 . -14) (undo-tree-id19795 . -14) (undo-tree-id19796 . -14) (undo-tree-id19797 . -14) (undo-tree-id19798 . -10) (undo-tree-id19799 . -10) (undo-tree-id19800 . -10) (undo-tree-id19801 . -10) (undo-tree-id19802 . -10) (undo-tree-id19803 . -10) (undo-tree-id19804 . -10) (undo-tree-id19805 . -10) (undo-tree-id19806 . -10) (undo-tree-id19807 . -10) (undo-tree-id19808 . -10) (undo-tree-id19809 . -10) (undo-tree-id19810 . -10) (undo-tree-id19811 . -10) (undo-tree-id19812 . -10) (undo-tree-id19813 . -10) (undo-tree-id19814 . -4) (undo-tree-id19815 . -4) (undo-tree-id19816 . -4) (undo-tree-id19817 . -4) (undo-tree-id19818 . -4) (undo-tree-id19819 . -4) (undo-tree-id19820 . -4) (undo-tree-id19821 . -4) (undo-tree-id19822 . -4) (undo-tree-id19823 . -4) (undo-tree-id19824 . -4) (undo-tree-id19825 . -4) (undo-tree-id19826 . -4) (undo-tree-id19827 . -4) (undo-tree-id19828 . -4) (undo-tree-id19829 . -4) (undo-tree-id19830 . -4) (undo-tree-id19831 . -4) (undo-tree-id19832 . -4) (undo-tree-id19833 . -4) (undo-tree-id19834 . -4) (undo-tree-id19835 . -15) (undo-tree-id19836 . -14) (undo-tree-id19837 . -2) (undo-tree-id19838 . -2) (undo-tree-id19839 . -2) (undo-tree-id19840 . -2) (undo-tree-id19841 . -2) (undo-tree-id19842 . -2) (undo-tree-id19843 . -2) (undo-tree-id19844 . -2) (undo-tree-id19845 . -2) (undo-tree-id19846 . -2) (undo-tree-id19847 . -2) (undo-tree-id19848 . -2) (undo-tree-id19849 . -2) (undo-tree-id19850 . -2) (undo-tree-id19851 . -2) (undo-tree-id19852 . -2) (undo-tree-id19853 . -2) (undo-tree-id19854 . -2) (undo-tree-id19855 . -2) (undo-tree-id19856 . -2) (undo-tree-id19857 . -2) (undo-tree-id19858 . -8) (undo-tree-id19859 . -8) (undo-tree-id19860 . -8) (undo-tree-id19861 . -8) (undo-tree-id19862 . -8) (undo-tree-id19863 . -8) (undo-tree-id19864 . -8) (undo-tree-id19865 . -8) (undo-tree-id19866 . -8) (undo-tree-id19867 . -8) (undo-tree-id19868 . -8) (undo-tree-id19869 . -8) (undo-tree-id19870 . -8) (undo-tree-id19871 . -8) (undo-tree-id19872 . -8) (undo-tree-id19873 . -8) (undo-tree-id19874 . -8) (undo-tree-id19875 . -8) (undo-tree-id19876 . -8) (undo-tree-id19877 . -8) (undo-tree-id19878 . -8) (undo-tree-id19879 . 5) (undo-tree-id19880 . -13) (undo-tree-id19881 . -12) (undo-tree-id19882 . -12) (undo-tree-id19883 . -12) (undo-tree-id19884 . -12) (undo-tree-id19885 . -12) (undo-tree-id19886 . -12) (undo-tree-id19887 . -12) (undo-tree-id19888 . -12) (undo-tree-id19889 . -12) (undo-tree-id19890 . -12) (undo-tree-id19891 . -12) (undo-tree-id19892 . -12) (undo-tree-id19893 . -12) (undo-tree-id19894 . -12) (undo-tree-id19895 . -12) (undo-tree-id19896 . -12) (undo-tree-id19897 . -12) (undo-tree-id19898 . -12) (undo-tree-id19899 . -12) (undo-tree-id19900 . -12) (undo-tree-id19901 . -12) (undo-tree-id19902 . -14) (undo-tree-id19903 . -14) (undo-tree-id19904 . -14) (undo-tree-id19905 . -14) (undo-tree-id19906 . -14) (undo-tree-id19907 . -14) (undo-tree-id19908 . -14) (undo-tree-id19909 . -14) (undo-tree-id19910 . -14) (undo-tree-id19911 . -14) (undo-tree-id19912 . -14) (undo-tree-id19913 . -14) (undo-tree-id19914 . -14) (undo-tree-id19915 . -14) (undo-tree-id19916 . -14) (undo-tree-id19917 . 1) (undo-tree-id19918 . -15) (undo-tree-id19919 . -14) (undo-tree-id19920 . -14) (undo-tree-id19921 . -14) (undo-tree-id19922 . -14) (undo-tree-id19923 . -14) (undo-tree-id19924 . -14) (undo-tree-id19925 . -14) (undo-tree-id19926 . -14) (undo-tree-id19927 . -14) (undo-tree-id19928 . -14) (undo-tree-id19929 . -14) (undo-tree-id19930 . -14) (undo-tree-id19931 . -15) 1335) nil (25774 26259 981979 338000) 0 nil])
([nil nil ((#(")" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 1327) (undo-tree-id19721 . -1) (undo-tree-id19722 . -1) (undo-tree-id19723 . -1) (undo-tree-id19724 . -1) (undo-tree-id19725 . -1) (undo-tree-id19726 . -1) (undo-tree-id19727 . -1) (undo-tree-id19728 . -1) (undo-tree-id19729 . -1) (undo-tree-id19730 . -1) (undo-tree-id19731 . -1) (undo-tree-id19732 . -1) (undo-tree-id19733 . -1) (undo-tree-id19734 . -1) (undo-tree-id19735 . -1) (undo-tree-id19736 . -1) (undo-tree-id19737 . 1) (undo-tree-id19738 . -1) (undo-tree-id19739 . -1) (undo-tree-id19740 . -1)) nil (25774 26259 981688 354000) 0 nil])
([nil nil ((#("of the attention-based RNN in Figure 16.3 " 0 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 1328) (undo-tree-id19453 . -41) (undo-tree-id19454 . -41) (undo-tree-id19455 . -41) (undo-tree-id19456 . -41) (undo-tree-id19457 . -1) (undo-tree-id19458 . -1) (undo-tree-id19459 . -1) (undo-tree-id19460 . -1) (undo-tree-id19461 . -1) (undo-tree-id19462 . -1) (undo-tree-id19463 . -1) (undo-tree-id19464 . -1) (undo-tree-id19465 . -1) (undo-tree-id19466 . -1) (undo-tree-id19467 . -1) (undo-tree-id19468 . -1) (undo-tree-id19469 . -1) (undo-tree-id19470 . -1) (undo-tree-id19471 . -1) (undo-tree-id19472 . -1) (undo-tree-id19473 . -1) (undo-tree-id19474 . -1) (undo-tree-id19475 . -1) (undo-tree-id19476 . -1) (undo-tree-id19477 . -1) (undo-tree-id19478 . -1) (undo-tree-id19479 . -1) (undo-tree-id19480 . -1) (undo-tree-id19481 . -1) (undo-tree-id19482 . -1) (undo-tree-id19483 . -42) (undo-tree-id19484 . -41) (undo-tree-id19485 . -1) (undo-tree-id19486 . -1) (undo-tree-id19487 . -1) (undo-tree-id19488 . -1) (undo-tree-id19489 . -1) (undo-tree-id19490 . -1) (undo-tree-id19491 . -1) (undo-tree-id19492 . -1) (undo-tree-id19493 . -1) (undo-tree-id19494 . -1) (undo-tree-id19495 . -1) (undo-tree-id19496 . -1) (undo-tree-id19497 . -1) (undo-tree-id19498 . -1) (undo-tree-id19499 . -1) (undo-tree-id19500 . -1) (undo-tree-id19501 . -1) (undo-tree-id19502 . -1) (undo-tree-id19503 . -1) (undo-tree-id19504 . -1) (undo-tree-id19505 . -1) (undo-tree-id19506 . -5) (undo-tree-id19507 . -5) (undo-tree-id19508 . -5) (undo-tree-id19509 . -5) (undo-tree-id19510 . -5) (undo-tree-id19511 . -5) (undo-tree-id19512 . -5) (undo-tree-id19513 . -5) (undo-tree-id19514 . -5) (undo-tree-id19515 . -5) (undo-tree-id19516 . -5) (undo-tree-id19517 . -5) (undo-tree-id19518 . -5) (undo-tree-id19519 . -5) (undo-tree-id19520 . -5) (undo-tree-id19521 . -5) (undo-tree-id19522 . -5) (undo-tree-id19523 . -5) (undo-tree-id19524 . -5) (undo-tree-id19525 . -5) (undo-tree-id19526 . -5) (undo-tree-id19527 . -15) (undo-tree-id19528 . -15) (undo-tree-id19529 . -15) (undo-tree-id19530 . -15) (undo-tree-id19531 . -15) (undo-tree-id19532 . -15) (undo-tree-id19533 . -15) (undo-tree-id19534 . -15) (undo-tree-id19535 . -15) (undo-tree-id19536 . -15) (undo-tree-id19537 . -15) (undo-tree-id19538 . -15) (undo-tree-id19539 . -15) (undo-tree-id19540 . -15) (undo-tree-id19541 . -15) (undo-tree-id19542 . -15) (undo-tree-id19543 . -15) (undo-tree-id19544 . -15) (undo-tree-id19545 . -15) (undo-tree-id19546 . -15) (undo-tree-id19547 . -15) (undo-tree-id19548 . -16) (undo-tree-id19549 . -16) (undo-tree-id19550 . -16) (undo-tree-id19551 . -16) (undo-tree-id19552 . -16) (undo-tree-id19553 . -16) (undo-tree-id19554 . -16) (undo-tree-id19555 . -16) (undo-tree-id19556 . -16) (undo-tree-id19557 . -16) (undo-tree-id19558 . -16) (undo-tree-id19559 . -16) (undo-tree-id19560 . -16) (undo-tree-id19561 . -16) (undo-tree-id19562 . -16) (undo-tree-id19563 . -16) (undo-tree-id19564 . -16) (undo-tree-id19565 . -16) (undo-tree-id19566 . -16) (undo-tree-id19567 . -16) (undo-tree-id19568 . -16) (undo-tree-id19569 . -16) (undo-tree-id19570 . -16) (undo-tree-id19571 . -16) (undo-tree-id19572 . -16) (undo-tree-id19573 . -16) (undo-tree-id19574 . -21) (undo-tree-id19575 . -21) (undo-tree-id19576 . -21) (undo-tree-id19577 . -21) (undo-tree-id19578 . -21) (undo-tree-id19579 . -21) (undo-tree-id19580 . -21) (undo-tree-id19581 . -21) (undo-tree-id19582 . -21) (undo-tree-id19583 . -21) (undo-tree-id19584 . -21) (undo-tree-id19585 . 19) (undo-tree-id19586 . -26) (undo-tree-id19587 . -25) (undo-tree-id19588 . -25) (undo-tree-id19589 . -25) (undo-tree-id19590 . -25) (undo-tree-id19591 . -25) (undo-tree-id19592 . -25) (undo-tree-id19593 . -25) (undo-tree-id19594 . -25) (undo-tree-id19595 . -25) (undo-tree-id19596 . -25) (undo-tree-id19597 . -25) (undo-tree-id19598 . -28) (undo-tree-id19599 . -28) (undo-tree-id19600 . -28) (undo-tree-id19601 . -28) (undo-tree-id19602 . -28) (undo-tree-id19603 . -28) (undo-tree-id19604 . -28) (undo-tree-id19605 . -28) (undo-tree-id19606 . -28) (undo-tree-id19607 . -28) (undo-tree-id19608 . -28) (undo-tree-id19609 . -35) (undo-tree-id19610 . -35) (undo-tree-id19611 . -35) (undo-tree-id19612 . -35) (undo-tree-id19613 . -35) (undo-tree-id19614 . -35) (undo-tree-id19615 . -35) (undo-tree-id19616 . -35) (undo-tree-id19617 . -35) (undo-tree-id19618 . -35) (undo-tree-id19619 . -35) (undo-tree-id19620 . -38) (undo-tree-id19621 . -38) (undo-tree-id19622 . -38) (undo-tree-id19623 . -38) (undo-tree-id19624 . -38) (undo-tree-id19625 . -38) (undo-tree-id19626 . -38) (undo-tree-id19627 . -38) (undo-tree-id19628 . -38) (undo-tree-id19629 . -38) (undo-tree-id19630 . -38) (undo-tree-id19631 . -38) (undo-tree-id19632 . -38) (undo-tree-id19633 . -38) (undo-tree-id19634 . -38) (undo-tree-id19635 . -38) (undo-tree-id19636 . -38) (undo-tree-id19637 . -38) (undo-tree-id19638 . -38) (undo-tree-id19639 . -38) (undo-tree-id19640 . -38) (undo-tree-id19641 . -39) (undo-tree-id19642 . -39) (undo-tree-id19643 . -39) (undo-tree-id19644 . -39) (undo-tree-id19645 . -39) (undo-tree-id19646 . -39) (undo-tree-id19647 . -39) (undo-tree-id19648 . -39) (undo-tree-id19649 . -39) (undo-tree-id19650 . -39) (undo-tree-id19651 . -39) (undo-tree-id19652 . -39) (undo-tree-id19653 . -39) (undo-tree-id19654 . -39) (undo-tree-id19655 . -39) (undo-tree-id19656 . -39) (undo-tree-id19657 . -39) (undo-tree-id19658 . -39) (undo-tree-id19659 . -39) (undo-tree-id19660 . -39) (undo-tree-id19661 . -39) (undo-tree-id19662 . -39) (undo-tree-id19663 . -39) (undo-tree-id19664 . -39) (undo-tree-id19665 . -39) (undo-tree-id19666 . -39) (undo-tree-id19667 . -40) (undo-tree-id19668 . -40) (undo-tree-id19669 . -40) (undo-tree-id19670 . -40) (undo-tree-id19671 . -40) (undo-tree-id19672 . -40) (undo-tree-id19673 . -40) (undo-tree-id19674 . -40) (undo-tree-id19675 . -40) (undo-tree-id19676 . -40) (undo-tree-id19677 . -40) (undo-tree-id19678 . -40) (undo-tree-id19679 . -40) (undo-tree-id19680 . -40) (undo-tree-id19681 . -40) (undo-tree-id19682 . -40) (undo-tree-id19683 . -40) (undo-tree-id19684 . -40) (undo-tree-id19685 . -40) (undo-tree-id19686 . -40) (undo-tree-id19687 . -40) (undo-tree-id19688 . -40) (undo-tree-id19689 . -40) (undo-tree-id19690 . -40) (undo-tree-id19691 . -40) (undo-tree-id19692 . -40) (undo-tree-id19693 . -40) (undo-tree-id19694 . -40) (undo-tree-id19695 . -40) (undo-tree-id19696 . -40) (undo-tree-id19697 . -40) (undo-tree-id19698 . -41) (undo-tree-id19699 . -41) (undo-tree-id19700 . -41) (undo-tree-id19701 . -41) (undo-tree-id19702 . -41) (undo-tree-id19703 . -41) (undo-tree-id19704 . -41) (undo-tree-id19705 . -41) (undo-tree-id19706 . -41) (undo-tree-id19707 . -41) (undo-tree-id19708 . -41) (undo-tree-id19709 . -41) (undo-tree-id19710 . -41) (undo-tree-id19711 . -41) (undo-tree-id19712 . -41) (undo-tree-id19713 . -41) (undo-tree-id19714 . -41) (undo-tree-id19715 . -41) (undo-tree-id19716 . -41) (undo-tree-id19717 . -41) (undo-tree-id19718 . -41) (undo-tree-id19719 . -41) (undo-tree-id19720 . -42) 1369) nil (25774 26259 980571 217000) 0 nil])
([nil nil ((1365 . 1366) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -1365) (undo-tree-id19451 . -1) (undo-tree-id19452 . -1) 1328) nil (25774 26264 46679 246000) 0 nil])
([nil nil ((#("𝑐𝑐𝑖𝑖 . You " 0 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 9 10 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 10 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 1383) (undo-tree-id20533 . 1) (undo-tree-id20534 . -10) (undo-tree-id20535 . -11) (undo-tree-id20536 . -11) (t 25774 26260 1389 905000)) nil (25774 26269 260373 968000) 0 nil] [nil nil ((#("- RNN #1 is a bidirectional RNN that generates context vectors, 𝑐𝑐𝑖𝑖 . You 
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 2 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 9 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 46 47 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 47 73 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 73 74 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 74 75 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 75 76 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 1319) (undo-tree-id19932 . 2) (undo-tree-id19933 . -75) (undo-tree-id19934 . -9) (undo-tree-id19935 . -9) (undo-tree-id19936 . 67) (undo-tree-id19937 . -9) (undo-tree-id19938 . -9) (undo-tree-id19939 . -46) (undo-tree-id19940 . -8) (undo-tree-id19941 . -8) (undo-tree-id19942 . -8) (undo-tree-id19943 . -8) (undo-tree-id19944 . -8) (undo-tree-id19945 . -8) (undo-tree-id19946 . -8) (undo-tree-id19947 . -8) (undo-tree-id19948 . -8) (undo-tree-id19949 . -8) (undo-tree-id19950 . -8) (undo-tree-id19951 . -8) (undo-tree-id19952 . -8) (undo-tree-id19953 . -8) (undo-tree-id19954 . -8) (undo-tree-id19955 . -8) (undo-tree-id19956 . -2) (undo-tree-id19957 . -2) (undo-tree-id19958 . -2) (undo-tree-id19959 . -2) (undo-tree-id19960 . -2) (undo-tree-id19961 . -2) (undo-tree-id19962 . -2) (undo-tree-id19963 . -2) (undo-tree-id19964 . -2) (undo-tree-id19965 . -2) (undo-tree-id19966 . -2) (undo-tree-id19967 . -2) (undo-tree-id19968 . -2) (undo-tree-id19969 . -2) (undo-tree-id19970 . -2) (undo-tree-id19971 . -2) (undo-tree-id19972 . -2) (undo-tree-id19973 . -2) (undo-tree-id19974 . -2) (undo-tree-id19975 . -2) (undo-tree-id19976 . -2) (undo-tree-id19977 . -2) (undo-tree-id19978 . -2) (undo-tree-id19979 . -2) (undo-tree-id19980 . -2) (undo-tree-id19981 . -2) (undo-tree-id19982 . -2) (undo-tree-id19983 . -2) (undo-tree-id19984 . -2) (undo-tree-id19985 . -2) (undo-tree-id19986 . -2) (undo-tree-id19987 . -2) (undo-tree-id19988 . -2) (undo-tree-id19989 . -2) (undo-tree-id19990 . -2) (undo-tree-id19991 . -2) (undo-tree-id19992 . -2) (undo-tree-id19993 . -2) (undo-tree-id19994 . -2) (undo-tree-id19995 . -2) (undo-tree-id19996 . -2) (undo-tree-id19997 . -2) (undo-tree-id19998 . -2) (undo-tree-id19999 . -2) (undo-tree-id20000 . -2) (undo-tree-id20001 . -2) (undo-tree-id20002 . -2) (undo-tree-id20003 . -2) (undo-tree-id20004 . -2) (undo-tree-id20005 . -2) (undo-tree-id20006 . -2) (undo-tree-id20007 . -2) (undo-tree-id20008 . -2) (undo-tree-id20009 . -2) (undo-tree-id20010 . -2) (undo-tree-id20011 . -2) (undo-tree-id20012 . -2) (undo-tree-id20013 . -2) (undo-tree-id20014 . -2) (undo-tree-id20015 . -2) (undo-tree-id20016 . -2) (undo-tree-id20017 . -2) (undo-tree-id20018 . -2) (undo-tree-id20019 . -2) (undo-tree-id20020 . -2) (undo-tree-id20021 . -2) (undo-tree-id20022 . -2) (undo-tree-id20023 . -2) (undo-tree-id20024 . -2) (undo-tree-id20025 . -2) (undo-tree-id20026 . -2) (undo-tree-id20027 . -2) (undo-tree-id20028 . -2) (undo-tree-id20029 . -2) (undo-tree-id20030 . -2) (undo-tree-id20031 . -2) (undo-tree-id20032 . -2) (undo-tree-id20033 . -2) (undo-tree-id20034 . -2) (undo-tree-id20035 . -2) (undo-tree-id20036 . -2) (undo-tree-id20037 . -2) (undo-tree-id20038 . -2) (undo-tree-id20039 . -2) (undo-tree-id20040 . -2) (undo-tree-id20041 . -2) (undo-tree-id20042 . -2) (undo-tree-id20043 . -2) (undo-tree-id20044 . -2) (undo-tree-id20045 . -2) (undo-tree-id20046 . -2) (undo-tree-id20047 . -2) (undo-tree-id20048 . -2) (undo-tree-id20049 . -2) (undo-tree-id20050 . -2) (undo-tree-id20051 . -2) (undo-tree-id20052 . -2) (undo-tree-id20053 . -2) (undo-tree-id20054 . -2) (undo-tree-id20055 . -2) (undo-tree-id20056 . -2) (undo-tree-id20057 . -2) (undo-tree-id20058 . -2) (undo-tree-id20059 . -2) (undo-tree-id20060 . -2) (undo-tree-id20061 . -2) (undo-tree-id20062 . -2) (undo-tree-id20063 . -2) (undo-tree-id20064 . -2) (undo-tree-id20065 . -2) (undo-tree-id20066 . -2) (undo-tree-id20067 . -2) (undo-tree-id20068 . -2) (undo-tree-id20069 . -2) (undo-tree-id20070 . -2) (undo-tree-id20071 . -2) (undo-tree-id20072 . -2) (undo-tree-id20073 . -2) (undo-tree-id20074 . -2) (undo-tree-id20075 . -2) (undo-tree-id20076 . -2) (undo-tree-id20077 . -2) (undo-tree-id20078 . -2) (undo-tree-id20079 . -2) (undo-tree-id20080 . -2) (undo-tree-id20081 . -2) (undo-tree-id20082 . -2) (undo-tree-id20083 . -2) (undo-tree-id20084 . -2) (undo-tree-id20085 . -2) (undo-tree-id20086 . -2) (undo-tree-id20087 . -2) (undo-tree-id20088 . -2) (undo-tree-id20089 . -2) (undo-tree-id20090 . -2) (undo-tree-id20091 . -2) (undo-tree-id20092 . -2) (undo-tree-id20093 . -2) (undo-tree-id20094 . -2) (undo-tree-id20095 . -2) (undo-tree-id20096 . -2) (undo-tree-id20097 . -2) (undo-tree-id20098 . -2) (undo-tree-id20099 . -2) (undo-tree-id20100 . -2) (undo-tree-id20101 . -2) (undo-tree-id20102 . -2) (undo-tree-id20103 . -2) (undo-tree-id20104 . -2) (undo-tree-id20105 . -2) (undo-tree-id20106 . -2) (undo-tree-id20107 . -2) (undo-tree-id20108 . -2) (undo-tree-id20109 . -2) (undo-tree-id20110 . -2) (undo-tree-id20111 . -2) (undo-tree-id20112 . -2) (undo-tree-id20113 . -2) (undo-tree-id20114 . -2) (undo-tree-id20115 . -2) (undo-tree-id20116 . -2) (undo-tree-id20117 . -2) (undo-tree-id20118 . -2) (undo-tree-id20119 . -2) (undo-tree-id20120 . -2) (undo-tree-id20121 . -2) (undo-tree-id20122 . -2) (undo-tree-id20123 . -2) (undo-tree-id20124 . -2) (undo-tree-id20125 . -2) (undo-tree-id20126 . -2) (undo-tree-id20127 . -2) (undo-tree-id20128 . -2) (undo-tree-id20129 . -2) (undo-tree-id20130 . -2) (undo-tree-id20131 . -2) (undo-tree-id20132 . -2) (undo-tree-id20133 . -2) (undo-tree-id20134 . -2) (undo-tree-id20135 . 74) (undo-tree-id20136 . -5) (undo-tree-id20137 . -9) (undo-tree-id20138 . -9) (undo-tree-id20139 . -9) (undo-tree-id20140 . -9) (undo-tree-id20141 . -9) (undo-tree-id20142 . -9) (undo-tree-id20143 . -9) (undo-tree-id20144 . -9) (undo-tree-id20145 . -9) (undo-tree-id20146 . -9) (undo-tree-id20147 . -9) (undo-tree-id20148 . -9) (undo-tree-id20149 . -9) (undo-tree-id20150 . -9) (undo-tree-id20151 . -9) (undo-tree-id20152 . -9) (undo-tree-id20153 . -9) (undo-tree-id20154 . -9) (undo-tree-id20155 . -9) (undo-tree-id20156 . -9) (undo-tree-id20157 . -9) (undo-tree-id20158 . -9) (undo-tree-id20159 . -9) (undo-tree-id20160 . -9) (undo-tree-id20161 . -9) (undo-tree-id20162 . -9) (undo-tree-id20163 . -9) (undo-tree-id20164 . -9) (undo-tree-id20165 . -9) (undo-tree-id20166 . -9) (undo-tree-id20167 . -9) (undo-tree-id20168 . -9) (undo-tree-id20169 . -9) (undo-tree-id20170 . -9) (undo-tree-id20171 . -9) (undo-tree-id20172 . -9) (undo-tree-id20173 . -9) (undo-tree-id20174 . -9) (undo-tree-id20175 . -9) (undo-tree-id20176 . -9) (undo-tree-id20177 . -9) (undo-tree-id20178 . -9) (undo-tree-id20179 . -9) (undo-tree-id20180 . -9) (undo-tree-id20181 . -9) (undo-tree-id20182 . -9) (undo-tree-id20183 . -9) (undo-tree-id20184 . -9) (undo-tree-id20185 . -9) (undo-tree-id20186 . -9) (undo-tree-id20187 . -9) (undo-tree-id20188 . -9) (undo-tree-id20189 . -9) (undo-tree-id20190 . -9) (undo-tree-id20191 . -9) (undo-tree-id20192 . -9) (undo-tree-id20193 . -9) (undo-tree-id20194 . -9) (undo-tree-id20195 . -9) (undo-tree-id20196 . -9) (undo-tree-id20197 . -9) (undo-tree-id20198 . -9) (undo-tree-id20199 . -9) (undo-tree-id20200 . -9) (undo-tree-id20201 . -9) (undo-tree-id20202 . -9) (undo-tree-id20203 . -9) (undo-tree-id20204 . -9) (undo-tree-id20205 . -9) (undo-tree-id20206 . -9) (undo-tree-id20207 . -9) (undo-tree-id20208 . -9) (undo-tree-id20209 . -9) (undo-tree-id20210 . -9) (undo-tree-id20211 . -9) (undo-tree-id20212 . -9) (undo-tree-id20213 . -9) (undo-tree-id20214 . -9) (undo-tree-id20215 . -9) (undo-tree-id20216 . -9) (undo-tree-id20217 . -9) (undo-tree-id20218 . -9) (undo-tree-id20219 . -9) (undo-tree-id20220 . -9) (undo-tree-id20221 . -9) (undo-tree-id20222 . -9) (undo-tree-id20223 . -9) (undo-tree-id20224 . -9) (undo-tree-id20225 . -9) (undo-tree-id20226 . -9) (undo-tree-id20227 . -9) (undo-tree-id20228 . -9) (undo-tree-id20229 . -9) (undo-tree-id20230 . -9) (undo-tree-id20231 . -9) (undo-tree-id20232 . -9) (undo-tree-id20233 . -9) (undo-tree-id20234 . -9) (undo-tree-id20235 . -9) (undo-tree-id20236 . -9) (undo-tree-id20237 . -9) (undo-tree-id20238 . -9) (undo-tree-id20239 . -9) (undo-tree-id20240 . -9) (undo-tree-id20241 . -9) (undo-tree-id20242 . -9) (undo-tree-id20243 . -9) (undo-tree-id20244 . -9) (undo-tree-id20245 . -9) (undo-tree-id20246 . -9) (undo-tree-id20247 . -9) (undo-tree-id20248 . -9) (undo-tree-id20249 . -9) (undo-tree-id20250 . -9) (undo-tree-id20251 . -9) (undo-tree-id20252 . -9) (undo-tree-id20253 . -9) (undo-tree-id20254 . -9) (undo-tree-id20255 . -9) (undo-tree-id20256 . -9) (undo-tree-id20257 . -9) (undo-tree-id20258 . -9) (undo-tree-id20259 . -9) (undo-tree-id20260 . -9) (undo-tree-id20261 . -9) (undo-tree-id20262 . -9) (undo-tree-id20263 . -9) (undo-tree-id20264 . -9) (undo-tree-id20265 . -9) (undo-tree-id20266 . -9) (undo-tree-id20267 . -9) (undo-tree-id20268 . -9) (undo-tree-id20269 . -9) (undo-tree-id20270 . -9) (undo-tree-id20271 . -9) (undo-tree-id20272 . -9) (undo-tree-id20273 . -9) (undo-tree-id20274 . -9) (undo-tree-id20275 . -9) (undo-tree-id20276 . -9) (undo-tree-id20277 . -9) (undo-tree-id20278 . -9) (undo-tree-id20279 . -9) (undo-tree-id20280 . -9) (undo-tree-id20281 . -9) (undo-tree-id20282 . -9) (undo-tree-id20283 . -9) (undo-tree-id20284 . -9) (undo-tree-id20285 . -9) (undo-tree-id20286 . -9) (undo-tree-id20287 . -9) (undo-tree-id20288 . -9) (undo-tree-id20289 . -9) (undo-tree-id20290 . -9) (undo-tree-id20291 . -9) (undo-tree-id20292 . -9) (undo-tree-id20293 . -9) (undo-tree-id20294 . -9) (undo-tree-id20295 . -9) (undo-tree-id20296 . -9) (undo-tree-id20297 . -9) (undo-tree-id20298 . -9) (undo-tree-id20299 . -9) (undo-tree-id20300 . -9) (undo-tree-id20301 . -9) (undo-tree-id20302 . -9) (undo-tree-id20303 . -9) (undo-tree-id20304 . -9) (undo-tree-id20305 . -9) (undo-tree-id20306 . -9) (undo-tree-id20307 . -9) (undo-tree-id20308 . -9) (undo-tree-id20309 . -9) (undo-tree-id20310 . -9) (undo-tree-id20311 . -9) (undo-tree-id20312 . -9) (undo-tree-id20313 . -9) (undo-tree-id20314 . -9) (undo-tree-id20315 . -9) (undo-tree-id20316 . -9) (undo-tree-id20317 . -9) (undo-tree-id20318 . -9) (undo-tree-id20319 . -9) (undo-tree-id20320 . -9) (undo-tree-id20321 . -9) (undo-tree-id20322 . -9) (undo-tree-id20323 . -9) (undo-tree-id20324 . -9) (undo-tree-id20325 . -9) (undo-tree-id20326 . -9) (undo-tree-id20327 . -9) (undo-tree-id20328 . -9) (undo-tree-id20329 . -9) (undo-tree-id20330 . -9) (undo-tree-id20331 . -9) (undo-tree-id20332 . -9) (undo-tree-id20333 . -9) (undo-tree-id20334 . -9) (undo-tree-id20335 . -9) (undo-tree-id20336 . -9) (undo-tree-id20337 . -9) (undo-tree-id20338 . -9) (undo-tree-id20339 . -9) (undo-tree-id20340 . -9) (undo-tree-id20341 . -9) (undo-tree-id20342 . -9) (undo-tree-id20343 . -9) (undo-tree-id20344 . -9) (undo-tree-id20345 . -9) (undo-tree-id20346 . -9) (undo-tree-id20347 . -9) (undo-tree-id20348 . -9) (undo-tree-id20349 . -9) (undo-tree-id20350 . -9) (undo-tree-id20351 . -9) (undo-tree-id20352 . -9) (undo-tree-id20353 . -9) (undo-tree-id20354 . -9) (undo-tree-id20355 . -9) (undo-tree-id20356 . -9) (undo-tree-id20357 . -9) (undo-tree-id20358 . -9) (undo-tree-id20359 . -9) (undo-tree-id20360 . -9) (undo-tree-id20361 . -9) (undo-tree-id20362 . -9) (undo-tree-id20363 . -9) (undo-tree-id20364 . -9) (undo-tree-id20365 . -9) (undo-tree-id20366 . -9) (undo-tree-id20367 . -9) (undo-tree-id20368 . -9) (undo-tree-id20369 . -9) (undo-tree-id20370 . -9) (undo-tree-id20371 . -9) (undo-tree-id20372 . -9) (undo-tree-id20373 . -9) (undo-tree-id20374 . -9) (undo-tree-id20375 . -9) (undo-tree-id20376 . -9) (undo-tree-id20377 . -9) (undo-tree-id20378 . -9) (undo-tree-id20379 . -9) (undo-tree-id20380 . -9) (undo-tree-id20381 . -9) (undo-tree-id20382 . -9) (undo-tree-id20383 . -9) (undo-tree-id20384 . -9) (undo-tree-id20385 . -9) (undo-tree-id20386 . -9) (undo-tree-id20387 . -9) (undo-tree-id20388 . -9) (undo-tree-id20389 . -9) (undo-tree-id20390 . -9) (undo-tree-id20391 . -9) (undo-tree-id20392 . -9) (undo-tree-id20393 . -9) (undo-tree-id20394 . -9) (undo-tree-id20395 . -46) (undo-tree-id20396 . -64) (undo-tree-id20397 . -46) (undo-tree-id20398 . -46) (undo-tree-id20399 . -46) (undo-tree-id20400 . -46) (undo-tree-id20401 . -46) (undo-tree-id20402 . -46) (undo-tree-id20403 . -46) (undo-tree-id20404 . -46) (undo-tree-id20405 . -46) (undo-tree-id20406 . -46) (undo-tree-id20407 . -46) (undo-tree-id20408 . -46) (undo-tree-id20409 . -46) (undo-tree-id20410 . -46) (undo-tree-id20411 . -46) (undo-tree-id20412 . -46) (undo-tree-id20413 . -46) (undo-tree-id20414 . -46) (undo-tree-id20415 . -46) (undo-tree-id20416 . -46) (undo-tree-id20417 . -46) (undo-tree-id20418 . -46) (undo-tree-id20419 . -46) (undo-tree-id20420 . -46) (undo-tree-id20421 . -46) (undo-tree-id20422 . -46) (undo-tree-id20423 . -46) (undo-tree-id20424 . -46) (undo-tree-id20425 . -46) (undo-tree-id20426 . -47) (undo-tree-id20427 . -47) (undo-tree-id20428 . -47) (undo-tree-id20429 . -47) (undo-tree-id20430 . -47) (undo-tree-id20431 . -47) (undo-tree-id20432 . -47) (undo-tree-id20433 . -47) (undo-tree-id20434 . -47) (undo-tree-id20435 . -47) (undo-tree-id20436 . -47) (undo-tree-id20437 . -47) (undo-tree-id20438 . -47) (undo-tree-id20439 . -47) (undo-tree-id20440 . -47) (undo-tree-id20441 . -47) (undo-tree-id20442 . -55) (undo-tree-id20443 . -55) (undo-tree-id20444 . -55) (undo-tree-id20445 . -55) (undo-tree-id20446 . -55) (undo-tree-id20447 . -55) (undo-tree-id20448 . -55) (undo-tree-id20449 . -55) (undo-tree-id20450 . -55) (undo-tree-id20451 . -55) (undo-tree-id20452 . -55) (undo-tree-id20453 . -55) (undo-tree-id20454 . -55) (undo-tree-id20455 . -55) (undo-tree-id20456 . -55) (undo-tree-id20457 . -55) (undo-tree-id20458 . -62) (undo-tree-id20459 . -62) (undo-tree-id20460 . -62) (undo-tree-id20461 . -62) (undo-tree-id20462 . -62) (undo-tree-id20463 . -62) (undo-tree-id20464 . -62) (undo-tree-id20465 . -62) (undo-tree-id20466 . -62) (undo-tree-id20467 . -62) (undo-tree-id20468 . -62) (undo-tree-id20469 . -62) (undo-tree-id20470 . -62) (undo-tree-id20471 . -62) (undo-tree-id20472 . -62) (undo-tree-id20473 . -62) (undo-tree-id20474 . -62) (undo-tree-id20475 . -62) (undo-tree-id20476 . -62) (undo-tree-id20477 . -62) (undo-tree-id20478 . -62) (undo-tree-id20479 . -64) (undo-tree-id20480 . -64) (undo-tree-id20481 . -64) (undo-tree-id20482 . -64) (undo-tree-id20483 . -64) (undo-tree-id20484 . -64) (undo-tree-id20485 . -64) (undo-tree-id20486 . -64) (undo-tree-id20487 . -64) (undo-tree-id20488 . -64) (undo-tree-id20489 . -64) (undo-tree-id20490 . -64) (undo-tree-id20491 . -64) (undo-tree-id20492 . -64) (undo-tree-id20493 . -64) (undo-tree-id20494 . -64) (undo-tree-id20495 . -64) (undo-tree-id20496 . -64) (undo-tree-id20497 . -64) (undo-tree-id20498 . -64) (undo-tree-id20499 . -64) (undo-tree-id20500 . -64) (undo-tree-id20501 . -64) (undo-tree-id20502 . -64) (undo-tree-id20503 . -64) (undo-tree-id20504 . -64) (undo-tree-id20505 . -64) (undo-tree-id20506 . -64) (undo-tree-id20507 . -64) (undo-tree-id20508 . -64) (undo-tree-id20509 . -64) (undo-tree-id20510 . -64) (undo-tree-id20511 . -64) (undo-tree-id20512 . -64) (undo-tree-id20513 . -64) (undo-tree-id20514 . -64) (undo-tree-id20515 . -64) (undo-tree-id20516 . -64) (undo-tree-id20517 . -64) (undo-tree-id20518 . -64) (undo-tree-id20519 . -64) (undo-tree-id20520 . -64) (undo-tree-id20521 . -64) (undo-tree-id20522 . -64) (undo-tree-id20523 . -76) 1383 (t 25774 26260 1389 905000)) ((1319 . 1395)) (25774 26264 45637 78000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 1381) (undo-tree-id20524 . -1) (undo-tree-id20525 . -1) (undo-tree-id20526 . -1) (undo-tree-id20527 . -1) (undo-tree-id20528 . -1) (undo-tree-id20529 . -1) (undo-tree-id20530 . -1) (undo-tree-id20531 . -1) (undo-tree-id20532 . -1)) nil (25774 26269 260365 918000) 0 nil])
nil
([nil nil ((1385 . 1386) (1384 . 1385) (1383 . 1384) (#("-" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1383) (undo-tree-id20705 . -1) (undo-tree-id20706 . -1) (undo-tree-id20707 . -1) (undo-tree-id20708 . -1) (undo-tree-id20709 . -1) (undo-tree-id20710 . -1) (undo-tree-id20711 . -1) (undo-tree-id20712 . -1) (undo-tree-id20713 . -1) 1384 (1383 . 1384) (t 25774 26269 281591 822000)) nil (25774 26308 116311 255000) 0 nil])
([nil nil ((1385 . 1386)) nil (25774 26308 116301 798000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1463 . 1464) (nil fontified nil 1386 . 1464) (1386 . 1464) 1385) nil (25774 26308 116300 539000) 0 nil])
([nil nil ((#("You can think of a " 0 19 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 1386) (undo-tree-id20540 . -18) (undo-tree-id20541 . -18) (undo-tree-id20542 . -18) (undo-tree-id20543 . -18) (undo-tree-id20544 . -16) (undo-tree-id20545 . -16) (undo-tree-id20546 . -16) (undo-tree-id20547 . -16) (undo-tree-id20548 . -16) (undo-tree-id20549 . -16) (undo-tree-id20550 . -16) (undo-tree-id20551 . -16) (undo-tree-id20552 . -16) (undo-tree-id20553 . -16) (undo-tree-id20554 . -16) (undo-tree-id20555 . -16) (undo-tree-id20556 . -16) (undo-tree-id20557 . -16) (undo-tree-id20558 . -16) (undo-tree-id20559 . -16) (undo-tree-id20560 . -19) (undo-tree-id20561 . -18) (undo-tree-id20562 . -2) (undo-tree-id20563 . -2) (undo-tree-id20564 . -2) (undo-tree-id20565 . -2) (undo-tree-id20566 . -2) (undo-tree-id20567 . -2) (undo-tree-id20568 . -2) (undo-tree-id20569 . -2) (undo-tree-id20570 . -2) (undo-tree-id20571 . -2) (undo-tree-id20572 . -2) (undo-tree-id20573 . -2) (undo-tree-id20574 . -2) (undo-tree-id20575 . -2) (undo-tree-id20576 . -2) (undo-tree-id20577 . -2) (undo-tree-id20578 . -2) (undo-tree-id20579 . -2) (undo-tree-id20580 . -2) (undo-tree-id20581 . -2) (undo-tree-id20582 . -2) (undo-tree-id20583 . -6) (undo-tree-id20584 . -6) (undo-tree-id20585 . -6) (undo-tree-id20586 . -6) (undo-tree-id20587 . -6) (undo-tree-id20588 . -6) (undo-tree-id20589 . -6) (undo-tree-id20590 . -6) (undo-tree-id20591 . -6) (undo-tree-id20592 . -6) (undo-tree-id20593 . -6) (undo-tree-id20594 . -6) (undo-tree-id20595 . -6) (undo-tree-id20596 . -6) (undo-tree-id20597 . -6) (undo-tree-id20598 . -6) (undo-tree-id20599 . -6) (undo-tree-id20600 . -6) (undo-tree-id20601 . -6) (undo-tree-id20602 . -6) (undo-tree-id20603 . -6) (undo-tree-id20604 . -12) (undo-tree-id20605 . -12) (undo-tree-id20606 . -12) (undo-tree-id20607 . -12) (undo-tree-id20608 . -12) (undo-tree-id20609 . -12) (undo-tree-id20610 . -12) (undo-tree-id20611 . -12) (undo-tree-id20612 . -12) (undo-tree-id20613 . -12) (undo-tree-id20614 . -12) (undo-tree-id20615 . -12) (undo-tree-id20616 . -12) (undo-tree-id20617 . -12) (undo-tree-id20618 . -12) (undo-tree-id20619 . -12) (undo-tree-id20620 . -12) (undo-tree-id20621 . -12) (undo-tree-id20622 . -12) (undo-tree-id20623 . -12) (undo-tree-id20624 . -12) (undo-tree-id20625 . -15) (undo-tree-id20626 . -15) (undo-tree-id20627 . -15) (undo-tree-id20628 . -15) (undo-tree-id20629 . -15) (undo-tree-id20630 . -15) (undo-tree-id20631 . -15) (undo-tree-id20632 . -15) (undo-tree-id20633 . -15) (undo-tree-id20634 . -15) (undo-tree-id20635 . -15) (undo-tree-id20636 . -15) (undo-tree-id20637 . -15) (undo-tree-id20638 . -15) (undo-tree-id20639 . -15) (undo-tree-id20640 . -15) (undo-tree-id20641 . -15) (undo-tree-id20642 . -15) (undo-tree-id20643 . -15) (undo-tree-id20644 . -15) (undo-tree-id20645 . -15) (undo-tree-id20646 . -17) (undo-tree-id20647 . -17) (undo-tree-id20648 . -17) (undo-tree-id20649 . -17) (undo-tree-id20650 . -17) (undo-tree-id20651 . -17) (undo-tree-id20652 . -17) (undo-tree-id20653 . -17) (undo-tree-id20654 . -17) (undo-tree-id20655 . -17) (undo-tree-id20656 . -17) (undo-tree-id20657 . -17) (undo-tree-id20658 . -17) (undo-tree-id20659 . -17) (undo-tree-id20660 . -17) (undo-tree-id20661 . -17) (undo-tree-id20662 . -17) (undo-tree-id20663 . -17) (undo-tree-id20664 . -17) (undo-tree-id20665 . -17) (undo-tree-id20666 . -17) (undo-tree-id20667 . -17) (undo-tree-id20668 . -17) (undo-tree-id20669 . -17) (undo-tree-id20670 . -17) (undo-tree-id20671 . -17) (undo-tree-id20672 . -17) (undo-tree-id20673 . -17) (undo-tree-id20674 . -17) (undo-tree-id20675 . -17) (undo-tree-id20676 . -17) (undo-tree-id20677 . -18) (undo-tree-id20678 . -18) (undo-tree-id20679 . -18) (undo-tree-id20680 . -18) (undo-tree-id20681 . -18) (undo-tree-id20682 . -18) (undo-tree-id20683 . -18) (undo-tree-id20684 . -18) (undo-tree-id20685 . -18) (undo-tree-id20686 . -18) (undo-tree-id20687 . -18) (undo-tree-id20688 . -18) (undo-tree-id20689 . -18) (undo-tree-id20690 . -18) (undo-tree-id20691 . -18) (undo-tree-id20692 . -18) (undo-tree-id20693 . -18) (undo-tree-id20694 . -18) (undo-tree-id20695 . -18) (undo-tree-id20696 . -18) (undo-tree-id20697 . -18) (undo-tree-id20698 . -18) (undo-tree-id20699 . -18) (undo-tree-id20700 . -18) (undo-tree-id20701 . -18) (undo-tree-id20702 . -18) (undo-tree-id20703 . -18) (undo-tree-id20704 . -19) 1404) nil (25774 26308 116293 388000) 0 nil])
([nil nil ((1386 . 1387) (#("c" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 1386)) nil (25774 26308 116090 570000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 1444) (undo-tree-id20537 . -1) (undo-tree-id20538 . -1) (undo-tree-id20539 . -1)) nil (25774 26360 454365 863000) 0 nil])
([nil nil ((#(", prepared by RNN #1" 0 10 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 10 11 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 11 20 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1587) (undo-tree-id20791 . -19) (undo-tree-id20792 . -17) (undo-tree-id20793 . -17) (undo-tree-id20794 . -17) (undo-tree-id20795 . -17) (undo-tree-id20796 . -17) (undo-tree-id20797 . -17) (undo-tree-id20798 . -17) (undo-tree-id20799 . -17) (undo-tree-id20800 . -17) (undo-tree-id20801 . -17) (undo-tree-id20802 . -17) (undo-tree-id20803 . -17) (undo-tree-id20804 . -17) (undo-tree-id20805 . -17) (undo-tree-id20806 . -17) (undo-tree-id20807 . -17) (undo-tree-id20808 . -17) (undo-tree-id20809 . -17) (undo-tree-id20810 . -17) (undo-tree-id20811 . -17) (undo-tree-id20812 . -17) (undo-tree-id20813 . -17) (undo-tree-id20814 . -17) (undo-tree-id20815 . -17) (undo-tree-id20816 . -17) (undo-tree-id20817 . -17) (undo-tree-id20818 . -17) (undo-tree-id20819 . -17) (undo-tree-id20820 . -17) (undo-tree-id20821 . -17) (undo-tree-id20822 . -17) (undo-tree-id20823 . -17) (undo-tree-id20824 . -17) (undo-tree-id20825 . -17) (undo-tree-id20826 . -17) (undo-tree-id20827 . -17) (undo-tree-id20828 . -17) (undo-tree-id20829 . -17) (undo-tree-id20830 . -17) (undo-tree-id20831 . -17) (undo-tree-id20832 . -17) (undo-tree-id20833 . -17) (undo-tree-id20834 . -17) (undo-tree-id20835 . -17) (undo-tree-id20836 . -17) (undo-tree-id20837 . -17) (undo-tree-id20838 . -17) (undo-tree-id20839 . -17) (undo-tree-id20840 . -17) (undo-tree-id20841 . -17) (undo-tree-id20842 . -17) (undo-tree-id20843 . -17) (undo-tree-id20844 . -17) (undo-tree-id20845 . -17) (undo-tree-id20846 . -17) (undo-tree-id20847 . -17) (undo-tree-id20848 . -17) (undo-tree-id20849 . -17) (undo-tree-id20850 . -17) (undo-tree-id20851 . -17) (undo-tree-id20852 . -17) (undo-tree-id20853 . -17) (undo-tree-id20854 . -17) (undo-tree-id20855 . -17) (undo-tree-id20856 . -17) (undo-tree-id20857 . -17) (undo-tree-id20858 . -17) (undo-tree-id20859 . -17) (undo-tree-id20860 . -17) (undo-tree-id20861 . -17) (undo-tree-id20862 . -17) (undo-tree-id20863 . -20) (t 25774 26308 138441 732000)) nil (25774 26363 644825 877000) 0 nil] [nil nil ((#(", prepared by RNN #1, to generate the outputs" 0 10 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 10 11 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 11 44 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 44 45 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1587) (undo-tree-id20714 . -44) (undo-tree-id20715 . -17) (undo-tree-id20716 . -17) (undo-tree-id20717 . -17) (undo-tree-id20718 . -17) (undo-tree-id20719 . -17) (undo-tree-id20720 . -17) (undo-tree-id20721 . -17) (undo-tree-id20722 . -17) (undo-tree-id20723 . -17) (undo-tree-id20724 . -17) (undo-tree-id20725 . -17) (undo-tree-id20726 . -17) (undo-tree-id20727 . -17) (undo-tree-id20728 . -17) (undo-tree-id20729 . -17) (undo-tree-id20730 . -17) (undo-tree-id20731 . -17) (undo-tree-id20732 . -17) (undo-tree-id20733 . -17) (undo-tree-id20734 . -17) (undo-tree-id20735 . -17) (undo-tree-id20736 . -17) (undo-tree-id20737 . -17) (undo-tree-id20738 . -17) (undo-tree-id20739 . -17) (undo-tree-id20740 . -17) (undo-tree-id20741 . -17) (undo-tree-id20742 . -17) (undo-tree-id20743 . -17) (undo-tree-id20744 . -17) (undo-tree-id20745 . -17) (undo-tree-id20746 . -17) (undo-tree-id20747 . -17) (undo-tree-id20748 . 31) (undo-tree-id20749 . -17) (undo-tree-id20750 . -17) (undo-tree-id20751 . -17) (undo-tree-id20752 . -17) (undo-tree-id20753 . -17) (undo-tree-id20754 . -17) (undo-tree-id20755 . -17) (undo-tree-id20756 . -17) (undo-tree-id20757 . -17) (undo-tree-id20758 . -17) (undo-tree-id20759 . -17) (undo-tree-id20760 . -17) (undo-tree-id20761 . -17) (undo-tree-id20762 . -17) (undo-tree-id20763 . -17) (undo-tree-id20764 . -17) (undo-tree-id20765 . -17) (undo-tree-id20766 . -17) (undo-tree-id20767 . -17) (undo-tree-id20768 . -17) (undo-tree-id20769 . -17) (undo-tree-id20770 . -17) (undo-tree-id20771 . -17) (undo-tree-id20772 . -17) (undo-tree-id20773 . -17) (undo-tree-id20774 . -17) (undo-tree-id20775 . -17) (undo-tree-id20776 . -17) (undo-tree-id20777 . -17) (undo-tree-id20778 . -17) (undo-tree-id20779 . -17) (undo-tree-id20780 . -17) (undo-tree-id20781 . -17) (undo-tree-id20782 . -17) (undo-tree-id20783 . -17) (undo-tree-id20784 . -17) (undo-tree-id20785 . -17) (undo-tree-id20786 . -17) (undo-tree-id20787 . -17) (undo-tree-id20788 . -45) (t 25774 26308 138441 732000)) ((1587 . 1632)) (25774 26360 453482 729000) 0 nil])
([nil nil ((#("," 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1587) (undo-tree-id20789 . -1) (undo-tree-id20790 . -1)) nil (25774 26363 644765 564000) 0 nil])
nil
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1611) (undo-tree-id20864 . -1) (undo-tree-id20865 . -1) (t 25774 26363 671668 178000)) nil (25774 26373 481316 131000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1721) (undo-tree-id20866 . -1) (undo-tree-id20867 . -1) (t 25774 26373 503886 669000)) nil (25774 26377 183674 867000) 0 nil])
([nil nil ((#("The rationale behind this is to " 0 20 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 20 21 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 21 32 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1834) (undo-tree-id20868 . -31) (undo-tree-id20869 . -32) (t 25774 26377 207969 81000)) nil (25774 26390 147282 850000) 0 nil])
([nil nil ((1834 . 1835) (#("c" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1834)) nil (25774 26390 147270 843000) 0 nil])
([nil nil ((1841 . 1842)) nil (25774 26390 147265 636000) 0 nil])
([nil nil ((#("(that is, forward and backward)" 0 31 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2044) (undo-tree-id20915 . -30) (undo-tree-id20916 . -31) 1992 (t 25774 26390 172257 949000)) nil (25774 26427 539256 240000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2043) (undo-tree-id20870 . -1) (undo-tree-id20871 . -1) (undo-tree-id20872 . -1) (undo-tree-id20873 . -1) (undo-tree-id20874 . -1) (undo-tree-id20875 . -1) (undo-tree-id20876 . -1) (undo-tree-id20877 . -1) (undo-tree-id20878 . -1) (undo-tree-id20879 . -1) (undo-tree-id20880 . -1) (undo-tree-id20881 . -1) (undo-tree-id20882 . -1) (undo-tree-id20883 . -1) (undo-tree-id20884 . -1) (undo-tree-id20885 . -1) (undo-tree-id20886 . -1) (undo-tree-id20887 . -1) (undo-tree-id20888 . -1) (undo-tree-id20889 . -1) (undo-tree-id20890 . -1) (undo-tree-id20891 . -1) (undo-tree-id20892 . -1) (undo-tree-id20893 . -1) (undo-tree-id20894 . -1) (undo-tree-id20895 . -1) (undo-tree-id20896 . -1) (undo-tree-id20897 . -1) (undo-tree-id20898 . -1) (undo-tree-id20899 . -1) (undo-tree-id20900 . -1) (undo-tree-id20901 . -1) (undo-tree-id20902 . -1) (undo-tree-id20903 . -1) (undo-tree-id20904 . -1) (undo-tree-id20905 . -1) (undo-tree-id20906 . -1) (undo-tree-id20907 . -1) (undo-tree-id20908 . -1) (undo-tree-id20909 . -1) (undo-tree-id20910 . -1) (undo-tree-id20911 . -1) (undo-tree-id20912 . -1) (undo-tree-id20913 . -1) (undo-tree-id20914 . -1)) nil (25774 26427 539247 820000) 0 nil])
([nil nil ((#("For " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2107) (undo-tree-id20952 . -3) (undo-tree-id20953 . -4) (t 25774 26427 561094 622000)) nil (25774 26451 127554 625000) 0 nil])
([nil nil ((#("instance" 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 7 8 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2107) (undo-tree-id20950 . -7) (undo-tree-id20951 . -8)) nil (25774 26451 127552 575000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2107) (undo-tree-id20948 . -1) (undo-tree-id20949 . -2)) nil (25774 26451 127550 514000) 0 nil])
([nil nil ((2107 . 2108) (#("f" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2107)) nil (25774 26451 127548 535000) 0 nil])
([nil nil ((#("𝑥𝑥 " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2145) (undo-tree-id20925 . -2) (undo-tree-id20926 . -1) (undo-tree-id20927 . -1) (undo-tree-id20928 . -1) (undo-tree-id20929 . -1) (undo-tree-id20930 . -1) (undo-tree-id20931 . -1) (undo-tree-id20932 . -1) (undo-tree-id20933 . -1) (undo-tree-id20934 . -1) (undo-tree-id20935 . -1) (undo-tree-id20936 . -1) (undo-tree-id20937 . -1) (undo-tree-id20938 . -1) (undo-tree-id20939 . -1) (undo-tree-id20940 . -1) (undo-tree-id20941 . -1) (undo-tree-id20942 . -1) (undo-tree-id20943 . -1) (undo-tree-id20944 . -1) (undo-tree-id20945 . -1) (undo-tree-id20946 . -1) (undo-tree-id20947 . -3)) nil (25774 26451 127546 983000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2145) (undo-tree-id20922 . 1) (undo-tree-id20923 . -1) (undo-tree-id20924 . -1)) nil (25774 26451 127530 841000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2145) (undo-tree-id20921 . -1)) nil (25774 26451 127842 599000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2144) (undo-tree-id21370 . -1) (undo-tree-id21371 . -1) (undo-tree-id21372 . -1) (undo-tree-id21373 . -1) (undo-tree-id21374 . -1) (undo-tree-id21375 . -1) (undo-tree-id21376 . -1) (undo-tree-id21377 . -1) (undo-tree-id21378 . -1) (undo-tree-id21379 . -1) (undo-tree-id21380 . -1) (undo-tree-id21381 . -1) (undo-tree-id21382 . -1) (undo-tree-id21383 . -1) (undo-tree-id21384 . -1) (undo-tree-id21385 . -1) (undo-tree-id21386 . -1) (undo-tree-id21387 . -1) (undo-tree-id21388 . -1) (undo-tree-id21389 . -1) (undo-tree-id21390 . -1) (undo-tree-id21391 . -1) (undo-tree-id21392 . -1) (undo-tree-id21393 . -1) (undo-tree-id21394 . -1) (undo-tree-id21395 . -1) (undo-tree-id21396 . -1) (undo-tree-id21397 . -1) (undo-tree-id21398 . -1) (undo-tree-id21399 . -1) (undo-tree-id21400 . -1) (undo-tree-id21401 . -1) (undo-tree-id21402 . -1) (undo-tree-id21403 . -1) (undo-tree-id21404 . -1) (undo-tree-id21405 . -1) (undo-tree-id21406 . -1) (undo-tree-id21407 . -1) (undo-tree-id21408 . -1) (undo-tree-id21409 . -1) (undo-tree-id21410 . -1) (undo-tree-id21411 . -1) (undo-tree-id21412 . -1) (undo-tree-id21413 . -1) (undo-tree-id21414 . -1)) nil (25774 26485 840653 417000) 0 nil] [nil nil ((#("), " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2145) (undo-tree-id20917 . -2) (undo-tree-id20918 . 3) (undo-tree-id20919 . -1) (undo-tree-id20920 . -3)) ((2145 . 2148)) (25774 26451 127522 104000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2144) (undo-tree-id21366 . 1) (undo-tree-id21367 . -1) (undo-tree-id21368 . -1) (undo-tree-id21369 . -1)) nil (25774 26485 840625 281000) 0 nil])
nil
([nil nil ((#("- For the second input sequence element, we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass.
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 39 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 39 41 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 41 105 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 105 142 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 142 143 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 143 146 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 146 148 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 148 149 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 2105) (undo-tree-id20954 . -148) (undo-tree-id20955 . -2) (undo-tree-id20956 . -2) (undo-tree-id20957 . 146) (undo-tree-id20958 . -2) (undo-tree-id20959 . -2) (undo-tree-id20960 . -68) (undo-tree-id20961 . -8) (undo-tree-id20962 . -39) (undo-tree-id20963 . -39) (undo-tree-id20964 . -39) (undo-tree-id20965 . -39) (undo-tree-id20966 . -39) (undo-tree-id20967 . -39) (undo-tree-id20968 . -39) (undo-tree-id20969 . -39) (undo-tree-id20970 . -39) (undo-tree-id20971 . -39) (undo-tree-id20972 . -39) (undo-tree-id20973 . -39) (undo-tree-id20974 . -39) (undo-tree-id20975 . -39) (undo-tree-id20976 . -39) (undo-tree-id20977 . -39) (undo-tree-id20978 . -39) (undo-tree-id20979 . -39) (undo-tree-id20980 . -39) (undo-tree-id20981 . -39) (undo-tree-id20982 . -39) (undo-tree-id20983 . -39) (undo-tree-id20984 . -39) (undo-tree-id20985 . -39) (undo-tree-id20986 . -39) (undo-tree-id20987 . -39) (undo-tree-id20988 . -39) (undo-tree-id20989 . -39) (undo-tree-id20990 . -39) (undo-tree-id20991 . -39) (undo-tree-id20992 . -39) (undo-tree-id20993 . -39) (undo-tree-id20994 . -39) (undo-tree-id20995 . -39) (undo-tree-id20996 . -39) (undo-tree-id20997 . -39) (undo-tree-id20998 . -39) (undo-tree-id20999 . -39) (undo-tree-id21000 . -39) (undo-tree-id21001 . -39) (undo-tree-id21002 . -39) (undo-tree-id21003 . -39) (undo-tree-id21004 . -39) (undo-tree-id21005 . -39) (undo-tree-id21006 . -39) (undo-tree-id21007 . -39) (undo-tree-id21008 . -39) (undo-tree-id21009 . -39) (undo-tree-id21010 . -39) (undo-tree-id21011 . -39) (undo-tree-id21012 . -39) (undo-tree-id21013 . -39) (undo-tree-id21014 . -39) (undo-tree-id21015 . -39) (undo-tree-id21016 . -39) (undo-tree-id21017 . -39) (undo-tree-id21018 . -39) (undo-tree-id21019 . -39) (undo-tree-id21020 . -39) (undo-tree-id21021 . -39) (undo-tree-id21022 . -39) (undo-tree-id21023 . -39) (undo-tree-id21024 . -39) (undo-tree-id21025 . -39) (undo-tree-id21026 . -39) (undo-tree-id21027 . -39) (undo-tree-id21028 . -39) (undo-tree-id21029 . -39) (undo-tree-id21030 . -39) (undo-tree-id21031 . -39) (undo-tree-id21032 . -39) (undo-tree-id21033 . -39) (undo-tree-id21034 . -39) (undo-tree-id21035 . -39) (undo-tree-id21036 . -39) (undo-tree-id21037 . -39) (undo-tree-id21038 . -39) (undo-tree-id21039 . -39) (undo-tree-id21040 . -39) (undo-tree-id21041 . -39) (undo-tree-id21042 . -39) (undo-tree-id21043 . -39) (undo-tree-id21044 . -39) (undo-tree-id21045 . -39) (undo-tree-id21046 . -39) (undo-tree-id21047 . -39) (undo-tree-id21048 . -39) (undo-tree-id21049 . -39) (undo-tree-id21050 . -39) (undo-tree-id21051 . -39) (undo-tree-id21052 . -39) (undo-tree-id21053 . -39) (undo-tree-id21054 . -39) (undo-tree-id21055 . -39) (undo-tree-id21056 . -39) (undo-tree-id21057 . -39) (undo-tree-id21058 . -39) (undo-tree-id21059 . -39) (undo-tree-id21060 . -39) (undo-tree-id21061 . -39) (undo-tree-id21062 . -39) (undo-tree-id21063 . -39) (undo-tree-id21064 . -39) (undo-tree-id21065 . -39) (undo-tree-id21066 . -42) (undo-tree-id21067 . -42) (undo-tree-id21068 . -42) (undo-tree-id21069 . -42) (undo-tree-id21070 . -42) (undo-tree-id21071 . -42) (undo-tree-id21072 . -42) (undo-tree-id21073 . -42) (undo-tree-id21074 . -42) (undo-tree-id21075 . -42) (undo-tree-id21076 . -42) (undo-tree-id21077 . -42) (undo-tree-id21078 . -42) (undo-tree-id21079 . -42) (undo-tree-id21080 . -42) (undo-tree-id21081 . -42) (undo-tree-id21082 . -42) (undo-tree-id21083 . -42) (undo-tree-id21084 . -42) (undo-tree-id21085 . -42) (undo-tree-id21086 . -42) (undo-tree-id21087 . -42) (undo-tree-id21088 . -42) (undo-tree-id21089 . -42) (undo-tree-id21090 . -42) (undo-tree-id21091 . -42) (undo-tree-id21092 . -42) (undo-tree-id21093 . -42) (undo-tree-id21094 . -42) (undo-tree-id21095 . -42) (undo-tree-id21096 . -42) (undo-tree-id21097 . -41) (undo-tree-id21098 . -41) (undo-tree-id21099 . -41) (undo-tree-id21100 . -41) (undo-tree-id21101 . -41) (undo-tree-id21102 . -41) (undo-tree-id21103 . -41) (undo-tree-id21104 . -41) (undo-tree-id21105 . -41) (undo-tree-id21106 . -41) (undo-tree-id21107 . -41) (undo-tree-id21108 . -41) (undo-tree-id21109 . -41) (undo-tree-id21110 . -41) (undo-tree-id21111 . -41) (undo-tree-id21112 . -41) (undo-tree-id21113 . -41) (undo-tree-id21114 . -41) (undo-tree-id21115 . -41) (undo-tree-id21116 . -41) (undo-tree-id21117 . -41) (undo-tree-id21118 . -41) (undo-tree-id21119 . -41) (undo-tree-id21120 . -41) (undo-tree-id21121 . -41) (undo-tree-id21122 . -41) (undo-tree-id21123 . -44) (undo-tree-id21124 . -44) (undo-tree-id21125 . -44) (undo-tree-id21126 . -44) (undo-tree-id21127 . -44) (undo-tree-id21128 . -44) (undo-tree-id21129 . -44) (undo-tree-id21130 . -44) (undo-tree-id21131 . -44) (undo-tree-id21132 . -44) (undo-tree-id21133 . -44) (undo-tree-id21134 . -44) (undo-tree-id21135 . -44) (undo-tree-id21136 . -44) (undo-tree-id21137 . -44) (undo-tree-id21138 . -44) (undo-tree-id21139 . -51) (undo-tree-id21140 . -51) (undo-tree-id21141 . -51) (undo-tree-id21142 . -51) (undo-tree-id21143 . -51) (undo-tree-id21144 . -51) (undo-tree-id21145 . -51) (undo-tree-id21146 . -51) (undo-tree-id21147 . -51) (undo-tree-id21148 . -51) (undo-tree-id21149 . -51) (undo-tree-id21150 . -51) (undo-tree-id21151 . -51) (undo-tree-id21152 . -51) (undo-tree-id21153 . -51) (undo-tree-id21154 . -51) (undo-tree-id21155 . -55) (undo-tree-id21156 . -55) (undo-tree-id21157 . -55) (undo-tree-id21158 . -55) (undo-tree-id21159 . -55) (undo-tree-id21160 . -55) (undo-tree-id21161 . -55) (undo-tree-id21162 . -55) (undo-tree-id21163 . -55) (undo-tree-id21164 . -55) (undo-tree-id21165 . -55) (undo-tree-id21166 . -55) (undo-tree-id21167 . -55) (undo-tree-id21168 . -55) (undo-tree-id21169 . -55) (undo-tree-id21170 . -55) (undo-tree-id21171 . -62) (undo-tree-id21172 . -62) (undo-tree-id21173 . -62) (undo-tree-id21174 . -62) (undo-tree-id21175 . -62) (undo-tree-id21176 . -62) (undo-tree-id21177 . -62) (undo-tree-id21178 . -62) (undo-tree-id21179 . -62) (undo-tree-id21180 . -62) (undo-tree-id21181 . -62) (undo-tree-id21182 . -62) (undo-tree-id21183 . -62) (undo-tree-id21184 . -62) (undo-tree-id21185 . -62) (undo-tree-id21186 . -62) (undo-tree-id21187 . -62) (undo-tree-id21188 . -62) (undo-tree-id21189 . -62) (undo-tree-id21190 . -62) (undo-tree-id21191 . -62) (undo-tree-id21192 . -68) (undo-tree-id21193 . -68) (undo-tree-id21194 . -68) (undo-tree-id21195 . -68) (undo-tree-id21196 . -68) (undo-tree-id21197 . -68) (undo-tree-id21198 . -68) (undo-tree-id21199 . -68) (undo-tree-id21200 . -68) (undo-tree-id21201 . -68) (undo-tree-id21202 . -68) (undo-tree-id21203 . -68) (undo-tree-id21204 . -68) (undo-tree-id21205 . -68) (undo-tree-id21206 . -68) (undo-tree-id21207 . -68) (undo-tree-id21208 . -68) (undo-tree-id21209 . -68) (undo-tree-id21210 . -68) (undo-tree-id21211 . -68) (undo-tree-id21212 . -68) (undo-tree-id21213 . -68) (undo-tree-id21214 . -68) (undo-tree-id21215 . -68) (undo-tree-id21216 . -68) (undo-tree-id21217 . -68) (undo-tree-id21218 . -68) (undo-tree-id21219 . -68) (undo-tree-id21220 . -68) (undo-tree-id21221 . -68) (undo-tree-id21222 . -68) (undo-tree-id21223 . -68) (undo-tree-id21224 . -68) (undo-tree-id21225 . -68) (undo-tree-id21226 . -68) (undo-tree-id21227 . -68) (undo-tree-id21228 . -68) (undo-tree-id21229 . -68) (undo-tree-id21230 . -68) (undo-tree-id21231 . -68) (undo-tree-id21232 . -68) (undo-tree-id21233 . -68) (undo-tree-id21234 . -68) (undo-tree-id21235 . -68) (undo-tree-id21236 . -68) (undo-tree-id21237 . -68) (undo-tree-id21238 . -68) (undo-tree-id21239 . -68) (undo-tree-id21240 . -68) (undo-tree-id21241 . -68) (undo-tree-id21242 . -68) (undo-tree-id21243 . -68) (undo-tree-id21244 . -68) (undo-tree-id21245 . -68) (undo-tree-id21246 . -68) (undo-tree-id21247 . -68) (undo-tree-id21248 . -68) (undo-tree-id21249 . -68) (undo-tree-id21250 . -68) (undo-tree-id21251 . -68) (undo-tree-id21252 . -68) (undo-tree-id21253 . -68) (undo-tree-id21254 . -68) (undo-tree-id21255 . -68) (undo-tree-id21256 . -68) (undo-tree-id21257 . -68) (undo-tree-id21258 . -68) (undo-tree-id21259 . -68) (undo-tree-id21260 . -68) (undo-tree-id21261 . -68) (undo-tree-id21262 . -68) (undo-tree-id21263 . -68) (undo-tree-id21264 . -68) (undo-tree-id21265 . -68) (undo-tree-id21266 . -68) (undo-tree-id21267 . -68) (undo-tree-id21268 . -68) (undo-tree-id21269 . -68) (undo-tree-id21270 . -68) (undo-tree-id21271 . -68) (undo-tree-id21272 . -68) (undo-tree-id21273 . -68) (undo-tree-id21274 . -68) (undo-tree-id21275 . -68) (undo-tree-id21276 . -68) (undo-tree-id21277 . -68) (undo-tree-id21278 . -68) (undo-tree-id21279 . -68) (undo-tree-id21280 . -68) (undo-tree-id21281 . -68) (undo-tree-id21282 . -68) (undo-tree-id21283 . -68) (undo-tree-id21284 . -68) (undo-tree-id21285 . -68) (undo-tree-id21286 . -68) (undo-tree-id21287 . -68) (undo-tree-id21288 . -68) (undo-tree-id21289 . -68) (undo-tree-id21290 . -68) (undo-tree-id21291 . -68) (undo-tree-id21292 . -68) (undo-tree-id21293 . -68) (undo-tree-id21294 . -68) (undo-tree-id21295 . -68) (undo-tree-id21296 . -68) (undo-tree-id21297 . -68) (undo-tree-id21298 . -68) (undo-tree-id21299 . -68) (undo-tree-id21300 . -68) (undo-tree-id21301 . -68) (undo-tree-id21302 . -68) (undo-tree-id21303 . -68) (undo-tree-id21304 . -68) (undo-tree-id21305 . -68) (undo-tree-id21306 . -68) (undo-tree-id21307 . -68) (undo-tree-id21308 . -68) (undo-tree-id21309 . -68) (undo-tree-id21310 . -68) (undo-tree-id21311 . -68) (undo-tree-id21312 . -68) (undo-tree-id21313 . -68) (undo-tree-id21314 . -68) (undo-tree-id21315 . -68) (undo-tree-id21316 . -68) (undo-tree-id21317 . -68) (undo-tree-id21318 . -68) (undo-tree-id21319 . -68) (undo-tree-id21320 . -68) (undo-tree-id21321 . -68) (undo-tree-id21322 . -68) (undo-tree-id21323 . -68) (undo-tree-id21324 . -68) (undo-tree-id21325 . -68) (undo-tree-id21326 . -8) (undo-tree-id21327 . -8) (undo-tree-id21328 . -8) (undo-tree-id21329 . -8) (undo-tree-id21330 . -8) (undo-tree-id21331 . -8) (undo-tree-id21332 . -8) (undo-tree-id21333 . -8) (undo-tree-id21334 . -8) (undo-tree-id21335 . -8) (undo-tree-id21336 . -8) (undo-tree-id21337 . -8) (undo-tree-id21338 . -8) (undo-tree-id21339 . -8) (undo-tree-id21340 . -8) (undo-tree-id21341 . -8) (undo-tree-id21342 . -8) (undo-tree-id21343 . -8) (undo-tree-id21344 . -8) (undo-tree-id21345 . -8) (undo-tree-id21346 . -8) (undo-tree-id21347 . -8) (undo-tree-id21348 . -8) (undo-tree-id21349 . -8) (undo-tree-id21350 . -8) (undo-tree-id21351 . -8) (undo-tree-id21352 . -8) (undo-tree-id21353 . -8) (undo-tree-id21354 . -8) (undo-tree-id21355 . -8) (undo-tree-id21356 . -8) (undo-tree-id21357 . -8) (undo-tree-id21358 . -8) (undo-tree-id21359 . -8) (undo-tree-id21360 . -8) (undo-tree-id21361 . -8) (undo-tree-id21362 . -8) (undo-tree-id21363 . -8) (undo-tree-id21364 . -8) (undo-tree-id21365 . -149) 2113) nil (25774 26485 840605 371000) 0 nil])
([nil nil ((#("to form the hidden state ℎ(2) ." 0 31 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2154) (undo-tree-id21612 . -30) (undo-tree-id21613 . -3) (undo-tree-id21614 . -3) (undo-tree-id21615 . -3) (undo-tree-id21616 . -3) (undo-tree-id21617 . -3) (undo-tree-id21618 . -3) (undo-tree-id21619 . -3) (undo-tree-id21620 . -3) (undo-tree-id21621 . -3) (undo-tree-id21622 . -3) (undo-tree-id21623 . -3) (undo-tree-id21624 . -3) (undo-tree-id21625 . -3) (undo-tree-id21626 . -3) (undo-tree-id21627 . -3) (undo-tree-id21628 . -3) (undo-tree-id21629 . -8) (undo-tree-id21630 . -8) (undo-tree-id21631 . -8) (undo-tree-id21632 . -8) (undo-tree-id21633 . -8) (undo-tree-id21634 . -8) (undo-tree-id21635 . -8) (undo-tree-id21636 . -8) (undo-tree-id21637 . -8) (undo-tree-id21638 . -8) (undo-tree-id21639 . -8) (undo-tree-id21640 . -8) (undo-tree-id21641 . -8) (undo-tree-id21642 . -8) (undo-tree-id21643 . -8) (undo-tree-id21644 . -8) (undo-tree-id21645 . -12) (undo-tree-id21646 . -12) (undo-tree-id21647 . -12) (undo-tree-id21648 . -12) (undo-tree-id21649 . -12) (undo-tree-id21650 . -12) (undo-tree-id21651 . -12) (undo-tree-id21652 . -12) (undo-tree-id21653 . -12) (undo-tree-id21654 . -12) (undo-tree-id21655 . -12) (undo-tree-id21656 . -12) (undo-tree-id21657 . -12) (undo-tree-id21658 . -12) (undo-tree-id21659 . -12) (undo-tree-id21660 . -12) (undo-tree-id21661 . -19) (undo-tree-id21662 . -19) (undo-tree-id21663 . -19) (undo-tree-id21664 . -19) (undo-tree-id21665 . -19) (undo-tree-id21666 . -19) (undo-tree-id21667 . -19) (undo-tree-id21668 . -19) (undo-tree-id21669 . -19) (undo-tree-id21670 . -19) (undo-tree-id21671 . -19) (undo-tree-id21672 . -19) (undo-tree-id21673 . -19) (undo-tree-id21674 . -19) (undo-tree-id21675 . -19) (undo-tree-id21676 . -19) (undo-tree-id21677 . -19) (undo-tree-id21678 . -19) (undo-tree-id21679 . -19) (undo-tree-id21680 . -19) (undo-tree-id21681 . -19) (undo-tree-id21682 . -25) (undo-tree-id21683 . -25) (undo-tree-id21684 . -25) (undo-tree-id21685 . -25) (undo-tree-id21686 . -25) (undo-tree-id21687 . -25) (undo-tree-id21688 . -25) (undo-tree-id21689 . -25) (undo-tree-id21690 . -25) (undo-tree-id21691 . -25) (undo-tree-id21692 . -25) (undo-tree-id21693 . -25) (undo-tree-id21694 . -25) (undo-tree-id21695 . -25) (undo-tree-id21696 . -25) (undo-tree-id21697 . -25) (undo-tree-id21698 . -25) (undo-tree-id21699 . -25) (undo-tree-id21700 . -25) (undo-tree-id21701 . -25) (undo-tree-id21702 . -25) (undo-tree-id21703 . -25) (undo-tree-id21704 . -25) (undo-tree-id21705 . -25) (undo-tree-id21706 . -25) (undo-tree-id21707 . -25) (undo-tree-id21708 . -25) (undo-tree-id21709 . -25) (undo-tree-id21710 . -25) (undo-tree-id21711 . -25) (undo-tree-id21712 . -25) (undo-tree-id21713 . -25) (undo-tree-id21714 . -25) (undo-tree-id21715 . -25) (undo-tree-id21716 . -25) (undo-tree-id21717 . -25) (undo-tree-id21718 . -31) (undo-tree-id21719 . -31) (t 25774 26485 862409 144000)) nil (25774 26550 780421 785000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -2153) (undo-tree-id21452 . -1) (undo-tree-id21453 . -1) (undo-tree-id21454 . -1) (undo-tree-id21455 . -1) (undo-tree-id21456 . -1) (undo-tree-id21457 . -1) (undo-tree-id21458 . -1) (undo-tree-id21459 . -1) (undo-tree-id21460 . -1) (undo-tree-id21461 . -1) (undo-tree-id21462 . -1) (undo-tree-id21463 . -1) (undo-tree-id21464 . -1) (undo-tree-id21465 . -1) (undo-tree-id21466 . -1) (undo-tree-id21467 . -1) (undo-tree-id21468 . -1) (undo-tree-id21469 . -1) (undo-tree-id21470 . -1) (undo-tree-id21471 . -1) (undo-tree-id21472 . -1) (undo-tree-id21473 . -1) (undo-tree-id21474 . -1) (undo-tree-id21475 . -1) (undo-tree-id21476 . -1) (undo-tree-id21477 . -1) (undo-tree-id21478 . -1) (undo-tree-id21479 . -1) (undo-tree-id21480 . -1) (undo-tree-id21481 . -1) (undo-tree-id21482 . -1) (undo-tree-id21483 . -1) (undo-tree-id21484 . -1) (undo-tree-id21485 . -1) (undo-tree-id21486 . -1) (undo-tree-id21487 . -1) (undo-tree-id21488 . -1) (undo-tree-id21489 . -1) (undo-tree-id21490 . -1) (undo-tree-id21491 . -1) (undo-tree-id21492 . -1) (undo-tree-id21493 . -1) (undo-tree-id21494 . -1) (undo-tree-id21495 . -1) (undo-tree-id21496 . -1) (undo-tree-id21497 . -1) (undo-tree-id21498 . -1) (undo-tree-id21499 . -1) (undo-tree-id21500 . -1) (undo-tree-id21501 . -1) (undo-tree-id21502 . -1) (undo-tree-id21503 . -1) (undo-tree-id21504 . -1) (undo-tree-id21505 . -1) (undo-tree-id21506 . -1) (undo-tree-id21507 . -1) (undo-tree-id21508 . -1) (undo-tree-id21509 . -1) (undo-tree-id21510 . -1) (undo-tree-id21511 . -1) (undo-tree-id21512 . -1) (undo-tree-id21513 . -1) (undo-tree-id21514 . -1) (undo-tree-id21515 . -1) (undo-tree-id21516 . -1) (undo-tree-id21517 . -1) (undo-tree-id21518 . -1) (undo-tree-id21519 . -1) (undo-tree-id21520 . -1) (undo-tree-id21521 . -1) (undo-tree-id21522 . -1) (undo-tree-id21523 . -1) (undo-tree-id21524 . -1) (undo-tree-id21525 . -1) (undo-tree-id21526 . -1) (undo-tree-id21527 . -1) (undo-tree-id21528 . -1) (undo-tree-id21529 . -1) (undo-tree-id21530 . -1) (undo-tree-id21531 . -1) (undo-tree-id21532 . -1) (undo-tree-id21533 . -1) (undo-tree-id21534 . -1) (undo-tree-id21535 . -1) (undo-tree-id21536 . -1) (undo-tree-id21537 . -1) (undo-tree-id21538 . -1) (undo-tree-id21539 . -1) (undo-tree-id21540 . -1) (undo-tree-id21541 . -1) (undo-tree-id21542 . -1) (undo-tree-id21543 . -1) (undo-tree-id21544 . -1) (undo-tree-id21545 . -1) (undo-tree-id21546 . -1) (undo-tree-id21547 . -1) (undo-tree-id21548 . -1) (undo-tree-id21549 . -1) (undo-tree-id21550 . -1) (undo-tree-id21551 . -1) (undo-tree-id21552 . -1) (undo-tree-id21553 . -1) (undo-tree-id21554 . -1) (undo-tree-id21555 . -1) (undo-tree-id21556 . -1) (undo-tree-id21557 . -1) (undo-tree-id21558 . -1) (undo-tree-id21559 . -1) (undo-tree-id21560 . -1) (undo-tree-id21561 . -1) (undo-tree-id21562 . -1) (undo-tree-id21563 . -1) (undo-tree-id21564 . -1) (undo-tree-id21565 . -1) (undo-tree-id21566 . -1) (undo-tree-id21567 . -1) (undo-tree-id21568 . -1) (undo-tree-id21569 . -1) (undo-tree-id21570 . -1) (undo-tree-id21571 . -1) (undo-tree-id21572 . -1) (undo-tree-id21573 . -1) (undo-tree-id21574 . -1) (undo-tree-id21575 . -1) (undo-tree-id21576 . -1) (undo-tree-id21577 . -1) (undo-tree-id21578 . -1) (undo-tree-id21579 . -1) (undo-tree-id21580 . -1) (undo-tree-id21581 . -1) (undo-tree-id21582 . -1) (undo-tree-id21583 . -1) (undo-tree-id21584 . -1) (undo-tree-id21585 . -1) (undo-tree-id21586 . -1) (undo-tree-id21587 . -1) (undo-tree-id21588 . -1) (undo-tree-id21589 . -1) (undo-tree-id21590 . -1) (undo-tree-id21591 . -1) (undo-tree-id21592 . -1) (undo-tree-id21593 . -1) (undo-tree-id21594 . -1) (undo-tree-id21595 . -1) (undo-tree-id21596 . -1) (undo-tree-id21597 . -1) (undo-tree-id21598 . -1) (undo-tree-id21599 . -1) (undo-tree-id21600 . -1) (undo-tree-id21601 . -1) (undo-tree-id21602 . -1) (undo-tree-id21603 . -1) (undo-tree-id21604 . -1) (undo-tree-id21605 . -1) (undo-tree-id21606 . -1) (undo-tree-id21607 . -1) (undo-tree-id21608 . -1) (undo-tree-id21609 . -1) (undo-tree-id21610 . -1) (undo-tree-id21611 . -1) 2154) nil (25774 26550 780330 389000) 0 nil])
([nil nil ((#("- For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements.
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 17 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 17 18 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 18 21 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 21 22 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 22 25 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 25 26 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 26 108 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 108 112 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 112 126 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 126 127 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 127 136 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 136 137 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 2155) (undo-tree-id21415 . -136) (undo-tree-id21416 . -2) (undo-tree-id21417 . -2) (undo-tree-id21418 . -2) (undo-tree-id21419 . -2) (undo-tree-id21420 . -2) (undo-tree-id21421 . -2) (undo-tree-id21422 . -2) (undo-tree-id21423 . -2) (undo-tree-id21424 . -2) (undo-tree-id21425 . -2) (undo-tree-id21426 . -2) (undo-tree-id21427 . -2) (undo-tree-id21428 . -2) (undo-tree-id21429 . -2) (undo-tree-id21430 . -2) (undo-tree-id21431 . -2) (undo-tree-id21432 . -2) (undo-tree-id21433 . -2) (undo-tree-id21434 . -2) (undo-tree-id21435 . -2) (undo-tree-id21436 . -2) (undo-tree-id21437 . -2) (undo-tree-id21438 . -2) (undo-tree-id21439 . -2) (undo-tree-id21440 . -2) (undo-tree-id21441 . -2) (undo-tree-id21442 . -2) (undo-tree-id21443 . -2) (undo-tree-id21444 . -2) (undo-tree-id21445 . -2) (undo-tree-id21446 . -2) (undo-tree-id21447 . -2) (undo-tree-id21448 . -2) (undo-tree-id21449 . -2) (undo-tree-id21450 . -2) (undo-tree-id21451 . -137) 2157) nil (25774 26550 778043 60000) 0 nil])
([nil nil ((#("We " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2158) (undo-tree-id21808 . -2) (undo-tree-id21809 . -3) (undo-tree-id21810 . -3) (undo-tree-id21811 . -3) (undo-tree-id21812 . -3) (undo-tree-id21813 . -3) (undo-tree-id21814 . -3) (undo-tree-id21815 . -3) (undo-tree-id21816 . -3) (undo-tree-id21817 . -3) (undo-tree-id21818 . -3) (undo-tree-id21819 . -3) (undo-tree-id21820 . -3) (undo-tree-id21821 . -3) (undo-tree-id21822 . -3) (undo-tree-id21823 . -3) (undo-tree-id21824 . -3) (undo-tree-id21825 . -3) (undo-tree-id21826 . -3) (undo-tree-id21827 . -3) (undo-tree-id21828 . -3) (undo-tree-id21829 . -3) (undo-tree-id21830 . -3) (undo-tree-id21831 . -3) (undo-tree-id21832 . -3) (undo-tree-id21833 . -3) (undo-tree-id21834 . -3) (undo-tree-id21835 . -3) (t 25774 26550 803886 175000)) nil (25774 26575 832037 282000) 0 nil])
([nil nil ((#("can " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2158) (undo-tree-id21795 . -3) (undo-tree-id21796 . -4) (undo-tree-id21797 . -4) (undo-tree-id21798 . -4) (undo-tree-id21799 . -4) (undo-tree-id21800 . -4) (undo-tree-id21801 . -4) (undo-tree-id21802 . -4) (undo-tree-id21803 . -4) (undo-tree-id21804 . -4) (undo-tree-id21805 . -4) (undo-tree-id21806 . -4) (undo-tree-id21807 . -4)) nil (25774 26575 832017 266000) 0 nil])
([nil nil ((2158 . 2159) (#("c" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2158)) nil (25774 26575 832687 952000) 0 nil])
([nil nil ((#("this" 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2167) (undo-tree-id21911 . -3) (undo-tree-id21912 . -2) (undo-tree-id21913 . -4) (undo-tree-id21914 . -4) (undo-tree-id21915 . -4) (undo-tree-id21916 . -4) (undo-tree-id21917 . -4) (undo-tree-id21918 . -4) (undo-tree-id21919 . -4) (undo-tree-id21920 . -4) (undo-tree-id21921 . -4) (undo-tree-id21922 . -4) (undo-tree-id21923 . -4) (undo-tree-id21924 . -4) (undo-tree-id21925 . -4) (undo-tree-id21926 . -4) (undo-tree-id21927 . -4) (undo-tree-id21928 . -4) (undo-tree-id21929 . -4) (undo-tree-id21930 . -4) (undo-tree-id21931 . -4) (undo-tree-id21932 . -4) (undo-tree-id21933 . -4) (undo-tree-id21934 . -4) (undo-tree-id21935 . -4) (undo-tree-id21936 . -4) (undo-tree-id21937 . -4) (undo-tree-id21938 . -4) (undo-tree-id21939 . -4) (undo-tree-id21940 . -4) (undo-tree-id21941 . -4) (undo-tree-id21942 . -4) (undo-tree-id21943 . -4) (undo-tree-id21944 . -4) (undo-tree-id21945 . -4) (undo-tree-id21946 . -4) (undo-tree-id21947 . -4) (undo-tree-id21948 . -4) (undo-tree-id21949 . -4) (undo-tree-id21950 . -4) (undo-tree-id21951 . -4) (undo-tree-id21952 . -4) (undo-tree-id21953 . -4) (undo-tree-id21954 . -3) (undo-tree-id21955 . -3) (undo-tree-id21956 . -3) (undo-tree-id21957 . -3) (undo-tree-id21958 . -3) (undo-tree-id21959 . -3) (undo-tree-id21960 . -3) (undo-tree-id21961 . -3) (undo-tree-id21962 . -3) (undo-tree-id21963 . -3) (undo-tree-id21964 . -3) (undo-tree-id21965 . -3) (undo-tree-id21966 . -3) (undo-tree-id21967 . -3) (undo-tree-id21968 . -3) (undo-tree-id21969 . -3) (undo-tree-id21970 . -3) (undo-tree-id21971 . -3) (undo-tree-id21972 . -3) (undo-tree-id21973 . -3) (undo-tree-id21974 . -3) (undo-tree-id21975 . -2) (undo-tree-id21976 . -2) (undo-tree-id21977 . -2) (undo-tree-id21978 . -2) (undo-tree-id21979 . -2) (undo-tree-id21980 . -2) (undo-tree-id21981 . -2) (undo-tree-id21982 . -2) (undo-tree-id21983 . -2) (undo-tree-id21984 . -2) (undo-tree-id21985 . -2) (undo-tree-id21986 . -2) (undo-tree-id21987 . -2) (undo-tree-id21988 . -2) (undo-tree-id21989 . -2) (undo-tree-id21990 . -2) (undo-tree-id21991 . -2) (undo-tree-id21992 . -2) (undo-tree-id21993 . -2) (undo-tree-id21994 . -2) (undo-tree-id21995 . -2) (undo-tree-id21996 . -2) (undo-tree-id21997 . -2) (undo-tree-id21998 . -2) (undo-tree-id21999 . -2) (undo-tree-id22000 . -2) (undo-tree-id22001 . -2) (undo-tree-id22002 . -2) (undo-tree-id22003 . -2) (undo-tree-id22004 . -2) (undo-tree-id22005 . -2) (undo-tree-id22006 . -2) (undo-tree-id22007 . -2) (undo-tree-id22008 . -2) (undo-tree-id22009 . -2) (undo-tree-id22010 . -2) (undo-tree-id22011 . -2) (undo-tree-id22012 . -2) (undo-tree-id22013 . -2) (undo-tree-id22014 . -2) (undo-tree-id22015 . -2) (undo-tree-id22016 . -2) (undo-tree-id22017 . -2) (undo-tree-id22018 . -2) (undo-tree-id22019 . -2) (undo-tree-id22020 . -2) (undo-tree-id22021 . -4) 2169) nil (25774 26601 513054 33000) 0 nil] [nil nil ((#("is " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2169) (undo-tree-id21720 . -2) (undo-tree-id21721 . -3) (undo-tree-id21722 . -3) (undo-tree-id21723 . -3) (undo-tree-id21724 . -3) (undo-tree-id21725 . -3) (undo-tree-id21726 . -3) (undo-tree-id21727 . -3) (undo-tree-id21728 . -3) (undo-tree-id21729 . -3) (undo-tree-id21730 . -3) (undo-tree-id21731 . -3) (undo-tree-id21732 . -2) (undo-tree-id21733 . -2) (undo-tree-id21734 . -2) (undo-tree-id21735 . -2) (undo-tree-id21736 . -2) (undo-tree-id21737 . -2) (undo-tree-id21738 . -2) (undo-tree-id21739 . -2) (undo-tree-id21740 . -2) (undo-tree-id21741 . -2) (undo-tree-id21742 . -2) (undo-tree-id21743 . -2) (undo-tree-id21744 . -2) (undo-tree-id21745 . -2) (undo-tree-id21746 . -2) (undo-tree-id21747 . -2) (undo-tree-id21748 . -2) (undo-tree-id21749 . -2) (undo-tree-id21750 . -2) (undo-tree-id21751 . -2) (undo-tree-id21752 . -2) (undo-tree-id21753 . -2) (undo-tree-id21754 . -2) (undo-tree-id21755 . -2) (undo-tree-id21756 . -2) (undo-tree-id21757 . -2) (undo-tree-id21758 . -2) (undo-tree-id21759 . -2) (undo-tree-id21760 . -2) (undo-tree-id21761 . -2) (undo-tree-id21762 . -2) (undo-tree-id21763 . -2) (undo-tree-id21764 . -2) (undo-tree-id21765 . -2) (undo-tree-id21766 . -2) (undo-tree-id21767 . -2) (undo-tree-id21768 . -2) (undo-tree-id21769 . -2) (undo-tree-id21770 . -2) (undo-tree-id21771 . -2) (undo-tree-id21772 . -2) (undo-tree-id21773 . -1) (undo-tree-id21774 . -1) (undo-tree-id21775 . -1) (undo-tree-id21776 . -1) (undo-tree-id21777 . -1) (undo-tree-id21778 . -1) (undo-tree-id21779 . -1) (undo-tree-id21780 . -1) (undo-tree-id21781 . -1) (undo-tree-id21782 . -1) (undo-tree-id21783 . -1) (undo-tree-id21784 . -1) (undo-tree-id21785 . -1) (undo-tree-id21786 . -1) (undo-tree-id21787 . -1) (undo-tree-id21788 . -1) (undo-tree-id21789 . -1) (undo-tree-id21790 . -1) (undo-tree-id21791 . -1) (undo-tree-id21792 . -1) (undo-tree-id21793 . -1) (undo-tree-id21794 . -3)) ((2169 . 2172)) (25774 26575 832000 353000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2167) (undo-tree-id21898 . -1) (undo-tree-id21899 . -1) (undo-tree-id21900 . -1) (undo-tree-id21901 . -1) (undo-tree-id21902 . -1) (undo-tree-id21903 . -1) (undo-tree-id21904 . -1) (undo-tree-id21905 . -1) (undo-tree-id21906 . -1) (undo-tree-id21907 . -1) (undo-tree-id21908 . -1) (undo-tree-id21909 . -1) (undo-tree-id21910 . -1)) nil (25774 26601 512803 814000) 0 nil])
nil
([nil nil ((2200 . 2201) (#("“" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2200) (undo-tree-id21897 . -1)) nil (25774 26601 512793 517000) 0 nil])
([nil nil ((2211 . 2212) (#("”" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2211) (undo-tree-id21896 . -1)) nil (25774 26601 512791 902000) 0 nil])
([nil nil ((#("since it contains the information of the jth word in both directions." 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 5 6 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 6 22 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 22 29 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 29 69 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2232) (undo-tree-id21893 . -68) (undo-tree-id21894 . -69) (undo-tree-id21895 . -69)) nil (25774 26601 512789 601000) 0 nil])
([nil nil ((#("- In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 102 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 102 103 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 103 125 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 125 129 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 129 144 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 144 145 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 145 146 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 2234) (undo-tree-id21836 . -145) (undo-tree-id21837 . -2) (undo-tree-id21838 . -2) (undo-tree-id21839 . -2) (undo-tree-id21840 . -2) (undo-tree-id21841 . -2) (undo-tree-id21842 . -2) (undo-tree-id21843 . -2) (undo-tree-id21844 . -2) (undo-tree-id21845 . -2) (undo-tree-id21846 . -2) (undo-tree-id21847 . -2) (undo-tree-id21848 . -2) (undo-tree-id21849 . -2) (undo-tree-id21850 . -2) (undo-tree-id21851 . -2) (undo-tree-id21852 . -2) (undo-tree-id21853 . -2) (undo-tree-id21854 . -2) (undo-tree-id21855 . -2) (undo-tree-id21856 . -2) (undo-tree-id21857 . -2) (undo-tree-id21858 . -2) (undo-tree-id21859 . -2) (undo-tree-id21860 . -2) (undo-tree-id21861 . -2) (undo-tree-id21862 . -2) (undo-tree-id21863 . -2) (undo-tree-id21864 . -2) (undo-tree-id21865 . -2) (undo-tree-id21866 . -2) (undo-tree-id21867 . -2) (undo-tree-id21868 . -2) (undo-tree-id21869 . -2) (undo-tree-id21870 . -2) (undo-tree-id21871 . -2) (undo-tree-id21872 . -2) (undo-tree-id21873 . -2) (undo-tree-id21874 . -2) (undo-tree-id21875 . -2) (undo-tree-id21876 . -2) (undo-tree-id21877 . -2) (undo-tree-id21878 . -2) (undo-tree-id21879 . -2) (undo-tree-id21880 . -2) (undo-tree-id21881 . -2) (undo-tree-id21882 . -2) (undo-tree-id21883 . -2) (undo-tree-id21884 . -2) (undo-tree-id21885 . -2) (undo-tree-id21886 . -2) (undo-tree-id21887 . -2) (undo-tree-id21888 . -2) (undo-tree-id21889 . -2) (undo-tree-id21890 . -2) (undo-tree-id21891 . -2) (undo-tree-id21892 . -146) 2236) nil (25774 26601 512781 749000) 0 nil])
([nil nil ((2234 . 2237) (t 25774 26601 533048 323000)) nil (25774 26636 571193 17000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3401 . 3402) (nil fontified nil 3298 . 3402) (nil fontified nil 3199 . 3298) (nil fontified nil 3102 . 3199) (nil fontified nil 3001 . 3102) (nil fontified nil 2904 . 3001) (nil fontified nil 2808 . 2904) (nil fontified nil 2697 . 2808) (nil fontified nil 2692 . 2697) (nil fontified nil 2670 . 2692) (nil fontified nil 2667 . 2670) (nil fontified nil 2585 . 2667) (nil fontified nil 2482 . 2585) (nil fontified nil 2376 . 2482) (nil fontified nil 2277 . 2376) (nil fontified nil 2237 . 2277) (2237 . 3402) 2236) nil (25774 26636 571191 710000) 0 nil])
([nil nil ((3297 . 3298) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3297) (undo-tree-id22022 . -1) (3198 . 3199) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3198) (undo-tree-id22023 . -1) (3101 . 3102) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3101) (undo-tree-id22024 . -1) (3000 . 3001) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3000) (undo-tree-id22025 . -1) (undo-tree-id22026 . -1) (undo-tree-id22027 . -1) (undo-tree-id22028 . -1) (undo-tree-id22029 . -1) (undo-tree-id22030 . -1) (undo-tree-id22031 . -1) (undo-tree-id22032 . -1) (undo-tree-id22033 . -1) (undo-tree-id22034 . -1) (undo-tree-id22035 . -1) (undo-tree-id22036 . -1) (undo-tree-id22037 . -1) (undo-tree-id22038 . -1) (undo-tree-id22039 . -1) (undo-tree-id22040 . -1) (undo-tree-id22041 . -1) (2903 . 2904) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2903) (undo-tree-id22042 . -1) (2807 . 2808) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2807) (undo-tree-id22043 . -1) (2696 . 2697) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2696) (undo-tree-id22044 . -1) (2691 . 2692) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2691) (undo-tree-id22045 . -1) (2669 . 2670) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2669) (undo-tree-id22046 . -1) (2666 . 2667) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2666) (undo-tree-id22047 . -1) (2584 . 2585) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2584) (undo-tree-id22048 . -1) (2481 . 2482) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2481) (undo-tree-id22049 . -1) (2375 . 2376) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2375) (undo-tree-id22050 . -1) 2277) nil (25774 26636 571502 183000) 0 nil])
([nil nil ((2277 . 2279)) nil (25774 26761 830889 662000) 0 nil] [nil nil ((2364 . 2365) (2363 . 2367)) ((#("
** " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1 2 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (2 1 [9679]) keymap (keymap) face org-level-2) 3 4 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 2363) (undo-tree-id22051 . -3) (undo-tree-id22052 . -3) (undo-tree-id22053 . -3) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 2364)) (25774 26636 569949 438000) 0 nil])
([nil nil ((2276 . 2277) 2238) nil (25774 26761 830888 920000) 0 nil])
nil
([nil nil ((2369 . 2370) (2278 . 3407) (#("- In addition to the hidden states, it receives so-called context vectors as input. A context vector 𝑐𝑐𝑖𝑖 is a weighted version of the concatenated hidden states, ℎ(1) … ℎ(𝑇𝑇), which we obtained from RNN #1 in the previous subsection. We can compute the context vector of the ith input as a weighted sum: 𝑇𝑇 𝑐𝑐𝑖𝑖 = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 ℎ(𝑗𝑗) 𝑗𝑗𝑗𝑗 Here, 𝛼𝛼𝑖𝑖𝑖𝑖 represents the attention weights over the input sequence 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 in the context of the ith input sequence element. Note that each ith input sequence element has a unique set of attention weights. We will discuss the computation of the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 in the next subsection. For the remainder of this subsection, let us discuss how the context vectors are used via the second RNN in the preceding figure (RNN #2). Just like a vanilla (regular) RNN, RNN #2 also uses hidden states. Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector
- In Figure 16.3, we can consider RNN #2 as the main RNN that is generating the outputs." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 13 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 13 14 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 14 119 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 119 120 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 120 222 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 222 223 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 223 304 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 304 305 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 305 307 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 307 308 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 308 329 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 329 330 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 330 334 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 334 335 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 335 374 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 374 410 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 410 413 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 413 414 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 414 415 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 415 445 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 445 446 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 446 541 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 541 542 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 542 638 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 638 639 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 639 739 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 739 740 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 740 836 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 836 837 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 837 935 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 935 936 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 936 1039 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1039 1040 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1040 1041 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1041 1042 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil composition (0 1 [8226])) 1042 1043 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1043 1129 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2278) (undo-tree-id23145 . -1129) (undo-tree-id23146 . -1055) (undo-tree-id23147 . -1129) (undo-tree-id23148 . -1129) (undo-tree-id23149 . -1129) (undo-tree-id23150 . -1129) (undo-tree-id23151 . -1129) (undo-tree-id23152 . -1129) (undo-tree-id23153 . -1129) (undo-tree-id23154 . -1129) (undo-tree-id23155 . -1129) (undo-tree-id23156 . -1129) (undo-tree-id23157 . -1129) (undo-tree-id23158 . -1129) (undo-tree-id23159 . -1129) (undo-tree-id23160 . -1129) (undo-tree-id23161 . -1129) (undo-tree-id23162 . -1129) (undo-tree-id23163 . -1129) (undo-tree-id23164 . -1129) (undo-tree-id23165 . -1129) (undo-tree-id23166 . -1129) (undo-tree-id23167 . -1129) (undo-tree-id23168 . -1129) (undo-tree-id23169 . -1129) (undo-tree-id23170 . -1129) (undo-tree-id23171 . -1129) (undo-tree-id23172 . -1129) (undo-tree-id23173 . -1129) (undo-tree-id23174 . -1129) (undo-tree-id23175 . -1129) (undo-tree-id23176 . -1129) (undo-tree-id23177 . -1129) (undo-tree-id23178 . -1129) (undo-tree-id23179 . -1129) (undo-tree-id23180 . -1129) (undo-tree-id23181 . -1129) (undo-tree-id23182 . -1129) (undo-tree-id23183 . -1129) (undo-tree-id23184 . -1129) (undo-tree-id23185 . -1129) (undo-tree-id23186 . -1129) (undo-tree-id23187 . -1129) (undo-tree-id23188 . -1129) (undo-tree-id23189 . -1129) (undo-tree-id23190 . -1129) (undo-tree-id23191 . -1055) (undo-tree-id23192 . -1066) (undo-tree-id23193 . -1066) (undo-tree-id23194 . -1066) (undo-tree-id23195 . -1066) (undo-tree-id23196 . -1066) (undo-tree-id23197 . -1066) (undo-tree-id23198 . -1066) (undo-tree-id23199 . -1066) (undo-tree-id23200 . -1066) (undo-tree-id23201 . -1066) (undo-tree-id23202 . -1066) (undo-tree-id23203 . -1066) (undo-tree-id23204 . -1066) (undo-tree-id23205 . -1066) (undo-tree-id23206 . -1066) (undo-tree-id23207 . -1066) (undo-tree-id23208 . -1066) (undo-tree-id23209 . -1066) (undo-tree-id23210 . -1066) (undo-tree-id23211 . -1066) (undo-tree-id23212 . -1066) (undo-tree-id23213 . -1042) (undo-tree-id23214 . -1042) (undo-tree-id23215 . -1042) (undo-tree-id23216 . -1042) (undo-tree-id23217 . -1042) (undo-tree-id23218 . -1042) (undo-tree-id23219 . -1042) (undo-tree-id23220 . -1042) (undo-tree-id23221 . -1042) (undo-tree-id23222 . -1042) (undo-tree-id23223 . -1042) (undo-tree-id23224 . -1043) (undo-tree-id23225 . -1043) (undo-tree-id23226 . -1043) (undo-tree-id23227 . -1043) (undo-tree-id23228 . -1043) (undo-tree-id23229 . -1043) (undo-tree-id23230 . -1043) (undo-tree-id23231 . -1043) (undo-tree-id23232 . -1043) (undo-tree-id23233 . -1043) (undo-tree-id23234 . -1043) (undo-tree-id23235 . -1043) (undo-tree-id23236 . -1043) (undo-tree-id23237 . -1043) (undo-tree-id23238 . -1043) (undo-tree-id23239 . -1043) (undo-tree-id23240 . -1043) (undo-tree-id23241 . -1042) (undo-tree-id23242 . -1042) (undo-tree-id23243 . -1042) (undo-tree-id23244 . -1042) (undo-tree-id23245 . -1042) (undo-tree-id23246 . -1042) (undo-tree-id23247 . -1042) (undo-tree-id23248 . -1042) (undo-tree-id23249 . -1042) (undo-tree-id23250 . -1042) (undo-tree-id23251 . -1042) (undo-tree-id23252 . -1042) (undo-tree-id23253 . -1042) (undo-tree-id23254 . -1042) (undo-tree-id23255 . -1042) (undo-tree-id23256 . -1042) (undo-tree-id23257 . -1042) (undo-tree-id23258 . -1042) (undo-tree-id23259 . -1042) (undo-tree-id23260 . -1042) (undo-tree-id23261 . -1042) (undo-tree-id23262 . -1042) (undo-tree-id23263 . -1042) (undo-tree-id23264 . -1042) (undo-tree-id23265 . -1042) (undo-tree-id23266 . -1042) (undo-tree-id23267 . -1042) (undo-tree-id23268 . -1042) (undo-tree-id23269 . -1042) (undo-tree-id23270 . -1042) (undo-tree-id23271 . -1042) (undo-tree-id23272 . -1042) (undo-tree-id23273 . -1042) (undo-tree-id23274 . -1042) (undo-tree-id23275 . -1042) (undo-tree-id23276 . -1042) (undo-tree-id23277 . -1042) (undo-tree-id23278 . -1042) (undo-tree-id23279 . -1042) (undo-tree-id23280 . -1042) (undo-tree-id23281 . -1129) (undo-tree-id23282 . -1055) (undo-tree-id23283 . -1055) (undo-tree-id23284 . -1055) (undo-tree-id23285 . -1055) (undo-tree-id23286 . -1055) (undo-tree-id23287 . -1055) (undo-tree-id23288 . -1055) (undo-tree-id23289 . -1055) (undo-tree-id23290 . -1055) (undo-tree-id23291 . -1055) (undo-tree-id23292 . -1055) (undo-tree-id23293 . -1055) (undo-tree-id23294 . -1055) (undo-tree-id23295 . -1055) (undo-tree-id23296 . -1055) (undo-tree-id23297 . -1055) (undo-tree-id23298 . -1055) (undo-tree-id23299 . -1055) (undo-tree-id23300 . -1055) (undo-tree-id23301 . -1055) (undo-tree-id23302 . -1055) (undo-tree-id23303 . -1042) (undo-tree-id23304 . -1128) (undo-tree-id23305 . -1128) (undo-tree-id23306 . -1128) (undo-tree-id23307 . -1128) (undo-tree-id23308 . -1128) (undo-tree-id23309 . -1128) (undo-tree-id23310 . -1128) (undo-tree-id23311 . -1128) (undo-tree-id23312 . -1128) (undo-tree-id23313 . -1128) (undo-tree-id23314 . -1128) (undo-tree-id23315 . -1128) (undo-tree-id23316 . -1128) (undo-tree-id23317 . -1128) (undo-tree-id23318 . -1128) (undo-tree-id23319 . -1128) (undo-tree-id23320 . -1129) (undo-tree-id23321 . -1129) (undo-tree-id23322 . -1129) (undo-tree-id23323 . -1129) (undo-tree-id23324 . -1129) (undo-tree-id23325 . -1129) (undo-tree-id23326 . -1129) (undo-tree-id23327 . -1129) (undo-tree-id23328 . -1129) (undo-tree-id23329 . -1129) (undo-tree-id23330 . -1129) (undo-tree-id23331 . -1129) (undo-tree-id23332 . -1129) (undo-tree-id23333 . -1129) (undo-tree-id23334 . -1129) (undo-tree-id23335 . -1129) (undo-tree-id23336 . -1129) (undo-tree-id23337 . -1129) (undo-tree-id23338 . -1129) (undo-tree-id23339 . -1041) (2278 . 3319) (#(" In addition to the hidden states, it receives so-called context vectors as input. A context vector 𝑐𝑐𝑖𝑖 is a weighted version of the concatenated hidden states, ℎ(1) … ℎ(𝑇𝑇), which we obtained from RNN #1 in the previous subsection. We can compute the context vector of the ith input as a weighted sum: 𝑇𝑇 𝑐𝑐𝑖𝑖 = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 ℎ(𝑗𝑗) 𝑗𝑗𝑗𝑗 Here, 𝛼𝛼𝑖𝑖𝑖𝑖 represents the attention weights over the input sequence 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 in the context of the ith input sequence element. Note that each ith input sequence element has a unique set of attention weights. We will discuss the computation of the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 in the next subsection. For the remainder of this subsection, let us discuss how the context vectors are used via the second RNN in the preceding figure (RNN #2). Just like a vanilla (regular) RNN, RNN #2 also uses hidden states. Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector" 0 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 12 13 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 13 118 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 118 119 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 119 221 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 221 222 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 222 303 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 303 304 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 304 306 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 306 307 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 307 328 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 328 329 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 329 333 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 333 334 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 334 373 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 373 409 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 409 412 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 412 413 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 413 414 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 414 444 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 444 445 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 445 540 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 540 541 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 541 637 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 637 638 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 638 738 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 738 739 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 739 835 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 835 836 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 836 934 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 934 935 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 935 1038 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1038 1039 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2366) (undo-tree-id23340 . -1038) (undo-tree-id23341 . -637) (undo-tree-id23342 . -637) (undo-tree-id23343 . -637) (undo-tree-id23344 . -637) (undo-tree-id23345 . -637) (undo-tree-id23346 . -637) (undo-tree-id23347 . -637) (undo-tree-id23348 . -637) (undo-tree-id23349 . -637) (undo-tree-id23350 . -637) (undo-tree-id23351 . -637) (undo-tree-id23352 . -637) (undo-tree-id23353 . -637) (undo-tree-id23354 . -637) (undo-tree-id23355 . -637) (undo-tree-id23356 . -637) (undo-tree-id23357 . 598) (undo-tree-id23358 . -444) (undo-tree-id23359 . -1038) (undo-tree-id23360 . -835) (undo-tree-id23361 . -934) (undo-tree-id23362 . -1038)) nil (25774 26761 830880 566000) 0 nil])
([nil nil ((#("-" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226]))) . 2367) (undo-tree-id23143 . -1) (undo-tree-id23144 . -1)) nil (25774 26761 830728 243000) 0 nil])
([nil nil ((2369 . 2371)) nil (25774 26761 830724 953000) 0 nil])
([nil nil ((2369 . 3412) (#("- A context vector 𝑐𝑐𝑖𝑖 is a weighted version of the concatenated hidden states, ℎ(1) … ℎ(𝑇𝑇), which we obtained from RNN #1 in the previous subsection. We can compute the context vector of the ith input as a weighted sum: 𝑇𝑇 𝑐𝑐𝑖𝑖 = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 ℎ(𝑗𝑗) 𝑗𝑗𝑗𝑗 Here, 𝛼𝛼𝑖𝑖𝑖𝑖 represents the attention weights over the input sequence 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 in the context of the ith input sequence element. Note that each ith input sequence element has a unique set of attention weights. We will discuss the computation of the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 in the next subsection. For the remainder of this subsection, let us discuss how the context vectors are used via the second RNN in the preceding figure (RNN #2). Just like a vanilla (regular) RNN, RNN #2 also uses hidden states. Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector

- In addition to the hidden states, it receives so-called context vectors as input." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 37 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 37 38 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 38 140 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 140 141 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 141 222 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 222 223 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 223 225 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 225 226 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 226 247 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 247 248 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 248 252 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 252 253 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 253 292 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 292 328 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 328 329 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 329 331 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 331 332 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 332 333 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 333 363 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 363 364 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 364 418 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 418 419 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 419 459 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 459 460 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 460 556 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 556 557 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 557 657 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 657 658 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 658 754 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 754 755 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 755 853 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 853 854 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 854 957 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 957 958 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 958 959 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 959 960 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 960 961 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 961 962 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 962 973 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 973 974 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 974 1043 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2369) (undo-tree-id23046 . 81) (undo-tree-id23047 . -961) (undo-tree-id23048 . -1043) (undo-tree-id23049 . -961) (undo-tree-id23050 . -961) (undo-tree-id23051 . -961) (undo-tree-id23052 . -961) (undo-tree-id23053 . -961) (undo-tree-id23054 . -961) (undo-tree-id23055 . -961) (undo-tree-id23056 . -961) (undo-tree-id23057 . -961) (undo-tree-id23058 . -961) (undo-tree-id23059 . -961) (undo-tree-id23060 . -962) (undo-tree-id23061 . -962) (undo-tree-id23062 . -962) (undo-tree-id23063 . -962) (undo-tree-id23064 . -962) (undo-tree-id23065 . -962) (undo-tree-id23066 . -962) (undo-tree-id23067 . -962) (undo-tree-id23068 . -962) (undo-tree-id23069 . -962) (undo-tree-id23070 . -962) (undo-tree-id23071 . -962) (undo-tree-id23072 . -962) (undo-tree-id23073 . -962) (undo-tree-id23074 . -962) (undo-tree-id23075 . -962) (undo-tree-id23076 . -962) (undo-tree-id23077 . -961) (undo-tree-id23078 . -961) (undo-tree-id23079 . -961) (undo-tree-id23080 . -961) (undo-tree-id23081 . -961) (undo-tree-id23082 . -961) (undo-tree-id23083 . -961) (undo-tree-id23084 . -961) (undo-tree-id23085 . -961) (undo-tree-id23086 . -961) (undo-tree-id23087 . -961) (undo-tree-id23088 . -961) (undo-tree-id23089 . -961) (undo-tree-id23090 . -961) (undo-tree-id23091 . -961) (undo-tree-id23092 . -961) (undo-tree-id23093 . -961) (undo-tree-id23094 . -961) (undo-tree-id23095 . -961) (undo-tree-id23096 . -961) (undo-tree-id23097 . -961) (undo-tree-id23098 . -961) (undo-tree-id23099 . -961) (undo-tree-id23100 . -961) (undo-tree-id23101 . -961) (undo-tree-id23102 . -961) (undo-tree-id23103 . -961) (undo-tree-id23104 . -961) (undo-tree-id23105 . -961) (undo-tree-id23106 . -961) (undo-tree-id23107 . -1042) (undo-tree-id23108 . -1042) (undo-tree-id23109 . -1042) (undo-tree-id23110 . -1042) (undo-tree-id23111 . -1042) (undo-tree-id23112 . -1042) (undo-tree-id23113 . -1042) (undo-tree-id23114 . -1042) (undo-tree-id23115 . -1042) (undo-tree-id23116 . -1042) (undo-tree-id23117 . -1042) (undo-tree-id23118 . -1042) (undo-tree-id23119 . -1042) (undo-tree-id23120 . -1042) (undo-tree-id23121 . -1042) (undo-tree-id23122 . -1042) (undo-tree-id23123 . -1043) (undo-tree-id23124 . -1043) (undo-tree-id23125 . -1043) (undo-tree-id23126 . -1043) (undo-tree-id23127 . -1043) (undo-tree-id23128 . -1043) (undo-tree-id23129 . -1043) (undo-tree-id23130 . -1043) (undo-tree-id23131 . -1043) (undo-tree-id23132 . -1043) (undo-tree-id23133 . -1043) (undo-tree-id23134 . -1043) (undo-tree-id23135 . -1043) (undo-tree-id23136 . -1043) (undo-tree-id23137 . -1043) (undo-tree-id23138 . -1043) (undo-tree-id23139 . -1043) (undo-tree-id23140 . -1043) (undo-tree-id23141 . -1043) (undo-tree-id23142 . -960) (2369 . 3329) (#(" A context vector 𝑐𝑐𝑖𝑖 is a weighted version of the concatenated hidden states, ℎ(1) … ℎ(𝑇𝑇), which we obtained from RNN #1 in the previous subsection. We can compute the context vector of the ith input as a weighted sum: 𝑇𝑇 𝑐𝑐𝑖𝑖 = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 ℎ(𝑗𝑗) 𝑗𝑗𝑗𝑗 Here, 𝛼𝛼𝑖𝑖𝑖𝑖 represents the attention weights over the input sequence 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 in the context of the ith input sequence element. Note that each ith input sequence element has a unique set of attention weights. We will discuss the computation of the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 in the next subsection. For the remainder of this subsection, let us discuss how the context vectors are used via the second RNN in the preceding figure (RNN #2). Just like a vanilla (regular) RNN, RNN #2 also uses hidden states. Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector" 0 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 36 37 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 37 139 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 139 140 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 140 221 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 221 222 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 222 224 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 224 225 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 225 246 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 246 247 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 247 251 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 251 252 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 252 291 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 291 327 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 327 328 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 328 330 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 330 331 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 331 332 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 332 362 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 362 363 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 363 417 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 417 418 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 418 458 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 458 459 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 459 555 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 555 556 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 556 656 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 656 657 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 657 753 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 753 754 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 754 852 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 852 853 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 853 956 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 956 957 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2452)) nil (25774 26761 830720 734000) 0 nil])
([nil nil ((2454 . 3415) (#("- We can compute the context vector of the ith input as a weighted sum: 𝑇𝑇 𝑐𝑐𝑖𝑖 = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 ℎ(𝑗𝑗) 𝑗𝑗𝑗𝑗 Here, 𝛼𝛼𝑖𝑖𝑖𝑖 represents the attention weights over the input sequence 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 in the context of the ith input sequence element. Note that each ith input sequence element has a unique set of attention weights. We will discuss the computation of the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 in the next subsection. For the remainder of this subsection, let us discuss how the context vectors are used via the second RNN in the preceding figure (RNN #2). Just like a vanilla (regular) RNN, RNN #2 also uses hidden states. Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector

- A context vector 𝑐𝑐𝑖𝑖 is a weighted version of the concatenated hidden states, ℎ(1) … ℎ(𝑇𝑇), which we obtained from RNN #1 in the previous subsection." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 71 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 71 72 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 72 74 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 74 75 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 75 96 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 96 97 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 97 101 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 101 102 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 102 141 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 141 177 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 177 178 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 178 180 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 180 181 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 181 182 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 182 212 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 212 213 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 213 264 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 264 267 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 267 268 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 268 308 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 308 309 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 309 405 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 405 406 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 406 506 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 506 507 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 507 603 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 603 604 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 604 702 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 702 703 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 703 806 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 806 807 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 807 808 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 808 809 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 809 810 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 810 811 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 811 846 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 846 847 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 847 949 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 949 950 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 950 961 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2454) (undo-tree-id22960 . 150) (undo-tree-id22961 . -810) (undo-tree-id22962 . -961) (undo-tree-id22963 . -811) (undo-tree-id22964 . -811) (undo-tree-id22965 . -811) (undo-tree-id22966 . -811) (undo-tree-id22967 . -811) (undo-tree-id22968 . -811) (undo-tree-id22969 . -811) (undo-tree-id22970 . -811) (undo-tree-id22971 . -811) (undo-tree-id22972 . -811) (undo-tree-id22973 . -811) (undo-tree-id22974 . -811) (undo-tree-id22975 . -811) (undo-tree-id22976 . -811) (undo-tree-id22977 . -811) (undo-tree-id22978 . -811) (undo-tree-id22979 . -811) (undo-tree-id22980 . -811) (undo-tree-id22981 . -811) (undo-tree-id22982 . -811) (undo-tree-id22983 . -811) (undo-tree-id22984 . -811) (undo-tree-id22985 . -810) (undo-tree-id22986 . -810) (undo-tree-id22987 . -810) (undo-tree-id22988 . -810) (undo-tree-id22989 . -810) (undo-tree-id22990 . -810) (undo-tree-id22991 . -810) (undo-tree-id22992 . -810) (undo-tree-id22993 . -810) (undo-tree-id22994 . -810) (undo-tree-id22995 . -810) (undo-tree-id22996 . -810) (undo-tree-id22997 . -810) (undo-tree-id22998 . -810) (undo-tree-id22999 . -810) (undo-tree-id23000 . -810) (undo-tree-id23001 . -810) (undo-tree-id23002 . -810) (undo-tree-id23003 . -810) (undo-tree-id23004 . -810) (undo-tree-id23005 . -810) (undo-tree-id23006 . -810) (undo-tree-id23007 . -810) (undo-tree-id23008 . -810) (undo-tree-id23009 . -810) (undo-tree-id23010 . -960) (undo-tree-id23011 . -960) (undo-tree-id23012 . -960) (undo-tree-id23013 . -960) (undo-tree-id23014 . -960) (undo-tree-id23015 . -960) (undo-tree-id23016 . -960) (undo-tree-id23017 . -960) (undo-tree-id23018 . -960) (undo-tree-id23019 . -960) (undo-tree-id23020 . -960) (undo-tree-id23021 . -960) (undo-tree-id23022 . -960) (undo-tree-id23023 . -960) (undo-tree-id23024 . -960) (undo-tree-id23025 . -960) (undo-tree-id23026 . -961) (undo-tree-id23027 . -961) (undo-tree-id23028 . -961) (undo-tree-id23029 . -961) (undo-tree-id23030 . -961) (undo-tree-id23031 . -961) (undo-tree-id23032 . -961) (undo-tree-id23033 . -961) (undo-tree-id23034 . -961) (undo-tree-id23035 . -961) (undo-tree-id23036 . -961) (undo-tree-id23037 . -961) (undo-tree-id23038 . -961) (undo-tree-id23039 . -961) (undo-tree-id23040 . -961) (undo-tree-id23041 . -961) (undo-tree-id23042 . -961) (undo-tree-id23043 . -961) (undo-tree-id23044 . -961) (undo-tree-id23045 . -809) (2454 . 3263) (#(" We can compute the context vector of the ith input as a weighted sum: 𝑇𝑇 𝑐𝑐𝑖𝑖 = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 ℎ(𝑗𝑗) 𝑗𝑗𝑗𝑗 Here, 𝛼𝛼𝑖𝑖𝑖𝑖 represents the attention weights over the input sequence 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 in the context of the ith input sequence element. Note that each ith input sequence element has a unique set of attention weights. We will discuss the computation of the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 in the next subsection. For the remainder of this subsection, let us discuss how the context vectors are used via the second RNN in the preceding figure (RNN #2). Just like a vanilla (regular) RNN, RNN #2 also uses hidden states. Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector" 0 70 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 70 71 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 71 73 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 73 74 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 74 95 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 95 96 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 96 100 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 100 101 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 101 140 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 140 176 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 176 177 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 177 179 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 179 180 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 180 181 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 181 211 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 211 212 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 212 263 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 263 266 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 266 267 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 267 307 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 307 308 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 308 404 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 404 405 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 405 505 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 505 506 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 506 602 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 602 603 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 603 701 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 701 702 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 702 805 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 805 806 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2606)) nil (25774 26761 830649 505000) 0 nil])
([nil nil ((2608 . 3418) (#("- Note that each ith input sequence element has a unique set of attention weights. We will discuss the computation of the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 in the next subsection. For the remainder of this subsection, let us discuss how the context vectors are used via the second RNN in the preceding figure (RNN #2). Just like a vanilla (regular) RNN, RNN #2 also uses hidden states. Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector

- We can compute the context vector of the ith input as a weighted sum: 𝑇𝑇 𝑐𝑐𝑖𝑖 = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 ℎ(𝑗𝑗) 𝑗𝑗𝑗𝑗 Here, 𝛼𝛼𝑖𝑖𝑖𝑖 represents the attention weights over the input sequence 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 in the context of the ith input sequence element." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 29 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 29 32 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 32 33 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 33 73 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 73 74 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 74 111 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 111 170 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 170 171 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 171 271 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 271 272 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 272 368 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 368 369 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 369 467 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 467 468 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 468 571 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 571 572 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 572 573 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 573 574 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 574 575 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 575 576 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 576 645 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 645 646 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 646 648 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 648 649 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 649 670 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 670 671 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 671 675 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 675 676 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 676 715 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 715 751 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 751 752 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 752 754 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 754 755 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 755 756 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 756 786 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 786 787 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 787 810 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2608) (undo-tree-id22874 . 234) (undo-tree-id22875 . -575) (undo-tree-id22876 . -810) (undo-tree-id22877 . -576) (undo-tree-id22878 . -576) (undo-tree-id22879 . -576) (undo-tree-id22880 . -576) (undo-tree-id22881 . -576) (undo-tree-id22882 . -576) (undo-tree-id22883 . -576) (undo-tree-id22884 . -576) (undo-tree-id22885 . -576) (undo-tree-id22886 . -576) (undo-tree-id22887 . -576) (undo-tree-id22888 . -576) (undo-tree-id22889 . -576) (undo-tree-id22890 . -576) (undo-tree-id22891 . -576) (undo-tree-id22892 . -576) (undo-tree-id22893 . -576) (undo-tree-id22894 . -575) (undo-tree-id22895 . -575) (undo-tree-id22896 . -575) (undo-tree-id22897 . -575) (undo-tree-id22898 . -575) (undo-tree-id22899 . -575) (undo-tree-id22900 . -575) (undo-tree-id22901 . -575) (undo-tree-id22902 . -575) (undo-tree-id22903 . -575) (undo-tree-id22904 . -575) (undo-tree-id22905 . -575) (undo-tree-id22906 . -575) (undo-tree-id22907 . -575) (undo-tree-id22908 . -575) (undo-tree-id22909 . -575) (undo-tree-id22910 . -575) (undo-tree-id22911 . -575) (undo-tree-id22912 . -575) (undo-tree-id22913 . -575) (undo-tree-id22914 . -575) (undo-tree-id22915 . -575) (undo-tree-id22916 . -575) (undo-tree-id22917 . -575) (undo-tree-id22918 . -575) (undo-tree-id22919 . -575) (undo-tree-id22920 . -575) (undo-tree-id22921 . -575) (undo-tree-id22922 . -575) (undo-tree-id22923 . -575) (undo-tree-id22924 . -809) (undo-tree-id22925 . -809) (undo-tree-id22926 . -809) (undo-tree-id22927 . -809) (undo-tree-id22928 . -809) (undo-tree-id22929 . -809) (undo-tree-id22930 . -809) (undo-tree-id22931 . -809) (undo-tree-id22932 . -809) (undo-tree-id22933 . -809) (undo-tree-id22934 . -809) (undo-tree-id22935 . -809) (undo-tree-id22936 . -809) (undo-tree-id22937 . -809) (undo-tree-id22938 . -809) (undo-tree-id22939 . -809) (undo-tree-id22940 . -810) (undo-tree-id22941 . -810) (undo-tree-id22942 . -810) (undo-tree-id22943 . -810) (undo-tree-id22944 . -810) (undo-tree-id22945 . -810) (undo-tree-id22946 . -810) (undo-tree-id22947 . -810) (undo-tree-id22948 . -810) (undo-tree-id22949 . -810) (undo-tree-id22950 . -810) (undo-tree-id22951 . -810) (undo-tree-id22952 . -810) (undo-tree-id22953 . -810) (undo-tree-id22954 . -810) (undo-tree-id22955 . -810) (undo-tree-id22956 . -810) (undo-tree-id22957 . -810) (undo-tree-id22958 . -810) (undo-tree-id22959 . -574) (2608 . 3182) (#(" Note that each ith input sequence element has a unique set of attention weights. We will discuss the computation of the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 in the next subsection. For the remainder of this subsection, let us discuss how the context vectors are used via the second RNN in the preceding figure (RNN #2). Just like a vanilla (regular) RNN, RNN #2 also uses hidden states. Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector" 0 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 28 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 31 32 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 32 72 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 72 73 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 73 110 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 110 169 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 169 170 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 170 270 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 270 271 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 271 367 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 367 368 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 368 466 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 466 467 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 467 570 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 570 571 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2844)) nil (25774 26761 830587 503000) 0 nil])
([nil nil ((2846 . 3421) (#("- We will discuss the computation of the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 in the next subsection. For the remainder of this subsection, let us discuss how the context vectors are used via the second RNN in the preceding figure (RNN #2). Just like a vanilla (regular) RNN, RNN #2 also uses hidden states. Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector

- Note that each ith input sequence element has a unique set of attention weights." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 30 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 30 89 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 89 90 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 90 181 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 181 190 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 190 191 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 191 287 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 287 288 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 288 386 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 386 387 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 387 490 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 490 491 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 491 492 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 492 493 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 493 494 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 494 495 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 495 522 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 522 525 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 525 526 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 526 566 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 566 567 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 567 575 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2846) (undo-tree-id22788 . 80) (undo-tree-id22789 . -494) (undo-tree-id22790 . -575) (undo-tree-id22791 . -495) (undo-tree-id22792 . -495) (undo-tree-id22793 . -495) (undo-tree-id22794 . -495) (undo-tree-id22795 . -495) (undo-tree-id22796 . -495) (undo-tree-id22797 . -495) (undo-tree-id22798 . -495) (undo-tree-id22799 . -495) (undo-tree-id22800 . -495) (undo-tree-id22801 . -495) (undo-tree-id22802 . -495) (undo-tree-id22803 . -495) (undo-tree-id22804 . -495) (undo-tree-id22805 . -495) (undo-tree-id22806 . -495) (undo-tree-id22807 . -495) (undo-tree-id22808 . -494) (undo-tree-id22809 . -494) (undo-tree-id22810 . -494) (undo-tree-id22811 . -494) (undo-tree-id22812 . -494) (undo-tree-id22813 . -494) (undo-tree-id22814 . -494) (undo-tree-id22815 . -494) (undo-tree-id22816 . -494) (undo-tree-id22817 . -494) (undo-tree-id22818 . -494) (undo-tree-id22819 . -494) (undo-tree-id22820 . -494) (undo-tree-id22821 . -494) (undo-tree-id22822 . -494) (undo-tree-id22823 . -494) (undo-tree-id22824 . -494) (undo-tree-id22825 . -494) (undo-tree-id22826 . -494) (undo-tree-id22827 . -494) (undo-tree-id22828 . -494) (undo-tree-id22829 . -494) (undo-tree-id22830 . -494) (undo-tree-id22831 . -494) (undo-tree-id22832 . -494) (undo-tree-id22833 . -574) (undo-tree-id22834 . -574) (undo-tree-id22835 . -574) (undo-tree-id22836 . -574) (undo-tree-id22837 . -574) (undo-tree-id22838 . -574) (undo-tree-id22839 . -574) (undo-tree-id22840 . -574) (undo-tree-id22841 . -574) (undo-tree-id22842 . -574) (undo-tree-id22843 . -574) (undo-tree-id22844 . -574) (undo-tree-id22845 . -574) (undo-tree-id22846 . -574) (undo-tree-id22847 . -574) (undo-tree-id22848 . -574) (undo-tree-id22849 . -574) (undo-tree-id22850 . -574) (undo-tree-id22851 . -574) (undo-tree-id22852 . -574) (undo-tree-id22853 . -574) (undo-tree-id22854 . -575) (undo-tree-id22855 . -575) (undo-tree-id22856 . -575) (undo-tree-id22857 . -575) (undo-tree-id22858 . -575) (undo-tree-id22859 . -575) (undo-tree-id22860 . -575) (undo-tree-id22861 . -575) (undo-tree-id22862 . -575) (undo-tree-id22863 . -575) (undo-tree-id22864 . -575) (undo-tree-id22865 . -575) (undo-tree-id22866 . -575) (undo-tree-id22867 . -575) (undo-tree-id22868 . -575) (undo-tree-id22869 . -575) (undo-tree-id22870 . -575) (undo-tree-id22871 . -575) (undo-tree-id22872 . -575) (undo-tree-id22873 . -493) (2846 . 3339) (#(" We will discuss the computation of the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 in the next subsection. For the remainder of this subsection, let us discuss how the context vectors are used via the second RNN in the preceding figure (RNN #2). Just like a vanilla (regular) RNN, RNN #2 also uses hidden states. Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector" 0 29 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 29 88 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 88 89 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 89 180 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 180 189 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 189 190 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 190 286 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 286 287 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 287 385 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 385 386 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 386 489 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 489 490 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2928)) nil (25774 26761 830499 513000) 0 nil])
([nil nil ((2930 . 3424) (#("- For the remainder of this subsection, let us discuss how the context vectors are used via the second RNN in the preceding figure (RNN #2). Just like a vanilla (regular) RNN, RNN #2 also uses hidden states. Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector

- We will discuss the computation of the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 in the next subsection." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 93 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 93 102 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 102 103 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 103 199 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 199 200 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 200 298 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 298 299 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 299 328 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 328 402 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 402 403 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 403 404 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 404 405 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 405 406 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 406 407 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 407 435 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 435 494 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2930) (undo-tree-id22691 . 87) (undo-tree-id22692 . -406) (undo-tree-id22693 . -494) (undo-tree-id22694 . -407) (undo-tree-id22695 . -407) (undo-tree-id22696 . -407) (undo-tree-id22697 . -407) (undo-tree-id22698 . -407) (undo-tree-id22699 . -407) (undo-tree-id22700 . -407) (undo-tree-id22701 . -407) (undo-tree-id22702 . -407) (undo-tree-id22703 . -407) (undo-tree-id22704 . -407) (undo-tree-id22705 . -407) (undo-tree-id22706 . -407) (undo-tree-id22707 . -407) (undo-tree-id22708 . -407) (undo-tree-id22709 . -407) (undo-tree-id22710 . -407) (undo-tree-id22711 . -407) (undo-tree-id22712 . -407) (undo-tree-id22713 . -407) (undo-tree-id22714 . -407) (undo-tree-id22715 . -407) (undo-tree-id22716 . -407) (undo-tree-id22717 . -406) (undo-tree-id22718 . -406) (undo-tree-id22719 . -406) (undo-tree-id22720 . -406) (undo-tree-id22721 . -406) (undo-tree-id22722 . -406) (undo-tree-id22723 . -406) (undo-tree-id22724 . -406) (undo-tree-id22725 . -406) (undo-tree-id22726 . -406) (undo-tree-id22727 . -406) (undo-tree-id22728 . -406) (undo-tree-id22729 . -406) (undo-tree-id22730 . -406) (undo-tree-id22731 . -406) (undo-tree-id22732 . -406) (undo-tree-id22733 . -406) (undo-tree-id22734 . -406) (undo-tree-id22735 . -406) (undo-tree-id22736 . -406) (undo-tree-id22737 . -406) (undo-tree-id22738 . -406) (undo-tree-id22739 . -406) (undo-tree-id22740 . -406) (undo-tree-id22741 . -406) (undo-tree-id22742 . -406) (undo-tree-id22743 . -406) (undo-tree-id22744 . -406) (undo-tree-id22745 . -406) (undo-tree-id22746 . -406) (undo-tree-id22747 . -406) (undo-tree-id22748 . -406) (undo-tree-id22749 . -406) (undo-tree-id22750 . -406) (undo-tree-id22751 . -406) (undo-tree-id22752 . -493) (undo-tree-id22753 . -493) (undo-tree-id22754 . -493) (undo-tree-id22755 . -493) (undo-tree-id22756 . -493) (undo-tree-id22757 . -493) (undo-tree-id22758 . -493) (undo-tree-id22759 . -493) (undo-tree-id22760 . -493) (undo-tree-id22761 . -493) (undo-tree-id22762 . -493) (undo-tree-id22763 . -493) (undo-tree-id22764 . -493) (undo-tree-id22765 . -493) (undo-tree-id22766 . -493) (undo-tree-id22767 . -493) (undo-tree-id22768 . -494) (undo-tree-id22769 . -494) (undo-tree-id22770 . -494) (undo-tree-id22771 . -494) (undo-tree-id22772 . -494) (undo-tree-id22773 . -494) (undo-tree-id22774 . -494) (undo-tree-id22775 . -494) (undo-tree-id22776 . -494) (undo-tree-id22777 . -494) (undo-tree-id22778 . -494) (undo-tree-id22779 . -494) (undo-tree-id22780 . -494) (undo-tree-id22781 . -494) (undo-tree-id22782 . -494) (undo-tree-id22783 . -494) (undo-tree-id22784 . -494) (undo-tree-id22785 . -494) (undo-tree-id22786 . -494) (undo-tree-id22787 . -405) (2930 . 3335) (#(" For the remainder of this subsection, let us discuss how the context vectors are used via the second RNN in the preceding figure (RNN #2). Just like a vanilla (regular) RNN, RNN #2 also uses hidden states. Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 92 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 92 101 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 101 102 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 102 198 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 198 199 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 199 297 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 297 298 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 298 327 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 327 401 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 401 402 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3019)) nil (25774 26761 830441 559000) 0 nil])
([nil nil ((3021 . 3427) (#("- Just like a vanilla (regular) RNN, RNN #2 also uses hidden states. Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector

- For the remainder of this subsection, let us discuss how the context vectors are used via the second RNN in the preceding figure (RNN #2)." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 60 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 60 61 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 61 159 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 159 160 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 160 189 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 189 263 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 263 264 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 264 265 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 265 266 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 266 267 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 267 268 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 268 359 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 359 368 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 368 369 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 369 406 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 3021) (undo-tree-id22608 . 138) (undo-tree-id22609 . -267) (undo-tree-id22610 . -406) (undo-tree-id22611 . -268) (undo-tree-id22612 . -268) (undo-tree-id22613 . -268) (undo-tree-id22614 . -268) (undo-tree-id22615 . -268) (undo-tree-id22616 . -268) (undo-tree-id22617 . -268) (undo-tree-id22618 . -268) (undo-tree-id22619 . -268) (undo-tree-id22620 . -268) (undo-tree-id22621 . -268) (undo-tree-id22622 . -268) (undo-tree-id22623 . -268) (undo-tree-id22624 . -268) (undo-tree-id22625 . -268) (undo-tree-id22626 . -268) (undo-tree-id22627 . -268) (undo-tree-id22628 . -267) (undo-tree-id22629 . -267) (undo-tree-id22630 . -267) (undo-tree-id22631 . -267) (undo-tree-id22632 . -267) (undo-tree-id22633 . -267) (undo-tree-id22634 . -267) (undo-tree-id22635 . -267) (undo-tree-id22636 . -267) (undo-tree-id22637 . -267) (undo-tree-id22638 . -267) (undo-tree-id22639 . -267) (undo-tree-id22640 . -267) (undo-tree-id22641 . -267) (undo-tree-id22642 . -267) (undo-tree-id22643 . -267) (undo-tree-id22644 . -267) (undo-tree-id22645 . -267) (undo-tree-id22646 . -267) (undo-tree-id22647 . -267) (undo-tree-id22648 . -267) (undo-tree-id22649 . -267) (undo-tree-id22650 . -267) (undo-tree-id22651 . -267) (undo-tree-id22652 . -267) (undo-tree-id22653 . 8) (undo-tree-id22654 . -401) (undo-tree-id22655 . -405) (undo-tree-id22656 . -405) (undo-tree-id22657 . -405) (undo-tree-id22658 . -405) (undo-tree-id22659 . -405) (undo-tree-id22660 . -405) (undo-tree-id22661 . -405) (undo-tree-id22662 . -405) (undo-tree-id22663 . -405) (undo-tree-id22664 . -405) (undo-tree-id22665 . -405) (undo-tree-id22666 . -405) (undo-tree-id22667 . -405) (undo-tree-id22668 . -405) (undo-tree-id22669 . -405) (undo-tree-id22670 . -405) (undo-tree-id22671 . -406) (undo-tree-id22672 . -406) (undo-tree-id22673 . -406) (undo-tree-id22674 . -406) (undo-tree-id22675 . -406) (undo-tree-id22676 . -406) (undo-tree-id22677 . -406) (undo-tree-id22678 . -406) (undo-tree-id22679 . -406) (undo-tree-id22680 . -406) (undo-tree-id22681 . -406) (undo-tree-id22682 . -406) (undo-tree-id22683 . -406) (undo-tree-id22684 . -406) (undo-tree-id22685 . -406) (undo-tree-id22686 . -406) (undo-tree-id22687 . -406) (undo-tree-id22688 . -406) (undo-tree-id22689 . -406) (undo-tree-id22690 . -266) (3021 . 3287) (#(" Just like a vanilla (regular) RNN, RNN #2 also uses hidden states. Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector" 0 59 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 59 60 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 60 158 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 158 159 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 159 188 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 188 262 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 262 263 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3161)) nil (25774 26761 830377 26000) 0 nil])
([nil nil ((3163 . 3430) (#("- Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector

- Just like a vanilla (regular) RNN, RNN #2 also uses hidden states." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 92 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 92 93 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 93 122 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 122 196 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 196 197 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 197 198 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 198 199 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 199 200 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 200 201 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 201 259 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 259 260 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 260 267 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 3163) (undo-tree-id22464 . 66) (undo-tree-id22465 . -200) (undo-tree-id22466 . -267) (undo-tree-id22467 . -201) (undo-tree-id22468 . -201) (undo-tree-id22469 . -201) (undo-tree-id22470 . -201) (undo-tree-id22471 . -201) (undo-tree-id22472 . -201) (undo-tree-id22473 . -201) (undo-tree-id22474 . -201) (undo-tree-id22475 . -201) (undo-tree-id22476 . -201) (undo-tree-id22477 . -201) (undo-tree-id22478 . -201) (undo-tree-id22479 . -201) (undo-tree-id22480 . -201) (undo-tree-id22481 . -201) (undo-tree-id22482 . -201) (undo-tree-id22483 . -201) (undo-tree-id22484 . -200) (undo-tree-id22485 . -200) (undo-tree-id22486 . -200) (undo-tree-id22487 . -200) (undo-tree-id22488 . -200) (undo-tree-id22489 . -200) (undo-tree-id22490 . -200) (undo-tree-id22491 . -200) (undo-tree-id22492 . -200) (undo-tree-id22493 . -200) (undo-tree-id22494 . -200) (undo-tree-id22495 . -200) (undo-tree-id22496 . -200) (undo-tree-id22497 . -200) (undo-tree-id22498 . -200) (undo-tree-id22499 . -200) (undo-tree-id22500 . -200) (undo-tree-id22501 . -200) (undo-tree-id22502 . -200) (undo-tree-id22503 . -200) (undo-tree-id22504 . -200) (undo-tree-id22505 . -200) (undo-tree-id22506 . -200) (undo-tree-id22507 . -200) (undo-tree-id22508 . -200) (undo-tree-id22509 . -201) (undo-tree-id22510 . -201) (undo-tree-id22511 . -201) (undo-tree-id22512 . -201) (undo-tree-id22513 . -201) (undo-tree-id22514 . -201) (undo-tree-id22515 . -201) (undo-tree-id22516 . -201) (undo-tree-id22517 . -201) (undo-tree-id22518 . -201) (undo-tree-id22519 . -201) (undo-tree-id22520 . -201) (undo-tree-id22521 . -201) (undo-tree-id22522 . -201) (undo-tree-id22523 . -201) (undo-tree-id22524 . -201) (undo-tree-id22525 . -201) (undo-tree-id22526 . -201) (undo-tree-id22527 . -201) (undo-tree-id22528 . -201) (undo-tree-id22529 . -201) (undo-tree-id22530 . -201) (undo-tree-id22531 . -201) (undo-tree-id22532 . -200) (undo-tree-id22533 . -200) (undo-tree-id22534 . -200) (undo-tree-id22535 . -200) (undo-tree-id22536 . -200) (undo-tree-id22537 . -200) (undo-tree-id22538 . -200) (undo-tree-id22539 . -200) (undo-tree-id22540 . -200) (undo-tree-id22541 . -200) (undo-tree-id22542 . -200) (undo-tree-id22543 . -200) (undo-tree-id22544 . -200) (undo-tree-id22545 . -200) (undo-tree-id22546 . -200) (undo-tree-id22547 . -200) (undo-tree-id22548 . -200) (undo-tree-id22549 . -200) (undo-tree-id22550 . -200) (undo-tree-id22551 . -200) (undo-tree-id22552 . -200) (undo-tree-id22553 . -200) (undo-tree-id22554 . -200) (undo-tree-id22555 . -200) (undo-tree-id22556 . -200) (undo-tree-id22557 . -266) (undo-tree-id22558 . -266) (undo-tree-id22559 . -266) (undo-tree-id22560 . -266) (undo-tree-id22561 . -266) (undo-tree-id22562 . -266) (undo-tree-id22563 . -266) (undo-tree-id22564 . -266) (undo-tree-id22565 . -266) (undo-tree-id22566 . -266) (undo-tree-id22567 . -266) (undo-tree-id22568 . -266) (undo-tree-id22569 . -266) (undo-tree-id22570 . -266) (undo-tree-id22571 . -266) (undo-tree-id22572 . -266) (undo-tree-id22573 . -266) (undo-tree-id22574 . -266) (undo-tree-id22575 . -266) (undo-tree-id22576 . -266) (undo-tree-id22577 . -266) (undo-tree-id22578 . -266) (undo-tree-id22579 . -266) (undo-tree-id22580 . -266) (undo-tree-id22581 . -266) (undo-tree-id22582 . -266) (undo-tree-id22583 . -267) (undo-tree-id22584 . -267) (undo-tree-id22585 . -267) (undo-tree-id22586 . -267) (undo-tree-id22587 . -267) (undo-tree-id22588 . -267) (undo-tree-id22589 . -267) (undo-tree-id22590 . -267) (undo-tree-id22591 . -267) (undo-tree-id22592 . -267) (undo-tree-id22593 . -267) (undo-tree-id22594 . -267) (undo-tree-id22595 . -267) (undo-tree-id22596 . -267) (undo-tree-id22597 . -267) (undo-tree-id22598 . -267) (undo-tree-id22599 . -267) (undo-tree-id22600 . -267) (undo-tree-id22601 . -267) (undo-tree-id22602 . -267) (undo-tree-id22603 . -267) (undo-tree-id22604 . -267) (undo-tree-id22605 . -267) (undo-tree-id22606 . -267) (undo-tree-id22607 . -199) (3163 . 3362) (#(" Considering the hidden layer between the aforementioned “annotation” and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector" 0 91 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 91 92 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 92 121 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 121 195 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 195 196 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3231)) nil (25774 26761 830321 348000) 0 nil])
([nil nil ((#("In Figure 16.3, we " 0 19 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2280) (undo-tree-id22462 . -18) (undo-tree-id22463 . -19)) nil (25774 26761 830231 792000) 0 nil])
([nil nil ((#("can " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2280) (undo-tree-id22460 . -3) (undo-tree-id22461 . -4)) nil (25774 26761 830229 883000) 0 nil])
([nil nil ((2280 . 2281) (#("c" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2280)) nil (25774 26761 830227 801000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2342) (undo-tree-id22458 . -1) (undo-tree-id22459 . -1)) nil (25774 26761 830226 693000) 0 nil])
([nil nil ((#("In " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2347) (undo-tree-id22456 . -2) (undo-tree-id22457 . -3)) nil (25774 26761 830224 510000) 0 nil])
([nil nil ((#("addition " 0 8 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 8 9 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2347) (undo-tree-id22454 . -8) (undo-tree-id22455 . -9)) nil (25774 26761 830222 453000) 0 nil])
([nil nil ((#("to " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2347) (undo-tree-id22452 . -2) (undo-tree-id22453 . -3)) nil (25774 26761 830220 255000) 0 nil])
([nil nil ((#("the hidden states, " 0 19 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2347) (undo-tree-id22329 . -18) (undo-tree-id22330 . -18) (undo-tree-id22331 . -18) (undo-tree-id22332 . -18) (undo-tree-id22333 . -19) (undo-tree-id22334 . -18) (undo-tree-id22335 . -2) (undo-tree-id22336 . -2) (undo-tree-id22337 . -2) (undo-tree-id22338 . -2) (undo-tree-id22339 . -2) (undo-tree-id22340 . -2) (undo-tree-id22341 . -2) (undo-tree-id22342 . -2) (undo-tree-id22343 . -2) (undo-tree-id22344 . -2) (undo-tree-id22345 . -2) (undo-tree-id22346 . -2) (undo-tree-id22347 . -2) (undo-tree-id22348 . -2) (undo-tree-id22349 . -2) (undo-tree-id22350 . -2) (undo-tree-id22351 . -2) (undo-tree-id22352 . -2) (undo-tree-id22353 . -2) (undo-tree-id22354 . -2) (undo-tree-id22355 . -2) (undo-tree-id22356 . -9) (undo-tree-id22357 . -9) (undo-tree-id22358 . -9) (undo-tree-id22359 . -9) (undo-tree-id22360 . -9) (undo-tree-id22361 . -9) (undo-tree-id22362 . -9) (undo-tree-id22363 . -9) (undo-tree-id22364 . -9) (undo-tree-id22365 . -9) (undo-tree-id22366 . -9) (undo-tree-id22367 . -9) (undo-tree-id22368 . -9) (undo-tree-id22369 . -9) (undo-tree-id22370 . -9) (undo-tree-id22371 . -9) (undo-tree-id22372 . -9) (undo-tree-id22373 . -9) (undo-tree-id22374 . -9) (undo-tree-id22375 . -9) (undo-tree-id22376 . -9) (undo-tree-id22377 . -16) (undo-tree-id22378 . -16) (undo-tree-id22379 . -16) (undo-tree-id22380 . -16) (undo-tree-id22381 . -16) (undo-tree-id22382 . -16) (undo-tree-id22383 . -16) (undo-tree-id22384 . -16) (undo-tree-id22385 . -16) (undo-tree-id22386 . -16) (undo-tree-id22387 . -16) (undo-tree-id22388 . -16) (undo-tree-id22389 . -16) (undo-tree-id22390 . -16) (undo-tree-id22391 . -16) (undo-tree-id22392 . -16) (undo-tree-id22393 . -16) (undo-tree-id22394 . -16) (undo-tree-id22395 . -16) (undo-tree-id22396 . -16) (undo-tree-id22397 . -16) (undo-tree-id22398 . -16) (undo-tree-id22399 . -16) (undo-tree-id22400 . -16) (undo-tree-id22401 . -16) (undo-tree-id22402 . -16) (undo-tree-id22403 . -17) (undo-tree-id22404 . -17) (undo-tree-id22405 . -17) (undo-tree-id22406 . -17) (undo-tree-id22407 . -17) (undo-tree-id22408 . -17) (undo-tree-id22409 . -17) (undo-tree-id22410 . -17) (undo-tree-id22411 . -17) (undo-tree-id22412 . -17) (undo-tree-id22413 . -17) (undo-tree-id22414 . -17) (undo-tree-id22415 . -17) (undo-tree-id22416 . -17) (undo-tree-id22417 . -17) (undo-tree-id22418 . -17) (undo-tree-id22419 . -17) (undo-tree-id22420 . -17) (undo-tree-id22421 . -17) (undo-tree-id22422 . -17) (undo-tree-id22423 . -17) (undo-tree-id22424 . -17) (undo-tree-id22425 . -17) (undo-tree-id22426 . -17) (undo-tree-id22427 . -17) (undo-tree-id22428 . -17) (undo-tree-id22429 . -18) (undo-tree-id22430 . -18) (undo-tree-id22431 . -18) (undo-tree-id22432 . -18) (undo-tree-id22433 . -18) (undo-tree-id22434 . -18) (undo-tree-id22435 . -18) (undo-tree-id22436 . -18) (undo-tree-id22437 . -18) (undo-tree-id22438 . -18) (undo-tree-id22439 . -18) (undo-tree-id22440 . -18) (undo-tree-id22441 . -18) (undo-tree-id22442 . -18) (undo-tree-id22443 . -18) (undo-tree-id22444 . -18) (undo-tree-id22445 . -18) (undo-tree-id22446 . -18) (undo-tree-id22447 . -18) (undo-tree-id22448 . -18) (undo-tree-id22449 . -18) (undo-tree-id22450 . -18) (undo-tree-id22451 . -19) 2365) nil (25774 26761 830214 861000) 0 nil])
([nil nil ((2368 . 2369)) nil (25774 26761 830131 880000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2387 . 2388) (nil fontified nil 2369 . 2388) (2369 . 2388) 2368) nil (25774 26761 830131 80000) 0 nil])
([nil nil ((2347 . 2348) (#("i" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2347)) nil (25774 26761 830129 748000) 0 nil])
([nil nil ((#("so" 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2359) (undo-tree-id22304 . -1) (undo-tree-id22305 . -1) (undo-tree-id22306 . -2) (undo-tree-id22307 . -1) (undo-tree-id22308 . -1) (undo-tree-id22309 . -1) (undo-tree-id22310 . -1) (undo-tree-id22311 . -1) (undo-tree-id22312 . -1) (undo-tree-id22313 . -1) (undo-tree-id22314 . -1) (undo-tree-id22315 . -1) (undo-tree-id22316 . -1) (undo-tree-id22317 . -1) (undo-tree-id22318 . -1) (undo-tree-id22319 . -1) (undo-tree-id22320 . -1) (undo-tree-id22321 . -1) (undo-tree-id22322 . -1) (undo-tree-id22323 . -1) (undo-tree-id22324 . -1) (undo-tree-id22325 . -1) (undo-tree-id22326 . -1) (undo-tree-id22327 . -1) (undo-tree-id22328 . -2)) nil (25774 26761 830127 828000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2359) (undo-tree-id22302 . -1) (undo-tree-id22303 . -1)) nil (25774 26761 830110 49000) 0 nil])
([nil nil ((#("called " 0 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2359) (undo-tree-id22268 . -6) (undo-tree-id22269 . -5) (undo-tree-id22270 . -5) (undo-tree-id22271 . -6) (undo-tree-id22272 . -6) (undo-tree-id22273 . -6) (undo-tree-id22274 . -6) (undo-tree-id22275 . -6) (undo-tree-id22276 . -6) (undo-tree-id22277 . -6) (undo-tree-id22278 . -6) (undo-tree-id22279 . -7) (undo-tree-id22280 . -7) (undo-tree-id22281 . -7) (undo-tree-id22282 . -7) (undo-tree-id22283 . -7) (undo-tree-id22284 . -7) (undo-tree-id22285 . -7) (undo-tree-id22286 . -6) (undo-tree-id22287 . -6) (undo-tree-id22288 . -6) (undo-tree-id22289 . -6) (undo-tree-id22290 . -6) (undo-tree-id22291 . -6) (undo-tree-id22292 . -6) (undo-tree-id22293 . -6) (undo-tree-id22294 . -6) (undo-tree-id22295 . -6) (undo-tree-id22296 . -6) (undo-tree-id22297 . -6) (undo-tree-id22298 . -6) (undo-tree-id22299 . -6) (undo-tree-id22300 . -6) (undo-tree-id22301 . -7)) nil (25774 26761 830105 627000) 0 nil])
([nil nil ((2376 . 2380) (#("a" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -2376) (undo-tree-id22242 . -1) 2377 (2376 . 2377) (#("," 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2376) (undo-tree-id22243 . -1) (undo-tree-id22244 . -1) (undo-tree-id22245 . -1) (undo-tree-id22246 . -1) (undo-tree-id22247 . -1) (undo-tree-id22248 . -1) (undo-tree-id22249 . -1) (undo-tree-id22250 . -1) (undo-tree-id22251 . -1) (undo-tree-id22252 . -1) (undo-tree-id22253 . -1) (undo-tree-id22254 . -1) (undo-tree-id22255 . -1) (undo-tree-id22256 . -1) (undo-tree-id22257 . -1) (undo-tree-id22258 . -1) (undo-tree-id22259 . -1) (undo-tree-id22260 . -1) (undo-tree-id22261 . -1) (undo-tree-id22262 . -1) (undo-tree-id22263 . -1) (undo-tree-id22264 . -1) (undo-tree-id22265 . -1) (undo-tree-id22266 . -1) (undo-tree-id22267 . -1)) nil (25774 26761 830080 265000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2380) (undo-tree-id22239 . 1) (undo-tree-id22240 . -1) (undo-tree-id22241 . -1)) nil (25774 26761 829315 547000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2405) (undo-tree-id22237 . -1) (undo-tree-id22238 . -1)) nil (25774 26761 829310 705000) 0 nil])
([nil nil ((#("- A context vector 𝑐𝑐𝑖𝑖 is a weighted version of the concatenated hidden states, ℎ(1) … ℎ(𝑇𝑇), which we obtained from RNN #1 in the previous subsection.
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 37 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 37 38 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 38 140 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 140 141 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 141 152 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 152 153 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2407) (undo-tree-id22138 . -152) (undo-tree-id22139 . -2) (undo-tree-id22140 . -60) (undo-tree-id22141 . -60) (undo-tree-id22142 . -60) (undo-tree-id22143 . -60) (undo-tree-id22144 . -60) (undo-tree-id22145 . -60) (undo-tree-id22146 . -60) (undo-tree-id22147 . -60) (undo-tree-id22148 . -60) (undo-tree-id22149 . -60) (undo-tree-id22150 . -60) (undo-tree-id22151 . -60) (undo-tree-id22152 . -60) (undo-tree-id22153 . -60) (undo-tree-id22154 . -60) (undo-tree-id22155 . -60) (undo-tree-id22156 . -66) (undo-tree-id22157 . -66) (undo-tree-id22158 . -66) (undo-tree-id22159 . -66) (undo-tree-id22160 . -66) (undo-tree-id22161 . -66) (undo-tree-id22162 . -66) (undo-tree-id22163 . -66) (undo-tree-id22164 . -66) (undo-tree-id22165 . -66) (undo-tree-id22166 . -66) (undo-tree-id22167 . -66) (undo-tree-id22168 . -66) (undo-tree-id22169 . -66) (undo-tree-id22170 . -66) (undo-tree-id22171 . -66) (undo-tree-id22172 . -66) (undo-tree-id22173 . -66) (undo-tree-id22174 . -66) (undo-tree-id22175 . -66) (undo-tree-id22176 . -66) (undo-tree-id22177 . -66) (undo-tree-id22178 . -66) (undo-tree-id22179 . -66) (undo-tree-id22180 . -66) (undo-tree-id22181 . -66) (undo-tree-id22182 . -66) (undo-tree-id22183 . -66) (undo-tree-id22184 . -66) (undo-tree-id22185 . -66) (undo-tree-id22186 . -66) (undo-tree-id22187 . -2) (undo-tree-id22188 . -2) (undo-tree-id22189 . -2) (undo-tree-id22190 . -2) (undo-tree-id22191 . -2) (undo-tree-id22192 . -2) (undo-tree-id22193 . -2) (undo-tree-id22194 . -2) (undo-tree-id22195 . -2) (undo-tree-id22196 . -2) (undo-tree-id22197 . -2) (undo-tree-id22198 . -2) (undo-tree-id22199 . -2) (undo-tree-id22200 . -2) (undo-tree-id22201 . -2) (undo-tree-id22202 . -2) (undo-tree-id22203 . -2) (undo-tree-id22204 . -2) (undo-tree-id22205 . -2) (undo-tree-id22206 . -2) (undo-tree-id22207 . -2) (undo-tree-id22208 . -2) (undo-tree-id22209 . -2) (undo-tree-id22210 . -2) (undo-tree-id22211 . -2) (undo-tree-id22212 . -2) (undo-tree-id22213 . -2) (undo-tree-id22214 . -2) (undo-tree-id22215 . -2) (undo-tree-id22216 . -2) (undo-tree-id22217 . -2) (undo-tree-id22218 . -2) (undo-tree-id22219 . -2) (undo-tree-id22220 . -2) (undo-tree-id22221 . -2) (undo-tree-id22222 . -2) (undo-tree-id22223 . -2) (undo-tree-id22224 . -2) (undo-tree-id22225 . -2) (undo-tree-id22226 . -2) (undo-tree-id22227 . -2) (undo-tree-id22228 . -2) (undo-tree-id22229 . -2) (undo-tree-id22230 . -2) (undo-tree-id22231 . -2) (undo-tree-id22232 . -2) (undo-tree-id22233 . -2) (undo-tree-id22234 . -2) (undo-tree-id22235 . -2) (undo-tree-id22236 . -153) 2409) nil (25774 26761 829303 896000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2407) (undo-tree-id22054 . -1) (undo-tree-id22055 . -1) (undo-tree-id22056 . -1) (undo-tree-id22057 . -1) (undo-tree-id22058 . -1) (undo-tree-id22059 . -1) (undo-tree-id22060 . -1) (undo-tree-id22061 . -1) (undo-tree-id22062 . -1) (undo-tree-id22063 . -1) (undo-tree-id22064 . -1) (undo-tree-id22065 . -1) (undo-tree-id22066 . -1) (undo-tree-id22067 . -1) (undo-tree-id22068 . -1) (undo-tree-id22069 . -1) (undo-tree-id22070 . -1) (undo-tree-id22071 . -1) (undo-tree-id22072 . -1) (undo-tree-id22073 . -1) (undo-tree-id22074 . -1) (undo-tree-id22075 . -1) (undo-tree-id22076 . -1) (undo-tree-id22077 . -1) (undo-tree-id22078 . -1) (undo-tree-id22079 . -1) (undo-tree-id22080 . -1) (undo-tree-id22081 . -1) (undo-tree-id22082 . -1) (undo-tree-id22083 . -1) (undo-tree-id22084 . -1) (undo-tree-id22085 . -1) (undo-tree-id22086 . -1) (undo-tree-id22087 . -1) (undo-tree-id22088 . -1) (undo-tree-id22089 . -1) (undo-tree-id22090 . -1) (undo-tree-id22091 . -1) (undo-tree-id22092 . -1) (undo-tree-id22093 . -1) (undo-tree-id22094 . -1) (undo-tree-id22095 . -1) (undo-tree-id22096 . -1) (undo-tree-id22097 . -1) (undo-tree-id22098 . -1) (undo-tree-id22099 . -1) (undo-tree-id22100 . -1) (undo-tree-id22101 . -1) (undo-tree-id22102 . -1) (undo-tree-id22103 . -1) (undo-tree-id22104 . -1) (undo-tree-id22105 . -1) (undo-tree-id22106 . -1) (undo-tree-id22107 . -1) (undo-tree-id22108 . -1) (undo-tree-id22109 . -1) (undo-tree-id22110 . -1) (undo-tree-id22111 . -1) (undo-tree-id22112 . -1) (undo-tree-id22113 . -1) (undo-tree-id22114 . -1) (undo-tree-id22115 . -1) (undo-tree-id22116 . -1) (undo-tree-id22117 . -1) (undo-tree-id22118 . -1) (undo-tree-id22119 . -1) (undo-tree-id22120 . -1) (undo-tree-id22121 . -1) (undo-tree-id22122 . -1) (undo-tree-id22123 . -1) (undo-tree-id22124 . -1) (undo-tree-id22125 . -1) (undo-tree-id22126 . -1) (undo-tree-id22127 . -1) (undo-tree-id22128 . -1) (undo-tree-id22129 . -1) (undo-tree-id22130 . -1) (undo-tree-id22131 . -1) (undo-tree-id22132 . -1) (undo-tree-id22133 . -1) (undo-tree-id22134 . -1) (undo-tree-id22135 . -1) (undo-tree-id22136 . -1) (undo-tree-id22137 . -1)) nil (25774 26761 828650 929000) 0 nil])
([nil nil ((3229 . 3230)) nil (25774 26761 826767 628000) 0 nil])
([nil nil ((#("We " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2409) (undo-tree-id24849 . -2) (undo-tree-id24850 . -3) (t 25774 26761 856761 560000)) nil (25774 26802 682178 953000) 0 nil])
([nil nil ((#("can " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2409) (undo-tree-id24847 . -3) (undo-tree-id24848 . -4)) nil (25774 26802 682176 764000) 0 nil])
([nil nil ((2409 . 2410) (#("c" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2409)) nil (25774 26802 682174 578000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2470) (undo-tree-id24845 . -1) (undo-tree-id24846 . -1)) nil (25774 26802 682173 481000) 0 nil])
([nil nil ((2407 . 2638) (#("- 𝑇𝑇 𝑐𝑐𝑖𝑖 = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 ℎ(𝑗𝑗) 𝑗𝑗𝑗𝑗 Here, 𝛼𝛼𝑖𝑖𝑖𝑖 represents the attention weights over the input sequence 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 in the context of the ith input sequence element.

- Compute the context vector of the ith input as a weighted sum" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 4 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 5 26 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 26 27 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 27 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 31 32 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 32 71 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 71 107 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 107 108 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 108 110 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 110 111 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 111 112 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 112 142 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 142 143 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 143 166 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 166 167 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 167 168 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 168 169 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 169 170 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 170 231 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2407) (undo-tree-id24363 . -231) (undo-tree-id24364 . -231) (undo-tree-id24365 . -170) (undo-tree-id24366 . -170) (undo-tree-id24367 . 60) (undo-tree-id24368 . -170) (undo-tree-id24369 . -170) (undo-tree-id24370 . -231) (undo-tree-id24371 . -170) (undo-tree-id24372 . -170) (undo-tree-id24373 . -170) (undo-tree-id24374 . -170) (undo-tree-id24375 . -170) (undo-tree-id24376 . -170) (undo-tree-id24377 . -170) (undo-tree-id24378 . -170) (undo-tree-id24379 . -170) (undo-tree-id24380 . -170) (undo-tree-id24381 . -170) (undo-tree-id24382 . -170) (undo-tree-id24383 . -170) (undo-tree-id24384 . -170) (undo-tree-id24385 . -170) (undo-tree-id24386 . -170) (undo-tree-id24387 . -170) (undo-tree-id24388 . -170) (undo-tree-id24389 . -170) (undo-tree-id24390 . -170) (undo-tree-id24391 . -170) (undo-tree-id24392 . -170) (undo-tree-id24393 . -170) (undo-tree-id24394 . -170) (undo-tree-id24395 . -170) (undo-tree-id24396 . -170) (undo-tree-id24397 . -170) (undo-tree-id24398 . -170) (undo-tree-id24399 . -170) (undo-tree-id24400 . -170) (undo-tree-id24401 . -170) (undo-tree-id24402 . -170) (undo-tree-id24403 . -170) (undo-tree-id24404 . -170) (undo-tree-id24405 . -170) (undo-tree-id24406 . -170) (undo-tree-id24407 . -170) (undo-tree-id24408 . -170) (undo-tree-id24409 . -170) (undo-tree-id24410 . -170) (undo-tree-id24411 . -170) (undo-tree-id24412 . -170) (undo-tree-id24413 . -170) (undo-tree-id24414 . -170) (undo-tree-id24415 . -170) (undo-tree-id24416 . -170) (undo-tree-id24417 . -170) (undo-tree-id24418 . -170) (undo-tree-id24419 . -170) (undo-tree-id24420 . -170) (undo-tree-id24421 . -170) (undo-tree-id24422 . -170) (undo-tree-id24423 . -170) (undo-tree-id24424 . -170) (undo-tree-id24425 . -170) (undo-tree-id24426 . -170) (undo-tree-id24427 . -170) (undo-tree-id24428 . -170) (undo-tree-id24429 . -170) (undo-tree-id24430 . -170) (undo-tree-id24431 . -170) (undo-tree-id24432 . -170) (undo-tree-id24433 . -170) (undo-tree-id24434 . -170) (undo-tree-id24435 . -170) (undo-tree-id24436 . -170) (undo-tree-id24437 . -170) (undo-tree-id24438 . -170) (undo-tree-id24439 . -170) (undo-tree-id24440 . -170) (undo-tree-id24441 . -170) (undo-tree-id24442 . -170) (undo-tree-id24443 . -170) (undo-tree-id24444 . -170) (undo-tree-id24445 . -170) (undo-tree-id24446 . -170) (undo-tree-id24447 . -170) (undo-tree-id24448 . -170) (undo-tree-id24449 . -170) (undo-tree-id24450 . -170) (undo-tree-id24451 . -170) (undo-tree-id24452 . -170) (undo-tree-id24453 . -170) (undo-tree-id24454 . -170) (undo-tree-id24455 . -170) (undo-tree-id24456 . -170) (undo-tree-id24457 . -170) (undo-tree-id24458 . -170) (undo-tree-id24459 . -170) (undo-tree-id24460 . -170) (undo-tree-id24461 . -170) (undo-tree-id24462 . -170) (undo-tree-id24463 . -170) (undo-tree-id24464 . -170) (undo-tree-id24465 . -170) (undo-tree-id24466 . -170) (undo-tree-id24467 . -170) (undo-tree-id24468 . -170) (undo-tree-id24469 . -170) (undo-tree-id24470 . -170) (undo-tree-id24471 . -170) (undo-tree-id24472 . -170) (undo-tree-id24473 . -170) (undo-tree-id24474 . -170) (undo-tree-id24475 . -170) (undo-tree-id24476 . -170) (undo-tree-id24477 . -170) (undo-tree-id24478 . -170) (undo-tree-id24479 . -170) (undo-tree-id24480 . -170) (undo-tree-id24481 . -170) (undo-tree-id24482 . -170) (undo-tree-id24483 . -170) (undo-tree-id24484 . -170) (undo-tree-id24485 . -170) (undo-tree-id24486 . -170) (undo-tree-id24487 . -170) (undo-tree-id24488 . -170) (undo-tree-id24489 . -170) (undo-tree-id24490 . -170) (undo-tree-id24491 . -170) (undo-tree-id24492 . -170) (undo-tree-id24493 . -170) (undo-tree-id24494 . -170) (undo-tree-id24495 . -170) (undo-tree-id24496 . -170) (undo-tree-id24497 . -170) (undo-tree-id24498 . -170) (undo-tree-id24499 . -170) (undo-tree-id24500 . -170) (undo-tree-id24501 . -170) (undo-tree-id24502 . -170) (undo-tree-id24503 . -170) (undo-tree-id24504 . -170) (undo-tree-id24505 . -170) (undo-tree-id24506 . -170) (undo-tree-id24507 . -170) (undo-tree-id24508 . -170) (undo-tree-id24509 . -170) (undo-tree-id24510 . -170) (undo-tree-id24511 . -170) (undo-tree-id24512 . -170) (undo-tree-id24513 . -170) (undo-tree-id24514 . -170) (undo-tree-id24515 . -170) (undo-tree-id24516 . -170) (undo-tree-id24517 . -170) (undo-tree-id24518 . -170) (undo-tree-id24519 . -170) (undo-tree-id24520 . -170) (undo-tree-id24521 . -170) (undo-tree-id24522 . -170) (undo-tree-id24523 . -170) (undo-tree-id24524 . -170) (undo-tree-id24525 . -170) (undo-tree-id24526 . -170) (undo-tree-id24527 . -170) (undo-tree-id24528 . -170) (undo-tree-id24529 . -170) (undo-tree-id24530 . -170) (undo-tree-id24531 . -170) (undo-tree-id24532 . -170) (undo-tree-id24533 . -170) (undo-tree-id24534 . -170) (undo-tree-id24535 . -170) (undo-tree-id24536 . -170) (undo-tree-id24537 . -170) (undo-tree-id24538 . -170) (undo-tree-id24539 . -170) (undo-tree-id24540 . -170) (undo-tree-id24541 . -170) (undo-tree-id24542 . -170) (undo-tree-id24543 . -176) (undo-tree-id24544 . -176) (undo-tree-id24545 . -176) (undo-tree-id24546 . -176) (undo-tree-id24547 . -176) (undo-tree-id24548 . -176) (undo-tree-id24549 . -176) (undo-tree-id24550 . -176) (undo-tree-id24551 . -176) (undo-tree-id24552 . -176) (undo-tree-id24553 . -176) (undo-tree-id24554 . -176) (undo-tree-id24555 . -176) (undo-tree-id24556 . -176) (undo-tree-id24557 . -176) (undo-tree-id24558 . -176) (undo-tree-id24559 . -180) (undo-tree-id24560 . -180) (undo-tree-id24561 . -180) (undo-tree-id24562 . -180) (undo-tree-id24563 . -180) (undo-tree-id24564 . -180) (undo-tree-id24565 . -180) (undo-tree-id24566 . -180) (undo-tree-id24567 . -180) (undo-tree-id24568 . -180) (undo-tree-id24569 . -180) (undo-tree-id24570 . -180) (undo-tree-id24571 . -180) (undo-tree-id24572 . -180) (undo-tree-id24573 . -180) (undo-tree-id24574 . -180) (undo-tree-id24575 . -188) (undo-tree-id24576 . -188) (undo-tree-id24577 . -188) (undo-tree-id24578 . -188) (undo-tree-id24579 . -188) (undo-tree-id24580 . -188) (undo-tree-id24581 . -188) (undo-tree-id24582 . -188) (undo-tree-id24583 . -188) (undo-tree-id24584 . -188) (undo-tree-id24585 . -188) (undo-tree-id24586 . -188) (undo-tree-id24587 . -188) (undo-tree-id24588 . -188) (undo-tree-id24589 . -188) (undo-tree-id24590 . -188) (undo-tree-id24591 . -195) (undo-tree-id24592 . -195) (undo-tree-id24593 . -195) (undo-tree-id24594 . -195) (undo-tree-id24595 . -195) (undo-tree-id24596 . -195) (undo-tree-id24597 . -195) (undo-tree-id24598 . -195) (undo-tree-id24599 . -195) (undo-tree-id24600 . -195) (undo-tree-id24601 . -195) (undo-tree-id24602 . -195) (undo-tree-id24603 . -195) (undo-tree-id24604 . -195) (undo-tree-id24605 . -195) (undo-tree-id24606 . -195) (undo-tree-id24607 . -198) (undo-tree-id24608 . -198) (undo-tree-id24609 . -198) (undo-tree-id24610 . -198) (undo-tree-id24611 . -198) (undo-tree-id24612 . -198) (undo-tree-id24613 . -198) (undo-tree-id24614 . -198) (undo-tree-id24615 . -198) (undo-tree-id24616 . -198) (undo-tree-id24617 . -198) (undo-tree-id24618 . -198) (undo-tree-id24619 . -198) (undo-tree-id24620 . -198) (undo-tree-id24621 . -198) (undo-tree-id24622 . -198) (undo-tree-id24623 . -202) (undo-tree-id24624 . -202) (undo-tree-id24625 . -202) (undo-tree-id24626 . -202) (undo-tree-id24627 . -202) (undo-tree-id24628 . -202) (undo-tree-id24629 . -202) (undo-tree-id24630 . -202) (undo-tree-id24631 . -202) (undo-tree-id24632 . -202) (undo-tree-id24633 . -202) (undo-tree-id24634 . -202) (undo-tree-id24635 . -202) (undo-tree-id24636 . -202) (undo-tree-id24637 . -202) (undo-tree-id24638 . -202) (undo-tree-id24639 . -202) (undo-tree-id24640 . -202) (undo-tree-id24641 . -202) (undo-tree-id24642 . -202) (undo-tree-id24643 . -202) (undo-tree-id24644 . -202) (undo-tree-id24645 . -202) (undo-tree-id24646 . -202) (undo-tree-id24647 . -202) (undo-tree-id24648 . -202) (undo-tree-id24649 . 27) (undo-tree-id24650 . -207) (undo-tree-id24651 . -206) (undo-tree-id24652 . -206) (undo-tree-id24653 . -206) (undo-tree-id24654 . -206) (undo-tree-id24655 . -206) (undo-tree-id24656 . -206) (undo-tree-id24657 . -206) (undo-tree-id24658 . -206) (undo-tree-id24659 . -206) (undo-tree-id24660 . -206) (undo-tree-id24661 . -206) (undo-tree-id24662 . -206) (undo-tree-id24663 . -206) (undo-tree-id24664 . -206) (undo-tree-id24665 . -206) (undo-tree-id24666 . -206) (undo-tree-id24667 . -212) (undo-tree-id24668 . -212) (undo-tree-id24669 . -212) (undo-tree-id24670 . -212) (undo-tree-id24671 . -212) (undo-tree-id24672 . -212) (undo-tree-id24673 . -212) (undo-tree-id24674 . -212) (undo-tree-id24675 . -212) (undo-tree-id24676 . -212) (undo-tree-id24677 . -212) (undo-tree-id24678 . -212) (undo-tree-id24679 . -212) (undo-tree-id24680 . -212) (undo-tree-id24681 . -212) (undo-tree-id24682 . -212) (undo-tree-id24683 . -215) (undo-tree-id24684 . -215) (undo-tree-id24685 . -215) (undo-tree-id24686 . -215) (undo-tree-id24687 . -215) (undo-tree-id24688 . -215) (undo-tree-id24689 . -215) (undo-tree-id24690 . -215) (undo-tree-id24691 . -215) (undo-tree-id24692 . -215) (undo-tree-id24693 . -215) (undo-tree-id24694 . -215) (undo-tree-id24695 . -215) (undo-tree-id24696 . -215) (undo-tree-id24697 . -215) (undo-tree-id24698 . -215) (undo-tree-id24699 . -217) (undo-tree-id24700 . -217) (undo-tree-id24701 . -217) (undo-tree-id24702 . -217) (undo-tree-id24703 . -217) (undo-tree-id24704 . -217) (undo-tree-id24705 . -217) (undo-tree-id24706 . -217) (undo-tree-id24707 . -217) (undo-tree-id24708 . -217) (undo-tree-id24709 . -217) (undo-tree-id24710 . -217) (undo-tree-id24711 . -217) (undo-tree-id24712 . -217) (undo-tree-id24713 . -217) (undo-tree-id24714 . -217) (undo-tree-id24715 . -226) (undo-tree-id24716 . -226) (undo-tree-id24717 . -226) (undo-tree-id24718 . -226) (undo-tree-id24719 . -226) (undo-tree-id24720 . -226) (undo-tree-id24721 . -226) (undo-tree-id24722 . -226) (undo-tree-id24723 . -226) (undo-tree-id24724 . -226) (undo-tree-id24725 . -226) (undo-tree-id24726 . -226) (undo-tree-id24727 . -226) (undo-tree-id24728 . -226) (undo-tree-id24729 . -226) (undo-tree-id24730 . -226) (undo-tree-id24731 . -230) (undo-tree-id24732 . -230) (undo-tree-id24733 . -230) (undo-tree-id24734 . -230) (undo-tree-id24735 . -230) (undo-tree-id24736 . -230) (undo-tree-id24737 . -230) (undo-tree-id24738 . -230) (undo-tree-id24739 . -230) (undo-tree-id24740 . -230) (undo-tree-id24741 . -230) (undo-tree-id24742 . -230) (undo-tree-id24743 . -230) (undo-tree-id24744 . -230) (undo-tree-id24745 . -230) (undo-tree-id24746 . -230) (undo-tree-id24747 . -231) (undo-tree-id24748 . -231) (undo-tree-id24749 . -231) (undo-tree-id24750 . -231) (undo-tree-id24751 . -231) (undo-tree-id24752 . -231) (undo-tree-id24753 . -231) (undo-tree-id24754 . -231) (undo-tree-id24755 . -231) (undo-tree-id24756 . -231) (undo-tree-id24757 . -231) (undo-tree-id24758 . -231) (undo-tree-id24759 . -231) (undo-tree-id24760 . -231) (undo-tree-id24761 . -231) (undo-tree-id24762 . -231) (undo-tree-id24763 . -231) (undo-tree-id24764 . -231) (undo-tree-id24765 . -231) (undo-tree-id24766 . -231) (undo-tree-id24767 . -231) (undo-tree-id24768 . -231) (undo-tree-id24769 . -231) (undo-tree-id24770 . -231) (undo-tree-id24771 . -231) (undo-tree-id24772 . -231) (undo-tree-id24773 . -231) (undo-tree-id24774 . -231) (undo-tree-id24775 . -231) (undo-tree-id24776 . -231) (undo-tree-id24777 . -231) (undo-tree-id24778 . -231) (undo-tree-id24779 . -231) (undo-tree-id24780 . -231) (undo-tree-id24781 . -231) (undo-tree-id24782 . -231) (undo-tree-id24783 . -231) (undo-tree-id24784 . -231) (undo-tree-id24785 . -231) (undo-tree-id24786 . -231) (undo-tree-id24787 . -231) (undo-tree-id24788 . -231) (undo-tree-id24789 . -231) (undo-tree-id24790 . -231) (undo-tree-id24791 . -231) (undo-tree-id24792 . -231) (undo-tree-id24793 . -231) (undo-tree-id24794 . -231) (undo-tree-id24795 . -231) (undo-tree-id24796 . -231) (undo-tree-id24797 . -231) (undo-tree-id24798 . -231) (undo-tree-id24799 . -231) (undo-tree-id24800 . -231) (undo-tree-id24801 . -231) (undo-tree-id24802 . -231) (undo-tree-id24803 . -231) (undo-tree-id24804 . -231) (undo-tree-id24805 . -231) (undo-tree-id24806 . -231) (undo-tree-id24807 . -231) (undo-tree-id24808 . -231) (undo-tree-id24809 . -231) (undo-tree-id24810 . -231) (undo-tree-id24811 . -231) (undo-tree-id24812 . -231) (undo-tree-id24813 . -231) (undo-tree-id24814 . -168) (2407 . 2575) (#(" 𝑇𝑇 𝑐𝑐𝑖𝑖 = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 ℎ(𝑗𝑗) 𝑗𝑗𝑗𝑗 Here, 𝛼𝛼𝑖𝑖𝑖𝑖 represents the attention weights over the input sequence 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 in the context of the ith input sequence element." 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 4 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 25 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 25 26 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 26 30 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 30 31 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 31 70 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 70 106 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 106 107 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 107 109 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 109 110 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 110 111 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 111 141 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 141 142 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 142 165 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2470) (undo-tree-id24815 . -1) (undo-tree-id24816 . -1) (undo-tree-id24817 . -1) (undo-tree-id24818 . -1) (undo-tree-id24819 . -1) (undo-tree-id24820 . -1) (undo-tree-id24821 . -1) (undo-tree-id24822 . -1) (undo-tree-id24823 . -1) (undo-tree-id24824 . -1) (undo-tree-id24825 . -1) (undo-tree-id24826 . -1) (undo-tree-id24827 . -1) (undo-tree-id24828 . -1) (undo-tree-id24829 . -1) (undo-tree-id24830 . -1) (undo-tree-id24831 . -1) (undo-tree-id24832 . -1) (undo-tree-id24833 . -1) (undo-tree-id24834 . -1) (undo-tree-id24835 . -1) (undo-tree-id24836 . -1) (undo-tree-id24837 . -1) (undo-tree-id24838 . -1) (undo-tree-id24839 . -1) (undo-tree-id24840 . -1) (undo-tree-id24841 . -1) (undo-tree-id24842 . -1) (undo-tree-id24843 . -1) (undo-tree-id24844 . -1) 2471) nil (25774 26802 682156 696000) 0 nil])
([nil nil ((#("𝑇𝑇 𝑐𝑐𝑖𝑖 = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 ℎ(𝑗𝑗) 𝑗𝑗𝑗𝑗 Here, 𝛼𝛼𝑖𝑖𝑖𝑖 " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2 3 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 24 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 24 25 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 25 29 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 29 30 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 30 43 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2474) (undo-tree-id24030 . 43) (undo-tree-id24031 . -42) (undo-tree-id24032 . -42) (undo-tree-id24033 . -42) (undo-tree-id24034 . -42) (undo-tree-id24035 . -43) (undo-tree-id24036 . -42) (undo-tree-id24037 . -1) (undo-tree-id24038 . -1) (undo-tree-id24039 . -1) (undo-tree-id24040 . -1) (undo-tree-id24041 . -1) (undo-tree-id24042 . -1) (undo-tree-id24043 . -1) (undo-tree-id24044 . -1) (undo-tree-id24045 . -1) (undo-tree-id24046 . -1) (undo-tree-id24047 . -1) (undo-tree-id24048 . -1) (undo-tree-id24049 . -1) (undo-tree-id24050 . -1) (undo-tree-id24051 . -1) (undo-tree-id24052 . -1) (undo-tree-id24053 . -1) (undo-tree-id24054 . -1) (undo-tree-id24055 . -1) (undo-tree-id24056 . -1) (undo-tree-id24057 . -1) (undo-tree-id24058 . -6) (undo-tree-id24059 . -6) (undo-tree-id24060 . -6) (undo-tree-id24061 . -6) (undo-tree-id24062 . -6) (undo-tree-id24063 . -6) (undo-tree-id24064 . -6) (undo-tree-id24065 . -6) (undo-tree-id24066 . -6) (undo-tree-id24067 . -6) (undo-tree-id24068 . -6) (undo-tree-id24069 . -6) (undo-tree-id24070 . -6) (undo-tree-id24071 . -6) (undo-tree-id24072 . -6) (undo-tree-id24073 . -6) (undo-tree-id24074 . -6) (undo-tree-id24075 . -6) (undo-tree-id24076 . -6) (undo-tree-id24077 . -6) (undo-tree-id24078 . -6) (undo-tree-id24079 . -8) (undo-tree-id24080 . -8) (undo-tree-id24081 . -8) (undo-tree-id24082 . -8) (undo-tree-id24083 . -8) (undo-tree-id24084 . -8) (undo-tree-id24085 . -8) (undo-tree-id24086 . -8) (undo-tree-id24087 . -8) (undo-tree-id24088 . -8) (undo-tree-id24089 . -8) (undo-tree-id24090 . -8) (undo-tree-id24091 . -8) (undo-tree-id24092 . -8) (undo-tree-id24093 . -8) (undo-tree-id24094 . -8) (undo-tree-id24095 . -8) (undo-tree-id24096 . -8) (undo-tree-id24097 . -8) (undo-tree-id24098 . -8) (undo-tree-id24099 . -8) (undo-tree-id24100 . -10) (undo-tree-id24101 . -10) (undo-tree-id24102 . -10) (undo-tree-id24103 . -10) (undo-tree-id24104 . -10) (undo-tree-id24105 . -10) (undo-tree-id24106 . -10) (undo-tree-id24107 . -10) (undo-tree-id24108 . -10) (undo-tree-id24109 . -10) (undo-tree-id24110 . -10) (undo-tree-id24111 . -10) (undo-tree-id24112 . -10) (undo-tree-id24113 . -10) (undo-tree-id24114 . -10) (undo-tree-id24115 . -10) (undo-tree-id24116 . -10) (undo-tree-id24117 . -10) (undo-tree-id24118 . -10) (undo-tree-id24119 . -10) (undo-tree-id24120 . -10) (undo-tree-id24121 . -17) (undo-tree-id24122 . -17) (undo-tree-id24123 . -17) (undo-tree-id24124 . -17) (undo-tree-id24125 . -17) (undo-tree-id24126 . -17) (undo-tree-id24127 . -17) (undo-tree-id24128 . -17) (undo-tree-id24129 . -17) (undo-tree-id24130 . -17) (undo-tree-id24131 . -17) (undo-tree-id24132 . -17) (undo-tree-id24133 . -17) (undo-tree-id24134 . -17) (undo-tree-id24135 . -17) (undo-tree-id24136 . -17) (undo-tree-id24137 . -17) (undo-tree-id24138 . -17) (undo-tree-id24139 . -17) (undo-tree-id24140 . -17) (undo-tree-id24141 . -17) (undo-tree-id24142 . -19) (undo-tree-id24143 . -19) (undo-tree-id24144 . -19) (undo-tree-id24145 . -19) (undo-tree-id24146 . -19) (undo-tree-id24147 . -19) (undo-tree-id24148 . -19) (undo-tree-id24149 . -19) (undo-tree-id24150 . -19) (undo-tree-id24151 . -19) (undo-tree-id24152 . -19) (undo-tree-id24153 . -19) (undo-tree-id24154 . -19) (undo-tree-id24155 . -19) (undo-tree-id24156 . -19) (undo-tree-id24157 . -19) (undo-tree-id24158 . -19) (undo-tree-id24159 . -19) (undo-tree-id24160 . -19) (undo-tree-id24161 . -19) (undo-tree-id24162 . -19) (undo-tree-id24163 . -20) (undo-tree-id24164 . -20) (undo-tree-id24165 . -20) (undo-tree-id24166 . -20) (undo-tree-id24167 . -20) (undo-tree-id24168 . -20) (undo-tree-id24169 . -20) (undo-tree-id24170 . -20) (undo-tree-id24171 . -20) (undo-tree-id24172 . -20) (undo-tree-id24173 . -20) (undo-tree-id24174 . -20) (undo-tree-id24175 . -20) (undo-tree-id24176 . -20) (undo-tree-id24177 . -20) (undo-tree-id24178 . -20) (undo-tree-id24179 . -20) (undo-tree-id24180 . -20) (undo-tree-id24181 . -20) (undo-tree-id24182 . -20) (undo-tree-id24183 . -20) (undo-tree-id24184 . -22) (undo-tree-id24185 . -22) (undo-tree-id24186 . -22) (undo-tree-id24187 . -22) (undo-tree-id24188 . -22) (undo-tree-id24189 . -22) (undo-tree-id24190 . -22) (undo-tree-id24191 . -22) (undo-tree-id24192 . -22) (undo-tree-id24193 . -22) (undo-tree-id24194 . -22) (undo-tree-id24195 . -22) (undo-tree-id24196 . -22) (undo-tree-id24197 . -22) (undo-tree-id24198 . -22) (undo-tree-id24199 . -22) (undo-tree-id24200 . -22) (undo-tree-id24201 . -22) (undo-tree-id24202 . -22) (undo-tree-id24203 . -22) (undo-tree-id24204 . -22) (undo-tree-id24205 . -23) (undo-tree-id24206 . -23) (undo-tree-id24207 . -23) (undo-tree-id24208 . -23) (undo-tree-id24209 . -23) (undo-tree-id24210 . -23) (undo-tree-id24211 . -23) (undo-tree-id24212 . -23) (undo-tree-id24213 . -23) (undo-tree-id24214 . -23) (undo-tree-id24215 . -23) (undo-tree-id24216 . -23) (undo-tree-id24217 . -23) (undo-tree-id24218 . -23) (undo-tree-id24219 . -23) (undo-tree-id24220 . -23) (undo-tree-id24221 . -23) (undo-tree-id24222 . -23) (undo-tree-id24223 . -23) (undo-tree-id24224 . -23) (undo-tree-id24225 . -23) (undo-tree-id24226 . -28) (undo-tree-id24227 . -28) (undo-tree-id24228 . -28) (undo-tree-id24229 . -28) (undo-tree-id24230 . -28) (undo-tree-id24231 . -28) (undo-tree-id24232 . -28) (undo-tree-id24233 . -28) (undo-tree-id24234 . -28) (undo-tree-id24235 . -28) (undo-tree-id24236 . -28) (undo-tree-id24237 . -28) (undo-tree-id24238 . -28) (undo-tree-id24239 . -28) (undo-tree-id24240 . -28) (undo-tree-id24241 . -28) (undo-tree-id24242 . -28) (undo-tree-id24243 . -28) (undo-tree-id24244 . -28) (undo-tree-id24245 . -28) (undo-tree-id24246 . -28) (undo-tree-id24247 . -33) (undo-tree-id24248 . -33) (undo-tree-id24249 . -33) (undo-tree-id24250 . -33) (undo-tree-id24251 . -33) (undo-tree-id24252 . -33) (undo-tree-id24253 . -33) (undo-tree-id24254 . -33) (undo-tree-id24255 . -33) (undo-tree-id24256 . -33) (undo-tree-id24257 . -33) (undo-tree-id24258 . -33) (undo-tree-id24259 . -33) (undo-tree-id24260 . -33) (undo-tree-id24261 . -33) (undo-tree-id24262 . -33) (undo-tree-id24263 . -33) (undo-tree-id24264 . -33) (undo-tree-id24265 . -33) (undo-tree-id24266 . -33) (undo-tree-id24267 . -33) (undo-tree-id24268 . -34) (undo-tree-id24269 . -34) (undo-tree-id24270 . -34) (undo-tree-id24271 . -34) (undo-tree-id24272 . -34) (undo-tree-id24273 . -34) (undo-tree-id24274 . -34) (undo-tree-id24275 . -34) (undo-tree-id24276 . -34) (undo-tree-id24277 . -34) (undo-tree-id24278 . -34) (undo-tree-id24279 . -34) (undo-tree-id24280 . -34) (undo-tree-id24281 . -34) (undo-tree-id24282 . -34) (undo-tree-id24283 . -34) (undo-tree-id24284 . -34) (undo-tree-id24285 . -34) (undo-tree-id24286 . -34) (undo-tree-id24287 . -34) (undo-tree-id24288 . -34) (undo-tree-id24289 . -41) (undo-tree-id24290 . -41) (undo-tree-id24291 . -41) (undo-tree-id24292 . -41) (undo-tree-id24293 . -41) (undo-tree-id24294 . -41) (undo-tree-id24295 . -41) (undo-tree-id24296 . -41) (undo-tree-id24297 . -41) (undo-tree-id24298 . -41) (undo-tree-id24299 . -41) (undo-tree-id24300 . -41) (undo-tree-id24301 . -41) (undo-tree-id24302 . -41) (undo-tree-id24303 . -41) (undo-tree-id24304 . -41) (undo-tree-id24305 . -41) (undo-tree-id24306 . -41) (undo-tree-id24307 . -41) (undo-tree-id24308 . -41) (undo-tree-id24309 . -41) (undo-tree-id24310 . -41) (undo-tree-id24311 . -41) (undo-tree-id24312 . -41) (undo-tree-id24313 . -41) (undo-tree-id24314 . -41) (undo-tree-id24315 . -41) (undo-tree-id24316 . -41) (undo-tree-id24317 . -41) (undo-tree-id24318 . -41) (undo-tree-id24319 . -41) (undo-tree-id24320 . -41) (undo-tree-id24321 . -41) (undo-tree-id24322 . -41) (undo-tree-id24323 . -41) (undo-tree-id24324 . -41) (undo-tree-id24325 . -42) (undo-tree-id24326 . -42) (undo-tree-id24327 . -42) (undo-tree-id24328 . -42) (undo-tree-id24329 . -42) (undo-tree-id24330 . -42) (undo-tree-id24331 . -42) (undo-tree-id24332 . -42) (undo-tree-id24333 . -42) (undo-tree-id24334 . -42) (undo-tree-id24335 . -42) (undo-tree-id24336 . -42) (undo-tree-id24337 . -42) (undo-tree-id24338 . -42) (undo-tree-id24339 . -42) (undo-tree-id24340 . -42) (undo-tree-id24341 . -42) (undo-tree-id24342 . -42) (undo-tree-id24343 . -42) (undo-tree-id24344 . -42) (undo-tree-id24345 . -42) (undo-tree-id24346 . -42) (undo-tree-id24347 . -42) (undo-tree-id24348 . -42) (undo-tree-id24349 . -42) (undo-tree-id24350 . -42) (undo-tree-id24351 . -42) (undo-tree-id24352 . -42) (undo-tree-id24353 . -42) (undo-tree-id24354 . -42) (undo-tree-id24355 . -42) (undo-tree-id24356 . -42) (undo-tree-id24357 . -42) (undo-tree-id24358 . -42) (undo-tree-id24359 . -42) (undo-tree-id24360 . -42) (undo-tree-id24361 . -42) (undo-tree-id24362 . -43) 2516) nil (25774 26802 681838 201000) 0 nil])
([nil nil ((#("- represents the attention weights over the input sequence 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 in the context of the ith input sequence element.
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 28 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 28 64 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 64 65 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 65 67 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 67 68 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 68 69 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 69 99 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 99 100 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 100 123 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 123 124 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2472) (undo-tree-id23449 . 122) (undo-tree-id23450 . -123) (undo-tree-id23451 . -2) (undo-tree-id23452 . -2) (undo-tree-id23453 . 122) (undo-tree-id23454 . -2) (undo-tree-id23455 . -2) (undo-tree-id23456 . -42) (undo-tree-id23457 . -2) (undo-tree-id23458 . -2) (undo-tree-id23459 . -2) (undo-tree-id23460 . -2) (undo-tree-id23461 . -2) (undo-tree-id23462 . -2) (undo-tree-id23463 . -2) (undo-tree-id23464 . -2) (undo-tree-id23465 . -2) (undo-tree-id23466 . -2) (undo-tree-id23467 . -2) (undo-tree-id23468 . -2) (undo-tree-id23469 . -2) (undo-tree-id23470 . -2) (undo-tree-id23471 . -2) (undo-tree-id23472 . -2) (undo-tree-id23473 . -2) (undo-tree-id23474 . -2) (undo-tree-id23475 . -2) (undo-tree-id23476 . -2) (undo-tree-id23477 . -2) (undo-tree-id23478 . -2) (undo-tree-id23479 . -1) (undo-tree-id23480 . -1) (undo-tree-id23481 . -1) (undo-tree-id23482 . -1) (undo-tree-id23483 . -1) (undo-tree-id23484 . -1) (undo-tree-id23485 . -1) (undo-tree-id23486 . -1) (undo-tree-id23487 . -1) (undo-tree-id23488 . -1) (undo-tree-id23489 . -1) (undo-tree-id23490 . -1) (undo-tree-id23491 . -1) (undo-tree-id23492 . -1) (undo-tree-id23493 . -1) (undo-tree-id23494 . -1) (undo-tree-id23495 . -1) (undo-tree-id23496 . -1) (undo-tree-id23497 . -1) (undo-tree-id23498 . -1) (undo-tree-id23499 . -1) (undo-tree-id23500 . -1) (undo-tree-id23501 . -1) (undo-tree-id23502 . -1) (undo-tree-id23503 . -1) (undo-tree-id23504 . -1) (undo-tree-id23505 . -1) (undo-tree-id23506 . -1) (undo-tree-id23507 . -1) (undo-tree-id23508 . -1) (undo-tree-id23509 . -2) (undo-tree-id23510 . -2) (undo-tree-id23511 . -2) (undo-tree-id23512 . -2) (undo-tree-id23513 . -2) (undo-tree-id23514 . -2) (undo-tree-id23515 . -2) (undo-tree-id23516 . -2) (undo-tree-id23517 . -2) (undo-tree-id23518 . -2) (undo-tree-id23519 . -2) (undo-tree-id23520 . -2) (undo-tree-id23521 . -2) (undo-tree-id23522 . -2) (undo-tree-id23523 . -2) (undo-tree-id23524 . -2) (undo-tree-id23525 . -2) (undo-tree-id23526 . -2) (undo-tree-id23527 . -2) (undo-tree-id23528 . -2) (undo-tree-id23529 . -2) (undo-tree-id23530 . -2) (undo-tree-id23531 . -2) (undo-tree-id23532 . -2) (undo-tree-id23533 . -2) (undo-tree-id23534 . -2) (undo-tree-id23535 . -2) (undo-tree-id23536 . -2) (undo-tree-id23537 . -2) (undo-tree-id23538 . -2) (undo-tree-id23539 . -2) (undo-tree-id23540 . -2) (undo-tree-id23541 . -2) (undo-tree-id23542 . -2) (undo-tree-id23543 . -2) (undo-tree-id23544 . -2) (undo-tree-id23545 . -2) (undo-tree-id23546 . -2) (undo-tree-id23547 . -2) (undo-tree-id23548 . -2) (undo-tree-id23549 . -2) (undo-tree-id23550 . -2) (undo-tree-id23551 . -2) (undo-tree-id23552 . -2) (undo-tree-id23553 . -2) (undo-tree-id23554 . -2) (undo-tree-id23555 . -2) (undo-tree-id23556 . -2) (undo-tree-id23557 . -2) (undo-tree-id23558 . -2) (undo-tree-id23559 . -2) (undo-tree-id23560 . -2) (undo-tree-id23561 . -2) (undo-tree-id23562 . -2) (undo-tree-id23563 . -2) (undo-tree-id23564 . -2) (undo-tree-id23565 . -2) (undo-tree-id23566 . -2) (undo-tree-id23567 . -2) (undo-tree-id23568 . -2) (undo-tree-id23569 . -2) (undo-tree-id23570 . -2) (undo-tree-id23571 . -2) (undo-tree-id23572 . -2) (undo-tree-id23573 . -2) (undo-tree-id23574 . -2) (undo-tree-id23575 . -2) (undo-tree-id23576 . -2) (undo-tree-id23577 . -2) (undo-tree-id23578 . -2) (undo-tree-id23579 . -2) (undo-tree-id23580 . -2) (undo-tree-id23581 . -2) (undo-tree-id23582 . -2) (undo-tree-id23583 . -2) (undo-tree-id23584 . -2) (undo-tree-id23585 . -2) (undo-tree-id23586 . -2) (undo-tree-id23587 . -2) (undo-tree-id23588 . -2) (undo-tree-id23589 . -2) (undo-tree-id23590 . -2) (undo-tree-id23591 . -2) (undo-tree-id23592 . -2) (undo-tree-id23593 . -2) (undo-tree-id23594 . -2) (undo-tree-id23595 . -2) (undo-tree-id23596 . -2) (undo-tree-id23597 . -2) (undo-tree-id23598 . -2) (undo-tree-id23599 . -2) (undo-tree-id23600 . -2) (undo-tree-id23601 . -2) (undo-tree-id23602 . -2) (undo-tree-id23603 . -2) (undo-tree-id23604 . -2) (undo-tree-id23605 . -2) (undo-tree-id23606 . -2) (undo-tree-id23607 . -2) (undo-tree-id23608 . -2) (undo-tree-id23609 . -2) (undo-tree-id23610 . -2) (undo-tree-id23611 . -2) (undo-tree-id23612 . -2) (undo-tree-id23613 . -2) (undo-tree-id23614 . -2) (undo-tree-id23615 . -2) (undo-tree-id23616 . -2) (undo-tree-id23617 . -2) (undo-tree-id23618 . -2) (undo-tree-id23619 . -2) (undo-tree-id23620 . -2) (undo-tree-id23621 . -2) (undo-tree-id23622 . -2) (undo-tree-id23623 . -2) (undo-tree-id23624 . -2) (undo-tree-id23625 . -2) (undo-tree-id23626 . -2) (undo-tree-id23627 . -2) (undo-tree-id23628 . -2) (undo-tree-id23629 . -2) (undo-tree-id23630 . -2) (undo-tree-id23631 . -2) (undo-tree-id23632 . -2) (undo-tree-id23633 . -2) (undo-tree-id23634 . -2) (undo-tree-id23635 . -2) (undo-tree-id23636 . -2) (undo-tree-id23637 . -2) (undo-tree-id23638 . -2) (undo-tree-id23639 . -2) (undo-tree-id23640 . -2) (undo-tree-id23641 . -2) (undo-tree-id23642 . -2) (undo-tree-id23643 . -2) (undo-tree-id23644 . -2) (undo-tree-id23645 . -2) (undo-tree-id23646 . -2) (undo-tree-id23647 . -2) (undo-tree-id23648 . -2) (undo-tree-id23649 . -2) (undo-tree-id23650 . -2) (undo-tree-id23651 . -2) (undo-tree-id23652 . -2) (undo-tree-id23653 . -2) (undo-tree-id23654 . -2) (undo-tree-id23655 . -2) (undo-tree-id23656 . -2) (undo-tree-id23657 . -2) (undo-tree-id23658 . -2) (undo-tree-id23659 . -2) (undo-tree-id23660 . -2) (undo-tree-id23661 . -2) (undo-tree-id23662 . -2) (undo-tree-id23663 . -2) (undo-tree-id23664 . -2) (undo-tree-id23665 . -2) (undo-tree-id23666 . -2) (undo-tree-id23667 . -2) (undo-tree-id23668 . -2) (undo-tree-id23669 . -2) (undo-tree-id23670 . -2) (undo-tree-id23671 . -2) (undo-tree-id23672 . -2) (undo-tree-id23673 . -2) (undo-tree-id23674 . -2) (undo-tree-id23675 . -2) (undo-tree-id23676 . -2) (undo-tree-id23677 . -2) (undo-tree-id23678 . -2) (undo-tree-id23679 . -2) (undo-tree-id23680 . -2) (undo-tree-id23681 . -2) (undo-tree-id23682 . -2) (undo-tree-id23683 . -2) (undo-tree-id23684 . -2) (undo-tree-id23685 . -2) (undo-tree-id23686 . -2) (undo-tree-id23687 . -2) (undo-tree-id23688 . -2) (undo-tree-id23689 . -2) (undo-tree-id23690 . -2) (undo-tree-id23691 . -2) (undo-tree-id23692 . -2) (undo-tree-id23693 . -2) (undo-tree-id23694 . -2) (undo-tree-id23695 . -2) (undo-tree-id23696 . -2) (undo-tree-id23697 . -2) (undo-tree-id23698 . -2) (undo-tree-id23699 . -2) (undo-tree-id23700 . -2) (undo-tree-id23701 . -2) (undo-tree-id23702 . -2) (undo-tree-id23703 . -2) (undo-tree-id23704 . -2) (undo-tree-id23705 . -2) (undo-tree-id23706 . -2) (undo-tree-id23707 . -2) (undo-tree-id23708 . -2) (undo-tree-id23709 . -2) (undo-tree-id23710 . -2) (undo-tree-id23711 . -2) (undo-tree-id23712 . -2) (undo-tree-id23713 . -2) (undo-tree-id23714 . -2) (undo-tree-id23715 . -2) (undo-tree-id23716 . -2) (undo-tree-id23717 . -2) (undo-tree-id23718 . -2) (undo-tree-id23719 . -2) (undo-tree-id23720 . -2) (undo-tree-id23721 . -2) (undo-tree-id23722 . -2) (undo-tree-id23723 . -2) (undo-tree-id23724 . -2) (undo-tree-id23725 . -2) (undo-tree-id23726 . -2) (undo-tree-id23727 . -2) (undo-tree-id23728 . -2) (undo-tree-id23729 . -2) (undo-tree-id23730 . -2) (undo-tree-id23731 . -2) (undo-tree-id23732 . -2) (undo-tree-id23733 . -2) (undo-tree-id23734 . -2) (undo-tree-id23735 . -2) (undo-tree-id23736 . -2) (undo-tree-id23737 . -2) (undo-tree-id23738 . -2) (undo-tree-id23739 . -2) (undo-tree-id23740 . -2) (undo-tree-id23741 . -2) (undo-tree-id23742 . -2) (undo-tree-id23743 . -2) (undo-tree-id23744 . -2) (undo-tree-id23745 . -2) (undo-tree-id23746 . -2) (undo-tree-id23747 . -2) (undo-tree-id23748 . -2) (undo-tree-id23749 . -2) (undo-tree-id23750 . -2) (undo-tree-id23751 . -2) (undo-tree-id23752 . -2) (undo-tree-id23753 . -2) (undo-tree-id23754 . -2) (undo-tree-id23755 . -2) (undo-tree-id23756 . -2) (undo-tree-id23757 . -2) (undo-tree-id23758 . -2) (undo-tree-id23759 . -2) (undo-tree-id23760 . -2) (undo-tree-id23761 . -2) (undo-tree-id23762 . -2) (undo-tree-id23763 . -2) (undo-tree-id23764 . -2) (undo-tree-id23765 . -2) (undo-tree-id23766 . -2) (undo-tree-id23767 . -2) (undo-tree-id23768 . -2) (undo-tree-id23769 . -2) (undo-tree-id23770 . -2) (undo-tree-id23771 . -2) (undo-tree-id23772 . -2) (undo-tree-id23773 . -2) (undo-tree-id23774 . -2) (undo-tree-id23775 . -2) (undo-tree-id23776 . -2) (undo-tree-id23777 . -2) (undo-tree-id23778 . -2) (undo-tree-id23779 . -2) (undo-tree-id23780 . -2) (undo-tree-id23781 . -2) (undo-tree-id23782 . -2) (undo-tree-id23783 . -2) (undo-tree-id23784 . -2) (undo-tree-id23785 . -2) (undo-tree-id23786 . -2) (undo-tree-id23787 . -2) (undo-tree-id23788 . -2) (undo-tree-id23789 . -2) (undo-tree-id23790 . -2) (undo-tree-id23791 . -2) (undo-tree-id23792 . -2) (undo-tree-id23793 . -2) (undo-tree-id23794 . -2) (undo-tree-id23795 . -2) (undo-tree-id23796 . -2) (undo-tree-id23797 . -2) (undo-tree-id23798 . -2) (undo-tree-id23799 . -2) (undo-tree-id23800 . -2) (undo-tree-id23801 . -2) (undo-tree-id23802 . -2) (undo-tree-id23803 . -2) (undo-tree-id23804 . -2) (undo-tree-id23805 . -2) (undo-tree-id23806 . -2) (undo-tree-id23807 . -2) (undo-tree-id23808 . -2) (undo-tree-id23809 . -2) (undo-tree-id23810 . -2) (undo-tree-id23811 . -2) (undo-tree-id23812 . -2) (undo-tree-id23813 . -2) (undo-tree-id23814 . -2) (undo-tree-id23815 . -2) (undo-tree-id23816 . -2) (undo-tree-id23817 . -2) (undo-tree-id23818 . -2) (undo-tree-id23819 . -2) (undo-tree-id23820 . -2) (undo-tree-id23821 . -2) (undo-tree-id23822 . -2) (undo-tree-id23823 . -2) (undo-tree-id23824 . -2) (undo-tree-id23825 . -2) (undo-tree-id23826 . -2) (undo-tree-id23827 . -2) (undo-tree-id23828 . -2) (undo-tree-id23829 . -2) (undo-tree-id23830 . -2) (undo-tree-id23831 . -2) (undo-tree-id23832 . -2) (undo-tree-id23833 . -2) (undo-tree-id23834 . -2) (undo-tree-id23835 . -2) (undo-tree-id23836 . -2) (undo-tree-id23837 . -2) (undo-tree-id23838 . -2) (undo-tree-id23839 . -2) (undo-tree-id23840 . -2) (undo-tree-id23841 . -2) (undo-tree-id23842 . -2) (undo-tree-id23843 . -2) (undo-tree-id23844 . -2) (undo-tree-id23845 . -2) (undo-tree-id23846 . -2) (undo-tree-id23847 . -2) (undo-tree-id23848 . -2) (undo-tree-id23849 . -2) (undo-tree-id23850 . -2) (undo-tree-id23851 . -2) (undo-tree-id23852 . -2) (undo-tree-id23853 . -2) (undo-tree-id23854 . -2) (undo-tree-id23855 . -2) (undo-tree-id23856 . -2) (undo-tree-id23857 . -2) (undo-tree-id23858 . -2) (undo-tree-id23859 . -2) (undo-tree-id23860 . -2) (undo-tree-id23861 . -2) (undo-tree-id23862 . -2) (undo-tree-id23863 . -2) (undo-tree-id23864 . -2) (undo-tree-id23865 . -2) (undo-tree-id23866 . -2) (undo-tree-id23867 . -2) (undo-tree-id23868 . -2) (undo-tree-id23869 . -2) (undo-tree-id23870 . -2) (undo-tree-id23871 . -2) (undo-tree-id23872 . -2) (undo-tree-id23873 . -2) (undo-tree-id23874 . -2) (undo-tree-id23875 . -2) (undo-tree-id23876 . -2) (undo-tree-id23877 . -2) (undo-tree-id23878 . -2) (undo-tree-id23879 . -2) (undo-tree-id23880 . -2) (undo-tree-id23881 . -2) (undo-tree-id23882 . -2) (undo-tree-id23883 . -2) (undo-tree-id23884 . -2) (undo-tree-id23885 . -2) (undo-tree-id23886 . -2) (undo-tree-id23887 . -2) (undo-tree-id23888 . -2) (undo-tree-id23889 . -2) (undo-tree-id23890 . -2) (undo-tree-id23891 . -2) (undo-tree-id23892 . -2) (undo-tree-id23893 . -2) (undo-tree-id23894 . -2) (undo-tree-id23895 . -2) (undo-tree-id23896 . -2) (undo-tree-id23897 . -2) (undo-tree-id23898 . -2) (undo-tree-id23899 . -2) (undo-tree-id23900 . -2) (undo-tree-id23901 . -2) (undo-tree-id23902 . -2) (undo-tree-id23903 . -2) (undo-tree-id23904 . -2) (undo-tree-id23905 . -11) (undo-tree-id23906 . -11) (undo-tree-id23907 . -11) (undo-tree-id23908 . -11) (undo-tree-id23909 . -11) (undo-tree-id23910 . -11) (undo-tree-id23911 . -11) (undo-tree-id23912 . -11) (undo-tree-id23913 . -11) (undo-tree-id23914 . -11) (undo-tree-id23915 . -11) (undo-tree-id23916 . -11) (undo-tree-id23917 . -11) (undo-tree-id23918 . -11) (undo-tree-id23919 . -11) (undo-tree-id23920 . -11) (undo-tree-id23921 . -15) (undo-tree-id23922 . -15) (undo-tree-id23923 . -15) (undo-tree-id23924 . -15) (undo-tree-id23925 . -15) (undo-tree-id23926 . -15) (undo-tree-id23927 . -15) (undo-tree-id23928 . -15) (undo-tree-id23929 . -15) (undo-tree-id23930 . -15) (undo-tree-id23931 . -15) (undo-tree-id23932 . -15) (undo-tree-id23933 . -15) (undo-tree-id23934 . -15) (undo-tree-id23935 . -15) (undo-tree-id23936 . -15) (undo-tree-id23937 . -25) (undo-tree-id23938 . -25) (undo-tree-id23939 . -25) (undo-tree-id23940 . -25) (undo-tree-id23941 . -25) (undo-tree-id23942 . -25) (undo-tree-id23943 . -25) (undo-tree-id23944 . -25) (undo-tree-id23945 . -25) (undo-tree-id23946 . -25) (undo-tree-id23947 . -25) (undo-tree-id23948 . -25) (undo-tree-id23949 . -25) (undo-tree-id23950 . -25) (undo-tree-id23951 . -25) (undo-tree-id23952 . -25) (undo-tree-id23953 . -33) (undo-tree-id23954 . -33) (undo-tree-id23955 . -33) (undo-tree-id23956 . -33) (undo-tree-id23957 . -33) (undo-tree-id23958 . -33) (undo-tree-id23959 . -33) (undo-tree-id23960 . -33) (undo-tree-id23961 . -33) (undo-tree-id23962 . -33) (undo-tree-id23963 . -33) (undo-tree-id23964 . -33) (undo-tree-id23965 . -33) (undo-tree-id23966 . -33) (undo-tree-id23967 . -33) (undo-tree-id23968 . -33) (undo-tree-id23969 . -38) (undo-tree-id23970 . -38) (undo-tree-id23971 . -38) (undo-tree-id23972 . -38) (undo-tree-id23973 . -38) (undo-tree-id23974 . -38) (undo-tree-id23975 . -38) (undo-tree-id23976 . -38) (undo-tree-id23977 . -38) (undo-tree-id23978 . -38) (undo-tree-id23979 . -38) (undo-tree-id23980 . -38) (undo-tree-id23981 . -38) (undo-tree-id23982 . -38) (undo-tree-id23983 . -38) (undo-tree-id23984 . -38) (undo-tree-id23985 . -42) (undo-tree-id23986 . -42) (undo-tree-id23987 . -42) (undo-tree-id23988 . -42) (undo-tree-id23989 . -42) (undo-tree-id23990 . -42) (undo-tree-id23991 . -42) (undo-tree-id23992 . -42) (undo-tree-id23993 . -42) (undo-tree-id23994 . -42) (undo-tree-id23995 . -42) (undo-tree-id23996 . -42) (undo-tree-id23997 . -42) (undo-tree-id23998 . -42) (undo-tree-id23999 . -42) (undo-tree-id24000 . -42) (undo-tree-id24001 . -42) (undo-tree-id24002 . -42) (undo-tree-id24003 . -42) (undo-tree-id24004 . -42) (undo-tree-id24005 . -42) (undo-tree-id24006 . -42) (undo-tree-id24007 . -42) (undo-tree-id24008 . -42) (undo-tree-id24009 . -42) (undo-tree-id24010 . -42) (undo-tree-id24011 . -42) (undo-tree-id24012 . -42) (undo-tree-id24013 . -42) (undo-tree-id24014 . -42) (undo-tree-id24015 . -42) (undo-tree-id24016 . -42) (undo-tree-id24017 . -42) (undo-tree-id24018 . -42) (undo-tree-id24019 . -42) (undo-tree-id24020 . -42) (undo-tree-id24021 . -42) (undo-tree-id24022 . -42) (undo-tree-id24023 . -42) (undo-tree-id24024 . -42) (undo-tree-id24025 . -42) (undo-tree-id24026 . -42) (undo-tree-id24027 . -42) (undo-tree-id24028 . -42) (undo-tree-id24029 . -124) 2514) nil (25774 26802 681608 898000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2472) (undo-tree-id23363 . 1) (undo-tree-id23364 . 1) (undo-tree-id23365 . -1) (undo-tree-id23366 . -1) (undo-tree-id23367 . -1) (undo-tree-id23368 . -1) (undo-tree-id23369 . -1) (undo-tree-id23370 . -1) (undo-tree-id23371 . -1) (undo-tree-id23372 . -1) (undo-tree-id23373 . -1) (undo-tree-id23374 . -1) (undo-tree-id23375 . -1) (undo-tree-id23376 . -1) (undo-tree-id23377 . -1) (undo-tree-id23378 . -1) (undo-tree-id23379 . -1) (undo-tree-id23380 . -1) (undo-tree-id23381 . -1) (undo-tree-id23382 . -1) (undo-tree-id23383 . -1) (undo-tree-id23384 . -1) (undo-tree-id23385 . -1) (undo-tree-id23386 . -1) (undo-tree-id23387 . -1) (undo-tree-id23388 . -1) (undo-tree-id23389 . -1) (undo-tree-id23390 . -1) (undo-tree-id23391 . -1) (undo-tree-id23392 . -1) (undo-tree-id23393 . -1) (undo-tree-id23394 . -1) (undo-tree-id23395 . -1) (undo-tree-id23396 . -1) (undo-tree-id23397 . -1) (undo-tree-id23398 . -1) (undo-tree-id23399 . -1) (undo-tree-id23400 . -1) (undo-tree-id23401 . -1) (undo-tree-id23402 . -1) (undo-tree-id23403 . -1) (undo-tree-id23404 . -1) (undo-tree-id23405 . -1) (undo-tree-id23406 . -1) (undo-tree-id23407 . -1) (undo-tree-id23408 . -1) (undo-tree-id23409 . -1) (undo-tree-id23410 . -1) (undo-tree-id23411 . -1) (undo-tree-id23412 . -1) (undo-tree-id23413 . -1) (undo-tree-id23414 . -1) (undo-tree-id23415 . -1) (undo-tree-id23416 . -1) (undo-tree-id23417 . -1) (undo-tree-id23418 . -1) (undo-tree-id23419 . -1) (undo-tree-id23420 . -1) (undo-tree-id23421 . -1) (undo-tree-id23422 . -1) (undo-tree-id23423 . -1) (undo-tree-id23424 . -1) (undo-tree-id23425 . -1) (undo-tree-id23426 . -1) (undo-tree-id23427 . -1) (undo-tree-id23428 . -1) (undo-tree-id23429 . -1) (undo-tree-id23430 . -1) (undo-tree-id23431 . -1) (undo-tree-id23432 . -1) (undo-tree-id23433 . -1) (undo-tree-id23434 . -1) (undo-tree-id23435 . -1) (undo-tree-id23436 . -1) (undo-tree-id23437 . -1) (undo-tree-id23438 . -1) (undo-tree-id23439 . -1) (undo-tree-id23440 . -1) (undo-tree-id23441 . -1) (undo-tree-id23442 . -1) (undo-tree-id23443 . -1) (undo-tree-id23444 . -1) (undo-tree-id23445 . -1) (undo-tree-id23446 . -1) (undo-tree-id23447 . -1) (undo-tree-id23448 . -1)) nil (25774 26802 679353 561000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2553) (undo-tree-id24953 . -1) (undo-tree-id24954 . -1) (t 25774 26802 705437 172000)) nil (25774 26818 203937 89000) 0 nil])
([nil nil ((#("- We will discuss the computation of the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 in the next subsection.
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 30 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 30 89 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 89 90 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2555) (undo-tree-id24930 . -89) (undo-tree-id24931 . -66) (undo-tree-id24932 . -66) (undo-tree-id24933 . -66) (undo-tree-id24934 . -66) (undo-tree-id24935 . -66) (undo-tree-id24936 . -66) (undo-tree-id24937 . -66) (undo-tree-id24938 . -66) (undo-tree-id24939 . -66) (undo-tree-id24940 . -66) (undo-tree-id24941 . -66) (undo-tree-id24942 . -66) (undo-tree-id24943 . -66) (undo-tree-id24944 . -66) (undo-tree-id24945 . -66) (undo-tree-id24946 . -66) (undo-tree-id24947 . -66) (undo-tree-id24948 . -66) (undo-tree-id24949 . -66) (undo-tree-id24950 . -66) (undo-tree-id24951 . -66) (undo-tree-id24952 . -90)) nil (25774 26818 203933 193000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2555) (undo-tree-id24851 . -1) (undo-tree-id24852 . -1) (undo-tree-id24853 . -1) (undo-tree-id24854 . -1) (undo-tree-id24855 . -1) (undo-tree-id24856 . -1) (undo-tree-id24857 . -1) (undo-tree-id24858 . -1) (undo-tree-id24859 . -1) (undo-tree-id24860 . -1) (undo-tree-id24861 . -1) (undo-tree-id24862 . -1) (undo-tree-id24863 . -1) (undo-tree-id24864 . -1) (undo-tree-id24865 . -1) (undo-tree-id24866 . -1) (undo-tree-id24867 . -1) (undo-tree-id24868 . -1) (undo-tree-id24869 . -1) (undo-tree-id24870 . -1) (undo-tree-id24871 . -1) (undo-tree-id24872 . -1) (undo-tree-id24873 . -1) (undo-tree-id24874 . -1) (undo-tree-id24875 . -1) (undo-tree-id24876 . -1) (undo-tree-id24877 . -1) (undo-tree-id24878 . -1) (undo-tree-id24879 . -1) (undo-tree-id24880 . -1) (undo-tree-id24881 . -1) (undo-tree-id24882 . -1) (undo-tree-id24883 . -1) (undo-tree-id24884 . -1) (undo-tree-id24885 . -1) (undo-tree-id24886 . -1) (undo-tree-id24887 . -1) (undo-tree-id24888 . -1) (undo-tree-id24889 . -1) (undo-tree-id24890 . -1) (undo-tree-id24891 . -1) (undo-tree-id24892 . -1) (undo-tree-id24893 . -1) (undo-tree-id24894 . -1) (undo-tree-id24895 . -1) (undo-tree-id24896 . -1) (undo-tree-id24897 . -1) (undo-tree-id24898 . -1) (undo-tree-id24899 . -1) (undo-tree-id24900 . -1) (undo-tree-id24901 . -1) (undo-tree-id24902 . -1) (undo-tree-id24903 . -1) (undo-tree-id24904 . -1) (undo-tree-id24905 . -1) (undo-tree-id24906 . -1) (undo-tree-id24907 . -1) (undo-tree-id24908 . -1) (undo-tree-id24909 . -1) (undo-tree-id24910 . -1) (undo-tree-id24911 . -1) (undo-tree-id24912 . -1) (undo-tree-id24913 . -1) (undo-tree-id24914 . -1) (undo-tree-id24915 . -1) (undo-tree-id24916 . -1) (undo-tree-id24917 . -1) (undo-tree-id24918 . -1) (undo-tree-id24919 . -1) (undo-tree-id24920 . -1) (undo-tree-id24921 . -1) (undo-tree-id24922 . -1) (undo-tree-id24923 . -1) (undo-tree-id24924 . -1) (undo-tree-id24925 . -1) (undo-tree-id24926 . -1) (undo-tree-id24927 . -1) (undo-tree-id24928 . -1) (undo-tree-id24929 . -1)) nil (25774 26818 203876 586000) 0 nil])
([nil nil ((#("- For the remainder of this subsection, let us discuss how the context vectors are used via the second RNN in the preceding figure (RNN #2).
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 93 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 93 102 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 102 103 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 103 140 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 140 141 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2555) (undo-tree-id25097 . -140) (undo-tree-id25098 . 9) (undo-tree-id25099 . -135) (undo-tree-id25100 . -2) (undo-tree-id25101 . -2) (undo-tree-id25102 . -2) (undo-tree-id25103 . -2) (undo-tree-id25104 . -2) (undo-tree-id25105 . -2) (undo-tree-id25106 . -2) (undo-tree-id25107 . -2) (undo-tree-id25108 . -2) (undo-tree-id25109 . -2) (undo-tree-id25110 . -2) (undo-tree-id25111 . -2) (undo-tree-id25112 . -2) (undo-tree-id25113 . -2) (undo-tree-id25114 . -2) (undo-tree-id25115 . -2) (undo-tree-id25116 . -2) (undo-tree-id25117 . -2) (undo-tree-id25118 . -2) (undo-tree-id25119 . -2) (undo-tree-id25120 . -2) (undo-tree-id25121 . -2) (undo-tree-id25122 . -2) (undo-tree-id25123 . -2) (undo-tree-id25124 . -2) (undo-tree-id25125 . -2) (undo-tree-id25126 . -2) (undo-tree-id25127 . -2) (undo-tree-id25128 . -2) (undo-tree-id25129 . -2) (undo-tree-id25130 . -2) (undo-tree-id25131 . -2) (undo-tree-id25132 . -2) (undo-tree-id25133 . -2) (undo-tree-id25134 . -2) (undo-tree-id25135 . -2) (undo-tree-id25136 . -2) (undo-tree-id25137 . -2) (undo-tree-id25138 . -2) (undo-tree-id25139 . -2) (undo-tree-id25140 . -2) (undo-tree-id25141 . -2) (undo-tree-id25142 . -2) (undo-tree-id25143 . -2) (undo-tree-id25144 . -2) (undo-tree-id25145 . -2) (undo-tree-id25146 . -2) (undo-tree-id25147 . -2) (undo-tree-id25148 . -2) (undo-tree-id25149 . -2) (undo-tree-id25150 . -2) (undo-tree-id25151 . -2) (undo-tree-id25152 . -2) (undo-tree-id25153 . -2) (undo-tree-id25154 . -2) (undo-tree-id25155 . -2) (undo-tree-id25156 . -2) (undo-tree-id25157 . -2) (undo-tree-id25158 . -2) (undo-tree-id25159 . -2) (undo-tree-id25160 . -141) 2557 (t 25774 26818 229665 213000)) nil (25774 26831 597073 585000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2555) (undo-tree-id24955 . -1) (undo-tree-id24956 . -1) (undo-tree-id24957 . -1) (undo-tree-id24958 . -1) (undo-tree-id24959 . -1) (undo-tree-id24960 . -1) (undo-tree-id24961 . -1) (undo-tree-id24962 . -1) (undo-tree-id24963 . -1) (undo-tree-id24964 . -1) (undo-tree-id24965 . -1) (undo-tree-id24966 . -1) (undo-tree-id24967 . -1) (undo-tree-id24968 . -1) (undo-tree-id24969 . -1) (undo-tree-id24970 . -1) (undo-tree-id24971 . -1) (undo-tree-id24972 . -1) (undo-tree-id24973 . -1) (undo-tree-id24974 . -1) (undo-tree-id24975 . -1) (undo-tree-id24976 . -1) (undo-tree-id24977 . -1) (undo-tree-id24978 . -1) (undo-tree-id24979 . -1) (undo-tree-id24980 . -1) (undo-tree-id24981 . -1) (undo-tree-id24982 . -1) (undo-tree-id24983 . -1) (undo-tree-id24984 . -1) (undo-tree-id24985 . -1) (undo-tree-id24986 . -1) (undo-tree-id24987 . -1) (undo-tree-id24988 . -1) (undo-tree-id24989 . -1) (undo-tree-id24990 . -1) (undo-tree-id24991 . -1) (undo-tree-id24992 . -1) (undo-tree-id24993 . -1) (undo-tree-id24994 . -1) (undo-tree-id24995 . -1) (undo-tree-id24996 . -1) (undo-tree-id24997 . -1) (undo-tree-id24998 . -1) (undo-tree-id24999 . -1) (undo-tree-id25000 . -1) (undo-tree-id25001 . -1) (undo-tree-id25002 . -1) (undo-tree-id25003 . -1) (undo-tree-id25004 . -1) (undo-tree-id25005 . -1) (undo-tree-id25006 . -1) (undo-tree-id25007 . -1) (undo-tree-id25008 . -1) (undo-tree-id25009 . -1) (undo-tree-id25010 . -1) (undo-tree-id25011 . -1) (undo-tree-id25012 . -1) (undo-tree-id25013 . -1) (undo-tree-id25014 . -1) (undo-tree-id25015 . -1) (undo-tree-id25016 . -1) (undo-tree-id25017 . -1) (undo-tree-id25018 . -1) (undo-tree-id25019 . -1) (undo-tree-id25020 . -1) (undo-tree-id25021 . -1) (undo-tree-id25022 . -1) (undo-tree-id25023 . -1) (undo-tree-id25024 . -1) (undo-tree-id25025 . -1) (undo-tree-id25026 . -1) (undo-tree-id25027 . -1) (undo-tree-id25028 . -1) (undo-tree-id25029 . -1) (undo-tree-id25030 . -1) (undo-tree-id25031 . -1) (undo-tree-id25032 . -1) (undo-tree-id25033 . -1) (undo-tree-id25034 . -1) (undo-tree-id25035 . -1) (undo-tree-id25036 . -1) (undo-tree-id25037 . -1) (undo-tree-id25038 . -1) (undo-tree-id25039 . -1) (undo-tree-id25040 . -1) (undo-tree-id25041 . -1) (undo-tree-id25042 . -1) (undo-tree-id25043 . -1) (undo-tree-id25044 . -1) (undo-tree-id25045 . -1) (undo-tree-id25046 . -1) (undo-tree-id25047 . -1) (undo-tree-id25048 . -1) (undo-tree-id25049 . -1) (undo-tree-id25050 . -1) (undo-tree-id25051 . -1) (undo-tree-id25052 . -1) (undo-tree-id25053 . -1) (undo-tree-id25054 . -1) (undo-tree-id25055 . -1) (undo-tree-id25056 . -1) (undo-tree-id25057 . -1) (undo-tree-id25058 . -1) (undo-tree-id25059 . -1) (undo-tree-id25060 . -1) (undo-tree-id25061 . -1) (undo-tree-id25062 . -1) (undo-tree-id25063 . -1) (undo-tree-id25064 . -1) (undo-tree-id25065 . -1) (undo-tree-id25066 . -1) (undo-tree-id25067 . -1) (undo-tree-id25068 . -1) (undo-tree-id25069 . -1) (undo-tree-id25070 . -1) (undo-tree-id25071 . -1) (undo-tree-id25072 . -1) (undo-tree-id25073 . -1) (undo-tree-id25074 . -1) (undo-tree-id25075 . -1) (undo-tree-id25076 . -1) (undo-tree-id25077 . -1) (undo-tree-id25078 . -1) (undo-tree-id25079 . -1) (undo-tree-id25080 . -1) (undo-tree-id25081 . -1) (undo-tree-id25082 . -1) (undo-tree-id25083 . -1) (undo-tree-id25084 . -1) (undo-tree-id25085 . -1) (undo-tree-id25086 . -1) (undo-tree-id25087 . -1) (undo-tree-id25088 . -1) (undo-tree-id25089 . -1) (undo-tree-id25090 . -1) (undo-tree-id25091 . -1) (undo-tree-id25092 . -1) (undo-tree-id25093 . -1) (undo-tree-id25094 . -1) (undo-tree-id25095 . -1) (undo-tree-id25096 . -1)) nil (25774 26831 596971 248000) 0 nil])
([nil nil ((#("(regular)" 0 9 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2577) (undo-tree-id25232 . -8) (undo-tree-id25233 . -9) 2557 (t 25774 26831 621865 96000)) nil (25774 26842 850946 368000) 0 nil])
([nil nil ((#("- Just like a vanilla  RNN, RNN #2 also uses hidden states.
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 51 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 51 52 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 52 59 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 59 60 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2555) (undo-tree-id25162 . -59) (undo-tree-id25163 . -58) (undo-tree-id25164 . -2) (undo-tree-id25165 . -2) (undo-tree-id25166 . -2) (undo-tree-id25167 . -2) (undo-tree-id25168 . -2) (undo-tree-id25169 . -2) (undo-tree-id25170 . -2) (undo-tree-id25171 . -2) (undo-tree-id25172 . -2) (undo-tree-id25173 . -2) (undo-tree-id25174 . -2) (undo-tree-id25175 . -2) (undo-tree-id25176 . -2) (undo-tree-id25177 . -2) (undo-tree-id25178 . -2) (undo-tree-id25179 . -2) (undo-tree-id25180 . -2) (undo-tree-id25181 . -2) (undo-tree-id25182 . -2) (undo-tree-id25183 . -2) (undo-tree-id25184 . -2) (undo-tree-id25185 . -2) (undo-tree-id25186 . -2) (undo-tree-id25187 . -2) (undo-tree-id25188 . -2) (undo-tree-id25189 . -2) (undo-tree-id25190 . -2) (undo-tree-id25191 . -2) (undo-tree-id25192 . -2) (undo-tree-id25193 . -2) (undo-tree-id25194 . -2) (undo-tree-id25195 . -2) (undo-tree-id25196 . -2) (undo-tree-id25197 . -2) (undo-tree-id25198 . -2) (undo-tree-id25199 . -2) (undo-tree-id25200 . -2) (undo-tree-id25201 . -2) (undo-tree-id25202 . -2) (undo-tree-id25203 . -2) (undo-tree-id25204 . -2) (undo-tree-id25205 . -2) (undo-tree-id25206 . -2) (undo-tree-id25207 . -2) (undo-tree-id25208 . -2) (undo-tree-id25209 . -2) (undo-tree-id25210 . -2) (undo-tree-id25211 . -2) (undo-tree-id25212 . -22) (undo-tree-id25213 . -22) (undo-tree-id25214 . -22) (undo-tree-id25215 . -22) (undo-tree-id25216 . -22) (undo-tree-id25217 . -22) (undo-tree-id25218 . -22) (undo-tree-id25219 . -22) (undo-tree-id25220 . -21) (undo-tree-id25221 . -20) (undo-tree-id25222 . -58) (undo-tree-id25223 . -58) (undo-tree-id25224 . -58) (undo-tree-id25225 . -58) (undo-tree-id25226 . -58) (undo-tree-id25227 . -58) (undo-tree-id25228 . -58) (undo-tree-id25229 . -58) (undo-tree-id25230 . -58) (undo-tree-id25231 . -60) 2613) nil (25774 26842 850940 743000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2555) (undo-tree-id25161 . -1)) nil (25774 26842 850844 407000) 0 nil])
([nil nil ((2613 . 2614) (#("“" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2613) (undo-tree-id25235 . -1) (t 25774 26842 878035 294000)) nil (25774 26863 544764 199000) 0 nil])
([nil nil ((2624 . 2625) (#("”" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2624) (undo-tree-id25234 . -1)) nil (25774 26863 544757 428000) 0 nil])
([nil nil ((#("- Considering the hidden layer between the aforementioned \"annotation\" and final output, let us denote the hidden state at time 𝑖𝑖 as 𝑠𝑠 (𝑖𝑖𝑖. Now, RNN #2 receives the aforementioned context vector
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 58 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 58 59 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 59 69 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 69 70 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 70 92 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 92 93 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 93 122 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 122 196 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 196 197 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 197 198 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 2555) (undo-tree-id25540 . -197) (undo-tree-id25541 . -58) (undo-tree-id25542 . -58) (undo-tree-id25543 . 139) (undo-tree-id25544 . -58) (undo-tree-id25545 . -58) (undo-tree-id25546 . -1) (undo-tree-id25547 . -2) (undo-tree-id25548 . -12) (undo-tree-id25549 . -12) (undo-tree-id25550 . -12) (undo-tree-id25551 . -12) (undo-tree-id25552 . -12) (undo-tree-id25553 . -12) (undo-tree-id25554 . -12) (undo-tree-id25555 . -12) (undo-tree-id25556 . -12) (undo-tree-id25557 . -12) (undo-tree-id25558 . -12) (undo-tree-id25559 . -12) (undo-tree-id25560 . -12) (undo-tree-id25561 . -12) (undo-tree-id25562 . -12) (undo-tree-id25563 . -12) (undo-tree-id25564 . -12) (undo-tree-id25565 . -12) (undo-tree-id25566 . -12) (undo-tree-id25567 . -12) (undo-tree-id25568 . -12) (undo-tree-id25569 . -12) (undo-tree-id25570 . -12) (undo-tree-id25571 . -12) (undo-tree-id25572 . -12) (undo-tree-id25573 . -12) (undo-tree-id25574 . -2) (undo-tree-id25575 . -2) (undo-tree-id25576 . -2) (undo-tree-id25577 . -2) (undo-tree-id25578 . -2) (undo-tree-id25579 . -2) (undo-tree-id25580 . -2) (undo-tree-id25581 . -2) (undo-tree-id25582 . -2) (undo-tree-id25583 . -2) (undo-tree-id25584 . -2) (undo-tree-id25585 . -2) (undo-tree-id25586 . -2) (undo-tree-id25587 . -2) (undo-tree-id25588 . -2) (undo-tree-id25589 . -2) (undo-tree-id25590 . -2) (undo-tree-id25591 . -2) (undo-tree-id25592 . -2) (undo-tree-id25593 . -2) (undo-tree-id25594 . -2) (undo-tree-id25595 . -2) (undo-tree-id25596 . -2) (undo-tree-id25597 . -2) (undo-tree-id25598 . -2) (undo-tree-id25599 . -2) (undo-tree-id25600 . -2) (undo-tree-id25601 . -2) (undo-tree-id25602 . -2) (undo-tree-id25603 . -2) (undo-tree-id25604 . -2) (undo-tree-id25605 . -2) (undo-tree-id25606 . -2) (undo-tree-id25607 . -2) (undo-tree-id25608 . -2) (undo-tree-id25609 . -2) (undo-tree-id25610 . -2) (undo-tree-id25611 . -2) (undo-tree-id25612 . -2) (undo-tree-id25613 . -2) (undo-tree-id25614 . -2) (undo-tree-id25615 . -2) (undo-tree-id25616 . -2) (undo-tree-id25617 . -2) (undo-tree-id25618 . -2) (undo-tree-id25619 . -2) (undo-tree-id25620 . -2) (undo-tree-id25621 . -2) (undo-tree-id25622 . -2) (undo-tree-id25623 . -2) (undo-tree-id25624 . -2) (undo-tree-id25625 . -2) (undo-tree-id25626 . -2) (undo-tree-id25627 . -2) (undo-tree-id25628 . -2) (undo-tree-id25629 . -2) (undo-tree-id25630 . -2) (undo-tree-id25631 . -2) (undo-tree-id25632 . -2) (undo-tree-id25633 . -2) (undo-tree-id25634 . -2) (undo-tree-id25635 . -2) (undo-tree-id25636 . -2) (undo-tree-id25637 . -2) (undo-tree-id25638 . -2) (undo-tree-id25639 . -2) (undo-tree-id25640 . -2) (undo-tree-id25641 . -2) (undo-tree-id25642 . -2) (undo-tree-id25643 . -2) (undo-tree-id25644 . -2) (undo-tree-id25645 . -2) (undo-tree-id25646 . -2) (undo-tree-id25647 . -2) (undo-tree-id25648 . -2) (undo-tree-id25649 . -2) (undo-tree-id25650 . -2) (undo-tree-id25651 . -2) (undo-tree-id25652 . -2) (undo-tree-id25653 . -2) (undo-tree-id25654 . -2) (undo-tree-id25655 . -2) (undo-tree-id25656 . -2) (undo-tree-id25657 . -2) (undo-tree-id25658 . -2) (undo-tree-id25659 . -2) (undo-tree-id25660 . -2) (undo-tree-id25661 . -2) (undo-tree-id25662 . -2) (undo-tree-id25663 . -2) (undo-tree-id25664 . -2) (undo-tree-id25665 . -2) (undo-tree-id25666 . -2) (undo-tree-id25667 . -2) (undo-tree-id25668 . -2) (undo-tree-id25669 . -2) (undo-tree-id25670 . -2) (undo-tree-id25671 . -2) (undo-tree-id25672 . -2) (undo-tree-id25673 . -2) (undo-tree-id25674 . -2) (undo-tree-id25675 . -2) (undo-tree-id25676 . -2) (undo-tree-id25677 . -2) (undo-tree-id25678 . -2) (undo-tree-id25679 . -2) (undo-tree-id25680 . -2) (undo-tree-id25681 . -2) (undo-tree-id25682 . -2) (undo-tree-id25683 . -2) (undo-tree-id25684 . -2) (undo-tree-id25685 . -2) (undo-tree-id25686 . -2) (undo-tree-id25687 . -2) (undo-tree-id25688 . -2) (undo-tree-id25689 . -2) (undo-tree-id25690 . -198) 2557 (t 25774 26863 570353 278000)) nil (25774 27011 261266 842000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3616 . 3617) (nil fontified nil 3514 . 3617) (nil fontified nil 3417 . 3514) (nil fontified nil 3315 . 3417) (nil fontified nil 3217 . 3315) (nil fontified nil 3111 . 3217) (nil fontified nil 2997 . 3111) (nil fontified nil 2891 . 2997) (nil fontified nil 2784 . 2891) (nil fontified nil 2669 . 2784) (nil fontified nil 2555 . 2669) (2555 . 3617)) nil (25774 27011 261146 788000) 0 nil])
([nil nil ((2555 . 2557)) nil (25774 27011 261144 654000) 0 nil])
([nil nil ((3515 . 3516) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -3515) (undo-tree-id25515 . -1) (3418 . 3419) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -3418) (undo-tree-id25516 . -1) (3316 . 3317) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -3316) (undo-tree-id25517 . -1) (3218 . 3219) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -3218) (undo-tree-id25518 . -1) (undo-tree-id25519 . -1) (undo-tree-id25520 . -1) (undo-tree-id25521 . -1) (undo-tree-id25522 . -1) (undo-tree-id25523 . -1) (undo-tree-id25524 . -1) (undo-tree-id25525 . -1) (undo-tree-id25526 . -1) (undo-tree-id25527 . -1) (undo-tree-id25528 . -1) (undo-tree-id25529 . -1) (undo-tree-id25530 . -1) (undo-tree-id25531 . -1) (undo-tree-id25532 . -1) (undo-tree-id25533 . -1) (undo-tree-id25534 . -1) (3112 . 3113) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -3112) (undo-tree-id25535 . -1) (2998 . 2999) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -2998) (undo-tree-id25536 . -1) (2892 . 2893) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -2892) (undo-tree-id25537 . -1) (2785 . 2786) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -2785) (undo-tree-id25538 . -1) (2670 . 2671) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -2670) (undo-tree-id25539 . -1) 2556) nil (25774 27011 261141 648000) 0 nil])
([nil nil ((#("In Figure 16.3" 0 14 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2557) (undo-tree-id25512 . 14) (undo-tree-id25513 . -13) (undo-tree-id25514 . -14)) nil (25774 27011 261119 745000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2557) (undo-tree-id25509 . 2) (undo-tree-id25510 . -1) (undo-tree-id25511 . -2)) nil (25774 27011 261117 31000) 0 nil])
([nil nil ((#("we " 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2557) (undo-tree-id25506 . 3) (undo-tree-id25507 . -2) (undo-tree-id25508 . -3)) nil (25774 27011 261114 258000) 0 nil])
([nil nil ((#("saw " 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2557) (undo-tree-id25503 . 4) (undo-tree-id25504 . -3) (undo-tree-id25505 . -4)) nil (25774 27011 261111 209000) 0 nil])
([nil nil ((#("that " 0 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2557) (undo-tree-id25500 . 5) (undo-tree-id25501 . -4) (undo-tree-id25502 . -5)) nil (25774 27011 261108 260000) 0 nil])
([nil nil ((2557 . 2558) (#("t" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2557)) nil (25774 27011 261105 444000) 0 nil])
([nil nil ((#("𝑠" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2574) (undo-tree-id25477 . -1) (undo-tree-id25478 . -1) (undo-tree-id25479 . -1) (undo-tree-id25480 . -1) (undo-tree-id25481 . -1) (undo-tree-id25482 . -1) (undo-tree-id25483 . -1) (undo-tree-id25484 . -1) (undo-tree-id25485 . -1) (undo-tree-id25486 . -1) (undo-tree-id25487 . -1) (undo-tree-id25488 . -1) (undo-tree-id25489 . -1) (undo-tree-id25490 . -1) (undo-tree-id25491 . -1) (undo-tree-id25492 . -1) (undo-tree-id25493 . -1) (undo-tree-id25494 . -1) (undo-tree-id25495 . -1) (undo-tree-id25496 . -1) (undo-tree-id25497 . -1) (undo-tree-id25498 . -1) (undo-tree-id25499 . -1)) nil (25774 27011 261103 864000) 0 nil])
([nil nil ((#("𝑠" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2574) (undo-tree-id25475 . -1) (undo-tree-id25476 . -1)) nil (25774 27011 261088 131000) 0 nil])
([nil nil ((#("(" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2575) (undo-tree-id25471 . 1) (undo-tree-id25472 . -1) (undo-tree-id25473 . -1) (undo-tree-id25474 . -1)) nil (25774 27011 261085 984000) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2575) (undo-tree-id25469 . -1) (undo-tree-id25470 . -1)) nil (25774 27011 261081 376000) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2575) (undo-tree-id25467 . -1) (undo-tree-id25468 . -1)) nil (25774 27011 261079 412000) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2575) (undo-tree-id25465 . -1) (undo-tree-id25466 . -1)) nil (25774 27011 261077 414000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2575) (undo-tree-id25463 . -1) (undo-tree-id25464 . -1)) nil (25774 27011 261074 735000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2574) (undo-tree-id25279 . -1) (undo-tree-id25280 . -1) (undo-tree-id25281 . -1) (undo-tree-id25282 . -1) (undo-tree-id25283 . -1) (undo-tree-id25284 . -1) (undo-tree-id25285 . -1) (undo-tree-id25286 . -1) (undo-tree-id25287 . -1) (undo-tree-id25288 . -1) (undo-tree-id25289 . -1) (undo-tree-id25290 . -1) (undo-tree-id25291 . -1) (undo-tree-id25292 . -1) (undo-tree-id25293 . -1) (undo-tree-id25294 . -1) (undo-tree-id25295 . -1) (undo-tree-id25296 . -1) (undo-tree-id25297 . -1) (undo-tree-id25298 . -1) (undo-tree-id25299 . -1) (undo-tree-id25300 . -1) (undo-tree-id25301 . -1) (undo-tree-id25302 . -1) (undo-tree-id25303 . -1) (undo-tree-id25304 . -1) (undo-tree-id25305 . -1) (undo-tree-id25306 . -1) (undo-tree-id25307 . -1) (undo-tree-id25308 . -1) (undo-tree-id25309 . -1) (undo-tree-id25310 . -1) (undo-tree-id25311 . -1) (undo-tree-id25312 . -1) (undo-tree-id25313 . -1) (undo-tree-id25314 . -1) (undo-tree-id25315 . -1) (undo-tree-id25316 . -1) (undo-tree-id25317 . -1) (undo-tree-id25318 . -1) (undo-tree-id25319 . -1) (undo-tree-id25320 . -1) (undo-tree-id25321 . -1) (undo-tree-id25322 . -1) (undo-tree-id25323 . -1) (undo-tree-id25324 . -1) (undo-tree-id25325 . -1) (undo-tree-id25326 . -1) (undo-tree-id25327 . -1) (undo-tree-id25328 . -1) (undo-tree-id25329 . -1) (undo-tree-id25330 . -1) (undo-tree-id25331 . -1) (undo-tree-id25332 . -1) (undo-tree-id25333 . -1) (undo-tree-id25334 . -1) (undo-tree-id25335 . -1) (undo-tree-id25336 . -1) (undo-tree-id25337 . -1) (undo-tree-id25338 . -1) (undo-tree-id25339 . -1) (undo-tree-id25340 . -1) (undo-tree-id25341 . -1) (undo-tree-id25342 . -1) (undo-tree-id25343 . -1) (undo-tree-id25344 . -1) (undo-tree-id25345 . -1) (undo-tree-id25346 . -1) (undo-tree-id25347 . -1) (undo-tree-id25348 . -1) (undo-tree-id25349 . -1) (undo-tree-id25350 . -1) (undo-tree-id25351 . -1) (undo-tree-id25352 . -1) (undo-tree-id25353 . -1) (undo-tree-id25354 . -1) (undo-tree-id25355 . -1) (undo-tree-id25356 . -1) (undo-tree-id25357 . -1) (undo-tree-id25358 . -1) (undo-tree-id25359 . -1) (undo-tree-id25360 . -1) (undo-tree-id25361 . -1) (undo-tree-id25362 . -1) (undo-tree-id25363 . -1) (undo-tree-id25364 . -1) (undo-tree-id25365 . -1) (undo-tree-id25366 . -1) (undo-tree-id25367 . -1) (undo-tree-id25368 . -1) (undo-tree-id25369 . -1) (undo-tree-id25370 . -1) (undo-tree-id25371 . -1) (undo-tree-id25372 . -1) (undo-tree-id25373 . -1) (undo-tree-id25374 . -1) (undo-tree-id25375 . -1) (undo-tree-id25376 . -1) (undo-tree-id25377 . -1) (undo-tree-id25378 . -1) (undo-tree-id25379 . -1) (undo-tree-id25380 . -1) (undo-tree-id25381 . -1) (undo-tree-id25382 . -1) (undo-tree-id25383 . -1) (undo-tree-id25384 . -1) (undo-tree-id25385 . -1) (undo-tree-id25386 . -1) (undo-tree-id25387 . -1) (undo-tree-id25388 . -1) (undo-tree-id25389 . -1) (undo-tree-id25390 . -1) (undo-tree-id25391 . -1) (undo-tree-id25392 . -1) (undo-tree-id25393 . -1) (undo-tree-id25394 . -1) (undo-tree-id25395 . -1) (undo-tree-id25396 . -1) (undo-tree-id25397 . -1) (undo-tree-id25398 . -1) (undo-tree-id25399 . -1) (undo-tree-id25400 . -1) (undo-tree-id25401 . -1) (undo-tree-id25402 . -1) (undo-tree-id25403 . -1) (undo-tree-id25404 . -1) (undo-tree-id25405 . -1) (undo-tree-id25406 . -1) (undo-tree-id25407 . -1) (undo-tree-id25408 . -1) (undo-tree-id25409 . -1) (undo-tree-id25410 . -1) (undo-tree-id25411 . -1) (undo-tree-id25412 . -1) (undo-tree-id25413 . -1) (undo-tree-id25414 . -1) (undo-tree-id25415 . -1) (undo-tree-id25416 . -1) (undo-tree-id25417 . -1) (undo-tree-id25418 . -1) (undo-tree-id25419 . -1) (undo-tree-id25420 . -1) (undo-tree-id25421 . -1) (undo-tree-id25422 . -1) (undo-tree-id25423 . -1) (undo-tree-id25424 . -1) (undo-tree-id25425 . -1) (undo-tree-id25426 . -1) (undo-tree-id25427 . -1) (undo-tree-id25428 . -1) (undo-tree-id25429 . -1) (undo-tree-id25430 . -1) (undo-tree-id25431 . -1) (undo-tree-id25432 . -1) (undo-tree-id25433 . -1) (undo-tree-id25434 . -1) (undo-tree-id25435 . -1) (undo-tree-id25436 . -1) (undo-tree-id25437 . -1) (undo-tree-id25438 . -1) (undo-tree-id25439 . -1) (undo-tree-id25440 . -1) (undo-tree-id25441 . -1) (undo-tree-id25442 . -1) (undo-tree-id25443 . -1) (undo-tree-id25444 . -1) (undo-tree-id25445 . -1) (undo-tree-id25446 . -1) (undo-tree-id25447 . -1) (undo-tree-id25448 . -1) (undo-tree-id25449 . -1) (undo-tree-id25450 . -1) (undo-tree-id25451 . -1) (undo-tree-id25452 . -1) (undo-tree-id25453 . -1) (undo-tree-id25454 . -1) (undo-tree-id25455 . -1) (undo-tree-id25456 . -1) (undo-tree-id25457 . -1) (undo-tree-id25458 . -1) (undo-tree-id25459 . -1) (undo-tree-id25460 . -1) (undo-tree-id25461 . -1) (undo-tree-id25462 . -1)) nil (25774 27011 261065 188000) 0 nil])
([nil nil ((#("𝑠" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2611) (undo-tree-id25256 . -1) (undo-tree-id25257 . -1) (undo-tree-id25258 . -1) (undo-tree-id25259 . -1) (undo-tree-id25260 . -1) (undo-tree-id25261 . -1) (undo-tree-id25262 . -1) (undo-tree-id25263 . -1) (undo-tree-id25264 . -1) (undo-tree-id25265 . -1) (undo-tree-id25266 . -1) (undo-tree-id25267 . -1) (undo-tree-id25268 . -1) (undo-tree-id25269 . -1) (undo-tree-id25270 . -1) (undo-tree-id25271 . -1) (undo-tree-id25272 . -1) (undo-tree-id25273 . -1) (undo-tree-id25274 . -1) (undo-tree-id25275 . -1) (undo-tree-id25276 . -1) (undo-tree-id25277 . -1) (undo-tree-id25278 . -1)) nil (25774 27011 258957 445000) 0 nil])
([nil nil ((#("𝑠" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2611) (undo-tree-id25254 . -1) (undo-tree-id25255 . -1)) nil (25774 27011 258942 321000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2611) (undo-tree-id25252 . -1) (undo-tree-id25253 . -1)) nil (25774 27011 258940 31000) 0 nil])
([nil nil ((#("(" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2611) (undo-tree-id25248 . 1) (undo-tree-id25249 . -1) (undo-tree-id25250 . -1) (undo-tree-id25251 . -1)) nil (25774 27011 258937 601000) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2611) (undo-tree-id25246 . -1) (undo-tree-id25247 . -1)) nil (25774 27011 258933 619000) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2611) (undo-tree-id25244 . -1) (undo-tree-id25245 . -1)) nil (25774 27011 258930 663000) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2611) (undo-tree-id25242 . -1) (undo-tree-id25243 . -1)) nil (25774 27011 258928 465000) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2611) (undo-tree-id25240 . -1) (undo-tree-id25241 . -1)) nil (25774 27011 258926 0) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2611) (undo-tree-id25238 . -1) (undo-tree-id25239 . -1)) nil (25774 27011 261966 413000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2610) (undo-tree-id25951 . -1) (undo-tree-id25952 . -1) (undo-tree-id25953 . -1) (undo-tree-id25954 . -1) (undo-tree-id25955 . -1) (undo-tree-id25956 . -1) (undo-tree-id25957 . -1) (undo-tree-id25958 . -1) (undo-tree-id25959 . -1) (undo-tree-id25960 . -1) (undo-tree-id25961 . -1) (undo-tree-id25962 . -1) (undo-tree-id25963 . -1) (undo-tree-id25964 . -1) (undo-tree-id25965 . -1) (undo-tree-id25966 . -1) (undo-tree-id25967 . -1) (undo-tree-id25968 . -1) (undo-tree-id25969 . -1) (undo-tree-id25970 . -1) (undo-tree-id25971 . -1) (undo-tree-id25972 . -1) (undo-tree-id25973 . -1) (undo-tree-id25974 . -1) (undo-tree-id25975 . -1) (undo-tree-id25976 . -1) (undo-tree-id25977 . -1) (undo-tree-id25978 . -1) (undo-tree-id25979 . -1) (undo-tree-id25980 . -1) (undo-tree-id25981 . -1) (undo-tree-id25982 . -1) (undo-tree-id25983 . -1) (undo-tree-id25984 . -1) (undo-tree-id25985 . -1) (undo-tree-id25986 . -1) (undo-tree-id25987 . -1) (undo-tree-id25988 . -1) (undo-tree-id25989 . -1) (undo-tree-id25990 . -1) (undo-tree-id25991 . -1) (undo-tree-id25992 . -1) (undo-tree-id25993 . -1) (undo-tree-id25994 . -1) (undo-tree-id25995 . -1) (undo-tree-id25996 . -1) (undo-tree-id25997 . -1) (undo-tree-id25998 . -1) (undo-tree-id25999 . -1) (undo-tree-id26000 . -1)) nil (25774 27020 810786 375000) 0 nil] [nil nil ((#("," 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2611) (undo-tree-id25236 . -1) (undo-tree-id25237 . -1)) ((2611 . 2612)) (25774 27011 258916 534000) 0 nil])
([nil nil ((#("𝑦" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2637) (undo-tree-id25928 . -1) (undo-tree-id25929 . -1) (undo-tree-id25930 . -1) (undo-tree-id25931 . -1) (undo-tree-id25932 . -1) (undo-tree-id25933 . -1) (undo-tree-id25934 . -1) (undo-tree-id25935 . -1) (undo-tree-id25936 . -1) (undo-tree-id25937 . -1) (undo-tree-id25938 . -1) (undo-tree-id25939 . -1) (undo-tree-id25940 . -1) (undo-tree-id25941 . -1) (undo-tree-id25942 . -1) (undo-tree-id25943 . -1) (undo-tree-id25944 . -1) (undo-tree-id25945 . -1) (undo-tree-id25946 . -1) (undo-tree-id25947 . -1) (undo-tree-id25948 . -1) (undo-tree-id25949 . -1) (undo-tree-id25950 . -1)) nil (25774 27020 810754 565000) 0 nil])
nil
([nil nil ((#("𝑦" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2637) (undo-tree-id25926 . -1) (undo-tree-id25927 . -1)) nil (25774 27020 810739 620000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2637) (undo-tree-id25924 . -1) (undo-tree-id25925 . -1)) nil (25774 27020 810737 396000) 0 nil])
([nil nil ((#("(" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2637) (undo-tree-id25920 . 1) (undo-tree-id25921 . -1) (undo-tree-id25922 . -1) (undo-tree-id25923 . -1)) nil (25774 27020 810735 134000) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2637) (undo-tree-id25918 . -1) (undo-tree-id25919 . -1)) nil (25774 27020 810731 622000) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2637) (undo-tree-id25916 . -1) (undo-tree-id25917 . -1)) nil (25774 27020 810729 532000) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2637) (undo-tree-id25914 . -1) (undo-tree-id25915 . -1)) nil (25774 27020 810727 406000) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2637) (undo-tree-id25912 . -1) (undo-tree-id25913 . -1)) nil (25774 27020 810723 205000) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2637) (undo-tree-id25910 . -1) (undo-tree-id25911 . -1)) nil (25774 27020 810720 974000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2636) (undo-tree-id25693 . -1) (undo-tree-id25694 . -1) (undo-tree-id25695 . -1) (undo-tree-id25696 . -1) (undo-tree-id25697 . -1) (undo-tree-id25698 . -1) (undo-tree-id25699 . -1) (undo-tree-id25700 . -1) (undo-tree-id25701 . -1) (undo-tree-id25702 . -1) (undo-tree-id25703 . -1) (undo-tree-id25704 . -1) (undo-tree-id25705 . -1) (undo-tree-id25706 . -1) (undo-tree-id25707 . -1) (undo-tree-id25708 . -1) (undo-tree-id25709 . -1) (undo-tree-id25710 . -1) (undo-tree-id25711 . -1) (undo-tree-id25712 . -1) (undo-tree-id25713 . -1) (undo-tree-id25714 . -1) (undo-tree-id25715 . -1) (undo-tree-id25716 . -1) (undo-tree-id25717 . -1) (undo-tree-id25718 . -1) (undo-tree-id25719 . -1) (undo-tree-id25720 . -1) (undo-tree-id25721 . -1) (undo-tree-id25722 . -1) (undo-tree-id25723 . -1) (undo-tree-id25724 . -1) (undo-tree-id25725 . -1) (undo-tree-id25726 . -1) (undo-tree-id25727 . -1) (undo-tree-id25728 . -1) (undo-tree-id25729 . -1) (undo-tree-id25730 . -1) (undo-tree-id25731 . -1) (undo-tree-id25732 . -1) (undo-tree-id25733 . -1) (undo-tree-id25734 . -1) (undo-tree-id25735 . -1) (undo-tree-id25736 . -1) (undo-tree-id25737 . -1) (undo-tree-id25738 . -1) (undo-tree-id25739 . -1) (undo-tree-id25740 . -1) (undo-tree-id25741 . -1) (undo-tree-id25742 . -1) (undo-tree-id25743 . -1) (undo-tree-id25744 . -1) (undo-tree-id25745 . -1) (undo-tree-id25746 . -1) (undo-tree-id25747 . -1) (undo-tree-id25748 . -1) (undo-tree-id25749 . -1) (undo-tree-id25750 . -1) (undo-tree-id25751 . -1) (undo-tree-id25752 . -1) (undo-tree-id25753 . -1) (undo-tree-id25754 . -1) (undo-tree-id25755 . -1) (undo-tree-id25756 . -1) (undo-tree-id25757 . -1) (undo-tree-id25758 . -1) (undo-tree-id25759 . -1) (undo-tree-id25760 . -1) (undo-tree-id25761 . -1) (undo-tree-id25762 . -1) (undo-tree-id25763 . -1) (undo-tree-id25764 . -1) (undo-tree-id25765 . -1) (undo-tree-id25766 . -1) (undo-tree-id25767 . -1) (undo-tree-id25768 . -1) (undo-tree-id25769 . -1) (undo-tree-id25770 . -1) (undo-tree-id25771 . -1) (undo-tree-id25772 . -1) (undo-tree-id25773 . -1) (undo-tree-id25774 . -1) (undo-tree-id25775 . -1) (undo-tree-id25776 . -1) (undo-tree-id25777 . -1) (undo-tree-id25778 . -1) (undo-tree-id25779 . -1) (undo-tree-id25780 . -1) (undo-tree-id25781 . -1) (undo-tree-id25782 . -1) (undo-tree-id25783 . -1) (undo-tree-id25784 . -1) (undo-tree-id25785 . -1) (undo-tree-id25786 . -1) (undo-tree-id25787 . -1) (undo-tree-id25788 . -1) (undo-tree-id25789 . -1) (undo-tree-id25790 . -1) (undo-tree-id25791 . -1) (undo-tree-id25792 . -1) (undo-tree-id25793 . -1) (undo-tree-id25794 . -1) (undo-tree-id25795 . -1) (undo-tree-id25796 . -1) (undo-tree-id25797 . -1) (undo-tree-id25798 . -1) (undo-tree-id25799 . -1) (undo-tree-id25800 . -1) (undo-tree-id25801 . -1) (undo-tree-id25802 . -1) (undo-tree-id25803 . -1) (undo-tree-id25804 . -1) (undo-tree-id25805 . -1) (undo-tree-id25806 . -1) (undo-tree-id25807 . -1) (undo-tree-id25808 . -1) (undo-tree-id25809 . -1) (undo-tree-id25810 . -1) (undo-tree-id25811 . -1) (undo-tree-id25812 . -1) (undo-tree-id25813 . -1) (undo-tree-id25814 . -1) (undo-tree-id25815 . -1) (undo-tree-id25816 . -1) (undo-tree-id25817 . -1) (undo-tree-id25818 . -1) (undo-tree-id25819 . -1) (undo-tree-id25820 . -1) (undo-tree-id25821 . -1) (undo-tree-id25822 . -1) (undo-tree-id25823 . -1) (undo-tree-id25824 . -1) (undo-tree-id25825 . -1) (undo-tree-id25826 . -1) (undo-tree-id25827 . -1) (undo-tree-id25828 . -1) (undo-tree-id25829 . -1) (undo-tree-id25830 . -1) (undo-tree-id25831 . -1) (undo-tree-id25832 . -1) (undo-tree-id25833 . -1) (undo-tree-id25834 . -1) (undo-tree-id25835 . -1) (undo-tree-id25836 . -1) (undo-tree-id25837 . -1) (undo-tree-id25838 . -1) (undo-tree-id25839 . -1) (undo-tree-id25840 . -1) (undo-tree-id25841 . -1) (undo-tree-id25842 . -1) (undo-tree-id25843 . -1) (undo-tree-id25844 . -1) (undo-tree-id25845 . -1) (undo-tree-id25846 . -1) (undo-tree-id25847 . -1) (undo-tree-id25848 . -1) (undo-tree-id25849 . -1) (undo-tree-id25850 . -1) (undo-tree-id25851 . -1) (undo-tree-id25852 . -1) (undo-tree-id25853 . -1) (undo-tree-id25854 . -1) (undo-tree-id25855 . -1) (undo-tree-id25856 . -1) (undo-tree-id25857 . -1) (undo-tree-id25858 . -1) (undo-tree-id25859 . -1) (undo-tree-id25860 . -1) (undo-tree-id25861 . -1) (undo-tree-id25862 . -1) (undo-tree-id25863 . -1) (undo-tree-id25864 . -1) (undo-tree-id25865 . -1) (undo-tree-id25866 . -1) (undo-tree-id25867 . -1) (undo-tree-id25868 . -1) (undo-tree-id25869 . -1) (undo-tree-id25870 . -1) (undo-tree-id25871 . -1) (undo-tree-id25872 . -1) (undo-tree-id25873 . -1) (undo-tree-id25874 . -1) (undo-tree-id25875 . -1) (undo-tree-id25876 . -1) (undo-tree-id25877 . -1) (undo-tree-id25878 . -1) (undo-tree-id25879 . -1) (undo-tree-id25880 . -1) (undo-tree-id25881 . -1) (undo-tree-id25882 . -1) (undo-tree-id25883 . -1) (undo-tree-id25884 . -1) (undo-tree-id25885 . -1) (undo-tree-id25886 . -1) (undo-tree-id25887 . -1) (undo-tree-id25888 . -1) (undo-tree-id25889 . -1) (undo-tree-id25890 . -1) (undo-tree-id25891 . -1) (undo-tree-id25892 . -1) (undo-tree-id25893 . -1) (undo-tree-id25894 . -1) (undo-tree-id25895 . -1) (undo-tree-id25896 . -1) (undo-tree-id25897 . -1) (undo-tree-id25898 . -1) (undo-tree-id25899 . -1) (undo-tree-id25900 . -1) (undo-tree-id25901 . -1) (undo-tree-id25902 . -1) (undo-tree-id25903 . -1) (undo-tree-id25904 . -1) (undo-tree-id25905 . -1) (undo-tree-id25906 . -1) (undo-tree-id25907 . -1) (undo-tree-id25908 . -1) (undo-tree-id25909 . -1)) nil (25774 27020 811087 248000) 0 nil])
([nil nil ((#("𝑐" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2661) (undo-tree-id27068 . -1) (undo-tree-id27069 . -1) (undo-tree-id27070 . -1) (undo-tree-id27071 . -1) (undo-tree-id27072 . -1) (undo-tree-id27073 . -1) (undo-tree-id27074 . -1) (undo-tree-id27075 . -1) (undo-tree-id27076 . -1) (undo-tree-id27077 . -1) (undo-tree-id27078 . -1) (undo-tree-id27079 . -1) (undo-tree-id27080 . -1) (undo-tree-id27081 . -1) (undo-tree-id27082 . -1) (undo-tree-id27083 . -1) (undo-tree-id27084 . -1) (undo-tree-id27085 . -1) (undo-tree-id27086 . -1) (undo-tree-id27087 . -1) (undo-tree-id27088 . -1) (undo-tree-id27089 . -1) (undo-tree-id27090 . -1)) nil (25774 27047 202766 633000) 0 nil] [nil nil ((#("," 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2636) (undo-tree-id25691 . -1) (undo-tree-id25692 . -1)) ((2636 . 2637)) (25774 27020 810281 855000) 0 nil])
([nil nil ((#("𝑐" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2661) (undo-tree-id27066 . -1) (undo-tree-id27067 . -1)) nil (25774 27047 202754 22000) 0 nil])
nil
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2661) (undo-tree-id27064 . -1) (undo-tree-id27065 . -1)) nil (25774 27047 202752 102000) 0 nil])
([nil nil ((#("(" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2661) (undo-tree-id27060 . 1) (undo-tree-id27061 . -1) (undo-tree-id27062 . -1) (undo-tree-id27063 . -1)) nil (25774 27047 202750 43000) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2661) (undo-tree-id27058 . -1) (undo-tree-id27059 . -1)) nil (25774 27047 202747 75000) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2661) (undo-tree-id27056 . -1) (undo-tree-id27057 . -1)) nil (25774 27047 202745 242000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2660) (undo-tree-id26905 . -1) (undo-tree-id26906 . -1) (undo-tree-id26907 . -1) (undo-tree-id26908 . -1) (undo-tree-id26909 . -1) (undo-tree-id26910 . -1) (undo-tree-id26911 . -1) (undo-tree-id26912 . -1) (undo-tree-id26913 . -1) (undo-tree-id26914 . -1) (undo-tree-id26915 . -1) (undo-tree-id26916 . -1) (undo-tree-id26917 . -1) (undo-tree-id26918 . -1) (undo-tree-id26919 . -1) (undo-tree-id26920 . -1) (undo-tree-id26921 . -1) (undo-tree-id26922 . -1) (undo-tree-id26923 . -1) (undo-tree-id26924 . -1) (undo-tree-id26925 . -1) (undo-tree-id26926 . -1) (undo-tree-id26927 . -1) (undo-tree-id26928 . -1) (undo-tree-id26929 . -1) (undo-tree-id26930 . -1) (undo-tree-id26931 . -1) (undo-tree-id26932 . -1) (undo-tree-id26933 . -1) (undo-tree-id26934 . -1) (undo-tree-id26935 . -1) (undo-tree-id26936 . -1) (undo-tree-id26937 . -1) (undo-tree-id26938 . -1) (undo-tree-id26939 . -1) (undo-tree-id26940 . -1) (undo-tree-id26941 . -1) (undo-tree-id26942 . -1) (undo-tree-id26943 . -1) (undo-tree-id26944 . -1) (undo-tree-id26945 . -1) (undo-tree-id26946 . -1) (undo-tree-id26947 . -1) (undo-tree-id26948 . -1) (undo-tree-id26949 . -1) (undo-tree-id26950 . -1) (undo-tree-id26951 . -1) (undo-tree-id26952 . -1) (undo-tree-id26953 . -1) (undo-tree-id26954 . -1) (undo-tree-id26955 . -1) (undo-tree-id26956 . -1) (undo-tree-id26957 . -1) (undo-tree-id26958 . -1) (undo-tree-id26959 . -1) (undo-tree-id26960 . -1) (undo-tree-id26961 . -1) (undo-tree-id26962 . -1) (undo-tree-id26963 . -1) (undo-tree-id26964 . -1) (undo-tree-id26965 . -1) (undo-tree-id26966 . -1) (undo-tree-id26967 . -1) (undo-tree-id26968 . -1) (undo-tree-id26969 . -1) (undo-tree-id26970 . -1) (undo-tree-id26971 . -1) (undo-tree-id26972 . -1) (undo-tree-id26973 . -1) (undo-tree-id26974 . -1) (undo-tree-id26975 . -1) (undo-tree-id26976 . -1) (undo-tree-id26977 . -1) (undo-tree-id26978 . -1) (undo-tree-id26979 . -1) (undo-tree-id26980 . -1) (undo-tree-id26981 . -1) (undo-tree-id26982 . -1) (undo-tree-id26983 . -1) (undo-tree-id26984 . -1) (undo-tree-id26985 . -1) (undo-tree-id26986 . -1) (undo-tree-id26987 . -1) (undo-tree-id26988 . -1) (undo-tree-id26989 . -1) (undo-tree-id26990 . -1) (undo-tree-id26991 . -1) (undo-tree-id26992 . -1) (undo-tree-id26993 . -1) (undo-tree-id26994 . -1) (undo-tree-id26995 . -1) (undo-tree-id26996 . -1) (undo-tree-id26997 . -1) (undo-tree-id26998 . -1) (undo-tree-id26999 . -1) (undo-tree-id27000 . -1) (undo-tree-id27001 . -1) (undo-tree-id27002 . -1) (undo-tree-id27003 . -1) (undo-tree-id27004 . -1) (undo-tree-id27005 . -1) (undo-tree-id27006 . -1) (undo-tree-id27007 . -1) (undo-tree-id27008 . -1) (undo-tree-id27009 . -1) (undo-tree-id27010 . -1) (undo-tree-id27011 . -1) (undo-tree-id27012 . -1) (undo-tree-id27013 . -1) (undo-tree-id27014 . -1) (undo-tree-id27015 . -1) (undo-tree-id27016 . -1) (undo-tree-id27017 . -1) (undo-tree-id27018 . -1) (undo-tree-id27019 . -1) (undo-tree-id27020 . -1) (undo-tree-id27021 . -1) (undo-tree-id27022 . -1) (undo-tree-id27023 . -1) (undo-tree-id27024 . -1) (undo-tree-id27025 . -1) (undo-tree-id27026 . -1) (undo-tree-id27027 . -1) (undo-tree-id27028 . -1) (undo-tree-id27029 . -1) (undo-tree-id27030 . -1) (undo-tree-id27031 . -1) (undo-tree-id27032 . -1) (undo-tree-id27033 . -1) (undo-tree-id27034 . -1) (undo-tree-id27035 . -1) (undo-tree-id27036 . -1) (undo-tree-id27037 . -1) (undo-tree-id27038 . -1) (undo-tree-id27039 . -1) (undo-tree-id27040 . -1) (undo-tree-id27041 . -1) (undo-tree-id27042 . -1) (undo-tree-id27043 . -1) (undo-tree-id27044 . -1) (undo-tree-id27045 . -1) (undo-tree-id27046 . -1) (undo-tree-id27047 . -1) (undo-tree-id27048 . -1) (undo-tree-id27049 . -1) (undo-tree-id27050 . -1) (undo-tree-id27051 . -1) (undo-tree-id27052 . -1) (undo-tree-id27053 . -1) (undo-tree-id27054 . -1) (undo-tree-id27055 . -1)) nil (25774 27047 202738 818000) 0 nil])
([nil nil ((#("𝑖" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2660) (undo-tree-id26903 . -1) (undo-tree-id26904 . -1)) nil (25774 27047 202655 248000) 0 nil])
([nil nil ((2555 . 3558) (#("- 𝑜𝑜 (𝑖𝑖𝑖 for target word 𝑦𝑦 (𝑖𝑖𝑖 at time i. Note that the sequence vector 𝒚𝒚 refers to the sequence vector representing the correct translation of input sequence 𝒙𝒙 that is available during training. During training, the true label (word) 𝑦𝑦 (𝑖𝑖𝑖 is fed into the next state 𝑠𝑠 (𝑖𝑖𝑖𝑖𝑖; since this true label information is not available for prediction (inference), we feed the predicted output 𝑜𝑜 (𝑖𝑖𝑖 instead, as depicted in the previous figure. To summarize what we have just discussed above, the attention-based RNN consists of two RNNs. RNN #1 prepares context vectors from the input sequence elements, and RNN #2 receives the context vectors as input. The context vectors are computed via a weighted sum over the inputs, where the weights are the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 .The next subsection discusses how we compute these attention weights.

- The hidden state depends on the previous hidden state, the previous target word, and the context vector, which are used to generate the predicted output" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 13 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 13 14 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 14 120 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 120 121 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 121 226 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 226 227 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 227 285 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 285 297 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 297 299 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 299 302 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 302 306 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 306 311 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 311 312 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 312 313 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 313 314 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 314 315 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 315 316 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 316 317 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 317 318 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 318 319 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 319 320 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 320 321 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 321 322 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 322 323 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 323 324 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 324 325 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 325 326 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 326 327 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 327 328 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 328 329 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 329 330 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 330 331 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 331 332 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 332 333 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 333 334 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 334 335 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 335 336 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 336 337 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 337 338 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 338 339 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 339 340 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 340 341 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 341 342 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 342 343 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 343 344 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 344 345 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 345 346 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 346 347 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 347 446 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 446 447 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 447 544 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 544 545 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 545 646 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 646 647 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 647 743 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 743 744 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 744 846 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 846 847 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 847 848 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 848 849 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 849 850 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 850 851 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 851 904 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 904 905 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 905 918 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 918 919 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 919 930 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 930 931 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 931 1003 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2555) (undo-tree-id26114 . 152) (undo-tree-id26115 . -954) (undo-tree-id26116 . -954) (undo-tree-id26117 . -868) (undo-tree-id26118 . -851) (undo-tree-id26119 . 151) (undo-tree-id26120 . -851) (undo-tree-id26121 . -851) (undo-tree-id26122 . -1003) (undo-tree-id26123 . -1003) (undo-tree-id26124 . -1003) (undo-tree-id26125 . -1003) (undo-tree-id26126 . -851) (undo-tree-id26127 . -868) (undo-tree-id26128 . -868) (undo-tree-id26129 . -904) (undo-tree-id26130 . -904) (undo-tree-id26131 . -904) (undo-tree-id26132 . -904) (undo-tree-id26133 . -904) (undo-tree-id26134 . -904) (undo-tree-id26135 . -904) (undo-tree-id26136 . -904) (undo-tree-id26137 . -904) (undo-tree-id26138 . -904) (undo-tree-id26139 . -904) (undo-tree-id26140 . -904) (undo-tree-id26141 . -904) (undo-tree-id26142 . -904) (undo-tree-id26143 . -904) (undo-tree-id26144 . -904) (undo-tree-id26145 . -904) (undo-tree-id26146 . -904) (undo-tree-id26147 . -904) (undo-tree-id26148 . -904) (undo-tree-id26149 . -904) (undo-tree-id26150 . -904) (undo-tree-id26151 . -904) (undo-tree-id26152 . -904) (undo-tree-id26153 . -904) (undo-tree-id26154 . -904) (undo-tree-id26155 . -904) (undo-tree-id26156 . -904) (undo-tree-id26157 . -904) (undo-tree-id26158 . -904) (undo-tree-id26159 . -904) (undo-tree-id26160 . -904) (undo-tree-id26161 . -904) (undo-tree-id26162 . -904) (undo-tree-id26163 . -904) (undo-tree-id26164 . -904) (undo-tree-id26165 . -904) (undo-tree-id26166 . -904) (undo-tree-id26167 . -904) (undo-tree-id26168 . -904) (undo-tree-id26169 . -904) (undo-tree-id26170 . -904) (undo-tree-id26171 . -904) (undo-tree-id26172 . -904) (undo-tree-id26173 . -904) (undo-tree-id26174 . -904) (undo-tree-id26175 . -904) (undo-tree-id26176 . -904) (undo-tree-id26177 . -930) (undo-tree-id26178 . -930) (undo-tree-id26179 . -930) (undo-tree-id26180 . -930) (undo-tree-id26181 . -930) (undo-tree-id26182 . -930) (undo-tree-id26183 . -930) (undo-tree-id26184 . -930) (undo-tree-id26185 . -930) (undo-tree-id26186 . -930) (undo-tree-id26187 . -930) (undo-tree-id26188 . -930) (undo-tree-id26189 . -930) (undo-tree-id26190 . -930) (undo-tree-id26191 . -930) (undo-tree-id26192 . -930) (undo-tree-id26193 . -930) (undo-tree-id26194 . -930) (undo-tree-id26195 . -930) (undo-tree-id26196 . -930) (undo-tree-id26197 . -930) (undo-tree-id26198 . -930) (undo-tree-id26199 . -930) (undo-tree-id26200 . -930) (undo-tree-id26201 . -930) (undo-tree-id26202 . -930) (undo-tree-id26203 . -930) (undo-tree-id26204 . -930) (undo-tree-id26205 . -930) (undo-tree-id26206 . -930) (undo-tree-id26207 . -930) (undo-tree-id26208 . -930) (undo-tree-id26209 . -930) (undo-tree-id26210 . -930) (undo-tree-id26211 . -930) (undo-tree-id26212 . -930) (undo-tree-id26213 . -930) (undo-tree-id26214 . -930) (undo-tree-id26215 . -930) (undo-tree-id26216 . -930) (undo-tree-id26217 . -930) (undo-tree-id26218 . -930) (undo-tree-id26219 . -930) (undo-tree-id26220 . -930) (undo-tree-id26221 . -930) (undo-tree-id26222 . -930) (undo-tree-id26223 . -930) (undo-tree-id26224 . -930) (undo-tree-id26225 . -930) (undo-tree-id26226 . -930) (undo-tree-id26227 . -930) (undo-tree-id26228 . -930) (undo-tree-id26229 . -930) (undo-tree-id26230 . -930) (undo-tree-id26231 . -930) (undo-tree-id26232 . -930) (undo-tree-id26233 . -930) (undo-tree-id26234 . -930) (undo-tree-id26235 . -930) (undo-tree-id26236 . -930) (undo-tree-id26237 . -930) (undo-tree-id26238 . -930) (undo-tree-id26239 . -930) (undo-tree-id26240 . -930) (undo-tree-id26241 . -930) (undo-tree-id26242 . -930) (undo-tree-id26243 . -930) (undo-tree-id26244 . -930) (undo-tree-id26245 . -930) (undo-tree-id26246 . -930) (undo-tree-id26247 . -930) (undo-tree-id26248 . -930) (undo-tree-id26249 . -930) (undo-tree-id26250 . -930) (undo-tree-id26251 . -930) (undo-tree-id26252 . -930) (undo-tree-id26253 . -930) (undo-tree-id26254 . -930) (undo-tree-id26255 . -930) (undo-tree-id26256 . -930) (undo-tree-id26257 . -930) (undo-tree-id26258 . -930) (undo-tree-id26259 . -930) (undo-tree-id26260 . -930) (undo-tree-id26261 . -930) (undo-tree-id26262 . -930) (undo-tree-id26263 . -930) (undo-tree-id26264 . -930) (undo-tree-id26265 . -930) (undo-tree-id26266 . -930) (undo-tree-id26267 . -930) (undo-tree-id26268 . -930) (undo-tree-id26269 . -930) (undo-tree-id26270 . -930) (undo-tree-id26271 . -930) (undo-tree-id26272 . -930) (undo-tree-id26273 . -930) (undo-tree-id26274 . -930) (undo-tree-id26275 . -930) (undo-tree-id26276 . -930) (undo-tree-id26277 . -930) (undo-tree-id26278 . -930) (undo-tree-id26279 . -930) (undo-tree-id26280 . -930) (undo-tree-id26281 . -930) (undo-tree-id26282 . -930) (undo-tree-id26283 . -930) (undo-tree-id26284 . -930) (undo-tree-id26285 . -930) (undo-tree-id26286 . -930) (undo-tree-id26287 . -930) (undo-tree-id26288 . -930) (undo-tree-id26289 . -930) (undo-tree-id26290 . -930) (undo-tree-id26291 . -930) (undo-tree-id26292 . -930) (undo-tree-id26293 . -930) (undo-tree-id26294 . -930) (undo-tree-id26295 . -930) (undo-tree-id26296 . -930) (undo-tree-id26297 . -930) (undo-tree-id26298 . -930) (undo-tree-id26299 . -930) (undo-tree-id26300 . -930) (undo-tree-id26301 . -930) (undo-tree-id26302 . -930) (undo-tree-id26303 . -930) (undo-tree-id26304 . -930) (undo-tree-id26305 . -930) (undo-tree-id26306 . -930) (undo-tree-id26307 . -930) (undo-tree-id26308 . -930) (undo-tree-id26309 . -930) (undo-tree-id26310 . -930) (undo-tree-id26311 . -930) (undo-tree-id26312 . -930) (undo-tree-id26313 . -930) (undo-tree-id26314 . -930) (undo-tree-id26315 . -930) (undo-tree-id26316 . -930) (undo-tree-id26317 . -930) (undo-tree-id26318 . -930) (undo-tree-id26319 . -930) (undo-tree-id26320 . -930) (undo-tree-id26321 . -930) (undo-tree-id26322 . -930) (undo-tree-id26323 . -930) (undo-tree-id26324 . -930) (undo-tree-id26325 . -930) (undo-tree-id26326 . -930) (undo-tree-id26327 . -930) (undo-tree-id26328 . -930) (undo-tree-id26329 . -930) (undo-tree-id26330 . -930) (undo-tree-id26331 . -930) (undo-tree-id26332 . -930) (undo-tree-id26333 . -930) (undo-tree-id26334 . -930) (undo-tree-id26335 . -930) (undo-tree-id26336 . -930) (undo-tree-id26337 . -930) (undo-tree-id26338 . -930) (undo-tree-id26339 . -930) (undo-tree-id26340 . -930) (undo-tree-id26341 . -930) (undo-tree-id26342 . -930) (undo-tree-id26343 . -930) (undo-tree-id26344 . -930) (undo-tree-id26345 . -930) (undo-tree-id26346 . -930) (undo-tree-id26347 . -930) (undo-tree-id26348 . -930) (undo-tree-id26349 . -930) (undo-tree-id26350 . -930) (undo-tree-id26351 . -930) (undo-tree-id26352 . -930) (undo-tree-id26353 . -930) (undo-tree-id26354 . -930) (undo-tree-id26355 . -930) (undo-tree-id26356 . -930) (undo-tree-id26357 . -930) (undo-tree-id26358 . -930) (undo-tree-id26359 . -930) (undo-tree-id26360 . -930) (undo-tree-id26361 . -930) (undo-tree-id26362 . -930) (undo-tree-id26363 . -930) (undo-tree-id26364 . -930) (undo-tree-id26365 . -930) (undo-tree-id26366 . -930) (undo-tree-id26367 . -930) (undo-tree-id26368 . -930) (undo-tree-id26369 . -930) (undo-tree-id26370 . -930) (undo-tree-id26371 . -930) (undo-tree-id26372 . -930) (undo-tree-id26373 . -930) (undo-tree-id26374 . -930) (undo-tree-id26375 . -930) (undo-tree-id26376 . -930) (undo-tree-id26377 . -930) (undo-tree-id26378 . -930) (undo-tree-id26379 . -930) (undo-tree-id26380 . -930) (undo-tree-id26381 . -930) (undo-tree-id26382 . -930) (undo-tree-id26383 . -930) (undo-tree-id26384 . -930) (undo-tree-id26385 . -930) (undo-tree-id26386 . -930) (undo-tree-id26387 . -930) (undo-tree-id26388 . -930) (undo-tree-id26389 . -930) (undo-tree-id26390 . -930) (undo-tree-id26391 . -930) (undo-tree-id26392 . -930) (undo-tree-id26393 . -930) (undo-tree-id26394 . -930) (undo-tree-id26395 . -930) (undo-tree-id26396 . -930) (undo-tree-id26397 . -930) (undo-tree-id26398 . -930) (undo-tree-id26399 . -930) (undo-tree-id26400 . -930) (undo-tree-id26401 . -930) (undo-tree-id26402 . -930) (undo-tree-id26403 . -930) (undo-tree-id26404 . -930) (undo-tree-id26405 . -930) (undo-tree-id26406 . -930) (undo-tree-id26407 . -930) (undo-tree-id26408 . -930) (undo-tree-id26409 . -930) (undo-tree-id26410 . -930) (undo-tree-id26411 . -930) (undo-tree-id26412 . -930) (undo-tree-id26413 . -930) (undo-tree-id26414 . -930) (undo-tree-id26415 . -930) (undo-tree-id26416 . -930) (undo-tree-id26417 . -930) (undo-tree-id26418 . -930) (undo-tree-id26419 . -930) (undo-tree-id26420 . -931) (undo-tree-id26421 . -931) (undo-tree-id26422 . -931) (undo-tree-id26423 . -931) (undo-tree-id26424 . -931) (undo-tree-id26425 . -931) (undo-tree-id26426 . -931) (undo-tree-id26427 . -931) (undo-tree-id26428 . -931) (undo-tree-id26429 . -931) (undo-tree-id26430 . -931) (undo-tree-id26431 . -931) (undo-tree-id26432 . -931) (undo-tree-id26433 . -931) (undo-tree-id26434 . -931) (undo-tree-id26435 . -931) (undo-tree-id26436 . -934) (undo-tree-id26437 . -934) (undo-tree-id26438 . -934) (undo-tree-id26439 . -934) (undo-tree-id26440 . -934) (undo-tree-id26441 . -934) (undo-tree-id26442 . -934) (undo-tree-id26443 . -934) (undo-tree-id26444 . -934) (undo-tree-id26445 . -934) (undo-tree-id26446 . -934) (undo-tree-id26447 . -934) (undo-tree-id26448 . -934) (undo-tree-id26449 . -934) (undo-tree-id26450 . -934) (undo-tree-id26451 . -934) (undo-tree-id26452 . -934) (undo-tree-id26453 . -934) (undo-tree-id26454 . -934) (undo-tree-id26455 . -934) (undo-tree-id26456 . -934) (undo-tree-id26457 . -938) (undo-tree-id26458 . -938) (undo-tree-id26459 . -938) (undo-tree-id26460 . -938) (undo-tree-id26461 . -938) (undo-tree-id26462 . -938) (undo-tree-id26463 . -938) (undo-tree-id26464 . -938) (undo-tree-id26465 . -938) (undo-tree-id26466 . -938) (undo-tree-id26467 . -938) (undo-tree-id26468 . -938) (undo-tree-id26469 . -938) (undo-tree-id26470 . -938) (undo-tree-id26471 . -938) (undo-tree-id26472 . -938) (undo-tree-id26473 . -946) (undo-tree-id26474 . -946) (undo-tree-id26475 . -946) (undo-tree-id26476 . -946) (undo-tree-id26477 . -946) (undo-tree-id26478 . -946) (undo-tree-id26479 . -946) (undo-tree-id26480 . -946) (undo-tree-id26481 . -946) (undo-tree-id26482 . -946) (undo-tree-id26483 . -946) (undo-tree-id26484 . -946) (undo-tree-id26485 . -946) (undo-tree-id26486 . -946) (undo-tree-id26487 . -946) (undo-tree-id26488 . -946) (undo-tree-id26489 . -953) (undo-tree-id26490 . -953) (undo-tree-id26491 . -953) (undo-tree-id26492 . -953) (undo-tree-id26493 . -953) (undo-tree-id26494 . -953) (undo-tree-id26495 . -953) (undo-tree-id26496 . -953) (undo-tree-id26497 . -953) (undo-tree-id26498 . -953) (undo-tree-id26499 . -953) (undo-tree-id26500 . -953) (undo-tree-id26501 . -953) (undo-tree-id26502 . -953) (undo-tree-id26503 . -953) (undo-tree-id26504 . -953) (undo-tree-id26505 . -954) (undo-tree-id26506 . -954) (undo-tree-id26507 . -954) (undo-tree-id26508 . -954) (undo-tree-id26509 . -954) (undo-tree-id26510 . -954) (undo-tree-id26511 . -954) (undo-tree-id26512 . -954) (undo-tree-id26513 . -954) (undo-tree-id26514 . -954) (undo-tree-id26515 . -954) (undo-tree-id26516 . -954) (undo-tree-id26517 . -954) (undo-tree-id26518 . -954) (undo-tree-id26519 . -954) (undo-tree-id26520 . -954) (undo-tree-id26521 . -954) (undo-tree-id26522 . -954) (undo-tree-id26523 . -954) (undo-tree-id26524 . -954) (undo-tree-id26525 . -954) (undo-tree-id26526 . -954) (undo-tree-id26527 . -954) (undo-tree-id26528 . -954) (undo-tree-id26529 . -954) (undo-tree-id26530 . -954) (undo-tree-id26531 . -954) (undo-tree-id26532 . -954) (undo-tree-id26533 . -954) (undo-tree-id26534 . -954) (undo-tree-id26535 . -954) (undo-tree-id26536 . -954) (undo-tree-id26537 . -954) (undo-tree-id26538 . -954) (undo-tree-id26539 . -954) (undo-tree-id26540 . -954) (undo-tree-id26541 . -954) (undo-tree-id26542 . -954) (undo-tree-id26543 . -954) (undo-tree-id26544 . -954) (undo-tree-id26545 . -954) (undo-tree-id26546 . -954) (undo-tree-id26547 . -954) (undo-tree-id26548 . -954) (undo-tree-id26549 . -954) (undo-tree-id26550 . -954) (undo-tree-id26551 . -954) (undo-tree-id26552 . -954) (undo-tree-id26553 . -954) (undo-tree-id26554 . -954) (undo-tree-id26555 . -954) (undo-tree-id26556 . -954) (undo-tree-id26557 . -954) (undo-tree-id26558 . -954) (undo-tree-id26559 . -954) (undo-tree-id26560 . -954) (undo-tree-id26561 . -954) (undo-tree-id26562 . -954) (undo-tree-id26563 . -954) (undo-tree-id26564 . -954) (undo-tree-id26565 . -954) (undo-tree-id26566 . -954) (undo-tree-id26567 . -954) (undo-tree-id26568 . -954) (undo-tree-id26569 . -954) (undo-tree-id26570 . -954) (undo-tree-id26571 . -954) (undo-tree-id26572 . -954) (undo-tree-id26573 . -954) (undo-tree-id26574 . -954) (undo-tree-id26575 . -954) (undo-tree-id26576 . -954) (undo-tree-id26577 . -954) (undo-tree-id26578 . -954) (undo-tree-id26579 . -954) (undo-tree-id26580 . -954) (undo-tree-id26581 . -954) (undo-tree-id26582 . -954) (undo-tree-id26583 . -954) (undo-tree-id26584 . -954) (undo-tree-id26585 . -954) (undo-tree-id26586 . -954) (undo-tree-id26587 . -954) (undo-tree-id26588 . -954) (undo-tree-id26589 . -954) (undo-tree-id26590 . -954) (undo-tree-id26591 . -954) (undo-tree-id26592 . -954) (undo-tree-id26593 . -954) (undo-tree-id26594 . -954) (undo-tree-id26595 . -954) (undo-tree-id26596 . -954) (undo-tree-id26597 . -954) (undo-tree-id26598 . -954) (undo-tree-id26599 . -954) (undo-tree-id26600 . -954) (undo-tree-id26601 . -954) (undo-tree-id26602 . -954) (undo-tree-id26603 . -954) (undo-tree-id26604 . -954) (undo-tree-id26605 . -954) (undo-tree-id26606 . -954) (undo-tree-id26607 . -954) (undo-tree-id26608 . -954) (undo-tree-id26609 . -954) (undo-tree-id26610 . -954) (undo-tree-id26611 . -954) (undo-tree-id26612 . -954) (undo-tree-id26613 . -954) (undo-tree-id26614 . -954) (undo-tree-id26615 . -954) (undo-tree-id26616 . -954) (undo-tree-id26617 . -954) (undo-tree-id26618 . -954) (undo-tree-id26619 . -954) (undo-tree-id26620 . -954) (undo-tree-id26621 . -954) (undo-tree-id26622 . -954) (undo-tree-id26623 . -954) (undo-tree-id26624 . -954) (undo-tree-id26625 . -954) (undo-tree-id26626 . -954) (undo-tree-id26627 . -954) (undo-tree-id26628 . -954) (undo-tree-id26629 . -954) (undo-tree-id26630 . -954) (undo-tree-id26631 . -954) (undo-tree-id26632 . -954) (undo-tree-id26633 . -954) (undo-tree-id26634 . -954) (undo-tree-id26635 . -954) (undo-tree-id26636 . -954) (undo-tree-id26637 . -954) (undo-tree-id26638 . -954) (undo-tree-id26639 . -954) (undo-tree-id26640 . -954) (undo-tree-id26641 . -954) (undo-tree-id26642 . -954) (undo-tree-id26643 . -954) (undo-tree-id26644 . -954) (undo-tree-id26645 . -954) (undo-tree-id26646 . -954) (undo-tree-id26647 . -954) (undo-tree-id26648 . -954) (undo-tree-id26649 . -954) (undo-tree-id26650 . -954) (undo-tree-id26651 . -954) (undo-tree-id26652 . -954) (undo-tree-id26653 . -954) (undo-tree-id26654 . -954) (undo-tree-id26655 . -954) (undo-tree-id26656 . -954) (undo-tree-id26657 . -954) (undo-tree-id26658 . -954) (undo-tree-id26659 . -954) (undo-tree-id26660 . -954) (undo-tree-id26661 . -954) (undo-tree-id26662 . -954) (undo-tree-id26663 . -954) (undo-tree-id26664 . -954) (undo-tree-id26665 . -954) (undo-tree-id26666 . -954) (undo-tree-id26667 . -954) (undo-tree-id26668 . -954) (undo-tree-id26669 . -954) (undo-tree-id26670 . -954) (undo-tree-id26671 . -954) (undo-tree-id26672 . -954) (undo-tree-id26673 . -954) (undo-tree-id26674 . -954) (undo-tree-id26675 . -954) (undo-tree-id26676 . -954) (undo-tree-id26677 . -954) (undo-tree-id26678 . -954) (undo-tree-id26679 . -954) (undo-tree-id26680 . -954) (undo-tree-id26681 . -954) (undo-tree-id26682 . -954) (undo-tree-id26683 . -954) (undo-tree-id26684 . -954) (undo-tree-id26685 . -954) (undo-tree-id26686 . -954) (undo-tree-id26687 . -954) (undo-tree-id26688 . -954) (undo-tree-id26689 . -954) (undo-tree-id26690 . -954) (undo-tree-id26691 . -954) (undo-tree-id26692 . -954) (undo-tree-id26693 . -954) (undo-tree-id26694 . -954) (undo-tree-id26695 . -954) (undo-tree-id26696 . -954) (undo-tree-id26697 . -954) (undo-tree-id26698 . -954) (undo-tree-id26699 . -954) (undo-tree-id26700 . -954) (undo-tree-id26701 . -954) (undo-tree-id26702 . -954) (undo-tree-id26703 . -954) (undo-tree-id26704 . -954) (undo-tree-id26705 . -954) (undo-tree-id26706 . -954) (undo-tree-id26707 . -954) (undo-tree-id26708 . -954) (undo-tree-id26709 . -960) (undo-tree-id26710 . -960) (undo-tree-id26711 . -960) (undo-tree-id26712 . -960) (undo-tree-id26713 . -960) (undo-tree-id26714 . -960) (undo-tree-id26715 . -960) (undo-tree-id26716 . -960) (undo-tree-id26717 . -960) (undo-tree-id26718 . -960) (undo-tree-id26719 . -960) (undo-tree-id26720 . -960) (undo-tree-id26721 . -960) (undo-tree-id26722 . -960) (undo-tree-id26723 . -960) (undo-tree-id26724 . -960) (undo-tree-id26725 . -960) (undo-tree-id26726 . -960) (undo-tree-id26727 . -960) (undo-tree-id26728 . -960) (undo-tree-id26729 . -960) (undo-tree-id26730 . -964) (undo-tree-id26731 . -964) (undo-tree-id26732 . -964) (undo-tree-id26733 . -964) (undo-tree-id26734 . -964) (undo-tree-id26735 . -964) (undo-tree-id26736 . -964) (undo-tree-id26737 . -964) (undo-tree-id26738 . -964) (undo-tree-id26739 . -964) (undo-tree-id26740 . -964) (undo-tree-id26741 . -964) (undo-tree-id26742 . -964) (undo-tree-id26743 . -964) (undo-tree-id26744 . -964) (undo-tree-id26745 . -964) (undo-tree-id26746 . -969) (undo-tree-id26747 . -969) (undo-tree-id26748 . -969) (undo-tree-id26749 . -969) (undo-tree-id26750 . -969) (undo-tree-id26751 . -969) (undo-tree-id26752 . -969) (undo-tree-id26753 . -969) (undo-tree-id26754 . -969) (undo-tree-id26755 . -969) (undo-tree-id26756 . -969) (undo-tree-id26757 . -969) (undo-tree-id26758 . -969) (undo-tree-id26759 . -969) (undo-tree-id26760 . -969) (undo-tree-id26761 . -969) (undo-tree-id26762 . -972) (undo-tree-id26763 . -972) (undo-tree-id26764 . -972) (undo-tree-id26765 . -972) (undo-tree-id26766 . -972) (undo-tree-id26767 . -972) (undo-tree-id26768 . -972) (undo-tree-id26769 . -972) (undo-tree-id26770 . -972) (undo-tree-id26771 . -972) (undo-tree-id26772 . -972) (undo-tree-id26773 . -972) (undo-tree-id26774 . -972) (undo-tree-id26775 . -972) (undo-tree-id26776 . -972) (undo-tree-id26777 . -972) (undo-tree-id26778 . -981) (undo-tree-id26779 . -981) (undo-tree-id26780 . -981) (undo-tree-id26781 . -981) (undo-tree-id26782 . -981) (undo-tree-id26783 . -981) (undo-tree-id26784 . -981) (undo-tree-id26785 . -981) (undo-tree-id26786 . -981) (undo-tree-id26787 . -981) (undo-tree-id26788 . -981) (undo-tree-id26789 . -981) (undo-tree-id26790 . -981) (undo-tree-id26791 . -981) (undo-tree-id26792 . -981) (undo-tree-id26793 . -981) (undo-tree-id26794 . -985) (undo-tree-id26795 . -985) (undo-tree-id26796 . -985) (undo-tree-id26797 . -985) (undo-tree-id26798 . -985) (undo-tree-id26799 . -985) (undo-tree-id26800 . -985) (undo-tree-id26801 . -985) (undo-tree-id26802 . -985) (undo-tree-id26803 . -985) (undo-tree-id26804 . -985) (undo-tree-id26805 . -985) (undo-tree-id26806 . -985) (undo-tree-id26807 . -985) (undo-tree-id26808 . -985) (undo-tree-id26809 . -985) (undo-tree-id26810 . -995) (undo-tree-id26811 . -995) (undo-tree-id26812 . -995) (undo-tree-id26813 . -995) (undo-tree-id26814 . -995) (undo-tree-id26815 . -995) (undo-tree-id26816 . -995) (undo-tree-id26817 . -995) (undo-tree-id26818 . -995) (undo-tree-id26819 . -995) (undo-tree-id26820 . -995) (undo-tree-id26821 . -995) (undo-tree-id26822 . -995) (undo-tree-id26823 . -995) (undo-tree-id26824 . -995) (undo-tree-id26825 . -995) (undo-tree-id26826 . -1002) (undo-tree-id26827 . -1002) (undo-tree-id26828 . -1002) (undo-tree-id26829 . -1002) (undo-tree-id26830 . -1002) (undo-tree-id26831 . -1002) (undo-tree-id26832 . -1002) (undo-tree-id26833 . -1002) (undo-tree-id26834 . -1002) (undo-tree-id26835 . -1002) (undo-tree-id26836 . -1002) (undo-tree-id26837 . -1002) (undo-tree-id26838 . -1002) (undo-tree-id26839 . -1002) (undo-tree-id26840 . -1002) (undo-tree-id26841 . -1002) (undo-tree-id26842 . -1002) (undo-tree-id26843 . -1002) (undo-tree-id26844 . -1002) (undo-tree-id26845 . -1002) (undo-tree-id26846 . -1002) (undo-tree-id26847 . -1002) (undo-tree-id26848 . -1002) (undo-tree-id26849 . -1002) (undo-tree-id26850 . -1002) (undo-tree-id26851 . -1002) (undo-tree-id26852 . -1002) (undo-tree-id26853 . -1002) (undo-tree-id26854 . -1002) (undo-tree-id26855 . -1002) (undo-tree-id26856 . -1002) (undo-tree-id26857 . -1003) (undo-tree-id26858 . -1003) (undo-tree-id26859 . -1003) (undo-tree-id26860 . -1003) (undo-tree-id26861 . -1003) (undo-tree-id26862 . -1003) (undo-tree-id26863 . -1003) (undo-tree-id26864 . -1003) (undo-tree-id26865 . -1003) (undo-tree-id26866 . -1003) (undo-tree-id26867 . -1003) (undo-tree-id26868 . -1003) (undo-tree-id26869 . -1003) (undo-tree-id26870 . -1003) (undo-tree-id26871 . -1003) (undo-tree-id26872 . -1003) (undo-tree-id26873 . -1003) (undo-tree-id26874 . -1003) (undo-tree-id26875 . -1003) (undo-tree-id26876 . -1003) (undo-tree-id26877 . -1003) (undo-tree-id26878 . -1003) (undo-tree-id26879 . -1003) (undo-tree-id26880 . -1003) (undo-tree-id26881 . -1003) (undo-tree-id26882 . -1003) (undo-tree-id26883 . -1003) (undo-tree-id26884 . -1003) (undo-tree-id26885 . -1003) (undo-tree-id26886 . -1003) (undo-tree-id26887 . -1003) (undo-tree-id26888 . -1003) (undo-tree-id26889 . -1003) (undo-tree-id26890 . -1003) (undo-tree-id26891 . -1003) (undo-tree-id26892 . -1003) (undo-tree-id26893 . -1003) (undo-tree-id26894 . -1003) (undo-tree-id26895 . -1003) (undo-tree-id26896 . -1003) (undo-tree-id26897 . -849) (2555 . 3404) (#(" 𝑜𝑜 (𝑖𝑖𝑖 for target word 𝑦𝑦 (𝑖𝑖𝑖 at time i. Note that the sequence vector 𝒚𝒚 refers to the sequence vector representing the correct translation of input sequence 𝒙𝒙 that is available during training. During training, the true label (word) 𝑦𝑦 (𝑖𝑖𝑖 is fed into the next state 𝑠𝑠 (𝑖𝑖𝑖𝑖𝑖; since this true label information is not available for prediction (inference), we feed the predicted output 𝑜𝑜 (𝑖𝑖𝑖 instead, as depicted in the previous figure. To summarize what we have just discussed above, the attention-based RNN consists of two RNNs. RNN #1 prepares context vectors from the input sequence elements, and RNN #2 receives the context vectors as input. The context vectors are computed via a weighted sum over the inputs, where the weights are the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 .The next subsection discusses how we compute these attention weights." 0 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 12 13 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 13 119 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 119 120 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 120 225 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 225 226 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 226 284 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 284 296 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 296 298 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 298 301 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 301 305 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 305 310 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 310 311 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 311 312 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 312 313 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 313 314 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 314 315 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 315 316 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 316 317 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 317 318 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 318 319 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 319 320 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 320 321 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 321 322 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 322 323 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 323 324 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 324 325 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 325 326 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 326 327 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 327 328 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 328 329 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 329 330 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 330 331 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 331 332 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 332 333 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 333 334 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 334 335 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 335 336 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 336 337 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 337 338 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 338 339 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 339 340 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 340 341 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 341 342 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 342 343 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 343 344 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 344 345 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 345 346 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 346 445 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 445 446 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 446 543 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 543 544 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 544 645 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 645 646 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 646 742 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 742 743 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 743 845 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 845 846 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2709) (undo-tree-id26898 . 306) (undo-tree-id26899 . -543) (undo-tree-id26900 . -845) (undo-tree-id26901 . -645) (undo-tree-id26902 . -742)) nil (25774 27047 202628 320000) 0 nil])
([nil nil ((#("𝑜𝑜 " 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2713) (undo-tree-id26111 . 3) (undo-tree-id26112 . -2) (undo-tree-id26113 . -3)) nil (25774 27047 201413 804000) 0 nil])
([nil nil ((#("(" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2713) (undo-tree-id26107 . 1) (undo-tree-id26108 . 1) (undo-tree-id26109 . -1) (undo-tree-id26110 . -1)) nil (25774 27047 201410 430000) 0 nil])
([nil nil ((#("𝑖𝑖𝑖 " 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2713) (undo-tree-id26078 . 4) (undo-tree-id26079 . -3) (undo-tree-id26080 . -4) (undo-tree-id26081 . -4) (undo-tree-id26082 . -4) (undo-tree-id26083 . -4) (undo-tree-id26084 . -4) (undo-tree-id26085 . -4) (undo-tree-id26086 . -4) (undo-tree-id26087 . -4) (undo-tree-id26088 . -4) (undo-tree-id26089 . -4) (undo-tree-id26090 . -4) (undo-tree-id26091 . -4) (undo-tree-id26092 . -4) (undo-tree-id26093 . -4) (undo-tree-id26094 . -4) (undo-tree-id26095 . -4) (undo-tree-id26096 . -4) (undo-tree-id26097 . -4) (undo-tree-id26098 . -4) (undo-tree-id26099 . -4) (undo-tree-id26100 . -4) (undo-tree-id26101 . -4) (undo-tree-id26102 . -4) (undo-tree-id26103 . -4) (undo-tree-id26104 . -4) (undo-tree-id26105 . -4) (undo-tree-id26106 . -4)) nil (25774 27047 201406 330000) 0 nil])
([nil nil ((#("for target word" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 3 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 4 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2713) (undo-tree-id26001 . 15) (undo-tree-id26002 . -14) (undo-tree-id26003 . -14) (undo-tree-id26004 . -14) (undo-tree-id26005 . -14) (undo-tree-id26006 . -15) (undo-tree-id26007 . -14) (undo-tree-id26008 . -2) (undo-tree-id26009 . -2) (undo-tree-id26010 . -2) (undo-tree-id26011 . -2) (undo-tree-id26012 . -2) (undo-tree-id26013 . -2) (undo-tree-id26014 . -2) (undo-tree-id26015 . -2) (undo-tree-id26016 . -2) (undo-tree-id26017 . -2) (undo-tree-id26018 . -2) (undo-tree-id26019 . -2) (undo-tree-id26020 . -2) (undo-tree-id26021 . -2) (undo-tree-id26022 . -2) (undo-tree-id26023 . -2) (undo-tree-id26024 . -2) (undo-tree-id26025 . -2) (undo-tree-id26026 . -2) (undo-tree-id26027 . -2) (undo-tree-id26028 . -2) (undo-tree-id26029 . -9) (undo-tree-id26030 . -9) (undo-tree-id26031 . -9) (undo-tree-id26032 . -9) (undo-tree-id26033 . -9) (undo-tree-id26034 . -9) (undo-tree-id26035 . -9) (undo-tree-id26036 . -9) (undo-tree-id26037 . -9) (undo-tree-id26038 . -9) (undo-tree-id26039 . -9) (undo-tree-id26040 . -9) (undo-tree-id26041 . -9) (undo-tree-id26042 . -9) (undo-tree-id26043 . -9) (undo-tree-id26044 . -9) (undo-tree-id26045 . -9) (undo-tree-id26046 . -9) (undo-tree-id26047 . -9) (undo-tree-id26048 . -9) (undo-tree-id26049 . -9) (undo-tree-id26050 . -14) (undo-tree-id26051 . -14) (undo-tree-id26052 . -14) (undo-tree-id26053 . -14) (undo-tree-id26054 . -14) (undo-tree-id26055 . -14) (undo-tree-id26056 . -14) (undo-tree-id26057 . -14) (undo-tree-id26058 . -14) (undo-tree-id26059 . -14) (undo-tree-id26060 . -14) (undo-tree-id26061 . -14) (undo-tree-id26062 . -14) (undo-tree-id26063 . -14) (undo-tree-id26064 . -14) (undo-tree-id26065 . -14) (undo-tree-id26066 . -14) (undo-tree-id26067 . -14) (undo-tree-id26068 . -14) (undo-tree-id26069 . -14) (undo-tree-id26070 . -14) (undo-tree-id26071 . -14) (undo-tree-id26072 . -14) (undo-tree-id26073 . -14) (undo-tree-id26074 . -14) (undo-tree-id26075 . -14) (undo-tree-id26076 . -14) (undo-tree-id26077 . -15) 2727) nil (25774 27047 203184 519000) 0 nil])
([nil nil ((2709 . 2710)) nil (25774 27055 88635 288000) 0 nil] [nil nil ((nil rear-nonsticky nil 2723 . 2724) (nil fontified nil 2709 . 2724) (2709 . 2724) 2708) ((#("for target word" 0 14 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 14 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil rear-nonsticky nil)) . 2709) (undo-tree-id27091 . -14) (undo-tree-id27092 . -14) (undo-tree-id27093 . -14) (undo-tree-id27094 . -14) (nil rear-nonsticky t 2723 . 2724)) (25774 27047 201309 977000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2724 . 2725) (nil fontified nil 2710 . 2725) (2710 . 2725) 2709) nil (25774 27055 88633 599000) 0 nil])
nil
([nil nil ((#("𝑦𝑦 (𝑖𝑖𝑖 at time i" 0 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2730) (undo-tree-id27097 . -16) (undo-tree-id27098 . -17)) nil (25774 27055 88630 938000) 0 nil])
([nil nil ((#(". " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2730) (undo-tree-id27095 . -1) (undo-tree-id27096 . -2)) nil (25774 27055 88625 96000) 0 nil])
([nil nil ((3532 . 3533)) nil (25774 27055 88572 730000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -3532) (undo-tree-id27154 . -1) (undo-tree-id27155 . -1) (undo-tree-id27156 . -1) 2730 (t 25774 27055 117568 933000)) nil (25774 27059 914586 949000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2729) (undo-tree-id27099 . 1) (undo-tree-id27100 . -1) (undo-tree-id27101 . -1) (undo-tree-id27102 . -1) (undo-tree-id27103 . -1) (undo-tree-id27104 . -1) (undo-tree-id27105 . -1) (undo-tree-id27106 . -1) (undo-tree-id27107 . -1) (undo-tree-id27108 . -1) (undo-tree-id27109 . -1) (undo-tree-id27110 . -1) (undo-tree-id27111 . -1) (undo-tree-id27112 . -1) (undo-tree-id27113 . -1) (undo-tree-id27114 . -1) (undo-tree-id27115 . -1) (undo-tree-id27116 . -1) (undo-tree-id27117 . -1) (undo-tree-id27118 . -1) (undo-tree-id27119 . -1) (undo-tree-id27120 . -1) (undo-tree-id27121 . -1) (undo-tree-id27122 . -1) (undo-tree-id27123 . -1) (undo-tree-id27124 . -1) (undo-tree-id27125 . -1) (undo-tree-id27126 . -1) (undo-tree-id27127 . -1) (undo-tree-id27128 . -1) (undo-tree-id27129 . -1) (undo-tree-id27130 . -1) (undo-tree-id27131 . -1) (undo-tree-id27132 . -1) (undo-tree-id27133 . -1) (undo-tree-id27134 . -1) (undo-tree-id27135 . -1) (undo-tree-id27136 . -1) (undo-tree-id27137 . -1) (undo-tree-id27138 . -1) (undo-tree-id27139 . -1) (undo-tree-id27140 . -1) (undo-tree-id27141 . -1) (undo-tree-id27142 . -1) (undo-tree-id27143 . -1) (undo-tree-id27144 . -1) (undo-tree-id27145 . -1) (undo-tree-id27146 . -1) (undo-tree-id27147 . -1) (undo-tree-id27148 . -1) (undo-tree-id27149 . -1) (undo-tree-id27150 . -1) (undo-tree-id27151 . -1) (undo-tree-id27152 . -1) (undo-tree-id27153 . -1)) nil (25774 27059 914579 653000) 0 nil])
([nil nil ((3531 . 3532)) nil (25774 27059 914527 413000) 0 nil])
([nil nil ((#("Note that the sequence vector 𝒚𝒚 refers to the sequence vector representing the correct translation of input sequence 𝒙𝒙 that is available during training" 0 75 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 75 76 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 76 154 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2729) (undo-tree-id27160 . -153) (undo-tree-id27161 . 154) (undo-tree-id27162 . -29) (undo-tree-id27163 . -154) (t 25774 27059 945655 496000)) nil (25774 27088 769583 797000) 0 nil])
([nil nil ((#(". " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2729) (undo-tree-id27157 . -1) (undo-tree-id27158 . 2) (undo-tree-id27159 . -2)) nil (25774 27088 769576 531000) 0 nil])
([nil nil ((#("𝑦𝑦 (𝑖𝑖𝑖 " 0 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2768) (undo-tree-id27164 . -7) (undo-tree-id27165 . -7) (undo-tree-id27166 . -7) (undo-tree-id27167 . -7) (undo-tree-id27168 . -1) (undo-tree-id27169 . -1) (undo-tree-id27170 . -1) (undo-tree-id27171 . -1) (undo-tree-id27172 . -1) (undo-tree-id27173 . -1) (undo-tree-id27174 . -1) (undo-tree-id27175 . -1) (undo-tree-id27176 . -1) (undo-tree-id27177 . -1) (undo-tree-id27178 . -1) (undo-tree-id27179 . -1) (undo-tree-id27180 . -1) (undo-tree-id27181 . -1) (undo-tree-id27182 . -1) (undo-tree-id27183 . -1) (undo-tree-id27184 . -1) (undo-tree-id27185 . -1) (undo-tree-id27186 . -1) (undo-tree-id27187 . -1) (undo-tree-id27188 . -1) (undo-tree-id27189 . -1) (undo-tree-id27190 . -1) (undo-tree-id27191 . -1) (undo-tree-id27192 . -1) (undo-tree-id27193 . -1) (undo-tree-id27194 . -8) (undo-tree-id27195 . -7) (undo-tree-id27196 . -1) (undo-tree-id27197 . -1) (undo-tree-id27198 . -1) (undo-tree-id27199 . -1) (undo-tree-id27200 . -1) (undo-tree-id27201 . -1) (undo-tree-id27202 . -1) (undo-tree-id27203 . -1) (undo-tree-id27204 . -1) (undo-tree-id27205 . -1) (undo-tree-id27206 . -1) (undo-tree-id27207 . -1) (undo-tree-id27208 . -1) (undo-tree-id27209 . -1) (undo-tree-id27210 . -1) (undo-tree-id27211 . -1) (undo-tree-id27212 . -1) (undo-tree-id27213 . -1) (undo-tree-id27214 . -1) (undo-tree-id27215 . -1) (undo-tree-id27216 . -1) (undo-tree-id27217 . -3) (undo-tree-id27218 . -3) (undo-tree-id27219 . -3) (undo-tree-id27220 . -3) (undo-tree-id27221 . -3) (undo-tree-id27222 . -3) (undo-tree-id27223 . -3) (undo-tree-id27224 . -3) (undo-tree-id27225 . -3) (undo-tree-id27226 . -3) (undo-tree-id27227 . -3) (undo-tree-id27228 . -3) (undo-tree-id27229 . -3) (undo-tree-id27230 . -3) (undo-tree-id27231 . -3) (undo-tree-id27232 . -3) (undo-tree-id27233 . -3) (undo-tree-id27234 . -3) (undo-tree-id27235 . -3) (undo-tree-id27236 . -3) (undo-tree-id27237 . -3) (undo-tree-id27238 . -6) (undo-tree-id27239 . -6) (undo-tree-id27240 . -6) (undo-tree-id27241 . -6) (undo-tree-id27242 . -6) (undo-tree-id27243 . -6) (undo-tree-id27244 . -6) (undo-tree-id27245 . -6) (undo-tree-id27246 . -6) (undo-tree-id27247 . -6) (undo-tree-id27248 . -6) (undo-tree-id27249 . -6) (undo-tree-id27250 . -6) (undo-tree-id27251 . -6) (undo-tree-id27252 . -6) (undo-tree-id27253 . -6) (undo-tree-id27254 . -6) (undo-tree-id27255 . -6) (undo-tree-id27256 . -6) (undo-tree-id27257 . -6) (undo-tree-id27258 . -6) (undo-tree-id27259 . -6) (undo-tree-id27260 . -6) (undo-tree-id27261 . -6) (undo-tree-id27262 . -6) (undo-tree-id27263 . -6) (undo-tree-id27264 . -6) (undo-tree-id27265 . -6) (undo-tree-id27266 . -6) (undo-tree-id27267 . -6) (undo-tree-id27268 . -6) (undo-tree-id27269 . -7) (undo-tree-id27270 . -7) (undo-tree-id27271 . -7) (undo-tree-id27272 . -7) (undo-tree-id27273 . -7) (undo-tree-id27274 . -7) (undo-tree-id27275 . -7) (undo-tree-id27276 . -7) (undo-tree-id27277 . -7) (undo-tree-id27278 . -7) (undo-tree-id27279 . -7) (undo-tree-id27280 . -7) (undo-tree-id27281 . -7) (undo-tree-id27282 . -7) (undo-tree-id27283 . -7) (undo-tree-id27284 . -7) (undo-tree-id27285 . -7) (undo-tree-id27286 . -7) (undo-tree-id27287 . -7) (undo-tree-id27288 . -7) (undo-tree-id27289 . -7) (undo-tree-id27290 . -7) (undo-tree-id27291 . -7) (undo-tree-id27292 . -7) (undo-tree-id27293 . -7) (undo-tree-id27294 . -7) (undo-tree-id27295 . -7) (undo-tree-id27296 . -8) 2775 (t 25774 27088 802177 708000)) nil (25774 27097 269777 362000) 0 nil])
([nil nil ((#("𝑠𝑠 " 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2795) (undo-tree-id27451 . -2) (undo-tree-id27452 . -1) (undo-tree-id27453 . -1) (undo-tree-id27454 . -1) (undo-tree-id27455 . -1) (undo-tree-id27456 . -1) (undo-tree-id27457 . -1) (undo-tree-id27458 . -1) (undo-tree-id27459 . -1) (undo-tree-id27460 . -1) (undo-tree-id27461 . -1) (undo-tree-id27462 . -1) (undo-tree-id27463 . -1) (undo-tree-id27464 . -1) (undo-tree-id27465 . -1) (undo-tree-id27466 . -1) (undo-tree-id27467 . -1) (undo-tree-id27468 . -1) (undo-tree-id27469 . -1) (undo-tree-id27470 . -1) (undo-tree-id27471 . -1) (undo-tree-id27472 . -1) (undo-tree-id27473 . -1) (undo-tree-id27474 . -1) (undo-tree-id27475 . -1) (undo-tree-id27476 . -1) (undo-tree-id27477 . -1) (undo-tree-id27478 . -3) (t 25774 27097 302333 78000)) nil (25774 27106 28365 359000) 0 nil])
([nil nil ((#("(" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2795) (undo-tree-id27448 . 1) (undo-tree-id27449 . -1) (undo-tree-id27450 . -1)) nil (25774 27106 28336 32000) 0 nil])
([nil nil ((#("𝑖𝑖𝑖𝑖𝑖" 0 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2795) (undo-tree-id27446 . -4) (undo-tree-id27447 . -5)) nil (25774 27106 28100 839000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2794) (undo-tree-id27297 . -1) (undo-tree-id27298 . -1) (undo-tree-id27299 . -1) (undo-tree-id27300 . -1) (undo-tree-id27301 . -1) (undo-tree-id27302 . -1) (undo-tree-id27303 . -1) (undo-tree-id27304 . -1) (undo-tree-id27305 . -1) (undo-tree-id27306 . -1) (undo-tree-id27307 . -1) (undo-tree-id27308 . -1) (undo-tree-id27309 . -1) (undo-tree-id27310 . -1) (undo-tree-id27311 . -1) (undo-tree-id27312 . -1) (undo-tree-id27313 . -1) (undo-tree-id27314 . -1) (undo-tree-id27315 . -1) (undo-tree-id27316 . -1) (undo-tree-id27317 . -1) (undo-tree-id27318 . -1) (undo-tree-id27319 . -1) (undo-tree-id27320 . -1) (undo-tree-id27321 . -1) (undo-tree-id27322 . -1) (undo-tree-id27323 . -1) (undo-tree-id27324 . -1) (undo-tree-id27325 . -1) (undo-tree-id27326 . -1) (undo-tree-id27327 . -1) (undo-tree-id27328 . -1) (undo-tree-id27329 . -1) (undo-tree-id27330 . -1) (undo-tree-id27331 . -1) (undo-tree-id27332 . -1) (undo-tree-id27333 . -1) (undo-tree-id27334 . -1) (undo-tree-id27335 . -1) (undo-tree-id27336 . -1) (undo-tree-id27337 . -1) (undo-tree-id27338 . -1) (undo-tree-id27339 . -1) (undo-tree-id27340 . -1) (undo-tree-id27341 . -1) (undo-tree-id27342 . -1) (undo-tree-id27343 . -1) (undo-tree-id27344 . -1) (undo-tree-id27345 . -1) (undo-tree-id27346 . -1) (undo-tree-id27347 . -1) (undo-tree-id27348 . -1) (undo-tree-id27349 . -1) (undo-tree-id27350 . -1) (undo-tree-id27351 . -1) (undo-tree-id27352 . -1) (undo-tree-id27353 . -1) (undo-tree-id27354 . -1) (undo-tree-id27355 . -1) (undo-tree-id27356 . -1) (undo-tree-id27357 . -1) (undo-tree-id27358 . -1) (undo-tree-id27359 . -1) (undo-tree-id27360 . -1) (undo-tree-id27361 . -1) (undo-tree-id27362 . -1) (undo-tree-id27363 . -1) (undo-tree-id27364 . -1) (undo-tree-id27365 . -1) (undo-tree-id27366 . -1) (undo-tree-id27367 . -1) (undo-tree-id27368 . -1) (undo-tree-id27369 . -1) (undo-tree-id27370 . -1) (undo-tree-id27371 . -1) (undo-tree-id27372 . -1) (undo-tree-id27373 . -1) (undo-tree-id27374 . -1) (undo-tree-id27375 . -1) (undo-tree-id27376 . -1) (undo-tree-id27377 . -1) (undo-tree-id27378 . -1) (undo-tree-id27379 . -1) (undo-tree-id27380 . -1) (undo-tree-id27381 . -1) (undo-tree-id27382 . -1) (undo-tree-id27383 . -1) (undo-tree-id27384 . -1) (undo-tree-id27385 . -1) (undo-tree-id27386 . -1) (undo-tree-id27387 . -1) (undo-tree-id27388 . -1) (undo-tree-id27389 . -1) (undo-tree-id27390 . -1) (undo-tree-id27391 . -1) (undo-tree-id27392 . -1) (undo-tree-id27393 . -1) (undo-tree-id27394 . -1) (undo-tree-id27395 . -1) (undo-tree-id27396 . -1) (undo-tree-id27397 . -1) (undo-tree-id27398 . -1) (undo-tree-id27399 . -1) (undo-tree-id27400 . -1) (undo-tree-id27401 . -1) (undo-tree-id27402 . -1) (undo-tree-id27403 . -1) (undo-tree-id27404 . -1) (undo-tree-id27405 . -1) (undo-tree-id27406 . -1) (undo-tree-id27407 . -1) (undo-tree-id27408 . -1) (undo-tree-id27409 . -1) (undo-tree-id27410 . -1) (undo-tree-id27411 . -1) (undo-tree-id27412 . -1) (undo-tree-id27413 . -1) (undo-tree-id27414 . -1) (undo-tree-id27415 . -1) (undo-tree-id27416 . -1) (undo-tree-id27417 . -1) (undo-tree-id27418 . -1) (undo-tree-id27419 . -1) (undo-tree-id27420 . -1) (undo-tree-id27421 . -1) (undo-tree-id27422 . -1) (undo-tree-id27423 . -1) (undo-tree-id27424 . -1) (undo-tree-id27425 . -1) (undo-tree-id27426 . -1) (undo-tree-id27427 . -1) (undo-tree-id27428 . -1) (undo-tree-id27429 . -1) (undo-tree-id27430 . -1) (undo-tree-id27431 . -1) (undo-tree-id27432 . -1) (undo-tree-id27433 . -1) (undo-tree-id27434 . -1) (undo-tree-id27435 . -1) (undo-tree-id27436 . -1) (undo-tree-id27437 . -1) (undo-tree-id27438 . -1) (undo-tree-id27439 . -1) (undo-tree-id27440 . -1) (undo-tree-id27441 . -1) (undo-tree-id27442 . -1) (undo-tree-id27443 . -1) (undo-tree-id27444 . -1) (undo-tree-id27445 . -1)) nil (25774 27106 28090 840000) 0 nil])
([nil nil ((#("𝑜𝑜 (𝑖𝑖𝑖" 0 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2904) (undo-tree-id29407 . -6) (undo-tree-id29408 . -6) (undo-tree-id29409 . -6) (undo-tree-id29410 . -6) (undo-tree-id29411 . -1) (undo-tree-id29412 . -1) (undo-tree-id29413 . -1) (undo-tree-id29414 . -1) (undo-tree-id29415 . -1) (undo-tree-id29416 . -1) (undo-tree-id29417 . -1) (undo-tree-id29418 . -1) (undo-tree-id29419 . -1) (undo-tree-id29420 . -1) (undo-tree-id29421 . -1) (undo-tree-id29422 . -3) (undo-tree-id29423 . -3) (undo-tree-id29424 . -3) (undo-tree-id29425 . -3) (undo-tree-id29426 . -3) (undo-tree-id29427 . -3) (undo-tree-id29428 . -3) (undo-tree-id29429 . -3) (undo-tree-id29430 . -3) (undo-tree-id29431 . -3) (undo-tree-id29432 . -3) (undo-tree-id29433 . -6) (undo-tree-id29434 . -6) (undo-tree-id29435 . -6) (undo-tree-id29436 . -6) (undo-tree-id29437 . -6) (undo-tree-id29438 . -6) (undo-tree-id29439 . -6) (undo-tree-id29440 . -6) (undo-tree-id29441 . -6) (undo-tree-id29442 . -6) (undo-tree-id29443 . -6) (undo-tree-id29444 . -6) (undo-tree-id29445 . -6) (undo-tree-id29446 . -6) (undo-tree-id29447 . -6) (undo-tree-id29448 . -6) (undo-tree-id29449 . -6) (undo-tree-id29450 . -6) (undo-tree-id29451 . -6) (undo-tree-id29452 . -6) (undo-tree-id29453 . -6) (undo-tree-id29454 . -4) (undo-tree-id29455 . -4) (undo-tree-id29456 . -4) (undo-tree-id29457 . -4) (undo-tree-id29458 . -4) (undo-tree-id29459 . -4) (undo-tree-id29460 . -4) (undo-tree-id29461 . -4) (undo-tree-id29462 . -4) (undo-tree-id29463 . -4) (undo-tree-id29464 . -4) (undo-tree-id29465 . -4) (undo-tree-id29466 . -4) (undo-tree-id29467 . -4) (undo-tree-id29468 . -4) (undo-tree-id29469 . -4) (undo-tree-id29470 . -3) (undo-tree-id29471 . -3) (undo-tree-id29472 . -3) (undo-tree-id29473 . -3) (undo-tree-id29474 . -3) (undo-tree-id29475 . -3) (undo-tree-id29476 . -3) (undo-tree-id29477 . -3) (undo-tree-id29478 . -3) (undo-tree-id29479 . -3) (undo-tree-id29480 . -3) (undo-tree-id29481 . -3) (undo-tree-id29482 . -3) (undo-tree-id29483 . -3) (undo-tree-id29484 . -3) (undo-tree-id29485 . -3) (undo-tree-id29486 . -7) (undo-tree-id29487 . -6) (undo-tree-id29488 . -1) (undo-tree-id29489 . -1) (undo-tree-id29490 . -1) (undo-tree-id29491 . -1) (undo-tree-id29492 . -1) (undo-tree-id29493 . -1) (undo-tree-id29494 . -1) (undo-tree-id29495 . -1) (undo-tree-id29496 . -1) (undo-tree-id29497 . -1) (undo-tree-id29498 . -1) (undo-tree-id29499 . -1) (undo-tree-id29500 . -1) (undo-tree-id29501 . -1) (undo-tree-id29502 . -1) (undo-tree-id29503 . -1) (undo-tree-id29504 . -1) (undo-tree-id29505 . -1) (undo-tree-id29506 . -1) (undo-tree-id29507 . -1) (undo-tree-id29508 . -1) (undo-tree-id29509 . -3) (undo-tree-id29510 . -3) (undo-tree-id29511 . -3) (undo-tree-id29512 . -3) (undo-tree-id29513 . -3) (undo-tree-id29514 . -3) (undo-tree-id29515 . -3) (undo-tree-id29516 . -3) (undo-tree-id29517 . -3) (undo-tree-id29518 . -3) (undo-tree-id29519 . -3) (undo-tree-id29520 . -3) (undo-tree-id29521 . -3) (undo-tree-id29522 . -3) (undo-tree-id29523 . -3) (undo-tree-id29524 . -3) (undo-tree-id29525 . -3) (undo-tree-id29526 . -3) (undo-tree-id29527 . -3) (undo-tree-id29528 . -3) (undo-tree-id29529 . -3) (undo-tree-id29530 . -6) (undo-tree-id29531 . -6) (undo-tree-id29532 . -6) (undo-tree-id29533 . -6) (undo-tree-id29534 . -6) (undo-tree-id29535 . -6) (undo-tree-id29536 . -6) (undo-tree-id29537 . -6) (undo-tree-id29538 . -6) (undo-tree-id29539 . -6) (undo-tree-id29540 . -6) (undo-tree-id29541 . -6) (undo-tree-id29542 . -6) (undo-tree-id29543 . -6) (undo-tree-id29544 . -6) (undo-tree-id29545 . -6) (undo-tree-id29546 . -6) (undo-tree-id29547 . -6) (undo-tree-id29548 . -6) (undo-tree-id29549 . -6) (undo-tree-id29550 . -6) (undo-tree-id29551 . -6) (undo-tree-id29552 . -6) (undo-tree-id29553 . -6) (undo-tree-id29554 . -6) (undo-tree-id29555 . -6) (undo-tree-id29556 . -6) (undo-tree-id29557 . -7) 2910 (t 25774 27106 58493 837000)) nil (25774 27156 637127 645000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2904) (undo-tree-id29404 . 1) (undo-tree-id29405 . -1) (undo-tree-id29406 . -1)) nil (25774 27156 636863 692000) 0 nil])
([nil nil ((2727 . 3352) (#("- To summarize what we have just discussed above, the attention-based RNN consists of two RNNs. RNN #1 prepares context vectors from the input sequence elements, and RNN #2 receives the context vectors as input. The context vectors are computed via a weighted sum over the inputs, where the weights are the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 .The next subsection discusses how we compute these attention weights.

- During training, the true label (word) is fed into the next state; since this true label information is not available for prediction (inference), we feed the predicted output instead, as depicted in the previous figure." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 58 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 58 59 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 59 63 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 63 78 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 78 95 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 95 97 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 97 98 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 98 99 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 99 100 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 100 201 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 201 202 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 202 252 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 252 254 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 254 262 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 262 265 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 265 266 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 266 271 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 271 272 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 272 279 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 279 280 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 280 298 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 298 299 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 299 401 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 401 402 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 402 403 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 403 404 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 404 405 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 405 406 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 406 431 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 431 432 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 432 472 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 472 484 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 484 486 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 486 489 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 489 493 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 493 498 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 498 499 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 499 500 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 500 501 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 501 502 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 502 503 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 503 504 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 504 505 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 505 506 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 506 507 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 507 508 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 508 509 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 509 510 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 510 511 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 511 512 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 512 513 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 513 514 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 514 515 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 515 516 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 516 517 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 517 518 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 518 519 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 519 520 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 520 521 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 521 522 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 522 523 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 523 524 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 524 525 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 525 526 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 526 527 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 527 528 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 528 529 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 529 530 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 530 531 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 531 532 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 532 533 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 533 534 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 534 625 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2727) (undo-tree-id28347 . 73) (undo-tree-id28348 . -581) (undo-tree-id28349 . -581) (undo-tree-id28350 . -581) (undo-tree-id28351 . -581) (undo-tree-id28352 . 44) (undo-tree-id28353 . -581) (undo-tree-id28354 . -581) (undo-tree-id28355 . -406) (undo-tree-id28356 . -406) (undo-tree-id28357 . -406) (undo-tree-id28358 . -625) (undo-tree-id28359 . -471) (undo-tree-id28360 . -471) (undo-tree-id28361 . -471) (undo-tree-id28362 . -471) (undo-tree-id28363 . -471) (undo-tree-id28364 . -471) (undo-tree-id28365 . -471) (undo-tree-id28366 . -471) (undo-tree-id28367 . -471) (undo-tree-id28368 . -471) (undo-tree-id28369 . -471) (undo-tree-id28370 . -471) (undo-tree-id28371 . -471) (undo-tree-id28372 . -471) (undo-tree-id28373 . -471) (undo-tree-id28374 . -471) (undo-tree-id28375 . -471) (undo-tree-id28376 . -471) (undo-tree-id28377 . -471) (undo-tree-id28378 . -471) (undo-tree-id28379 . -471) (undo-tree-id28380 . -471) (undo-tree-id28381 . -471) (undo-tree-id28382 . -471) (undo-tree-id28383 . -471) (undo-tree-id28384 . -471) (undo-tree-id28385 . -471) (undo-tree-id28386 . -471) (undo-tree-id28387 . -471) (undo-tree-id28388 . -471) (undo-tree-id28389 . -471) (undo-tree-id28390 . -471) (undo-tree-id28391 . -471) (undo-tree-id28392 . -471) (undo-tree-id28393 . -471) (undo-tree-id28394 . -471) (undo-tree-id28395 . -471) (undo-tree-id28396 . -471) (undo-tree-id28397 . -471) (undo-tree-id28398 . -471) (undo-tree-id28399 . -471) (undo-tree-id28400 . -471) (undo-tree-id28401 . -471) (undo-tree-id28402 . -471) (undo-tree-id28403 . -471) (undo-tree-id28404 . -471) (undo-tree-id28405 . -471) (undo-tree-id28406 . -471) (undo-tree-id28407 . -471) (undo-tree-id28408 . -471) (undo-tree-id28409 . -471) (undo-tree-id28410 . -471) (undo-tree-id28411 . -471) (undo-tree-id28412 . -471) (undo-tree-id28413 . -471) (undo-tree-id28414 . -471) (undo-tree-id28415 . -471) (undo-tree-id28416 . -471) (undo-tree-id28417 . -471) (undo-tree-id28418 . -471) (undo-tree-id28419 . -471) (undo-tree-id28420 . -471) (undo-tree-id28421 . -471) (undo-tree-id28422 . -471) (undo-tree-id28423 . -471) (undo-tree-id28424 . -471) (undo-tree-id28425 . -471) (undo-tree-id28426 . -471) (undo-tree-id28427 . -471) (undo-tree-id28428 . -471) (undo-tree-id28429 . -471) (undo-tree-id28430 . -471) (undo-tree-id28431 . -471) (undo-tree-id28432 . -471) (undo-tree-id28433 . -471) (undo-tree-id28434 . -471) (undo-tree-id28435 . -471) (undo-tree-id28436 . -471) (undo-tree-id28437 . -471) (undo-tree-id28438 . -471) (undo-tree-id28439 . -471) (undo-tree-id28440 . -471) (undo-tree-id28441 . -471) (undo-tree-id28442 . -471) (undo-tree-id28443 . -471) (undo-tree-id28444 . -471) (undo-tree-id28445 . -471) (undo-tree-id28446 . -471) (undo-tree-id28447 . -471) (undo-tree-id28448 . -471) (undo-tree-id28449 . -471) (undo-tree-id28450 . -471) (undo-tree-id28451 . -471) (undo-tree-id28452 . -471) (undo-tree-id28453 . -471) (undo-tree-id28454 . -471) (undo-tree-id28455 . -471) (undo-tree-id28456 . -471) (undo-tree-id28457 . -471) (undo-tree-id28458 . -471) (undo-tree-id28459 . -471) (undo-tree-id28460 . -471) (undo-tree-id28461 . -471) (undo-tree-id28462 . -471) (undo-tree-id28463 . -471) (undo-tree-id28464 . -471) (undo-tree-id28465 . -471) (undo-tree-id28466 . -471) (undo-tree-id28467 . -471) (undo-tree-id28468 . -471) (undo-tree-id28469 . -471) (undo-tree-id28470 . -471) (undo-tree-id28471 . -471) (undo-tree-id28472 . -471) (undo-tree-id28473 . -471) (undo-tree-id28474 . -471) (undo-tree-id28475 . -471) (undo-tree-id28476 . -471) (undo-tree-id28477 . -471) (undo-tree-id28478 . -471) (undo-tree-id28479 . -471) (undo-tree-id28480 . -471) (undo-tree-id28481 . -471) (undo-tree-id28482 . -471) (undo-tree-id28483 . -471) (undo-tree-id28484 . -471) (undo-tree-id28485 . -471) (undo-tree-id28486 . -471) (undo-tree-id28487 . -471) (undo-tree-id28488 . -471) (undo-tree-id28489 . -471) (undo-tree-id28490 . -471) (undo-tree-id28491 . -471) (undo-tree-id28492 . -471) (undo-tree-id28493 . -471) (undo-tree-id28494 . -471) (undo-tree-id28495 . -471) (undo-tree-id28496 . -471) (undo-tree-id28497 . -471) (undo-tree-id28498 . -471) (undo-tree-id28499 . -471) (undo-tree-id28500 . -471) (undo-tree-id28501 . -471) (undo-tree-id28502 . -471) (undo-tree-id28503 . -471) (undo-tree-id28504 . -471) (undo-tree-id28505 . -471) (undo-tree-id28506 . -471) (undo-tree-id28507 . -625) (undo-tree-id28508 . -471) (undo-tree-id28509 . -471) (undo-tree-id28510 . -471) (undo-tree-id28511 . -471) (undo-tree-id28512 . -471) (undo-tree-id28513 . -471) (undo-tree-id28514 . -471) (undo-tree-id28515 . -471) (undo-tree-id28516 . -471) (undo-tree-id28517 . -471) (undo-tree-id28518 . -471) (undo-tree-id28519 . -471) (undo-tree-id28520 . -471) (undo-tree-id28521 . -471) (undo-tree-id28522 . -471) (undo-tree-id28523 . -471) (undo-tree-id28524 . -471) (undo-tree-id28525 . -471) (undo-tree-id28526 . -471) (undo-tree-id28527 . -471) (undo-tree-id28528 . -471) (undo-tree-id28529 . -471) (undo-tree-id28530 . -471) (undo-tree-id28531 . -471) (undo-tree-id28532 . -471) (undo-tree-id28533 . -471) (undo-tree-id28534 . -471) (undo-tree-id28535 . -471) (undo-tree-id28536 . -471) (undo-tree-id28537 . -471) (undo-tree-id28538 . -471) (undo-tree-id28539 . -471) (undo-tree-id28540 . -471) (undo-tree-id28541 . -471) (undo-tree-id28542 . -477) (undo-tree-id28543 . -477) (undo-tree-id28544 . -477) (undo-tree-id28545 . -477) (undo-tree-id28546 . -477) (undo-tree-id28547 . -477) (undo-tree-id28548 . -477) (undo-tree-id28549 . -477) (undo-tree-id28550 . -477) (undo-tree-id28551 . -477) (undo-tree-id28552 . -477) (undo-tree-id28553 . -477) (undo-tree-id28554 . -477) (undo-tree-id28555 . -477) (undo-tree-id28556 . -477) (undo-tree-id28557 . -477) (undo-tree-id28558 . -477) (undo-tree-id28559 . -477) (undo-tree-id28560 . -477) (undo-tree-id28561 . -477) (undo-tree-id28562 . -477) (undo-tree-id28563 . -477) (undo-tree-id28564 . -477) (undo-tree-id28565 . -477) (undo-tree-id28566 . -477) (undo-tree-id28567 . -477) (undo-tree-id28568 . -477) (undo-tree-id28569 . -477) (undo-tree-id28570 . -477) (undo-tree-id28571 . -477) (undo-tree-id28572 . -477) (undo-tree-id28573 . -482) (undo-tree-id28574 . -482) (undo-tree-id28575 . -482) (undo-tree-id28576 . -482) (undo-tree-id28577 . -482) (undo-tree-id28578 . -482) (undo-tree-id28579 . -482) (undo-tree-id28580 . -482) (undo-tree-id28581 . -482) (undo-tree-id28582 . -482) (undo-tree-id28583 . -482) (undo-tree-id28584 . -482) (undo-tree-id28585 . -482) (undo-tree-id28586 . -482) (undo-tree-id28587 . -482) (undo-tree-id28588 . -482) (undo-tree-id28589 . -487) (undo-tree-id28590 . -487) (undo-tree-id28591 . -487) (undo-tree-id28592 . -487) (undo-tree-id28593 . -487) (undo-tree-id28594 . -487) (undo-tree-id28595 . -487) (undo-tree-id28596 . -487) (undo-tree-id28597 . -487) (undo-tree-id28598 . -487) (undo-tree-id28599 . -487) (undo-tree-id28600 . -487) (undo-tree-id28601 . -487) (undo-tree-id28602 . -487) (undo-tree-id28603 . -487) (undo-tree-id28604 . -487) (undo-tree-id28605 . -493) (undo-tree-id28606 . -493) (undo-tree-id28607 . -493) (undo-tree-id28608 . -493) (undo-tree-id28609 . -493) (undo-tree-id28610 . -493) (undo-tree-id28611 . -493) (undo-tree-id28612 . -493) (undo-tree-id28613 . -493) (undo-tree-id28614 . -493) (undo-tree-id28615 . -493) (undo-tree-id28616 . -493) (undo-tree-id28617 . -493) (undo-tree-id28618 . -493) (undo-tree-id28619 . -493) (undo-tree-id28620 . -493) (undo-tree-id28621 . -505) (undo-tree-id28622 . -505) (undo-tree-id28623 . -505) (undo-tree-id28624 . -505) (undo-tree-id28625 . -505) (undo-tree-id28626 . -505) (undo-tree-id28627 . -505) (undo-tree-id28628 . -505) (undo-tree-id28629 . -505) (undo-tree-id28630 . -505) (undo-tree-id28631 . -505) (undo-tree-id28632 . -505) (undo-tree-id28633 . -505) (undo-tree-id28634 . -505) (undo-tree-id28635 . -505) (undo-tree-id28636 . -505) (undo-tree-id28637 . -508) (undo-tree-id28638 . -508) (undo-tree-id28639 . -508) (undo-tree-id28640 . -508) (undo-tree-id28641 . -508) (undo-tree-id28642 . -508) (undo-tree-id28643 . -508) (undo-tree-id28644 . -508) (undo-tree-id28645 . -508) (undo-tree-id28646 . -508) (undo-tree-id28647 . -508) (undo-tree-id28648 . -508) (undo-tree-id28649 . -508) (undo-tree-id28650 . -508) (undo-tree-id28651 . -508) (undo-tree-id28652 . -508) (undo-tree-id28653 . -508) (undo-tree-id28654 . -508) (undo-tree-id28655 . -508) (undo-tree-id28656 . -508) (undo-tree-id28657 . -508) (undo-tree-id28658 . -512) (undo-tree-id28659 . -512) (undo-tree-id28660 . -512) (undo-tree-id28661 . -512) (undo-tree-id28662 . -512) (undo-tree-id28663 . -512) (undo-tree-id28664 . -512) (undo-tree-id28665 . -512) (undo-tree-id28666 . -512) (undo-tree-id28667 . -512) (undo-tree-id28668 . -512) (undo-tree-id28669 . -512) (undo-tree-id28670 . -512) (undo-tree-id28671 . -512) (undo-tree-id28672 . -512) (undo-tree-id28673 . -512) (undo-tree-id28674 . -522) (undo-tree-id28675 . -522) (undo-tree-id28676 . -522) (undo-tree-id28677 . -522) (undo-tree-id28678 . -522) (undo-tree-id28679 . -522) (undo-tree-id28680 . -522) (undo-tree-id28681 . -522) (undo-tree-id28682 . -522) (undo-tree-id28683 . -522) (undo-tree-id28684 . -522) (undo-tree-id28685 . -522) (undo-tree-id28686 . -522) (undo-tree-id28687 . -522) (undo-tree-id28688 . -522) (undo-tree-id28689 . -522) (undo-tree-id28690 . -526) (undo-tree-id28691 . -526) (undo-tree-id28692 . -526) (undo-tree-id28693 . -526) (undo-tree-id28694 . -526) (undo-tree-id28695 . -526) (undo-tree-id28696 . -526) (undo-tree-id28697 . -526) (undo-tree-id28698 . -526) (undo-tree-id28699 . -526) (undo-tree-id28700 . -526) (undo-tree-id28701 . -526) (undo-tree-id28702 . -526) (undo-tree-id28703 . -526) (undo-tree-id28704 . -526) (undo-tree-id28705 . -526) (undo-tree-id28706 . -526) (undo-tree-id28707 . -526) (undo-tree-id28708 . -526) (undo-tree-id28709 . -526) (undo-tree-id28710 . -526) (undo-tree-id28711 . -537) (undo-tree-id28712 . -537) (undo-tree-id28713 . -537) (undo-tree-id28714 . -537) (undo-tree-id28715 . -537) (undo-tree-id28716 . -537) (undo-tree-id28717 . -537) (undo-tree-id28718 . -537) (undo-tree-id28719 . -537) (undo-tree-id28720 . -537) (undo-tree-id28721 . -537) (undo-tree-id28722 . -537) (undo-tree-id28723 . -537) (undo-tree-id28724 . -537) (undo-tree-id28725 . -537) (undo-tree-id28726 . -537) (undo-tree-id28727 . -539) (undo-tree-id28728 . -539) (undo-tree-id28729 . -539) (undo-tree-id28730 . -539) (undo-tree-id28731 . -539) (undo-tree-id28732 . -539) (undo-tree-id28733 . -539) (undo-tree-id28734 . -539) (undo-tree-id28735 . -539) (undo-tree-id28736 . -539) (undo-tree-id28737 . -539) (undo-tree-id28738 . -539) (undo-tree-id28739 . -539) (undo-tree-id28740 . -539) (undo-tree-id28741 . -539) (undo-tree-id28742 . -539) (undo-tree-id28743 . -539) (undo-tree-id28744 . -539) (undo-tree-id28745 . -539) (undo-tree-id28746 . -539) (undo-tree-id28747 . -539) (undo-tree-id28748 . -539) (undo-tree-id28749 . -539) (undo-tree-id28750 . -539) (undo-tree-id28751 . -539) (undo-tree-id28752 . -539) (undo-tree-id28753 . -548) (undo-tree-id28754 . -548) (undo-tree-id28755 . -548) (undo-tree-id28756 . -548) (undo-tree-id28757 . -548) (undo-tree-id28758 . -548) (undo-tree-id28759 . -548) (undo-tree-id28760 . -548) (undo-tree-id28761 . -548) (undo-tree-id28762 . -548) (undo-tree-id28763 . -548) (undo-tree-id28764 . -548) (undo-tree-id28765 . -548) (undo-tree-id28766 . -548) (undo-tree-id28767 . -548) (undo-tree-id28768 . -548) (undo-tree-id28769 . -550) (undo-tree-id28770 . -550) (undo-tree-id28771 . -550) (undo-tree-id28772 . -550) (undo-tree-id28773 . -550) (undo-tree-id28774 . -550) (undo-tree-id28775 . -550) (undo-tree-id28776 . -550) (undo-tree-id28777 . -550) (undo-tree-id28778 . -550) (undo-tree-id28779 . -550) (undo-tree-id28780 . -550) (undo-tree-id28781 . -550) (undo-tree-id28782 . -550) (undo-tree-id28783 . -550) (undo-tree-id28784 . -550) (undo-tree-id28785 . -553) (undo-tree-id28786 . -553) (undo-tree-id28787 . -553) (undo-tree-id28788 . -553) (undo-tree-id28789 . -553) (undo-tree-id28790 . -553) (undo-tree-id28791 . -553) (undo-tree-id28792 . -553) (undo-tree-id28793 . -553) (undo-tree-id28794 . -553) (undo-tree-id28795 . -553) (undo-tree-id28796 . -553) (undo-tree-id28797 . -553) (undo-tree-id28798 . -553) (undo-tree-id28799 . -553) (undo-tree-id28800 . -553) (undo-tree-id28801 . -553) (undo-tree-id28802 . -553) (undo-tree-id28803 . -553) (undo-tree-id28804 . -553) (undo-tree-id28805 . -553) (undo-tree-id28806 . -552) (undo-tree-id28807 . -552) (undo-tree-id28808 . -552) (undo-tree-id28809 . -552) (undo-tree-id28810 . -552) (undo-tree-id28811 . -552) (undo-tree-id28812 . -552) (undo-tree-id28813 . -552) (undo-tree-id28814 . -552) (undo-tree-id28815 . -552) (undo-tree-id28816 . -552) (undo-tree-id28817 . -552) (undo-tree-id28818 . -552) (undo-tree-id28819 . -552) (undo-tree-id28820 . -552) (undo-tree-id28821 . -552) (undo-tree-id28822 . -552) (undo-tree-id28823 . -552) (undo-tree-id28824 . -552) (undo-tree-id28825 . -552) (undo-tree-id28826 . -552) (undo-tree-id28827 . -552) (undo-tree-id28828 . -552) (undo-tree-id28829 . -552) (undo-tree-id28830 . -552) (undo-tree-id28831 . -552) (undo-tree-id28832 . -552) (undo-tree-id28833 . -552) (undo-tree-id28834 . -552) (undo-tree-id28835 . -552) (undo-tree-id28836 . -552) (undo-tree-id28837 . -552) (undo-tree-id28838 . -552) (undo-tree-id28839 . -552) (undo-tree-id28840 . -552) (undo-tree-id28841 . -552) (undo-tree-id28842 . -552) (undo-tree-id28843 . -552) (undo-tree-id28844 . -552) (undo-tree-id28845 . -552) (undo-tree-id28846 . -552) (undo-tree-id28847 . -552) (undo-tree-id28848 . -552) (undo-tree-id28849 . -552) (undo-tree-id28850 . -551) (undo-tree-id28851 . -551) (undo-tree-id28852 . -551) (undo-tree-id28853 . -551) (undo-tree-id28854 . -551) (undo-tree-id28855 . -551) (undo-tree-id28856 . -551) (undo-tree-id28857 . -551) (undo-tree-id28858 . -551) (undo-tree-id28859 . -551) (undo-tree-id28860 . -551) (undo-tree-id28861 . -551) (undo-tree-id28862 . -551) (undo-tree-id28863 . -551) (undo-tree-id28864 . -551) (undo-tree-id28865 . -551) (undo-tree-id28866 . -551) (undo-tree-id28867 . -551) (undo-tree-id28868 . -551) (undo-tree-id28869 . -551) (undo-tree-id28870 . -551) (undo-tree-id28871 . -551) (undo-tree-id28872 . -551) (undo-tree-id28873 . -551) (undo-tree-id28874 . -551) (undo-tree-id28875 . -551) (undo-tree-id28876 . -551) (undo-tree-id28877 . -551) (undo-tree-id28878 . -551) (undo-tree-id28879 . -551) (undo-tree-id28880 . -553) (undo-tree-id28881 . -553) (undo-tree-id28882 . -553) (undo-tree-id28883 . -553) (undo-tree-id28884 . -553) (undo-tree-id28885 . -553) (undo-tree-id28886 . -553) (undo-tree-id28887 . -553) (undo-tree-id28888 . -553) (undo-tree-id28889 . -553) (undo-tree-id28890 . -553) (undo-tree-id28891 . -553) (undo-tree-id28892 . -553) (undo-tree-id28893 . -553) (undo-tree-id28894 . -553) (undo-tree-id28895 . -553) (undo-tree-id28896 . -558) (undo-tree-id28897 . -558) (undo-tree-id28898 . -558) (undo-tree-id28899 . -558) (undo-tree-id28900 . -558) (undo-tree-id28901 . -558) (undo-tree-id28902 . -558) (undo-tree-id28903 . -558) (undo-tree-id28904 . -558) (undo-tree-id28905 . -558) (undo-tree-id28906 . -558) (undo-tree-id28907 . -558) (undo-tree-id28908 . -558) (undo-tree-id28909 . -558) (undo-tree-id28910 . -558) (undo-tree-id28911 . -558) (undo-tree-id28912 . -558) (undo-tree-id28913 . -558) (undo-tree-id28914 . -558) (undo-tree-id28915 . -558) (undo-tree-id28916 . -558) (undo-tree-id28917 . -562) (undo-tree-id28918 . -562) (undo-tree-id28919 . -562) (undo-tree-id28920 . -562) (undo-tree-id28921 . -562) (undo-tree-id28922 . -562) (undo-tree-id28923 . -562) (undo-tree-id28924 . -562) (undo-tree-id28925 . -562) (undo-tree-id28926 . -562) (undo-tree-id28927 . -562) (undo-tree-id28928 . -572) (undo-tree-id28929 . -572) (undo-tree-id28930 . -572) (undo-tree-id28931 . -572) (undo-tree-id28932 . -572) (undo-tree-id28933 . -572) (undo-tree-id28934 . -572) (undo-tree-id28935 . -572) (undo-tree-id28936 . -572) (undo-tree-id28937 . -572) (undo-tree-id28938 . -572) (undo-tree-id28939 . -579) (undo-tree-id28940 . -579) (undo-tree-id28941 . -579) (undo-tree-id28942 . -579) (undo-tree-id28943 . -579) (undo-tree-id28944 . -579) (undo-tree-id28945 . -579) (undo-tree-id28946 . -579) (undo-tree-id28947 . -579) (undo-tree-id28948 . -579) (undo-tree-id28949 . -579) (undo-tree-id28950 . -579) (undo-tree-id28951 . -579) (undo-tree-id28952 . -579) (undo-tree-id28953 . -579) (undo-tree-id28954 . -579) (undo-tree-id28955 . -581) (undo-tree-id28956 . -581) (undo-tree-id28957 . -581) (undo-tree-id28958 . -581) (undo-tree-id28959 . -581) (undo-tree-id28960 . -581) (undo-tree-id28961 . -581) (undo-tree-id28962 . -581) (undo-tree-id28963 . -581) (undo-tree-id28964 . -581) (undo-tree-id28965 . -581) (undo-tree-id28966 . -581) (undo-tree-id28967 . -581) (undo-tree-id28968 . -581) (undo-tree-id28969 . -581) (undo-tree-id28970 . -581) (undo-tree-id28971 . -581) (undo-tree-id28972 . -581) (undo-tree-id28973 . -581) (undo-tree-id28974 . -581) (undo-tree-id28975 . -581) (undo-tree-id28976 . -581) (undo-tree-id28977 . -581) (undo-tree-id28978 . -581) (undo-tree-id28979 . -581) (undo-tree-id28980 . -581) (undo-tree-id28981 . -581) (undo-tree-id28982 . -581) (undo-tree-id28983 . -581) (undo-tree-id28984 . -581) (undo-tree-id28985 . -581) (undo-tree-id28986 . -581) (undo-tree-id28987 . -581) (undo-tree-id28988 . -581) (undo-tree-id28989 . -581) (undo-tree-id28990 . -581) (undo-tree-id28991 . -581) (undo-tree-id28992 . -581) (undo-tree-id28993 . -581) (undo-tree-id28994 . -581) (undo-tree-id28995 . -581) (undo-tree-id28996 . -581) (undo-tree-id28997 . -581) (undo-tree-id28998 . -581) (undo-tree-id28999 . -581) (undo-tree-id29000 . -581) (undo-tree-id29001 . -581) (undo-tree-id29002 . -581) (undo-tree-id29003 . -581) (undo-tree-id29004 . -581) (undo-tree-id29005 . -581) (undo-tree-id29006 . -581) (undo-tree-id29007 . -581) (undo-tree-id29008 . -581) (undo-tree-id29009 . -581) (undo-tree-id29010 . -581) (undo-tree-id29011 . -581) (undo-tree-id29012 . -581) (undo-tree-id29013 . -581) (undo-tree-id29014 . -581) (undo-tree-id29015 . -581) (undo-tree-id29016 . -581) (undo-tree-id29017 . -581) (undo-tree-id29018 . -581) (undo-tree-id29019 . -581) (undo-tree-id29020 . -581) (undo-tree-id29021 . -581) (undo-tree-id29022 . -581) (undo-tree-id29023 . -581) (undo-tree-id29024 . -581) (undo-tree-id29025 . -581) (undo-tree-id29026 . -581) (undo-tree-id29027 . -581) (undo-tree-id29028 . -581) (undo-tree-id29029 . -581) (undo-tree-id29030 . -581) (undo-tree-id29031 . -581) (undo-tree-id29032 . -581) (undo-tree-id29033 . -581) (undo-tree-id29034 . -581) (undo-tree-id29035 . -581) (undo-tree-id29036 . -581) (undo-tree-id29037 . -581) (undo-tree-id29038 . -581) (undo-tree-id29039 . -581) (undo-tree-id29040 . -581) (undo-tree-id29041 . -581) (undo-tree-id29042 . -581) (undo-tree-id29043 . -581) (undo-tree-id29044 . -581) (undo-tree-id29045 . -581) (undo-tree-id29046 . -574) (undo-tree-id29047 . -574) (undo-tree-id29048 . -574) (undo-tree-id29049 . -574) (undo-tree-id29050 . -574) (undo-tree-id29051 . -574) (undo-tree-id29052 . -574) (undo-tree-id29053 . -574) (undo-tree-id29054 . -574) (undo-tree-id29055 . -574) (undo-tree-id29056 . -574) (undo-tree-id29057 . -574) (undo-tree-id29058 . -574) (undo-tree-id29059 . -574) (undo-tree-id29060 . -574) (undo-tree-id29061 . -574) (undo-tree-id29062 . -581) (undo-tree-id29063 . -581) (undo-tree-id29064 . -581) (undo-tree-id29065 . -581) (undo-tree-id29066 . -581) (undo-tree-id29067 . -581) (undo-tree-id29068 . -581) (undo-tree-id29069 . -581) (undo-tree-id29070 . -581) (undo-tree-id29071 . -581) (undo-tree-id29072 . -581) (undo-tree-id29073 . -581) (undo-tree-id29074 . -581) (undo-tree-id29075 . -581) (undo-tree-id29076 . -581) (undo-tree-id29077 . -581) (undo-tree-id29078 . -581) (undo-tree-id29079 . -581) (undo-tree-id29080 . -581) (undo-tree-id29081 . -581) (undo-tree-id29082 . -581) (undo-tree-id29083 . -581) (undo-tree-id29084 . -581) (undo-tree-id29085 . -581) (undo-tree-id29086 . -581) (undo-tree-id29087 . -581) (undo-tree-id29088 . -581) (undo-tree-id29089 . -581) (undo-tree-id29090 . -581) (undo-tree-id29091 . -581) (undo-tree-id29092 . -581) (undo-tree-id29093 . -581) (undo-tree-id29094 . -581) (undo-tree-id29095 . -581) (undo-tree-id29096 . -581) (undo-tree-id29097 . -581) (undo-tree-id29098 . -581) (undo-tree-id29099 . -581) (undo-tree-id29100 . -581) (undo-tree-id29101 . -581) (undo-tree-id29102 . -581) (undo-tree-id29103 . -581) (undo-tree-id29104 . -581) (undo-tree-id29105 . -581) (undo-tree-id29106 . -581) (undo-tree-id29107 . -581) (undo-tree-id29108 . -581) (undo-tree-id29109 . -581) (undo-tree-id29110 . -581) (undo-tree-id29111 . -581) (undo-tree-id29112 . -581) (undo-tree-id29113 . -581) (undo-tree-id29114 . -581) (undo-tree-id29115 . -581) (undo-tree-id29116 . -581) (undo-tree-id29117 . -581) (undo-tree-id29118 . -581) (undo-tree-id29119 . -581) (undo-tree-id29120 . -581) (undo-tree-id29121 . -581) (undo-tree-id29122 . -581) (undo-tree-id29123 . -581) (undo-tree-id29124 . -581) (undo-tree-id29125 . -581) (undo-tree-id29126 . -581) (undo-tree-id29127 . -581) (undo-tree-id29128 . -581) (undo-tree-id29129 . -581) (undo-tree-id29130 . -581) (undo-tree-id29131 . -581) (undo-tree-id29132 . -581) (undo-tree-id29133 . -581) (undo-tree-id29134 . -581) (undo-tree-id29135 . -581) (undo-tree-id29136 . -581) (undo-tree-id29137 . -581) (undo-tree-id29138 . -581) (undo-tree-id29139 . -581) (undo-tree-id29140 . -581) (undo-tree-id29141 . -581) (undo-tree-id29142 . -581) (undo-tree-id29143 . -581) (undo-tree-id29144 . -581) (undo-tree-id29145 . -581) (undo-tree-id29146 . -581) (undo-tree-id29147 . -581) (undo-tree-id29148 . -581) (undo-tree-id29149 . -581) (undo-tree-id29150 . -581) (undo-tree-id29151 . -581) (undo-tree-id29152 . -581) (undo-tree-id29153 . -581) (undo-tree-id29154 . -581) (undo-tree-id29155 . -581) (undo-tree-id29156 . -581) (undo-tree-id29157 . -581) (undo-tree-id29158 . -581) (undo-tree-id29159 . -581) (undo-tree-id29160 . -581) (undo-tree-id29161 . -581) (undo-tree-id29162 . -581) (undo-tree-id29163 . -581) (undo-tree-id29164 . -581) (undo-tree-id29165 . -581) (undo-tree-id29166 . -581) (undo-tree-id29167 . -581) (undo-tree-id29168 . -581) (undo-tree-id29169 . -581) (undo-tree-id29170 . -581) (undo-tree-id29171 . -581) (undo-tree-id29172 . -581) (undo-tree-id29173 . -581) (undo-tree-id29174 . -581) (undo-tree-id29175 . -581) (undo-tree-id29176 . -581) (undo-tree-id29177 . -581) (undo-tree-id29178 . -581) (undo-tree-id29179 . -581) (undo-tree-id29180 . -581) (undo-tree-id29181 . -581) (undo-tree-id29182 . -581) (undo-tree-id29183 . -581) (undo-tree-id29184 . -581) (undo-tree-id29185 . -581) (undo-tree-id29186 . -581) (undo-tree-id29187 . -581) (undo-tree-id29188 . -581) (undo-tree-id29189 . -581) (undo-tree-id29190 . -581) (undo-tree-id29191 . -581) (undo-tree-id29192 . -581) (undo-tree-id29193 . -581) (undo-tree-id29194 . -581) (undo-tree-id29195 . -581) (undo-tree-id29196 . -581) (undo-tree-id29197 . -581) (undo-tree-id29198 . -581) (undo-tree-id29199 . -581) (undo-tree-id29200 . -581) (undo-tree-id29201 . -581) (undo-tree-id29202 . -581) (undo-tree-id29203 . -581) (undo-tree-id29204 . -581) (undo-tree-id29205 . -581) (undo-tree-id29206 . -581) (undo-tree-id29207 . -581) (undo-tree-id29208 . -581) (undo-tree-id29209 . -581) (undo-tree-id29210 . -581) (undo-tree-id29211 . -581) (undo-tree-id29212 . -581) (undo-tree-id29213 . -581) (undo-tree-id29214 . -581) (undo-tree-id29215 . -581) (undo-tree-id29216 . -581) (undo-tree-id29217 . -581) (undo-tree-id29218 . -581) (undo-tree-id29219 . -581) (undo-tree-id29220 . -581) (undo-tree-id29221 . -581) (undo-tree-id29222 . -581) (undo-tree-id29223 . -581) (undo-tree-id29224 . -587) (undo-tree-id29225 . -587) (undo-tree-id29226 . -587) (undo-tree-id29227 . -587) (undo-tree-id29228 . -587) (undo-tree-id29229 . -587) (undo-tree-id29230 . -587) (undo-tree-id29231 . -587) (undo-tree-id29232 . -587) (undo-tree-id29233 . -587) (undo-tree-id29234 . -587) (undo-tree-id29235 . -587) (undo-tree-id29236 . -587) (undo-tree-id29237 . -587) (undo-tree-id29238 . -587) (undo-tree-id29239 . -587) (undo-tree-id29240 . -588) (undo-tree-id29241 . -588) (undo-tree-id29242 . -588) (undo-tree-id29243 . -588) (undo-tree-id29244 . -588) (undo-tree-id29245 . -588) (undo-tree-id29246 . -588) (undo-tree-id29247 . -588) (undo-tree-id29248 . -588) (undo-tree-id29249 . -588) (undo-tree-id29250 . -588) (undo-tree-id29251 . -588) (undo-tree-id29252 . -588) (undo-tree-id29253 . -588) (undo-tree-id29254 . -588) (undo-tree-id29255 . -588) (undo-tree-id29256 . -591) (undo-tree-id29257 . -591) (undo-tree-id29258 . -591) (undo-tree-id29259 . -591) (undo-tree-id29260 . -591) (undo-tree-id29261 . -591) (undo-tree-id29262 . -591) (undo-tree-id29263 . -591) (undo-tree-id29264 . -591) (undo-tree-id29265 . -591) (undo-tree-id29266 . -591) (undo-tree-id29267 . -591) (undo-tree-id29268 . -591) (undo-tree-id29269 . -591) (undo-tree-id29270 . -591) (undo-tree-id29271 . -591) (undo-tree-id29272 . -591) (undo-tree-id29273 . -591) (undo-tree-id29274 . -591) (undo-tree-id29275 . -591) (undo-tree-id29276 . -591) (undo-tree-id29277 . -600) (undo-tree-id29278 . -600) (undo-tree-id29279 . -600) (undo-tree-id29280 . -600) (undo-tree-id29281 . -600) (undo-tree-id29282 . -600) (undo-tree-id29283 . -600) (undo-tree-id29284 . -600) (undo-tree-id29285 . -600) (undo-tree-id29286 . -600) (undo-tree-id29287 . -600) (undo-tree-id29288 . -600) (undo-tree-id29289 . -600) (undo-tree-id29290 . -600) (undo-tree-id29291 . -600) (undo-tree-id29292 . -600) (undo-tree-id29293 . -603) (undo-tree-id29294 . -603) (undo-tree-id29295 . -603) (undo-tree-id29296 . -603) (undo-tree-id29297 . -603) (undo-tree-id29298 . -603) (undo-tree-id29299 . -603) (undo-tree-id29300 . -603) (undo-tree-id29301 . -603) (undo-tree-id29302 . -603) (undo-tree-id29303 . -603) (undo-tree-id29304 . -603) (undo-tree-id29305 . -603) (undo-tree-id29306 . -603) (undo-tree-id29307 . -603) (undo-tree-id29308 . -603) (undo-tree-id29309 . -607) (undo-tree-id29310 . -607) (undo-tree-id29311 . -607) (undo-tree-id29312 . -607) (undo-tree-id29313 . -607) (undo-tree-id29314 . -607) (undo-tree-id29315 . -607) (undo-tree-id29316 . -607) (undo-tree-id29317 . -607) (undo-tree-id29318 . -607) (undo-tree-id29319 . -607) (undo-tree-id29320 . -607) (undo-tree-id29321 . -607) (undo-tree-id29322 . -607) (undo-tree-id29323 . -607) (undo-tree-id29324 . -607) (undo-tree-id29325 . -616) (undo-tree-id29326 . -616) (undo-tree-id29327 . -616) (undo-tree-id29328 . -616) (undo-tree-id29329 . -616) (undo-tree-id29330 . -616) (undo-tree-id29331 . -616) (undo-tree-id29332 . -616) (undo-tree-id29333 . -616) (undo-tree-id29334 . -616) (undo-tree-id29335 . -616) (undo-tree-id29336 . -616) (undo-tree-id29337 . -616) (undo-tree-id29338 . -616) (undo-tree-id29339 . -616) (undo-tree-id29340 . -616) (undo-tree-id29341 . -623) (undo-tree-id29342 . -623) (undo-tree-id29343 . -623) (undo-tree-id29344 . -623) (undo-tree-id29345 . -623) (undo-tree-id29346 . -623) (undo-tree-id29347 . -623) (undo-tree-id29348 . -623) (undo-tree-id29349 . -623) (undo-tree-id29350 . -623) (undo-tree-id29351 . -623) (undo-tree-id29352 . -623) (undo-tree-id29353 . -623) (undo-tree-id29354 . -623) (undo-tree-id29355 . -623) (undo-tree-id29356 . -623) (undo-tree-id29357 . -624) (undo-tree-id29358 . -624) (undo-tree-id29359 . -624) (undo-tree-id29360 . -624) (undo-tree-id29361 . -624) (undo-tree-id29362 . -624) (undo-tree-id29363 . -624) (undo-tree-id29364 . -624) (undo-tree-id29365 . -624) (undo-tree-id29366 . -624) (undo-tree-id29367 . -624) (undo-tree-id29368 . -624) (undo-tree-id29369 . -624) (undo-tree-id29370 . -624) (undo-tree-id29371 . -624) (undo-tree-id29372 . -624) (undo-tree-id29373 . -624) (undo-tree-id29374 . -624) (undo-tree-id29375 . -624) (undo-tree-id29376 . -624) (undo-tree-id29377 . -624) (undo-tree-id29378 . -625) (undo-tree-id29379 . -625) (undo-tree-id29380 . -625) (undo-tree-id29381 . -625) (undo-tree-id29382 . -625) (undo-tree-id29383 . -625) (undo-tree-id29384 . -625) (undo-tree-id29385 . -625) (undo-tree-id29386 . -625) (undo-tree-id29387 . -625) (undo-tree-id29388 . -625) (undo-tree-id29389 . -625) (undo-tree-id29390 . -625) (undo-tree-id29391 . -625) (undo-tree-id29392 . -625) (undo-tree-id29393 . -625) (undo-tree-id29394 . -625) (undo-tree-id29395 . -625) (undo-tree-id29396 . -625) (undo-tree-id29397 . -625) (undo-tree-id29398 . -625) (undo-tree-id29399 . -625) (undo-tree-id29400 . -625) (undo-tree-id29401 . -625) (undo-tree-id29402 . -404) (2727 . 3131) (#(" To summarize what we have just discussed above, the attention-based RNN consists of two RNNs. RNN #1 prepares context vectors from the input sequence elements, and RNN #2 receives the context vectors as input. The context vectors are computed via a weighted sum over the inputs, where the weights are the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 .The next subsection discusses how we compute these attention weights." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 57 58 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 58 62 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 62 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 77 94 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 94 96 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 96 97 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 97 98 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 98 99 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 99 200 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 200 201 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 201 251 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 251 253 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 253 261 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 261 264 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 264 265 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 265 270 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 270 271 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 271 278 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 278 279 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 279 297 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 297 298 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 298 400 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 400 401 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2948) (undo-tree-id29403 . -400)) nil (25774 27156 636822 681000) 0 nil])
([nil nil ((#("To summarize what we have just discussed above" 0 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2952) (undo-tree-id28344 . 46) (undo-tree-id28345 . -45) (undo-tree-id28346 . -46)) nil (25774 27156 636151 371000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2952) (undo-tree-id28341 . 2) (undo-tree-id28342 . -1) (undo-tree-id28343 . -2)) nil (25774 27156 636148 717000) 0 nil])
([nil nil ((2952 . 2953) (#("t" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2952)) nil (25774 27156 636146 164000) 0 nil])
([nil nil ((2950 . 3307) (#("- RNN #1 prepares context vectors from the input sequence elements, and RNN #2 receives the context vectors as input. The context vectors are computed via a weighted sum over the inputs, where the weights are the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 .The next subsection discusses how we compute these attention weights.

- The attention-based RNN consists of two RNNs." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 4 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 4 5 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 5 6 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 6 107 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 107 108 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 108 158 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 158 160 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 160 168 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 168 171 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 171 172 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 172 177 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 177 178 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 178 183 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 183 185 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 185 186 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 186 204 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 204 205 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 205 307 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 307 308 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 308 309 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 309 310 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 310 311 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 311 312 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 312 320 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 320 321 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 321 325 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 325 340 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 340 357 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2950) (undo-tree-id27924 . 45) (undo-tree-id27925 . -312) (undo-tree-id27926 . -312) (undo-tree-id27927 . -312) (undo-tree-id27928 . -312) (undo-tree-id27929 . 44) (undo-tree-id27930 . -312) (undo-tree-id27931 . -312) (undo-tree-id27932 . -357) (undo-tree-id27933 . -312) (undo-tree-id27934 . -312) (undo-tree-id27935 . -312) (undo-tree-id27936 . -312) (undo-tree-id27937 . -312) (undo-tree-id27938 . -312) (undo-tree-id27939 . -312) (undo-tree-id27940 . -312) (undo-tree-id27941 . -312) (undo-tree-id27942 . -312) (undo-tree-id27943 . -312) (undo-tree-id27944 . -312) (undo-tree-id27945 . -312) (undo-tree-id27946 . -312) (undo-tree-id27947 . -312) (undo-tree-id27948 . -312) (undo-tree-id27949 . -312) (undo-tree-id27950 . -311) (undo-tree-id27951 . -311) (undo-tree-id27952 . -311) (undo-tree-id27953 . -311) (undo-tree-id27954 . -311) (undo-tree-id27955 . -311) (undo-tree-id27956 . -311) (undo-tree-id27957 . -311) (undo-tree-id27958 . -311) (undo-tree-id27959 . -311) (undo-tree-id27960 . -311) (undo-tree-id27961 . -311) (undo-tree-id27962 . -311) (undo-tree-id27963 . -311) (undo-tree-id27964 . -311) (undo-tree-id27965 . -311) (undo-tree-id27966 . -311) (undo-tree-id27967 . -311) (undo-tree-id27968 . -311) (undo-tree-id27969 . -311) (undo-tree-id27970 . -311) (undo-tree-id27971 . -311) (undo-tree-id27972 . -311) (undo-tree-id27973 . -311) (undo-tree-id27974 . -311) (undo-tree-id27975 . -311) (undo-tree-id27976 . -311) (undo-tree-id27977 . -311) (undo-tree-id27978 . -311) (undo-tree-id27979 . -311) (undo-tree-id27980 . -311) (undo-tree-id27981 . -311) (undo-tree-id27982 . -311) (undo-tree-id27983 . -311) (undo-tree-id27984 . -311) (undo-tree-id27985 . -311) (undo-tree-id27986 . -311) (undo-tree-id27987 . -311) (undo-tree-id27988 . -311) (undo-tree-id27989 . -311) (undo-tree-id27990 . -311) (undo-tree-id27991 . -311) (undo-tree-id27992 . -311) (undo-tree-id27993 . -311) (undo-tree-id27994 . -311) (undo-tree-id27995 . -312) (undo-tree-id27996 . -312) (undo-tree-id27997 . -312) (undo-tree-id27998 . -312) (undo-tree-id27999 . -312) (undo-tree-id28000 . -312) (undo-tree-id28001 . -312) (undo-tree-id28002 . -312) (undo-tree-id28003 . -312) (undo-tree-id28004 . -312) (undo-tree-id28005 . -312) (undo-tree-id28006 . -312) (undo-tree-id28007 . -312) (undo-tree-id28008 . -312) (undo-tree-id28009 . -312) (undo-tree-id28010 . -312) (undo-tree-id28011 . -312) (undo-tree-id28012 . -312) (undo-tree-id28013 . -312) (undo-tree-id28014 . -312) (undo-tree-id28015 . -312) (undo-tree-id28016 . -312) (undo-tree-id28017 . -312) (undo-tree-id28018 . -312) (undo-tree-id28019 . -312) (undo-tree-id28020 . -312) (undo-tree-id28021 . -312) (undo-tree-id28022 . -312) (undo-tree-id28023 . -312) (undo-tree-id28024 . -312) (undo-tree-id28025 . -312) (undo-tree-id28026 . -312) (undo-tree-id28027 . -312) (undo-tree-id28028 . -312) (undo-tree-id28029 . -312) (undo-tree-id28030 . -312) (undo-tree-id28031 . -312) (undo-tree-id28032 . -312) (undo-tree-id28033 . -312) (undo-tree-id28034 . -312) (undo-tree-id28035 . -312) (undo-tree-id28036 . -312) (undo-tree-id28037 . -312) (undo-tree-id28038 . -312) (undo-tree-id28039 . -312) (undo-tree-id28040 . -312) (undo-tree-id28041 . -312) (undo-tree-id28042 . -312) (undo-tree-id28043 . -312) (undo-tree-id28044 . -312) (undo-tree-id28045 . -312) (undo-tree-id28046 . -312) (undo-tree-id28047 . -312) (undo-tree-id28048 . -312) (undo-tree-id28049 . -312) (undo-tree-id28050 . -312) (undo-tree-id28051 . -312) (undo-tree-id28052 . -312) (undo-tree-id28053 . -312) (undo-tree-id28054 . -312) (undo-tree-id28055 . -312) (undo-tree-id28056 . -312) (undo-tree-id28057 . -312) (undo-tree-id28058 . -312) (undo-tree-id28059 . -312) (undo-tree-id28060 . -312) (undo-tree-id28061 . -312) (undo-tree-id28062 . -312) (undo-tree-id28063 . -312) (undo-tree-id28064 . -312) (undo-tree-id28065 . -312) (undo-tree-id28066 . -312) (undo-tree-id28067 . -312) (undo-tree-id28068 . -312) (undo-tree-id28069 . -312) (undo-tree-id28070 . -312) (undo-tree-id28071 . -312) (undo-tree-id28072 . -312) (undo-tree-id28073 . -312) (undo-tree-id28074 . -312) (undo-tree-id28075 . -312) (undo-tree-id28076 . -312) (undo-tree-id28077 . -312) (undo-tree-id28078 . -312) (undo-tree-id28079 . -312) (undo-tree-id28080 . -312) (undo-tree-id28081 . -312) (undo-tree-id28082 . -312) (undo-tree-id28083 . -312) (undo-tree-id28084 . -312) (undo-tree-id28085 . -312) (undo-tree-id28086 . -312) (undo-tree-id28087 . -312) (undo-tree-id28088 . -312) (undo-tree-id28089 . -312) (undo-tree-id28090 . -312) (undo-tree-id28091 . -312) (undo-tree-id28092 . -312) (undo-tree-id28093 . -312) (undo-tree-id28094 . -312) (undo-tree-id28095 . -312) (undo-tree-id28096 . -312) (undo-tree-id28097 . -312) (undo-tree-id28098 . -312) (undo-tree-id28099 . -312) (undo-tree-id28100 . -312) (undo-tree-id28101 . -312) (undo-tree-id28102 . -312) (undo-tree-id28103 . -312) (undo-tree-id28104 . -312) (undo-tree-id28105 . -312) (undo-tree-id28106 . -312) (undo-tree-id28107 . -312) (undo-tree-id28108 . -312) (undo-tree-id28109 . -312) (undo-tree-id28110 . -312) (undo-tree-id28111 . -312) (undo-tree-id28112 . -312) (undo-tree-id28113 . -312) (undo-tree-id28114 . -312) (undo-tree-id28115 . -312) (undo-tree-id28116 . -312) (undo-tree-id28117 . -312) (undo-tree-id28118 . -312) (undo-tree-id28119 . -312) (undo-tree-id28120 . -312) (undo-tree-id28121 . -312) (undo-tree-id28122 . -312) (undo-tree-id28123 . -312) (undo-tree-id28124 . -312) (undo-tree-id28125 . -312) (undo-tree-id28126 . -312) (undo-tree-id28127 . -312) (undo-tree-id28128 . -312) (undo-tree-id28129 . -312) (undo-tree-id28130 . -312) (undo-tree-id28131 . -312) (undo-tree-id28132 . -312) (undo-tree-id28133 . -312) (undo-tree-id28134 . -312) (undo-tree-id28135 . -312) (undo-tree-id28136 . -312) (undo-tree-id28137 . -312) (undo-tree-id28138 . -312) (undo-tree-id28139 . -312) (undo-tree-id28140 . -312) (undo-tree-id28141 . -312) (undo-tree-id28142 . -314) (undo-tree-id28143 . -314) (undo-tree-id28144 . -314) (undo-tree-id28145 . -314) (undo-tree-id28146 . -314) (undo-tree-id28147 . -314) (undo-tree-id28148 . -314) (undo-tree-id28149 . -314) (undo-tree-id28150 . -314) (undo-tree-id28151 . -314) (undo-tree-id28152 . -314) (undo-tree-id28153 . -314) (undo-tree-id28154 . -314) (undo-tree-id28155 . -314) (undo-tree-id28156 . -314) (undo-tree-id28157 . -314) (undo-tree-id28158 . -324) (undo-tree-id28159 . -324) (undo-tree-id28160 . -324) (undo-tree-id28161 . -324) (undo-tree-id28162 . -324) (undo-tree-id28163 . -324) (undo-tree-id28164 . -324) (undo-tree-id28165 . -324) (undo-tree-id28166 . -324) (undo-tree-id28167 . -324) (undo-tree-id28168 . -324) (undo-tree-id28169 . -324) (undo-tree-id28170 . -324) (undo-tree-id28171 . -324) (undo-tree-id28172 . -324) (undo-tree-id28173 . -324) (undo-tree-id28174 . -325) (undo-tree-id28175 . -325) (undo-tree-id28176 . -325) (undo-tree-id28177 . -325) (undo-tree-id28178 . -325) (undo-tree-id28179 . -325) (undo-tree-id28180 . -325) (undo-tree-id28181 . -325) (undo-tree-id28182 . -325) (undo-tree-id28183 . -325) (undo-tree-id28184 . -325) (undo-tree-id28185 . -325) (undo-tree-id28186 . -325) (undo-tree-id28187 . -325) (undo-tree-id28188 . -325) (undo-tree-id28189 . -325) (undo-tree-id28190 . -330) (undo-tree-id28191 . -330) (undo-tree-id28192 . -330) (undo-tree-id28193 . -330) (undo-tree-id28194 . -330) (undo-tree-id28195 . -330) (undo-tree-id28196 . -330) (undo-tree-id28197 . -330) (undo-tree-id28198 . -330) (undo-tree-id28199 . -330) (undo-tree-id28200 . -330) (undo-tree-id28201 . -330) (undo-tree-id28202 . -330) (undo-tree-id28203 . -330) (undo-tree-id28204 . -330) (undo-tree-id28205 . -330) (undo-tree-id28206 . 25) (undo-tree-id28207 . -335) (undo-tree-id28208 . -334) (undo-tree-id28209 . -334) (undo-tree-id28210 . -334) (undo-tree-id28211 . -334) (undo-tree-id28212 . -334) (undo-tree-id28213 . -334) (undo-tree-id28214 . -334) (undo-tree-id28215 . -334) (undo-tree-id28216 . -334) (undo-tree-id28217 . -334) (undo-tree-id28218 . -334) (undo-tree-id28219 . -334) (undo-tree-id28220 . -334) (undo-tree-id28221 . -334) (undo-tree-id28222 . -334) (undo-tree-id28223 . -334) (undo-tree-id28224 . -334) (undo-tree-id28225 . -334) (undo-tree-id28226 . -334) (undo-tree-id28227 . -334) (undo-tree-id28228 . -334) (undo-tree-id28229 . -343) (undo-tree-id28230 . -343) (undo-tree-id28231 . -343) (undo-tree-id28232 . -343) (undo-tree-id28233 . -343) (undo-tree-id28234 . -343) (undo-tree-id28235 . -343) (undo-tree-id28236 . -343) (undo-tree-id28237 . -343) (undo-tree-id28238 . -343) (undo-tree-id28239 . -343) (undo-tree-id28240 . -343) (undo-tree-id28241 . -343) (undo-tree-id28242 . -343) (undo-tree-id28243 . -343) (undo-tree-id28244 . -343) (undo-tree-id28245 . -346) (undo-tree-id28246 . -346) (undo-tree-id28247 . -346) (undo-tree-id28248 . -346) (undo-tree-id28249 . -346) (undo-tree-id28250 . -346) (undo-tree-id28251 . -346) (undo-tree-id28252 . -346) (undo-tree-id28253 . -346) (undo-tree-id28254 . -346) (undo-tree-id28255 . -346) (undo-tree-id28256 . -346) (undo-tree-id28257 . -346) (undo-tree-id28258 . -346) (undo-tree-id28259 . -346) (undo-tree-id28260 . -346) (undo-tree-id28261 . -350) (undo-tree-id28262 . -350) (undo-tree-id28263 . -350) (undo-tree-id28264 . -350) (undo-tree-id28265 . -350) (undo-tree-id28266 . -350) (undo-tree-id28267 . -350) (undo-tree-id28268 . -350) (undo-tree-id28269 . -350) (undo-tree-id28270 . -350) (undo-tree-id28271 . -350) (undo-tree-id28272 . -350) (undo-tree-id28273 . -350) (undo-tree-id28274 . -350) (undo-tree-id28275 . -350) (undo-tree-id28276 . -350) (undo-tree-id28277 . 5) (undo-tree-id28278 . -356) (undo-tree-id28279 . -355) (undo-tree-id28280 . -355) (undo-tree-id28281 . -355) (undo-tree-id28282 . -355) (undo-tree-id28283 . -355) (undo-tree-id28284 . -355) (undo-tree-id28285 . -355) (undo-tree-id28286 . -355) (undo-tree-id28287 . -355) (undo-tree-id28288 . -355) (undo-tree-id28289 . -355) (undo-tree-id28290 . -355) (undo-tree-id28291 . -355) (undo-tree-id28292 . -355) (undo-tree-id28293 . -355) (undo-tree-id28294 . -355) (undo-tree-id28295 . -356) (undo-tree-id28296 . -356) (undo-tree-id28297 . -356) (undo-tree-id28298 . -356) (undo-tree-id28299 . -356) (undo-tree-id28300 . -356) (undo-tree-id28301 . -356) (undo-tree-id28302 . -356) (undo-tree-id28303 . -356) (undo-tree-id28304 . -356) (undo-tree-id28305 . -356) (undo-tree-id28306 . -356) (undo-tree-id28307 . -356) (undo-tree-id28308 . -356) (undo-tree-id28309 . -356) (undo-tree-id28310 . -356) (undo-tree-id28311 . -356) (undo-tree-id28312 . -356) (undo-tree-id28313 . -356) (undo-tree-id28314 . -356) (undo-tree-id28315 . -356) (undo-tree-id28316 . -357) (undo-tree-id28317 . -357) (undo-tree-id28318 . -357) (undo-tree-id28319 . -357) (undo-tree-id28320 . -357) (undo-tree-id28321 . -357) (undo-tree-id28322 . -357) (undo-tree-id28323 . -357) (undo-tree-id28324 . -357) (undo-tree-id28325 . -357) (undo-tree-id28326 . -357) (undo-tree-id28327 . -357) (undo-tree-id28328 . -357) (undo-tree-id28329 . -357) (undo-tree-id28330 . -357) (undo-tree-id28331 . -357) (undo-tree-id28332 . -357) (undo-tree-id28333 . -357) (undo-tree-id28334 . -357) (undo-tree-id28335 . -357) (undo-tree-id28336 . -357) (undo-tree-id28337 . -357) (undo-tree-id28338 . -357) (undo-tree-id28339 . -357) (undo-tree-id28340 . -310) (2950 . 3260) (#(" RNN #1 prepares context vectors from the input sequence elements, and RNN #2 receives the context vectors as input. The context vectors are computed via a weighted sum over the inputs, where the weights are the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 .The next subsection discusses how we compute these attention weights." 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 2 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 3 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 4 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 5 106 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 106 107 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 107 157 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 157 159 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 159 167 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 167 170 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 170 171 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 171 176 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 176 177 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 177 182 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 182 184 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 184 185 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 185 203 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 203 204 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 204 306 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 306 307 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2997)) nil (25774 27156 636132 644000) 0 nil])
([nil nil ((2999 . 3310) (#("- and RNN #2 receives the context vectors as input. The context vectors are computed via a weighted sum over the inputs, where the weights are the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 .The next subsection discusses how we compute these attention weights.

- RNN #1 prepares context vectors from the input sequence elements," 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 41 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 41 42 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 42 92 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 92 94 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 94 102 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 102 105 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 105 106 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 106 111 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 111 112 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 112 117 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 117 119 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 119 120 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 120 138 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 138 139 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 139 241 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 241 242 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 242 243 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 243 244 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 244 245 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 245 246 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 246 247 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 247 248 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 248 249 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 249 250 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 250 311 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2999) (undo-tree-id27502 . 65) (undo-tree-id27503 . -311) (undo-tree-id27504 . -246) (undo-tree-id27505 . -246) (undo-tree-id27506 . -246) (undo-tree-id27507 . -246) (undo-tree-id27508 . -246) (undo-tree-id27509 . -246) (undo-tree-id27510 . -246) (undo-tree-id27511 . -246) (undo-tree-id27512 . -246) (undo-tree-id27513 . -246) (undo-tree-id27514 . -246) (undo-tree-id27515 . -246) (undo-tree-id27516 . -246) (undo-tree-id27517 . -246) (undo-tree-id27518 . -246) (undo-tree-id27519 . -246) (undo-tree-id27520 . -246) (undo-tree-id27521 . -245) (undo-tree-id27522 . -245) (undo-tree-id27523 . -245) (undo-tree-id27524 . -245) (undo-tree-id27525 . -245) (undo-tree-id27526 . -245) (undo-tree-id27527 . -245) (undo-tree-id27528 . -245) (undo-tree-id27529 . -245) (undo-tree-id27530 . -245) (undo-tree-id27531 . -245) (undo-tree-id27532 . -245) (undo-tree-id27533 . -245) (undo-tree-id27534 . -245) (undo-tree-id27535 . -245) (undo-tree-id27536 . -245) (undo-tree-id27537 . -245) (undo-tree-id27538 . -245) (undo-tree-id27539 . -245) (undo-tree-id27540 . -245) (undo-tree-id27541 . -245) (undo-tree-id27542 . -245) (undo-tree-id27543 . -245) (undo-tree-id27544 . -245) (undo-tree-id27545 . -245) (undo-tree-id27546 . -245) (undo-tree-id27547 . -245) (undo-tree-id27548 . -245) (undo-tree-id27549 . -245) (undo-tree-id27550 . -245) (undo-tree-id27551 . 65) (undo-tree-id27552 . -249) (undo-tree-id27553 . -248) (undo-tree-id27554 . -248) (undo-tree-id27555 . -248) (undo-tree-id27556 . -248) (undo-tree-id27557 . -248) (undo-tree-id27558 . -248) (undo-tree-id27559 . -248) (undo-tree-id27560 . -248) (undo-tree-id27561 . -248) (undo-tree-id27562 . -248) (undo-tree-id27563 . -248) (undo-tree-id27564 . -248) (undo-tree-id27565 . -248) (undo-tree-id27566 . -248) (undo-tree-id27567 . -248) (undo-tree-id27568 . -248) (undo-tree-id27569 . -250) (undo-tree-id27570 . -250) (undo-tree-id27571 . -250) (undo-tree-id27572 . -250) (undo-tree-id27573 . -250) (undo-tree-id27574 . -250) (undo-tree-id27575 . -250) (undo-tree-id27576 . -250) (undo-tree-id27577 . -250) (undo-tree-id27578 . -250) (undo-tree-id27579 . -250) (undo-tree-id27580 . -250) (undo-tree-id27581 . -250) (undo-tree-id27582 . -250) (undo-tree-id27583 . -250) (undo-tree-id27584 . -250) (undo-tree-id27585 . -251) (undo-tree-id27586 . -251) (undo-tree-id27587 . -251) (undo-tree-id27588 . -251) (undo-tree-id27589 . -251) (undo-tree-id27590 . -251) (undo-tree-id27591 . -251) (undo-tree-id27592 . -251) (undo-tree-id27593 . -251) (undo-tree-id27594 . -251) (undo-tree-id27595 . -251) (undo-tree-id27596 . -251) (undo-tree-id27597 . -251) (undo-tree-id27598 . -251) (undo-tree-id27599 . -251) (undo-tree-id27600 . -251) (undo-tree-id27601 . -260) (undo-tree-id27602 . -260) (undo-tree-id27603 . -260) (undo-tree-id27604 . -260) (undo-tree-id27605 . -260) (undo-tree-id27606 . -260) (undo-tree-id27607 . -260) (undo-tree-id27608 . -260) (undo-tree-id27609 . -260) (undo-tree-id27610 . -260) (undo-tree-id27611 . -260) (undo-tree-id27612 . -260) (undo-tree-id27613 . -260) (undo-tree-id27614 . -260) (undo-tree-id27615 . -260) (undo-tree-id27616 . -260) (undo-tree-id27617 . -260) (undo-tree-id27618 . -260) (undo-tree-id27619 . -260) (undo-tree-id27620 . -260) (undo-tree-id27621 . -260) (undo-tree-id27622 . -260) (undo-tree-id27623 . -260) (undo-tree-id27624 . -260) (undo-tree-id27625 . -260) (undo-tree-id27626 . -260) (undo-tree-id27627 . -268) (undo-tree-id27628 . -268) (undo-tree-id27629 . -268) (undo-tree-id27630 . -268) (undo-tree-id27631 . -268) (undo-tree-id27632 . -268) (undo-tree-id27633 . -268) (undo-tree-id27634 . -268) (undo-tree-id27635 . -268) (undo-tree-id27636 . -268) (undo-tree-id27637 . -268) (undo-tree-id27638 . -268) (undo-tree-id27639 . -268) (undo-tree-id27640 . -268) (undo-tree-id27641 . -268) (undo-tree-id27642 . -268) (undo-tree-id27643 . -276) (undo-tree-id27644 . -276) (undo-tree-id27645 . -276) (undo-tree-id27646 . -276) (undo-tree-id27647 . -276) (undo-tree-id27648 . -276) (undo-tree-id27649 . -276) (undo-tree-id27650 . -276) (undo-tree-id27651 . -276) (undo-tree-id27652 . -276) (undo-tree-id27653 . -276) (undo-tree-id27654 . -276) (undo-tree-id27655 . -276) (undo-tree-id27656 . -276) (undo-tree-id27657 . -276) (undo-tree-id27658 . -276) (undo-tree-id27659 . -281) (undo-tree-id27660 . -281) (undo-tree-id27661 . -281) (undo-tree-id27662 . -281) (undo-tree-id27663 . -281) (undo-tree-id27664 . -281) (undo-tree-id27665 . -281) (undo-tree-id27666 . -281) (undo-tree-id27667 . -281) (undo-tree-id27668 . -281) (undo-tree-id27669 . -281) (undo-tree-id27670 . -281) (undo-tree-id27671 . -281) (undo-tree-id27672 . -281) (undo-tree-id27673 . -281) (undo-tree-id27674 . -281) (undo-tree-id27675 . -285) (undo-tree-id27676 . -285) (undo-tree-id27677 . -285) (undo-tree-id27678 . -285) (undo-tree-id27679 . -285) (undo-tree-id27680 . -285) (undo-tree-id27681 . -285) (undo-tree-id27682 . -285) (undo-tree-id27683 . -285) (undo-tree-id27684 . -285) (undo-tree-id27685 . -285) (undo-tree-id27686 . -285) (undo-tree-id27687 . -285) (undo-tree-id27688 . -285) (undo-tree-id27689 . -285) (undo-tree-id27690 . -285) (undo-tree-id27691 . -291) (undo-tree-id27692 . -291) (undo-tree-id27693 . -291) (undo-tree-id27694 . -291) (undo-tree-id27695 . -291) (undo-tree-id27696 . -291) (undo-tree-id27697 . -291) (undo-tree-id27698 . -291) (undo-tree-id27699 . -291) (undo-tree-id27700 . -291) (undo-tree-id27701 . -291) (undo-tree-id27702 . -291) (undo-tree-id27703 . -291) (undo-tree-id27704 . -291) (undo-tree-id27705 . -291) (undo-tree-id27706 . -291) (undo-tree-id27707 . -300) (undo-tree-id27708 . -300) (undo-tree-id27709 . -300) (undo-tree-id27710 . -300) (undo-tree-id27711 . -300) (undo-tree-id27712 . -300) (undo-tree-id27713 . -300) (undo-tree-id27714 . -300) (undo-tree-id27715 . -300) (undo-tree-id27716 . -300) (undo-tree-id27717 . -300) (undo-tree-id27718 . -300) (undo-tree-id27719 . -300) (undo-tree-id27720 . -300) (undo-tree-id27721 . -300) (undo-tree-id27722 . -300) (undo-tree-id27723 . -300) (undo-tree-id27724 . -300) (undo-tree-id27725 . -300) (undo-tree-id27726 . -300) (undo-tree-id27727 . -300) (undo-tree-id27728 . -309) (undo-tree-id27729 . -309) (undo-tree-id27730 . -309) (undo-tree-id27731 . -309) (undo-tree-id27732 . -309) (undo-tree-id27733 . -309) (undo-tree-id27734 . -309) (undo-tree-id27735 . -309) (undo-tree-id27736 . -309) (undo-tree-id27737 . -309) (undo-tree-id27738 . -309) (undo-tree-id27739 . -309) (undo-tree-id27740 . -309) (undo-tree-id27741 . -309) (undo-tree-id27742 . -309) (undo-tree-id27743 . -309) (undo-tree-id27744 . -310) (undo-tree-id27745 . -310) (undo-tree-id27746 . -310) (undo-tree-id27747 . -310) (undo-tree-id27748 . -310) (undo-tree-id27749 . -310) (undo-tree-id27750 . -310) (undo-tree-id27751 . -310) (undo-tree-id27752 . -310) (undo-tree-id27753 . -310) (undo-tree-id27754 . -310) (undo-tree-id27755 . -310) (undo-tree-id27756 . -310) (undo-tree-id27757 . -310) (undo-tree-id27758 . -310) (undo-tree-id27759 . -310) (undo-tree-id27760 . -310) (undo-tree-id27761 . -310) (undo-tree-id27762 . -310) (undo-tree-id27763 . -310) (undo-tree-id27764 . -310) (undo-tree-id27765 . -310) (undo-tree-id27766 . -310) (undo-tree-id27767 . -310) (undo-tree-id27768 . -310) (undo-tree-id27769 . -310) (undo-tree-id27770 . -311) (undo-tree-id27771 . -311) (undo-tree-id27772 . -311) (undo-tree-id27773 . -311) (undo-tree-id27774 . -311) (undo-tree-id27775 . -311) (undo-tree-id27776 . -311) (undo-tree-id27777 . -311) (undo-tree-id27778 . -311) (undo-tree-id27779 . -311) (undo-tree-id27780 . -311) (undo-tree-id27781 . -311) (undo-tree-id27782 . -311) (undo-tree-id27783 . -311) (undo-tree-id27784 . -311) (undo-tree-id27785 . -311) (undo-tree-id27786 . -311) (undo-tree-id27787 . -311) (undo-tree-id27788 . -311) (undo-tree-id27789 . -311) (undo-tree-id27790 . -311) (undo-tree-id27791 . -311) (undo-tree-id27792 . -311) (undo-tree-id27793 . -311) (undo-tree-id27794 . -311) (undo-tree-id27795 . -311) (undo-tree-id27796 . -311) (undo-tree-id27797 . -311) (undo-tree-id27798 . -311) (undo-tree-id27799 . -311) (undo-tree-id27800 . -311) (undo-tree-id27801 . -311) (undo-tree-id27802 . -311) (undo-tree-id27803 . -311) (undo-tree-id27804 . -311) (undo-tree-id27805 . -311) (undo-tree-id27806 . -311) (undo-tree-id27807 . -311) (undo-tree-id27808 . -311) (undo-tree-id27809 . -311) (undo-tree-id27810 . -311) (undo-tree-id27811 . -311) (undo-tree-id27812 . -311) (undo-tree-id27813 . -311) (undo-tree-id27814 . -311) (undo-tree-id27815 . -311) (undo-tree-id27816 . -311) (undo-tree-id27817 . -311) (undo-tree-id27818 . -311) (undo-tree-id27819 . -311) (undo-tree-id27820 . -311) (undo-tree-id27821 . -311) (undo-tree-id27822 . -311) (undo-tree-id27823 . -311) (undo-tree-id27824 . -311) (undo-tree-id27825 . -311) (undo-tree-id27826 . -311) (undo-tree-id27827 . -311) (undo-tree-id27828 . -311) (undo-tree-id27829 . -311) (undo-tree-id27830 . -311) (undo-tree-id27831 . -311) (undo-tree-id27832 . -311) (undo-tree-id27833 . -311) (undo-tree-id27834 . -311) (undo-tree-id27835 . -311) (undo-tree-id27836 . -311) (undo-tree-id27837 . -311) (undo-tree-id27838 . -311) (undo-tree-id27839 . -311) (undo-tree-id27840 . -311) (undo-tree-id27841 . -311) (undo-tree-id27842 . -311) (undo-tree-id27843 . -311) (undo-tree-id27844 . -311) (undo-tree-id27845 . -311) (undo-tree-id27846 . -244) (2999 . 3243) (#(" and RNN #2 receives the context vectors as input. The context vectors are computed via a weighted sum over the inputs, where the weights are the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 .The next subsection discusses how we compute these attention weights." 0 40 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 40 41 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 41 91 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 91 93 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 93 101 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 101 104 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 104 105 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 105 110 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 110 111 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 111 116 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 116 118 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 118 119 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 119 137 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 137 138 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 138 240 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 240 241 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3066) (undo-tree-id27847 . -1) (undo-tree-id27848 . -3) (undo-tree-id27849 . -3) (undo-tree-id27850 . -3) (undo-tree-id27851 . -3) (undo-tree-id27852 . -3) (undo-tree-id27853 . -3) (undo-tree-id27854 . -3) (undo-tree-id27855 . -3) (undo-tree-id27856 . -3) (undo-tree-id27857 . -3) (undo-tree-id27858 . -3) (undo-tree-id27859 . -3) (undo-tree-id27860 . -3) (undo-tree-id27861 . -3) (undo-tree-id27862 . -3) (undo-tree-id27863 . -3) (undo-tree-id27864 . -3) (undo-tree-id27865 . -3) (undo-tree-id27866 . -3) (undo-tree-id27867 . -3) (undo-tree-id27868 . -3) (undo-tree-id27869 . -3) (undo-tree-id27870 . -3) (undo-tree-id27871 . -3) (undo-tree-id27872 . -3) (undo-tree-id27873 . -3) (undo-tree-id27874 . -3) (undo-tree-id27875 . -3) (undo-tree-id27876 . -3) (undo-tree-id27877 . -3) (undo-tree-id27878 . -3) (undo-tree-id27879 . -1) (undo-tree-id27880 . -1) (undo-tree-id27881 . -1) (undo-tree-id27882 . -1) (undo-tree-id27883 . -1) (undo-tree-id27884 . -1) (undo-tree-id27885 . -1) (undo-tree-id27886 . -1) (undo-tree-id27887 . -1) (undo-tree-id27888 . -1) (undo-tree-id27889 . -1) (undo-tree-id27890 . -1) (undo-tree-id27891 . -1) (undo-tree-id27892 . -1) (undo-tree-id27893 . -1) (undo-tree-id27894 . -1) (undo-tree-id27895 . -1) (undo-tree-id27896 . -1) (undo-tree-id27897 . -1) (undo-tree-id27898 . -1) (undo-tree-id27899 . -1) (undo-tree-id27900 . -1) (undo-tree-id27901 . -1) (undo-tree-id27902 . -1) (undo-tree-id27903 . -1) (undo-tree-id27904 . -1) (undo-tree-id27905 . -1) (undo-tree-id27906 . -1) (undo-tree-id27907 . -1) (undo-tree-id27908 . -1) (undo-tree-id27909 . -1) (undo-tree-id27910 . -1) (undo-tree-id27911 . -1) (undo-tree-id27912 . -1) (undo-tree-id27913 . -1) (undo-tree-id27914 . -1) (undo-tree-id27915 . -1) (undo-tree-id27916 . -1) (undo-tree-id27917 . -1) (undo-tree-id27918 . -1) (undo-tree-id27919 . -1) (undo-tree-id27920 . -1) (undo-tree-id27921 . -1) (undo-tree-id27922 . -1) (undo-tree-id27923 . -1) 3067) nil (25774 27156 635811 960000) 0 nil])
([nil nil ((#("," 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3065) (undo-tree-id27500 . -1) (undo-tree-id27501 . -1)) nil (25774 27156 633739 503000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3065) (undo-tree-id27481 . -1) (undo-tree-id27482 . -1) (undo-tree-id27483 . -1) (undo-tree-id27484 . -1) (undo-tree-id27485 . -1) (undo-tree-id27486 . -1) (undo-tree-id27487 . -1) (undo-tree-id27488 . -1) (undo-tree-id27489 . -1) (undo-tree-id27490 . -1) (undo-tree-id27491 . -1) (undo-tree-id27492 . -1) (undo-tree-id27493 . -1) (undo-tree-id27494 . -1) (undo-tree-id27495 . -1) (undo-tree-id27496 . -1) (undo-tree-id27497 . -1) (undo-tree-id27498 . -1) (undo-tree-id27499 . -1) 3066 (3065 . 3066)) nil (25774 27156 633735 937000) 0 nil])
([nil nil ((#("and " 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3069) (undo-tree-id27479 . -3) (undo-tree-id27480 . -4)) nil (25774 27156 633717 756000) 0 nil])
([nil nil ((3067 . 3309) (#("- . The context vectors are computed via a weighted sum over the inputs, where the weights are the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 .The next subsection discusses how we compute these attention weights.

- RNN #2 receives the context vectors as input" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 44 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 44 46 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 46 54 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 54 57 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 57 58 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 58 63 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 63 64 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 64 69 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 69 71 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 71 72 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 72 90 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 90 91 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 91 193 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 193 194 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 194 195 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 195 196 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 196 197 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 197 198 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 198 233 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 233 234 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 234 242 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 3067) (undo-tree-id29561 . 44) (undo-tree-id29562 . -201) (undo-tree-id29563 . -198) (undo-tree-id29564 . -242) (undo-tree-id29565 . -198) (undo-tree-id29566 . -198) (undo-tree-id29567 . -198) (undo-tree-id29568 . -198) (undo-tree-id29569 . -198) (undo-tree-id29570 . -198) (undo-tree-id29571 . -198) (undo-tree-id29572 . -198) (undo-tree-id29573 . -198) (undo-tree-id29574 . -198) (undo-tree-id29575 . -198) (undo-tree-id29576 . -198) (undo-tree-id29577 . -198) (undo-tree-id29578 . -198) (undo-tree-id29579 . -198) (undo-tree-id29580 . -198) (undo-tree-id29581 . -198) (undo-tree-id29582 . -198) (undo-tree-id29583 . -198) (undo-tree-id29584 . -198) (undo-tree-id29585 . -198) (undo-tree-id29586 . -198) (undo-tree-id29587 . -198) (undo-tree-id29588 . -198) (undo-tree-id29589 . -198) (undo-tree-id29590 . -198) (undo-tree-id29591 . -198) (undo-tree-id29592 . -198) (undo-tree-id29593 . -198) (undo-tree-id29594 . -200) (undo-tree-id29595 . -200) (undo-tree-id29596 . -200) (undo-tree-id29597 . -200) (undo-tree-id29598 . -200) (undo-tree-id29599 . -200) (undo-tree-id29600 . -200) (undo-tree-id29601 . -200) (undo-tree-id29602 . -200) (undo-tree-id29603 . -200) (undo-tree-id29604 . -200) (undo-tree-id29605 . -200) (undo-tree-id29606 . -200) (undo-tree-id29607 . -200) (undo-tree-id29608 . -200) (undo-tree-id29609 . -200) (undo-tree-id29610 . -202) (undo-tree-id29611 . -202) (undo-tree-id29612 . -202) (undo-tree-id29613 . -202) (undo-tree-id29614 . -202) (undo-tree-id29615 . -202) (undo-tree-id29616 . -202) (undo-tree-id29617 . -202) (undo-tree-id29618 . -202) (undo-tree-id29619 . -202) (undo-tree-id29620 . -202) (undo-tree-id29621 . -202) (undo-tree-id29622 . -202) (undo-tree-id29623 . -202) (undo-tree-id29624 . -202) (undo-tree-id29625 . -202) (undo-tree-id29626 . -203) (undo-tree-id29627 . -203) (undo-tree-id29628 . -203) (undo-tree-id29629 . -203) (undo-tree-id29630 . -203) (undo-tree-id29631 . -203) (undo-tree-id29632 . -203) (undo-tree-id29633 . -203) (undo-tree-id29634 . -203) (undo-tree-id29635 . -203) (undo-tree-id29636 . -203) (undo-tree-id29637 . -203) (undo-tree-id29638 . -203) (undo-tree-id29639 . -203) (undo-tree-id29640 . -203) (undo-tree-id29641 . -203) (undo-tree-id29642 . -212) (undo-tree-id29643 . -212) (undo-tree-id29644 . -212) (undo-tree-id29645 . -212) (undo-tree-id29646 . -212) (undo-tree-id29647 . -212) (undo-tree-id29648 . -212) (undo-tree-id29649 . -212) (undo-tree-id29650 . -212) (undo-tree-id29651 . -212) (undo-tree-id29652 . -212) (undo-tree-id29653 . -212) (undo-tree-id29654 . -212) (undo-tree-id29655 . -212) (undo-tree-id29656 . -212) (undo-tree-id29657 . -212) (undo-tree-id29658 . -216) (undo-tree-id29659 . -216) (undo-tree-id29660 . -216) (undo-tree-id29661 . -216) (undo-tree-id29662 . -216) (undo-tree-id29663 . -216) (undo-tree-id29664 . -216) (undo-tree-id29665 . -216) (undo-tree-id29666 . -216) (undo-tree-id29667 . -216) (undo-tree-id29668 . -216) (undo-tree-id29669 . -216) (undo-tree-id29670 . -216) (undo-tree-id29671 . -216) (undo-tree-id29672 . -216) (undo-tree-id29673 . -216) (undo-tree-id29674 . -224) (undo-tree-id29675 . -224) (undo-tree-id29676 . -224) (undo-tree-id29677 . -224) (undo-tree-id29678 . -224) (undo-tree-id29679 . -224) (undo-tree-id29680 . -224) (undo-tree-id29681 . -224) (undo-tree-id29682 . -224) (undo-tree-id29683 . -224) (undo-tree-id29684 . -224) (undo-tree-id29685 . -224) (undo-tree-id29686 . -224) (undo-tree-id29687 . -224) (undo-tree-id29688 . -224) (undo-tree-id29689 . -224) (undo-tree-id29690 . -232) (undo-tree-id29691 . -232) (undo-tree-id29692 . -232) (undo-tree-id29693 . -232) (undo-tree-id29694 . -232) (undo-tree-id29695 . -232) (undo-tree-id29696 . -232) (undo-tree-id29697 . -232) (undo-tree-id29698 . -232) (undo-tree-id29699 . -232) (undo-tree-id29700 . -232) (undo-tree-id29701 . -232) (undo-tree-id29702 . -232) (undo-tree-id29703 . -232) (undo-tree-id29704 . -232) (undo-tree-id29705 . -232) (undo-tree-id29706 . -232) (undo-tree-id29707 . -232) (undo-tree-id29708 . -232) (undo-tree-id29709 . -232) (undo-tree-id29710 . -232) (undo-tree-id29711 . -235) (undo-tree-id29712 . -235) (undo-tree-id29713 . -235) (undo-tree-id29714 . -235) (undo-tree-id29715 . -235) (undo-tree-id29716 . -235) (undo-tree-id29717 . -235) (undo-tree-id29718 . -235) (undo-tree-id29719 . -235) (undo-tree-id29720 . -235) (undo-tree-id29721 . -235) (undo-tree-id29722 . -235) (undo-tree-id29723 . -235) (undo-tree-id29724 . -235) (undo-tree-id29725 . -235) (undo-tree-id29726 . -235) (undo-tree-id29727 . -235) (undo-tree-id29728 . -235) (undo-tree-id29729 . -235) (undo-tree-id29730 . -235) (undo-tree-id29731 . -235) (undo-tree-id29732 . -241) (undo-tree-id29733 . -241) (undo-tree-id29734 . -241) (undo-tree-id29735 . -241) (undo-tree-id29736 . -241) (undo-tree-id29737 . -241) (undo-tree-id29738 . -241) (undo-tree-id29739 . -241) (undo-tree-id29740 . -241) (undo-tree-id29741 . -241) (undo-tree-id29742 . -241) (undo-tree-id29743 . -241) (undo-tree-id29744 . -241) (undo-tree-id29745 . -241) (undo-tree-id29746 . -241) (undo-tree-id29747 . -241) (undo-tree-id29748 . -241) (undo-tree-id29749 . -241) (undo-tree-id29750 . -241) (undo-tree-id29751 . -241) (undo-tree-id29752 . -241) (undo-tree-id29753 . -241) (undo-tree-id29754 . -241) (undo-tree-id29755 . -241) (undo-tree-id29756 . -241) (undo-tree-id29757 . -241) (undo-tree-id29758 . -242) (undo-tree-id29759 . -242) (undo-tree-id29760 . -242) (undo-tree-id29761 . -242) (undo-tree-id29762 . -242) (undo-tree-id29763 . -242) (undo-tree-id29764 . -242) (undo-tree-id29765 . -242) (undo-tree-id29766 . -242) (undo-tree-id29767 . -242) (undo-tree-id29768 . -242) (undo-tree-id29769 . -242) (undo-tree-id29770 . -242) (undo-tree-id29771 . -242) (undo-tree-id29772 . -242) (undo-tree-id29773 . -242) (undo-tree-id29774 . -242) (undo-tree-id29775 . -242) (undo-tree-id29776 . -242) (undo-tree-id29777 . -242) (undo-tree-id29778 . -242) (undo-tree-id29779 . -242) (undo-tree-id29780 . -242) (undo-tree-id29781 . -242) (undo-tree-id29782 . -242) (undo-tree-id29783 . -242) (undo-tree-id29784 . -242) (undo-tree-id29785 . -242) (undo-tree-id29786 . -242) (undo-tree-id29787 . -242) (undo-tree-id29788 . -242) (undo-tree-id29789 . -242) (undo-tree-id29790 . -242) (undo-tree-id29791 . -242) (undo-tree-id29792 . -196) (3067 . 3263) (#(". The context vectors are computed via a weighted sum over the inputs, where the weights are the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 .The next subsection discusses how we compute these attention weights." 0 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 42 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 44 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 52 55 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 55 56 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 56 61 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 61 62 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 62 67 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 67 69 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 69 70 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 70 88 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 88 89 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 89 191 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 191 192 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3113) (t 25774 27156 667436 570000)) nil (25774 27164 887085 523000) 0 nil])
([nil nil ((#(". " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3117) (undo-tree-id29558 . 2) (undo-tree-id29559 . -1) (undo-tree-id29560 . -2)) nil (25774 27164 886332 732000) 0 nil])
([nil nil ((#("𝛼𝛼𝑖𝑖𝑖𝑖" 0 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3230) (undo-tree-id30520 . 1) (undo-tree-id30521 . -5) (undo-tree-id30522 . -4) (undo-tree-id30523 . -5) (undo-tree-id30524 . -5) (undo-tree-id30525 . -5) (undo-tree-id30526 . -5) (undo-tree-id30527 . -5) (undo-tree-id30528 . -5) (undo-tree-id30529 . -5) (undo-tree-id30530 . -5) (undo-tree-id30531 . -5) (undo-tree-id30532 . -5) (undo-tree-id30533 . -5) (undo-tree-id30534 . -5) (undo-tree-id30535 . -5) (undo-tree-id30536 . -5) (undo-tree-id30537 . -5) (undo-tree-id30538 . -5) (undo-tree-id30539 . -5) (undo-tree-id30540 . -5) (undo-tree-id30541 . -5) (undo-tree-id30542 . -5) (undo-tree-id30543 . -5) (undo-tree-id30544 . -5) (undo-tree-id30545 . -5) (undo-tree-id30546 . -5) (undo-tree-id30547 . -5) (undo-tree-id30548 . -5) (undo-tree-id30549 . -5) (undo-tree-id30550 . -5) (undo-tree-id30551 . -5) (undo-tree-id30552 . -5) (undo-tree-id30553 . -5) (undo-tree-id30554 . -5) (undo-tree-id30555 . -5) (undo-tree-id30556 . -5) (undo-tree-id30557 . -5) (undo-tree-id30558 . -5) (undo-tree-id30559 . -5) (undo-tree-id30560 . -5) (undo-tree-id30561 . -5) (undo-tree-id30562 . -5) (undo-tree-id30563 . -5) (undo-tree-id30564 . -5) (undo-tree-id30565 . -5) (undo-tree-id30566 . -5) (undo-tree-id30567 . -5) (undo-tree-id30568 . -5) (undo-tree-id30569 . -5) (undo-tree-id30570 . -5) (undo-tree-id30571 . -5) (undo-tree-id30572 . -5) (undo-tree-id30573 . -5) (undo-tree-id30574 . -5) (undo-tree-id30575 . -5) (undo-tree-id30576 . -5) (undo-tree-id30577 . -4) (undo-tree-id30578 . -4) (undo-tree-id30579 . -4) (undo-tree-id30580 . -4) (undo-tree-id30581 . -4) (undo-tree-id30582 . -4) (undo-tree-id30583 . -4) (undo-tree-id30584 . -4) (undo-tree-id30585 . -4) (undo-tree-id30586 . -4) (undo-tree-id30587 . -4) (undo-tree-id30588 . -4) (undo-tree-id30589 . -4) (undo-tree-id30590 . -4) (undo-tree-id30591 . -4) (undo-tree-id30592 . -4) (undo-tree-id30593 . -4) (undo-tree-id30594 . -4) (undo-tree-id30595 . -4) (undo-tree-id30596 . -4) (undo-tree-id30597 . -4) (undo-tree-id30598 . -4) (undo-tree-id30599 . -4) (undo-tree-id30600 . -4) (undo-tree-id30601 . -4) (undo-tree-id30602 . -4) (undo-tree-id30603 . -4) (undo-tree-id30604 . -4) (undo-tree-id30605 . -4) (undo-tree-id30606 . -4) (undo-tree-id30607 . -4) (undo-tree-id30608 . -4) (undo-tree-id30609 . -4) (undo-tree-id30610 . -4) (undo-tree-id30611 . -4) (undo-tree-id30612 . -4) (undo-tree-id30613 . -4) (undo-tree-id30614 . -4) (undo-tree-id30615 . -4) (undo-tree-id30616 . -4) (undo-tree-id30617 . -4) (undo-tree-id30618 . -4) (undo-tree-id30619 . -4) (undo-tree-id30620 . -4) (undo-tree-id30621 . -4) (undo-tree-id30622 . -4) (undo-tree-id30623 . -4) (undo-tree-id30624 . -4) (undo-tree-id30625 . -4) (undo-tree-id30626 . -4) (undo-tree-id30627 . -4) (undo-tree-id30628 . -4) (undo-tree-id30629 . -4) (undo-tree-id30630 . -6) 3234 (t 25774 27164 919592 388000)) nil (25774 27178 392111 637000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3229) (undo-tree-id30379 . -1) (undo-tree-id30380 . -1) (undo-tree-id30381 . -1) (undo-tree-id30382 . -1) (undo-tree-id30383 . -1) (undo-tree-id30384 . -1) (undo-tree-id30385 . -1) (undo-tree-id30386 . -1) (undo-tree-id30387 . -1) (undo-tree-id30388 . -1) (undo-tree-id30389 . -1) (undo-tree-id30390 . -1) (undo-tree-id30391 . -1) (undo-tree-id30392 . -1) (undo-tree-id30393 . -1) (undo-tree-id30394 . -1) (undo-tree-id30395 . -1) (undo-tree-id30396 . -1) (undo-tree-id30397 . -1) (undo-tree-id30398 . -1) (undo-tree-id30399 . -1) (undo-tree-id30400 . -1) (undo-tree-id30401 . -1) (undo-tree-id30402 . -1) (undo-tree-id30403 . -1) (undo-tree-id30404 . -1) (undo-tree-id30405 . -1) (undo-tree-id30406 . -1) (undo-tree-id30407 . -1) (undo-tree-id30408 . -1) (undo-tree-id30409 . -1) (undo-tree-id30410 . -1) (undo-tree-id30411 . -1) (undo-tree-id30412 . -1) (undo-tree-id30413 . -1) (undo-tree-id30414 . -1) (undo-tree-id30415 . -1) (undo-tree-id30416 . -1) (undo-tree-id30417 . -1) (undo-tree-id30418 . -1) (undo-tree-id30419 . -1) (undo-tree-id30420 . -1) (undo-tree-id30421 . -1) (undo-tree-id30422 . -1) (undo-tree-id30423 . -1) (undo-tree-id30424 . -1) (undo-tree-id30425 . -1) (undo-tree-id30426 . -1) (undo-tree-id30427 . -1) (undo-tree-id30428 . -1) (undo-tree-id30429 . -1) (undo-tree-id30430 . -1) (undo-tree-id30431 . -1) (undo-tree-id30432 . -1) (undo-tree-id30433 . -1) (undo-tree-id30434 . -1) (undo-tree-id30435 . -1) (undo-tree-id30436 . -1) (undo-tree-id30437 . -1) (undo-tree-id30438 . -1) (undo-tree-id30439 . -1) (undo-tree-id30440 . -1) (undo-tree-id30441 . -1) (undo-tree-id30442 . -1) (undo-tree-id30443 . -1) (undo-tree-id30444 . -1) (undo-tree-id30445 . -1) (undo-tree-id30446 . -1) (undo-tree-id30447 . -1) (undo-tree-id30448 . -1) (undo-tree-id30449 . -1) (undo-tree-id30450 . -1) (undo-tree-id30451 . -1) (undo-tree-id30452 . -1) (undo-tree-id30453 . -1) (undo-tree-id30454 . -1) (undo-tree-id30455 . -1) (undo-tree-id30456 . -1) (undo-tree-id30457 . -1) (undo-tree-id30458 . -1) (undo-tree-id30459 . -1) (undo-tree-id30460 . -1) (undo-tree-id30461 . -1) (undo-tree-id30462 . -1) (undo-tree-id30463 . -1) (undo-tree-id30464 . -1) (undo-tree-id30465 . -1) (undo-tree-id30466 . -1) (undo-tree-id30467 . -1) (undo-tree-id30468 . -1) (undo-tree-id30469 . -1) (undo-tree-id30470 . -1) (undo-tree-id30471 . -1) (undo-tree-id30472 . -1) (undo-tree-id30473 . -1) (undo-tree-id30474 . -1) (undo-tree-id30475 . -1) (undo-tree-id30476 . -1) (undo-tree-id30477 . -1) (undo-tree-id30478 . -1) (undo-tree-id30479 . -1) (undo-tree-id30480 . -1) (undo-tree-id30481 . -1) (undo-tree-id30482 . -1) (undo-tree-id30483 . -1) (undo-tree-id30484 . -1) (undo-tree-id30485 . -1) (undo-tree-id30486 . -1) (undo-tree-id30487 . -1) (undo-tree-id30488 . -1) (undo-tree-id30489 . -1) (undo-tree-id30490 . -1) (undo-tree-id30491 . -1) (undo-tree-id30492 . -1) (undo-tree-id30493 . -1) (undo-tree-id30494 . -1) (undo-tree-id30495 . -1) (undo-tree-id30496 . -1) (undo-tree-id30497 . -1) (undo-tree-id30498 . -1) (undo-tree-id30499 . -1) (undo-tree-id30500 . -1) (undo-tree-id30501 . -1) (undo-tree-id30502 . -1) (undo-tree-id30503 . -1) (undo-tree-id30504 . -1) (undo-tree-id30505 . -1) (undo-tree-id30506 . -1) (undo-tree-id30507 . -1) (undo-tree-id30508 . -1) (undo-tree-id30509 . -1) (undo-tree-id30510 . -1) (undo-tree-id30511 . -1) (undo-tree-id30512 . -1) (undo-tree-id30513 . -1) (undo-tree-id30514 . -1) (undo-tree-id30515 . -1) (undo-tree-id30516 . -1) (undo-tree-id30517 . -1) (undo-tree-id30518 . -1) (undo-tree-id30519 . -1)) nil (25774 27178 392025 400000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3229) (undo-tree-id30376 . 1) (undo-tree-id30377 . -1) (undo-tree-id30378 . -1)) nil (25774 27178 391814 266000) 0 nil])
([nil nil ((3115 . 3303) (#("- The next subsection discusses how we compute these attention weights.

- The context vectors are computed via a weighted sum over the inputs, where the weights are the attention weights." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 70 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 70 71 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 71 72 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 72 73 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 73 74 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 74 75 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 75 115 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 115 117 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 117 125 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 125 128 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 128 129 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 129 134 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 134 135 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 135 140 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 140 142 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 142 143 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 143 161 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 161 162 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 162 188 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 3115) (undo-tree-id29793 . 1) (undo-tree-id29794 . -187) (undo-tree-id29795 . -187) (undo-tree-id29796 . -75) (undo-tree-id29797 . -188) (undo-tree-id29798 . -75) (undo-tree-id29799 . -75) (undo-tree-id29800 . -75) (undo-tree-id29801 . -75) (undo-tree-id29802 . -75) (undo-tree-id29803 . -75) (undo-tree-id29804 . -75) (undo-tree-id29805 . -75) (undo-tree-id29806 . -75) (undo-tree-id29807 . -75) (undo-tree-id29808 . -75) (undo-tree-id29809 . -75) (undo-tree-id29810 . -75) (undo-tree-id29811 . -75) (undo-tree-id29812 . -75) (undo-tree-id29813 . -75) (undo-tree-id29814 . -75) (undo-tree-id29815 . -75) (undo-tree-id29816 . -75) (undo-tree-id29817 . -75) (undo-tree-id29818 . -75) (undo-tree-id29819 . -75) (undo-tree-id29820 . -75) (undo-tree-id29821 . -75) (undo-tree-id29822 . -75) (undo-tree-id29823 . -75) (undo-tree-id29824 . -75) (undo-tree-id29825 . -75) (undo-tree-id29826 . -75) (undo-tree-id29827 . -77) (undo-tree-id29828 . -77) (undo-tree-id29829 . -77) (undo-tree-id29830 . -77) (undo-tree-id29831 . -77) (undo-tree-id29832 . -77) (undo-tree-id29833 . -77) (undo-tree-id29834 . -77) (undo-tree-id29835 . -77) (undo-tree-id29836 . -77) (undo-tree-id29837 . -77) (undo-tree-id29838 . -77) (undo-tree-id29839 . -77) (undo-tree-id29840 . -77) (undo-tree-id29841 . -77) (undo-tree-id29842 . -77) (undo-tree-id29843 . -85) (undo-tree-id29844 . -85) (undo-tree-id29845 . -85) (undo-tree-id29846 . -85) (undo-tree-id29847 . -85) (undo-tree-id29848 . -85) (undo-tree-id29849 . -85) (undo-tree-id29850 . -85) (undo-tree-id29851 . -85) (undo-tree-id29852 . -85) (undo-tree-id29853 . -85) (undo-tree-id29854 . -85) (undo-tree-id29855 . -85) (undo-tree-id29856 . -85) (undo-tree-id29857 . -85) (undo-tree-id29858 . -85) (undo-tree-id29859 . -85) (undo-tree-id29860 . -85) (undo-tree-id29861 . -85) (undo-tree-id29862 . -85) (undo-tree-id29863 . -85) (undo-tree-id29864 . -85) (undo-tree-id29865 . -85) (undo-tree-id29866 . -85) (undo-tree-id29867 . -85) (undo-tree-id29868 . -85) (undo-tree-id29869 . -93) (undo-tree-id29870 . -93) (undo-tree-id29871 . -93) (undo-tree-id29872 . -93) (undo-tree-id29873 . -93) (undo-tree-id29874 . -93) (undo-tree-id29875 . -93) (undo-tree-id29876 . -93) (undo-tree-id29877 . -93) (undo-tree-id29878 . -93) (undo-tree-id29879 . -93) (undo-tree-id29880 . -93) (undo-tree-id29881 . -93) (undo-tree-id29882 . -93) (undo-tree-id29883 . -93) (undo-tree-id29884 . -93) (undo-tree-id29885 . -93) (undo-tree-id29886 . -93) (undo-tree-id29887 . -93) (undo-tree-id29888 . -93) (undo-tree-id29889 . -93) (undo-tree-id29890 . -93) (undo-tree-id29891 . -93) (undo-tree-id29892 . -93) (undo-tree-id29893 . -93) (undo-tree-id29894 . -93) (undo-tree-id29895 . -97) (undo-tree-id29896 . -97) (undo-tree-id29897 . -97) (undo-tree-id29898 . -97) (undo-tree-id29899 . -97) (undo-tree-id29900 . -97) (undo-tree-id29901 . -97) (undo-tree-id29902 . -97) (undo-tree-id29903 . -97) (undo-tree-id29904 . -97) (undo-tree-id29905 . -97) (undo-tree-id29906 . -106) (undo-tree-id29907 . -106) (undo-tree-id29908 . -106) (undo-tree-id29909 . -106) (undo-tree-id29910 . -106) (undo-tree-id29911 . -106) (undo-tree-id29912 . -106) (undo-tree-id29913 . -106) (undo-tree-id29914 . -106) (undo-tree-id29915 . -106) (undo-tree-id29916 . -106) (undo-tree-id29917 . -110) (undo-tree-id29918 . -110) (undo-tree-id29919 . -110) (undo-tree-id29920 . -110) (undo-tree-id29921 . -110) (undo-tree-id29922 . -110) (undo-tree-id29923 . -110) (undo-tree-id29924 . -110) (undo-tree-id29925 . -110) (undo-tree-id29926 . -110) (undo-tree-id29927 . -110) (undo-tree-id29928 . -112) (undo-tree-id29929 . -112) (undo-tree-id29930 . -112) (undo-tree-id29931 . -112) (undo-tree-id29932 . -112) (undo-tree-id29933 . -112) (undo-tree-id29934 . -112) (undo-tree-id29935 . -112) (undo-tree-id29936 . -112) (undo-tree-id29937 . -112) (undo-tree-id29938 . -112) (undo-tree-id29939 . -121) (undo-tree-id29940 . -121) (undo-tree-id29941 . -121) (undo-tree-id29942 . -121) (undo-tree-id29943 . -121) (undo-tree-id29944 . -121) (undo-tree-id29945 . -121) (undo-tree-id29946 . -121) (undo-tree-id29947 . -121) (undo-tree-id29948 . -121) (undo-tree-id29949 . -121) (undo-tree-id29950 . -125) (undo-tree-id29951 . -125) (undo-tree-id29952 . -125) (undo-tree-id29953 . -125) (undo-tree-id29954 . -125) (undo-tree-id29955 . -125) (undo-tree-id29956 . -125) (undo-tree-id29957 . -125) (undo-tree-id29958 . -125) (undo-tree-id29959 . -125) (undo-tree-id29960 . -125) (undo-tree-id29961 . -130) (undo-tree-id29962 . -130) (undo-tree-id29963 . -130) (undo-tree-id29964 . -130) (undo-tree-id29965 . -130) (undo-tree-id29966 . -130) (undo-tree-id29967 . -130) (undo-tree-id29968 . -130) (undo-tree-id29969 . -130) (undo-tree-id29970 . -130) (undo-tree-id29971 . -130) (undo-tree-id29972 . -134) (undo-tree-id29973 . -134) (undo-tree-id29974 . -134) (undo-tree-id29975 . -134) (undo-tree-id29976 . -134) (undo-tree-id29977 . -134) (undo-tree-id29978 . -134) (undo-tree-id29979 . -134) (undo-tree-id29980 . -134) (undo-tree-id29981 . -134) (undo-tree-id29982 . -134) (undo-tree-id29983 . -141) (undo-tree-id29984 . -141) (undo-tree-id29985 . -141) (undo-tree-id29986 . -141) (undo-tree-id29987 . -141) (undo-tree-id29988 . -141) (undo-tree-id29989 . -141) (undo-tree-id29990 . -141) (undo-tree-id29991 . -141) (undo-tree-id29992 . -141) (undo-tree-id29993 . -141) (undo-tree-id29994 . -141) (undo-tree-id29995 . -141) (undo-tree-id29996 . -141) (undo-tree-id29997 . -141) (undo-tree-id29998 . -141) (undo-tree-id29999 . -141) (undo-tree-id30000 . -141) (undo-tree-id30001 . -141) (undo-tree-id30002 . -141) (undo-tree-id30003 . -141) (undo-tree-id30004 . -142) (undo-tree-id30005 . -142) (undo-tree-id30006 . -142) (undo-tree-id30007 . -142) (undo-tree-id30008 . -142) (undo-tree-id30009 . -142) (undo-tree-id30010 . -142) (undo-tree-id30011 . -142) (undo-tree-id30012 . -142) (undo-tree-id30013 . -142) (undo-tree-id30014 . -142) (undo-tree-id30015 . -142) (undo-tree-id30016 . -142) (undo-tree-id30017 . -142) (undo-tree-id30018 . -142) (undo-tree-id30019 . -142) (undo-tree-id30020 . -142) (undo-tree-id30021 . -142) (undo-tree-id30022 . -142) (undo-tree-id30023 . -142) (undo-tree-id30024 . -142) (undo-tree-id30025 . -142) (undo-tree-id30026 . -142) (undo-tree-id30027 . -142) (undo-tree-id30028 . -142) (undo-tree-id30029 . -142) (undo-tree-id30030 . -148) (undo-tree-id30031 . -148) (undo-tree-id30032 . -148) (undo-tree-id30033 . -148) (undo-tree-id30034 . -148) (undo-tree-id30035 . -148) (undo-tree-id30036 . -148) (undo-tree-id30037 . -148) (undo-tree-id30038 . -148) (undo-tree-id30039 . -148) (undo-tree-id30040 . -148) (undo-tree-id30041 . -148) (undo-tree-id30042 . -148) (undo-tree-id30043 . -148) (undo-tree-id30044 . -148) (undo-tree-id30045 . -148) (undo-tree-id30046 . -152) (undo-tree-id30047 . -152) (undo-tree-id30048 . -152) (undo-tree-id30049 . -152) (undo-tree-id30050 . -152) (undo-tree-id30051 . -152) (undo-tree-id30052 . -152) (undo-tree-id30053 . -152) (undo-tree-id30054 . -152) (undo-tree-id30055 . -152) (undo-tree-id30056 . -152) (undo-tree-id30057 . -152) (undo-tree-id30058 . -152) (undo-tree-id30059 . -152) (undo-tree-id30060 . -152) (undo-tree-id30061 . -152) (undo-tree-id30062 . -160) (undo-tree-id30063 . -160) (undo-tree-id30064 . -160) (undo-tree-id30065 . -160) (undo-tree-id30066 . -160) (undo-tree-id30067 . -160) (undo-tree-id30068 . -160) (undo-tree-id30069 . -160) (undo-tree-id30070 . -160) (undo-tree-id30071 . -160) (undo-tree-id30072 . -160) (undo-tree-id30073 . -160) (undo-tree-id30074 . -160) (undo-tree-id30075 . -160) (undo-tree-id30076 . -160) (undo-tree-id30077 . -160) (undo-tree-id30078 . -164) (undo-tree-id30079 . -164) (undo-tree-id30080 . -164) (undo-tree-id30081 . -164) (undo-tree-id30082 . -164) (undo-tree-id30083 . -164) (undo-tree-id30084 . -164) (undo-tree-id30085 . -164) (undo-tree-id30086 . -164) (undo-tree-id30087 . -164) (undo-tree-id30088 . -164) (undo-tree-id30089 . -164) (undo-tree-id30090 . -164) (undo-tree-id30091 . -164) (undo-tree-id30092 . -164) (undo-tree-id30093 . -164) (undo-tree-id30094 . -168) (undo-tree-id30095 . -168) (undo-tree-id30096 . -168) (undo-tree-id30097 . -168) (undo-tree-id30098 . -168) (undo-tree-id30099 . -168) (undo-tree-id30100 . -168) (undo-tree-id30101 . -168) (undo-tree-id30102 . -168) (undo-tree-id30103 . -168) (undo-tree-id30104 . -168) (undo-tree-id30105 . -168) (undo-tree-id30106 . -168) (undo-tree-id30107 . -168) (undo-tree-id30108 . -168) (undo-tree-id30109 . -168) (undo-tree-id30110 . -178) (undo-tree-id30111 . -178) (undo-tree-id30112 . -178) (undo-tree-id30113 . -178) (undo-tree-id30114 . -178) (undo-tree-id30115 . -178) (undo-tree-id30116 . -178) (undo-tree-id30117 . -178) (undo-tree-id30118 . -178) (undo-tree-id30119 . -178) (undo-tree-id30120 . -178) (undo-tree-id30121 . -178) (undo-tree-id30122 . -178) (undo-tree-id30123 . -178) (undo-tree-id30124 . -178) (undo-tree-id30125 . -178) (undo-tree-id30126 . -186) (undo-tree-id30127 . -186) (undo-tree-id30128 . -186) (undo-tree-id30129 . -186) (undo-tree-id30130 . -186) (undo-tree-id30131 . -186) (undo-tree-id30132 . -186) (undo-tree-id30133 . -186) (undo-tree-id30134 . -186) (undo-tree-id30135 . -186) (undo-tree-id30136 . -186) (undo-tree-id30137 . -186) (undo-tree-id30138 . -186) (undo-tree-id30139 . -186) (undo-tree-id30140 . -186) (undo-tree-id30141 . -186) (undo-tree-id30142 . -186) (undo-tree-id30143 . -186) (undo-tree-id30144 . -186) (undo-tree-id30145 . -186) (undo-tree-id30146 . -186) (undo-tree-id30147 . -186) (undo-tree-id30148 . -186) (undo-tree-id30149 . -186) (undo-tree-id30150 . -186) (undo-tree-id30151 . -186) (undo-tree-id30152 . -187) (undo-tree-id30153 . -187) (undo-tree-id30154 . -187) (undo-tree-id30155 . -187) (undo-tree-id30156 . -187) (undo-tree-id30157 . -187) (undo-tree-id30158 . -187) (undo-tree-id30159 . -187) (undo-tree-id30160 . -187) (undo-tree-id30161 . -187) (undo-tree-id30162 . -187) (undo-tree-id30163 . -187) (undo-tree-id30164 . -187) (undo-tree-id30165 . -187) (undo-tree-id30166 . -187) (undo-tree-id30167 . -187) (undo-tree-id30168 . -187) (undo-tree-id30169 . -187) (undo-tree-id30170 . -187) (undo-tree-id30171 . -187) (undo-tree-id30172 . -187) (undo-tree-id30173 . -187) (undo-tree-id30174 . -187) (undo-tree-id30175 . -187) (undo-tree-id30176 . -187) (undo-tree-id30177 . -187) (undo-tree-id30178 . -187) (undo-tree-id30179 . -187) (undo-tree-id30180 . -187) (undo-tree-id30181 . -187) (undo-tree-id30182 . -187) (undo-tree-id30183 . -187) (undo-tree-id30184 . -187) (undo-tree-id30185 . -187) (undo-tree-id30186 . -187) (undo-tree-id30187 . -187) (undo-tree-id30188 . -187) (undo-tree-id30189 . -187) (undo-tree-id30190 . -187) (undo-tree-id30191 . -187) (undo-tree-id30192 . -187) (undo-tree-id30193 . -187) (undo-tree-id30194 . -187) (undo-tree-id30195 . -187) (undo-tree-id30196 . -187) (undo-tree-id30197 . -187) (undo-tree-id30198 . -187) (undo-tree-id30199 . -187) (undo-tree-id30200 . -187) (undo-tree-id30201 . -187) (undo-tree-id30202 . -187) (undo-tree-id30203 . -187) (undo-tree-id30204 . -187) (undo-tree-id30205 . -187) (undo-tree-id30206 . -187) (undo-tree-id30207 . -187) (undo-tree-id30208 . -187) (undo-tree-id30209 . -187) (undo-tree-id30210 . -187) (undo-tree-id30211 . -187) (undo-tree-id30212 . -187) (undo-tree-id30213 . -187) (undo-tree-id30214 . -187) (undo-tree-id30215 . -187) (undo-tree-id30216 . -187) (undo-tree-id30217 . -187) (undo-tree-id30218 . -187) (undo-tree-id30219 . -187) (undo-tree-id30220 . -187) (undo-tree-id30221 . -187) (undo-tree-id30222 . -187) (undo-tree-id30223 . -187) (undo-tree-id30224 . -187) (undo-tree-id30225 . -187) (undo-tree-id30226 . -187) (undo-tree-id30227 . -187) (undo-tree-id30228 . -187) (undo-tree-id30229 . -187) (undo-tree-id30230 . -187) (undo-tree-id30231 . -187) (undo-tree-id30232 . -187) (undo-tree-id30233 . -187) (undo-tree-id30234 . -187) (undo-tree-id30235 . -187) (undo-tree-id30236 . -187) (undo-tree-id30237 . -187) (undo-tree-id30238 . -187) (undo-tree-id30239 . -187) (undo-tree-id30240 . -187) (undo-tree-id30241 . -187) (undo-tree-id30242 . -187) (undo-tree-id30243 . -187) (undo-tree-id30244 . -187) (undo-tree-id30245 . -187) (undo-tree-id30246 . -187) (undo-tree-id30247 . -187) (undo-tree-id30248 . -187) (undo-tree-id30249 . -187) (undo-tree-id30250 . -187) (undo-tree-id30251 . -187) (undo-tree-id30252 . -187) (undo-tree-id30253 . -187) (undo-tree-id30254 . -187) (undo-tree-id30255 . -187) (undo-tree-id30256 . -187) (undo-tree-id30257 . -187) (undo-tree-id30258 . -187) (undo-tree-id30259 . -187) (undo-tree-id30260 . -187) (undo-tree-id30261 . -187) (undo-tree-id30262 . -187) (undo-tree-id30263 . -187) (undo-tree-id30264 . -187) (undo-tree-id30265 . -187) (undo-tree-id30266 . -187) (undo-tree-id30267 . -187) (undo-tree-id30268 . -187) (undo-tree-id30269 . -187) (undo-tree-id30270 . -187) (undo-tree-id30271 . -187) (undo-tree-id30272 . -187) (undo-tree-id30273 . -187) (undo-tree-id30274 . -187) (undo-tree-id30275 . -187) (undo-tree-id30276 . -187) (undo-tree-id30277 . -187) (undo-tree-id30278 . -187) (undo-tree-id30279 . -187) (undo-tree-id30280 . -187) (undo-tree-id30281 . -187) (undo-tree-id30282 . -187) (undo-tree-id30283 . -187) (undo-tree-id30284 . -187) (undo-tree-id30285 . -187) (undo-tree-id30286 . -187) (undo-tree-id30287 . -187) (undo-tree-id30288 . -187) (undo-tree-id30289 . -187) (undo-tree-id30290 . -187) (undo-tree-id30291 . -187) (undo-tree-id30292 . -187) (undo-tree-id30293 . -187) (undo-tree-id30294 . -187) (undo-tree-id30295 . -187) (undo-tree-id30296 . -187) (undo-tree-id30297 . -187) (undo-tree-id30298 . -187) (undo-tree-id30299 . -187) (undo-tree-id30300 . -187) (undo-tree-id30301 . -187) (undo-tree-id30302 . -187) (undo-tree-id30303 . -187) (undo-tree-id30304 . -187) (undo-tree-id30305 . -187) (undo-tree-id30306 . -187) (undo-tree-id30307 . -187) (undo-tree-id30308 . -187) (undo-tree-id30309 . -187) (undo-tree-id30310 . -187) (undo-tree-id30311 . -187) (undo-tree-id30312 . -187) (undo-tree-id30313 . -187) (undo-tree-id30314 . -187) (undo-tree-id30315 . -187) (undo-tree-id30316 . -187) (undo-tree-id30317 . -187) (undo-tree-id30318 . -187) (undo-tree-id30319 . -187) (undo-tree-id30320 . -187) (undo-tree-id30321 . -187) (undo-tree-id30322 . -187) (undo-tree-id30323 . -187) (undo-tree-id30324 . -187) (undo-tree-id30325 . -187) (undo-tree-id30326 . -187) (undo-tree-id30327 . -187) (undo-tree-id30328 . -187) (undo-tree-id30329 . -187) (undo-tree-id30330 . -187) (undo-tree-id30331 . -187) (undo-tree-id30332 . -187) (undo-tree-id30333 . -187) (undo-tree-id30334 . -187) (undo-tree-id30335 . -187) (undo-tree-id30336 . -187) (undo-tree-id30337 . -187) (undo-tree-id30338 . -187) (undo-tree-id30339 . -187) (undo-tree-id30340 . -187) (undo-tree-id30341 . -187) (undo-tree-id30342 . -187) (undo-tree-id30343 . -187) (undo-tree-id30344 . -187) (undo-tree-id30345 . -187) (undo-tree-id30346 . -187) (undo-tree-id30347 . -187) (undo-tree-id30348 . -187) (undo-tree-id30349 . -187) (undo-tree-id30350 . -187) (undo-tree-id30351 . -188) (undo-tree-id30352 . -188) (undo-tree-id30353 . -188) (undo-tree-id30354 . -188) (undo-tree-id30355 . -188) (undo-tree-id30356 . -188) (undo-tree-id30357 . -188) (undo-tree-id30358 . -188) (undo-tree-id30359 . -188) (undo-tree-id30360 . -188) (undo-tree-id30361 . -188) (undo-tree-id30362 . -188) (undo-tree-id30363 . -188) (undo-tree-id30364 . -188) (undo-tree-id30365 . -188) (undo-tree-id30366 . -188) (undo-tree-id30367 . -188) (undo-tree-id30368 . -188) (undo-tree-id30369 . -188) (undo-tree-id30370 . -188) (undo-tree-id30371 . -188) (undo-tree-id30372 . -188) (undo-tree-id30373 . -188) (undo-tree-id30374 . -188) (undo-tree-id30375 . -73) (3115 . 3188) (#("The next subsection discusses how we compute these attention weights." 0 68 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 68 69 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3230)) nil (25774 27178 391783 109000) 0 nil])
([nil nil ((#("- The next subsection discusses how we compute these attention weights.
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 70 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 70 71 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 71 72 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3232) (undo-tree-id30631 . 70) (undo-tree-id30632 . -71) (undo-tree-id30633 . 1) (undo-tree-id30634 . -1) (undo-tree-id30635 . -1) (undo-tree-id30636 . -1) (undo-tree-id30637 . -1) (undo-tree-id30638 . -1) (undo-tree-id30639 . -1) (undo-tree-id30640 . -1) (undo-tree-id30641 . -1) (undo-tree-id30642 . -1) (undo-tree-id30643 . -1) (undo-tree-id30644 . -1) (undo-tree-id30645 . -1) (undo-tree-id30646 . -1) (undo-tree-id30647 . -1) (undo-tree-id30648 . -1) (undo-tree-id30649 . -1) (undo-tree-id30650 . -1) (undo-tree-id30651 . -1) (undo-tree-id30652 . -1) (undo-tree-id30653 . -1) (undo-tree-id30654 . -1) (undo-tree-id30655 . -1) (undo-tree-id30656 . -1) (undo-tree-id30657 . -1) (undo-tree-id30658 . -1) (undo-tree-id30659 . -1) (undo-tree-id30660 . -1) (undo-tree-id30661 . -1) (undo-tree-id30662 . -1) (undo-tree-id30663 . -1) (undo-tree-id30664 . -1) (undo-tree-id30665 . -1) (undo-tree-id30666 . -1) (undo-tree-id30667 . -1) (undo-tree-id30668 . -1) (undo-tree-id30669 . -1) (undo-tree-id30670 . -1) (undo-tree-id30671 . -1) (undo-tree-id30672 . -1) (undo-tree-id30673 . -1) (undo-tree-id30674 . -1) (undo-tree-id30675 . -1) (undo-tree-id30676 . -1) (undo-tree-id30677 . -1) (undo-tree-id30678 . -72) 3233 (t 25774 27178 423848 587000)) nil (25774 27183 937490 403000) 0 nil])
([nil nil ((#("Consider " 0 9 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2280) (undo-tree-id30697 . -8) (undo-tree-id30698 . -9) (t 25774 27183 971954 270000)) nil (25774 27217 225553 407000) 0 nil])
([nil nil ((#("as the main RNN that " 0 21 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2287) (undo-tree-id30679 . -20) (undo-tree-id30680 . -20) (undo-tree-id30681 . -20) (undo-tree-id30682 . -20) (undo-tree-id30683 . -1) (undo-tree-id30684 . -21) (undo-tree-id30685 . -20) (undo-tree-id30686 . -1) (undo-tree-id30687 . -5) (undo-tree-id30688 . -10) (undo-tree-id30689 . 9) (undo-tree-id30690 . -15) (undo-tree-id30691 . -14) (undo-tree-id30692 . -19) (undo-tree-id30693 . -21) (undo-tree-id30694 . -20) (undo-tree-id30695 . -20) (undo-tree-id30696 . -21) 2307) nil (25774 27235 583543 202000) 0 nil])
([nil nil ((3202 . 3204) (t 25774 27217 260593 431000)) nil (25774 27366 485075 373000) 0 nil] [nil nil ((#("- Compute the context vector of the ith input as a weighted sum
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 63 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 63 64 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2377) (undo-tree-id30699 . -63) (undo-tree-id30700 . -47) (undo-tree-id30701 . -8) (undo-tree-id30702 . -12) (undo-tree-id30703 . -20) (undo-tree-id30704 . -27) (undo-tree-id30705 . -30) (undo-tree-id30706 . -34) (undo-tree-id30707 . 28) (undo-tree-id30708 . -39) (undo-tree-id30709 . -38) (undo-tree-id30710 . -38) (undo-tree-id30711 . -38) (undo-tree-id30712 . -38) (undo-tree-id30713 . -38) (undo-tree-id30714 . -38) (undo-tree-id30715 . -44) (undo-tree-id30716 . -47) (undo-tree-id30717 . -47) (undo-tree-id30718 . -47) (undo-tree-id30719 . -47) (undo-tree-id30720 . -47) (undo-tree-id30721 . -47) (undo-tree-id30722 . -47) (undo-tree-id30723 . -47) (undo-tree-id30724 . -47) (undo-tree-id30725 . -64) 2424 (t 25774 27217 260593 431000)) ((2377 . 2441)) (25774 27235 583098 668000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4265 . 4266) (nil fontified nil 4163 . 4266) (nil fontified nil 4066 . 4163) (nil fontified nil 3964 . 4066) (nil fontified nil 3866 . 3964) (nil fontified nil 3760 . 3866) (nil fontified nil 3646 . 3760) (nil fontified nil 3540 . 3646) (nil fontified nil 3433 . 3540) (nil fontified nil 3318 . 3433) (nil fontified nil 3204 . 3318) (3204 . 4266) 3203) nil (25774 27366 485073 736000) 0 nil])
nil
([nil nil ((3759 . 3760) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -3759) (undo-tree-id31155 . -1) (3645 . 3646) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -3645) (undo-tree-id31156 . -1) (3539 . 3540) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -3539) (undo-tree-id31157 . -1) (3432 . 3433) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -3432) (undo-tree-id31158 . -1) (3317 . 3318) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -3317) (undo-tree-id31159 . -1) (undo-tree-id31160 . -1) (undo-tree-id31161 . -1) (undo-tree-id31162 . -1) (undo-tree-id31163 . -1) (undo-tree-id31164 . -1) (undo-tree-id31165 . -1) (undo-tree-id31166 . -1) (undo-tree-id31167 . -1) (undo-tree-id31168 . -1) (undo-tree-id31169 . -1) (undo-tree-id31170 . -1) (undo-tree-id31171 . -1) (undo-tree-id31172 . -1) (undo-tree-id31173 . -1) (undo-tree-id31174 . -1) (undo-tree-id31175 . -1) 3204) nil (25774 27366 485068 372000) 0 nil])
([nil nil ((4162 . 4163) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -4162) (undo-tree-id31135 . -1) (4065 . 4066) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -4065) (undo-tree-id31136 . -1) (3963 . 3964) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -3963) (undo-tree-id31137 . -1) (3865 . 3866) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -3865) (undo-tree-id31138 . -1) (undo-tree-id31139 . -1) (undo-tree-id31140 . -1) (undo-tree-id31141 . -1) (undo-tree-id31142 . -1) (undo-tree-id31143 . -1) (undo-tree-id31144 . -1) (undo-tree-id31145 . -1) (undo-tree-id31146 . -1) (undo-tree-id31147 . -1) (undo-tree-id31148 . -1) (undo-tree-id31149 . -1) (undo-tree-id31150 . -1) (undo-tree-id31151 . -1) (undo-tree-id31152 . -1) (undo-tree-id31153 . -1) (undo-tree-id31154 . -1) 3759) nil (25774 27366 485047 37000) 0 nil])
([nil nil ((#("In Figure 16" 0 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3204) (undo-tree-id31133 . -11) (undo-tree-id31134 . -12)) nil (25774 27366 485030 226000) 0 nil])
([nil nil ((#(".3, we saw that the hidden state 𝑠𝑠 (𝑖𝑖𝑖 depends on the previous hidden state 𝑠𝑠 (𝑖𝑖𝑖𝑖𝑖, the previous target word 𝑦𝑦 (𝑖𝑖𝑖𝑖𝑖, and the context vector 𝑐𝑐 (𝑖𝑖𝑖, which are used to generate the predicted output 𝑜𝑜 (𝑖𝑖𝑖 for target word 𝑦𝑦 (𝑖𝑖𝑖 at time i" 0 101 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 101 102 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 102 216 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 216 217 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 217 246 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3204) (undo-tree-id31081 . -245) (undo-tree-id31082 . -101) (undo-tree-id31083 . -101) (undo-tree-id31084 . -101) (undo-tree-id31085 . -101) (undo-tree-id31086 . -101) (undo-tree-id31087 . -101) (undo-tree-id31088 . -101) (undo-tree-id31089 . -101) (undo-tree-id31090 . -101) (undo-tree-id31091 . -101) (undo-tree-id31092 . -101) (undo-tree-id31093 . -101) (undo-tree-id31094 . -101) (undo-tree-id31095 . -101) (undo-tree-id31096 . -101) (undo-tree-id31097 . -101) (undo-tree-id31098 . -101) (undo-tree-id31099 . -101) (undo-tree-id31100 . -101) (undo-tree-id31101 . -101) (undo-tree-id31102 . -101) (undo-tree-id31103 . -101) (undo-tree-id31104 . -101) (undo-tree-id31105 . -101) (undo-tree-id31106 . -101) (undo-tree-id31107 . -101) (undo-tree-id31108 . -101) (undo-tree-id31109 . -101) (undo-tree-id31110 . -101) (undo-tree-id31111 . -101) (undo-tree-id31112 . -101) (undo-tree-id31113 . -101) (undo-tree-id31114 . -101) (undo-tree-id31115 . -216) (undo-tree-id31116 . -216) (undo-tree-id31117 . -216) (undo-tree-id31118 . -216) (undo-tree-id31119 . -216) (undo-tree-id31120 . -216) (undo-tree-id31121 . -216) (undo-tree-id31122 . -216) (undo-tree-id31123 . -216) (undo-tree-id31124 . -216) (undo-tree-id31125 . -216) (undo-tree-id31126 . -216) (undo-tree-id31127 . -216) (undo-tree-id31128 . -216) (undo-tree-id31129 . -216) (undo-tree-id31130 . -216) (undo-tree-id31131 . -216) (undo-tree-id31132 . -246)) nil (25774 27366 485025 419000) 0 nil])
([nil nil ((#(". " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3204) (undo-tree-id31079 . -1) (undo-tree-id31080 . -2)) nil (25774 27366 483940 273000) 0 nil])
([nil nil ((#("Note that the sequence vector 𝒚𝒚 refers to the sequence vector representing the correct translation of input sequence 𝒙𝒙 that is available during training. During training, the true label (word) 𝑦𝑦 (𝑖𝑖𝑖 is fed into the next state 𝑠𝑠 (𝑖𝑖𝑖𝑖𝑖; since this true label information is not available for prediction (inference), we feed the predicted output 𝑜𝑜 (𝑖𝑖𝑖 instead, as depicted in the previous figure. To summarize what we have just discussed above, the attention-based RNN consists of two RNNs. RNN #1 prepares context vectors from the input sequence elements, and RNN #2 receives the context vectors as input. The context vectors are computed via a weighted sum over the inputs, where the weights are the attention weights 𝛼𝛼𝑖𝑖𝑖𝑖 .The next subsection discusses how we compute these attention weights." 0 75 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 75 76 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 76 181 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 181 182 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 182 239 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 239 250 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 250 295 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 295 296 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 296 401 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 401 402 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 402 496 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 496 498 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 498 499 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 499 500 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 500 601 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 601 602 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 602 698 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 698 699 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 699 801 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 801 802 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3204) (undo-tree-id30726 . -801) (undo-tree-id30727 . -698) (undo-tree-id30728 . -801) (undo-tree-id30729 . -801) (undo-tree-id30730 . -801) (undo-tree-id30731 . -801) (undo-tree-id30732 . -801) (undo-tree-id30733 . -801) (undo-tree-id30734 . -801) (undo-tree-id30735 . -801) (undo-tree-id30736 . -801) (undo-tree-id30737 . -801) (undo-tree-id30738 . -801) (undo-tree-id30739 . -801) (undo-tree-id30740 . -801) (undo-tree-id30741 . -801) (undo-tree-id30742 . -801) (undo-tree-id30743 . -801) (undo-tree-id30744 . -801) (undo-tree-id30745 . -801) (undo-tree-id30746 . -801) (undo-tree-id30747 . -801) (undo-tree-id30748 . -801) (undo-tree-id30749 . -801) (undo-tree-id30750 . -801) (undo-tree-id30751 . -801) (undo-tree-id30752 . -801) (undo-tree-id30753 . -801) (undo-tree-id30754 . -801) (undo-tree-id30755 . -801) (undo-tree-id30756 . -801) (undo-tree-id30757 . -801) (undo-tree-id30758 . -801) (undo-tree-id30759 . -801) (undo-tree-id30760 . -801) (undo-tree-id30761 . -801) (undo-tree-id30762 . -801) (undo-tree-id30763 . -801) (undo-tree-id30764 . -801) (undo-tree-id30765 . -801) (undo-tree-id30766 . -801) (undo-tree-id30767 . -801) (undo-tree-id30768 . -801) (undo-tree-id30769 . -801) (undo-tree-id30770 . -801) (undo-tree-id30771 . -801) (undo-tree-id30772 . -801) (undo-tree-id30773 . -801) (undo-tree-id30774 . -801) (undo-tree-id30775 . -801) (undo-tree-id30776 . -801) (undo-tree-id30777 . -801) (undo-tree-id30778 . -801) (undo-tree-id30779 . -801) (undo-tree-id30780 . -801) (undo-tree-id30781 . -801) (undo-tree-id30782 . -801) (undo-tree-id30783 . -801) (undo-tree-id30784 . -801) (undo-tree-id30785 . -801) (undo-tree-id30786 . -801) (undo-tree-id30787 . -801) (undo-tree-id30788 . -801) (undo-tree-id30789 . -801) (undo-tree-id30790 . -801) (undo-tree-id30791 . -801) (undo-tree-id30792 . -801) (undo-tree-id30793 . -801) (undo-tree-id30794 . -801) (undo-tree-id30795 . -801) (undo-tree-id30796 . -801) (undo-tree-id30797 . -801) (undo-tree-id30798 . -801) (undo-tree-id30799 . -801) (undo-tree-id30800 . -801) (undo-tree-id30801 . -801) (undo-tree-id30802 . -801) (undo-tree-id30803 . -801) (undo-tree-id30804 . -801) (undo-tree-id30805 . -801) (undo-tree-id30806 . -801) (undo-tree-id30807 . -801) (undo-tree-id30808 . -801) (undo-tree-id30809 . -801) (undo-tree-id30810 . -801) (undo-tree-id30811 . -801) (undo-tree-id30812 . -801) (undo-tree-id30813 . -801) (undo-tree-id30814 . -801) (undo-tree-id30815 . -801) (undo-tree-id30816 . -801) (undo-tree-id30817 . -801) (undo-tree-id30818 . -801) (undo-tree-id30819 . -801) (undo-tree-id30820 . -801) (undo-tree-id30821 . -801) (undo-tree-id30822 . -801) (undo-tree-id30823 . -801) (undo-tree-id30824 . -801) (undo-tree-id30825 . -801) (undo-tree-id30826 . -801) (undo-tree-id30827 . -801) (undo-tree-id30828 . -801) (undo-tree-id30829 . -801) (undo-tree-id30830 . -801) (undo-tree-id30831 . -801) (undo-tree-id30832 . -801) (undo-tree-id30833 . -801) (undo-tree-id30834 . -801) (undo-tree-id30835 . -801) (undo-tree-id30836 . -801) (undo-tree-id30837 . -801) (undo-tree-id30838 . -801) (undo-tree-id30839 . -801) (undo-tree-id30840 . -801) (undo-tree-id30841 . -801) (undo-tree-id30842 . -801) (undo-tree-id30843 . -801) (undo-tree-id30844 . -801) (undo-tree-id30845 . -801) (undo-tree-id30846 . -801) (undo-tree-id30847 . -801) (undo-tree-id30848 . -801) (undo-tree-id30849 . -801) (undo-tree-id30850 . -801) (undo-tree-id30851 . -801) (undo-tree-id30852 . -801) (undo-tree-id30853 . -801) (undo-tree-id30854 . -801) (undo-tree-id30855 . -801) (undo-tree-id30856 . -801) (undo-tree-id30857 . -801) (undo-tree-id30858 . -801) (undo-tree-id30859 . -801) (undo-tree-id30860 . -801) (undo-tree-id30861 . -801) (undo-tree-id30862 . -801) (undo-tree-id30863 . -801) (undo-tree-id30864 . -801) (undo-tree-id30865 . -801) (undo-tree-id30866 . -801) (undo-tree-id30867 . -801) (undo-tree-id30868 . -801) (undo-tree-id30869 . -801) (undo-tree-id30870 . -801) (undo-tree-id30871 . -801) (undo-tree-id30872 . -801) (undo-tree-id30873 . -801) (undo-tree-id30874 . -801) (undo-tree-id30875 . -801) (undo-tree-id30876 . -801) (undo-tree-id30877 . -801) (undo-tree-id30878 . -801) (undo-tree-id30879 . -801) (undo-tree-id30880 . -801) (undo-tree-id30881 . -801) (undo-tree-id30882 . -801) (undo-tree-id30883 . -801) (undo-tree-id30884 . -801) (undo-tree-id30885 . -801) (undo-tree-id30886 . -801) (undo-tree-id30887 . -801) (undo-tree-id30888 . -801) (undo-tree-id30889 . -801) (undo-tree-id30890 . -801) (undo-tree-id30891 . -801) (undo-tree-id30892 . -801) (undo-tree-id30893 . -801) (undo-tree-id30894 . -801) (undo-tree-id30895 . -801) (undo-tree-id30896 . -801) (undo-tree-id30897 . -801) (undo-tree-id30898 . -801) (undo-tree-id30899 . -801) (undo-tree-id30900 . -801) (undo-tree-id30901 . -801) (undo-tree-id30902 . -801) (undo-tree-id30903 . -801) (undo-tree-id30904 . -801) (undo-tree-id30905 . -801) (undo-tree-id30906 . -801) (undo-tree-id30907 . -801) (undo-tree-id30908 . -801) (undo-tree-id30909 . -801) (undo-tree-id30910 . -801) (undo-tree-id30911 . -801) (undo-tree-id30912 . -801) (undo-tree-id30913 . -801) (undo-tree-id30914 . -801) (undo-tree-id30915 . -801) (undo-tree-id30916 . -801) (undo-tree-id30917 . -401) (undo-tree-id30918 . -401) (undo-tree-id30919 . -401) (undo-tree-id30920 . -401) (undo-tree-id30921 . -401) (undo-tree-id30922 . -401) (undo-tree-id30923 . -401) (undo-tree-id30924 . -401) (undo-tree-id30925 . -401) (undo-tree-id30926 . -401) (undo-tree-id30927 . -401) (undo-tree-id30928 . -401) (undo-tree-id30929 . -401) (undo-tree-id30930 . -401) (undo-tree-id30931 . -401) (undo-tree-id30932 . -401) (undo-tree-id30933 . -75) (undo-tree-id30934 . -75) (undo-tree-id30935 . -75) (undo-tree-id30936 . -75) (undo-tree-id30937 . -75) (undo-tree-id30938 . -75) (undo-tree-id30939 . -75) (undo-tree-id30940 . -75) (undo-tree-id30941 . -75) (undo-tree-id30942 . -75) (undo-tree-id30943 . -75) (undo-tree-id30944 . -75) (undo-tree-id30945 . -75) (undo-tree-id30946 . -75) (undo-tree-id30947 . -75) (undo-tree-id30948 . -75) (undo-tree-id30949 . -75) (undo-tree-id30950 . -181) (undo-tree-id30951 . -181) (undo-tree-id30952 . -181) (undo-tree-id30953 . -181) (undo-tree-id30954 . -181) (undo-tree-id30955 . -181) (undo-tree-id30956 . -181) (undo-tree-id30957 . -181) (undo-tree-id30958 . -181) (undo-tree-id30959 . -181) (undo-tree-id30960 . -181) (undo-tree-id30961 . -181) (undo-tree-id30962 . -181) (undo-tree-id30963 . -181) (undo-tree-id30964 . -181) (undo-tree-id30965 . -181) (undo-tree-id30966 . -181) (undo-tree-id30967 . -295) (undo-tree-id30968 . -295) (undo-tree-id30969 . -295) (undo-tree-id30970 . -295) (undo-tree-id30971 . -295) (undo-tree-id30972 . -295) (undo-tree-id30973 . -295) (undo-tree-id30974 . -295) (undo-tree-id30975 . -295) (undo-tree-id30976 . -295) (undo-tree-id30977 . -295) (undo-tree-id30978 . -295) (undo-tree-id30979 . -295) (undo-tree-id30980 . -295) (undo-tree-id30981 . -295) (undo-tree-id30982 . -295) (undo-tree-id30983 . -295) (undo-tree-id30984 . -295) (undo-tree-id30985 . -295) (undo-tree-id30986 . -295) (undo-tree-id30987 . -295) (undo-tree-id30988 . -295) (undo-tree-id30989 . -401) (undo-tree-id30990 . -401) (undo-tree-id30991 . -401) (undo-tree-id30992 . -401) (undo-tree-id30993 . -401) (undo-tree-id30994 . -401) (undo-tree-id30995 . -401) (undo-tree-id30996 . -401) (undo-tree-id30997 . -401) (undo-tree-id30998 . -401) (undo-tree-id30999 . -401) (undo-tree-id31000 . -401) (undo-tree-id31001 . -401) (undo-tree-id31002 . -401) (undo-tree-id31003 . -401) (undo-tree-id31004 . -401) (undo-tree-id31005 . -401) (undo-tree-id31006 . -401) (undo-tree-id31007 . -401) (undo-tree-id31008 . 306) (undo-tree-id31009 . -499) (undo-tree-id31010 . -499) (undo-tree-id31011 . -499) (undo-tree-id31012 . -499) (undo-tree-id31013 . -499) (undo-tree-id31014 . -499) (undo-tree-id31015 . -499) (undo-tree-id31016 . -499) (undo-tree-id31017 . -499) (undo-tree-id31018 . -499) (undo-tree-id31019 . -499) (undo-tree-id31020 . -499) (undo-tree-id31021 . -499) (undo-tree-id31022 . -499) (undo-tree-id31023 . -499) (undo-tree-id31024 . -499) (undo-tree-id31025 . -499) (undo-tree-id31026 . -499) (undo-tree-id31027 . -601) (undo-tree-id31028 . -601) (undo-tree-id31029 . -601) (undo-tree-id31030 . -601) (undo-tree-id31031 . -601) (undo-tree-id31032 . -601) (undo-tree-id31033 . -601) (undo-tree-id31034 . -601) (undo-tree-id31035 . -601) (undo-tree-id31036 . -601) (undo-tree-id31037 . -601) (undo-tree-id31038 . -601) (undo-tree-id31039 . -601) (undo-tree-id31040 . -601) (undo-tree-id31041 . -601) (undo-tree-id31042 . -601) (undo-tree-id31043 . -601) (undo-tree-id31044 . -801) (undo-tree-id31045 . -698) (undo-tree-id31046 . -698) (undo-tree-id31047 . -698) (undo-tree-id31048 . -698) (undo-tree-id31049 . -698) (undo-tree-id31050 . -698) (undo-tree-id31051 . -698) (undo-tree-id31052 . -698) (undo-tree-id31053 . -698) (undo-tree-id31054 . -698) (undo-tree-id31055 . -698) (undo-tree-id31056 . -698) (undo-tree-id31057 . -698) (undo-tree-id31058 . -698) (undo-tree-id31059 . -698) (undo-tree-id31060 . -698) (undo-tree-id31061 . -698) (undo-tree-id31062 . -698) (undo-tree-id31063 . -698) (undo-tree-id31064 . -698) (undo-tree-id31065 . -698) (undo-tree-id31066 . -698) (undo-tree-id31067 . -698) (undo-tree-id31068 . -698) (undo-tree-id31069 . -698) (undo-tree-id31070 . -698) (undo-tree-id31071 . -698) (undo-tree-id31072 . -698) (undo-tree-id31073 . -698) (undo-tree-id31074 . -698) (undo-tree-id31075 . -698) (undo-tree-id31076 . -601) (undo-tree-id31077 . -802) (undo-tree-id31078 . -802)) nil (25774 27366 483918 212000) 0 nil])
([nil nil ((3204 . 3205)) nil (25774 59584 136908 725000) 0 nil])
([nil nil ((#("has recently emerged that has been shown " 0 41 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 118) (undo-tree-id31371 . -40) (undo-tree-id31372 . -40) (undo-tree-id31373 . -40) (undo-tree-id31374 . -30) (undo-tree-id31375 . -30) (undo-tree-id31376 . -30) (undo-tree-id31377 . -30) (undo-tree-id31378 . -30) (undo-tree-id31379 . -30) (undo-tree-id31380 . -30) (undo-tree-id31381 . -30) (undo-tree-id31382 . -30) (undo-tree-id31383 . -30) (undo-tree-id31384 . -30) (undo-tree-id31385 . -30) (undo-tree-id31386 . -30) (undo-tree-id31387 . -30) (undo-tree-id31388 . -30) (undo-tree-id31389 . -30) (undo-tree-id31390 . -30) (undo-tree-id31391 . -30) (undo-tree-id31392 . -30) (undo-tree-id31393 . -30) (undo-tree-id31394 . -30) (undo-tree-id31395 . -30) (undo-tree-id31396 . -30) (undo-tree-id31397 . -30) (undo-tree-id31398 . -30) (undo-tree-id31399 . -30) (undo-tree-id31400 . -30) (undo-tree-id31401 . -40) (undo-tree-id31402 . -30) (undo-tree-id31403 . -30) (undo-tree-id31404 . -30) (undo-tree-id31405 . -30) (undo-tree-id31406 . -30) (undo-tree-id31407 . -30) (undo-tree-id31408 . -30) (undo-tree-id31409 . -30) (undo-tree-id31410 . -30) (undo-tree-id31411 . -30) (undo-tree-id31412 . -30) (undo-tree-id31413 . -30) (undo-tree-id31414 . -30) (undo-tree-id31415 . -30) (undo-tree-id31416 . -30) (undo-tree-id31417 . -30) (undo-tree-id31418 . -30) (undo-tree-id31419 . -30) (undo-tree-id31420 . -30) (undo-tree-id31421 . -30) (undo-tree-id31422 . -30) (undo-tree-id31423 . -30) (undo-tree-id31424 . -30) (undo-tree-id31425 . -30) (undo-tree-id31426 . -30) (undo-tree-id31427 . -30) (undo-tree-id31428 . -30) (undo-tree-id31429 . -30) (undo-tree-id31430 . -30) (undo-tree-id31431 . -30) (undo-tree-id31432 . -30) (undo-tree-id31433 . -30) (undo-tree-id31434 . -30) (undo-tree-id31435 . -30) (undo-tree-id31436 . -30) (undo-tree-id31437 . -30) (undo-tree-id31438 . -30) (undo-tree-id31439 . -30) (undo-tree-id31440 . -30) (undo-tree-id31441 . -30) (undo-tree-id31442 . -30) (undo-tree-id31443 . -30) (undo-tree-id31444 . -30) (undo-tree-id31445 . -30) (undo-tree-id31446 . -30) (undo-tree-id31447 . -30) (undo-tree-id31448 . -30) (undo-tree-id31449 . -4) (undo-tree-id31450 . -4) (undo-tree-id31451 . -4) (undo-tree-id31452 . -4) (undo-tree-id31453 . -4) (undo-tree-id31454 . -4) (undo-tree-id31455 . -4) (undo-tree-id31456 . -4) (undo-tree-id31457 . -4) (undo-tree-id31458 . -4) (undo-tree-id31459 . -4) (undo-tree-id31460 . -4) (undo-tree-id31461 . -4) (undo-tree-id31462 . -4) (undo-tree-id31463 . -4) (undo-tree-id31464 . -4) (undo-tree-id31465 . -4) (undo-tree-id31466 . -4) (undo-tree-id31467 . -4) (undo-tree-id31468 . -4) (undo-tree-id31469 . -4) (undo-tree-id31470 . -13) (undo-tree-id31471 . -13) (undo-tree-id31472 . -13) (undo-tree-id31473 . -13) (undo-tree-id31474 . -13) (undo-tree-id31475 . -13) (undo-tree-id31476 . -13) (undo-tree-id31477 . -13) (undo-tree-id31478 . -13) (undo-tree-id31479 . -13) (undo-tree-id31480 . -13) (undo-tree-id31481 . -13) (undo-tree-id31482 . -13) (undo-tree-id31483 . -13) (undo-tree-id31484 . -13) (undo-tree-id31485 . -13) (undo-tree-id31486 . -21) (undo-tree-id31487 . -21) (undo-tree-id31488 . -21) (undo-tree-id31489 . -21) (undo-tree-id31490 . -21) (undo-tree-id31491 . -21) (undo-tree-id31492 . -21) (undo-tree-id31493 . -21) (undo-tree-id31494 . -21) (undo-tree-id31495 . -21) (undo-tree-id31496 . -21) (undo-tree-id31497 . -21) (undo-tree-id31498 . -21) (undo-tree-id31499 . -21) (undo-tree-id31500 . -21) (undo-tree-id31501 . -21) (undo-tree-id31502 . -21) (undo-tree-id31503 . -21) (undo-tree-id31504 . -21) (undo-tree-id31505 . -21) (undo-tree-id31506 . -21) (undo-tree-id31507 . -21) (undo-tree-id31508 . -21) (undo-tree-id31509 . -21) (undo-tree-id31510 . -21) (undo-tree-id31511 . -21) (undo-tree-id31512 . -13) (undo-tree-id31513 . -13) (undo-tree-id31514 . -13) (undo-tree-id31515 . -13) (undo-tree-id31516 . -13) (undo-tree-id31517 . -13) (undo-tree-id31518 . -13) (undo-tree-id31519 . -13) (undo-tree-id31520 . -13) (undo-tree-id31521 . -13) (undo-tree-id31522 . -13) (undo-tree-id31523 . -13) (undo-tree-id31524 . -13) (undo-tree-id31525 . -13) (undo-tree-id31526 . -13) (undo-tree-id31527 . -13) (undo-tree-id31528 . -4) (undo-tree-id31529 . -4) (undo-tree-id31530 . -4) (undo-tree-id31531 . -4) (undo-tree-id31532 . -4) (undo-tree-id31533 . -4) (undo-tree-id31534 . -4) (undo-tree-id31535 . -4) (undo-tree-id31536 . -4) (undo-tree-id31537 . -4) (undo-tree-id31538 . -4) (undo-tree-id31539 . -4) (undo-tree-id31540 . -4) (undo-tree-id31541 . -4) (undo-tree-id31542 . -4) (undo-tree-id31543 . -4) (undo-tree-id31544 . -4) (undo-tree-id31545 . -4) (undo-tree-id31546 . -4) (undo-tree-id31547 . -4) (undo-tree-id31548 . -4) (undo-tree-id31549 . -41) (undo-tree-id31550 . -40) (undo-tree-id31551 . -2) (undo-tree-id31552 . -2) (undo-tree-id31553 . -2) (undo-tree-id31554 . -2) (undo-tree-id31555 . -2) (undo-tree-id31556 . -2) (undo-tree-id31557 . -2) (undo-tree-id31558 . -2) (undo-tree-id31559 . -2) (undo-tree-id31560 . -2) (undo-tree-id31561 . -2) (undo-tree-id31562 . -2) (undo-tree-id31563 . -2) (undo-tree-id31564 . -2) (undo-tree-id31565 . -2) (undo-tree-id31566 . -2) (undo-tree-id31567 . -2) (undo-tree-id31568 . -2) (undo-tree-id31569 . -2) (undo-tree-id31570 . -2) (undo-tree-id31571 . -2) (undo-tree-id31572 . -11) (undo-tree-id31573 . -11) (undo-tree-id31574 . -11) (undo-tree-id31575 . -11) (undo-tree-id31576 . -11) (undo-tree-id31577 . -11) (undo-tree-id31578 . -11) (undo-tree-id31579 . -11) (undo-tree-id31580 . -11) (undo-tree-id31581 . -11) (undo-tree-id31582 . -11) (undo-tree-id31583 . -11) (undo-tree-id31584 . -11) (undo-tree-id31585 . -11) (undo-tree-id31586 . -11) (undo-tree-id31587 . -11) (undo-tree-id31588 . -11) (undo-tree-id31589 . -11) (undo-tree-id31590 . -11) (undo-tree-id31591 . -11) (undo-tree-id31592 . -11) (undo-tree-id31593 . -19) (undo-tree-id31594 . -19) (undo-tree-id31595 . -19) (undo-tree-id31596 . -19) (undo-tree-id31597 . -19) (undo-tree-id31598 . -19) (undo-tree-id31599 . -19) (undo-tree-id31600 . -19) (undo-tree-id31601 . -19) (undo-tree-id31602 . -19) (undo-tree-id31603 . -19) (undo-tree-id31604 . -19) (undo-tree-id31605 . -19) (undo-tree-id31606 . -19) (undo-tree-id31607 . -19) (undo-tree-id31608 . -19) (undo-tree-id31609 . -19) (undo-tree-id31610 . -19) (undo-tree-id31611 . -19) (undo-tree-id31612 . -19) (undo-tree-id31613 . -19) (undo-tree-id31614 . -24) (undo-tree-id31615 . -24) (undo-tree-id31616 . -24) (undo-tree-id31617 . -24) (undo-tree-id31618 . -24) (undo-tree-id31619 . -24) (undo-tree-id31620 . -24) (undo-tree-id31621 . -24) (undo-tree-id31622 . -24) (undo-tree-id31623 . -24) (undo-tree-id31624 . -24) (undo-tree-id31625 . -24) (undo-tree-id31626 . -24) (undo-tree-id31627 . -24) (undo-tree-id31628 . -24) (undo-tree-id31629 . -24) (undo-tree-id31630 . -24) (undo-tree-id31631 . -24) (undo-tree-id31632 . -24) (undo-tree-id31633 . -24) (undo-tree-id31634 . -24) (undo-tree-id31635 . -28) (undo-tree-id31636 . -28) (undo-tree-id31637 . -28) (undo-tree-id31638 . -28) (undo-tree-id31639 . -28) (undo-tree-id31640 . -28) (undo-tree-id31641 . -28) (undo-tree-id31642 . -28) (undo-tree-id31643 . -28) (undo-tree-id31644 . -28) (undo-tree-id31645 . -28) (undo-tree-id31646 . -28) (undo-tree-id31647 . -28) (undo-tree-id31648 . -28) (undo-tree-id31649 . -28) (undo-tree-id31650 . -28) (undo-tree-id31651 . -28) (undo-tree-id31652 . -28) (undo-tree-id31653 . -28) (undo-tree-id31654 . -28) (undo-tree-id31655 . -28) (undo-tree-id31656 . -33) (undo-tree-id31657 . -33) (undo-tree-id31658 . -33) (undo-tree-id31659 . -33) (undo-tree-id31660 . -33) (undo-tree-id31661 . -33) (undo-tree-id31662 . -33) (undo-tree-id31663 . -33) (undo-tree-id31664 . -33) (undo-tree-id31665 . -33) (undo-tree-id31666 . -33) (undo-tree-id31667 . -33) (undo-tree-id31668 . -33) (undo-tree-id31669 . -33) (undo-tree-id31670 . -33) (undo-tree-id31671 . -33) (undo-tree-id31672 . -33) (undo-tree-id31673 . -33) (undo-tree-id31674 . -33) (undo-tree-id31675 . -33) (undo-tree-id31676 . -33) (undo-tree-id31677 . -39) (undo-tree-id31678 . -39) (undo-tree-id31679 . -39) (undo-tree-id31680 . -39) (undo-tree-id31681 . -39) (undo-tree-id31682 . -39) (undo-tree-id31683 . -39) (undo-tree-id31684 . -39) (undo-tree-id31685 . -39) (undo-tree-id31686 . -39) (undo-tree-id31687 . -39) (undo-tree-id31688 . -39) (undo-tree-id31689 . -39) (undo-tree-id31690 . -39) (undo-tree-id31691 . -39) (undo-tree-id31692 . -39) (undo-tree-id31693 . -39) (undo-tree-id31694 . -39) (undo-tree-id31695 . -39) (undo-tree-id31696 . -39) (undo-tree-id31697 . -39) (undo-tree-id31698 . -41) (undo-tree-id31699 . -41) (undo-tree-id31700 . -41) (undo-tree-id31701 . -41) (undo-tree-id31702 . -41) (undo-tree-id31703 . -41) (undo-tree-id31704 . -41) (undo-tree-id31705 . -41) (undo-tree-id31706 . -41) (undo-tree-id31707 . -41) (undo-tree-id31708 . -41) (undo-tree-id31709 . -41) (undo-tree-id31710 . -41) (undo-tree-id31711 . -41) (undo-tree-id31712 . -41) (undo-tree-id31713 . -41) (undo-tree-id31714 . -41) (undo-tree-id31715 . -41) (undo-tree-id31716 . -41) (undo-tree-id31717 . -41) (undo-tree-id31718 . -41) (undo-tree-id31719 . -40) (undo-tree-id31720 . -40) (undo-tree-id31721 . -40) (undo-tree-id31722 . -40) (undo-tree-id31723 . -40) (undo-tree-id31724 . -40) (undo-tree-id31725 . -40) (undo-tree-id31726 . -40) (undo-tree-id31727 . -40) (undo-tree-id31728 . -40) (undo-tree-id31729 . -40) (undo-tree-id31730 . -40) (undo-tree-id31731 . -40) (undo-tree-id31732 . -40) (undo-tree-id31733 . -40) (undo-tree-id31734 . -40) (undo-tree-id31735 . -40) (undo-tree-id31736 . -40) (undo-tree-id31737 . -40) (undo-tree-id31738 . -40) (undo-tree-id31739 . -40) (undo-tree-id31740 . -40) (undo-tree-id31741 . -41) 158 (t 25774 59584 936921 94000)) nil (25774 59617 566933 944000) 0 nil] [nil nil ((#("-" 0 1 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) composition (0 1 [8226]))) . 83) (undo-tree-id31179 . -1) (t 25774 27366 519553 833000)) ((83 . 84)) (25774 59583 448225 14000) 0 nil])
([nil nil ((#("to " 0 2 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 2 3 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 118) (undo-tree-id31269 . -2) (undo-tree-id31270 . 3) (undo-tree-id31271 . -2) (undo-tree-id31272 . -2) (undo-tree-id31273 . -2) (undo-tree-id31274 . -2) (undo-tree-id31275 . -2) (undo-tree-id31276 . -2) (undo-tree-id31277 . -2) (undo-tree-id31278 . -2) (undo-tree-id31279 . -2) (undo-tree-id31280 . -2) (undo-tree-id31281 . -2) (undo-tree-id31282 . -2) (undo-tree-id31283 . -2) (undo-tree-id31284 . -2) (undo-tree-id31285 . -2) (undo-tree-id31286 . -2) (undo-tree-id31287 . -2) (undo-tree-id31288 . -2) (undo-tree-id31289 . -2) (undo-tree-id31290 . -2) (undo-tree-id31291 . -2) (undo-tree-id31292 . -2) (undo-tree-id31293 . -2) (undo-tree-id31294 . -2) (undo-tree-id31295 . -2) (undo-tree-id31296 . -2) (undo-tree-id31297 . -2) (undo-tree-id31298 . -2) (undo-tree-id31299 . -2) (undo-tree-id31300 . -2) (undo-tree-id31301 . -2) (undo-tree-id31302 . -2) (undo-tree-id31303 . -2) (undo-tree-id31304 . -2) (undo-tree-id31305 . -2) (undo-tree-id31306 . -2) (undo-tree-id31307 . -2) (undo-tree-id31308 . -2) (undo-tree-id31309 . -2) (undo-tree-id31310 . -2) (undo-tree-id31311 . -2) (undo-tree-id31312 . -2) (undo-tree-id31313 . -2) (undo-tree-id31314 . -2) (undo-tree-id31315 . -2) (undo-tree-id31316 . -2) (undo-tree-id31317 . -2) (undo-tree-id31318 . -2) (undo-tree-id31319 . -2) (undo-tree-id31320 . -2) (undo-tree-id31321 . -2) (undo-tree-id31322 . -2) (undo-tree-id31323 . -2) (undo-tree-id31324 . -2) (undo-tree-id31325 . -2) (undo-tree-id31326 . -2) (undo-tree-id31327 . -2) (undo-tree-id31328 . -2) (undo-tree-id31329 . -2) (undo-tree-id31330 . -2) (undo-tree-id31331 . -2) (undo-tree-id31332 . -2) (undo-tree-id31333 . -2) (undo-tree-id31334 . -2) (undo-tree-id31335 . -2) (undo-tree-id31336 . -2) (undo-tree-id31337 . -2) (undo-tree-id31338 . -2) (undo-tree-id31339 . -1) (undo-tree-id31340 . -1) (undo-tree-id31341 . -1) (undo-tree-id31342 . -1) (undo-tree-id31343 . -1) (undo-tree-id31344 . -1) (undo-tree-id31345 . -1) (undo-tree-id31346 . -1) (undo-tree-id31347 . -1) (undo-tree-id31348 . -1) (undo-tree-id31349 . -1) (undo-tree-id31350 . -1) (undo-tree-id31351 . -1) (undo-tree-id31352 . -1) (undo-tree-id31353 . -1) (undo-tree-id31354 . -1) (undo-tree-id31355 . -1) (undo-tree-id31356 . -1) (undo-tree-id31357 . -1) (undo-tree-id31358 . -1) (undo-tree-id31359 . -1) (undo-tree-id31360 . -1) (undo-tree-id31361 . -1) (undo-tree-id31362 . -1) (undo-tree-id31363 . -1) (undo-tree-id31364 . -1) (undo-tree-id31365 . -1) (undo-tree-id31366 . -1) (undo-tree-id31367 . -1) (undo-tree-id31368 . -1) (undo-tree-id31369 . -1) (undo-tree-id31370 . -3)) nil (25774 59617 564974 369000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("   " 0 2 (face org-indent) 2 3 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 83) (undo-tree-id31177 . -1)) ((83 . 84)) (25774 59583 48798 309000) 0 nil])
([nil nil ((128 . 129)) nil (25774 59617 567285 590000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("   " 0 2 (face org-indent) 2 3 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -160) (nil fontified nil 159 . 160) (nil wrap-prefix #("  " 0 2 (face org-indent)) 159 . 160) (159 . 160) 83 (t 25774 59577 180797 838000)) ((#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 159) (undo-tree-id31216 . -1) (undo-tree-id31217 . -1) (undo-tree-id31218 . -1) (undo-tree-id31219 . -1) (undo-tree-id31220 . -1) (undo-tree-id31221 . -1) (undo-tree-id31222 . -1) (undo-tree-id31223 . -1) (undo-tree-id31224 . -1) (undo-tree-id31225 . -1) (undo-tree-id31226 . -1) (undo-tree-id31227 . -1) (undo-tree-id31228 . -1) (undo-tree-id31229 . -1) (undo-tree-id31230 . -1) (undo-tree-id31231 . -1) (undo-tree-id31232 . -1) (undo-tree-id31233 . -1) (undo-tree-id31234 . -1) (undo-tree-id31235 . -1) (undo-tree-id31236 . -1) (undo-tree-id31237 . -1) (undo-tree-id31238 . -1) (undo-tree-id31239 . -1) (undo-tree-id31240 . -1) (undo-tree-id31241 . -1) (undo-tree-id31242 . -1) (undo-tree-id31243 . -1) (undo-tree-id31244 . -1) (undo-tree-id31245 . -1) (undo-tree-id31246 . -1) (undo-tree-id31247 . -1) (undo-tree-id31248 . -1) (undo-tree-id31249 . -1) (undo-tree-id31250 . -1) (nil wrap-prefix #("  " 0 2 (face org-indent)) 159 . 160) (nil fontified t 159 . 160) (160 . 161)) (25774 59582 686221 713000) 0 nil])
([nil nil ((#("in several NLP tasks" 0 20 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 172) (undo-tree-id31825 . -19) (undo-tree-id31826 . -20)) nil (25774 59625 226434 474000) 0 nil] [nil nil ((#("A " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 85) (undo-tree-id31251 . -1) (undo-tree-id31252 . -2) (undo-tree-id31253 . -2) (undo-tree-id31254 . -2) (undo-tree-id31255 . -2) (undo-tree-id31256 . -2) (undo-tree-id31257 . -2) (undo-tree-id31258 . -2) (undo-tree-id31259 . -2) (undo-tree-id31260 . -2) (undo-tree-id31261 . -2) (undo-tree-id31262 . -2) (undo-tree-id31263 . -2) (undo-tree-id31264 . -2) (undo-tree-id31265 . -2) (undo-tree-id31266 . -2) (undo-tree-id31267 . -2) (undo-tree-id31268 . -2)) ((85 . 87)) (25774 59617 564899 237000) 0 nil])
([nil nil ((159 . 160) (#("
" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -159) (undo-tree-id31180 . -1) (undo-tree-id31181 . -1) (undo-tree-id31182 . -1) (undo-tree-id31183 . -1) (undo-tree-id31184 . -1) (undo-tree-id31185 . -1) (undo-tree-id31186 . -1) (undo-tree-id31187 . -1) (undo-tree-id31188 . -1) (undo-tree-id31189 . -1) (undo-tree-id31190 . -1) (undo-tree-id31191 . -1) (undo-tree-id31192 . -1) (undo-tree-id31193 . -1) (undo-tree-id31194 . -1) (undo-tree-id31195 . -1) (undo-tree-id31196 . -1) (undo-tree-id31197 . -1) (undo-tree-id31198 . -1) (undo-tree-id31199 . -1) (undo-tree-id31200 . -1) (undo-tree-id31201 . -1) (undo-tree-id31202 . -1) (undo-tree-id31203 . -1) (undo-tree-id31204 . -1) (undo-tree-id31205 . -1) (undo-tree-id31206 . -1) (undo-tree-id31207 . -1) (undo-tree-id31208 . -1) (undo-tree-id31209 . -1) (undo-tree-id31210 . -1) (undo-tree-id31211 . -1) (undo-tree-id31212 . -1) (undo-tree-id31213 . -1) (undo-tree-id31214 . -1) (undo-tree-id31215 . -1) 146 (t 25774 59579 336832 171000)) ((159 . 160) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . 159) (t 25774 59581 992874 390000)) (25774 59581 961681 720000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 172) (undo-tree-id31822 . -1) (undo-tree-id31823 . -1) (undo-tree-id31824 . -1)) nil (25774 59625 226430 678000) 0 nil])
nil
nil
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 171) (undo-tree-id31742 . -1) (undo-tree-id31743 . -1) (undo-tree-id31744 . -1) (undo-tree-id31745 . -1) (undo-tree-id31746 . -1) (undo-tree-id31747 . -1) (undo-tree-id31748 . -1) (undo-tree-id31749 . -1) (undo-tree-id31750 . -1) (undo-tree-id31751 . -1) (undo-tree-id31752 . -1) (undo-tree-id31753 . -1) (undo-tree-id31754 . -1) (undo-tree-id31755 . -1) (undo-tree-id31756 . -1) (undo-tree-id31757 . -1) (undo-tree-id31758 . -1) (undo-tree-id31759 . -1) (undo-tree-id31760 . -1) (undo-tree-id31761 . -1) (undo-tree-id31762 . -1) (undo-tree-id31763 . -1) (undo-tree-id31764 . -1) (undo-tree-id31765 . -1) (undo-tree-id31766 . -1) (undo-tree-id31767 . -1) (undo-tree-id31768 . -1) (undo-tree-id31769 . -1) (undo-tree-id31770 . -1) (undo-tree-id31771 . -1) (undo-tree-id31772 . -1) (undo-tree-id31773 . -1) (undo-tree-id31774 . -1) (undo-tree-id31775 . -1) (undo-tree-id31776 . -1) (undo-tree-id31777 . -1) (undo-tree-id31778 . -1) (undo-tree-id31779 . -1) (undo-tree-id31780 . -1) (undo-tree-id31781 . -1) (undo-tree-id31782 . -1) (undo-tree-id31783 . -1) (undo-tree-id31784 . -1) (undo-tree-id31785 . -1) (undo-tree-id31786 . -1) (undo-tree-id31787 . -1) (undo-tree-id31788 . -1) (undo-tree-id31789 . -1) (undo-tree-id31790 . -1) (undo-tree-id31791 . -1) (undo-tree-id31792 . -1) (undo-tree-id31793 . -1) (undo-tree-id31794 . -1) (undo-tree-id31795 . -1) (undo-tree-id31796 . -1) (undo-tree-id31797 . -1) (undo-tree-id31798 . -1) (undo-tree-id31799 . -1) (undo-tree-id31800 . -1) (undo-tree-id31801 . -1) (undo-tree-id31802 . -1) (undo-tree-id31803 . -1) (undo-tree-id31804 . -1) (undo-tree-id31805 . -1) (undo-tree-id31806 . -1) (undo-tree-id31807 . -1) (undo-tree-id31808 . -1) (undo-tree-id31809 . -1) (undo-tree-id31810 . -1) (undo-tree-id31811 . -1) (undo-tree-id31812 . -1) (undo-tree-id31813 . -1) (undo-tree-id31814 . -1) (undo-tree-id31815 . -1) (undo-tree-id31816 . -1) (undo-tree-id31817 . -1) (undo-tree-id31818 . -1) (undo-tree-id31819 . -1) (undo-tree-id31820 . -1) (undo-tree-id31821 . -1)) nil (25774 59625 226420 472000) 0 nil])
([nil nil ((#("**  Adding an attention mechanism to RNNs
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (2 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 3 4 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 4 41 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 41 42 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t)) . 175) (undo-tree-id31904 . -41) (undo-tree-id31905 . -4) (undo-tree-id31906 . -42) (undo-tree-id31907 . -42) (undo-tree-id31908 . -42) (undo-tree-id31909 . -42) (undo-tree-id31910 . -42) (undo-tree-id31911 . -42) (undo-tree-id31912 . -4) (undo-tree-id31913 . 5) (undo-tree-id31914 . -41) (undo-tree-id31915 . -42) (undo-tree-id31916 . -42) (undo-tree-id31917 . -42) (undo-tree-id31918 . -42) (undo-tree-id31919 . -42) (undo-tree-id31920 . -42) (undo-tree-id31921 . -4) (undo-tree-id31922 . -4) (undo-tree-id31923 . -4) (undo-tree-id31924 . -4) (undo-tree-id31925 . -4) (undo-tree-id31926 . -4) (undo-tree-id31927 . -4) (undo-tree-id31928 . -4) (undo-tree-id31929 . -4) (undo-tree-id31930 . -4) (undo-tree-id31931 . -4) (undo-tree-id31932 . -4) (undo-tree-id31933 . -4) (undo-tree-id31934 . -4) (undo-tree-id31935 . -4) (undo-tree-id31936 . -4) (undo-tree-id31937 . -4) (undo-tree-id31938 . -4) (undo-tree-id31939 . -4) (undo-tree-id31940 . -4) (undo-tree-id31941 . -4) (undo-tree-id31942 . -4) (undo-tree-id31943 . -4) (undo-tree-id31944 . -4) (undo-tree-id31945 . -4) (undo-tree-id31946 . -4) (undo-tree-id31947 . -4) (undo-tree-id31948 . -4) (undo-tree-id31949 . -4) (undo-tree-id31950 . -4) (undo-tree-id31951 . -4) (undo-tree-id31952 . -42) 179 (t 25774 59625 257550 897000)) nil (25774 59646 371358 338000) 0 nil])
([nil nil ((#("- Motivation behind developing an attention mechanism
" 0 1 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 2 53 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 53 54 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 175) (undo-tree-id31828 . -53) (undo-tree-id31829 . -2) (undo-tree-id31830 . -2) (undo-tree-id31831 . -2) (undo-tree-id31832 . -2) (undo-tree-id31833 . -2) (undo-tree-id31834 . -2) (undo-tree-id31835 . -2) (undo-tree-id31836 . -2) (undo-tree-id31837 . -2) (undo-tree-id31838 . -2) (undo-tree-id31839 . -2) (undo-tree-id31840 . -2) (undo-tree-id31841 . -2) (undo-tree-id31842 . -2) (undo-tree-id31843 . -2) (undo-tree-id31844 . -2) (undo-tree-id31845 . -2) (undo-tree-id31846 . -2) (undo-tree-id31847 . -2) (undo-tree-id31848 . -2) (undo-tree-id31849 . -11) (undo-tree-id31850 . -18) (undo-tree-id31851 . -29) (undo-tree-id31852 . -32) (undo-tree-id31853 . -42) (undo-tree-id31854 . -52) (undo-tree-id31855 . -54) (undo-tree-id31856 . -54) (undo-tree-id31857 . -54) (undo-tree-id31858 . -54) (undo-tree-id31859 . -54) (undo-tree-id31860 . -54) (undo-tree-id31861 . -54) (undo-tree-id31862 . -54) (undo-tree-id31863 . -54) (undo-tree-id31864 . -54) (undo-tree-id31865 . -54) (undo-tree-id31866 . -54) (undo-tree-id31867 . -54) (undo-tree-id31868 . -54) (undo-tree-id31869 . -54) (undo-tree-id31870 . -54) (undo-tree-id31871 . -54) (undo-tree-id31872 . -4) (undo-tree-id31873 . -54) (undo-tree-id31874 . -54) (undo-tree-id31875 . -54) (undo-tree-id31876 . -54) (undo-tree-id31877 . -54) (undo-tree-id31878 . -54) (undo-tree-id31879 . -54) (undo-tree-id31880 . -54) (undo-tree-id31881 . -54) (undo-tree-id31882 . -54) (undo-tree-id31883 . -54) (undo-tree-id31884 . -54) (undo-tree-id31885 . -54) (undo-tree-id31886 . -54) (undo-tree-id31887 . -4) (undo-tree-id31888 . -4) (undo-tree-id31889 . -4) (undo-tree-id31890 . -4) (undo-tree-id31891 . -4) (undo-tree-id31892 . -4) (undo-tree-id31893 . -4) (undo-tree-id31894 . -4) (undo-tree-id31895 . -4) (undo-tree-id31896 . -4) (undo-tree-id31897 . -4) (undo-tree-id31898 . -4) (undo-tree-id31899 . -4) (undo-tree-id31900 . -4) (undo-tree-id31901 . -4) (undo-tree-id31902 . -4) (undo-tree-id31903 . -54) 179) nil (25774 59646 371315 397000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . 175) (undo-tree-id31827 . -1)) nil (25774 59646 371124 474000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 545) (undo-tree-id31953 . -1) (t 25774 59646 405874 206000)) nil (25774 59731 333193 862000) 0 nil])
([nil nil ((nil rear-nonsticky nil 659 . 660) (#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -796) (659 . 797) (t 25774 59690 6526 499000)) nil (25774 59768 588105 793000) 0 nil] [nil nil ((nil rear-nonsticky nil 630 . 631) (#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -631) (630 . 632) 562 (t 25774 59690 6526 499000)) ((#("

" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) rear-nonsticky nil) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 630) (undo-tree-id31954 . -1) (undo-tree-id31955 . -1) (undo-tree-id31956 . -1) (undo-tree-id31957 . -1) (undo-tree-id31958 . -1) (undo-tree-id31959 . -1) (631 . 632) (nil rear-nonsticky t 630 . 631)) (25774 59731 332612 807000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -797) (undo-tree-id31964 . -2) (undo-tree-id31965 . -2) (undo-tree-id31966 . -2) (undo-tree-id31967 . -2) (undo-tree-id31968 . -2) (undo-tree-id31969 . -2) (undo-tree-id31970 . -2) (undo-tree-id31971 . -2) (undo-tree-id31972 . -2) (undo-tree-id31973 . -2) 799 (796 . 799) 778) nil (25774 59768 588103 628000) 0 nil])
nil
([nil nil ((#("To focus on the most relevant elements of the input" 0 21 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 21 38 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 38 39 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 39 42 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 42 51 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 662) (undo-tree-id31962 . -50) (undo-tree-id31963 . -51)) nil (25774 59768 588094 732000) 0 nil])
([nil nil ((#(", " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 662) (undo-tree-id31960 . -1) (undo-tree-id31961 . -2)) nil (25774 59768 588091 172000) 0 nil])
([nil nil ((662 . 663) (#("t" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 662)) nil (25774 59768 588079 502000) 0 nil])
([nil nil ((#("The attention mechanism " 0 24 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 662) (undo-tree-id31974 . -23) (undo-tree-id31975 . -23) (undo-tree-id31976 . -23) (undo-tree-id31977 . -23) (undo-tree-id31978 . -24) (undo-tree-id31979 . -23) (undo-tree-id31980 . -2) (undo-tree-id31981 . -2) (undo-tree-id31982 . -2) (undo-tree-id31983 . -2) (undo-tree-id31984 . -2) (undo-tree-id31985 . -2) (undo-tree-id31986 . -2) (undo-tree-id31987 . -2) (undo-tree-id31988 . -2) (undo-tree-id31989 . -2) (undo-tree-id31990 . -2) (undo-tree-id31991 . -2) (undo-tree-id31992 . -2) (undo-tree-id31993 . -2) (undo-tree-id31994 . -2) (undo-tree-id31995 . -2) (undo-tree-id31996 . -2) (undo-tree-id31997 . -2) (undo-tree-id31998 . -2) (undo-tree-id31999 . -2) (undo-tree-id32000 . -2) (undo-tree-id32001 . -12) (undo-tree-id32002 . -12) (undo-tree-id32003 . -12) (undo-tree-id32004 . -12) (undo-tree-id32005 . -12) (undo-tree-id32006 . -12) (undo-tree-id32007 . -12) (undo-tree-id32008 . -12) (undo-tree-id32009 . -12) (undo-tree-id32010 . -12) (undo-tree-id32011 . -12) (undo-tree-id32012 . -12) (undo-tree-id32013 . -12) (undo-tree-id32014 . -12) (undo-tree-id32015 . -12) (undo-tree-id32016 . -12) (undo-tree-id32017 . -12) (undo-tree-id32018 . -12) (undo-tree-id32019 . -12) (undo-tree-id32020 . -12) (undo-tree-id32021 . -12) (undo-tree-id32022 . -22) (undo-tree-id32023 . -22) (undo-tree-id32024 . -22) (undo-tree-id32025 . -22) (undo-tree-id32026 . -22) (undo-tree-id32027 . -22) (undo-tree-id32028 . -22) (undo-tree-id32029 . -22) (undo-tree-id32030 . -22) (undo-tree-id32031 . -22) (undo-tree-id32032 . -22) (undo-tree-id32033 . -22) (undo-tree-id32034 . -22) (undo-tree-id32035 . -22) (undo-tree-id32036 . -22) (undo-tree-id32037 . -22) (undo-tree-id32038 . -22) (undo-tree-id32039 . -22) (undo-tree-id32040 . -22) (undo-tree-id32041 . -22) (undo-tree-id32042 . -22) (undo-tree-id32043 . -22) (undo-tree-id32044 . -22) (undo-tree-id32045 . -22) (undo-tree-id32046 . -22) (undo-tree-id32047 . -22) (undo-tree-id32048 . -22) (undo-tree-id32049 . -22) (undo-tree-id32050 . -22) (undo-tree-id32051 . -22) (undo-tree-id32052 . -22) (undo-tree-id32053 . -22) (undo-tree-id32054 . -22) (undo-tree-id32055 . -22) (undo-tree-id32056 . -22) (undo-tree-id32057 . -22) (undo-tree-id32058 . -22) (undo-tree-id32059 . -22) (undo-tree-id32060 . -22) (undo-tree-id32061 . -22) (undo-tree-id32062 . -22) (undo-tree-id32063 . -23) (undo-tree-id32064 . -23) (undo-tree-id32065 . -23) (undo-tree-id32066 . -23) (undo-tree-id32067 . -23) (undo-tree-id32068 . -23) (undo-tree-id32069 . -23) (undo-tree-id32070 . -23) (undo-tree-id32071 . -23) (undo-tree-id32072 . -23) (undo-tree-id32073 . -23) (undo-tree-id32074 . -23) (undo-tree-id32075 . -23) (undo-tree-id32076 . -23) (undo-tree-id32077 . -23) (undo-tree-id32078 . -23) (undo-tree-id32079 . -23) (undo-tree-id32080 . -23) (undo-tree-id32081 . -23) (undo-tree-id32082 . -23) (undo-tree-id32083 . -23) (undo-tree-id32084 . -23) (undo-tree-id32085 . -23) (undo-tree-id32086 . -23) (undo-tree-id32087 . -23) (undo-tree-id32088 . -23) (undo-tree-id32089 . -23) (undo-tree-id32090 . -24) 685 (t 25774 59768 623658 471000)) nil (25774 59774 689732 861000) 0 nil])
([nil nil ((662 . 663) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 662)) nil (25774 59785 205463 666000) 0 nil])
([nil nil ((#(", the attention mechanism assigns different attention weights to each input element" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 83 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 774) (undo-tree-id32119 . -82) (undo-tree-id32120 . -83) (undo-tree-id32121 . -83) (t 25774 59774 723744 119000)) nil (25774 59790 591204 794000) 0 nil] [nil nil ((#("To " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 723) (undo-tree-id32091 . -2) (undo-tree-id32092 . -1) (undo-tree-id32093 . -1) (undo-tree-id32094 . -1) (undo-tree-id32095 . -1) (undo-tree-id32096 . -1) (undo-tree-id32097 . -1) (undo-tree-id32098 . -1) (undo-tree-id32099 . -1) (undo-tree-id32100 . -1) (undo-tree-id32101 . -1) (undo-tree-id32102 . -1) (undo-tree-id32103 . -1) (undo-tree-id32104 . -1) (undo-tree-id32105 . -1) (undo-tree-id32106 . -1) (undo-tree-id32107 . -1) (undo-tree-id32108 . -1) (undo-tree-id32109 . -1) (undo-tree-id32110 . -1) (undo-tree-id32111 . -1) (undo-tree-id32112 . -1) (undo-tree-id32113 . -1) (undo-tree-id32114 . -1) (undo-tree-id32115 . -1) (undo-tree-id32116 . -1) (undo-tree-id32117 . -1) (undo-tree-id32118 . -3) (t 25774 59774 723744 119000)) ((723 . 726)) (25774 59785 204752 687000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 834) (undo-tree-id32122 . -1) (undo-tree-id32123 . -1) (t 25774 59790 627966 32000)) nil (25774 59803 47009 440000) 0 nil])
nil
([nil nil ((1142 . 1143) (1135 . 1142) (#("c" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1135) (undo-tree-id32142 . -1) (undo-tree-id32143 . -1) (undo-tree-id32144 . -1) (undo-tree-id32145 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1136) (undo-tree-id32146 . -1) (#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1137) (undo-tree-id32147 . -1) 1138 (1132 . 1138) (#("." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -1132) (undo-tree-id32148 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -1133) (undo-tree-id32149 . -1) 1134 (1132 . 1134) (t 25774 59803 80138 411000)) nil (25774 59850 453385 723000) 0 nil])
([nil nil ((1134 . 1135) (t 25774 59851 724800 879000)) nil (25774 59876 222487 652000) 0 nil] [nil nil ((1144 . 1145) (1137 . 1144) (#("c" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1137) (undo-tree-id32124 . -1) (undo-tree-id32125 . -1) (undo-tree-id32126 . -1) (undo-tree-id32127 . -1) (undo-tree-id32128 . -1) (undo-tree-id32129 . -1) (#("a" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1138) (undo-tree-id32130 . -1) (undo-tree-id32131 . -1) (undo-tree-id32132 . -1) (undo-tree-id32133 . -1) (#("m" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1139) (undo-tree-id32134 . -1) (undo-tree-id32135 . -1) 1140 (1134 . 1140) (#("." 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1134) (undo-tree-id32136 . -1) (undo-tree-id32137 . -1) (undo-tree-id32138 . -1) (undo-tree-id32139 . -1) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1135) (undo-tree-id32140 . -1) (undo-tree-id32141 . -1) 1136 (1134 . 1136)) ((#(". " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 1134) (undo-tree-id32150 . -1) (undo-tree-id32151 . -2) (undo-tree-id32152 . -1) (1134 . 1136) (#("- Ecam" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 4 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 5 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 1134) (undo-tree-id32153 . -3) (undo-tree-id32154 . -4) (undo-tree-id32155 . -5) (undo-tree-id32156 . -6) (undo-tree-id32157 . -5) (undo-tree-id32158 . -4) (undo-tree-id32159 . -3) (undo-tree-id32160 . -3) (1137 . 1140) (#("xample:" 0 7 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 1137) (undo-tree-id32161 . -7) (undo-tree-id32162 . -7) (undo-tree-id32163 . -7) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 1144) (undo-tree-id32164 . -1) (undo-tree-id32165 . -1) (undo-tree-id32166 . -1)) (25774 59850 452271 289000) 0 nil])
([nil nil ((1142 . 1143)) nil (25774 59876 222482 388000) 0 nil])
nil
([nil nil ((#("Input vector also " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1 18 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1275) (undo-tree-id32167 . -17) (undo-tree-id32168 . -17) (undo-tree-id32169 . -17) (undo-tree-id32170 . -4) (undo-tree-id32171 . -4) (undo-tree-id32172 . -4) (undo-tree-id32173 . -4) (undo-tree-id32174 . -4) (undo-tree-id32175 . -4) (undo-tree-id32176 . -4) (undo-tree-id32177 . -4) (undo-tree-id32178 . -4) (undo-tree-id32179 . -4) (undo-tree-id32180 . -4) (undo-tree-id32181 . -4) (undo-tree-id32182 . -4) (undo-tree-id32183 . -4) (undo-tree-id32184 . -4) (undo-tree-id32185 . -4) (undo-tree-id32186 . -4) (undo-tree-id32187 . -4) (undo-tree-id32188 . -4) (undo-tree-id32189 . -4) (undo-tree-id32190 . -4) (undo-tree-id32191 . -4) (undo-tree-id32192 . -4) (undo-tree-id32193 . -4) (undo-tree-id32194 . -4) (undo-tree-id32195 . -4) (undo-tree-id32196 . -4) (undo-tree-id32197 . -4) (undo-tree-id32198 . -4) (undo-tree-id32199 . -4) (undo-tree-id32200 . -4) (undo-tree-id32201 . -4) (undo-tree-id32202 . -4) (undo-tree-id32203 . -4) (undo-tree-id32204 . -4) (undo-tree-id32205 . -4) (undo-tree-id32206 . -4) (undo-tree-id32207 . -4) (undo-tree-id32208 . -4) (undo-tree-id32209 . -4) (undo-tree-id32210 . -4) (undo-tree-id32211 . -4) (undo-tree-id32212 . -4) (undo-tree-id32213 . -4) (undo-tree-id32214 . -4) (undo-tree-id32215 . -4) (undo-tree-id32216 . -4) (undo-tree-id32217 . -4) (undo-tree-id32218 . -4) (undo-tree-id32219 . -4) (undo-tree-id32220 . -4) (undo-tree-id32221 . -4) (undo-tree-id32222 . -4) (undo-tree-id32223 . -4) (undo-tree-id32224 . -4) (undo-tree-id32225 . -4) (undo-tree-id32226 . -4) (undo-tree-id32227 . -4) (undo-tree-id32228 . -4) (undo-tree-id32229 . -4) (undo-tree-id32230 . -4) (undo-tree-id32231 . -4) (undo-tree-id32232 . -4) (undo-tree-id32233 . -4) (undo-tree-id32234 . -4) (undo-tree-id32235 . -4) (undo-tree-id32236 . -4) (undo-tree-id32237 . -4) (undo-tree-id32238 . -4) (undo-tree-id32239 . -4) (undo-tree-id32240 . -4) (undo-tree-id32241 . -4) (undo-tree-id32242 . -4) (undo-tree-id32243 . -4) (undo-tree-id32244 . -4) (undo-tree-id32245 . -4) (undo-tree-id32246 . -4) (undo-tree-id32247 . -4) (undo-tree-id32248 . -4) (undo-tree-id32249 . -4) (undo-tree-id32250 . -4) (undo-tree-id32251 . -4) (undo-tree-id32252 . -4) (undo-tree-id32253 . -4) (undo-tree-id32254 . -4) (undo-tree-id32255 . -4) (undo-tree-id32256 . -4) (undo-tree-id32257 . -4) (undo-tree-id32258 . -4) (undo-tree-id32259 . -4) (undo-tree-id32260 . -4) (undo-tree-id32261 . -4) (undo-tree-id32262 . -4) (undo-tree-id32263 . -4) (undo-tree-id32264 . -4) (undo-tree-id32265 . -4) (undo-tree-id32266 . -4) (undo-tree-id32267 . -4) (undo-tree-id32268 . -4) (undo-tree-id32269 . -17) (undo-tree-id32270 . -18) (undo-tree-id32271 . -17) (undo-tree-id32272 . -4) (undo-tree-id32273 . -4) (undo-tree-id32274 . -4) (undo-tree-id32275 . -4) (undo-tree-id32276 . -4) (undo-tree-id32277 . -4) (undo-tree-id32278 . -4) (undo-tree-id32279 . -4) (undo-tree-id32280 . -4) (undo-tree-id32281 . -4) (undo-tree-id32282 . -4) (undo-tree-id32283 . -4) (undo-tree-id32284 . -4) (undo-tree-id32285 . -4) (undo-tree-id32286 . -4) (undo-tree-id32287 . -4) (undo-tree-id32288 . -4) (undo-tree-id32289 . -4) (undo-tree-id32290 . -4) (undo-tree-id32291 . -4) (undo-tree-id32292 . -4) (undo-tree-id32293 . -11) (undo-tree-id32294 . -11) (undo-tree-id32295 . -11) (undo-tree-id32296 . -11) (undo-tree-id32297 . -11) (undo-tree-id32298 . -11) (undo-tree-id32299 . -11) (undo-tree-id32300 . -11) (undo-tree-id32301 . -11) (undo-tree-id32302 . -11) (undo-tree-id32303 . -11) (undo-tree-id32304 . -11) (undo-tree-id32305 . -11) (undo-tree-id32306 . -11) (undo-tree-id32307 . -11) (undo-tree-id32308 . -11) (undo-tree-id32309 . -11) (undo-tree-id32310 . -11) (undo-tree-id32311 . -11) (undo-tree-id32312 . -11) (undo-tree-id32313 . -11) (undo-tree-id32314 . -11) (undo-tree-id32315 . -11) (undo-tree-id32316 . -11) (undo-tree-id32317 . -11) (undo-tree-id32318 . -11) (undo-tree-id32319 . -16) (undo-tree-id32320 . -16) (undo-tree-id32321 . -16) (undo-tree-id32322 . -16) (undo-tree-id32323 . -16) (undo-tree-id32324 . -16) (undo-tree-id32325 . -16) (undo-tree-id32326 . -16) (undo-tree-id32327 . -16) (undo-tree-id32328 . -16) (undo-tree-id32329 . -16) (undo-tree-id32330 . -16) (undo-tree-id32331 . -16) (undo-tree-id32332 . -16) (undo-tree-id32333 . -16) (undo-tree-id32334 . -16) (undo-tree-id32335 . -16) (undo-tree-id32336 . -16) (undo-tree-id32337 . -16) (undo-tree-id32338 . -16) (undo-tree-id32339 . -16) (undo-tree-id32340 . -15) (undo-tree-id32341 . -15) (undo-tree-id32342 . -15) (undo-tree-id32343 . -15) (undo-tree-id32344 . -15) (undo-tree-id32345 . -15) (undo-tree-id32346 . -15) (undo-tree-id32347 . -15) (undo-tree-id32348 . -15) (undo-tree-id32349 . -15) (undo-tree-id32350 . -15) (undo-tree-id32351 . -15) (undo-tree-id32352 . -15) (undo-tree-id32353 . -15) (undo-tree-id32354 . -15) (undo-tree-id32355 . -15) (undo-tree-id32356 . -15) (undo-tree-id32357 . -15) (undo-tree-id32358 . -15) (undo-tree-id32359 . -15) (undo-tree-id32360 . -15) (undo-tree-id32361 . -14) (undo-tree-id32362 . -14) (undo-tree-id32363 . -14) (undo-tree-id32364 . -14) (undo-tree-id32365 . -14) (undo-tree-id32366 . -14) (undo-tree-id32367 . -14) (undo-tree-id32368 . -14) (undo-tree-id32369 . -14) (undo-tree-id32370 . -14) (undo-tree-id32371 . -14) (undo-tree-id32372 . -14) (undo-tree-id32373 . -14) (undo-tree-id32374 . -14) (undo-tree-id32375 . -14) (undo-tree-id32376 . -14) (undo-tree-id32377 . -14) (undo-tree-id32378 . -14) (undo-tree-id32379 . -14) (undo-tree-id32380 . -14) (undo-tree-id32381 . -14) (undo-tree-id32382 . -13) (undo-tree-id32383 . -13) (undo-tree-id32384 . -13) (undo-tree-id32385 . -13) (undo-tree-id32386 . -13) (undo-tree-id32387 . -13) (undo-tree-id32388 . -13) (undo-tree-id32389 . -13) (undo-tree-id32390 . -13) (undo-tree-id32391 . -13) (undo-tree-id32392 . -13) (undo-tree-id32393 . -13) (undo-tree-id32394 . -13) (undo-tree-id32395 . -13) (undo-tree-id32396 . -13) (undo-tree-id32397 . -13) (undo-tree-id32398 . -13) (undo-tree-id32399 . -13) (undo-tree-id32400 . -13) (undo-tree-id32401 . -13) (undo-tree-id32402 . -13) (undo-tree-id32403 . -13) (undo-tree-id32404 . -13) (undo-tree-id32405 . -13) (undo-tree-id32406 . -13) (undo-tree-id32407 . -13) (undo-tree-id32408 . -16) (undo-tree-id32409 . -16) (undo-tree-id32410 . -16) (undo-tree-id32411 . -16) (undo-tree-id32412 . -16) (undo-tree-id32413 . -16) (undo-tree-id32414 . -16) (undo-tree-id32415 . -16) (undo-tree-id32416 . -16) (undo-tree-id32417 . -16) (undo-tree-id32418 . -16) (undo-tree-id32419 . -16) (undo-tree-id32420 . -16) (undo-tree-id32421 . -16) (undo-tree-id32422 . -16) (undo-tree-id32423 . -16) (undo-tree-id32424 . -16) (undo-tree-id32425 . -16) (undo-tree-id32426 . -16) (undo-tree-id32427 . -16) (undo-tree-id32428 . -16) (undo-tree-id32429 . -18) (undo-tree-id32430 . -18) (undo-tree-id32431 . -18) (undo-tree-id32432 . -18) (undo-tree-id32433 . -18) (undo-tree-id32434 . -18) (undo-tree-id32435 . -18) (undo-tree-id32436 . -18) (undo-tree-id32437 . -18) (undo-tree-id32438 . -18) (undo-tree-id32439 . -18) (undo-tree-id32440 . -18) (undo-tree-id32441 . -18) (undo-tree-id32442 . -18) (undo-tree-id32443 . -18) (undo-tree-id32444 . -18) (undo-tree-id32445 . -18) (undo-tree-id32446 . -18) (undo-tree-id32447 . -18) (undo-tree-id32448 . -18) (undo-tree-id32449 . -18) (undo-tree-id32450 . -18) (undo-tree-id32451 . -18) (undo-tree-id32452 . -18) (undo-tree-id32453 . -18) (undo-tree-id32454 . -18) (undo-tree-id32455 . -17) (undo-tree-id32456 . -17) (undo-tree-id32457 . -17) (undo-tree-id32458 . -17) (undo-tree-id32459 . -17) (undo-tree-id32460 . -17) (undo-tree-id32461 . -17) (undo-tree-id32462 . -17) (undo-tree-id32463 . -17) (undo-tree-id32464 . -17) (undo-tree-id32465 . -17) (undo-tree-id32466 . -17) (undo-tree-id32467 . -17) (undo-tree-id32468 . -17) (undo-tree-id32469 . -17) (undo-tree-id32470 . -17) (undo-tree-id32471 . -17) (undo-tree-id32472 . -17) (undo-tree-id32473 . -17) (undo-tree-id32474 . -17) (undo-tree-id32475 . -17) (undo-tree-id32476 . -17) (undo-tree-id32477 . -17) (undo-tree-id32478 . -17) (undo-tree-id32479 . -17) (undo-tree-id32480 . -17) (undo-tree-id32481 . -17) (undo-tree-id32482 . -17) (undo-tree-id32483 . -17) (undo-tree-id32484 . -17) (undo-tree-id32485 . -17) (undo-tree-id32486 . -17) (undo-tree-id32487 . -17) (undo-tree-id32488 . -17) (undo-tree-id32489 . -17) (undo-tree-id32490 . -17) (undo-tree-id32491 . -17) (undo-tree-id32492 . -18) 1292 (t 25774 59876 253128 659000)) nil (25774 59948 701359 246000) 0 nil])
([nil nil ((1275 . 1276) (#("i" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1275)) nil (25774 59966 223538 873000) 0 nil])
([nil nil ((#("via " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1330) (undo-tree-id32618 . -3) (undo-tree-id32619 . -2) (undo-tree-id32620 . -2) (undo-tree-id32621 . -2) (undo-tree-id32622 . -2) (undo-tree-id32623 . -2) (undo-tree-id32624 . -2) (undo-tree-id32625 . -2) (undo-tree-id32626 . -2) (undo-tree-id32627 . -2) (undo-tree-id32628 . -2) (undo-tree-id32629 . -2) (undo-tree-id32630 . -2) (undo-tree-id32631 . -2) (undo-tree-id32632 . -2) (undo-tree-id32633 . -2) (undo-tree-id32634 . -2) (undo-tree-id32635 . -2) (undo-tree-id32636 . -2) (undo-tree-id32637 . -2) (undo-tree-id32638 . -2) (undo-tree-id32639 . -2) (undo-tree-id32640 . -2) (undo-tree-id32641 . -2) (undo-tree-id32642 . -2) (undo-tree-id32643 . -2) (undo-tree-id32644 . -2) (undo-tree-id32645 . -2) (undo-tree-id32646 . -2) (undo-tree-id32647 . -2) (undo-tree-id32648 . -2) (undo-tree-id32649 . -2) (undo-tree-id32650 . -2) (undo-tree-id32651 . -4)) nil (25774 59974 73176 953000) 0 nil] [nil nil ((#("via an attention mechanism" 0 6 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 6 7 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 7 26 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1330) (undo-tree-id32493 . -25) (undo-tree-id32494 . -2) (undo-tree-id32495 . -2) (undo-tree-id32496 . -2) (undo-tree-id32497 . -2) (undo-tree-id32498 . -2) (undo-tree-id32499 . -2) (undo-tree-id32500 . -2) (undo-tree-id32501 . -2) (undo-tree-id32502 . -2) (undo-tree-id32503 . -2) (undo-tree-id32504 . -2) (undo-tree-id32505 . -2) (undo-tree-id32506 . -2) (undo-tree-id32507 . -2) (undo-tree-id32508 . -2) (undo-tree-id32509 . -2) (undo-tree-id32510 . -5) (undo-tree-id32511 . -5) (undo-tree-id32512 . -5) (undo-tree-id32513 . -5) (undo-tree-id32514 . -5) (undo-tree-id32515 . -5) (undo-tree-id32516 . -5) (undo-tree-id32517 . -5) (undo-tree-id32518 . -5) (undo-tree-id32519 . -5) (undo-tree-id32520 . -5) (undo-tree-id32521 . -5) (undo-tree-id32522 . -5) (undo-tree-id32523 . -5) (undo-tree-id32524 . -5) (undo-tree-id32525 . -5) (undo-tree-id32526 . -15) (undo-tree-id32527 . -15) (undo-tree-id32528 . -15) (undo-tree-id32529 . -15) (undo-tree-id32530 . -15) (undo-tree-id32531 . -15) (undo-tree-id32532 . -15) (undo-tree-id32533 . -15) (undo-tree-id32534 . -15) (undo-tree-id32535 . -15) (undo-tree-id32536 . -15) (undo-tree-id32537 . -15) (undo-tree-id32538 . -15) (undo-tree-id32539 . -15) (undo-tree-id32540 . -15) (undo-tree-id32541 . -15) (undo-tree-id32542 . -15) (undo-tree-id32543 . -15) (undo-tree-id32544 . -15) (undo-tree-id32545 . -15) (undo-tree-id32546 . -15) (undo-tree-id32547 . -15) (undo-tree-id32548 . -15) (undo-tree-id32549 . -15) (undo-tree-id32550 . -15) (undo-tree-id32551 . -15) (undo-tree-id32552 . -15) (undo-tree-id32553 . -15) (undo-tree-id32554 . -15) (undo-tree-id32555 . -15) (undo-tree-id32556 . -15) (undo-tree-id32557 . -15) (undo-tree-id32558 . -15) (undo-tree-id32559 . -15) (undo-tree-id32560 . -15) (undo-tree-id32561 . -15) (undo-tree-id32562 . -15) (undo-tree-id32563 . -15) (undo-tree-id32564 . -15) (undo-tree-id32565 . -15) (undo-tree-id32566 . -15) (undo-tree-id32567 . -15) (undo-tree-id32568 . -15) (undo-tree-id32569 . -15) (undo-tree-id32570 . -15) (undo-tree-id32571 . -15) (undo-tree-id32572 . -15) (undo-tree-id32573 . -15) (undo-tree-id32574 . -15) (undo-tree-id32575 . -15) (undo-tree-id32576 . -15) (undo-tree-id32577 . -15) (undo-tree-id32578 . -15) (undo-tree-id32579 . -15) (undo-tree-id32580 . -15) (undo-tree-id32581 . -15) (undo-tree-id32582 . -2) (undo-tree-id32583 . -2) (undo-tree-id32584 . -2) (undo-tree-id32585 . -2) (undo-tree-id32586 . -2) (undo-tree-id32587 . -2) (undo-tree-id32588 . -2) (undo-tree-id32589 . -2) (undo-tree-id32590 . -2) (undo-tree-id32591 . -2) (undo-tree-id32592 . -2) (undo-tree-id32593 . -2) (undo-tree-id32594 . -2) (undo-tree-id32595 . -2) (undo-tree-id32596 . -2) (undo-tree-id32597 . -2) (undo-tree-id32598 . -26) (undo-tree-id32599 . -26) (t 25774 59948 734074 994000)) ((1330 . 1356) (t 25774 59966 130297 527000)) (25774 59966 96925 418000) 0 nil])
([nil nil ((#("an " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2 3 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1330) (undo-tree-id32600 . -2) (undo-tree-id32601 . -1) (undo-tree-id32602 . -1) (undo-tree-id32603 . -1) (undo-tree-id32604 . -1) (undo-tree-id32605 . -1) (undo-tree-id32606 . -1) (undo-tree-id32607 . -1) (undo-tree-id32608 . -1) (undo-tree-id32609 . -1) (undo-tree-id32610 . -1) (undo-tree-id32611 . -1) (undo-tree-id32612 . -1) (undo-tree-id32613 . -1) (undo-tree-id32614 . -1) (undo-tree-id32615 . -1) (undo-tree-id32616 . -1) (undo-tree-id32617 . -3)) nil (25774 59974 73142 670000) 0 nil])
nil
([nil nil ((1330 . 1331)) nil (25774 59974 73116 442000) 0 nil])
([nil nil ((1350 . 1351)) nil (25774 59974 73110 576000) 0 nil])
([nil nil ((#("then" 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1362) (undo-tree-id32657 . -3) (undo-tree-id32658 . -2) (undo-tree-id32659 . -3) (undo-tree-id32660 . -2) (undo-tree-id32661 . -2) (undo-tree-id32662 . -2) (undo-tree-id32663 . -2) (undo-tree-id32664 . -2) (undo-tree-id32665 . -2) (undo-tree-id32666 . -2) (undo-tree-id32667 . -2) (undo-tree-id32668 . -2) (undo-tree-id32669 . -2) (undo-tree-id32670 . -2) (undo-tree-id32671 . -2) (undo-tree-id32672 . -2) (undo-tree-id32673 . -2) (undo-tree-id32674 . -2) (undo-tree-id32675 . -2) (undo-tree-id32676 . -2) (undo-tree-id32677 . -2) (undo-tree-id32678 . -2) (undo-tree-id32679 . -2) (undo-tree-id32680 . -2) (undo-tree-id32681 . -2) (undo-tree-id32682 . -2) (undo-tree-id32683 . -2) (undo-tree-id32684 . -4) 1364 (t 25774 59974 106399 0)) nil (25774 59985 448318 48000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1362) (undo-tree-id32655 . -1) (undo-tree-id32656 . -1)) nil (25774 59985 448291 827000) 0 nil])
([nil nil ((#("this " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1367) (undo-tree-id32652 . -4) (undo-tree-id32653 . -3) (undo-tree-id32654 . -5)) nil (25774 59985 448284 740000) 0 nil])
([nil nil ((#("Captures additional information since " 0 38 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1628) (undo-tree-id32685 . -37) (undo-tree-id32686 . -37) (undo-tree-id32687 . -37) (undo-tree-id32688 . -7) (undo-tree-id32689 . -7) (undo-tree-id32690 . -7) (undo-tree-id32691 . -7) (undo-tree-id32692 . -7) (undo-tree-id32693 . -7) (undo-tree-id32694 . -7) (undo-tree-id32695 . -7) (undo-tree-id32696 . -7) (undo-tree-id32697 . -7) (undo-tree-id32698 . -7) (undo-tree-id32699 . -7) (undo-tree-id32700 . -7) (undo-tree-id32701 . -7) (undo-tree-id32702 . -7) (undo-tree-id32703 . -7) (undo-tree-id32704 . -7) (undo-tree-id32705 . -7) (undo-tree-id32706 . -7) (undo-tree-id32707 . -7) (undo-tree-id32708 . -7) (undo-tree-id32709 . -37) (undo-tree-id32710 . -38) (undo-tree-id32711 . -37) (undo-tree-id32712 . -7) (undo-tree-id32713 . -7) (undo-tree-id32714 . -7) (undo-tree-id32715 . -7) (undo-tree-id32716 . -7) (undo-tree-id32717 . -7) (undo-tree-id32718 . -7) (undo-tree-id32719 . -7) (undo-tree-id32720 . -7) (undo-tree-id32721 . -7) (undo-tree-id32722 . -7) (undo-tree-id32723 . -7) (undo-tree-id32724 . -7) (undo-tree-id32725 . -7) (undo-tree-id32726 . -7) (undo-tree-id32727 . -7) (undo-tree-id32728 . -7) (undo-tree-id32729 . -7) (undo-tree-id32730 . -7) (undo-tree-id32731 . -7) (undo-tree-id32732 . -7) (undo-tree-id32733 . -18) (undo-tree-id32734 . -18) (undo-tree-id32735 . -18) (undo-tree-id32736 . -18) (undo-tree-id32737 . -18) (undo-tree-id32738 . -18) (undo-tree-id32739 . -18) (undo-tree-id32740 . -18) (undo-tree-id32741 . -18) (undo-tree-id32742 . -18) (undo-tree-id32743 . -18) (undo-tree-id32744 . -18) (undo-tree-id32745 . -18) (undo-tree-id32746 . -18) (undo-tree-id32747 . -18) (undo-tree-id32748 . -18) (undo-tree-id32749 . -18) (undo-tree-id32750 . -18) (undo-tree-id32751 . -18) (undo-tree-id32752 . -18) (undo-tree-id32753 . -18) (undo-tree-id32754 . -30) (undo-tree-id32755 . -30) (undo-tree-id32756 . -30) (undo-tree-id32757 . -30) (undo-tree-id32758 . -30) (undo-tree-id32759 . -30) (undo-tree-id32760 . -30) (undo-tree-id32761 . -30) (undo-tree-id32762 . -30) (undo-tree-id32763 . -30) (undo-tree-id32764 . -30) (undo-tree-id32765 . -30) (undo-tree-id32766 . -30) (undo-tree-id32767 . -30) (undo-tree-id32768 . -30) (undo-tree-id32769 . -30) (undo-tree-id32770 . -30) (undo-tree-id32771 . -30) (undo-tree-id32772 . -30) (undo-tree-id32773 . -30) (undo-tree-id32774 . -30) (undo-tree-id32775 . -36) (undo-tree-id32776 . -36) (undo-tree-id32777 . -36) (undo-tree-id32778 . -36) (undo-tree-id32779 . -36) (undo-tree-id32780 . -36) (undo-tree-id32781 . -36) (undo-tree-id32782 . -36) (undo-tree-id32783 . -36) (undo-tree-id32784 . -36) (undo-tree-id32785 . -36) (undo-tree-id32786 . -36) (undo-tree-id32787 . -36) (undo-tree-id32788 . -36) (undo-tree-id32789 . -36) (undo-tree-id32790 . -36) (undo-tree-id32791 . -36) (undo-tree-id32792 . -36) (undo-tree-id32793 . -36) (undo-tree-id32794 . -36) (undo-tree-id32795 . -36) (undo-tree-id32796 . -36) (undo-tree-id32797 . -36) (undo-tree-id32798 . -36) (undo-tree-id32799 . -36) (undo-tree-id32800 . -36) (undo-tree-id32801 . -38) (undo-tree-id32802 . -38) (undo-tree-id32803 . -38) (undo-tree-id32804 . -38) (undo-tree-id32805 . -38) (undo-tree-id32806 . -38) (undo-tree-id32807 . -38) (undo-tree-id32808 . -38) (undo-tree-id32809 . -38) (undo-tree-id32810 . -38) (undo-tree-id32811 . -38) (undo-tree-id32812 . -38) (undo-tree-id32813 . -38) (undo-tree-id32814 . -38) (undo-tree-id32815 . -38) (undo-tree-id32816 . -38) (undo-tree-id32817 . -38) (undo-tree-id32818 . -38) (undo-tree-id32819 . -38) (undo-tree-id32820 . -38) (undo-tree-id32821 . -38) (undo-tree-id32822 . -38) (undo-tree-id32823 . -38) (undo-tree-id32824 . -38) (undo-tree-id32825 . -38) (undo-tree-id32826 . -38) (undo-tree-id32827 . -38) (undo-tree-id32828 . -38) (undo-tree-id32829 . -38) (undo-tree-id32830 . -38) (undo-tree-id32831 . -38) (undo-tree-id32832 . -37) (undo-tree-id32833 . -37) (undo-tree-id32834 . -37) (undo-tree-id32835 . -37) (undo-tree-id32836 . -37) (undo-tree-id32837 . -37) (undo-tree-id32838 . -37) (undo-tree-id32839 . -37) (undo-tree-id32840 . -37) (undo-tree-id32841 . -37) (undo-tree-id32842 . -37) (undo-tree-id32843 . -37) (undo-tree-id32844 . -37) (undo-tree-id32845 . -37) (undo-tree-id32846 . -37) (undo-tree-id32847 . -37) (undo-tree-id32848 . -37) (undo-tree-id32849 . -37) (undo-tree-id32850 . -37) (undo-tree-id32851 . -37) (undo-tree-id32852 . -37) (undo-tree-id32853 . -37) (undo-tree-id32854 . -37) (undo-tree-id32855 . -37) (undo-tree-id32856 . -37) (undo-tree-id32857 . -37) (undo-tree-id32858 . -36) (undo-tree-id32859 . -36) (undo-tree-id32860 . -36) (undo-tree-id32861 . -36) (undo-tree-id32862 . -36) (undo-tree-id32863 . -36) (undo-tree-id32864 . -36) (undo-tree-id32865 . -36) (undo-tree-id32866 . -36) (undo-tree-id32867 . -36) (undo-tree-id32868 . -36) (undo-tree-id32869 . -36) (undo-tree-id32870 . -36) (undo-tree-id32871 . -36) (undo-tree-id32872 . -36) (undo-tree-id32873 . -36) (undo-tree-id32874 . -36) (undo-tree-id32875 . -36) (undo-tree-id32876 . -36) (undo-tree-id32877 . -36) (undo-tree-id32878 . -36) (undo-tree-id32879 . -36) (undo-tree-id32880 . -36) (undo-tree-id32881 . -36) (undo-tree-id32882 . -36) (undo-tree-id32883 . -36) (undo-tree-id32884 . -36) (undo-tree-id32885 . -36) (undo-tree-id32886 . -36) (undo-tree-id32887 . -36) (undo-tree-id32888 . -36) (undo-tree-id32889 . -37) (undo-tree-id32890 . -37) (undo-tree-id32891 . -37) (undo-tree-id32892 . -37) (undo-tree-id32893 . -37) (undo-tree-id32894 . -37) (undo-tree-id32895 . -37) (undo-tree-id32896 . -37) (undo-tree-id32897 . -37) (undo-tree-id32898 . -37) (undo-tree-id32899 . -37) (undo-tree-id32900 . -37) (undo-tree-id32901 . -37) (undo-tree-id32902 . -37) (undo-tree-id32903 . -37) (undo-tree-id32904 . -37) (undo-tree-id32905 . -37) (undo-tree-id32906 . -37) (undo-tree-id32907 . -37) (undo-tree-id32908 . -37) (undo-tree-id32909 . -37) (undo-tree-id32910 . -37) (undo-tree-id32911 . -37) (undo-tree-id32912 . -37) (undo-tree-id32913 . -37) (undo-tree-id32914 . -37) (undo-tree-id32915 . -37) (undo-tree-id32916 . -38) 1665 (t 25774 59985 482543 136000)) nil (25774 60053 724196 568000) 0 nil])
([nil nil ((1747 . 1748) (1746 . 1747) (1745 . 1746)) nil (25774 60053 722272 67000) 0 nil])
([nil nil ((1747 . 1748)) nil (25774 60053 722270 568000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1785 . 1786) (nil fontified nil 1748 . 1786) (1748 . 1786) 1747) nil (25774 60053 722264 976000) 0 nil])
([nil nil ((1628 . 1629) (#("c" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1628) (t 25774 60053 759394 367000)) nil (25774 60058 682918 863000) 0 nil])
([nil nil ((1748 . 1753) (t 25774 60058 719455 330000)) nil (25774 60094 952865 829000) 0 nil])
([nil nil ((1753 . 1754) (#("." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -1753) (undo-tree-id32917 . -1) (undo-tree-id32918 . -1) (undo-tree-id32919 . -1) (undo-tree-id32920 . -1) (undo-tree-id32921 . -1) (undo-tree-id32922 . -1) (undo-tree-id32923 . -1) (undo-tree-id32924 . -1) (undo-tree-id32925 . -1) 1754 (1753 . 1754) (#("C" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 1753) (undo-tree-id32926 . 1) (undo-tree-id32927 . -1) (undo-tree-id32928 . -1) (undo-tree-id32929 . -1)) nil (25774 60094 952861 451000) 0 nil])
([nil nil ((#("Consequently" 0 12 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1795) (undo-tree-id32954 . -11) (undo-tree-id32955 . -5) (undo-tree-id32956 . -5) (undo-tree-id32957 . -5) (undo-tree-id32958 . -5) (undo-tree-id32959 . -5) (undo-tree-id32960 . -5) (undo-tree-id32961 . -5) (undo-tree-id32962 . -5) (undo-tree-id32963 . -5) (undo-tree-id32964 . -5) (undo-tree-id32965 . -5) (undo-tree-id32966 . -5) (undo-tree-id32967 . -5) (undo-tree-id32968 . -5) (undo-tree-id32969 . -5) (undo-tree-id32970 . -5) (undo-tree-id32971 . -5) (undo-tree-id32972 . -5) (undo-tree-id32973 . -5) (undo-tree-id32974 . -5) (undo-tree-id32975 . -5) (undo-tree-id32976 . -5) (undo-tree-id32977 . -5) (undo-tree-id32978 . -5) (undo-tree-id32979 . -5) (undo-tree-id32980 . -5) (undo-tree-id32981 . -12) (t 25774 60094 987897 763000)) nil (25774 60125 42674 53000) 0 nil])
([nil nil ((#(", from reading the input sequence twice" 0 8 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 8 39 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1795) (undo-tree-id32952 . -38) (undo-tree-id32953 . -39)) nil (25774 60125 42651 310000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1795) (undo-tree-id32950 . -1) (undo-tree-id32951 . -2)) nil (25774 60125 42647 667000) 0 nil])
([nil nil ((#("we " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1795) (undo-tree-id32948 . -2) (undo-tree-id32949 . -3)) nil (25774 60125 42641 867000) 0 nil])
([nil nil ((#("have " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1795) (undo-tree-id32930 . -4) (undo-tree-id32931 . -5) (undo-tree-id32932 . -5) (undo-tree-id32933 . -5) (undo-tree-id32934 . -5) (undo-tree-id32935 . -5) (undo-tree-id32936 . -5) (undo-tree-id32937 . -5) (undo-tree-id32938 . -5) (undo-tree-id32939 . -5) (undo-tree-id32940 . -5) (undo-tree-id32941 . -5) (undo-tree-id32942 . -5) (undo-tree-id32943 . -5) (undo-tree-id32944 . -5) (undo-tree-id32945 . -5) (undo-tree-id32946 . -5) (undo-tree-id32947 . -5)) nil (25774 60125 42262 345000) 0 nil])
([nil nil ((1795 . 1796) (#("t" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1795)) nil (25774 60125 42234 614000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1846) (undo-tree-id32982 . -1) (t 25774 60125 76260 532000)) nil (25774 60127 105763 548000) 0 nil])
([nil nil ((#("These " 0 6 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1849) (undo-tree-id32983 . -5) (undo-tree-id32984 . -6) (t 25774 60127 144285 329000)) nil (25774 60139 440668 235000) 0 nil])
([nil nil ((1849 . 1853)) nil (25774 60139 440652 624000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1893) (undo-tree-id32985 . -1) (t 25774 60139 476432 854000)) nil (25774 60142 394144 738000) 0 nil])
([nil nil ((#("Consider " 0 9 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1896) (undo-tree-id33013 . -8) (undo-tree-id33014 . -9) (t 25774 60142 428468 78000)) nil (25774 60159 892157 316000) 0 nil])
([nil nil ((1896 . 1897) (#("c" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1896)) nil (25774 60162 503558 540000) 0 nil] [nil nil ((#("concatenated " 0 13 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1896) (undo-tree-id32990 . -12) (undo-tree-id32991 . -13) (undo-tree-id32992 . -13) (undo-tree-id32993 . -13) (undo-tree-id32994 . -13) (undo-tree-id32995 . -13) (undo-tree-id32996 . -13) (undo-tree-id32997 . -13) (undo-tree-id32998 . -13) (undo-tree-id32999 . -13) (undo-tree-id33000 . -13) (undo-tree-id33001 . -13) (undo-tree-id33002 . -13) (undo-tree-id33003 . -13) (undo-tree-id33004 . -13) (undo-tree-id33005 . -13) (undo-tree-id33006 . -13) (undo-tree-id33007 . -13) (undo-tree-id33008 . -13) (undo-tree-id33009 . -13) (undo-tree-id33010 . -13) (undo-tree-id33011 . -13) (undo-tree-id33012 . -13)) ((1896 . 1909)) (25774 60158 535705 198000) 0 nil])
([nil nil ((#("It " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2046) (undo-tree-id33019 . -2) (undo-tree-id33020 . -3) (t 25774 60162 540707 171000)) nil (25774 60237 467364 137000) 0 nil])
([nil nil ((#("hidden " 0 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1896) (undo-tree-id32988 . -6) (undo-tree-id32989 . -7)) ((1896 . 1903)) (25774 60158 358166 546000) 0 nil])
([nil nil ((#("receives " 0 9 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2046) (undo-tree-id33017 . -8) (undo-tree-id33018 . -9)) nil (25774 60237 467631 598000) 0 nil])
([nil nil ((#("state " 0 6 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1896) (undo-tree-id32986 . -5) (undo-tree-id32987 . -6)) ((1896 . 1902)) (25774 60158 357557 723000) 0 nil])
([nil nil ((2046 . 2047) (#("t" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2046)) nil (25774 60242 117533 200000) 0 nil] [nil nil ((#("the " 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2046) (undo-tree-id33015 . -3) (undo-tree-id33016 . -4)) ((2046 . 2050)) (25774 60237 467355 107000) 0 nil])
nil
([nil nil ((#("Note " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2161) (undo-tree-id33025 . -4) (undo-tree-id33026 . -5) (t 25774 60242 153639 341000)) nil (25774 60270 968740 894000) 0 nil])
nil
([nil nil ((#("that " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2161) (undo-tree-id33023 . -4) (undo-tree-id33024 . -5)) nil (25774 60270 968737 775000) 0 nil])
([nil nil ((#("each " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2161) (undo-tree-id33021 . -4) (undo-tree-id33022 . -5)) nil (25774 60270 968732 175000) 0 nil])
([nil nil ((#("sequence " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 5 6 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 6 9 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2171) (undo-tree-id33031 . -8) (undo-tree-id33032 . -9) (undo-tree-id33033 . -9) (undo-tree-id33034 . -9) (undo-tree-id33035 . -9) (undo-tree-id33036 . -9) (undo-tree-id33037 . -9) (undo-tree-id33038 . -9) (undo-tree-id33039 . -9) (undo-tree-id33040 . -9) (undo-tree-id33041 . -9) (undo-tree-id33042 . -9) (undo-tree-id33043 . -9) (undo-tree-id33044 . -9) (undo-tree-id33045 . -9) (undo-tree-id33046 . -9) (undo-tree-id33047 . -9) (undo-tree-id33048 . -9) (undo-tree-id33049 . -9) (undo-tree-id33050 . -9) (undo-tree-id33051 . -9) (undo-tree-id33052 . -9) (undo-tree-id33053 . -9) (undo-tree-id33054 . -9) (undo-tree-id33055 . -9) (undo-tree-id33056 . -9) (undo-tree-id33057 . -9) (undo-tree-id33058 . -9) (undo-tree-id33059 . -9) (undo-tree-id33060 . -9) (undo-tree-id33061 . -9) (undo-tree-id33062 . -9) (undo-tree-id33063 . -9) (undo-tree-id33064 . -9) (undo-tree-id33065 . -9) (undo-tree-id33066 . -9) (undo-tree-id33067 . -9) (undo-tree-id33068 . -9) (undo-tree-id33069 . -9) (undo-tree-id33070 . -9) (undo-tree-id33071 . -9) (undo-tree-id33072 . -9) (undo-tree-id33073 . -9) (undo-tree-id33074 . -9) (undo-tree-id33075 . -9) (undo-tree-id33076 . -9) (undo-tree-id33077 . -9) (undo-tree-id33078 . -9) (undo-tree-id33079 . -9) (undo-tree-id33080 . -9) (undo-tree-id33081 . -9) (undo-tree-id33082 . -9) (undo-tree-id33083 . -9) (undo-tree-id33084 . -9) (t 25774 60271 1971 952000)) nil (25774 60284 477563 450000) 0 nil])
([nil nil ((#("set " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2192) (undo-tree-id33029 . -3) (undo-tree-id33030 . -4)) nil (25774 60284 477523 962000) 0 nil])
([nil nil ((#("of " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2192) (undo-tree-id33027 . -2) (undo-tree-id33028 . -3)) nil (25774 60284 477518 503000) 0 nil])
([nil nil ((2266 . 2271) (#(":" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -2266) (undo-tree-id33585 . -1) (undo-tree-id33586 . -1) (undo-tree-id33587 . -1) (undo-tree-id33588 . -1) (undo-tree-id33589 . -1) (undo-tree-id33590 . -1) (undo-tree-id33591 . -1) (undo-tree-id33592 . -1) (undo-tree-id33593 . -1) (undo-tree-id33594 . -1) (undo-tree-id33595 . -1) (undo-tree-id33596 . -1) (undo-tree-id33597 . -1) (undo-tree-id33598 . -1) (undo-tree-id33599 . -1) (undo-tree-id33600 . -1) (undo-tree-id33601 . -1) (undo-tree-id33602 . -1) (undo-tree-id33603 . -1) 2267 (2266 . 2267) (#("," 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -2266) (undo-tree-id33604 . -1) (undo-tree-id33605 . -1) (undo-tree-id33606 . -1) (undo-tree-id33607 . -1) (undo-tree-id33608 . -1) (undo-tree-id33609 . -1) (undo-tree-id33610 . -1) (undo-tree-id33611 . -1) (undo-tree-id33612 . -1) (undo-tree-id33613 . -1) (undo-tree-id33614 . -1) (undo-tree-id33615 . -1) (undo-tree-id33616 . -1) (undo-tree-id33617 . -1) (undo-tree-id33618 . -1) (undo-tree-id33619 . -1) (undo-tree-id33620 . -1) (undo-tree-id33621 . -1) (undo-tree-id33622 . -1) (undo-tree-id33623 . -1) (undo-tree-id33624 . -1) (undo-tree-id33625 . -1) (undo-tree-id33626 . -1) (undo-tree-id33627 . -1) (undo-tree-id33628 . -1) (undo-tree-id33629 . -1) (undo-tree-id33630 . -1) (undo-tree-id33631 . -1) (undo-tree-id33632 . -1) (undo-tree-id33633 . -1) 2267 (t 25774 60284 510126 822000)) nil (25774 60349 337220 78000) 0 nil])
([nil nil ((2300 . 2301) (2299 . 2300) (#("1" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -2299) (undo-tree-id33545 . -1) (undo-tree-id33546 . -1) (undo-tree-id33547 . -1) (undo-tree-id33548 . -1) (undo-tree-id33549 . -1) (undo-tree-id33550 . -1) (undo-tree-id33551 . -1) (undo-tree-id33552 . -1) (undo-tree-id33553 . -1) (undo-tree-id33554 . -1) (undo-tree-id33555 . -1) (undo-tree-id33556 . -1) (undo-tree-id33557 . -1) (undo-tree-id33558 . -1) (undo-tree-id33559 . -1) (undo-tree-id33560 . -1) (undo-tree-id33561 . -1) (undo-tree-id33562 . -1) (undo-tree-id33563 . -1) (undo-tree-id33564 . -1) (undo-tree-id33565 . -1) (undo-tree-id33566 . -1) (undo-tree-id33567 . -1) (undo-tree-id33568 . -1) (undo-tree-id33569 . -1) (undo-tree-id33570 . -1) (undo-tree-id33571 . -1) (undo-tree-id33572 . -1) (undo-tree-id33573 . -1) (undo-tree-id33574 . -1) (undo-tree-id33575 . -1) (undo-tree-id33576 . -1) (undo-tree-id33577 . -1) (undo-tree-id33578 . -1) (undo-tree-id33579 . -1) (undo-tree-id33580 . -1) (undo-tree-id33581 . -1) (undo-tree-id33582 . -1) (undo-tree-id33583 . -1) (undo-tree-id33584 . -1) 2300 (2297 . 2300)) nil (25774 60349 337187 955000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2299) (undo-tree-id33444 . -1) (undo-tree-id33445 . -1) (undo-tree-id33446 . -1) (undo-tree-id33447 . -1) (undo-tree-id33448 . -1) (undo-tree-id33449 . -1) (undo-tree-id33450 . -1) (undo-tree-id33451 . -1) (undo-tree-id33452 . -1) (undo-tree-id33453 . -1) (undo-tree-id33454 . -1) (undo-tree-id33455 . -1) (undo-tree-id33456 . -1) (undo-tree-id33457 . -1) (undo-tree-id33458 . -1) (undo-tree-id33459 . -1) (undo-tree-id33460 . -1) (undo-tree-id33461 . -1) (undo-tree-id33462 . -1) (undo-tree-id33463 . -1) (undo-tree-id33464 . -1) (undo-tree-id33465 . -1) (undo-tree-id33466 . -1) (undo-tree-id33467 . -1) (undo-tree-id33468 . -1) (undo-tree-id33469 . -1) (undo-tree-id33470 . -1) (undo-tree-id33471 . -1) (undo-tree-id33472 . -1) (undo-tree-id33473 . -1) (undo-tree-id33474 . -1) (undo-tree-id33475 . -1) (undo-tree-id33476 . -1) (undo-tree-id33477 . -1) (undo-tree-id33478 . -1) (undo-tree-id33479 . -1) (undo-tree-id33480 . -1) (undo-tree-id33481 . -1) (undo-tree-id33482 . -1) (undo-tree-id33483 . -1) (undo-tree-id33484 . -1) (undo-tree-id33485 . -1) (undo-tree-id33486 . -1) (undo-tree-id33487 . -1) (undo-tree-id33488 . -1) (undo-tree-id33489 . -1) (undo-tree-id33490 . -1) (undo-tree-id33491 . -1) (undo-tree-id33492 . -1) (undo-tree-id33493 . -1) (undo-tree-id33494 . -1) (undo-tree-id33495 . -1) (undo-tree-id33496 . -1) (undo-tree-id33497 . -1) (undo-tree-id33498 . -1) (undo-tree-id33499 . -1) (undo-tree-id33500 . -1) (undo-tree-id33501 . -1) (undo-tree-id33502 . -1) (undo-tree-id33503 . -1) (undo-tree-id33504 . -1) (undo-tree-id33505 . -1) (undo-tree-id33506 . -1) (undo-tree-id33507 . -1) (undo-tree-id33508 . -1) (undo-tree-id33509 . -1) (undo-tree-id33510 . -1) (undo-tree-id33511 . -1) (undo-tree-id33512 . -1) (undo-tree-id33513 . -1) (undo-tree-id33514 . -1) (undo-tree-id33515 . -1) (undo-tree-id33516 . -1) (undo-tree-id33517 . -1) (undo-tree-id33518 . -1) (undo-tree-id33519 . -1) (undo-tree-id33520 . -1) (undo-tree-id33521 . -1) (undo-tree-id33522 . -1) (undo-tree-id33523 . -1) (undo-tree-id33524 . -1) (undo-tree-id33525 . -1) (undo-tree-id33526 . -1) (undo-tree-id33527 . -1) (undo-tree-id33528 . -1) (undo-tree-id33529 . -1) (undo-tree-id33530 . -1) (undo-tree-id33531 . -1) (undo-tree-id33532 . -1) (undo-tree-id33533 . -1) (undo-tree-id33534 . -1) (undo-tree-id33535 . -1) (undo-tree-id33536 . -1) (undo-tree-id33537 . -1) (undo-tree-id33538 . -1) (undo-tree-id33539 . -1) (undo-tree-id33540 . -1) (undo-tree-id33541 . -1) (undo-tree-id33542 . -1) (undo-tree-id33543 . -1) (undo-tree-id33544 . -1)) nil (25774 60349 337158 252000) 0 nil])
([nil nil ((2301 . 2302) (2300 . 2301) (2299 . 2300)) nil (25774 60349 337099 71000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2300) (undo-tree-id33396 . -1) (undo-tree-id33397 . -1) (undo-tree-id33398 . -1) (undo-tree-id33399 . -1) (undo-tree-id33400 . -1) (undo-tree-id33401 . -1) (undo-tree-id33402 . -1) (undo-tree-id33403 . -1) (undo-tree-id33404 . -1) (undo-tree-id33405 . -1) (undo-tree-id33406 . -1) (undo-tree-id33407 . -1) (undo-tree-id33408 . -1) (undo-tree-id33409 . -1) (undo-tree-id33410 . -1) (undo-tree-id33411 . -1) (undo-tree-id33412 . -1) (undo-tree-id33413 . -1) (undo-tree-id33414 . -1) (undo-tree-id33415 . -1) (undo-tree-id33416 . -1) (undo-tree-id33417 . -1) (undo-tree-id33418 . -1) (undo-tree-id33419 . -1) (undo-tree-id33420 . -1) (undo-tree-id33421 . -1) (undo-tree-id33422 . -1) (undo-tree-id33423 . -1) (undo-tree-id33424 . -1) (undo-tree-id33425 . -1) (undo-tree-id33426 . -1) (undo-tree-id33427 . -1) (undo-tree-id33428 . -1) (undo-tree-id33429 . -1) (undo-tree-id33430 . -1) (undo-tree-id33431 . -1) (undo-tree-id33432 . -1) (undo-tree-id33433 . -1) (undo-tree-id33434 . -1) (undo-tree-id33435 . -1) (undo-tree-id33436 . -1) (undo-tree-id33437 . -1) (undo-tree-id33438 . -1) (undo-tree-id33439 . -1) (undo-tree-id33440 . -1) (undo-tree-id33441 . -1) (undo-tree-id33442 . -1) (undo-tree-id33443 . -1)) nil (25774 60349 337096 478000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2300) (undo-tree-id33393 . -1) (undo-tree-id33394 . -1) (undo-tree-id33395 . -1)) nil (25774 60349 337064 849000) 0 nil])
([nil nil ((#("(3)" 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2298) (undo-tree-id33109 . 1) (undo-tree-id33110 . -2) (undo-tree-id33111 . -2) (undo-tree-id33112 . -1) (undo-tree-id33113 . -1) (undo-tree-id33114 . -1) (undo-tree-id33115 . -1) (undo-tree-id33116 . -1) (undo-tree-id33117 . -1) (undo-tree-id33118 . -1) (undo-tree-id33119 . -1) (undo-tree-id33120 . -1) (undo-tree-id33121 . -1) (undo-tree-id33122 . -1) (undo-tree-id33123 . -1) (undo-tree-id33124 . -1) (undo-tree-id33125 . -1) (undo-tree-id33126 . -1) (undo-tree-id33127 . -1) (undo-tree-id33128 . -1) (undo-tree-id33129 . -1) (undo-tree-id33130 . -1) (undo-tree-id33131 . -1) (undo-tree-id33132 . -1) (undo-tree-id33133 . -1) (undo-tree-id33134 . -1) (undo-tree-id33135 . -1) (undo-tree-id33136 . -1) (undo-tree-id33137 . -1) (undo-tree-id33138 . -1) (undo-tree-id33139 . -1) (undo-tree-id33140 . -1) (undo-tree-id33141 . -1) (undo-tree-id33142 . -1) (undo-tree-id33143 . -1) (undo-tree-id33144 . -1) (undo-tree-id33145 . -1) (undo-tree-id33146 . -1) (undo-tree-id33147 . -1) (undo-tree-id33148 . -1) (undo-tree-id33149 . -1) (undo-tree-id33150 . -1) (undo-tree-id33151 . -1) (undo-tree-id33152 . -1) (undo-tree-id33153 . -1) (undo-tree-id33154 . -1) (undo-tree-id33155 . -1) (undo-tree-id33156 . -1) (undo-tree-id33157 . -1) (undo-tree-id33158 . -1) (undo-tree-id33159 . -1) (undo-tree-id33160 . -1) (undo-tree-id33161 . -1) (undo-tree-id33162 . -1) (undo-tree-id33163 . -1) (undo-tree-id33164 . -1) (undo-tree-id33165 . -1) (undo-tree-id33166 . -1) (undo-tree-id33167 . -1) (undo-tree-id33168 . -1) (undo-tree-id33169 . -1) (undo-tree-id33170 . -1) (undo-tree-id33171 . -1) (undo-tree-id33172 . -1) (undo-tree-id33173 . -1) (undo-tree-id33174 . -1) (undo-tree-id33175 . -1) (undo-tree-id33176 . -1) (undo-tree-id33177 . -1) (undo-tree-id33178 . -1) (undo-tree-id33179 . -1) (undo-tree-id33180 . -1) (undo-tree-id33181 . -1) (undo-tree-id33182 . -1) (undo-tree-id33183 . -1) (undo-tree-id33184 . -1) (undo-tree-id33185 . -1) (undo-tree-id33186 . -1) (undo-tree-id33187 . -1) (undo-tree-id33188 . -1) (undo-tree-id33189 . -1) (undo-tree-id33190 . -1) (undo-tree-id33191 . -1) (undo-tree-id33192 . -1) (undo-tree-id33193 . -1) (undo-tree-id33194 . -1) (undo-tree-id33195 . -1) (undo-tree-id33196 . -1) (undo-tree-id33197 . -1) (undo-tree-id33198 . -1) (undo-tree-id33199 . -1) (undo-tree-id33200 . -1) (undo-tree-id33201 . -1) (undo-tree-id33202 . -1) (undo-tree-id33203 . -1) (undo-tree-id33204 . -1) (undo-tree-id33205 . -1) (undo-tree-id33206 . -1) (undo-tree-id33207 . -1) (undo-tree-id33208 . -1) (undo-tree-id33209 . -1) (undo-tree-id33210 . -1) (undo-tree-id33211 . -1) (undo-tree-id33212 . -1) (undo-tree-id33213 . -1) (undo-tree-id33214 . -1) (undo-tree-id33215 . -1) (undo-tree-id33216 . -1) (undo-tree-id33217 . -1) (undo-tree-id33218 . -1) (undo-tree-id33219 . -1) (undo-tree-id33220 . -1) (undo-tree-id33221 . -1) (undo-tree-id33222 . -1) (undo-tree-id33223 . -1) (undo-tree-id33224 . -1) (undo-tree-id33225 . -1) (undo-tree-id33226 . -1) (undo-tree-id33227 . -1) (undo-tree-id33228 . -1) (undo-tree-id33229 . -1) (undo-tree-id33230 . -1) (undo-tree-id33231 . -1) (undo-tree-id33232 . -1) (undo-tree-id33233 . -1) (undo-tree-id33234 . -1) (undo-tree-id33235 . -1) (undo-tree-id33236 . -1) (undo-tree-id33237 . -1) (undo-tree-id33238 . -1) (undo-tree-id33239 . -1) (undo-tree-id33240 . -1) (undo-tree-id33241 . -1) (undo-tree-id33242 . -1) (undo-tree-id33243 . -1) (undo-tree-id33244 . -1) (undo-tree-id33245 . -1) (undo-tree-id33246 . -1) (undo-tree-id33247 . -1) (undo-tree-id33248 . -2) (undo-tree-id33249 . -2) (undo-tree-id33250 . -2) (undo-tree-id33251 . -2) (undo-tree-id33252 . -2) (undo-tree-id33253 . -2) (undo-tree-id33254 . -2) (undo-tree-id33255 . -2) (undo-tree-id33256 . -2) (undo-tree-id33257 . -2) (undo-tree-id33258 . -2) (undo-tree-id33259 . -2) (undo-tree-id33260 . -2) (undo-tree-id33261 . -2) (undo-tree-id33262 . -2) (undo-tree-id33263 . -2) (undo-tree-id33264 . -2) (undo-tree-id33265 . -2) (undo-tree-id33266 . -2) (undo-tree-id33267 . -2) (undo-tree-id33268 . -2) (undo-tree-id33269 . -2) (undo-tree-id33270 . -2) (undo-tree-id33271 . -2) (undo-tree-id33272 . -2) (undo-tree-id33273 . -2) (undo-tree-id33274 . -2) (undo-tree-id33275 . -2) (undo-tree-id33276 . -2) (undo-tree-id33277 . -2) (undo-tree-id33278 . -2) (undo-tree-id33279 . -2) (undo-tree-id33280 . -2) (undo-tree-id33281 . -2) (undo-tree-id33282 . -2) (undo-tree-id33283 . -2) (undo-tree-id33284 . -2) (undo-tree-id33285 . -2) (undo-tree-id33286 . -2) (undo-tree-id33287 . -2) (undo-tree-id33288 . -2) (undo-tree-id33289 . -2) (undo-tree-id33290 . -2) (undo-tree-id33291 . -2) (undo-tree-id33292 . -2) (undo-tree-id33293 . -2) (undo-tree-id33294 . -2) (undo-tree-id33295 . -2) (undo-tree-id33296 . -2) (undo-tree-id33297 . -2) (undo-tree-id33298 . -2) (undo-tree-id33299 . -2) (undo-tree-id33300 . -2) (undo-tree-id33301 . -2) (undo-tree-id33302 . -2) (undo-tree-id33303 . -2) (undo-tree-id33304 . -2) (undo-tree-id33305 . -2) (undo-tree-id33306 . -2) (undo-tree-id33307 . -2) (undo-tree-id33308 . -2) (undo-tree-id33309 . -2) (undo-tree-id33310 . -2) (undo-tree-id33311 . -2) (undo-tree-id33312 . -2) (undo-tree-id33313 . -2) (undo-tree-id33314 . -2) (undo-tree-id33315 . -2) (undo-tree-id33316 . -2) (undo-tree-id33317 . -2) (undo-tree-id33318 . -2) (undo-tree-id33319 . -2) (undo-tree-id33320 . -2) (undo-tree-id33321 . -2) (undo-tree-id33322 . -2) (undo-tree-id33323 . -2) (undo-tree-id33324 . -2) (undo-tree-id33325 . -2) (undo-tree-id33326 . -2) (undo-tree-id33327 . -2) (undo-tree-id33328 . -2) (undo-tree-id33329 . -2) (undo-tree-id33330 . -2) (undo-tree-id33331 . -2) (undo-tree-id33332 . -2) (undo-tree-id33333 . -2) (undo-tree-id33334 . -2) (undo-tree-id33335 . -2) (undo-tree-id33336 . -2) (undo-tree-id33337 . -2) (undo-tree-id33338 . -2) (undo-tree-id33339 . -2) (undo-tree-id33340 . -2) (undo-tree-id33341 . -2) (undo-tree-id33342 . -2) (undo-tree-id33343 . -2) (undo-tree-id33344 . -2) (undo-tree-id33345 . -2) (undo-tree-id33346 . -2) (undo-tree-id33347 . -2) (undo-tree-id33348 . -2) (undo-tree-id33349 . -2) (undo-tree-id33350 . -2) (undo-tree-id33351 . -2) (undo-tree-id33352 . -2) (undo-tree-id33353 . -2) (undo-tree-id33354 . -2) (undo-tree-id33355 . -2) (undo-tree-id33356 . -2) (undo-tree-id33357 . -2) (undo-tree-id33358 . -2) (undo-tree-id33359 . -2) (undo-tree-id33360 . -2) (undo-tree-id33361 . -2) (undo-tree-id33362 . -2) (undo-tree-id33363 . -2) (undo-tree-id33364 . -2) (undo-tree-id33365 . -2) (undo-tree-id33366 . -2) (undo-tree-id33367 . -2) (undo-tree-id33368 . -2) (undo-tree-id33369 . -2) (undo-tree-id33370 . -2) (undo-tree-id33371 . -2) (undo-tree-id33372 . -1) (undo-tree-id33373 . -1) (undo-tree-id33374 . -1) (undo-tree-id33375 . -1) (undo-tree-id33376 . -1) (undo-tree-id33377 . -1) (undo-tree-id33378 . -1) (undo-tree-id33379 . -1) (undo-tree-id33380 . -1) (undo-tree-id33381 . -1) (undo-tree-id33382 . -1) (undo-tree-id33383 . -1) (undo-tree-id33384 . -1) (undo-tree-id33385 . -1) (undo-tree-id33386 . -1) (undo-tree-id33387 . -1) (undo-tree-id33388 . 3) (undo-tree-id33389 . -1) (undo-tree-id33390 . 1) (undo-tree-id33391 . -3) (undo-tree-id33392 . -3)) nil (25774 60349 337051 546000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2304 . 2305) (nil fontified nil 2302 . 2305) (2302 . 2305) 2301) nil (25774 60349 336222 943000) 0 nil])
([nil nil ((2302 . 2303)) nil (25774 60349 336221 693000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2298) (undo-tree-id33086 . -1) (undo-tree-id33087 . -1) (undo-tree-id33088 . -1) (undo-tree-id33089 . -1) (undo-tree-id33090 . -1) (undo-tree-id33091 . -1) (undo-tree-id33092 . -1) (undo-tree-id33093 . -1) (undo-tree-id33094 . -1) (undo-tree-id33095 . -1) (undo-tree-id33096 . -1) (undo-tree-id33097 . -1) (undo-tree-id33098 . -1) (undo-tree-id33099 . -1) (undo-tree-id33100 . -1) (undo-tree-id33101 . -1) (undo-tree-id33102 . -1) (undo-tree-id33103 . -1) (undo-tree-id33104 . -1) (undo-tree-id33105 . -1) (undo-tree-id33106 . -1) (undo-tree-id33107 . -1) (undo-tree-id33108 . -1)) nil (25774 60349 336219 673000) 0 nil])
([nil nil ((2245 . 2249)) nil (25774 60349 336200 202000) 0 nil])
([nil nil ((2273 . 2274) (#("1" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2273) (undo-tree-id33085 . -1)) nil (25774 60349 336196 136000) 0 nil])
([nil nil ((2211 . 2397) (#("- , which are used to generate the predicted output for target word

- The hidden state depends on the (1) previous hidden state, (2) the previous target word, and (3) the context vector" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 52 66 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 66 67 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 67 68 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 68 69 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 69 70 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 70 71 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 71 131 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 131 132 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 132 133 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 133 146 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 146 147 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 147 158 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 158 160 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 160 164 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 164 166 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 166 167 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil rear-nonsticky t) 167 186 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2211) (undo-tree-id33643 . 79) (undo-tree-id33644 . -163) (undo-tree-id33645 . -186) (undo-tree-id33646 . -186) (undo-tree-id33647 . -128) (undo-tree-id33648 . -128) (undo-tree-id33649 . -128) (undo-tree-id33650 . -128) (undo-tree-id33651 . -128) (undo-tree-id33652 . -128) (undo-tree-id33653 . -128) (undo-tree-id33654 . -128) (undo-tree-id33655 . -128) (undo-tree-id33656 . -128) (undo-tree-id33657 . -128) (undo-tree-id33658 . -128) (undo-tree-id33659 . -128) (undo-tree-id33660 . -128) (undo-tree-id33661 . -128) (undo-tree-id33662 . -128) (undo-tree-id33663 . -128) (undo-tree-id33664 . -128) (undo-tree-id33665 . -128) (undo-tree-id33666 . -128) (undo-tree-id33667 . -128) (undo-tree-id33668 . -128) (undo-tree-id33669 . -128) (undo-tree-id33670 . -128) (undo-tree-id33671 . -128) (undo-tree-id33672 . -128) (undo-tree-id33673 . -128) (undo-tree-id33674 . -128) (undo-tree-id33675 . -128) (undo-tree-id33676 . -128) (undo-tree-id33677 . -128) (undo-tree-id33678 . -128) (undo-tree-id33679 . -128) (undo-tree-id33680 . -128) (undo-tree-id33681 . -128) (undo-tree-id33682 . -128) (undo-tree-id33683 . -128) (undo-tree-id33684 . -128) (undo-tree-id33685 . -128) (undo-tree-id33686 . -128) (undo-tree-id33687 . -128) (undo-tree-id33688 . -128) (undo-tree-id33689 . -128) (undo-tree-id33690 . -128) (undo-tree-id33691 . -128) (undo-tree-id33692 . -160) (undo-tree-id33693 . -160) (undo-tree-id33694 . -160) (undo-tree-id33695 . -160) (undo-tree-id33696 . -160) (undo-tree-id33697 . -160) (undo-tree-id33698 . -160) (undo-tree-id33699 . -160) (undo-tree-id33700 . -160) (undo-tree-id33701 . -160) (undo-tree-id33702 . -160) (undo-tree-id33703 . -160) (undo-tree-id33704 . -160) (undo-tree-id33705 . -160) (undo-tree-id33706 . -160) (undo-tree-id33707 . -160) (undo-tree-id33708 . -160) (undo-tree-id33709 . -160) (undo-tree-id33710 . -160) (undo-tree-id33711 . -160) (undo-tree-id33712 . -160) (undo-tree-id33713 . -160) (undo-tree-id33714 . -160) (undo-tree-id33715 . -160) (undo-tree-id33716 . -160) (undo-tree-id33717 . -160) (undo-tree-id33718 . -160) (undo-tree-id33719 . -160) (undo-tree-id33720 . -160) (undo-tree-id33721 . -160) (undo-tree-id33722 . -160) (undo-tree-id33723 . -160) (undo-tree-id33724 . -160) (undo-tree-id33725 . -160) (undo-tree-id33726 . -160) (undo-tree-id33727 . -160) (undo-tree-id33728 . -160) (undo-tree-id33729 . -160) (undo-tree-id33730 . -160) (undo-tree-id33731 . -160) (undo-tree-id33732 . -160) (undo-tree-id33733 . -160) (undo-tree-id33734 . -160) (undo-tree-id33735 . -160) (undo-tree-id33736 . -160) (undo-tree-id33737 . -160) (undo-tree-id33738 . -160) (undo-tree-id33739 . -160) (undo-tree-id33740 . -160) (undo-tree-id33741 . -160) (undo-tree-id33742 . -160) (undo-tree-id33743 . -160) (undo-tree-id33744 . -160) (undo-tree-id33745 . -160) (undo-tree-id33746 . -160) (undo-tree-id33747 . -160) (undo-tree-id33748 . -160) (undo-tree-id33749 . -160) (undo-tree-id33750 . -160) (undo-tree-id33751 . -160) (undo-tree-id33752 . -160) (undo-tree-id33753 . -160) (undo-tree-id33754 . -160) (undo-tree-id33755 . -160) (undo-tree-id33756 . -160) (undo-tree-id33757 . -160) (undo-tree-id33758 . -160) (undo-tree-id33759 . -160) (undo-tree-id33760 . -160) (undo-tree-id33761 . -160) (undo-tree-id33762 . -160) (undo-tree-id33763 . -160) (undo-tree-id33764 . -160) (undo-tree-id33765 . -160) (undo-tree-id33766 . -160) (undo-tree-id33767 . -160) (undo-tree-id33768 . -160) (undo-tree-id33769 . -160) (undo-tree-id33770 . -160) (undo-tree-id33771 . -160) (undo-tree-id33772 . -160) (undo-tree-id33773 . -160) (undo-tree-id33774 . -160) (undo-tree-id33775 . -160) (undo-tree-id33776 . -160) (undo-tree-id33777 . -160) (undo-tree-id33778 . -160) (undo-tree-id33779 . -160) (undo-tree-id33780 . -160) (undo-tree-id33781 . -160) (undo-tree-id33782 . -160) (undo-tree-id33783 . -160) (undo-tree-id33784 . -160) (undo-tree-id33785 . -160) (undo-tree-id33786 . -160) (undo-tree-id33787 . -160) (undo-tree-id33788 . -160) (undo-tree-id33789 . -160) (undo-tree-id33790 . -160) (undo-tree-id33791 . -160) (undo-tree-id33792 . -160) (undo-tree-id33793 . -160) (undo-tree-id33794 . -160) (undo-tree-id33795 . -160) (undo-tree-id33796 . -160) (undo-tree-id33797 . -160) (undo-tree-id33798 . -160) (undo-tree-id33799 . -160) (undo-tree-id33800 . -160) (undo-tree-id33801 . -160) (undo-tree-id33802 . -160) (undo-tree-id33803 . -160) (undo-tree-id33804 . -160) (undo-tree-id33805 . -160) (undo-tree-id33806 . -160) (undo-tree-id33807 . -160) (undo-tree-id33808 . -160) (undo-tree-id33809 . -160) (undo-tree-id33810 . -160) (undo-tree-id33811 . -160) (undo-tree-id33812 . -160) (undo-tree-id33813 . -160) (undo-tree-id33814 . -160) (undo-tree-id33815 . -160) (undo-tree-id33816 . -160) (undo-tree-id33817 . -160) (undo-tree-id33818 . -160) (undo-tree-id33819 . -160) (undo-tree-id33820 . -160) (undo-tree-id33821 . -160) (undo-tree-id33822 . -160) (undo-tree-id33823 . -160) (undo-tree-id33824 . -160) (undo-tree-id33825 . -160) (undo-tree-id33826 . -160) (undo-tree-id33827 . -160) (undo-tree-id33828 . -160) (undo-tree-id33829 . -160) (undo-tree-id33830 . -160) (undo-tree-id33831 . -160) (undo-tree-id33832 . -160) (undo-tree-id33833 . -160) (undo-tree-id33834 . -160) (undo-tree-id33835 . -160) (undo-tree-id33836 . -160) (undo-tree-id33837 . -160) (undo-tree-id33838 . -160) (undo-tree-id33839 . -160) (undo-tree-id33840 . -160) (undo-tree-id33841 . -160) (undo-tree-id33842 . -160) (undo-tree-id33843 . -160) (undo-tree-id33844 . -160) (undo-tree-id33845 . -160) (undo-tree-id33846 . -160) (undo-tree-id33847 . -160) (undo-tree-id33848 . -160) (undo-tree-id33849 . -160) (undo-tree-id33850 . -160) (undo-tree-id33851 . -160) (undo-tree-id33852 . -160) (undo-tree-id33853 . -160) (undo-tree-id33854 . -160) (undo-tree-id33855 . -160) (undo-tree-id33856 . -160) (undo-tree-id33857 . -160) (undo-tree-id33858 . -160) (undo-tree-id33859 . -160) (undo-tree-id33860 . -160) (undo-tree-id33861 . -160) (undo-tree-id33862 . -160) (undo-tree-id33863 . -160) (undo-tree-id33864 . -160) (undo-tree-id33865 . -160) (undo-tree-id33866 . -160) (undo-tree-id33867 . -160) (undo-tree-id33868 . -160) (undo-tree-id33869 . -160) (undo-tree-id33870 . -160) (undo-tree-id33871 . -160) (undo-tree-id33872 . -160) (undo-tree-id33873 . -160) (undo-tree-id33874 . -160) (undo-tree-id33875 . -160) (undo-tree-id33876 . -160) (undo-tree-id33877 . -160) (undo-tree-id33878 . -160) (undo-tree-id33879 . -160) (undo-tree-id33880 . -160) (undo-tree-id33881 . -160) (undo-tree-id33882 . -160) (undo-tree-id33883 . -160) (undo-tree-id33884 . -160) (undo-tree-id33885 . -160) (undo-tree-id33886 . -160) (undo-tree-id33887 . -160) (undo-tree-id33888 . -160) (undo-tree-id33889 . -160) (undo-tree-id33890 . -160) (undo-tree-id33891 . -160) (undo-tree-id33892 . -160) (undo-tree-id33893 . -160) (undo-tree-id33894 . -160) (undo-tree-id33895 . -160) (undo-tree-id33896 . -160) (undo-tree-id33897 . -160) (undo-tree-id33898 . -160) (undo-tree-id33899 . -160) (undo-tree-id33900 . -160) (undo-tree-id33901 . -160) (undo-tree-id33902 . -160) (undo-tree-id33903 . -160) (undo-tree-id33904 . -160) (undo-tree-id33905 . -160) (undo-tree-id33906 . -160) (undo-tree-id33907 . -160) (undo-tree-id33908 . -160) (undo-tree-id33909 . -160) (undo-tree-id33910 . -160) (undo-tree-id33911 . -160) (undo-tree-id33912 . -160) (undo-tree-id33913 . -160) (undo-tree-id33914 . -160) (undo-tree-id33915 . -160) (undo-tree-id33916 . -160) (undo-tree-id33917 . -160) (undo-tree-id33918 . -160) (undo-tree-id33919 . -160) (undo-tree-id33920 . -160) (undo-tree-id33921 . -160) (undo-tree-id33922 . -160) (undo-tree-id33923 . -160) (undo-tree-id33924 . -160) (undo-tree-id33925 . -160) (undo-tree-id33926 . -160) (undo-tree-id33927 . -160) (undo-tree-id33928 . -160) (undo-tree-id33929 . -160) (undo-tree-id33930 . -160) (undo-tree-id33931 . -160) (undo-tree-id33932 . -160) (undo-tree-id33933 . -160) (undo-tree-id33934 . -160) (undo-tree-id33935 . -160) (undo-tree-id33936 . -160) (undo-tree-id33937 . -160) (undo-tree-id33938 . -160) (undo-tree-id33939 . -160) (undo-tree-id33940 . -160) (undo-tree-id33941 . -160) (undo-tree-id33942 . -160) (undo-tree-id33943 . -160) (undo-tree-id33944 . -160) (undo-tree-id33945 . -160) (undo-tree-id33946 . -160) (undo-tree-id33947 . -160) (undo-tree-id33948 . -160) (undo-tree-id33949 . -160) (undo-tree-id33950 . -160) (undo-tree-id33951 . -160) (undo-tree-id33952 . -160) (undo-tree-id33953 . -160) (undo-tree-id33954 . -160) (undo-tree-id33955 . -160) (undo-tree-id33956 . -160) (undo-tree-id33957 . -160) (undo-tree-id33958 . -160) (undo-tree-id33959 . -160) (undo-tree-id33960 . -160) (undo-tree-id33961 . -160) (undo-tree-id33962 . -160) (undo-tree-id33963 . -160) (undo-tree-id33964 . -160) (undo-tree-id33965 . -160) (undo-tree-id33966 . -160) (undo-tree-id33967 . -160) (undo-tree-id33968 . -160) (undo-tree-id33969 . -160) (undo-tree-id33970 . -160) (undo-tree-id33971 . -160) (undo-tree-id33972 . -160) (undo-tree-id33973 . -160) (undo-tree-id33974 . -160) (undo-tree-id33975 . -160) (undo-tree-id33976 . -160) (undo-tree-id33977 . -160) (undo-tree-id33978 . -160) (undo-tree-id33979 . -160) (undo-tree-id33980 . -160) (undo-tree-id33981 . -160) (undo-tree-id33982 . -160) (undo-tree-id33983 . -160) (undo-tree-id33984 . -160) (undo-tree-id33985 . -160) (undo-tree-id33986 . -160) (undo-tree-id33987 . -160) (undo-tree-id33988 . -160) (undo-tree-id33989 . -136) (undo-tree-id33990 . -136) (undo-tree-id33991 . -136) (undo-tree-id33992 . -136) (undo-tree-id33993 . -136) (undo-tree-id33994 . -136) (undo-tree-id33995 . -136) (undo-tree-id33996 . -136) (undo-tree-id33997 . -136) (undo-tree-id33998 . -136) (undo-tree-id33999 . -136) (undo-tree-id34000 . -136) (undo-tree-id34001 . -136) (undo-tree-id34002 . -136) (undo-tree-id34003 . -136) (undo-tree-id34004 . -136) (undo-tree-id34005 . -136) (undo-tree-id34006 . -136) (undo-tree-id34007 . -136) (undo-tree-id34008 . -136) (undo-tree-id34009 . -136) (undo-tree-id34010 . -136) (undo-tree-id34011 . -136) (undo-tree-id34012 . -136) (undo-tree-id34013 . -136) (undo-tree-id34014 . -136) (undo-tree-id34015 . -136) (undo-tree-id34016 . -136) (undo-tree-id34017 . -136) (undo-tree-id34018 . -136) (undo-tree-id34019 . -136) (undo-tree-id34020 . -136) (undo-tree-id34021 . -136) (undo-tree-id34022 . -136) (undo-tree-id34023 . -136) (undo-tree-id34024 . -136) (undo-tree-id34025 . -136) (undo-tree-id34026 . -136) (undo-tree-id34027 . -136) (undo-tree-id34028 . -136) (undo-tree-id34029 . -136) (undo-tree-id34030 . -136) (undo-tree-id34031 . -136) (undo-tree-id34032 . -136) (undo-tree-id34033 . -136) (undo-tree-id34034 . -136) (undo-tree-id34035 . -136) (undo-tree-id34036 . -136) (undo-tree-id34037 . -136) (undo-tree-id34038 . -136) (undo-tree-id34039 . -136) (undo-tree-id34040 . -136) (undo-tree-id34041 . -136) (undo-tree-id34042 . -136) (undo-tree-id34043 . -136) (undo-tree-id34044 . -136) (undo-tree-id34045 . -136) (undo-tree-id34046 . -136) (undo-tree-id34047 . -136) (undo-tree-id34048 . -136) (undo-tree-id34049 . -136) (undo-tree-id34050 . -136) (undo-tree-id34051 . -136) (undo-tree-id34052 . -136) (undo-tree-id34053 . -136) (undo-tree-id34054 . -136) (undo-tree-id34055 . -136) (undo-tree-id34056 . -136) (undo-tree-id34057 . -136) (undo-tree-id34058 . -136) (undo-tree-id34059 . -136) (undo-tree-id34060 . -136) (undo-tree-id34061 . -136) (undo-tree-id34062 . -136) (undo-tree-id34063 . -136) (undo-tree-id34064 . -136) (undo-tree-id34065 . -136) (undo-tree-id34066 . -136) (undo-tree-id34067 . -136) (undo-tree-id34068 . -136) (undo-tree-id34069 . -136) (undo-tree-id34070 . -136) (undo-tree-id34071 . -136) (undo-tree-id34072 . -136) (undo-tree-id34073 . -136) (undo-tree-id34074 . -136) (undo-tree-id34075 . -136) (undo-tree-id34076 . -136) (undo-tree-id34077 . -136) (undo-tree-id34078 . -136) (undo-tree-id34079 . -136) (undo-tree-id34080 . -136) (undo-tree-id34081 . -136) (undo-tree-id34082 . -136) (undo-tree-id34083 . -136) (undo-tree-id34084 . -136) (undo-tree-id34085 . -136) (undo-tree-id34086 . -136) (undo-tree-id34087 . -136) (undo-tree-id34088 . -136) (undo-tree-id34089 . -136) (undo-tree-id34090 . -136) (undo-tree-id34091 . -136) (undo-tree-id34092 . -73) (undo-tree-id34093 . -73) (undo-tree-id34094 . -73) (undo-tree-id34095 . -73) (undo-tree-id34096 . -73) (undo-tree-id34097 . -73) (undo-tree-id34098 . -73) (undo-tree-id34099 . -73) (undo-tree-id34100 . -73) (undo-tree-id34101 . -73) (undo-tree-id34102 . -73) (undo-tree-id34103 . -73) (undo-tree-id34104 . -73) (undo-tree-id34105 . -73) (undo-tree-id34106 . -73) (undo-tree-id34107 . -73) (undo-tree-id34108 . -73) (undo-tree-id34109 . -73) (undo-tree-id34110 . -73) (undo-tree-id34111 . -73) (undo-tree-id34112 . -73) (undo-tree-id34113 . -73) (undo-tree-id34114 . -73) (undo-tree-id34115 . -73) (undo-tree-id34116 . -73) (undo-tree-id34117 . -73) (undo-tree-id34118 . -73) (undo-tree-id34119 . -73) (undo-tree-id34120 . -73) (undo-tree-id34121 . -73) (undo-tree-id34122 . -73) (undo-tree-id34123 . -73) (undo-tree-id34124 . -73) (undo-tree-id34125 . -73) (undo-tree-id34126 . -73) (undo-tree-id34127 . -73) (undo-tree-id34128 . -73) (undo-tree-id34129 . -73) (undo-tree-id34130 . -73) (undo-tree-id34131 . -73) (undo-tree-id34132 . -73) (undo-tree-id34133 . -73) (undo-tree-id34134 . -73) (undo-tree-id34135 . -73) (undo-tree-id34136 . -73) (undo-tree-id34137 . -73) (undo-tree-id34138 . -73) (undo-tree-id34139 . -73) (undo-tree-id34140 . -73) (undo-tree-id34141 . -73) (undo-tree-id34142 . -73) (undo-tree-id34143 . -73) (undo-tree-id34144 . -73) (undo-tree-id34145 . -73) (undo-tree-id34146 . -73) (undo-tree-id34147 . -73) (undo-tree-id34148 . -73) (undo-tree-id34149 . -186) (undo-tree-id34150 . -73) (undo-tree-id34151 . -73) (undo-tree-id34152 . -73) (undo-tree-id34153 . -73) (undo-tree-id34154 . -73) (undo-tree-id34155 . -73) (undo-tree-id34156 . -73) (undo-tree-id34157 . -73) (undo-tree-id34158 . -73) (undo-tree-id34159 . -73) (undo-tree-id34160 . -73) (undo-tree-id34161 . -73) (undo-tree-id34162 . -73) (undo-tree-id34163 . -73) (undo-tree-id34164 . -73) (undo-tree-id34165 . -73) (undo-tree-id34166 . -73) (undo-tree-id34167 . -73) (undo-tree-id34168 . -73) (undo-tree-id34169 . -73) (undo-tree-id34170 . -73) (undo-tree-id34171 . -73) (undo-tree-id34172 . -73) (undo-tree-id34173 . -73) (undo-tree-id34174 . -73) (undo-tree-id34175 . -73) (undo-tree-id34176 . -73) (undo-tree-id34177 . -73) (undo-tree-id34178 . -73) (undo-tree-id34179 . -136) (undo-tree-id34180 . -136) (undo-tree-id34181 . -136) (undo-tree-id34182 . -136) (undo-tree-id34183 . -136) (undo-tree-id34184 . -136) (undo-tree-id34185 . -136) (undo-tree-id34186 . -136) (undo-tree-id34187 . -136) (undo-tree-id34188 . -136) (undo-tree-id34189 . -136) (undo-tree-id34190 . -136) (undo-tree-id34191 . -136) (undo-tree-id34192 . -136) (undo-tree-id34193 . -136) (undo-tree-id34194 . -136) (undo-tree-id34195 . -136) (undo-tree-id34196 . -136) (undo-tree-id34197 . -136) (undo-tree-id34198 . -136) (undo-tree-id34199 . -136) (undo-tree-id34200 . -136) (undo-tree-id34201 . -136) (undo-tree-id34202 . -136) (undo-tree-id34203 . -136) (undo-tree-id34204 . -136) (undo-tree-id34205 . -136) (undo-tree-id34206 . -136) (undo-tree-id34207 . -136) (undo-tree-id34208 . -136) (undo-tree-id34209 . -136) (undo-tree-id34210 . -136) (undo-tree-id34211 . -136) (undo-tree-id34212 . -136) (undo-tree-id34213 . -136) (undo-tree-id34214 . -136) (undo-tree-id34215 . -136) (undo-tree-id34216 . -136) (undo-tree-id34217 . -136) (undo-tree-id34218 . -136) (undo-tree-id34219 . -136) (undo-tree-id34220 . -136) (undo-tree-id34221 . -136) (undo-tree-id34222 . -136) (undo-tree-id34223 . -136) (undo-tree-id34224 . -136) (undo-tree-id34225 . -136) (undo-tree-id34226 . -136) (undo-tree-id34227 . -136) (undo-tree-id34228 . -136) (undo-tree-id34229 . -136) (undo-tree-id34230 . -158) (undo-tree-id34231 . -158) (undo-tree-id34232 . -158) (undo-tree-id34233 . -158) (undo-tree-id34234 . -158) (undo-tree-id34235 . -158) (undo-tree-id34236 . -158) (undo-tree-id34237 . -158) (undo-tree-id34238 . -158) (undo-tree-id34239 . -158) (undo-tree-id34240 . -158) (undo-tree-id34241 . -158) (undo-tree-id34242 . -158) (undo-tree-id34243 . -158) (undo-tree-id34244 . -158) (undo-tree-id34245 . -158) (undo-tree-id34246 . -158) (undo-tree-id34247 . -158) (undo-tree-id34248 . -158) (undo-tree-id34249 . -158) (undo-tree-id34250 . -158) (undo-tree-id34251 . -158) (undo-tree-id34252 . -158) (undo-tree-id34253 . -158) (undo-tree-id34254 . -158) (undo-tree-id34255 . -158) (undo-tree-id34256 . -158) (undo-tree-id34257 . -158) (undo-tree-id34258 . -158) (undo-tree-id34259 . -158) (undo-tree-id34260 . -158) (undo-tree-id34261 . -158) (undo-tree-id34262 . -158) (undo-tree-id34263 . -158) (undo-tree-id34264 . -158) (undo-tree-id34265 . -158) (undo-tree-id34266 . -186) (undo-tree-id34267 . -186) (undo-tree-id34268 . -186) (undo-tree-id34269 . -186) (undo-tree-id34270 . -186) (undo-tree-id34271 . -186) (undo-tree-id34272 . -186) (undo-tree-id34273 . -186) (undo-tree-id34274 . -186) (undo-tree-id34275 . -186) (undo-tree-id34276 . -186) (undo-tree-id34277 . -186) (undo-tree-id34278 . -186) (undo-tree-id34279 . -186) (undo-tree-id34280 . -186) (undo-tree-id34281 . -186) (undo-tree-id34282 . -186) (undo-tree-id34283 . -186) (undo-tree-id34284 . -186) (undo-tree-id34285 . -186) (undo-tree-id34286 . -186) (undo-tree-id34287 . -186) (undo-tree-id34288 . -186) (undo-tree-id34289 . -186) (undo-tree-id34290 . -186) (undo-tree-id34291 . -186) (undo-tree-id34292 . -186) (undo-tree-id34293 . -186) (undo-tree-id34294 . -186) (undo-tree-id34295 . -186) (undo-tree-id34296 . -186) (undo-tree-id34297 . -186) (undo-tree-id34298 . -186) (undo-tree-id34299 . -186) (undo-tree-id34300 . -186) (undo-tree-id34301 . -186) (undo-tree-id34302 . -186) (undo-tree-id34303 . -186) (undo-tree-id34304 . -186) (undo-tree-id34305 . -186) (undo-tree-id34306 . -186) (undo-tree-id34307 . -186) (undo-tree-id34308 . -186) (undo-tree-id34309 . -186) (undo-tree-id34310 . -186) (undo-tree-id34311 . -186) (undo-tree-id34312 . -186) (undo-tree-id34313 . -186) (undo-tree-id34314 . -186) (undo-tree-id34315 . -186) (undo-tree-id34316 . -69) (2211 . 2280) (#(", which are used to generate the predicted output for target word" 0 50 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 50 64 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 64 65 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 2328) (undo-tree-id34317 . -49) (undo-tree-id34318 . -50) (t 25774 60349 370863 223000)) nil (25774 60394 218721 557000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2332) (undo-tree-id33640 . 2) (undo-tree-id33641 . -1) (undo-tree-id33642 . -2)) nil (25774 60394 216763 491000) 0 nil])
([nil nil ((#("which " 0 6 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2332) (undo-tree-id33637 . 6) (undo-tree-id33638 . -5) (undo-tree-id33639 . -6)) nil (25774 60394 216760 378000) 0 nil])
([nil nil ((#("are " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2332) (undo-tree-id33634 . 4) (undo-tree-id33635 . -3) (undo-tree-id33636 . -4)) nil (25774 60394 216754 172000) 0 nil])
([nil nil ((2332 . 2333) (#("u" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2332)) nil (25774 60394 216740 296000) 0 nil])
([nil nil ((2387 . 2610) (#("- since this true label information is not available for prediction (inference), we feed the predicted output instead, as depicted in the previous figure.

- During training, the true label (word) is fed into the next state" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 13 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 15 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 18 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 22 27 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 27 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 28 29 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 29 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 30 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 31 32 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 32 33 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 33 34 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 34 35 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 35 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 36 37 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 37 38 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 38 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 39 40 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 40 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 41 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 42 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 43 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 44 45 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 45 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 46 47 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 47 48 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 48 49 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 49 50 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 50 51 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 51 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 52 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 53 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 54 55 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 55 56 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 56 57 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 57 58 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 58 59 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 59 60 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 60 61 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 61 62 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 62 63 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 63 154 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 154 155 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 155 156 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 156 157 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 157 158 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 158 183 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 183 184 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 184 223 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2387) (undo-tree-id34319 . -223) (undo-tree-id34320 . -223) (undo-tree-id34321 . -163) (undo-tree-id34322 . -163) (undo-tree-id34323 . -163) (undo-tree-id34324 . -163) (undo-tree-id34325 . -163) (undo-tree-id34326 . -163) (undo-tree-id34327 . -163) (undo-tree-id34328 . -163) (undo-tree-id34329 . -163) (undo-tree-id34330 . -163) (undo-tree-id34331 . -163) (undo-tree-id34332 . -172) (undo-tree-id34333 . -172) (undo-tree-id34334 . -172) (undo-tree-id34335 . -172) (undo-tree-id34336 . -172) (undo-tree-id34337 . -172) (undo-tree-id34338 . -172) (undo-tree-id34339 . -172) (undo-tree-id34340 . -172) (undo-tree-id34341 . -172) (undo-tree-id34342 . -172) (undo-tree-id34343 . -173) (undo-tree-id34344 . -173) (undo-tree-id34345 . -173) (undo-tree-id34346 . -173) (undo-tree-id34347 . -173) (undo-tree-id34348 . -173) (undo-tree-id34349 . -173) (undo-tree-id34350 . -173) (undo-tree-id34351 . -173) (undo-tree-id34352 . -173) (undo-tree-id34353 . -173) (undo-tree-id34354 . -177) (undo-tree-id34355 . -177) (undo-tree-id34356 . -177) (undo-tree-id34357 . -177) (undo-tree-id34358 . -177) (undo-tree-id34359 . -177) (undo-tree-id34360 . -177) (undo-tree-id34361 . -177) (undo-tree-id34362 . -177) (undo-tree-id34363 . -177) (undo-tree-id34364 . -177) (undo-tree-id34365 . -182) (undo-tree-id34366 . -182) (undo-tree-id34367 . -182) (undo-tree-id34368 . -182) (undo-tree-id34369 . -182) (undo-tree-id34370 . -182) (undo-tree-id34371 . -182) (undo-tree-id34372 . -182) (undo-tree-id34373 . -182) (undo-tree-id34374 . -182) (undo-tree-id34375 . -182) (undo-tree-id34376 . -188) (undo-tree-id34377 . -188) (undo-tree-id34378 . -188) (undo-tree-id34379 . -188) (undo-tree-id34380 . -188) (undo-tree-id34381 . -188) (undo-tree-id34382 . -188) (undo-tree-id34383 . -188) (undo-tree-id34384 . -188) (undo-tree-id34385 . -188) (undo-tree-id34386 . -188) (undo-tree-id34387 . -190) (undo-tree-id34388 . -190) (undo-tree-id34389 . -190) (undo-tree-id34390 . -190) (undo-tree-id34391 . -190) (undo-tree-id34392 . -190) (undo-tree-id34393 . -190) (undo-tree-id34394 . -190) (undo-tree-id34395 . -190) (undo-tree-id34396 . -190) (undo-tree-id34397 . -190) (undo-tree-id34398 . -190) (undo-tree-id34399 . -190) (undo-tree-id34400 . -190) (undo-tree-id34401 . -190) (undo-tree-id34402 . -190) (undo-tree-id34403 . -190) (undo-tree-id34404 . -190) (undo-tree-id34405 . -190) (undo-tree-id34406 . -190) (undo-tree-id34407 . -190) (undo-tree-id34408 . -190) (undo-tree-id34409 . -190) (undo-tree-id34410 . -190) (undo-tree-id34411 . -190) (undo-tree-id34412 . -190) (undo-tree-id34413 . -190) (undo-tree-id34414 . -190) (undo-tree-id34415 . -190) (undo-tree-id34416 . -190) (undo-tree-id34417 . -190) (undo-tree-id34418 . -190) (undo-tree-id34419 . -190) (undo-tree-id34420 . -190) (undo-tree-id34421 . -190) (undo-tree-id34422 . -190) (undo-tree-id34423 . -190) (undo-tree-id34424 . -190) (undo-tree-id34425 . -190) (undo-tree-id34426 . -190) (undo-tree-id34427 . -190) (undo-tree-id34428 . -190) (undo-tree-id34429 . -190) (undo-tree-id34430 . -190) (undo-tree-id34431 . -190) (undo-tree-id34432 . -190) (undo-tree-id34433 . -190) (undo-tree-id34434 . -190) (undo-tree-id34435 . -190) (undo-tree-id34436 . -190) (undo-tree-id34437 . -190) (undo-tree-id34438 . -190) (undo-tree-id34439 . -190) (undo-tree-id34440 . -190) (undo-tree-id34441 . -190) (undo-tree-id34442 . -190) (undo-tree-id34443 . -190) (undo-tree-id34444 . -190) (undo-tree-id34445 . -190) (undo-tree-id34446 . -190) (undo-tree-id34447 . -158) (undo-tree-id34448 . -158) (undo-tree-id34449 . -158) (undo-tree-id34450 . -158) (undo-tree-id34451 . -158) (undo-tree-id34452 . -158) (undo-tree-id34453 . -158) (undo-tree-id34454 . -158) (undo-tree-id34455 . -158) (undo-tree-id34456 . -158) (undo-tree-id34457 . -158) (undo-tree-id34458 . -158) (undo-tree-id34459 . -158) (undo-tree-id34460 . -158) (undo-tree-id34461 . -158) (undo-tree-id34462 . -158) (undo-tree-id34463 . -158) (undo-tree-id34464 . -158) (undo-tree-id34465 . -158) (undo-tree-id34466 . -158) (undo-tree-id34467 . -158) (undo-tree-id34468 . -158) (undo-tree-id34469 . -158) (undo-tree-id34470 . -158) (undo-tree-id34471 . -158) (undo-tree-id34472 . -158) (undo-tree-id34473 . -158) (undo-tree-id34474 . -158) (undo-tree-id34475 . -158) (undo-tree-id34476 . -158) (undo-tree-id34477 . -158) (undo-tree-id34478 . -163) (undo-tree-id34479 . -163) (undo-tree-id34480 . -163) (undo-tree-id34481 . -163) (undo-tree-id34482 . -163) (undo-tree-id34483 . -163) (undo-tree-id34484 . -163) (undo-tree-id34485 . -163) (undo-tree-id34486 . -163) (undo-tree-id34487 . -163) (undo-tree-id34488 . -163) (undo-tree-id34489 . -163) (undo-tree-id34490 . -163) (undo-tree-id34491 . -163) (undo-tree-id34492 . -163) (undo-tree-id34493 . -163) (undo-tree-id34494 . -163) (undo-tree-id34495 . -163) (undo-tree-id34496 . -163) (undo-tree-id34497 . -163) (undo-tree-id34498 . -163) (undo-tree-id34499 . -163) (undo-tree-id34500 . -163) (undo-tree-id34501 . -163) (undo-tree-id34502 . -163) (undo-tree-id34503 . -163) (undo-tree-id34504 . -172) (undo-tree-id34505 . -172) (undo-tree-id34506 . -172) (undo-tree-id34507 . -172) (undo-tree-id34508 . -172) (undo-tree-id34509 . -172) (undo-tree-id34510 . -172) (undo-tree-id34511 . -172) (undo-tree-id34512 . -172) (undo-tree-id34513 . -172) (undo-tree-id34514 . -172) (undo-tree-id34515 . -173) (undo-tree-id34516 . -173) (undo-tree-id34517 . -173) (undo-tree-id34518 . -173) (undo-tree-id34519 . -173) (undo-tree-id34520 . -173) (undo-tree-id34521 . -173) (undo-tree-id34522 . -173) (undo-tree-id34523 . -173) (undo-tree-id34524 . -173) (undo-tree-id34525 . -173) (undo-tree-id34526 . -177) (undo-tree-id34527 . -177) (undo-tree-id34528 . -177) (undo-tree-id34529 . -177) (undo-tree-id34530 . -177) (undo-tree-id34531 . -177) (undo-tree-id34532 . -177) (undo-tree-id34533 . -177) (undo-tree-id34534 . -177) (undo-tree-id34535 . -177) (undo-tree-id34536 . -177) (undo-tree-id34537 . -182) (undo-tree-id34538 . -182) (undo-tree-id34539 . -182) (undo-tree-id34540 . -182) (undo-tree-id34541 . -182) (undo-tree-id34542 . -182) (undo-tree-id34543 . -182) (undo-tree-id34544 . -182) (undo-tree-id34545 . -182) (undo-tree-id34546 . -182) (undo-tree-id34547 . -182) (undo-tree-id34548 . -188) (undo-tree-id34549 . -188) (undo-tree-id34550 . -188) (undo-tree-id34551 . -188) (undo-tree-id34552 . -188) (undo-tree-id34553 . -188) (undo-tree-id34554 . -188) (undo-tree-id34555 . -188) (undo-tree-id34556 . -188) (undo-tree-id34557 . -188) (undo-tree-id34558 . -188) (undo-tree-id34559 . -190) (undo-tree-id34560 . -190) (undo-tree-id34561 . -190) (undo-tree-id34562 . -190) (undo-tree-id34563 . -190) (undo-tree-id34564 . -190) (undo-tree-id34565 . -190) (undo-tree-id34566 . -190) (undo-tree-id34567 . -190) (undo-tree-id34568 . -190) (undo-tree-id34569 . -190) (undo-tree-id34570 . -194) (undo-tree-id34571 . -194) (undo-tree-id34572 . -194) (undo-tree-id34573 . -194) (undo-tree-id34574 . -194) (undo-tree-id34575 . -194) (undo-tree-id34576 . -194) (undo-tree-id34577 . -194) (undo-tree-id34578 . -194) (undo-tree-id34579 . -194) (undo-tree-id34580 . -194) (undo-tree-id34581 . -195) (undo-tree-id34582 . -195) (undo-tree-id34583 . -195) (undo-tree-id34584 . -195) (undo-tree-id34585 . -195) (undo-tree-id34586 . -195) (undo-tree-id34587 . -195) (undo-tree-id34588 . -195) (undo-tree-id34589 . -195) (undo-tree-id34590 . -195) (undo-tree-id34591 . -195) (undo-tree-id34592 . -195) (undo-tree-id34593 . -195) (undo-tree-id34594 . -195) (undo-tree-id34595 . -195) (undo-tree-id34596 . -195) (undo-tree-id34597 . -198) (undo-tree-id34598 . -198) (undo-tree-id34599 . -198) (undo-tree-id34600 . -198) (undo-tree-id34601 . -198) (undo-tree-id34602 . -198) (undo-tree-id34603 . -198) (undo-tree-id34604 . -198) (undo-tree-id34605 . -198) (undo-tree-id34606 . -198) (undo-tree-id34607 . -198) (undo-tree-id34608 . -198) (undo-tree-id34609 . -198) (undo-tree-id34610 . -198) (undo-tree-id34611 . -198) (undo-tree-id34612 . -198) (undo-tree-id34613 . -198) (undo-tree-id34614 . -198) (undo-tree-id34615 . -198) (undo-tree-id34616 . -198) (undo-tree-id34617 . -198) (undo-tree-id34618 . -202) (undo-tree-id34619 . -202) (undo-tree-id34620 . -202) (undo-tree-id34621 . -202) (undo-tree-id34622 . -202) (undo-tree-id34623 . -202) (undo-tree-id34624 . -202) (undo-tree-id34625 . -202) (undo-tree-id34626 . -202) (undo-tree-id34627 . -202) (undo-tree-id34628 . -202) (undo-tree-id34629 . -207) (undo-tree-id34630 . -207) (undo-tree-id34631 . -207) (undo-tree-id34632 . -207) (undo-tree-id34633 . -207) (undo-tree-id34634 . -207) (undo-tree-id34635 . -207) (undo-tree-id34636 . -207) (undo-tree-id34637 . -207) (undo-tree-id34638 . -207) (undo-tree-id34639 . -207) (undo-tree-id34640 . -211) (undo-tree-id34641 . -211) (undo-tree-id34642 . -211) (undo-tree-id34643 . -211) (undo-tree-id34644 . -211) (undo-tree-id34645 . -211) (undo-tree-id34646 . -211) (undo-tree-id34647 . -211) (undo-tree-id34648 . -211) (undo-tree-id34649 . -211) (undo-tree-id34650 . -211) (undo-tree-id34651 . -216) (undo-tree-id34652 . -216) (undo-tree-id34653 . -216) (undo-tree-id34654 . -216) (undo-tree-id34655 . -216) (undo-tree-id34656 . -216) (undo-tree-id34657 . -216) (undo-tree-id34658 . -216) (undo-tree-id34659 . -216) (undo-tree-id34660 . -216) (undo-tree-id34661 . -216) (undo-tree-id34662 . -216) (undo-tree-id34663 . -216) (undo-tree-id34664 . -216) (undo-tree-id34665 . -216) (undo-tree-id34666 . -216) (undo-tree-id34667 . -222) (undo-tree-id34668 . -222) (undo-tree-id34669 . -222) (undo-tree-id34670 . -222) (undo-tree-id34671 . -222) (undo-tree-id34672 . -222) (undo-tree-id34673 . -222) (undo-tree-id34674 . -222) (undo-tree-id34675 . -222) (undo-tree-id34676 . -222) (undo-tree-id34677 . -222) (undo-tree-id34678 . -222) (undo-tree-id34679 . -222) (undo-tree-id34680 . -222) (undo-tree-id34681 . -222) (undo-tree-id34682 . -222) (undo-tree-id34683 . -223) (undo-tree-id34684 . -223) (undo-tree-id34685 . -223) (undo-tree-id34686 . -223) (undo-tree-id34687 . -223) (undo-tree-id34688 . -223) (undo-tree-id34689 . -223) (undo-tree-id34690 . -223) (undo-tree-id34691 . -223) (undo-tree-id34692 . -223) (undo-tree-id34693 . -223) (undo-tree-id34694 . -223) (undo-tree-id34695 . -223) (undo-tree-id34696 . -223) (undo-tree-id34697 . -223) (undo-tree-id34698 . -223) (undo-tree-id34699 . -223) (undo-tree-id34700 . -223) (undo-tree-id34701 . -223) (undo-tree-id34702 . -223) (undo-tree-id34703 . -223) (undo-tree-id34704 . -223) (undo-tree-id34705 . -223) (undo-tree-id34706 . -223) (undo-tree-id34707 . -223) (undo-tree-id34708 . -223) (undo-tree-id34709 . -223) (undo-tree-id34710 . -223) (undo-tree-id34711 . -223) (undo-tree-id34712 . -223) (undo-tree-id34713 . -223) (undo-tree-id34714 . -223) (undo-tree-id34715 . -223) (undo-tree-id34716 . -223) (undo-tree-id34717 . -223) (undo-tree-id34718 . -223) (undo-tree-id34719 . -223) (undo-tree-id34720 . -223) (undo-tree-id34721 . -223) (undo-tree-id34722 . -223) (undo-tree-id34723 . -223) (undo-tree-id34724 . -223) (undo-tree-id34725 . -223) (undo-tree-id34726 . -223) (undo-tree-id34727 . -223) (undo-tree-id34728 . -223) (undo-tree-id34729 . -223) (undo-tree-id34730 . -223) (undo-tree-id34731 . -223) (undo-tree-id34732 . -223) (undo-tree-id34733 . -223) (undo-tree-id34734 . -223) (undo-tree-id34735 . -223) (undo-tree-id34736 . -223) (undo-tree-id34737 . -223) (undo-tree-id34738 . -223) (undo-tree-id34739 . -223) (undo-tree-id34740 . -223) (undo-tree-id34741 . -223) (undo-tree-id34742 . -223) (undo-tree-id34743 . -223) (undo-tree-id34744 . -223) (undo-tree-id34745 . -223) (undo-tree-id34746 . -223) (undo-tree-id34747 . -223) (undo-tree-id34748 . -223) (undo-tree-id34749 . -223) (undo-tree-id34750 . -223) (undo-tree-id34751 . -223) (undo-tree-id34752 . -223) (undo-tree-id34753 . -223) (undo-tree-id34754 . -223) (undo-tree-id34755 . -223) (undo-tree-id34756 . -223) (undo-tree-id34757 . -223) (undo-tree-id34758 . -223) (undo-tree-id34759 . -223) (undo-tree-id34760 . -223) (undo-tree-id34761 . -223) (undo-tree-id34762 . -223) (undo-tree-id34763 . -223) (undo-tree-id34764 . -223) (undo-tree-id34765 . -223) (undo-tree-id34766 . -223) (undo-tree-id34767 . -223) (undo-tree-id34768 . -223) (undo-tree-id34769 . -223) (undo-tree-id34770 . -223) (undo-tree-id34771 . -223) (undo-tree-id34772 . -223) (undo-tree-id34773 . -223) (undo-tree-id34774 . -223) (undo-tree-id34775 . -223) (undo-tree-id34776 . -223) (undo-tree-id34777 . -223) (undo-tree-id34778 . -223) (undo-tree-id34779 . -223) (undo-tree-id34780 . -223) (undo-tree-id34781 . -223) (undo-tree-id34782 . -223) (undo-tree-id34783 . -223) (undo-tree-id34784 . -223) (undo-tree-id34785 . -223) (undo-tree-id34786 . -223) (undo-tree-id34787 . -223) (undo-tree-id34788 . -223) (undo-tree-id34789 . -223) (undo-tree-id34790 . -223) (undo-tree-id34791 . -223) (undo-tree-id34792 . -223) (undo-tree-id34793 . -223) (undo-tree-id34794 . -223) (undo-tree-id34795 . -223) (undo-tree-id34796 . -223) (undo-tree-id34797 . -223) (undo-tree-id34798 . -223) (undo-tree-id34799 . -223) (undo-tree-id34800 . -223) (undo-tree-id34801 . -223) (undo-tree-id34802 . -223) (undo-tree-id34803 . -223) (undo-tree-id34804 . -223) (undo-tree-id34805 . -223) (undo-tree-id34806 . -223) (undo-tree-id34807 . -223) (undo-tree-id34808 . -223) (undo-tree-id34809 . -223) (undo-tree-id34810 . -223) (undo-tree-id34811 . -223) (undo-tree-id34812 . -223) (undo-tree-id34813 . -223) (undo-tree-id34814 . -223) (undo-tree-id34815 . -223) (undo-tree-id34816 . -223) (undo-tree-id34817 . -223) (undo-tree-id34818 . -223) (undo-tree-id34819 . -223) (undo-tree-id34820 . -223) (undo-tree-id34821 . -223) (undo-tree-id34822 . -223) (undo-tree-id34823 . -223) (undo-tree-id34824 . -223) (undo-tree-id34825 . -223) (undo-tree-id34826 . -223) (undo-tree-id34827 . -223) (undo-tree-id34828 . -223) (undo-tree-id34829 . -223) (undo-tree-id34830 . -223) (undo-tree-id34831 . -223) (undo-tree-id34832 . -223) (undo-tree-id34833 . -223) (undo-tree-id34834 . -223) (undo-tree-id34835 . -223) (undo-tree-id34836 . -223) (undo-tree-id34837 . -223) (undo-tree-id34838 . -223) (undo-tree-id34839 . -223) (undo-tree-id34840 . -223) (undo-tree-id34841 . -223) (undo-tree-id34842 . -223) (undo-tree-id34843 . -223) (undo-tree-id34844 . -223) (undo-tree-id34845 . -223) (undo-tree-id34846 . -223) (undo-tree-id34847 . -223) (undo-tree-id34848 . -223) (undo-tree-id34849 . -223) (undo-tree-id34850 . -223) (undo-tree-id34851 . -223) (undo-tree-id34852 . -223) (undo-tree-id34853 . -223) (undo-tree-id34854 . -223) (undo-tree-id34855 . -223) (undo-tree-id34856 . -223) (undo-tree-id34857 . -223) (undo-tree-id34858 . -223) (undo-tree-id34859 . -223) (undo-tree-id34860 . -223) (undo-tree-id34861 . -223) (undo-tree-id34862 . -223) (undo-tree-id34863 . -223) (undo-tree-id34864 . -223) (undo-tree-id34865 . -223) (undo-tree-id34866 . -223) (undo-tree-id34867 . -223) (undo-tree-id34868 . -223) (undo-tree-id34869 . -223) (undo-tree-id34870 . -223) (undo-tree-id34871 . -223) (undo-tree-id34872 . -223) (undo-tree-id34873 . -223) (undo-tree-id34874 . -223) (undo-tree-id34875 . -223) (undo-tree-id34876 . -223) (undo-tree-id34877 . -223) (undo-tree-id34878 . -223) (undo-tree-id34879 . -223) (undo-tree-id34880 . -223) (undo-tree-id34881 . -223) (undo-tree-id34882 . -223) (undo-tree-id34883 . -223) (undo-tree-id34884 . -223) (undo-tree-id34885 . -223) (undo-tree-id34886 . -223) (undo-tree-id34887 . -223) (undo-tree-id34888 . -223) (undo-tree-id34889 . -223) (undo-tree-id34890 . -223) (undo-tree-id34891 . -223) (undo-tree-id34892 . -223) (undo-tree-id34893 . -223) (undo-tree-id34894 . -223) (undo-tree-id34895 . -223) (undo-tree-id34896 . -223) (undo-tree-id34897 . -223) (undo-tree-id34898 . -223) (undo-tree-id34899 . -223) (undo-tree-id34900 . -223) (undo-tree-id34901 . -223) (undo-tree-id34902 . -223) (undo-tree-id34903 . -223) (undo-tree-id34904 . -223) (undo-tree-id34905 . -223) (undo-tree-id34906 . -223) (undo-tree-id34907 . -223) (undo-tree-id34908 . -223) (undo-tree-id34909 . -223) (undo-tree-id34910 . -223) (undo-tree-id34911 . -223) (undo-tree-id34912 . -223) (undo-tree-id34913 . -223) (undo-tree-id34914 . -223) (undo-tree-id34915 . -223) (undo-tree-id34916 . -223) (undo-tree-id34917 . -223) (undo-tree-id34918 . -223) (undo-tree-id34919 . -223) (undo-tree-id34920 . -223) (undo-tree-id34921 . -223) (undo-tree-id34922 . -223) (undo-tree-id34923 . -223) (undo-tree-id34924 . -223) (undo-tree-id34925 . -223) (undo-tree-id34926 . -223) (undo-tree-id34927 . -223) (undo-tree-id34928 . -223) (undo-tree-id34929 . -223) (undo-tree-id34930 . -223) (undo-tree-id34931 . -223) (undo-tree-id34932 . -223) (undo-tree-id34933 . -223) (undo-tree-id34934 . -223) (undo-tree-id34935 . -223) (undo-tree-id34936 . -223) (undo-tree-id34937 . -223) (undo-tree-id34938 . -223) (undo-tree-id34939 . -223) (undo-tree-id34940 . -223) (undo-tree-id34941 . -223) (undo-tree-id34942 . -223) (undo-tree-id34943 . -223) (undo-tree-id34944 . -223) (undo-tree-id34945 . -223) (undo-tree-id34946 . -223) (undo-tree-id34947 . -223) (undo-tree-id34948 . -223) (undo-tree-id34949 . -223) (undo-tree-id34950 . -223) (undo-tree-id34951 . -223) (undo-tree-id34952 . -223) (undo-tree-id34953 . -223) (undo-tree-id34954 . -223) (undo-tree-id34955 . -223) (undo-tree-id34956 . -223) (undo-tree-id34957 . -223) (undo-tree-id34958 . -223) (undo-tree-id34959 . -223) (undo-tree-id34960 . -223) (undo-tree-id34961 . -223) (undo-tree-id34962 . -223) (undo-tree-id34963 . -223) (undo-tree-id34964 . -223) (undo-tree-id34965 . -223) (undo-tree-id34966 . -223) (undo-tree-id34967 . -223) (undo-tree-id34968 . -223) (undo-tree-id34969 . -223) (undo-tree-id34970 . -223) (undo-tree-id34971 . -223) (undo-tree-id34972 . -223) (undo-tree-id34973 . -223) (undo-tree-id34974 . -223) (undo-tree-id34975 . -223) (undo-tree-id34976 . -223) (undo-tree-id34977 . -223) (undo-tree-id34978 . -223) (undo-tree-id34979 . -223) (undo-tree-id34980 . -223) (undo-tree-id34981 . -223) (undo-tree-id34982 . -223) (undo-tree-id34983 . -223) (undo-tree-id34984 . -223) (undo-tree-id34985 . -223) (undo-tree-id34986 . -223) (undo-tree-id34987 . -223) (undo-tree-id34988 . -223) (undo-tree-id34989 . -223) (undo-tree-id34990 . -223) (undo-tree-id34991 . -223) (undo-tree-id34992 . -223) (undo-tree-id34993 . -223) (undo-tree-id34994 . -223) (undo-tree-id34995 . -223) (undo-tree-id34996 . -223) (undo-tree-id34997 . -223) (undo-tree-id34998 . -223) (undo-tree-id34999 . -223) (undo-tree-id35000 . -223) (undo-tree-id35001 . -223) (undo-tree-id35002 . -223) (undo-tree-id35003 . -223) (undo-tree-id35004 . -223) (undo-tree-id35005 . -223) (undo-tree-id35006 . -223) (undo-tree-id35007 . -223) (undo-tree-id35008 . -223) (undo-tree-id35009 . -223) (undo-tree-id35010 . -223) (undo-tree-id35011 . -223) (undo-tree-id35012 . -223) (undo-tree-id35013 . -223) (undo-tree-id35014 . -223) (undo-tree-id35015 . -223) (undo-tree-id35016 . -223) (undo-tree-id35017 . -223) (undo-tree-id35018 . -223) (undo-tree-id35019 . -223) (undo-tree-id35020 . -223) (undo-tree-id35021 . -223) (undo-tree-id35022 . -223) (undo-tree-id35023 . -223) (undo-tree-id35024 . -223) (undo-tree-id35025 . -223) (undo-tree-id35026 . -223) (undo-tree-id35027 . -223) (undo-tree-id35028 . -223) (undo-tree-id35029 . -223) (undo-tree-id35030 . -223) (undo-tree-id35031 . -223) (undo-tree-id35032 . -223) (undo-tree-id35033 . -223) (undo-tree-id35034 . -223) (undo-tree-id35035 . -223) (undo-tree-id35036 . -223) (undo-tree-id35037 . -223) (undo-tree-id35038 . -223) (undo-tree-id35039 . -223) (undo-tree-id35040 . -223) (undo-tree-id35041 . -223) (undo-tree-id35042 . -223) (undo-tree-id35043 . -223) (undo-tree-id35044 . -223) (undo-tree-id35045 . -223) (undo-tree-id35046 . -223) (undo-tree-id35047 . -223) (undo-tree-id35048 . -223) (undo-tree-id35049 . -223) (undo-tree-id35050 . -223) (undo-tree-id35051 . -223) (undo-tree-id35052 . -223) (undo-tree-id35053 . -223) (undo-tree-id35054 . -223) (undo-tree-id35055 . -223) (undo-tree-id35056 . -223) (undo-tree-id35057 . -223) (undo-tree-id35058 . -223) (undo-tree-id35059 . -223) (undo-tree-id35060 . -223) (undo-tree-id35061 . -223) (undo-tree-id35062 . -223) (undo-tree-id35063 . -223) (undo-tree-id35064 . -223) (undo-tree-id35065 . -223) (undo-tree-id35066 . -223) (undo-tree-id35067 . -223) (undo-tree-id35068 . -223) (undo-tree-id35069 . -223) (undo-tree-id35070 . -223) (undo-tree-id35071 . -223) (undo-tree-id35072 . -223) (undo-tree-id35073 . -223) (undo-tree-id35074 . -223) (undo-tree-id35075 . -223) (undo-tree-id35076 . -223) (undo-tree-id35077 . -223) (undo-tree-id35078 . -223) (undo-tree-id35079 . -223) (undo-tree-id35080 . -223) (undo-tree-id35081 . -223) (undo-tree-id35082 . -223) (undo-tree-id35083 . -223) (undo-tree-id35084 . -223) (undo-tree-id35085 . -223) (undo-tree-id35086 . -223) (undo-tree-id35087 . -223) (undo-tree-id35088 . -223) (undo-tree-id35089 . -223) (undo-tree-id35090 . -223) (undo-tree-id35091 . -223) (undo-tree-id35092 . -223) (undo-tree-id35093 . -223) (undo-tree-id35094 . -223) (undo-tree-id35095 . -223) (undo-tree-id35096 . -223) (undo-tree-id35097 . -223) (undo-tree-id35098 . -223) (undo-tree-id35099 . -223) (undo-tree-id35100 . -223) (undo-tree-id35101 . -223) (undo-tree-id35102 . -223) (undo-tree-id35103 . -223) (undo-tree-id35104 . -223) (undo-tree-id35105 . -223) (undo-tree-id35106 . -223) (undo-tree-id35107 . -223) (undo-tree-id35108 . -223) (undo-tree-id35109 . -223) (undo-tree-id35110 . -223) (undo-tree-id35111 . -223) (undo-tree-id35112 . -223) (undo-tree-id35113 . -223) (undo-tree-id35114 . -223) (undo-tree-id35115 . -223) (undo-tree-id35116 . -223) (undo-tree-id35117 . -223) (undo-tree-id35118 . -223) (undo-tree-id35119 . -223) (undo-tree-id35120 . -223) (undo-tree-id35121 . -223) (undo-tree-id35122 . -223) (undo-tree-id35123 . -223) (undo-tree-id35124 . -223) (undo-tree-id35125 . -223) (undo-tree-id35126 . -223) (undo-tree-id35127 . -223) (undo-tree-id35128 . -223) (undo-tree-id35129 . -223) (undo-tree-id35130 . -223) (undo-tree-id35131 . -223) (undo-tree-id35132 . -223) (undo-tree-id35133 . -223) (undo-tree-id35134 . -223) (undo-tree-id35135 . -223) (undo-tree-id35136 . -223) (undo-tree-id35137 . -223) (undo-tree-id35138 . -223) (undo-tree-id35139 . -223) (undo-tree-id35140 . -223) (undo-tree-id35141 . -223) (undo-tree-id35142 . -223) (undo-tree-id35143 . -223) (undo-tree-id35144 . -223) (undo-tree-id35145 . -223) (undo-tree-id35146 . -223) (undo-tree-id35147 . -223) (undo-tree-id35148 . -223) (undo-tree-id35149 . -223) (undo-tree-id35150 . -223) (undo-tree-id35151 . -223) (undo-tree-id35152 . -223) (undo-tree-id35153 . -223) (undo-tree-id35154 . -223) (undo-tree-id35155 . -223) (undo-tree-id35156 . -223) (undo-tree-id35157 . -223) (undo-tree-id35158 . -223) (undo-tree-id35159 . -223) (undo-tree-id35160 . -223) (undo-tree-id35161 . -223) (undo-tree-id35162 . -223) (undo-tree-id35163 . -223) (undo-tree-id35164 . -223) (undo-tree-id35165 . -223) (undo-tree-id35166 . -223) (undo-tree-id35167 . -223) (undo-tree-id35168 . -223) (undo-tree-id35169 . -223) (undo-tree-id35170 . -223) (undo-tree-id35171 . -223) (undo-tree-id35172 . -223) (undo-tree-id35173 . -223) (undo-tree-id35174 . -223) (undo-tree-id35175 . -223) (undo-tree-id35176 . -223) (undo-tree-id35177 . -223) (undo-tree-id35178 . -223) (undo-tree-id35179 . -223) (undo-tree-id35180 . -223) (undo-tree-id35181 . -223) (undo-tree-id35182 . -223) (undo-tree-id35183 . -223) (undo-tree-id35184 . -223) (undo-tree-id35185 . -223) (undo-tree-id35186 . -223) (undo-tree-id35187 . -223) (undo-tree-id35188 . -223) (undo-tree-id35189 . -223) (undo-tree-id35190 . -223) (undo-tree-id35191 . -223) (undo-tree-id35192 . -223) (undo-tree-id35193 . -223) (undo-tree-id35194 . -223) (undo-tree-id35195 . -223) (undo-tree-id35196 . -223) (undo-tree-id35197 . -223) (undo-tree-id35198 . -223) (undo-tree-id35199 . -223) (undo-tree-id35200 . -223) (undo-tree-id35201 . -223) (undo-tree-id35202 . -223) (undo-tree-id35203 . -223) (undo-tree-id35204 . -223) (undo-tree-id35205 . -223) (undo-tree-id35206 . -223) (undo-tree-id35207 . -223) (undo-tree-id35208 . -223) (undo-tree-id35209 . -223) (undo-tree-id35210 . -223) (undo-tree-id35211 . -223) (undo-tree-id35212 . -223) (undo-tree-id35213 . -223) (undo-tree-id35214 . -223) (undo-tree-id35215 . -223) (undo-tree-id35216 . -223) (undo-tree-id35217 . -223) (undo-tree-id35218 . -223) (undo-tree-id35219 . -223) (undo-tree-id35220 . -223) (undo-tree-id35221 . -223) (undo-tree-id35222 . -223) (undo-tree-id35223 . -223) (undo-tree-id35224 . -223) (undo-tree-id35225 . -223) (undo-tree-id35226 . -165) (undo-tree-id35227 . -165) (undo-tree-id35228 . -165) (undo-tree-id35229 . -165) (undo-tree-id35230 . -165) (undo-tree-id35231 . -165) (undo-tree-id35232 . -165) (undo-tree-id35233 . -165) (undo-tree-id35234 . -165) (undo-tree-id35235 . -165) (undo-tree-id35236 . -165) (undo-tree-id35237 . -165) (undo-tree-id35238 . -165) (undo-tree-id35239 . -165) (undo-tree-id35240 . -165) (undo-tree-id35241 . -165) (undo-tree-id35242 . -165) (undo-tree-id35243 . -165) (undo-tree-id35244 . -165) (undo-tree-id35245 . -165) (undo-tree-id35246 . -165) (undo-tree-id35247 . -158) (undo-tree-id35248 . -158) (undo-tree-id35249 . -158) (undo-tree-id35250 . -158) (undo-tree-id35251 . -158) (undo-tree-id35252 . -158) (undo-tree-id35253 . -158) (undo-tree-id35254 . -158) (undo-tree-id35255 . -158) (undo-tree-id35256 . -158) (undo-tree-id35257 . -158) (undo-tree-id35258 . -158) (undo-tree-id35259 . -158) (undo-tree-id35260 . -158) (undo-tree-id35261 . -158) (undo-tree-id35262 . -158) (undo-tree-id35263 . -163) (undo-tree-id35264 . -163) (undo-tree-id35265 . -163) (undo-tree-id35266 . -163) (undo-tree-id35267 . -163) (undo-tree-id35268 . -163) (undo-tree-id35269 . -163) (undo-tree-id35270 . -163) (undo-tree-id35271 . -163) (undo-tree-id35272 . -163) (undo-tree-id35273 . -163) (undo-tree-id35274 . -163) (undo-tree-id35275 . -163) (undo-tree-id35276 . -163) (undo-tree-id35277 . -163) (undo-tree-id35278 . -163) (undo-tree-id35279 . -172) (undo-tree-id35280 . -172) (undo-tree-id35281 . -172) (undo-tree-id35282 . -172) (undo-tree-id35283 . -172) (undo-tree-id35284 . -172) (undo-tree-id35285 . -172) (undo-tree-id35286 . -172) (undo-tree-id35287 . -172) (undo-tree-id35288 . -172) (undo-tree-id35289 . -172) (undo-tree-id35290 . -172) (undo-tree-id35291 . -172) (undo-tree-id35292 . -172) (undo-tree-id35293 . -172) (undo-tree-id35294 . -172) (undo-tree-id35295 . -172) (undo-tree-id35296 . -172) (undo-tree-id35297 . -172) (undo-tree-id35298 . -172) (undo-tree-id35299 . -172) (undo-tree-id35300 . -173) (undo-tree-id35301 . -173) (undo-tree-id35302 . -173) (undo-tree-id35303 . -173) (undo-tree-id35304 . -173) (undo-tree-id35305 . -173) (undo-tree-id35306 . -173) (undo-tree-id35307 . -173) (undo-tree-id35308 . -173) (undo-tree-id35309 . -173) (undo-tree-id35310 . -173) (undo-tree-id35311 . -173) (undo-tree-id35312 . -173) (undo-tree-id35313 . -173) (undo-tree-id35314 . -173) (undo-tree-id35315 . -173) (undo-tree-id35316 . -177) (undo-tree-id35317 . -177) (undo-tree-id35318 . -177) (undo-tree-id35319 . -177) (undo-tree-id35320 . -177) (undo-tree-id35321 . -177) (undo-tree-id35322 . -177) (undo-tree-id35323 . -177) (undo-tree-id35324 . -177) (undo-tree-id35325 . -177) (undo-tree-id35326 . -177) (undo-tree-id35327 . -177) (undo-tree-id35328 . -177) (undo-tree-id35329 . -177) (undo-tree-id35330 . -177) (undo-tree-id35331 . -177) (undo-tree-id35332 . -182) (undo-tree-id35333 . -182) (undo-tree-id35334 . -182) (undo-tree-id35335 . -182) (undo-tree-id35336 . -182) (undo-tree-id35337 . -182) (undo-tree-id35338 . -182) (undo-tree-id35339 . -182) (undo-tree-id35340 . -182) (undo-tree-id35341 . -182) (undo-tree-id35342 . -182) (undo-tree-id35343 . -182) (undo-tree-id35344 . -182) (undo-tree-id35345 . -182) (undo-tree-id35346 . -182) (undo-tree-id35347 . -182) (undo-tree-id35348 . -188) (undo-tree-id35349 . -188) (undo-tree-id35350 . -188) (undo-tree-id35351 . -188) (undo-tree-id35352 . -188) (undo-tree-id35353 . -188) (undo-tree-id35354 . -188) (undo-tree-id35355 . -188) (undo-tree-id35356 . -188) (undo-tree-id35357 . -188) (undo-tree-id35358 . -188) (undo-tree-id35359 . -188) (undo-tree-id35360 . -188) (undo-tree-id35361 . -188) (undo-tree-id35362 . -188) (undo-tree-id35363 . -188) (undo-tree-id35364 . -190) (undo-tree-id35365 . -190) (undo-tree-id35366 . -190) (undo-tree-id35367 . -190) (undo-tree-id35368 . -190) (undo-tree-id35369 . -190) (undo-tree-id35370 . -190) (undo-tree-id35371 . -190) (undo-tree-id35372 . -190) (undo-tree-id35373 . -190) (undo-tree-id35374 . -190) (undo-tree-id35375 . -190) (undo-tree-id35376 . -190) (undo-tree-id35377 . -190) (undo-tree-id35378 . -190) (undo-tree-id35379 . -190) (undo-tree-id35380 . -190) (undo-tree-id35381 . -190) (undo-tree-id35382 . -190) (undo-tree-id35383 . -190) (undo-tree-id35384 . -190) (undo-tree-id35385 . -194) (undo-tree-id35386 . -194) (undo-tree-id35387 . -194) (undo-tree-id35388 . -194) (undo-tree-id35389 . -194) (undo-tree-id35390 . -194) (undo-tree-id35391 . -194) (undo-tree-id35392 . -194) (undo-tree-id35393 . -194) (undo-tree-id35394 . -194) (undo-tree-id35395 . -194) (undo-tree-id35396 . -195) (undo-tree-id35397 . -195) (undo-tree-id35398 . -195) (undo-tree-id35399 . -195) (undo-tree-id35400 . -195) (undo-tree-id35401 . -195) (undo-tree-id35402 . -195) (undo-tree-id35403 . -195) (undo-tree-id35404 . -195) (undo-tree-id35405 . -195) (undo-tree-id35406 . -195) (undo-tree-id35407 . -198) (undo-tree-id35408 . -198) (undo-tree-id35409 . -198) (undo-tree-id35410 . -198) (undo-tree-id35411 . -198) (undo-tree-id35412 . -198) (undo-tree-id35413 . -198) (undo-tree-id35414 . -198) (undo-tree-id35415 . -198) (undo-tree-id35416 . -198) (undo-tree-id35417 . -198) (undo-tree-id35418 . -202) (undo-tree-id35419 . -202) (undo-tree-id35420 . -202) (undo-tree-id35421 . -202) (undo-tree-id35422 . -202) (undo-tree-id35423 . -202) (undo-tree-id35424 . -202) (undo-tree-id35425 . -202) (undo-tree-id35426 . -202) (undo-tree-id35427 . -202) (undo-tree-id35428 . -202) (undo-tree-id35429 . -207) (undo-tree-id35430 . -207) (undo-tree-id35431 . -207) (undo-tree-id35432 . -207) (undo-tree-id35433 . -207) (undo-tree-id35434 . -207) (undo-tree-id35435 . -207) (undo-tree-id35436 . -207) (undo-tree-id35437 . -207) (undo-tree-id35438 . -207) (undo-tree-id35439 . -207) (undo-tree-id35440 . -211) (undo-tree-id35441 . -211) (undo-tree-id35442 . -211) (undo-tree-id35443 . -211) (undo-tree-id35444 . -211) (undo-tree-id35445 . -211) (undo-tree-id35446 . -211) (undo-tree-id35447 . -211) (undo-tree-id35448 . -211) (undo-tree-id35449 . -211) (undo-tree-id35450 . -211) (undo-tree-id35451 . -211) (undo-tree-id35452 . -211) (undo-tree-id35453 . -211) (undo-tree-id35454 . -211) (undo-tree-id35455 . -211) (undo-tree-id35456 . -211) (undo-tree-id35457 . -211) (undo-tree-id35458 . -211) (undo-tree-id35459 . -211) (undo-tree-id35460 . -211) (undo-tree-id35461 . -216) (undo-tree-id35462 . -216) (undo-tree-id35463 . -216) (undo-tree-id35464 . -216) (undo-tree-id35465 . -216) (undo-tree-id35466 . -216) (undo-tree-id35467 . -216) (undo-tree-id35468 . -216) (undo-tree-id35469 . -216) (undo-tree-id35470 . -216) (undo-tree-id35471 . -216) (undo-tree-id35472 . -216) (undo-tree-id35473 . -216) (undo-tree-id35474 . -216) (undo-tree-id35475 . -216) (undo-tree-id35476 . -216) (undo-tree-id35477 . -222) (undo-tree-id35478 . -222) (undo-tree-id35479 . -222) (undo-tree-id35480 . -222) (undo-tree-id35481 . -222) (undo-tree-id35482 . -222) (undo-tree-id35483 . -222) (undo-tree-id35484 . -222) (undo-tree-id35485 . -222) (undo-tree-id35486 . -222) (undo-tree-id35487 . -222) (undo-tree-id35488 . -222) (undo-tree-id35489 . -222) (undo-tree-id35490 . -222) (undo-tree-id35491 . -222) (undo-tree-id35492 . -222) (undo-tree-id35493 . -223) (undo-tree-id35494 . -223) (undo-tree-id35495 . -223) (undo-tree-id35496 . -223) (undo-tree-id35497 . -223) (undo-tree-id35498 . -223) (undo-tree-id35499 . -223) (undo-tree-id35500 . -223) (undo-tree-id35501 . -223) (undo-tree-id35502 . -223) (undo-tree-id35503 . -223) (undo-tree-id35504 . -223) (undo-tree-id35505 . -223) (undo-tree-id35506 . -223) (undo-tree-id35507 . -223) (undo-tree-id35508 . -223) (undo-tree-id35509 . -223) (undo-tree-id35510 . -223) (undo-tree-id35511 . -223) (undo-tree-id35512 . -223) (undo-tree-id35513 . -223) (undo-tree-id35514 . -223) (undo-tree-id35515 . -223) (undo-tree-id35516 . -223) (undo-tree-id35517 . -223) (undo-tree-id35518 . -223) (undo-tree-id35519 . -223) (undo-tree-id35520 . -223) (undo-tree-id35521 . -223) (undo-tree-id35522 . -223) (undo-tree-id35523 . -223) (undo-tree-id35524 . -223) (undo-tree-id35525 . -223) (undo-tree-id35526 . -223) (undo-tree-id35527 . -223) (undo-tree-id35528 . -223) (undo-tree-id35529 . -223) (undo-tree-id35530 . -223) (undo-tree-id35531 . -223) (undo-tree-id35532 . -223) (undo-tree-id35533 . -223) (undo-tree-id35534 . -223) (undo-tree-id35535 . -223) (undo-tree-id35536 . -223) (undo-tree-id35537 . -223) (undo-tree-id35538 . -223) (undo-tree-id35539 . -223) (undo-tree-id35540 . -223) (undo-tree-id35541 . -223) (undo-tree-id35542 . -223) (undo-tree-id35543 . -223) (undo-tree-id35544 . -223) (undo-tree-id35545 . -223) (undo-tree-id35546 . -223) (undo-tree-id35547 . -223) (undo-tree-id35548 . -223) (undo-tree-id35549 . -223) (undo-tree-id35550 . -223) (undo-tree-id35551 . -223) (undo-tree-id35552 . -223) (undo-tree-id35553 . -223) (undo-tree-id35554 . -223) (undo-tree-id35555 . -223) (undo-tree-id35556 . -223) (undo-tree-id35557 . -223) (undo-tree-id35558 . -223) (undo-tree-id35559 . -223) (undo-tree-id35560 . -223) (undo-tree-id35561 . -223) (undo-tree-id35562 . -223) (undo-tree-id35563 . -223) (undo-tree-id35564 . -223) (undo-tree-id35565 . -223) (undo-tree-id35566 . -223) (undo-tree-id35567 . -223) (undo-tree-id35568 . -223) (undo-tree-id35569 . -223) (undo-tree-id35570 . -223) (undo-tree-id35571 . -223) (undo-tree-id35572 . -223) (undo-tree-id35573 . -223) (undo-tree-id35574 . -223) (undo-tree-id35575 . -223) (undo-tree-id35576 . -223) (undo-tree-id35577 . -223) (undo-tree-id35578 . -223) (undo-tree-id35579 . -223) (undo-tree-id35580 . -223) (undo-tree-id35581 . -223) (undo-tree-id35582 . -223) (undo-tree-id35583 . -223) (undo-tree-id35584 . -223) (undo-tree-id35585 . -223) (undo-tree-id35586 . -223) (undo-tree-id35587 . -223) (undo-tree-id35588 . -223) (undo-tree-id35589 . -223) (undo-tree-id35590 . -223) (undo-tree-id35591 . -223) (undo-tree-id35592 . -223) (undo-tree-id35593 . -223) (undo-tree-id35594 . -223) (undo-tree-id35595 . -223) (undo-tree-id35596 . -223) (undo-tree-id35597 . -223) (undo-tree-id35598 . -223) (undo-tree-id35599 . -223) (undo-tree-id35600 . -223) (undo-tree-id35601 . -223) (undo-tree-id35602 . -223) (undo-tree-id35603 . -223) (undo-tree-id35604 . -223) (undo-tree-id35605 . -223) (undo-tree-id35606 . -223) (undo-tree-id35607 . -223) (undo-tree-id35608 . -223) (undo-tree-id35609 . -223) (undo-tree-id35610 . -223) (undo-tree-id35611 . -223) (undo-tree-id35612 . -223) (undo-tree-id35613 . -223) (undo-tree-id35614 . -223) (undo-tree-id35615 . -223) (undo-tree-id35616 . -223) (undo-tree-id35617 . -223) (undo-tree-id35618 . -223) (undo-tree-id35619 . -223) (undo-tree-id35620 . -223) (undo-tree-id35621 . -156) (2387 . 2543) (#(" since this true label information is not available for prediction (inference), we feed the predicted output instead, as depicted in the previous figure." 0 12 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 12 14 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 14 17 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 17 21 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 21 26 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 26 27 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 27 28 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 28 29 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 29 30 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 30 31 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 31 32 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 32 33 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 33 34 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 34 35 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 35 36 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 36 37 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 37 38 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 38 39 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 39 40 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 40 41 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 41 42 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 42 43 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 43 44 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 44 45 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 45 46 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 46 47 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 47 48 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 48 49 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 49 50 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 50 51 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 51 52 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 52 53 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 53 54 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 54 55 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 55 56 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 56 57 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 57 58 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 58 59 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 59 60 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 60 61 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 61 62 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 62 153 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2454) (undo-tree-id35622 . -5) (undo-tree-id35623 . -5) (undo-tree-id35624 . -5) (undo-tree-id35625 . -5) (undo-tree-id35626 . -5) (undo-tree-id35627 . -5) (undo-tree-id35628 . -5) (undo-tree-id35629 . -5) (undo-tree-id35630 . -5) (undo-tree-id35631 . -5) (undo-tree-id35632 . -5) (undo-tree-id35633 . -5) (undo-tree-id35634 . -5) (undo-tree-id35635 . -5) (undo-tree-id35636 . -5) (undo-tree-id35637 . -5) (undo-tree-id35638 . -10) (undo-tree-id35639 . -10) (undo-tree-id35640 . -10) (undo-tree-id35641 . -10) (undo-tree-id35642 . -10) (undo-tree-id35643 . -10) (undo-tree-id35644 . -10) (undo-tree-id35645 . -10) (undo-tree-id35646 . -10) (undo-tree-id35647 . -10) (undo-tree-id35648 . -10) (undo-tree-id35649 . -10) (undo-tree-id35650 . -10) (undo-tree-id35651 . -10) (undo-tree-id35652 . -10) (undo-tree-id35653 . -10) (undo-tree-id35654 . -15) (undo-tree-id35655 . -15) (undo-tree-id35656 . -15) (undo-tree-id35657 . -15) (undo-tree-id35658 . -15) (undo-tree-id35659 . -15) (undo-tree-id35660 . -15) (undo-tree-id35661 . -15) (undo-tree-id35662 . -15) (undo-tree-id35663 . -15) (undo-tree-id35664 . -15) (undo-tree-id35665 . -15) (undo-tree-id35666 . -15) (undo-tree-id35667 . -15) (undo-tree-id35668 . -15) (undo-tree-id35669 . -15) (undo-tree-id35670 . -21) (undo-tree-id35671 . -21) (undo-tree-id35672 . -21) (undo-tree-id35673 . -21) (undo-tree-id35674 . -21) (undo-tree-id35675 . -21) (undo-tree-id35676 . -21) (undo-tree-id35677 . -21) (undo-tree-id35678 . -21) (undo-tree-id35679 . -21) (undo-tree-id35680 . -21) (undo-tree-id35681 . -21) (undo-tree-id35682 . -21) (undo-tree-id35683 . -21) (undo-tree-id35684 . -21) (undo-tree-id35685 . -21) (undo-tree-id35686 . -33) (undo-tree-id35687 . -33) (undo-tree-id35688 . -33) (undo-tree-id35689 . -33) (undo-tree-id35690 . -33) (undo-tree-id35691 . -33) (undo-tree-id35692 . -33) (undo-tree-id35693 . -33) (undo-tree-id35694 . -33) (undo-tree-id35695 . -33) (undo-tree-id35696 . -33) (undo-tree-id35697 . -33) (undo-tree-id35698 . -33) (undo-tree-id35699 . -33) (undo-tree-id35700 . -33) (undo-tree-id35701 . -33) (undo-tree-id35702 . -36) (undo-tree-id35703 . -36) (undo-tree-id35704 . -36) (undo-tree-id35705 . -36) (undo-tree-id35706 . -36) (undo-tree-id35707 . -36) (undo-tree-id35708 . -36) (undo-tree-id35709 . -36) (undo-tree-id35710 . -36) (undo-tree-id35711 . -36) (undo-tree-id35712 . -36) (undo-tree-id35713 . -36) (undo-tree-id35714 . -36) (undo-tree-id35715 . -36) (undo-tree-id35716 . -36) (undo-tree-id35717 . -36) (undo-tree-id35718 . -40) (undo-tree-id35719 . -40) (undo-tree-id35720 . -40) (undo-tree-id35721 . -40) (undo-tree-id35722 . -40) (undo-tree-id35723 . -40) (undo-tree-id35724 . -40) (undo-tree-id35725 . -40) (undo-tree-id35726 . -40) (undo-tree-id35727 . -40) (undo-tree-id35728 . -40) (undo-tree-id35729 . -40) (undo-tree-id35730 . -40) (undo-tree-id35731 . -40) (undo-tree-id35732 . -40) (undo-tree-id35733 . -40) (undo-tree-id35734 . -50) (undo-tree-id35735 . -50) (undo-tree-id35736 . -50) (undo-tree-id35737 . -50) (undo-tree-id35738 . -50) (undo-tree-id35739 . -50) (undo-tree-id35740 . -50) (undo-tree-id35741 . -50) (undo-tree-id35742 . -50) (undo-tree-id35743 . -50) (undo-tree-id35744 . -50) (undo-tree-id35745 . -50) (undo-tree-id35746 . -50) (undo-tree-id35747 . -50) (undo-tree-id35748 . -50) (undo-tree-id35749 . -50) (undo-tree-id35750 . -50) (undo-tree-id35751 . -50) (undo-tree-id35752 . -50) (undo-tree-id35753 . -50) (undo-tree-id35754 . -50) (undo-tree-id35755 . -54) (undo-tree-id35756 . -54) (undo-tree-id35757 . -54) (undo-tree-id35758 . -54) (undo-tree-id35759 . -54) (undo-tree-id35760 . -54) (undo-tree-id35761 . -54) (undo-tree-id35762 . -54) (undo-tree-id35763 . -54) (undo-tree-id35764 . -54) (undo-tree-id35765 . -54) (undo-tree-id35766 . -54) (undo-tree-id35767 . -54) (undo-tree-id35768 . -54) (undo-tree-id35769 . -54) (undo-tree-id35770 . -54) (undo-tree-id35771 . -65) (undo-tree-id35772 . -65) (undo-tree-id35773 . -65) (undo-tree-id35774 . -65) (undo-tree-id35775 . -65) (undo-tree-id35776 . -65) (undo-tree-id35777 . -65) (undo-tree-id35778 . -65) (undo-tree-id35779 . -65) (undo-tree-id35780 . -65) (undo-tree-id35781 . -65) (undo-tree-id35782 . -65) (undo-tree-id35783 . -65) (undo-tree-id35784 . -65) (undo-tree-id35785 . -65) (undo-tree-id35786 . -65) (undo-tree-id35787 . -67) (undo-tree-id35788 . -67) (undo-tree-id35789 . -67) (undo-tree-id35790 . -67) (undo-tree-id35791 . -67) (undo-tree-id35792 . -67) (undo-tree-id35793 . -67) (undo-tree-id35794 . -67) (undo-tree-id35795 . -67) (undo-tree-id35796 . -67) (undo-tree-id35797 . -67) (undo-tree-id35798 . -67) (undo-tree-id35799 . -67) (undo-tree-id35800 . -67) (undo-tree-id35801 . -67) (undo-tree-id35802 . -67) (undo-tree-id35803 . -67) (undo-tree-id35804 . -67) (undo-tree-id35805 . -67) (undo-tree-id35806 . -67) (undo-tree-id35807 . -67) (undo-tree-id35808 . -76) (undo-tree-id35809 . -76) (undo-tree-id35810 . -76) (undo-tree-id35811 . -76) (undo-tree-id35812 . -76) (undo-tree-id35813 . -76) (undo-tree-id35814 . -76) (undo-tree-id35815 . -76) (undo-tree-id35816 . -76) (undo-tree-id35817 . -76) (undo-tree-id35818 . -76) (undo-tree-id35819 . -76) (undo-tree-id35820 . -76) (undo-tree-id35821 . -76) (undo-tree-id35822 . -76) (undo-tree-id35823 . -76) (undo-tree-id35824 . -78) (undo-tree-id35825 . -78) (undo-tree-id35826 . -78) (undo-tree-id35827 . -78) (undo-tree-id35828 . -78) (undo-tree-id35829 . -78) (undo-tree-id35830 . -78) (undo-tree-id35831 . -78) (undo-tree-id35832 . -78) (undo-tree-id35833 . -78) (undo-tree-id35834 . -78) (undo-tree-id35835 . -78) (undo-tree-id35836 . -78) (undo-tree-id35837 . -78) (undo-tree-id35838 . -78) (undo-tree-id35839 . -78) (undo-tree-id35840 . -81) (undo-tree-id35841 . -81) (undo-tree-id35842 . -81) (undo-tree-id35843 . -81) (undo-tree-id35844 . -81) (undo-tree-id35845 . -81) (undo-tree-id35846 . -81) (undo-tree-id35847 . -81) (undo-tree-id35848 . -81) (undo-tree-id35849 . -81) (undo-tree-id35850 . -81) (undo-tree-id35851 . -81) (undo-tree-id35852 . -81) (undo-tree-id35853 . -81) (undo-tree-id35854 . -81) (undo-tree-id35855 . -81) (undo-tree-id35856 . -81) (undo-tree-id35857 . -81) (undo-tree-id35858 . -81) (undo-tree-id35859 . -81) (undo-tree-id35860 . -81) (undo-tree-id35861 . -81) (undo-tree-id35862 . -81) (undo-tree-id35863 . -81) (undo-tree-id35864 . -81) (undo-tree-id35865 . -81) (undo-tree-id35866 . -81) (undo-tree-id35867 . -81) (undo-tree-id35868 . -81) (undo-tree-id35869 . -81) (undo-tree-id35870 . -81) (undo-tree-id35871 . -81) (undo-tree-id35872 . -81) (undo-tree-id35873 . -81) (undo-tree-id35874 . -81) (undo-tree-id35875 . -81) (undo-tree-id35876 . -81) (undo-tree-id35877 . -81) (undo-tree-id35878 . -81) (undo-tree-id35879 . -81) (undo-tree-id35880 . -81) (undo-tree-id35881 . -81) (undo-tree-id35882 . -81) (undo-tree-id35883 . -81) (undo-tree-id35884 . -81) (undo-tree-id35885 . -81) (undo-tree-id35886 . -81) (undo-tree-id35887 . -81) (undo-tree-id35888 . -81) (undo-tree-id35889 . -81) (undo-tree-id35890 . -81) (undo-tree-id35891 . -81) (undo-tree-id35892 . -81) (undo-tree-id35893 . -81) (undo-tree-id35894 . -81) (undo-tree-id35895 . -81) (undo-tree-id35896 . -81) (undo-tree-id35897 . -81) (undo-tree-id35898 . -81) (undo-tree-id35899 . -81) (undo-tree-id35900 . -81) (undo-tree-id35901 . -81) (undo-tree-id35902 . -81) (undo-tree-id35903 . -81) (undo-tree-id35904 . -81) (undo-tree-id35905 . -81) (undo-tree-id35906 . -81) (undo-tree-id35907 . -81) (undo-tree-id35908 . -81) (undo-tree-id35909 . -81) (undo-tree-id35910 . -19) (undo-tree-id35911 . -19) (undo-tree-id35912 . -19) (undo-tree-id35913 . -19) (undo-tree-id35914 . -19) (undo-tree-id35915 . -19) (undo-tree-id35916 . -19) (undo-tree-id35917 . -19) (undo-tree-id35918 . -19) (undo-tree-id35919 . -19) (undo-tree-id35920 . -19) (undo-tree-id35921 . -19) (undo-tree-id35922 . -19) (undo-tree-id35923 . -19) (undo-tree-id35924 . -19) (undo-tree-id35925 . -19) (undo-tree-id35926 . -19) (undo-tree-id35927 . -19) (undo-tree-id35928 . -19) (undo-tree-id35929 . -19) (undo-tree-id35930 . -19) (undo-tree-id35931 . -19) (undo-tree-id35932 . -19) (undo-tree-id35933 . -19) (undo-tree-id35934 . -19) (undo-tree-id35935 . -19) (undo-tree-id35936 . -17) (undo-tree-id35937 . -17) (undo-tree-id35938 . -17) (undo-tree-id35939 . -17) (undo-tree-id35940 . -17) (undo-tree-id35941 . -17) (undo-tree-id35942 . -17) (undo-tree-id35943 . -17) (undo-tree-id35944 . -17) (undo-tree-id35945 . -17) (undo-tree-id35946 . -17) (undo-tree-id35947 . -17) (undo-tree-id35948 . -17) (undo-tree-id35949 . -17) (undo-tree-id35950 . -17) (undo-tree-id35951 . -17) (undo-tree-id35952 . -12) (undo-tree-id35953 . -12) (undo-tree-id35954 . -12) (undo-tree-id35955 . -12) (undo-tree-id35956 . -12) (undo-tree-id35957 . -12) (undo-tree-id35958 . -12) (undo-tree-id35959 . -12) (undo-tree-id35960 . -12) (undo-tree-id35961 . -12) (undo-tree-id35962 . -12) (undo-tree-id35963 . -12) (undo-tree-id35964 . -12) (undo-tree-id35965 . -12) (undo-tree-id35966 . -12) (undo-tree-id35967 . -12) (undo-tree-id35968 . -7) (undo-tree-id35969 . -7) (undo-tree-id35970 . -7) (undo-tree-id35971 . -7) (undo-tree-id35972 . -7) (undo-tree-id35973 . -7) (undo-tree-id35974 . -7) (undo-tree-id35975 . -7) (undo-tree-id35976 . -7) (undo-tree-id35977 . -7) (undo-tree-id35978 . -7) (undo-tree-id35979 . -7) (undo-tree-id35980 . -7) (undo-tree-id35981 . -7) (undo-tree-id35982 . -7) (undo-tree-id35983 . -7) (undo-tree-id35984 . -1) (undo-tree-id35985 . -1) (undo-tree-id35986 . -1) (undo-tree-id35987 . -1) (undo-tree-id35988 . -1) (undo-tree-id35989 . -1) (undo-tree-id35990 . -1) (undo-tree-id35991 . -1) (undo-tree-id35992 . -1) (undo-tree-id35993 . -1) (undo-tree-id35994 . -1) (undo-tree-id35995 . -1) (undo-tree-id35996 . -1) (undo-tree-id35997 . -1) (undo-tree-id35998 . -1) (undo-tree-id35999 . -1) (undo-tree-id36000 . -1) (undo-tree-id36001 . -1) (undo-tree-id36002 . -1) (undo-tree-id36003 . -1) (undo-tree-id36004 . -1) (undo-tree-id36005 . -1) (undo-tree-id36006 . -1) (undo-tree-id36007 . -1) (undo-tree-id36008 . -1) (undo-tree-id36009 . -1) (undo-tree-id36010 . -1) (undo-tree-id36011 . -1) (undo-tree-id36012 . -1) (undo-tree-id36013 . -1) (undo-tree-id36014 . -1) (undo-tree-id36015 . -1) (undo-tree-id36016 . -1) (undo-tree-id36017 . -1) (undo-tree-id36018 . -1) (undo-tree-id36019 . -1) (undo-tree-id36020 . -1) (undo-tree-id36021 . -1) (undo-tree-id36022 . -1) (undo-tree-id36023 . -1) (undo-tree-id36024 . -1) (undo-tree-id36025 . -1) (undo-tree-id36026 . -1) (undo-tree-id36027 . -1) (undo-tree-id36028 . -1) (undo-tree-id36029 . -1) (undo-tree-id36030 . -1) (undo-tree-id36031 . -1) (undo-tree-id36032 . -1) (undo-tree-id36033 . -1) (undo-tree-id36034 . -1) (undo-tree-id36035 . -1) (undo-tree-id36036 . -1) (undo-tree-id36037 . -1) (undo-tree-id36038 . -1) (undo-tree-id36039 . -1) (undo-tree-id36040 . -1) (undo-tree-id36041 . -1) (undo-tree-id36042 . -1) (undo-tree-id36043 . -1) (undo-tree-id36044 . -1) (undo-tree-id36045 . -1) (undo-tree-id36046 . -1) (undo-tree-id36047 . -1) (undo-tree-id36048 . -1) (undo-tree-id36049 . -1) (undo-tree-id36050 . -1) (undo-tree-id36051 . -1) (undo-tree-id36052 . -1) (undo-tree-id36053 . -1) (undo-tree-id36054 . -1) (undo-tree-id36055 . -1) (undo-tree-id36056 . -1) (undo-tree-id36057 . -1) (undo-tree-id36058 . -1) (undo-tree-id36059 . -1) (undo-tree-id36060 . -1) (undo-tree-id36061 . -1) (undo-tree-id36062 . -1) (undo-tree-id36063 . -1) (undo-tree-id36064 . -1) (undo-tree-id36065 . -1) (undo-tree-id36066 . -1) (undo-tree-id36067 . -1) (undo-tree-id36068 . -1) (undo-tree-id36069 . -1) (undo-tree-id36070 . -1) (undo-tree-id36071 . -1) (undo-tree-id36072 . -1) (undo-tree-id36073 . -1) (undo-tree-id36074 . -1) (undo-tree-id36075 . -1) (undo-tree-id36076 . -1) (undo-tree-id36077 . -1) (undo-tree-id36078 . -1) (undo-tree-id36079 . -1) (undo-tree-id36080 . -1) (undo-tree-id36081 . -1) (undo-tree-id36082 . -1) (undo-tree-id36083 . -1) (undo-tree-id36084 . -1) (undo-tree-id36085 . -1) (undo-tree-id36086 . -1) (undo-tree-id36087 . -1) (undo-tree-id36088 . -1) (undo-tree-id36089 . -1) (undo-tree-id36090 . -1) (undo-tree-id36091 . -1) (undo-tree-id36092 . -1) (undo-tree-id36093 . -1) (undo-tree-id36094 . -1) (undo-tree-id36095 . -1) (undo-tree-id36096 . -1) (undo-tree-id36097 . -1) (undo-tree-id36098 . -1) (undo-tree-id36099 . -1) (undo-tree-id36100 . -1) (undo-tree-id36101 . -1) (undo-tree-id36102 . -1) (undo-tree-id36103 . -1) (undo-tree-id36104 . -1) (undo-tree-id36105 . -1) (undo-tree-id36106 . -1) (undo-tree-id36107 . -1) (undo-tree-id36108 . -1) (undo-tree-id36109 . -1) (undo-tree-id36110 . -1) (undo-tree-id36111 . -1) (undo-tree-id36112 . -1) (undo-tree-id36113 . -1) (undo-tree-id36114 . -1) (undo-tree-id36115 . -1) (undo-tree-id36116 . -1) (undo-tree-id36117 . -1) (undo-tree-id36118 . -1) (undo-tree-id36119 . -1) (undo-tree-id36120 . -1) (undo-tree-id36121 . -1) (undo-tree-id36122 . -1) (undo-tree-id36123 . -1) (undo-tree-id36124 . -1) (undo-tree-id36125 . -1) (undo-tree-id36126 . -1) (undo-tree-id36127 . -1) (undo-tree-id36128 . -1) (undo-tree-id36129 . -1) (undo-tree-id36130 . -1) (undo-tree-id36131 . -1) (undo-tree-id36132 . -1) (undo-tree-id36133 . -1) (undo-tree-id36134 . -1) (undo-tree-id36135 . -1) (undo-tree-id36136 . -1) (undo-tree-id36137 . -1) (undo-tree-id36138 . -1) (undo-tree-id36139 . -1) (undo-tree-id36140 . -1) (undo-tree-id36141 . -1) (undo-tree-id36142 . -1) (undo-tree-id36143 . -5) (undo-tree-id36144 . -5) (undo-tree-id36145 . -5) (undo-tree-id36146 . -5) (undo-tree-id36147 . -5) (undo-tree-id36148 . -5) (undo-tree-id36149 . -5) (undo-tree-id36150 . -5) (undo-tree-id36151 . -5) (undo-tree-id36152 . -5) (undo-tree-id36153 . -5) (undo-tree-id36154 . -5) (undo-tree-id36155 . -5) (undo-tree-id36156 . -5) (undo-tree-id36157 . -5) (undo-tree-id36158 . -5) (undo-tree-id36159 . -5) (undo-tree-id36160 . -5) (undo-tree-id36161 . -5) (undo-tree-id36162 . -5) (undo-tree-id36163 . -5) (undo-tree-id36164 . -5) (undo-tree-id36165 . -5) (undo-tree-id36166 . -5) (undo-tree-id36167 . -5) (undo-tree-id36168 . -5) (undo-tree-id36169 . -5) (undo-tree-id36170 . -5) (undo-tree-id36171 . -5) (undo-tree-id36172 . -5) (undo-tree-id36173 . -5) (undo-tree-id36174 . -5) (undo-tree-id36175 . -5) (undo-tree-id36176 . -5) (undo-tree-id36177 . -5) (undo-tree-id36178 . -5) (undo-tree-id36179 . -1) (undo-tree-id36180 . -1) (undo-tree-id36181 . -1) (undo-tree-id36182 . -1) (undo-tree-id36183 . -1) (undo-tree-id36184 . -1) (undo-tree-id36185 . -1) (undo-tree-id36186 . -1) (undo-tree-id36187 . -1) (undo-tree-id36188 . -1) (undo-tree-id36189 . -1) (undo-tree-id36190 . -1) (undo-tree-id36191 . -1) (undo-tree-id36192 . -1) (undo-tree-id36193 . -1) (undo-tree-id36194 . -1) (#(";" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2454) (undo-tree-id36195 . -1) (undo-tree-id36196 . -1) (undo-tree-id36197 . -1) (t 25774 60394 255366 354000)) nil (25774 60454 981609 778000) 0 nil])
([nil nil ((#("since " 0 6 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2458) (undo-tree-id36201 . 6) (undo-tree-id36202 . -5) (undo-tree-id36203 . -6) (t 25774 60455 16039 900000)) nil (25774 60465 520095 508000) 0 nil])
([nil nil ((#("this " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2458) (undo-tree-id36198 . 5) (undo-tree-id36199 . -4) (undo-tree-id36200 . -5)) nil (25774 60465 520088 904000) 0 nil])
([nil nil ((2458 . 2459) (#("t" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2458)) nil (25774 60465 520070 544000) 0 nil])
([nil nil ((2456 . 2602) (#("- we feed the predicted output instead, as depicted in the previous figure.

- True label information is not available for prediction (inference)," 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 75 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 75 76 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 76 77 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 77 78 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 78 79 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 79 81 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 81 84 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 84 88 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 88 93 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 93 94 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 94 95 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 95 96 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 96 97 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 97 98 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 98 99 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 99 100 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 100 101 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 101 102 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 102 103 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 103 104 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 104 105 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 105 106 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 106 107 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 107 108 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 108 109 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 109 110 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 110 111 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 111 112 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 112 113 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 113 114 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 114 115 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 115 116 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 116 117 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 117 118 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 118 119 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 119 120 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 120 121 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 121 122 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 122 123 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 123 124 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 124 125 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 125 126 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 126 127 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 127 128 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 128 129 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 129 146 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2456) (undo-tree-id36206 . 67) (undo-tree-id36207 . -79) (undo-tree-id36208 . -79) (undo-tree-id36209 . 66) (undo-tree-id36210 . -79) (undo-tree-id36211 . -79) (undo-tree-id36212 . -79) (undo-tree-id36213 . -146) (undo-tree-id36214 . -79) (undo-tree-id36215 . -79) (undo-tree-id36216 . -79) (undo-tree-id36217 . -79) (undo-tree-id36218 . -79) (undo-tree-id36219 . -79) (undo-tree-id36220 . -79) (undo-tree-id36221 . -79) (undo-tree-id36222 . -79) (undo-tree-id36223 . -79) (undo-tree-id36224 . -79) (undo-tree-id36225 . -79) (undo-tree-id36226 . -79) (undo-tree-id36227 . -79) (undo-tree-id36228 . -79) (undo-tree-id36229 . -79) (undo-tree-id36230 . -79) (undo-tree-id36231 . -79) (undo-tree-id36232 . -79) (undo-tree-id36233 . -79) (undo-tree-id36234 . -79) (undo-tree-id36235 . -79) (undo-tree-id36236 . -79) (undo-tree-id36237 . -79) (undo-tree-id36238 . -79) (undo-tree-id36239 . -79) (undo-tree-id36240 . -79) (undo-tree-id36241 . -79) (undo-tree-id36242 . -79) (undo-tree-id36243 . -79) (undo-tree-id36244 . -79) (undo-tree-id36245 . -79) (undo-tree-id36246 . -79) (undo-tree-id36247 . -79) (undo-tree-id36248 . -79) (undo-tree-id36249 . -79) (undo-tree-id36250 . -79) (undo-tree-id36251 . -79) (undo-tree-id36252 . -79) (undo-tree-id36253 . -79) (undo-tree-id36254 . -79) (undo-tree-id36255 . -79) (undo-tree-id36256 . -79) (undo-tree-id36257 . -79) (undo-tree-id36258 . -79) (undo-tree-id36259 . -79) (undo-tree-id36260 . -79) (undo-tree-id36261 . -79) (undo-tree-id36262 . -79) (undo-tree-id36263 . -79) (undo-tree-id36264 . -79) (undo-tree-id36265 . -79) (undo-tree-id36266 . -79) (undo-tree-id36267 . -79) (undo-tree-id36268 . -79) (undo-tree-id36269 . -79) (undo-tree-id36270 . -79) (undo-tree-id36271 . -79) (undo-tree-id36272 . -79) (undo-tree-id36273 . -79) (undo-tree-id36274 . -79) (undo-tree-id36275 . -79) (undo-tree-id36276 . -79) (undo-tree-id36277 . -79) (undo-tree-id36278 . -79) (undo-tree-id36279 . -79) (undo-tree-id36280 . -79) (undo-tree-id36281 . -79) (undo-tree-id36282 . -79) (undo-tree-id36283 . -145) (undo-tree-id36284 . -145) (undo-tree-id36285 . -145) (undo-tree-id36286 . -145) (undo-tree-id36287 . -145) (undo-tree-id36288 . -145) (undo-tree-id36289 . -145) (undo-tree-id36290 . -145) (undo-tree-id36291 . -145) (undo-tree-id36292 . -145) (undo-tree-id36293 . -145) (undo-tree-id36294 . -145) (undo-tree-id36295 . -145) (undo-tree-id36296 . -145) (undo-tree-id36297 . -145) (undo-tree-id36298 . -145) (undo-tree-id36299 . -145) (undo-tree-id36300 . -145) (undo-tree-id36301 . -145) (undo-tree-id36302 . -145) (undo-tree-id36303 . -145) (undo-tree-id36304 . -145) (undo-tree-id36305 . -145) (undo-tree-id36306 . -145) (undo-tree-id36307 . -145) (undo-tree-id36308 . -145) (undo-tree-id36309 . -145) (undo-tree-id36310 . -145) (undo-tree-id36311 . -145) (undo-tree-id36312 . -145) (undo-tree-id36313 . -145) (undo-tree-id36314 . -146) (undo-tree-id36315 . -146) (undo-tree-id36316 . -146) (undo-tree-id36317 . -146) (undo-tree-id36318 . -146) (undo-tree-id36319 . -146) (undo-tree-id36320 . -146) (undo-tree-id36321 . -146) (undo-tree-id36322 . -146) (undo-tree-id36323 . -146) (undo-tree-id36324 . -146) (undo-tree-id36325 . -146) (undo-tree-id36326 . -146) (undo-tree-id36327 . -146) (undo-tree-id36328 . -146) (undo-tree-id36329 . -146) (undo-tree-id36330 . -146) (undo-tree-id36331 . -146) (undo-tree-id36332 . -146) (undo-tree-id36333 . -146) (undo-tree-id36334 . -146) (undo-tree-id36335 . -146) (undo-tree-id36336 . -146) (undo-tree-id36337 . -146) (undo-tree-id36338 . -77) (2456 . 2533) (#(" we feed the predicted output instead, as depicted in the previous figure." 0 74 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2525) (t 25774 60465 560155 966000)) nil (25774 60471 608564 403000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2524) (undo-tree-id36204 . -1) (undo-tree-id36205 . -1)) nil (25774 60471 608385 920000) 0 nil])
([nil nil ((#("we " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2528) (undo-tree-id36339 . 3) (undo-tree-id36340 . -2) (undo-tree-id36341 . -3) (t 25774 60471 648222 875000)) nil (25774 60478 202824 420000) 0 nil])
([nil nil ((2528 . 2529) (#("f" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2528)) nil (25774 60478 202812 412000) 0 nil])
([nil nil ((#(", as depicted in the previous figure." 0 37 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2561) (undo-tree-id36342 . -36) (undo-tree-id36343 . -37) (undo-tree-id36344 . -37) (t 25774 60478 240295 239000)) nil (25774 60487 806525 190000) 0 nil])
([nil nil ((#("- The context vectors are computed via a weighted sum over the inputs, where the weights are the attention weights.
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 42 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 42 44 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 44 52 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 52 55 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 55 56 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 56 61 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 61 62 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 62 67 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 67 69 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 69 70 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 70 88 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 88 89 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 89 115 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 115 116 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2728) (undo-tree-id36803 . -115) (undo-tree-id36804 . -2) (undo-tree-id36805 . -2) (undo-tree-id36806 . -2) (undo-tree-id36807 . -2) (undo-tree-id36808 . -2) (undo-tree-id36809 . -2) (undo-tree-id36810 . -2) (undo-tree-id36811 . -2) (undo-tree-id36812 . -2) (undo-tree-id36813 . -2) (undo-tree-id36814 . -2) (undo-tree-id36815 . -2) (undo-tree-id36816 . -2) (undo-tree-id36817 . -2) (undo-tree-id36818 . -2) (undo-tree-id36819 . -2) (undo-tree-id36820 . -2) (undo-tree-id36821 . -2) (undo-tree-id36822 . -2) (undo-tree-id36823 . -2) (undo-tree-id36824 . -2) (undo-tree-id36825 . -2) (undo-tree-id36826 . -2) (undo-tree-id36827 . -2) (undo-tree-id36828 . -2) (undo-tree-id36829 . -2) (undo-tree-id36830 . -2) (undo-tree-id36831 . -2) (undo-tree-id36832 . -2) (undo-tree-id36833 . -2) (undo-tree-id36834 . -2) (undo-tree-id36835 . -2) (undo-tree-id36836 . -2) (undo-tree-id36837 . -2) (undo-tree-id36838 . -2) (undo-tree-id36839 . -2) (undo-tree-id36840 . -2) (undo-tree-id36841 . -2) (undo-tree-id36842 . -2) (undo-tree-id36843 . -2) (undo-tree-id36844 . -2) (undo-tree-id36845 . -2) (undo-tree-id36846 . -2) (undo-tree-id36847 . -2) (undo-tree-id36848 . -2) (undo-tree-id36849 . -2) (undo-tree-id36850 . -2) (undo-tree-id36851 . -2) (undo-tree-id36852 . -2) (undo-tree-id36853 . -2) (undo-tree-id36854 . -2) (undo-tree-id36855 . -2) (undo-tree-id36856 . -2) (undo-tree-id36857 . -2) (undo-tree-id36858 . -2) (undo-tree-id36859 . -2) (undo-tree-id36860 . -2) (undo-tree-id36861 . -2) (undo-tree-id36862 . -2) (undo-tree-id36863 . -2) (undo-tree-id36864 . -2) (undo-tree-id36865 . -2) (undo-tree-id36866 . -2) (undo-tree-id36867 . -2) (undo-tree-id36868 . -2) (undo-tree-id36869 . -2) (undo-tree-id36870 . -2) (undo-tree-id36871 . -2) (undo-tree-id36872 . -2) (undo-tree-id36873 . -2) (undo-tree-id36874 . -2) (undo-tree-id36875 . -2) (undo-tree-id36876 . -2) (undo-tree-id36877 . -2) (undo-tree-id36878 . -2) (undo-tree-id36879 . -2) (undo-tree-id36880 . -2) (undo-tree-id36881 . -2) (undo-tree-id36882 . -2) (undo-tree-id36883 . -2) (undo-tree-id36884 . -2) (undo-tree-id36885 . -2) (undo-tree-id36886 . -2) (undo-tree-id36887 . -2) (undo-tree-id36888 . -2) (undo-tree-id36889 . -2) (undo-tree-id36890 . -2) (undo-tree-id36891 . -2) (undo-tree-id36892 . -2) (undo-tree-id36893 . -2) (undo-tree-id36894 . -2) (undo-tree-id36895 . -2) (undo-tree-id36896 . -2) (undo-tree-id36897 . -2) (undo-tree-id36898 . -2) (undo-tree-id36899 . -2) (undo-tree-id36900 . -2) (undo-tree-id36901 . -2) (undo-tree-id36902 . -2) (undo-tree-id36903 . -2) (undo-tree-id36904 . -2) (undo-tree-id36905 . -2) (undo-tree-id36906 . -2) (undo-tree-id36907 . -2) (undo-tree-id36908 . -2) (undo-tree-id36909 . -2) (undo-tree-id36910 . -2) (undo-tree-id36911 . -2) (undo-tree-id36912 . -2) (undo-tree-id36913 . -2) (undo-tree-id36914 . -2) (undo-tree-id36915 . -2) (undo-tree-id36916 . -2) (undo-tree-id36917 . -2) (undo-tree-id36918 . -2) (undo-tree-id36919 . -2) (undo-tree-id36920 . -2) (undo-tree-id36921 . -2) (undo-tree-id36922 . -2) (undo-tree-id36923 . -2) (undo-tree-id36924 . -2) (undo-tree-id36925 . -116) 2730 (t 25774 60487 844400 511000)) nil (25774 60545 777603 242000) 0 nil])
([nil nil ((#("- RNN #2 receives the context vectors as input
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 37 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 37 38 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 38 46 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 46 47 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2680) (undo-tree-id36709 . -46) (undo-tree-id36710 . -6) (undo-tree-id36711 . -6) (undo-tree-id36712 . -6) (undo-tree-id36713 . -6) (undo-tree-id36714 . -6) (undo-tree-id36715 . -6) (undo-tree-id36716 . -6) (undo-tree-id36717 . -6) (undo-tree-id36718 . -6) (undo-tree-id36719 . -6) (undo-tree-id36720 . -6) (undo-tree-id36721 . -6) (undo-tree-id36722 . -6) (undo-tree-id36723 . -6) (undo-tree-id36724 . -6) (undo-tree-id36725 . -6) (undo-tree-id36726 . -6) (undo-tree-id36727 . -6) (undo-tree-id36728 . -6) (undo-tree-id36729 . -6) (undo-tree-id36730 . -6) (undo-tree-id36731 . -6) (undo-tree-id36732 . -6) (undo-tree-id36733 . -6) (undo-tree-id36734 . -6) (undo-tree-id36735 . -6) (undo-tree-id36736 . -6) (undo-tree-id36737 . -6) (undo-tree-id36738 . -6) (undo-tree-id36739 . -6) (undo-tree-id36740 . -47) (undo-tree-id36741 . -47) (undo-tree-id36742 . -47) (undo-tree-id36743 . -47) (undo-tree-id36744 . -47) (undo-tree-id36745 . -47) (undo-tree-id36746 . -47) (undo-tree-id36747 . -47) (undo-tree-id36748 . -47) (undo-tree-id36749 . -47) (undo-tree-id36750 . -47) (undo-tree-id36751 . -47) (undo-tree-id36752 . -47) (undo-tree-id36753 . -47) (undo-tree-id36754 . -47) (undo-tree-id36755 . -47) (undo-tree-id36756 . -47) (undo-tree-id36757 . -47) (undo-tree-id36758 . -47) (undo-tree-id36759 . -47) (undo-tree-id36760 . -47) (undo-tree-id36761 . -47) (undo-tree-id36762 . -47) (undo-tree-id36763 . -47) (undo-tree-id36764 . -47) (undo-tree-id36765 . -47) (undo-tree-id36766 . -47) (undo-tree-id36767 . -47) (undo-tree-id36768 . -47) (undo-tree-id36769 . -47) (undo-tree-id36770 . -47) (undo-tree-id36771 . -47) (undo-tree-id36772 . -47) (undo-tree-id36773 . -47) (undo-tree-id36774 . -47) (undo-tree-id36775 . -47) (undo-tree-id36776 . -2) (undo-tree-id36777 . -2) (undo-tree-id36778 . -2) (undo-tree-id36779 . -2) (undo-tree-id36780 . -2) (undo-tree-id36781 . -2) (undo-tree-id36782 . 45) (undo-tree-id36783 . -5) (undo-tree-id36784 . -2) (undo-tree-id36785 . -2) (undo-tree-id36786 . -2) (undo-tree-id36787 . -2) (undo-tree-id36788 . -2) (undo-tree-id36789 . -2) (undo-tree-id36790 . -47) (undo-tree-id36791 . -47) (undo-tree-id36792 . -47) (undo-tree-id36793 . -47) (undo-tree-id36794 . -47) (undo-tree-id36795 . -47) (undo-tree-id36796 . -47) (undo-tree-id36797 . -47) (undo-tree-id36798 . -47) (undo-tree-id36799 . -47) (undo-tree-id36800 . -47) (undo-tree-id36801 . -47) (undo-tree-id36802 . -47)) nil (25774 60545 777519 427000) 0 nil])
([nil nil ((#("- RNN #1 prepares context vectors from the input sequence elements
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 4 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 5 6 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 6 66 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 66 67 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2612) (undo-tree-id36560 . -66) (undo-tree-id36561 . -6) (undo-tree-id36562 . -6) (undo-tree-id36563 . -6) (undo-tree-id36564 . -6) (undo-tree-id36565 . -6) (undo-tree-id36566 . -6) (undo-tree-id36567 . -6) (undo-tree-id36568 . -6) (undo-tree-id36569 . -6) (undo-tree-id36570 . -6) (undo-tree-id36571 . -6) (undo-tree-id36572 . -6) (undo-tree-id36573 . -6) (undo-tree-id36574 . -6) (undo-tree-id36575 . -6) (undo-tree-id36576 . -6) (undo-tree-id36577 . -62) (undo-tree-id36578 . -62) (undo-tree-id36579 . -62) (undo-tree-id36580 . -62) (undo-tree-id36581 . -62) (undo-tree-id36582 . -62) (undo-tree-id36583 . -62) (undo-tree-id36584 . -62) (undo-tree-id36585 . -62) (undo-tree-id36586 . -62) (undo-tree-id36587 . -62) (undo-tree-id36588 . -62) (undo-tree-id36589 . -62) (undo-tree-id36590 . -62) (undo-tree-id36591 . -62) (undo-tree-id36592 . -62) (undo-tree-id36593 . -62) (undo-tree-id36594 . -62) (undo-tree-id36595 . -62) (undo-tree-id36596 . -62) (undo-tree-id36597 . -62) (undo-tree-id36598 . -67) (undo-tree-id36599 . -67) (undo-tree-id36600 . -67) (undo-tree-id36601 . -67) (undo-tree-id36602 . -67) (undo-tree-id36603 . -67) (undo-tree-id36604 . -67) (undo-tree-id36605 . -67) (undo-tree-id36606 . -67) (undo-tree-id36607 . -67) (undo-tree-id36608 . -67) (undo-tree-id36609 . -67) (undo-tree-id36610 . -58) (undo-tree-id36611 . -58) (undo-tree-id36612 . -58) (undo-tree-id36613 . -58) (undo-tree-id36614 . -58) (undo-tree-id36615 . -58) (undo-tree-id36616 . -58) (undo-tree-id36617 . -58) (undo-tree-id36618 . -58) (undo-tree-id36619 . -58) (undo-tree-id36620 . -58) (undo-tree-id36621 . -58) (undo-tree-id36622 . -58) (undo-tree-id36623 . -58) (undo-tree-id36624 . -58) (undo-tree-id36625 . -58) (undo-tree-id36626 . -58) (undo-tree-id36627 . -58) (undo-tree-id36628 . -58) (undo-tree-id36629 . -58) (undo-tree-id36630 . -58) (undo-tree-id36631 . 65) (undo-tree-id36632 . -5) (undo-tree-id36633 . -2) (undo-tree-id36634 . -2) (undo-tree-id36635 . -2) (undo-tree-id36636 . -2) (undo-tree-id36637 . -2) (undo-tree-id36638 . -2) (undo-tree-id36639 . -2) (undo-tree-id36640 . -2) (undo-tree-id36641 . -2) (undo-tree-id36642 . -2) (undo-tree-id36643 . -2) (undo-tree-id36644 . -2) (undo-tree-id36645 . -2) (undo-tree-id36646 . -2) (undo-tree-id36647 . -2) (undo-tree-id36648 . -2) (undo-tree-id36649 . -2) (undo-tree-id36650 . -2) (undo-tree-id36651 . -2) (undo-tree-id36652 . -2) (undo-tree-id36653 . -2) (undo-tree-id36654 . -2) (undo-tree-id36655 . -2) (undo-tree-id36656 . -2) (undo-tree-id36657 . -2) (undo-tree-id36658 . -2) (undo-tree-id36659 . -2) (undo-tree-id36660 . -2) (undo-tree-id36661 . -2) (undo-tree-id36662 . -2) (undo-tree-id36663 . -2) (undo-tree-id36664 . -58) (undo-tree-id36665 . -58) (undo-tree-id36666 . -58) (undo-tree-id36667 . -58) (undo-tree-id36668 . -58) (undo-tree-id36669 . -58) (undo-tree-id36670 . -58) (undo-tree-id36671 . -58) (undo-tree-id36672 . -58) (undo-tree-id36673 . -58) (undo-tree-id36674 . -58) (undo-tree-id36675 . -58) (undo-tree-id36676 . -58) (undo-tree-id36677 . -58) (undo-tree-id36678 . -58) (undo-tree-id36679 . -58) (undo-tree-id36680 . -67) (undo-tree-id36681 . -67) (undo-tree-id36682 . -67) (undo-tree-id36683 . -67) (undo-tree-id36684 . -67) (undo-tree-id36685 . -67) (undo-tree-id36686 . -67) (undo-tree-id36687 . -67) (undo-tree-id36688 . -67) (undo-tree-id36689 . -67) (undo-tree-id36690 . -67) (undo-tree-id36691 . -67) (undo-tree-id36692 . -58) (undo-tree-id36693 . -58) (undo-tree-id36694 . -58) (undo-tree-id36695 . -58) (undo-tree-id36696 . -58) (undo-tree-id36697 . -58) (undo-tree-id36698 . -58) (undo-tree-id36699 . -58) (undo-tree-id36700 . -58) (undo-tree-id36701 . -58) (undo-tree-id36702 . -58) (undo-tree-id36703 . -58) (undo-tree-id36704 . -58) (undo-tree-id36705 . -58) (undo-tree-id36706 . -58) (undo-tree-id36707 . -58) (undo-tree-id36708 . -67)) nil (25774 60545 777446 784000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2614) (undo-tree-id36558 . -1) (undo-tree-id36559 . -1)) nil (25774 60545 777022 474000) 0 nil])
([nil nil ((#("- 
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 2614) (undo-tree-id36549 . -2) (undo-tree-id36550 . -2) (undo-tree-id36551 . -2) (undo-tree-id36552 . -2) (undo-tree-id36553 . -3) (undo-tree-id36554 . -3) (undo-tree-id36555 . -3) (undo-tree-id36556 . -3) (undo-tree-id36557 . -3)) nil (25774 60545 777018 736000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2613) (undo-tree-id36345 . -1) (undo-tree-id36346 . -1) (undo-tree-id36347 . -1) (undo-tree-id36348 . -1) (undo-tree-id36349 . -1) (undo-tree-id36350 . -1) (undo-tree-id36351 . -1) (undo-tree-id36352 . -1) (undo-tree-id36353 . -1) (undo-tree-id36354 . -1) (undo-tree-id36355 . -1) (undo-tree-id36356 . -1) (undo-tree-id36357 . -1) (undo-tree-id36358 . -1) (undo-tree-id36359 . -1) (undo-tree-id36360 . -1) (undo-tree-id36361 . -1) (undo-tree-id36362 . -1) (undo-tree-id36363 . -1) (undo-tree-id36364 . -1) (undo-tree-id36365 . -1) (undo-tree-id36366 . -1) (undo-tree-id36367 . -1) (undo-tree-id36368 . -1) (undo-tree-id36369 . -1) (undo-tree-id36370 . -1) (undo-tree-id36371 . -1) (undo-tree-id36372 . -1) (undo-tree-id36373 . -1) (undo-tree-id36374 . -1) (undo-tree-id36375 . -1) (undo-tree-id36376 . -1) (undo-tree-id36377 . -1) (undo-tree-id36378 . -1) (undo-tree-id36379 . -1) (undo-tree-id36380 . -1) (undo-tree-id36381 . -1) (undo-tree-id36382 . -1) (undo-tree-id36383 . -1) (undo-tree-id36384 . -1) (undo-tree-id36385 . -1) (undo-tree-id36386 . -1) (undo-tree-id36387 . -1) (undo-tree-id36388 . -1) (undo-tree-id36389 . -1) (undo-tree-id36390 . -1) (undo-tree-id36391 . -1) (undo-tree-id36392 . -1) (undo-tree-id36393 . -1) (undo-tree-id36394 . -1) (undo-tree-id36395 . -1) (undo-tree-id36396 . -1) (undo-tree-id36397 . -1) (undo-tree-id36398 . -1) (undo-tree-id36399 . -1) (undo-tree-id36400 . -1) (undo-tree-id36401 . -1) (undo-tree-id36402 . -1) (undo-tree-id36403 . -1) (undo-tree-id36404 . -1) (undo-tree-id36405 . -1) (undo-tree-id36406 . -1) (undo-tree-id36407 . -1) (undo-tree-id36408 . -1) (undo-tree-id36409 . -1) (undo-tree-id36410 . -1) (undo-tree-id36411 . -1) (undo-tree-id36412 . -1) (undo-tree-id36413 . -1) (undo-tree-id36414 . -1) (undo-tree-id36415 . -1) (undo-tree-id36416 . -1) (undo-tree-id36417 . -1) (undo-tree-id36418 . -1) (undo-tree-id36419 . -1) (undo-tree-id36420 . -1) (undo-tree-id36421 . -1) (undo-tree-id36422 . -1) (undo-tree-id36423 . -1) (undo-tree-id36424 . -1) (undo-tree-id36425 . -1) (undo-tree-id36426 . -1) (undo-tree-id36427 . -1) (undo-tree-id36428 . -1) (undo-tree-id36429 . -1) (undo-tree-id36430 . -1) (undo-tree-id36431 . -1) (undo-tree-id36432 . -1) (undo-tree-id36433 . -1) (undo-tree-id36434 . -1) (undo-tree-id36435 . -1) (undo-tree-id36436 . -1) (undo-tree-id36437 . -1) (undo-tree-id36438 . -1) (undo-tree-id36439 . -1) (undo-tree-id36440 . -1) (undo-tree-id36441 . -1) (undo-tree-id36442 . -1) (undo-tree-id36443 . -1) (undo-tree-id36444 . -1) (undo-tree-id36445 . -1) (undo-tree-id36446 . -1) (undo-tree-id36447 . -1) (undo-tree-id36448 . -1) (undo-tree-id36449 . -1) (undo-tree-id36450 . -1) (undo-tree-id36451 . -1) (undo-tree-id36452 . -1) (undo-tree-id36453 . -1) (undo-tree-id36454 . -1) (undo-tree-id36455 . -1) (undo-tree-id36456 . -1) (undo-tree-id36457 . -1) (undo-tree-id36458 . -1) (undo-tree-id36459 . -1) (undo-tree-id36460 . -1) (undo-tree-id36461 . -1) (undo-tree-id36462 . -1) (undo-tree-id36463 . -1) (undo-tree-id36464 . -1) (undo-tree-id36465 . -1) (undo-tree-id36466 . -1) (undo-tree-id36467 . -1) (undo-tree-id36468 . -1) (undo-tree-id36469 . -1) (undo-tree-id36470 . -1) (undo-tree-id36471 . -1) (undo-tree-id36472 . -1) (undo-tree-id36473 . -1) (undo-tree-id36474 . -1) (undo-tree-id36475 . -1) (undo-tree-id36476 . -1) (undo-tree-id36477 . -1) (undo-tree-id36478 . -1) (undo-tree-id36479 . -1) (undo-tree-id36480 . -1) (undo-tree-id36481 . -1) (undo-tree-id36482 . -1) (undo-tree-id36483 . -1) (undo-tree-id36484 . -1) (undo-tree-id36485 . -1) (undo-tree-id36486 . -1) (undo-tree-id36487 . -1) (undo-tree-id36488 . -1) (undo-tree-id36489 . -1) (undo-tree-id36490 . -1) (undo-tree-id36491 . -1) (undo-tree-id36492 . -1) (undo-tree-id36493 . -1) (undo-tree-id36494 . -1) (undo-tree-id36495 . -1) (undo-tree-id36496 . -1) (undo-tree-id36497 . -1) (undo-tree-id36498 . -1) (undo-tree-id36499 . -1) (undo-tree-id36500 . -1) (undo-tree-id36501 . -1) (undo-tree-id36502 . -1) (undo-tree-id36503 . -1) (undo-tree-id36504 . -1) (undo-tree-id36505 . -1) (undo-tree-id36506 . -1) (undo-tree-id36507 . -1) (undo-tree-id36508 . -1) (undo-tree-id36509 . -1) (undo-tree-id36510 . -1) (undo-tree-id36511 . -1) (undo-tree-id36512 . -1) (undo-tree-id36513 . -1) (undo-tree-id36514 . -1) (undo-tree-id36515 . -1) (undo-tree-id36516 . -1) (undo-tree-id36517 . -1) (undo-tree-id36518 . -1) (undo-tree-id36519 . -1) (undo-tree-id36520 . -1) (undo-tree-id36521 . -1) (undo-tree-id36522 . -1) (undo-tree-id36523 . -1) (undo-tree-id36524 . -1) (undo-tree-id36525 . -1) (undo-tree-id36526 . -1) (undo-tree-id36527 . -1) (undo-tree-id36528 . -1) (undo-tree-id36529 . -1) (undo-tree-id36530 . -1) (undo-tree-id36531 . -1) (undo-tree-id36532 . -1) (undo-tree-id36533 . -1) (undo-tree-id36534 . -1) (undo-tree-id36535 . -1) (undo-tree-id36536 . -1) (undo-tree-id36537 . -1) (undo-tree-id36538 . -1) (undo-tree-id36539 . -1) (undo-tree-id36540 . -1) (undo-tree-id36541 . -1) (undo-tree-id36542 . -1) (undo-tree-id36543 . -1) (undo-tree-id36544 . -1) (undo-tree-id36545 . -1) (undo-tree-id36546 . -1) (undo-tree-id36547 . -1) (undo-tree-id36548 . -1) 2614) nil (25774 60545 776998 605000) 0 nil])
([nil nil ((2613 . 2616) (t 25774 60545 813032 152000)) nil (25774 60599 819574 20000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4623 . 4624) (nil fontified nil 4592 . 4624) (nil fontified nil 4492 . 4592) (nil fontified nil 4391 . 4492) (nil fontified nil 4291 . 4391) (nil fontified nil 4190 . 4291) (nil fontified nil 4087 . 4190) (nil fontified nil 4013 . 4087) (nil fontified nil 3915 . 4013) (nil fontified nil 3813 . 3915) (nil fontified nil 3715 . 3813) (nil fontified nil 3616 . 3715) (nil fontified nil 3510 . 3616) (nil fontified nil 3403 . 3510) (nil fontified nil 3302 . 3403) (nil fontified nil 3283 . 3302) (nil fontified nil 3280 . 3283) (nil fontified nil 3267 . 3280) (nil fontified nil 3258 . 3267) (nil fontified nil 3167 . 3258) (nil fontified nil 3064 . 3167) (nil fontified nil 2955 . 3064) (nil fontified nil 2851 . 2955) (nil fontified nil 2748 . 2851) (nil fontified nil 2648 . 2748) (nil fontified nil 2616 . 2648) (2616 . 4624) 2615) nil (25774 60599 819572 68000) 0 nil])
([nil nil ((3166 . 3167) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3166) (undo-tree-id37129 . -1) (3063 . 3064) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3063) (undo-tree-id37130 . -1) (2954 . 2955) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2954) (undo-tree-id37131 . -1) (2850 . 2851) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2850) (undo-tree-id37132 . -1) (2747 . 2748) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2747) (undo-tree-id37133 . -1) 2648) nil (25774 60599 819565 260000) 0 nil])
([nil nil ((#("𝛼𝛼𝑖𝑖𝑖𝑖 =
" 0 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3258) (undo-tree-id37110 . -8) (undo-tree-id37111 . -7) (undo-tree-id37112 . -7) (undo-tree-id37113 . -7) (undo-tree-id37114 . -7) (undo-tree-id37115 . -7) (undo-tree-id37116 . -7) (undo-tree-id37117 . -9) (undo-tree-id37118 . -9) (undo-tree-id37119 . -9) (undo-tree-id37120 . -9) (undo-tree-id37121 . -9) (undo-tree-id37122 . -9) (undo-tree-id37123 . -9) (undo-tree-id37124 . -9) (undo-tree-id37125 . -9) (undo-tree-id37126 . -9) (undo-tree-id37127 . -9) (undo-tree-id37128 . -9)) nil (25774 60599 819558 782000) 0 nil])
([nil nil ((#("exp(𝑒𝑒𝑖𝑖𝑖𝑖 )
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t) 1 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3258) (undo-tree-id37108 . -12) (undo-tree-id37109 . -13)) nil (25774 60599 819523 677000) 0 nil])
([nil nil ((#("𝑇𝑇
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t) 1 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3258) (undo-tree-id37106 . -2) (undo-tree-id37107 . -3)) nil (25774 60599 819521 31000) 0 nil])
([nil nil ((#("∑𝑘𝑘𝑘𝑘 exp(𝑒𝑒𝑖𝑖𝑖𝑖 )" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t) 1 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3258) (undo-tree-id37103 . -17) (undo-tree-id37104 . -18) (undo-tree-id37105 . -18)) nil (25774 60599 819518 725000) 0 nil])
([nil nil ((4548 . 4549) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4548) (undo-tree-id36926 . -1) (4448 . 4449) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4448) (undo-tree-id36927 . -1) (4347 . 4348) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4347) (undo-tree-id36928 . -1) (4247 . 4248) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4247) (undo-tree-id36929 . -1) (4146 . 4147) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4146) (undo-tree-id36930 . -1) (4043 . 4044) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4043) (undo-tree-id36931 . -1) (undo-tree-id36932 . -1) (undo-tree-id36933 . -1) (undo-tree-id36934 . -1) (undo-tree-id36935 . -1) (undo-tree-id36936 . -1) (undo-tree-id36937 . -1) (undo-tree-id36938 . -1) (undo-tree-id36939 . -1) (undo-tree-id36940 . -1) (undo-tree-id36941 . -1) (undo-tree-id36942 . -1) (undo-tree-id36943 . -1) (undo-tree-id36944 . -1) (undo-tree-id36945 . -1) (undo-tree-id36946 . -1) (undo-tree-id36947 . -1) (3969 . 3970) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3969) (undo-tree-id36948 . -1) (3871 . 3872) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3871) (undo-tree-id36949 . -1) (3769 . 3770) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3769) (undo-tree-id36950 . -1) (3671 . 3672) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3671) (undo-tree-id36951 . -1) (3572 . 3573) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3572) (undo-tree-id36952 . -1) (undo-tree-id36953 . -1) (undo-tree-id36954 . -1) (undo-tree-id36955 . -1) (undo-tree-id36956 . -1) (undo-tree-id36957 . -1) (undo-tree-id36958 . -1) (undo-tree-id36959 . -1) (undo-tree-id36960 . -1) (undo-tree-id36961 . -1) (undo-tree-id36962 . -1) (undo-tree-id36963 . -1) (undo-tree-id36964 . -1) (undo-tree-id36965 . -1) (undo-tree-id36966 . -1) (undo-tree-id36967 . -1) (undo-tree-id36968 . -1) (undo-tree-id36969 . -1) (undo-tree-id36970 . -1) (undo-tree-id36971 . -1) (undo-tree-id36972 . -1) (undo-tree-id36973 . -1) (undo-tree-id36974 . -1) (undo-tree-id36975 . -1) (undo-tree-id36976 . -1) (undo-tree-id36977 . -1) (undo-tree-id36978 . -1) (undo-tree-id36979 . -1) (undo-tree-id36980 . -1) (undo-tree-id36981 . -1) (undo-tree-id36982 . -1) (undo-tree-id36983 . -1) (undo-tree-id36984 . -1) (undo-tree-id36985 . -1) (undo-tree-id36986 . -1) (undo-tree-id36987 . -1) (undo-tree-id36988 . -1) (undo-tree-id36989 . -1) (undo-tree-id36990 . -1) (undo-tree-id36991 . -1) (undo-tree-id36992 . -1) (undo-tree-id36993 . -1) (undo-tree-id36994 . -1) (undo-tree-id36995 . -1) (undo-tree-id36996 . -1) (undo-tree-id36997 . -1) (undo-tree-id36998 . -1) (undo-tree-id36999 . -1) (undo-tree-id37000 . -1) (undo-tree-id37001 . -1) (undo-tree-id37002 . -1) (undo-tree-id37003 . -1) (undo-tree-id37004 . -1) (undo-tree-id37005 . -1) (undo-tree-id37006 . -1) (undo-tree-id37007 . -1) (undo-tree-id37008 . -1) (undo-tree-id37009 . -1) (undo-tree-id37010 . -1) (undo-tree-id37011 . -1) (undo-tree-id37012 . -1) (undo-tree-id37013 . -1) (undo-tree-id37014 . -1) (undo-tree-id37015 . -1) (undo-tree-id37016 . -1) (undo-tree-id37017 . -1) (undo-tree-id37018 . -1) (undo-tree-id37019 . -1) (undo-tree-id37020 . -1) (undo-tree-id37021 . -1) (undo-tree-id37022 . -1) (undo-tree-id37023 . -1) (undo-tree-id37024 . -1) (undo-tree-id37025 . -1) (undo-tree-id37026 . -1) (undo-tree-id37027 . -1) (undo-tree-id37028 . -1) (undo-tree-id37029 . -1) (undo-tree-id37030 . -1) (undo-tree-id37031 . -1) (undo-tree-id37032 . -1) (undo-tree-id37033 . -1) (undo-tree-id37034 . -1) (undo-tree-id37035 . -1) (undo-tree-id37036 . -1) (undo-tree-id37037 . -1) (undo-tree-id37038 . -1) (undo-tree-id37039 . -1) (undo-tree-id37040 . -1) (undo-tree-id37041 . -1) (undo-tree-id37042 . -1) (undo-tree-id37043 . -1) (undo-tree-id37044 . -1) (undo-tree-id37045 . -1) (undo-tree-id37046 . -1) (undo-tree-id37047 . -1) (undo-tree-id37048 . -1) (undo-tree-id37049 . -1) (undo-tree-id37050 . -1) (undo-tree-id37051 . -1) (undo-tree-id37052 . -1) (undo-tree-id37053 . -1) (undo-tree-id37054 . -1) (undo-tree-id37055 . -1) (undo-tree-id37056 . -1) (undo-tree-id37057 . -1) (undo-tree-id37058 . -1) (undo-tree-id37059 . -1) (undo-tree-id37060 . -1) (undo-tree-id37061 . -1) (undo-tree-id37062 . -1) (undo-tree-id37063 . -1) (undo-tree-id37064 . -1) (undo-tree-id37065 . -1) (undo-tree-id37066 . -1) (undo-tree-id37067 . -1) (undo-tree-id37068 . -1) (undo-tree-id37069 . -1) (undo-tree-id37070 . -1) (undo-tree-id37071 . -1) (undo-tree-id37072 . -1) (undo-tree-id37073 . -1) (undo-tree-id37074 . -1) (undo-tree-id37075 . -1) (undo-tree-id37076 . -1) (undo-tree-id37077 . -1) (undo-tree-id37078 . -1) (undo-tree-id37079 . -1) (undo-tree-id37080 . -1) (undo-tree-id37081 . -1) (undo-tree-id37082 . -1) (undo-tree-id37083 . -1) (undo-tree-id37084 . -1) (undo-tree-id37085 . -1) (undo-tree-id37086 . -1) (undo-tree-id37087 . -1) (undo-tree-id37088 . -1) (undo-tree-id37089 . -1) (undo-tree-id37090 . -1) (undo-tree-id37091 . -1) (undo-tree-id37092 . -1) (undo-tree-id37093 . -1) (undo-tree-id37094 . -1) (undo-tree-id37095 . -1) (undo-tree-id37096 . -1) (undo-tree-id37097 . -1) (undo-tree-id37098 . -1) (undo-tree-id37099 . -1) (undo-tree-id37100 . -1) (3466 . 3467) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3466) (undo-tree-id37101 . -1) (3359 . 3360) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3359) (undo-tree-id37102 . -1) 3259) nil (25774 60599 819507 851000) 0 nil])
([nil nil ((2647 . 2648) 2613) nil (25774 60599 819270 787000) 0 nil])
([nil nil ((2649 . 2651)) nil (25774 60599 819268 743000) 0 nil])
([nil nil ((4584 . 4585)) nil (25774 60599 819262 854000) 0 nil])
([nil nil ((#("Finally, let us visit the last missing piece in our puzzle—attention weights" 0 76 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2651) (undo-tree-id37140 . 76) (undo-tree-id37141 . -75) (undo-tree-id37142 . -76) (t 25774 60599 853553 750000)) nil (25774 60631 764119 569000) 0 nil])
([nil nil ((#(". " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2651) (undo-tree-id37137 . 2) (undo-tree-id37138 . -1) (undo-tree-id37139 . -2)) nil (25774 60631 764437 382000) 0 nil])
([nil nil ((#("Because " 0 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2651) (undo-tree-id37143 . 8) (undo-tree-id37144 . -7) (undo-tree-id37145 . -8)) nil (25774 60642 355749 793000) 0 nil] [nil nil ((#("Because these weights pairwise connect the inputs (annotations) and the outputs (contexts), each attention weight 𝛼𝛼𝑖𝑖𝑖𝑖 has two subscripts: j re" 0 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 21 22 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 22 124 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 124 125 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 125 145 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2651) (undo-tree-id37134 . 145) (undo-tree-id37135 . -144) (undo-tree-id37136 . -145)) ((2651 . 2796)) (25774 60631 764108 832000) 0 nil])
([nil nil ((2651 . 2652) (#("t" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2651)) nil (25774 60642 355734 344000) 0 nil])
nil
([nil nil ((2649 . 3175) (#("- each attention weight 𝛼𝛼𝑖𝑖𝑖𝑖 has two subscripts: j refers to the index position of the input and i corresponds to the output index posi- tion. The attention weight 𝛼𝛼𝑖𝑖𝑖𝑖 is a normalized version of the alignment score 𝑒𝑒𝑖𝑖𝑖𝑖, where the alignment score evaluates how well the input around position j matches with the output at position i. To be more specific, the attention weight is computed by normalizing the alignment scores as follows:
- These weights pairwise connect the inputs (annotations) and the outputs (contexts)" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 34 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 34 35 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 35 55 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 55 138 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 138 139 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 139 247 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 247 248 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 248 299 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 299 330 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 330 331 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 331 350 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 350 351 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 351 406 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 406 408 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 408 416 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 416 417 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 417 441 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 441 442 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 442 443 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil composition (0 1 [8226])) 443 444 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 444 457 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 457 458 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 458 526 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2649) (undo-tree-id37156 . 82) (undo-tree-id37157 . -526) (undo-tree-id37158 . -526) (undo-tree-id37159 . -444) (undo-tree-id37160 . -444) (undo-tree-id37161 . 81) (undo-tree-id37162 . -444) (undo-tree-id37163 . -444) (undo-tree-id37164 . -444) (undo-tree-id37165 . -526) (undo-tree-id37166 . -444) (undo-tree-id37167 . -444) (undo-tree-id37168 . -444) (undo-tree-id37169 . -444) (undo-tree-id37170 . -444) (undo-tree-id37171 . -444) (undo-tree-id37172 . -444) (undo-tree-id37173 . -444) (undo-tree-id37174 . -444) (undo-tree-id37175 . -444) (undo-tree-id37176 . -444) (undo-tree-id37177 . -444) (undo-tree-id37178 . -444) (undo-tree-id37179 . -444) (undo-tree-id37180 . -444) (undo-tree-id37181 . -444) (undo-tree-id37182 . -444) (undo-tree-id37183 . -444) (undo-tree-id37184 . -444) (undo-tree-id37185 . -444) (undo-tree-id37186 . -444) (undo-tree-id37187 . -444) (undo-tree-id37188 . -444) (undo-tree-id37189 . -444) (undo-tree-id37190 . -444) (undo-tree-id37191 . -444) (undo-tree-id37192 . -444) (undo-tree-id37193 . -444) (undo-tree-id37194 . -444) (undo-tree-id37195 . -444) (undo-tree-id37196 . -444) (undo-tree-id37197 . -444) (undo-tree-id37198 . -444) (undo-tree-id37199 . -444) (undo-tree-id37200 . -444) (undo-tree-id37201 . -444) (undo-tree-id37202 . -444) (undo-tree-id37203 . -444) (undo-tree-id37204 . -444) (undo-tree-id37205 . -444) (undo-tree-id37206 . -444) (undo-tree-id37207 . -444) (undo-tree-id37208 . -444) (undo-tree-id37209 . -444) (undo-tree-id37210 . -444) (undo-tree-id37211 . -444) (undo-tree-id37212 . -444) (undo-tree-id37213 . -444) (undo-tree-id37214 . -444) (undo-tree-id37215 . -444) (undo-tree-id37216 . -444) (undo-tree-id37217 . -444) (undo-tree-id37218 . -444) (undo-tree-id37219 . -444) (undo-tree-id37220 . -444) (undo-tree-id37221 . -444) (undo-tree-id37222 . -444) (undo-tree-id37223 . -444) (undo-tree-id37224 . -444) (undo-tree-id37225 . -444) (undo-tree-id37226 . -444) (undo-tree-id37227 . -444) (undo-tree-id37228 . -444) (undo-tree-id37229 . -444) (undo-tree-id37230 . -526) (undo-tree-id37231 . -526) (undo-tree-id37232 . -526) (undo-tree-id37233 . -526) (undo-tree-id37234 . -526) (undo-tree-id37235 . -526) (undo-tree-id37236 . -526) (undo-tree-id37237 . -526) (undo-tree-id37238 . -526) (undo-tree-id37239 . -526) (undo-tree-id37240 . -526) (undo-tree-id37241 . -526) (undo-tree-id37242 . -526) (undo-tree-id37243 . -526) (undo-tree-id37244 . -526) (undo-tree-id37245 . -526) (undo-tree-id37246 . -526) (undo-tree-id37247 . -526) (undo-tree-id37248 . -526) (undo-tree-id37249 . -526) (undo-tree-id37250 . -526) (undo-tree-id37251 . -526) (undo-tree-id37252 . -526) (undo-tree-id37253 . -526) (undo-tree-id37254 . -526) (undo-tree-id37255 . -526) (undo-tree-id37256 . -526) (undo-tree-id37257 . -526) (undo-tree-id37258 . -526) (undo-tree-id37259 . -526) (undo-tree-id37260 . -526) (undo-tree-id37261 . -526) (undo-tree-id37262 . -526) (undo-tree-id37263 . -526) (undo-tree-id37264 . -526) (undo-tree-id37265 . -526) (undo-tree-id37266 . -526) (undo-tree-id37267 . -526) (undo-tree-id37268 . -526) (undo-tree-id37269 . -526) (undo-tree-id37270 . -526) (undo-tree-id37271 . -526) (undo-tree-id37272 . -526) (undo-tree-id37273 . -526) (undo-tree-id37274 . -526) (undo-tree-id37275 . -526) (undo-tree-id37276 . -526) (undo-tree-id37277 . -526) (undo-tree-id37278 . -526) (undo-tree-id37279 . -526) (undo-tree-id37280 . -526) (undo-tree-id37281 . -526) (undo-tree-id37282 . -526) (undo-tree-id37283 . 1) (undo-tree-id37284 . -526) (undo-tree-id37285 . 10) (undo-tree-id37286 . -517) (undo-tree-id37287 . -526) (undo-tree-id37288 . -526) (undo-tree-id37289 . -526) (undo-tree-id37290 . -526) (undo-tree-id37291 . -526) (undo-tree-id37292 . -526) (undo-tree-id37293 . -526) (undo-tree-id37294 . -526) (undo-tree-id37295 . -526) (undo-tree-id37296 . -526) (undo-tree-id37297 . -526) (undo-tree-id37298 . -526) (undo-tree-id37299 . -526) (undo-tree-id37300 . -526) (undo-tree-id37301 . -526) (undo-tree-id37302 . -526) (undo-tree-id37303 . -526) (undo-tree-id37304 . -442) (2649 . 3091) (#(" each attention weight 𝛼𝛼𝑖𝑖𝑖𝑖 has two subscripts: j refers to the index position of the input and i corresponds to the output index posi- tion. The attention weight 𝛼𝛼𝑖𝑖𝑖𝑖 is a normalized version of the alignment score 𝑒𝑒𝑖𝑖𝑖𝑖, where the alignment score evaluates how well the input around position j matches with the output at position i. To be more specific, the attention weight is computed by normalizing the alignment scores as follows:" 0 33 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 33 34 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 34 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 54 137 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 137 138 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 138 246 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 246 247 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 247 298 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 298 329 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 329 330 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 330 349 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 349 350 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 350 405 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 405 407 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 407 415 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 415 416 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 416 440 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2733) (undo-tree-id37305 . 308) (undo-tree-id37306 . -136) (undo-tree-id37307 . 386) (undo-tree-id37308 . -58) (#("," 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2733) (undo-tree-id37309 . -1) (undo-tree-id37310 . -1) (undo-tree-id37311 . -1) (t 25774 60642 389852 119000)) nil (25774 60650 554949 646000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -2734) (undo-tree-id37146 . -2) (undo-tree-id37147 . -2) (undo-tree-id37148 . -2) (undo-tree-id37149 . -2) (undo-tree-id37150 . -2) (undo-tree-id37151 . -2) (undo-tree-id37152 . -2) (undo-tree-id37153 . -2) (undo-tree-id37154 . -2) (undo-tree-id37155 . -2) 2736 (2733 . 2736) 2711) nil (25774 60650 554490 526000) 0 nil])
([nil nil ((2737 . 2738) (#("e" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2737) (t 25774 60650 589910 670000)) nil (25774 60663 885075 31000) 0 nil])
([nil nil ((#("𝛼𝛼𝑖𝑖𝑖𝑖" 0 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2759) (undo-tree-id37314 . -5) (undo-tree-id37315 . -5) (undo-tree-id37316 . -5) (undo-tree-id37317 . -5) (undo-tree-id37318 . -5) (undo-tree-id37319 . -5) (undo-tree-id37320 . -5) (undo-tree-id37321 . -5) (undo-tree-id37322 . -5) (undo-tree-id37323 . -5) (undo-tree-id37324 . -5) (undo-tree-id37325 . -5) (undo-tree-id37326 . -5) (undo-tree-id37327 . -5) (undo-tree-id37328 . -5) (undo-tree-id37329 . -5) (undo-tree-id37330 . -5) (undo-tree-id37331 . -5) (undo-tree-id37332 . -5) (undo-tree-id37333 . -5) (undo-tree-id37334 . -5) (undo-tree-id37335 . -5) (undo-tree-id37336 . -5) (undo-tree-id37337 . -5) (undo-tree-id37338 . -5) (undo-tree-id37339 . -5) (undo-tree-id37340 . -5) (undo-tree-id37341 . -5) (undo-tree-id37342 . -5) (undo-tree-id37343 . -5) (undo-tree-id37344 . -5) (undo-tree-id37345 . -5) (undo-tree-id37346 . -5) (undo-tree-id37347 . -5) (undo-tree-id37348 . -5) (undo-tree-id37349 . -5) (undo-tree-id37350 . -5) (undo-tree-id37351 . -5) (undo-tree-id37352 . -5) (undo-tree-id37353 . -5) (undo-tree-id37354 . -5) (undo-tree-id37355 . -5) (undo-tree-id37356 . -5) (undo-tree-id37357 . -5) (undo-tree-id37358 . -5) (undo-tree-id37359 . -5) (undo-tree-id37360 . -5) (undo-tree-id37361 . -5) (undo-tree-id37362 . -5) (undo-tree-id37363 . -5) (undo-tree-id37364 . -5) (undo-tree-id37365 . -5) (undo-tree-id37366 . -5) (undo-tree-id37367 . -5) (undo-tree-id37368 . -5) (undo-tree-id37369 . -5) (undo-tree-id37370 . -6) 2764) nil (25774 60663 885071 765000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2759) (undo-tree-id37312 . -1) (undo-tree-id37313 . -1)) nil (25774 60663 885774 812000) 0 nil])
([nil nil ((2735 . 3173) (#("- : j refers to the index position of the input and i corresponds to the output index posi- tion. The attention weight 𝛼𝛼𝑖𝑖𝑖𝑖 is a normalized version of the alignment score 𝑒𝑒𝑖𝑖𝑖𝑖, where the alignment score evaluates how well the input around position j matches with the output at position i. To be more specific, the attention weight is computed by normalizing the alignment scores as follows:

- Each attention weight has two subscripts" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 8 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 8 91 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 91 92 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 92 200 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 200 201 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 201 252 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 252 283 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 283 284 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 284 303 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 303 304 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 304 359 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 359 361 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 361 368 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 368 369 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 369 370 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 370 394 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 394 395 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 395 396 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 396 397 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 397 398 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 398 423 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 423 424 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 424 438 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2735) (undo-tree-id37675 . -420) (undo-tree-id37676 . -420) (undo-tree-id37677 . -398) (undo-tree-id37678 . -398) (undo-tree-id37679 . 39) (undo-tree-id37680 . -398) (undo-tree-id37681 . -398) (undo-tree-id37682 . -438) (undo-tree-id37683 . -420) (undo-tree-id37684 . -420) (undo-tree-id37685 . -420) (undo-tree-id37686 . -420) (undo-tree-id37687 . -420) (undo-tree-id37688 . -420) (undo-tree-id37689 . -420) (undo-tree-id37690 . -420) (undo-tree-id37691 . -420) (undo-tree-id37692 . -420) (undo-tree-id37693 . -420) (undo-tree-id37694 . -420) (undo-tree-id37695 . -420) (undo-tree-id37696 . -420) (undo-tree-id37697 . -420) (undo-tree-id37698 . -420) (undo-tree-id37699 . -420) (undo-tree-id37700 . -420) (undo-tree-id37701 . -420) (undo-tree-id37702 . -420) (undo-tree-id37703 . -420) (undo-tree-id37704 . -420) (undo-tree-id37705 . -420) (undo-tree-id37706 . -420) (undo-tree-id37707 . -420) (undo-tree-id37708 . -420) (undo-tree-id37709 . -420) (undo-tree-id37710 . -420) (undo-tree-id37711 . -420) (undo-tree-id37712 . -420) (undo-tree-id37713 . -420) (undo-tree-id37714 . -420) (undo-tree-id37715 . -420) (undo-tree-id37716 . -420) (undo-tree-id37717 . -420) (undo-tree-id37718 . -420) (undo-tree-id37719 . -420) (undo-tree-id37720 . -420) (undo-tree-id37721 . -420) (undo-tree-id37722 . -420) (undo-tree-id37723 . -420) (undo-tree-id37724 . -420) (undo-tree-id37725 . -420) (undo-tree-id37726 . -420) (undo-tree-id37727 . -420) (undo-tree-id37728 . -420) (undo-tree-id37729 . -420) (undo-tree-id37730 . -420) (undo-tree-id37731 . -420) (undo-tree-id37732 . -420) (undo-tree-id37733 . -420) (undo-tree-id37734 . -420) (undo-tree-id37735 . -420) (undo-tree-id37736 . -438) (undo-tree-id37737 . -438) (undo-tree-id37738 . -438) (undo-tree-id37739 . -438) (undo-tree-id37740 . -438) (undo-tree-id37741 . -438) (undo-tree-id37742 . -438) (undo-tree-id37743 . -438) (undo-tree-id37744 . -438) (undo-tree-id37745 . -438) (undo-tree-id37746 . -438) (undo-tree-id37747 . -438) (undo-tree-id37748 . -438) (undo-tree-id37749 . -438) (undo-tree-id37750 . -438) (undo-tree-id37751 . -438) (undo-tree-id37752 . -438) (undo-tree-id37753 . -438) (undo-tree-id37754 . -438) (undo-tree-id37755 . -438) (undo-tree-id37756 . -438) (undo-tree-id37757 . -438) (undo-tree-id37758 . -438) (undo-tree-id37759 . -438) (undo-tree-id37760 . -438) (undo-tree-id37761 . -438) (undo-tree-id37762 . -438) (undo-tree-id37763 . -438) (undo-tree-id37764 . -438) (undo-tree-id37765 . -438) (undo-tree-id37766 . -438) (undo-tree-id37767 . -438) (undo-tree-id37768 . -438) (undo-tree-id37769 . -438) (undo-tree-id37770 . -438) (undo-tree-id37771 . -438) (undo-tree-id37772 . -438) (undo-tree-id37773 . -438) (undo-tree-id37774 . -438) (undo-tree-id37775 . -438) (undo-tree-id37776 . -438) (undo-tree-id37777 . -438) (undo-tree-id37778 . -438) (undo-tree-id37779 . -438) (undo-tree-id37780 . -438) (undo-tree-id37781 . -438) (undo-tree-id37782 . -438) (undo-tree-id37783 . -396) (2735 . 3131) (#(": j refers to the index position of the input and i corresponds to the output index posi- tion. The attention weight 𝛼𝛼𝑖𝑖𝑖𝑖 is a normalized version of the alignment score 𝑒𝑒𝑖𝑖𝑖𝑖, where the alignment score evaluates how well the input around position j matches with the output at position i. To be more specific, the attention weight is computed by normalizing the alignment scores as follows:" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 6 89 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 89 90 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 90 198 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 198 199 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 199 250 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 250 281 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 281 282 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 282 301 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 301 302 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 302 357 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 357 359 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 359 366 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 366 367 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 367 368 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 368 392 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2777) (undo-tree-id37784 . 392)) nil (25774 60681 939769 127000) 0 nil] [nil nil ((2778 . 2779) (2778 . 2781) (2777 . 2778)) ((#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2777) (undo-tree-id37371 . -1) (undo-tree-id37372 . -1) (undo-tree-id37373 . -1) (#("** " 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (2 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 2778) (undo-tree-id37374 . -2) (undo-tree-id37375 . -2) (undo-tree-id37376 . -2) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 2778)) (25774 60663 885012 704000) 0 nil])
([nil nil ((#(": " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2781) (undo-tree-id37672 . 2) (undo-tree-id37673 . -1) (undo-tree-id37674 . -2)) nil (25774 60681 939531 970000) 0 nil])
nil
([nil nil ((2779 . 3174) (#("- and i corresponds to the output index posi- tion. The attention weight 𝛼𝛼𝑖𝑖𝑖𝑖 is a normalized version of the alignment score 𝑒𝑒𝑖𝑖𝑖𝑖, where the alignment score evaluates how well the input around position j matches with the output at position i. To be more specific, the attention weight is computed by normalizing the alignment scores as follows:

- j refers to the index position of the input" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 45 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 45 46 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 46 154 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 154 155 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 155 206 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 206 237 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 237 238 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 238 257 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 257 258 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 258 313 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 313 315 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 315 322 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 322 323 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 323 324 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 324 348 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 348 349 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 349 350 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 350 351 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 351 352 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 352 356 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 356 395 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2779) (undo-tree-id37384 . 43) (undo-tree-id37385 . -352) (undo-tree-id37386 . -352) (undo-tree-id37387 . -395) (undo-tree-id37388 . -352) (undo-tree-id37389 . -352) (undo-tree-id37390 . -352) (undo-tree-id37391 . -352) (undo-tree-id37392 . -352) (undo-tree-id37393 . -352) (undo-tree-id37394 . -352) (undo-tree-id37395 . -352) (undo-tree-id37396 . -352) (undo-tree-id37397 . -352) (undo-tree-id37398 . -352) (undo-tree-id37399 . -352) (undo-tree-id37400 . -352) (undo-tree-id37401 . -352) (undo-tree-id37402 . -352) (undo-tree-id37403 . -352) (undo-tree-id37404 . -352) (undo-tree-id37405 . -351) (undo-tree-id37406 . -351) (undo-tree-id37407 . -351) (undo-tree-id37408 . -351) (undo-tree-id37409 . -351) (undo-tree-id37410 . -351) (undo-tree-id37411 . -351) (undo-tree-id37412 . -351) (undo-tree-id37413 . -351) (undo-tree-id37414 . -351) (undo-tree-id37415 . -351) (undo-tree-id37416 . -351) (undo-tree-id37417 . -351) (undo-tree-id37418 . -351) (undo-tree-id37419 . -351) (undo-tree-id37420 . -351) (undo-tree-id37421 . -351) (undo-tree-id37422 . -351) (undo-tree-id37423 . -351) (undo-tree-id37424 . -351) (undo-tree-id37425 . -351) (undo-tree-id37426 . -351) (undo-tree-id37427 . -351) (undo-tree-id37428 . -351) (undo-tree-id37429 . -351) (undo-tree-id37430 . -351) (undo-tree-id37431 . -351) (undo-tree-id37432 . -351) (undo-tree-id37433 . -351) (undo-tree-id37434 . -351) (undo-tree-id37435 . -352) (undo-tree-id37436 . -352) (undo-tree-id37437 . -352) (undo-tree-id37438 . -352) (undo-tree-id37439 . -352) (undo-tree-id37440 . -352) (undo-tree-id37441 . -352) (undo-tree-id37442 . -352) (undo-tree-id37443 . -352) (undo-tree-id37444 . -352) (undo-tree-id37445 . -352) (undo-tree-id37446 . -352) (undo-tree-id37447 . -352) (undo-tree-id37448 . -352) (undo-tree-id37449 . -352) (undo-tree-id37450 . -352) (undo-tree-id37451 . -352) (undo-tree-id37452 . -352) (undo-tree-id37453 . -352) (undo-tree-id37454 . -352) (undo-tree-id37455 . -352) (undo-tree-id37456 . -352) (undo-tree-id37457 . -352) (undo-tree-id37458 . -352) (undo-tree-id37459 . -352) (undo-tree-id37460 . -352) (undo-tree-id37461 . -352) (undo-tree-id37462 . -352) (undo-tree-id37463 . -352) (undo-tree-id37464 . -352) (undo-tree-id37465 . -352) (undo-tree-id37466 . -352) (undo-tree-id37467 . -352) (undo-tree-id37468 . -352) (undo-tree-id37469 . -352) (undo-tree-id37470 . -352) (undo-tree-id37471 . -352) (undo-tree-id37472 . -352) (undo-tree-id37473 . -352) (undo-tree-id37474 . -352) (undo-tree-id37475 . -352) (undo-tree-id37476 . -352) (undo-tree-id37477 . -352) (undo-tree-id37478 . -352) (undo-tree-id37479 . -352) (undo-tree-id37480 . -352) (undo-tree-id37481 . -352) (undo-tree-id37482 . -352) (undo-tree-id37483 . -352) (undo-tree-id37484 . -352) (undo-tree-id37485 . -352) (undo-tree-id37486 . -359) (undo-tree-id37487 . -359) (undo-tree-id37488 . -359) (undo-tree-id37489 . -359) (undo-tree-id37490 . -359) (undo-tree-id37491 . -359) (undo-tree-id37492 . -359) (undo-tree-id37493 . -359) (undo-tree-id37494 . -359) (undo-tree-id37495 . -359) (undo-tree-id37496 . -359) (undo-tree-id37497 . -359) (undo-tree-id37498 . -359) (undo-tree-id37499 . -359) (undo-tree-id37500 . -359) (undo-tree-id37501 . -359) (undo-tree-id37502 . -359) (undo-tree-id37503 . -359) (undo-tree-id37504 . -359) (undo-tree-id37505 . -359) (undo-tree-id37506 . -359) (undo-tree-id37507 . -362) (undo-tree-id37508 . -362) (undo-tree-id37509 . -362) (undo-tree-id37510 . -362) (undo-tree-id37511 . -362) (undo-tree-id37512 . -362) (undo-tree-id37513 . -362) (undo-tree-id37514 . -362) (undo-tree-id37515 . -362) (undo-tree-id37516 . -362) (undo-tree-id37517 . -362) (undo-tree-id37518 . -362) (undo-tree-id37519 . -362) (undo-tree-id37520 . -362) (undo-tree-id37521 . -362) (undo-tree-id37522 . -362) (undo-tree-id37523 . -362) (undo-tree-id37524 . -362) (undo-tree-id37525 . -362) (undo-tree-id37526 . -362) (undo-tree-id37527 . -362) (undo-tree-id37528 . -366) (undo-tree-id37529 . -366) (undo-tree-id37530 . -366) (undo-tree-id37531 . -366) (undo-tree-id37532 . -366) (undo-tree-id37533 . -366) (undo-tree-id37534 . -366) (undo-tree-id37535 . -366) (undo-tree-id37536 . -366) (undo-tree-id37537 . -366) (undo-tree-id37538 . -366) (undo-tree-id37539 . -366) (undo-tree-id37540 . -366) (undo-tree-id37541 . -366) (undo-tree-id37542 . -366) (undo-tree-id37543 . -366) (undo-tree-id37544 . -366) (undo-tree-id37545 . -366) (undo-tree-id37546 . -366) (undo-tree-id37547 . -366) (undo-tree-id37548 . -366) (undo-tree-id37549 . -366) (undo-tree-id37550 . -366) (undo-tree-id37551 . -366) (undo-tree-id37552 . -366) (undo-tree-id37553 . -366) (undo-tree-id37554 . -366) (undo-tree-id37555 . -366) (undo-tree-id37556 . -366) (undo-tree-id37557 . -366) (undo-tree-id37558 . -366) (undo-tree-id37559 . -366) (undo-tree-id37560 . -366) (undo-tree-id37561 . -366) (undo-tree-id37562 . -366) (undo-tree-id37563 . -366) (undo-tree-id37564 . -366) (undo-tree-id37565 . -366) (undo-tree-id37566 . -366) (undo-tree-id37567 . -366) (undo-tree-id37568 . -366) (undo-tree-id37569 . -366) (undo-tree-id37570 . -366) (undo-tree-id37571 . -366) (undo-tree-id37572 . -366) (undo-tree-id37573 . -366) (undo-tree-id37574 . -366) (undo-tree-id37575 . -366) (undo-tree-id37576 . -366) (undo-tree-id37577 . -366) (undo-tree-id37578 . -366) (undo-tree-id37579 . -366) (undo-tree-id37580 . -366) (undo-tree-id37581 . -366) (undo-tree-id37582 . -366) (undo-tree-id37583 . -366) (undo-tree-id37584 . -378) (undo-tree-id37585 . -378) (undo-tree-id37586 . -378) (undo-tree-id37587 . -378) (undo-tree-id37588 . -378) (undo-tree-id37589 . -378) (undo-tree-id37590 . -378) (undo-tree-id37591 . -378) (undo-tree-id37592 . -378) (undo-tree-id37593 . -378) (undo-tree-id37594 . -378) (undo-tree-id37595 . -378) (undo-tree-id37596 . -378) (undo-tree-id37597 . -378) (undo-tree-id37598 . -378) (undo-tree-id37599 . -378) (undo-tree-id37600 . -378) (undo-tree-id37601 . -378) (undo-tree-id37602 . -378) (undo-tree-id37603 . -378) (undo-tree-id37604 . -378) (undo-tree-id37605 . -386) (undo-tree-id37606 . -386) (undo-tree-id37607 . -386) (undo-tree-id37608 . -386) (undo-tree-id37609 . -386) (undo-tree-id37610 . -386) (undo-tree-id37611 . -386) (undo-tree-id37612 . -386) (undo-tree-id37613 . -386) (undo-tree-id37614 . -386) (undo-tree-id37615 . -386) (undo-tree-id37616 . -386) (undo-tree-id37617 . -386) (undo-tree-id37618 . -386) (undo-tree-id37619 . -386) (undo-tree-id37620 . -386) (undo-tree-id37621 . -386) (undo-tree-id37622 . -386) (undo-tree-id37623 . -386) (undo-tree-id37624 . -386) (undo-tree-id37625 . -386) (undo-tree-id37626 . -394) (undo-tree-id37627 . -394) (undo-tree-id37628 . -394) (undo-tree-id37629 . -394) (undo-tree-id37630 . -394) (undo-tree-id37631 . -394) (undo-tree-id37632 . -394) (undo-tree-id37633 . -394) (undo-tree-id37634 . -394) (undo-tree-id37635 . -394) (undo-tree-id37636 . -394) (undo-tree-id37637 . -394) (undo-tree-id37638 . -394) (undo-tree-id37639 . -394) (undo-tree-id37640 . -394) (undo-tree-id37641 . -394) (undo-tree-id37642 . -394) (undo-tree-id37643 . -394) (undo-tree-id37644 . -394) (undo-tree-id37645 . -394) (undo-tree-id37646 . -394) (undo-tree-id37647 . -395) (undo-tree-id37648 . -395) (undo-tree-id37649 . -395) (undo-tree-id37650 . -395) (undo-tree-id37651 . -395) (undo-tree-id37652 . -395) (undo-tree-id37653 . -395) (undo-tree-id37654 . -395) (undo-tree-id37655 . -395) (undo-tree-id37656 . -395) (undo-tree-id37657 . -395) (undo-tree-id37658 . -395) (undo-tree-id37659 . -395) (undo-tree-id37660 . -395) (undo-tree-id37661 . -395) (undo-tree-id37662 . -395) (undo-tree-id37663 . -395) (undo-tree-id37664 . -395) (undo-tree-id37665 . -395) (undo-tree-id37666 . -395) (undo-tree-id37667 . -395) (undo-tree-id37668 . -395) (undo-tree-id37669 . -395) (undo-tree-id37670 . -395) (undo-tree-id37671 . -350) (2779 . 3129) (#(" and i corresponds to the output index posi- tion. The attention weight 𝛼𝛼𝑖𝑖𝑖𝑖 is a normalized version of the alignment score 𝑒𝑒𝑖𝑖𝑖𝑖, where the alignment score evaluates how well the input around position j matches with the output at position i. To be more specific, the attention weight is computed by normalizing the alignment scores as follows:" 0 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 44 45 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 45 153 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 153 154 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 154 205 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 205 236 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 236 237 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 237 256 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 256 257 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 257 312 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 312 314 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 314 321 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 321 322 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 322 323 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 323 347 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2824)) nil (25774 60681 939516 631000) 0 nil])
([nil nil ((#("and " 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2828) (undo-tree-id37381 . 4) (undo-tree-id37382 . -3) (undo-tree-id37383 . -4)) nil (25774 60681 938574 383000) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2866) (undo-tree-id37379 . -1) (undo-tree-id37380 . -1)) nil (25774 60681 938570 734000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 2866) (undo-tree-id37377 . -1) (undo-tree-id37378 . -1)) nil (25774 60681 938564 791000) 0 nil])
([nil nil ((2826 . 3170) (#("- The attention weight 𝛼𝛼𝑖𝑖𝑖𝑖 is a normalized version of the alignment score 𝑒𝑒𝑖𝑖𝑖𝑖, where the alignment score evaluates how well the input around position j matches with the output at position i. To be more specific, the attention weight is computed by normalizing the alignment scores as follows:

- i corresponds to the output index position" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 104 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 104 105 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 105 156 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 156 187 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 187 188 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 188 207 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 207 208 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 208 263 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 263 265 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 265 272 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 272 273 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 273 274 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 274 298 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 298 299 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 299 300 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 300 301 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 301 302 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 302 340 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 340 344 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2826) (undo-tree-id37785 . 42) (undo-tree-id37786 . -340) (undo-tree-id37787 . -344) (undo-tree-id37788 . -340) (undo-tree-id37789 . -340) (undo-tree-id37790 . -340) (undo-tree-id37791 . -340) (undo-tree-id37792 . -340) (undo-tree-id37793 . -340) (undo-tree-id37794 . -340) (undo-tree-id37795 . -340) (undo-tree-id37796 . -340) (undo-tree-id37797 . -340) (undo-tree-id37798 . -340) (undo-tree-id37799 . -340) (undo-tree-id37800 . -340) (undo-tree-id37801 . -340) (undo-tree-id37802 . -340) (undo-tree-id37803 . -340) (undo-tree-id37804 . -340) (undo-tree-id37805 . -340) (undo-tree-id37806 . -340) (undo-tree-id37807 . -340) (undo-tree-id37808 . -340) (undo-tree-id37809 . -340) (undo-tree-id37810 . -340) (undo-tree-id37811 . -340) (undo-tree-id37812 . -340) (undo-tree-id37813 . -340) (undo-tree-id37814 . -340) (undo-tree-id37815 . -340) (undo-tree-id37816 . -340) (undo-tree-id37817 . -340) (undo-tree-id37818 . -340) (undo-tree-id37819 . -340) (undo-tree-id37820 . -340) (undo-tree-id37821 . -340) (undo-tree-id37822 . -340) (undo-tree-id37823 . -340) (undo-tree-id37824 . -340) (undo-tree-id37825 . -340) (undo-tree-id37826 . -340) (undo-tree-id37827 . -340) (undo-tree-id37828 . -340) (undo-tree-id37829 . -340) (undo-tree-id37830 . -340) (undo-tree-id37831 . -340) (undo-tree-id37832 . -344) (undo-tree-id37833 . -344) (undo-tree-id37834 . -344) (undo-tree-id37835 . -344) (undo-tree-id37836 . -344) (undo-tree-id37837 . -344) (undo-tree-id37838 . -344) (undo-tree-id37839 . -344) (undo-tree-id37840 . -344) (undo-tree-id37841 . -344) (undo-tree-id37842 . -344) (undo-tree-id37843 . -344) (undo-tree-id37844 . -344) (undo-tree-id37845 . -344) (undo-tree-id37846 . -344) (undo-tree-id37847 . -344) (undo-tree-id37848 . -344) (undo-tree-id37849 . -344) (undo-tree-id37850 . -344) (undo-tree-id37851 . -344) (undo-tree-id37852 . -344) (undo-tree-id37853 . -344) (undo-tree-id37854 . -344) (undo-tree-id37855 . -344) (undo-tree-id37856 . -344) (undo-tree-id37857 . -344) (undo-tree-id37858 . -344) (undo-tree-id37859 . -344) (undo-tree-id37860 . -344) (undo-tree-id37861 . -344) (undo-tree-id37862 . -344) (undo-tree-id37863 . -344) (undo-tree-id37864 . -344) (undo-tree-id37865 . -344) (undo-tree-id37866 . -344) (undo-tree-id37867 . -344) (undo-tree-id37868 . -344) (undo-tree-id37869 . -344) (undo-tree-id37870 . -344) (undo-tree-id37871 . -344) (undo-tree-id37872 . -344) (undo-tree-id37873 . -344) (undo-tree-id37874 . -344) (undo-tree-id37875 . -344) (undo-tree-id37876 . -344) (undo-tree-id37877 . -344) (undo-tree-id37878 . -344) (undo-tree-id37879 . -344) (undo-tree-id37880 . -344) (undo-tree-id37881 . -344) (undo-tree-id37882 . -344) (undo-tree-id37883 . -344) (undo-tree-id37884 . -344) (undo-tree-id37885 . -344) (undo-tree-id37886 . -344) (undo-tree-id37887 . -344) (undo-tree-id37888 . -344) (undo-tree-id37889 . -344) (undo-tree-id37890 . -344) (undo-tree-id37891 . -344) (undo-tree-id37892 . -344) (undo-tree-id37893 . -344) (undo-tree-id37894 . -344) (undo-tree-id37895 . -344) (undo-tree-id37896 . -344) (undo-tree-id37897 . -344) (undo-tree-id37898 . -344) (undo-tree-id37899 . -300) (2826 . 3126) (#(" The attention weight 𝛼𝛼𝑖𝑖𝑖𝑖 is a normalized version of the alignment score 𝑒𝑒𝑖𝑖𝑖𝑖, where the alignment score evaluates how well the input around position j matches with the output at position i. To be more specific, the attention weight is computed by normalizing the alignment scores as follows:" 0 103 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 103 104 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 104 155 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 155 186 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 186 187 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 187 206 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 206 207 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 207 262 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 262 264 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 264 271 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 271 272 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 272 273 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 273 297 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2870) (#("." 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -2870) (undo-tree-id37900 . -1) (undo-tree-id37901 . -1) (undo-tree-id37902 . -1) (undo-tree-id37903 . -1) (undo-tree-id37904 . -1) (undo-tree-id37905 . -1) (undo-tree-id37906 . -1) (undo-tree-id37907 . -1) (undo-tree-id37908 . -1) (undo-tree-id37909 . -1) (undo-tree-id37910 . -1) (undo-tree-id37911 . -1) (undo-tree-id37912 . -1) (undo-tree-id37913 . -1) (undo-tree-id37914 . -1) (undo-tree-id37915 . -1) (undo-tree-id37916 . -1) (undo-tree-id37917 . -1) (undo-tree-id37918 . -1) (undo-tree-id37919 . -1) (undo-tree-id37920 . -1) (undo-tree-id37921 . -1) (undo-tree-id37922 . -1) (undo-tree-id37923 . -1) (undo-tree-id37924 . -1) 2871 (t 25774 60681 974137 666000)) nil (25774 60685 941162 186000) 0 nil])
([nil nil ((2782 . 2783) (t 25774 60685 974166 920000)) nil (25774 60748 290327 527000) 0 nil])
([nil nil ((#("refers " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2784) (undo-tree-id37942 . -6) (undo-tree-id37943 . -5) (undo-tree-id37944 . -7)) nil (25774 60748 290326 328000) 0 nil])
([nil nil ((#("to " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2784) (undo-tree-id37939 . -2) (undo-tree-id37940 . -1) (undo-tree-id37941 . -3)) nil (25774 60748 290321 410000) 0 nil])
([nil nil ((#("the " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2784) (undo-tree-id37936 . -3) (undo-tree-id37937 . -2) (undo-tree-id37938 . -4)) nil (25774 60748 290317 816000) 0 nil])
([nil nil ((#("of " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2799) (undo-tree-id37932 . -2) (undo-tree-id37933 . -1) (undo-tree-id37934 . -1) (undo-tree-id37935 . -3)) nil (25774 60748 290314 584000) 0 nil])
([nil nil ((#("the " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2799) (undo-tree-id37928 . -3) (undo-tree-id37929 . -2) (undo-tree-id37930 . -4) (undo-tree-id37931 . -4)) nil (25774 60748 290309 986000) 0 nil])
([nil nil ((#("input" 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2799) (undo-tree-id37925 . -4) (undo-tree-id37926 . -4) (undo-tree-id37927 . -5)) nil (25774 60748 290305 513000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2788 . 2789) (nil fontified nil 2784 . 2789) (2784 . 2789) 2783) nil (25774 60748 290296 656000) 0 nil])
([nil nil ((2789 . 2790)) nil (25774 60748 290291 107000) 0 nil])
([nil nil ((2810 . 2811) (t 25774 60748 326631 785000)) nil (25774 60755 32315 106000) 0 nil])
([nil nil ((#("corresponds " 0 12 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2812) (undo-tree-id37949 . -11) (undo-tree-id37950 . -12)) nil (25774 60755 32314 3000) 0 nil])
([nil nil ((#("to " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2812) (undo-tree-id37947 . -2) (undo-tree-id37948 . -3)) nil (25774 60755 32311 136000) 0 nil])
([nil nil ((#("the " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2812) (undo-tree-id37945 . -3) (undo-tree-id37946 . -4)) nil (25774 60755 32305 314000) 0 nil])
([nil nil ((#("𝛼𝛼𝑖𝑖𝑖𝑖 " 0 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2858) (undo-tree-id38516 . -6) (undo-tree-id38517 . -7) (t 25774 60755 70683 15000)) nil (25774 60777 23068 766000) 0 nil])
([nil nil ((#("𝑒𝑒𝑖𝑖𝑖𝑖" 0 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2905) (undo-tree-id38514 . -5) (undo-tree-id38515 . -6)) nil (25774 60777 23065 214000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2905) (undo-tree-id38512 . -1) (undo-tree-id38513 . -2)) nil (25774 60777 23060 984000) 0 nil])
([nil nil ((2835 . 3121) (#("- where the alignment score evaluates how well the input around position j matches with the output at position i. To be more specific, the attention weight is computed by normalizing the alignment scores as follows:

- The attention weight is a normalized version of the alignment score" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 21 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 21 22 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 22 73 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 73 104 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 104 105 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 105 124 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 124 125 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 125 180 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 180 182 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 182 189 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 189 190 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 190 191 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 191 215 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 215 216 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 216 217 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 217 218 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 218 219 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 219 286 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2835) (undo-tree-id37951 . -286) (undo-tree-id37952 . -286) (undo-tree-id37953 . -286) (undo-tree-id37954 . -222) (undo-tree-id37955 . -222) (undo-tree-id37956 . -222) (undo-tree-id37957 . -222) (undo-tree-id37958 . -222) (undo-tree-id37959 . -222) (undo-tree-id37960 . -222) (undo-tree-id37961 . -222) (undo-tree-id37962 . -222) (undo-tree-id37963 . -222) (undo-tree-id37964 . -222) (undo-tree-id37965 . -222) (undo-tree-id37966 . -222) (undo-tree-id37967 . -222) (undo-tree-id37968 . -222) (undo-tree-id37969 . -222) (undo-tree-id37970 . -222) (undo-tree-id37971 . -222) (undo-tree-id37972 . -222) (undo-tree-id37973 . -222) (undo-tree-id37974 . -222) (undo-tree-id37975 . -222) (undo-tree-id37976 . -222) (undo-tree-id37977 . -222) (undo-tree-id37978 . -222) (undo-tree-id37979 . -222) (undo-tree-id37980 . -219) (undo-tree-id37981 . -219) (undo-tree-id37982 . -219) (undo-tree-id37983 . -219) (undo-tree-id37984 . -219) (undo-tree-id37985 . -219) (undo-tree-id37986 . -219) (undo-tree-id37987 . -219) (undo-tree-id37988 . -219) (undo-tree-id37989 . -219) (undo-tree-id37990 . -219) (undo-tree-id37991 . -219) (undo-tree-id37992 . -219) (undo-tree-id37993 . -219) (undo-tree-id37994 . -219) (undo-tree-id37995 . -219) (undo-tree-id37996 . -219) (undo-tree-id37997 . -219) (undo-tree-id37998 . -219) (undo-tree-id37999 . -219) (undo-tree-id38000 . -219) (undo-tree-id38001 . -219) (undo-tree-id38002 . -219) (undo-tree-id38003 . -219) (undo-tree-id38004 . -219) (undo-tree-id38005 . -219) (undo-tree-id38006 . -219) (undo-tree-id38007 . -219) (undo-tree-id38008 . -219) (undo-tree-id38009 . -219) (undo-tree-id38010 . -219) (undo-tree-id38011 . -219) (undo-tree-id38012 . -219) (undo-tree-id38013 . -219) (undo-tree-id38014 . -219) (undo-tree-id38015 . -219) (undo-tree-id38016 . -219) (undo-tree-id38017 . -219) (undo-tree-id38018 . -219) (undo-tree-id38019 . -219) (undo-tree-id38020 . -219) (undo-tree-id38021 . -223) (undo-tree-id38022 . -223) (undo-tree-id38023 . -223) (undo-tree-id38024 . -223) (undo-tree-id38025 . -223) (undo-tree-id38026 . -223) (undo-tree-id38027 . -223) (undo-tree-id38028 . -223) (undo-tree-id38029 . -223) (undo-tree-id38030 . -223) (undo-tree-id38031 . -223) (undo-tree-id38032 . -223) (undo-tree-id38033 . -223) (undo-tree-id38034 . -223) (undo-tree-id38035 . -223) (undo-tree-id38036 . -223) (undo-tree-id38037 . -233) (undo-tree-id38038 . -233) (undo-tree-id38039 . -233) (undo-tree-id38040 . -233) (undo-tree-id38041 . -233) (undo-tree-id38042 . -233) (undo-tree-id38043 . -233) (undo-tree-id38044 . -233) (undo-tree-id38045 . -233) (undo-tree-id38046 . -233) (undo-tree-id38047 . -233) (undo-tree-id38048 . -233) (undo-tree-id38049 . -233) (undo-tree-id38050 . -233) (undo-tree-id38051 . -233) (undo-tree-id38052 . -233) (undo-tree-id38053 . -240) (undo-tree-id38054 . -240) (undo-tree-id38055 . -240) (undo-tree-id38056 . -240) (undo-tree-id38057 . -240) (undo-tree-id38058 . -240) (undo-tree-id38059 . -240) (undo-tree-id38060 . -240) (undo-tree-id38061 . -240) (undo-tree-id38062 . -240) (undo-tree-id38063 . -240) (undo-tree-id38064 . -240) (undo-tree-id38065 . -240) (undo-tree-id38066 . -240) (undo-tree-id38067 . -240) (undo-tree-id38068 . -240) (undo-tree-id38069 . -240) (undo-tree-id38070 . -240) (undo-tree-id38071 . -240) (undo-tree-id38072 . -240) (undo-tree-id38073 . -240) (undo-tree-id38074 . -240) (undo-tree-id38075 . -240) (undo-tree-id38076 . -240) (undo-tree-id38077 . -240) (undo-tree-id38078 . -240) (undo-tree-id38079 . -240) (undo-tree-id38080 . -240) (undo-tree-id38081 . -240) (undo-tree-id38082 . -240) (undo-tree-id38083 . -240) (undo-tree-id38084 . -240) (undo-tree-id38085 . -240) (undo-tree-id38086 . -240) (undo-tree-id38087 . -240) (undo-tree-id38088 . -240) (undo-tree-id38089 . -240) (undo-tree-id38090 . -240) (undo-tree-id38091 . -240) (undo-tree-id38092 . -240) (undo-tree-id38093 . -240) (undo-tree-id38094 . -240) (undo-tree-id38095 . -240) (undo-tree-id38096 . -240) (undo-tree-id38097 . -240) (undo-tree-id38098 . -240) (undo-tree-id38099 . -240) (undo-tree-id38100 . -240) (undo-tree-id38101 . -240) (undo-tree-id38102 . -240) (undo-tree-id38103 . -240) (undo-tree-id38104 . -240) (undo-tree-id38105 . -240) (undo-tree-id38106 . -240) (undo-tree-id38107 . -240) (undo-tree-id38108 . -240) (undo-tree-id38109 . -240) (undo-tree-id38110 . -240) (undo-tree-id38111 . -240) (undo-tree-id38112 . -240) (undo-tree-id38113 . -240) (undo-tree-id38114 . -240) (undo-tree-id38115 . -240) (undo-tree-id38116 . -240) (undo-tree-id38117 . -240) (undo-tree-id38118 . -240) (undo-tree-id38119 . -240) (undo-tree-id38120 . -240) (undo-tree-id38121 . -240) (undo-tree-id38122 . -240) (undo-tree-id38123 . -240) (undo-tree-id38124 . -240) (undo-tree-id38125 . -240) (undo-tree-id38126 . -240) (undo-tree-id38127 . -240) (undo-tree-id38128 . -240) (undo-tree-id38129 . -241) (undo-tree-id38130 . -241) (undo-tree-id38131 . -241) (undo-tree-id38132 . -241) (undo-tree-id38133 . -241) (undo-tree-id38134 . -241) (undo-tree-id38135 . -241) (undo-tree-id38136 . -241) (undo-tree-id38137 . -241) (undo-tree-id38138 . -241) (undo-tree-id38139 . -241) (undo-tree-id38140 . -241) (undo-tree-id38141 . -241) (undo-tree-id38142 . -241) (undo-tree-id38143 . -241) (undo-tree-id38144 . -241) (undo-tree-id38145 . -241) (undo-tree-id38146 . -241) (undo-tree-id38147 . -241) (undo-tree-id38148 . -241) (undo-tree-id38149 . -241) (undo-tree-id38150 . -243) (undo-tree-id38151 . -243) (undo-tree-id38152 . -243) (undo-tree-id38153 . -243) (undo-tree-id38154 . -243) (undo-tree-id38155 . -243) (undo-tree-id38156 . -243) (undo-tree-id38157 . -243) (undo-tree-id38158 . -243) (undo-tree-id38159 . -243) (undo-tree-id38160 . -243) (undo-tree-id38161 . -243) (undo-tree-id38162 . -243) (undo-tree-id38163 . -243) (undo-tree-id38164 . -243) (undo-tree-id38165 . -243) (undo-tree-id38166 . -254) (undo-tree-id38167 . -254) (undo-tree-id38168 . -254) (undo-tree-id38169 . -254) (undo-tree-id38170 . -254) (undo-tree-id38171 . -254) (undo-tree-id38172 . -254) (undo-tree-id38173 . -254) (undo-tree-id38174 . -254) (undo-tree-id38175 . -254) (undo-tree-id38176 . -254) (undo-tree-id38177 . -254) (undo-tree-id38178 . -254) (undo-tree-id38179 . -254) (undo-tree-id38180 . -254) (undo-tree-id38181 . -254) (undo-tree-id38182 . -254) (undo-tree-id38183 . -254) (undo-tree-id38184 . -254) (undo-tree-id38185 . -254) (undo-tree-id38186 . -254) (undo-tree-id38187 . -254) (undo-tree-id38188 . -254) (undo-tree-id38189 . -254) (undo-tree-id38190 . -254) (undo-tree-id38191 . -254) (undo-tree-id38192 . -262) (undo-tree-id38193 . -262) (undo-tree-id38194 . -262) (undo-tree-id38195 . -262) (undo-tree-id38196 . -262) (undo-tree-id38197 . -262) (undo-tree-id38198 . -262) (undo-tree-id38199 . -262) (undo-tree-id38200 . -262) (undo-tree-id38201 . -262) (undo-tree-id38202 . -262) (undo-tree-id38203 . -262) (undo-tree-id38204 . -262) (undo-tree-id38205 . -262) (undo-tree-id38206 . -262) (undo-tree-id38207 . -262) (undo-tree-id38208 . -262) (undo-tree-id38209 . -262) (undo-tree-id38210 . -265) (undo-tree-id38211 . -265) (undo-tree-id38212 . -265) (undo-tree-id38213 . -265) (undo-tree-id38214 . -265) (undo-tree-id38215 . -265) (undo-tree-id38216 . -265) (undo-tree-id38217 . -265) (undo-tree-id38218 . -265) (undo-tree-id38219 . -265) (undo-tree-id38220 . -265) (undo-tree-id38221 . -265) (undo-tree-id38222 . -265) (undo-tree-id38223 . -265) (undo-tree-id38224 . -265) (undo-tree-id38225 . -265) (undo-tree-id38226 . -269) (undo-tree-id38227 . -269) (undo-tree-id38228 . -269) (undo-tree-id38229 . -269) (undo-tree-id38230 . -269) (undo-tree-id38231 . -269) (undo-tree-id38232 . -269) (undo-tree-id38233 . -269) (undo-tree-id38234 . -269) (undo-tree-id38235 . -269) (undo-tree-id38236 . -269) (undo-tree-id38237 . -269) (undo-tree-id38238 . -269) (undo-tree-id38239 . -269) (undo-tree-id38240 . -269) (undo-tree-id38241 . -269) (undo-tree-id38242 . -279) (undo-tree-id38243 . -279) (undo-tree-id38244 . -279) (undo-tree-id38245 . -279) (undo-tree-id38246 . -279) (undo-tree-id38247 . -279) (undo-tree-id38248 . -279) (undo-tree-id38249 . -279) (undo-tree-id38250 . -279) (undo-tree-id38251 . -279) (undo-tree-id38252 . -279) (undo-tree-id38253 . -279) (undo-tree-id38254 . -279) (undo-tree-id38255 . -279) (undo-tree-id38256 . -279) (undo-tree-id38257 . -279) (undo-tree-id38258 . -285) (undo-tree-id38259 . -285) (undo-tree-id38260 . -285) (undo-tree-id38261 . -285) (undo-tree-id38262 . -285) (undo-tree-id38263 . -285) (undo-tree-id38264 . -285) (undo-tree-id38265 . -285) (undo-tree-id38266 . -285) (undo-tree-id38267 . -285) (undo-tree-id38268 . -285) (undo-tree-id38269 . -285) (undo-tree-id38270 . -285) (undo-tree-id38271 . -285) (undo-tree-id38272 . -285) (undo-tree-id38273 . -285) (undo-tree-id38274 . -285) (undo-tree-id38275 . -285) (undo-tree-id38276 . -285) (undo-tree-id38277 . -285) (undo-tree-id38278 . -285) (undo-tree-id38279 . -285) (undo-tree-id38280 . -285) (undo-tree-id38281 . -285) (undo-tree-id38282 . -285) (undo-tree-id38283 . -285) (undo-tree-id38284 . -285) (undo-tree-id38285 . -285) (undo-tree-id38286 . -285) (undo-tree-id38287 . -285) (undo-tree-id38288 . -285) (undo-tree-id38289 . -286) (undo-tree-id38290 . -286) (undo-tree-id38291 . -286) (undo-tree-id38292 . -286) (undo-tree-id38293 . -286) (undo-tree-id38294 . -286) (undo-tree-id38295 . -286) (undo-tree-id38296 . -286) (undo-tree-id38297 . -286) (undo-tree-id38298 . -286) (undo-tree-id38299 . -286) (undo-tree-id38300 . -286) (undo-tree-id38301 . -286) (undo-tree-id38302 . -286) (undo-tree-id38303 . -286) (undo-tree-id38304 . -286) (undo-tree-id38305 . -286) (undo-tree-id38306 . -286) (undo-tree-id38307 . -286) (undo-tree-id38308 . -286) (undo-tree-id38309 . -286) (undo-tree-id38310 . -286) (undo-tree-id38311 . -286) (undo-tree-id38312 . -286) (undo-tree-id38313 . -286) (undo-tree-id38314 . -286) (undo-tree-id38315 . -286) (undo-tree-id38316 . -286) (undo-tree-id38317 . -286) (undo-tree-id38318 . -286) (undo-tree-id38319 . -286) (undo-tree-id38320 . -286) (undo-tree-id38321 . -286) (undo-tree-id38322 . -286) (undo-tree-id38323 . -286) (undo-tree-id38324 . -286) (undo-tree-id38325 . -286) (undo-tree-id38326 . -286) (undo-tree-id38327 . -286) (undo-tree-id38328 . -286) (undo-tree-id38329 . -286) (undo-tree-id38330 . -286) (undo-tree-id38331 . -286) (undo-tree-id38332 . -286) (undo-tree-id38333 . -286) (undo-tree-id38334 . -286) (undo-tree-id38335 . -286) (undo-tree-id38336 . -286) (undo-tree-id38337 . -286) (undo-tree-id38338 . -286) (undo-tree-id38339 . -286) (undo-tree-id38340 . -286) (undo-tree-id38341 . -286) (undo-tree-id38342 . -286) (undo-tree-id38343 . -286) (undo-tree-id38344 . -286) (undo-tree-id38345 . -286) (undo-tree-id38346 . -286) (undo-tree-id38347 . -286) (undo-tree-id38348 . -286) (undo-tree-id38349 . -286) (undo-tree-id38350 . -286) (undo-tree-id38351 . -286) (undo-tree-id38352 . -286) (undo-tree-id38353 . -286) (undo-tree-id38354 . -286) (undo-tree-id38355 . -286) (undo-tree-id38356 . -286) (undo-tree-id38357 . -286) (undo-tree-id38358 . -286) (undo-tree-id38359 . -286) (undo-tree-id38360 . -286) (undo-tree-id38361 . -286) (undo-tree-id38362 . -286) (undo-tree-id38363 . -286) (undo-tree-id38364 . -286) (undo-tree-id38365 . -286) (undo-tree-id38366 . -286) (undo-tree-id38367 . -286) (undo-tree-id38368 . -286) (undo-tree-id38369 . -286) (undo-tree-id38370 . -286) (undo-tree-id38371 . -286) (undo-tree-id38372 . -286) (undo-tree-id38373 . -286) (undo-tree-id38374 . -286) (undo-tree-id38375 . -286) (undo-tree-id38376 . -286) (undo-tree-id38377 . -286) (undo-tree-id38378 . -286) (undo-tree-id38379 . -286) (undo-tree-id38380 . -286) (undo-tree-id38381 . -286) (undo-tree-id38382 . -286) (undo-tree-id38383 . -286) (undo-tree-id38384 . -286) (undo-tree-id38385 . -286) (undo-tree-id38386 . -286) (undo-tree-id38387 . -286) (undo-tree-id38388 . -286) (undo-tree-id38389 . -286) (undo-tree-id38390 . -286) (undo-tree-id38391 . -286) (undo-tree-id38392 . -286) (undo-tree-id38393 . -286) (undo-tree-id38394 . -286) (undo-tree-id38395 . -286) (undo-tree-id38396 . -286) (undo-tree-id38397 . -286) (undo-tree-id38398 . -286) (undo-tree-id38399 . -286) (undo-tree-id38400 . -286) (undo-tree-id38401 . -286) (undo-tree-id38402 . -286) (undo-tree-id38403 . -286) (undo-tree-id38404 . -286) (undo-tree-id38405 . -286) (undo-tree-id38406 . -286) (undo-tree-id38407 . -286) (undo-tree-id38408 . -286) (undo-tree-id38409 . -217) (2835 . 3052) (#(" where the alignment score evaluates how well the input around position j matches with the output at position i. To be more specific, the attention weight is computed by normalizing the alignment scores as follows:" 0 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 20 21 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 21 72 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 72 103 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 103 104 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 104 123 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 123 124 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 124 179 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 179 181 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 181 188 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 188 189 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 189 190 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 190 214 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2904) (undo-tree-id38410 . -1) (undo-tree-id38411 . -1) (undo-tree-id38412 . -1) (undo-tree-id38413 . -1) (undo-tree-id38414 . -1) (undo-tree-id38415 . -1) (undo-tree-id38416 . -1) (undo-tree-id38417 . -1) (undo-tree-id38418 . -1) (undo-tree-id38419 . -1) (undo-tree-id38420 . -1) (undo-tree-id38421 . -1) (undo-tree-id38422 . -1) (undo-tree-id38423 . -1) (undo-tree-id38424 . -1) (undo-tree-id38425 . -1) (undo-tree-id38426 . -1) (undo-tree-id38427 . -1) (undo-tree-id38428 . -1) (undo-tree-id38429 . -1) (undo-tree-id38430 . -1) (undo-tree-id38431 . -1) (undo-tree-id38432 . -1) (undo-tree-id38433 . -1) (undo-tree-id38434 . -1) (undo-tree-id38435 . -1) (undo-tree-id38436 . -1) (undo-tree-id38437 . -1) (undo-tree-id38438 . -1) (undo-tree-id38439 . -1) (undo-tree-id38440 . -1) (undo-tree-id38441 . -1) (undo-tree-id38442 . -1) (undo-tree-id38443 . -1) (undo-tree-id38444 . -1) (undo-tree-id38445 . -1) (undo-tree-id38446 . -1) (undo-tree-id38447 . -1) (undo-tree-id38448 . -1) (undo-tree-id38449 . -1) (undo-tree-id38450 . -1) (undo-tree-id38451 . -1) (undo-tree-id38452 . -1) (undo-tree-id38453 . -1) (undo-tree-id38454 . -1) (undo-tree-id38455 . -1) (undo-tree-id38456 . -1) (undo-tree-id38457 . -1) (undo-tree-id38458 . -1) (undo-tree-id38459 . -1) (undo-tree-id38460 . -1) (undo-tree-id38461 . -1) (undo-tree-id38462 . -1) (undo-tree-id38463 . -1) (undo-tree-id38464 . -1) (undo-tree-id38465 . -1) (undo-tree-id38466 . -1) (undo-tree-id38467 . -1) (undo-tree-id38468 . -1) (undo-tree-id38469 . -1) (undo-tree-id38470 . -1) (undo-tree-id38471 . -1) (undo-tree-id38472 . -1) (undo-tree-id38473 . -1) (undo-tree-id38474 . -1) (undo-tree-id38475 . -1) (undo-tree-id38476 . -1) (undo-tree-id38477 . -1) (undo-tree-id38478 . -1) (undo-tree-id38479 . -1) (undo-tree-id38480 . -1) (undo-tree-id38481 . -1) (undo-tree-id38482 . -1) (undo-tree-id38483 . -1) (undo-tree-id38484 . -1) (undo-tree-id38485 . -1) (undo-tree-id38486 . -1) (undo-tree-id38487 . -1) (undo-tree-id38488 . -1) (undo-tree-id38489 . -1) (undo-tree-id38490 . -1) (undo-tree-id38491 . -1) (undo-tree-id38492 . -1) (undo-tree-id38493 . -1) (undo-tree-id38494 . -1) (undo-tree-id38495 . -1) (undo-tree-id38496 . -1) (undo-tree-id38497 . -1) (undo-tree-id38498 . -1) (undo-tree-id38499 . -1) (undo-tree-id38500 . -1) (undo-tree-id38501 . -1) (undo-tree-id38502 . -1) (undo-tree-id38503 . -1) (undo-tree-id38504 . -1) (undo-tree-id38505 . -1) (undo-tree-id38506 . -1) (undo-tree-id38507 . -1) (undo-tree-id38508 . -1) (undo-tree-id38509 . -1) (undo-tree-id38510 . -1) (undo-tree-id38511 . -1) 2905) nil (25774 60777 23035 964000) 0 nil])
([nil nil ((#("where " 0 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2908) (undo-tree-id38689 . 6) (undo-tree-id38690 . -5) (undo-tree-id38691 . -6) (t 25774 60777 58851 259000)) nil (25774 60842 475053 418000) 0 nil])
([nil nil ((2906 . 3118) (#("- To be more specific, the attention weight is computed by normalizing the alignment scores as follows:

- the alignment score evaluates how well the input around position j matches with the output at position i." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 12 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 12 13 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 13 68 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 68 70 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 70 77 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 77 78 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 78 79 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 79 103 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 103 104 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 104 105 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 105 106 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 106 107 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 107 120 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 120 121 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 121 172 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 172 203 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 203 204 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 204 212 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 2906) (undo-tree-id39276 . 105) (undo-tree-id39277 . -107) (undo-tree-id39278 . -106) (undo-tree-id39279 . -212) (undo-tree-id39280 . -212) (undo-tree-id39281 . -212) (undo-tree-id39282 . -212) (undo-tree-id39283 . -212) (undo-tree-id39284 . -212) (undo-tree-id39285 . -212) (undo-tree-id39286 . -212) (undo-tree-id39287 . -212) (undo-tree-id39288 . -212) (undo-tree-id39289 . -212) (undo-tree-id39290 . -212) (undo-tree-id39291 . -212) (undo-tree-id39292 . -212) (undo-tree-id39293 . -212) (undo-tree-id39294 . -212) (undo-tree-id39295 . -212) (undo-tree-id39296 . -212) (undo-tree-id39297 . -212) (undo-tree-id39298 . -212) (undo-tree-id39299 . -212) (undo-tree-id39300 . -212) (undo-tree-id39301 . -212) (undo-tree-id39302 . -212) (undo-tree-id39303 . -212) (undo-tree-id39304 . -212) (undo-tree-id39305 . -212) (undo-tree-id39306 . -212) (undo-tree-id39307 . -212) (2906 . 3011) (#(" To be more specific, the attention weight is computed by normalizing the alignment scores as follows:" 0 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 12 67 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 67 69 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 69 76 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 76 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 77 78 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 78 102 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3013)) ((3013 . 3115) (#("- To be more specific, the attention weight is computed by normalizing the alignment scores as follows:

" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 12 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 12 13 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 13 68 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 68 70 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 70 77 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 77 78 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 78 79 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 79 103 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 103 104 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 104 105 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 2906) (2906 . 3118) (#("- the alignment score evaluates how well the input around position j matches with the output at position i.

- To be more specific, the attention weight is computed by normalizing the alignment scores as follows:" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 15 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 15 16 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 16 67 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 67 98 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 98 99 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 99 107 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 107 108 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 108 109 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 109 110 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 110 111 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 111 121 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 121 122 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 122 177 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 177 179 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 179 186 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 186 187 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 187 188 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 188 212 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 2906) (undo-tree-id39068 . 101) (undo-tree-id39069 . -109) (undo-tree-id39070 . -109) (undo-tree-id39071 . -109) (undo-tree-id39072 . -109) (undo-tree-id39073 . -109) (undo-tree-id39074 . -109) (undo-tree-id39075 . -109) (undo-tree-id39076 . -109) (undo-tree-id39077 . -109) (undo-tree-id39078 . -109) (undo-tree-id39079 . -109) (undo-tree-id39080 . -109) (undo-tree-id39081 . -109) (undo-tree-id39082 . -109) (undo-tree-id39083 . -109) (undo-tree-id39084 . -109) (undo-tree-id39085 . -109) (undo-tree-id39086 . -109) (undo-tree-id39087 . -109) (undo-tree-id39088 . -109) (undo-tree-id39089 . -109) (undo-tree-id39090 . -109) (undo-tree-id39091 . -109) (undo-tree-id39092 . -109) (undo-tree-id39093 . -109) (undo-tree-id39094 . -109) (undo-tree-id39095 . -109) (undo-tree-id39096 . -109) (undo-tree-id39097 . -109) (undo-tree-id39098 . -109) (undo-tree-id39099 . -109) (undo-tree-id39100 . -109) (undo-tree-id39101 . -109) (undo-tree-id39102 . -109) (undo-tree-id39103 . -109) (undo-tree-id39104 . -109) (undo-tree-id39105 . -109) (undo-tree-id39106 . -109) (undo-tree-id39107 . -109) (undo-tree-id39108 . -109) (undo-tree-id39109 . -109) (undo-tree-id39110 . -109) (undo-tree-id39111 . -109) (undo-tree-id39112 . -109) (undo-tree-id39113 . -109) (undo-tree-id39114 . -109) (undo-tree-id39115 . -109) (undo-tree-id39116 . -109) (undo-tree-id39117 . -109) (undo-tree-id39118 . -109) (undo-tree-id39119 . -109) (undo-tree-id39120 . -109) (undo-tree-id39121 . -109) (undo-tree-id39122 . -109) (undo-tree-id39123 . -109) (undo-tree-id39124 . -109) (undo-tree-id39125 . -109) (undo-tree-id39126 . -109) (undo-tree-id39127 . -109) (undo-tree-id39128 . -109) (undo-tree-id39129 . -109) (undo-tree-id39130 . -109) (undo-tree-id39131 . -109) (undo-tree-id39132 . -109) (undo-tree-id39133 . -109) (undo-tree-id39134 . -109) (undo-tree-id39135 . -109) (undo-tree-id39136 . -109) (undo-tree-id39137 . -109) (undo-tree-id39138 . -109) (undo-tree-id39139 . -109) (undo-tree-id39140 . -109) (undo-tree-id39141 . -109) (undo-tree-id39142 . -109) (undo-tree-id39143 . -109) (undo-tree-id39144 . -109) (undo-tree-id39145 . -109) (undo-tree-id39146 . -109) (undo-tree-id39147 . -109) (undo-tree-id39148 . -109) (undo-tree-id39149 . -109) (undo-tree-id39150 . -109) (undo-tree-id39151 . -109) (undo-tree-id39152 . -109) (undo-tree-id39153 . -109) (undo-tree-id39154 . -109) (undo-tree-id39155 . -109) (undo-tree-id39156 . -109) (undo-tree-id39157 . -109) (undo-tree-id39158 . -109) (undo-tree-id39159 . -109) (undo-tree-id39160 . -109) (undo-tree-id39161 . -109) (undo-tree-id39162 . -109) (undo-tree-id39163 . -109) (undo-tree-id39164 . -109) (undo-tree-id39165 . -109) (undo-tree-id39166 . -109) (undo-tree-id39167 . -109) (undo-tree-id39168 . -109) (undo-tree-id39169 . -109) (undo-tree-id39170 . -109) (undo-tree-id39171 . -109) (undo-tree-id39172 . -109) (undo-tree-id39173 . -109) (undo-tree-id39174 . -109) (undo-tree-id39175 . -109) (undo-tree-id39176 . -109) (undo-tree-id39177 . -109) (undo-tree-id39178 . -109) (undo-tree-id39179 . -109) (undo-tree-id39180 . -109) (undo-tree-id39181 . -109) (undo-tree-id39182 . -109) (undo-tree-id39183 . -109) (undo-tree-id39184 . -109) (undo-tree-id39185 . -109) (undo-tree-id39186 . -109) (undo-tree-id39187 . -109) (undo-tree-id39188 . -109) (undo-tree-id39189 . -109) (undo-tree-id39190 . -109) (undo-tree-id39191 . -109) (undo-tree-id39192 . -109) (undo-tree-id39193 . -109) (undo-tree-id39194 . -109) (undo-tree-id39195 . -109) (undo-tree-id39196 . -109) (undo-tree-id39197 . -109) (undo-tree-id39198 . -109) (undo-tree-id39199 . -109) (undo-tree-id39200 . -109) (undo-tree-id39201 . -109) (undo-tree-id39202 . -109) (undo-tree-id39203 . -109) (undo-tree-id39204 . -109) (undo-tree-id39205 . -109) (undo-tree-id39206 . -109) (undo-tree-id39207 . -109) (undo-tree-id39208 . -109) (undo-tree-id39209 . -109) (undo-tree-id39210 . -109) (undo-tree-id39211 . -109) (undo-tree-id39212 . -109) (undo-tree-id39213 . -109) (undo-tree-id39214 . -109) (undo-tree-id39215 . -109) (undo-tree-id39216 . -109) (undo-tree-id39217 . -109) (undo-tree-id39218 . -109) (undo-tree-id39219 . -109) (undo-tree-id39220 . -109) (undo-tree-id39221 . -109) (undo-tree-id39222 . -109) (undo-tree-id39223 . -109) (undo-tree-id39224 . -109) (undo-tree-id39225 . -109) (undo-tree-id39226 . -109) (undo-tree-id39227 . -109) (undo-tree-id39228 . -109) (undo-tree-id39229 . -109) (undo-tree-id39230 . -109) (undo-tree-id39231 . -109) (undo-tree-id39232 . -109) (undo-tree-id39233 . -109) (undo-tree-id39234 . -109) (undo-tree-id39235 . -109) (undo-tree-id39236 . -109) (undo-tree-id39237 . -109) (undo-tree-id39238 . -109) (undo-tree-id39239 . -109) (undo-tree-id39240 . -109) (undo-tree-id39241 . -109) (undo-tree-id39242 . -109) (undo-tree-id39243 . -109) (undo-tree-id39244 . -109) (undo-tree-id39245 . -109) (undo-tree-id39246 . -109) (undo-tree-id39247 . -109) (undo-tree-id39248 . -109) (undo-tree-id39249 . -109) (undo-tree-id39250 . -109) (undo-tree-id39251 . -109) (undo-tree-id39252 . -109) (undo-tree-id39253 . -109) (undo-tree-id39254 . -109) (undo-tree-id39255 . -109) (undo-tree-id39256 . -109) (undo-tree-id39257 . -109) (undo-tree-id39258 . -109) (undo-tree-id39259 . -109) (undo-tree-id39260 . -109) (undo-tree-id39261 . -109) (undo-tree-id39262 . -109) (undo-tree-id39263 . -109) (undo-tree-id39264 . -109) (undo-tree-id39265 . -109) (undo-tree-id39266 . -109) (undo-tree-id39267 . -109) (undo-tree-id39268 . -109) (undo-tree-id39269 . -109) (undo-tree-id39270 . -109) (undo-tree-id39271 . -109) (undo-tree-id39272 . -109) (undo-tree-id39273 . -109) (undo-tree-id39274 . -109) (undo-tree-id39275 . -109)) (25774 60843 752337 425000) 0 nil])
([nil nil ((#("To be more specific" 0 10 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 10 11 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 11 19 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3017) (undo-tree-id39311 . 19) (undo-tree-id39312 . -18) (undo-tree-id39313 . -19) (t 25774 60845 263384 235000)) nil (25774 60851 997564 126000) 0 nil] [nil nil ((#("- To be more specific, the attention weight is computed by normalizing the alignment scores as follows:
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 12 13 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 13 68 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 68 70 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 70 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 77 78 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 78 79 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 79 103 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 103 104 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3015) (undo-tree-id38721 . 102) (undo-tree-id38722 . -103) (undo-tree-id38723 . 1) (undo-tree-id38725 . -1) (undo-tree-id38727 . -1) (undo-tree-id38729 . -1) (undo-tree-id38731 . -1) (undo-tree-id38733 . -1) (undo-tree-id38735 . -1) (undo-tree-id38737 . -1) (undo-tree-id38739 . -1) (undo-tree-id38741 . -1) (undo-tree-id38743 . -1) (undo-tree-id38745 . -1) (undo-tree-id38747 . -1) (undo-tree-id38749 . -1) (undo-tree-id38751 . -1) (undo-tree-id38753 . -1) (undo-tree-id38755 . -1) (undo-tree-id38757 . -1) (undo-tree-id38759 . -104) (undo-tree-id38761 . -104) (undo-tree-id38763 . -104) (undo-tree-id38765 . -62) (undo-tree-id38767 . -62) (undo-tree-id38769 . -62) (undo-tree-id38771 . -62) (undo-tree-id38773 . -62) (undo-tree-id38775 . -62) (undo-tree-id38777 . -62) (undo-tree-id38779 . -62) (undo-tree-id38781 . -5) (undo-tree-id38783 . -5) (undo-tree-id38785 . -5) (undo-tree-id38787 . -5) (undo-tree-id38789 . -5) (undo-tree-id38791 . -5) (undo-tree-id38793 . -5) (undo-tree-id38795 . -5) (undo-tree-id38797 . -5) (undo-tree-id38799 . -5) (undo-tree-id38801 . -5) (undo-tree-id38803 . -5) (undo-tree-id38805 . -5) (undo-tree-id38807 . -5) (undo-tree-id38809 . -5) (undo-tree-id38811 . -5) (undo-tree-id38813 . -5) (undo-tree-id38815 . -5) (undo-tree-id38817 . -5) (undo-tree-id38819 . -5) (undo-tree-id38821 . -5) (undo-tree-id38823 . -5) (undo-tree-id38825 . -5) (undo-tree-id38827 . -102) (undo-tree-id38829 . -102) (undo-tree-id38831 . -102) (undo-tree-id38833 . -102) (undo-tree-id38835 . -102) (undo-tree-id38837 . -104) (undo-tree-id38839 . -104) (undo-tree-id38841 . -104) (undo-tree-id38843 . -104) (undo-tree-id38845 . -104) (undo-tree-id38847 . -104) (undo-tree-id38849 . -59) (undo-tree-id38851 . -59) (undo-tree-id38853 . -59) (undo-tree-id38855 . -59) (undo-tree-id38857 . -59) (undo-tree-id38859 . -59) (undo-tree-id38861 . -59) (undo-tree-id38863 . -59) (undo-tree-id38865 . -104) (t 25774 60787 322930 418000)) ((3015 . 3119)) (25774 60841 676602 368000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3017) (undo-tree-id39308 . 2) (undo-tree-id39309 . -1) (undo-tree-id39310 . -2)) nil (25774 60851 997559 911000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3015) (undo-tree-id38692 . 1) (undo-tree-id38693 . 1) (undo-tree-id38695 . -1) (undo-tree-id38697 . -1) (undo-tree-id38699 . -1) (undo-tree-id38701 . -1) (undo-tree-id38703 . -1) (undo-tree-id38705 . -1) (undo-tree-id38707 . -1) (undo-tree-id38709 . -1) (undo-tree-id38711 . -1) (undo-tree-id38713 . -1) (undo-tree-id38715 . -1) (undo-tree-id38717 . -1) (undo-tree-id38719 . -1)) ((3015 . 3016)) (25774 60841 332558 518000) 0 nil])
([nil nil ((3017 . 3018) (#("t" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3017)) nil (25774 60851 997546 459000) 0 nil])
([nil nil ((3015 . 3017)) ((#("- " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3015) (undo-tree-id38902 . -2) (undo-tree-id38903 . -2) (undo-tree-id38904 . -2) (undo-tree-id38905 . -2) (undo-tree-id38906 . -2) (undo-tree-id38907 . -2) (undo-tree-id38908 . -2) (undo-tree-id38909 . -2) (undo-tree-id38910 . -2) (undo-tree-id38911 . -2) (undo-tree-id38912 . -2) (undo-tree-id38913 . -2) (undo-tree-id38914 . -2) (undo-tree-id38915 . -2) (undo-tree-id38916 . -2) (undo-tree-id38917 . -2) (undo-tree-id38918 . -2) (undo-tree-id38919 . -2) (undo-tree-id38920 . -2) (undo-tree-id38921 . -2) (undo-tree-id38922 . -2) (undo-tree-id38923 . -2) (undo-tree-id38924 . -2) (undo-tree-id38925 . -2) (undo-tree-id38926 . -2) (undo-tree-id38927 . -2) (undo-tree-id38928 . -2) (undo-tree-id38929 . -2) (undo-tree-id38930 . -2) (undo-tree-id38931 . -2) (undo-tree-id38932 . -2) (undo-tree-id38933 . -2) (undo-tree-id38934 . -2) (undo-tree-id38935 . -2) (undo-tree-id38936 . -2) (undo-tree-id38937 . -2) (undo-tree-id38938 . -2) (undo-tree-id38939 . -2) (undo-tree-id38940 . -2) (undo-tree-id38941 . -2) (undo-tree-id38942 . -2) (undo-tree-id38943 . -2) (undo-tree-id38944 . -2) (undo-tree-id38945 . -2) (undo-tree-id38946 . -2) (undo-tree-id38947 . -2) (undo-tree-id38948 . -2) (undo-tree-id38949 . -2) (undo-tree-id38950 . -2) (undo-tree-id38951 . -2) (undo-tree-id38952 . -2) (undo-tree-id38953 . -2) (undo-tree-id38954 . -2) (undo-tree-id38955 . -2) (undo-tree-id38956 . -2) (undo-tree-id38957 . -2) (undo-tree-id38958 . -2) (undo-tree-id38959 . -2) (undo-tree-id38960 . -2) (undo-tree-id38961 . -2) (undo-tree-id38962 . -2) (undo-tree-id38963 . -2) (undo-tree-id38964 . -2) (undo-tree-id38965 . -2) (undo-tree-id38966 . -2) (undo-tree-id38967 . -2) (undo-tree-id38968 . -2) (undo-tree-id38969 . -2) (undo-tree-id38970 . -2) (undo-tree-id38971 . -2) (undo-tree-id38972 . -2) (undo-tree-id38973 . -2) (undo-tree-id38974 . -2) (undo-tree-id38975 . -2) (undo-tree-id38976 . -2) (undo-tree-id38977 . -2) (undo-tree-id38978 . -2) (undo-tree-id38979 . -2) (undo-tree-id38980 . -2) (undo-tree-id38981 . -2) (undo-tree-id38982 . -2) (undo-tree-id38983 . -2) (undo-tree-id38984 . -2) (undo-tree-id38985 . -2) (undo-tree-id38986 . -2) (undo-tree-id38987 . -2) (undo-tree-id38988 . -2) (undo-tree-id38989 . -2) (undo-tree-id38990 . -2) (undo-tree-id38991 . -2) (undo-tree-id38992 . -2) (undo-tree-id38993 . -2) (undo-tree-id38994 . -2) (undo-tree-id38995 . -2) (undo-tree-id38996 . -2) (undo-tree-id38997 . -2) (undo-tree-id38998 . -2) (undo-tree-id38999 . -2) (undo-tree-id39000 . -2) (undo-tree-id39001 . -2) (undo-tree-id39002 . -2) (undo-tree-id39003 . -2) (undo-tree-id39004 . -2) (undo-tree-id39005 . -2) (undo-tree-id39006 . -2) (undo-tree-id39007 . -2) (undo-tree-id39008 . -2) (undo-tree-id39009 . -2) (undo-tree-id39010 . -2) (undo-tree-id39011 . -2) (undo-tree-id39012 . -2) (undo-tree-id39013 . -2) (undo-tree-id39014 . -2) (undo-tree-id39015 . -2) (undo-tree-id39016 . -2) (undo-tree-id39017 . -2) (undo-tree-id39018 . -2) (undo-tree-id39019 . -2) (undo-tree-id39020 . -2) (undo-tree-id39021 . -2) (undo-tree-id39022 . -2) (undo-tree-id39023 . -2) (undo-tree-id39024 . -2) (undo-tree-id39025 . -2) (undo-tree-id39026 . -2) (undo-tree-id39027 . -2) (undo-tree-id39028 . -2) (undo-tree-id39029 . -2) (undo-tree-id39030 . -2) (undo-tree-id39031 . -2) (undo-tree-id39032 . -2) (undo-tree-id39033 . -2) (undo-tree-id39034 . -2) (undo-tree-id39035 . -2) (undo-tree-id39036 . -2) (undo-tree-id39037 . -2) (undo-tree-id39038 . -2) (undo-tree-id39039 . -2) (undo-tree-id39040 . -2) (undo-tree-id39041 . -2) (undo-tree-id39042 . -2) (undo-tree-id39043 . -2) (undo-tree-id39044 . -2) (undo-tree-id39045 . -2) (undo-tree-id39046 . -2) (undo-tree-id39047 . -2) (undo-tree-id39048 . -2) (undo-tree-id39049 . -2) (undo-tree-id39050 . -2) (undo-tree-id39051 . -2) (undo-tree-id39052 . -2) (undo-tree-id39053 . -2) (undo-tree-id39054 . -2) (undo-tree-id39055 . -2) (undo-tree-id39056 . -2) (undo-tree-id39057 . -2) (undo-tree-id39058 . -2) (undo-tree-id39059 . -2) (undo-tree-id39060 . -2) (undo-tree-id39061 . -2) (undo-tree-id39062 . -2) (undo-tree-id39063 . -2) (undo-tree-id39064 . -2) (undo-tree-id39065 . -2) (undo-tree-id39066 . -2) (undo-tree-id39067 . -2)) (25774 60841 67391 442000) 0 nil])
([nil nil ((3099 . 3101) (t 25774 60852 35438 14000)) nil (25774 60856 389134 502000) 0 nil])
([nil nil ((#("Note that this equation is similar to the softmax function" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 58 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3017) (undo-tree-id38890 . 58) (undo-tree-id38891 . -57) (undo-tree-id38892 . 58) (undo-tree-id38893 . -58) (t 25774 60801 71037 42000)) ((3017 . 3075)) (25774 60840 821236 790000) 0 nil])
([nil nil ((#("Note that this equation is similar to the softmax function, which we discussed in Chapter 12, Paral- lelizing Neural Network Training with PyTorch, in the section Estimating class probabilities in multiclass classification via the softmax function" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 58 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 58 60 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 60 92 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 92 100 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 100 101 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 101 146 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 146 207 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 207 208 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 208 247 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3101) (undo-tree-id39327 . 247) (undo-tree-id39328 . -246) (undo-tree-id39329 . -247) (t 25774 60856 427472 972000)) nil (25774 60865 687328 620000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3017) (undo-tree-id38886 . 2) (undo-tree-id38887 . -1) (undo-tree-id38888 . 2) (undo-tree-id38889 . -2)) ((3017 . 3019)) (25774 60840 575406 847000) 0 nil])
([nil nil ((#(". Consequently, the attention weights 𝛼𝛼𝑖𝑖𝑖 " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 2 14 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 14 16 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 16 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3101) (undo-tree-id39324 . 44) (undo-tree-id39325 . -43) (undo-tree-id39326 . -44)) nil (25774 60865 687033 372000) 0 nil])
([nil nil ((#("which we discussed in Chapter 12" 0 32 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3017) (undo-tree-id38882 . 32) (undo-tree-id38883 . -31) (undo-tree-id38884 . 32) (undo-tree-id38885 . -32)) ((3017 . 3049)) (25774 60840 304442 718000) 0 nil])
([nil nil ((#("." 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3101) (undo-tree-id39322 . 1) (undo-tree-id39323 . -1)) nil (25774 60865 687030 510000) 0 nil])
([nil nil ((#(", Paral- lelizing Neural Network Training with PyTorch" 0 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 8 9 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 9 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3017) (undo-tree-id38876 . 54) (undo-tree-id38877 . -53) (undo-tree-id38878 . 54) (undo-tree-id38880 . -7)) ((3017 . 3071)) (25774 60840 40569 889000) 0 nil])
([nil nil ((#("." 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3101) (undo-tree-id39320 . 1) (undo-tree-id39321 . -1)) nil (25774 60865 687027 794000) 0 nil])
([nil nil ((#(", in the section Estimating class probabilities in multiclass classification via the softmax function" 0 61 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 61 62 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 62 101 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3017) (undo-tree-id38870 . 101) (undo-tree-id38871 . -100) (undo-tree-id38872 . 101) (undo-tree-id38874 . -61)) ((3017 . 3118)) (25774 60839 781542 159000) 0 nil])
([nil nil ((#(".𝛼𝛼𝑖𝑖𝑖𝑖 sum up to 1" 0 19 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3101) (undo-tree-id39317 . 19) (undo-tree-id39318 . -18) (undo-tree-id39319 . -19)) nil (25774 60865 687025 71000) 0 nil])
([nil nil ((#(". " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3017) (undo-tree-id38866 . 2) (undo-tree-id38867 . -1) (undo-tree-id38868 . 2)) ((3017 . 3019) (t 25774 60827 111240 824000)) (25774 60839 516583 172000) 0 nil])
([nil nil ((#(". " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3101) (undo-tree-id39314 . 2) (undo-tree-id39315 . -1) (undo-tree-id39316 . -2)) nil (25774 60865 687018 719000) 0 nil])
([nil nil ((#("Consequently" 0 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3017) (undo-tree-id38898 . 12) (undo-tree-id38899 . -11) (undo-tree-id38900 . 12) (undo-tree-id38901 . -12) (t 25774 60827 111240 824000)) ((3017 . 3029)) (25774 60839 330375 399000) 0 nil])
([nil nil ((#("Now" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3101) (undo-tree-id39582 . 3) (undo-tree-id39583 . -2) (undo-tree-id39584 . -3) (t 25774 60865 727547 196000)) nil (25774 60904 437882 94000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3017) (undo-tree-id38894 . 2) (undo-tree-id38895 . -1) (undo-tree-id38896 . 2) (undo-tree-id38897 . -2)) ((3017 . 3019)) (25774 60839 329966 460000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3101) (undo-tree-id39579 . 2) (undo-tree-id39580 . -1) (undo-tree-id39581 . -2)) nil (25774 60904 437774 422000) 0 nil])
nil
([nil nil ((#("to summarize" 0 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3101) (undo-tree-id39576 . 12) (undo-tree-id39577 . -11) (undo-tree-id39578 . -12)) nil (25774 60904 437770 984000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3101) (undo-tree-id39573 . 2) (undo-tree-id39574 . -1) (undo-tree-id39575 . -2)) nil (25774 60904 437718 539000) 0 nil])
([nil nil ((#("we can structure the " 0 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3101) (undo-tree-id39330 . 21) (undo-tree-id39331 . -20) (undo-tree-id39332 . -20) (undo-tree-id39333 . -20) (undo-tree-id39334 . -20) (undo-tree-id39335 . -21) (undo-tree-id39336 . -20) (undo-tree-id39337 . -1) (undo-tree-id39338 . -1) (undo-tree-id39339 . -1) (undo-tree-id39340 . -1) (undo-tree-id39341 . -1) (undo-tree-id39342 . -1) (undo-tree-id39343 . -1) (undo-tree-id39344 . -1) (undo-tree-id39345 . -1) (undo-tree-id39346 . -1) (undo-tree-id39347 . -1) (undo-tree-id39348 . -1) (undo-tree-id39349 . -1) (undo-tree-id39350 . -1) (undo-tree-id39351 . -1) (undo-tree-id39352 . -1) (undo-tree-id39353 . -1) (undo-tree-id39354 . -1) (undo-tree-id39355 . -1) (undo-tree-id39356 . -1) (undo-tree-id39357 . -1) (undo-tree-id39358 . -5) (undo-tree-id39359 . -5) (undo-tree-id39360 . -5) (undo-tree-id39361 . -5) (undo-tree-id39362 . -5) (undo-tree-id39363 . -5) (undo-tree-id39364 . -5) (undo-tree-id39365 . -5) (undo-tree-id39366 . -5) (undo-tree-id39367 . -5) (undo-tree-id39368 . -5) (undo-tree-id39369 . -5) (undo-tree-id39370 . -5) (undo-tree-id39371 . -5) (undo-tree-id39372 . -5) (undo-tree-id39373 . -5) (undo-tree-id39374 . -5) (undo-tree-id39375 . -5) (undo-tree-id39376 . -5) (undo-tree-id39377 . -5) (undo-tree-id39378 . -5) (undo-tree-id39379 . -15) (undo-tree-id39380 . -15) (undo-tree-id39381 . -15) (undo-tree-id39382 . -15) (undo-tree-id39383 . -15) (undo-tree-id39384 . -15) (undo-tree-id39385 . -15) (undo-tree-id39386 . -15) (undo-tree-id39387 . -15) (undo-tree-id39388 . -15) (undo-tree-id39389 . -15) (undo-tree-id39390 . -15) (undo-tree-id39391 . -15) (undo-tree-id39392 . -15) (undo-tree-id39393 . -15) (undo-tree-id39394 . -15) (undo-tree-id39395 . -15) (undo-tree-id39396 . -15) (undo-tree-id39397 . -15) (undo-tree-id39398 . -15) (undo-tree-id39399 . -15) (undo-tree-id39400 . -19) (undo-tree-id39401 . -19) (undo-tree-id39402 . -19) (undo-tree-id39403 . -19) (undo-tree-id39404 . -19) (undo-tree-id39405 . -19) (undo-tree-id39406 . -19) (undo-tree-id39407 . -19) (undo-tree-id39408 . -19) (undo-tree-id39409 . -19) (undo-tree-id39410 . -19) (undo-tree-id39411 . -19) (undo-tree-id39412 . -19) (undo-tree-id39413 . -19) (undo-tree-id39414 . -19) (undo-tree-id39415 . -19) (undo-tree-id39416 . -19) (undo-tree-id39417 . -19) (undo-tree-id39418 . -19) (undo-tree-id39419 . -19) (undo-tree-id39420 . -19) (undo-tree-id39421 . -19) (undo-tree-id39422 . -19) (undo-tree-id39423 . -19) (undo-tree-id39424 . -19) (undo-tree-id39425 . -19) (undo-tree-id39426 . -18) (undo-tree-id39427 . -18) (undo-tree-id39428 . -18) (undo-tree-id39429 . -18) (undo-tree-id39430 . -18) (undo-tree-id39431 . -18) (undo-tree-id39432 . -18) (undo-tree-id39433 . -18) (undo-tree-id39434 . -18) (undo-tree-id39435 . -18) (undo-tree-id39436 . -18) (undo-tree-id39437 . -18) (undo-tree-id39438 . -18) (undo-tree-id39439 . -18) (undo-tree-id39440 . -18) (undo-tree-id39441 . -18) (undo-tree-id39442 . -18) (undo-tree-id39443 . -18) (undo-tree-id39444 . -18) (undo-tree-id39445 . -18) (undo-tree-id39446 . -18) (undo-tree-id39447 . -18) (undo-tree-id39448 . -18) (undo-tree-id39449 . -18) (undo-tree-id39450 . -18) (undo-tree-id39451 . -18) (undo-tree-id39452 . -19) (undo-tree-id39453 . -19) (undo-tree-id39454 . -19) (undo-tree-id39455 . -19) (undo-tree-id39456 . -19) (undo-tree-id39457 . -19) (undo-tree-id39458 . -19) (undo-tree-id39459 . -19) (undo-tree-id39460 . -19) (undo-tree-id39461 . -19) (undo-tree-id39462 . -19) (undo-tree-id39463 . -19) (undo-tree-id39464 . -19) (undo-tree-id39465 . -19) (undo-tree-id39466 . -19) (undo-tree-id39467 . -19) (undo-tree-id39468 . -19) (undo-tree-id39469 . -19) (undo-tree-id39470 . -19) (undo-tree-id39471 . -19) (undo-tree-id39472 . -19) (undo-tree-id39473 . -19) (undo-tree-id39474 . -19) (undo-tree-id39475 . -19) (undo-tree-id39476 . -19) (undo-tree-id39477 . -19) (undo-tree-id39478 . -19) (undo-tree-id39479 . -19) (undo-tree-id39480 . -19) (undo-tree-id39481 . -19) (undo-tree-id39482 . -19) (undo-tree-id39483 . -20) (undo-tree-id39484 . -20) (undo-tree-id39485 . -20) (undo-tree-id39486 . -20) (undo-tree-id39487 . -20) (undo-tree-id39488 . -20) (undo-tree-id39489 . -20) (undo-tree-id39490 . -20) (undo-tree-id39491 . -20) (undo-tree-id39492 . -20) (undo-tree-id39493 . -20) (undo-tree-id39494 . -20) (undo-tree-id39495 . -20) (undo-tree-id39496 . -20) (undo-tree-id39497 . -20) (undo-tree-id39498 . -20) (undo-tree-id39499 . -20) (undo-tree-id39500 . -20) (undo-tree-id39501 . -20) (undo-tree-id39502 . -20) (undo-tree-id39503 . -20) (undo-tree-id39504 . -20) (undo-tree-id39505 . -20) (undo-tree-id39506 . -20) (undo-tree-id39507 . -20) (undo-tree-id39508 . -20) (undo-tree-id39509 . -19) (undo-tree-id39510 . -19) (undo-tree-id39511 . -19) (undo-tree-id39512 . -19) (undo-tree-id39513 . -19) (undo-tree-id39514 . -19) (undo-tree-id39515 . -19) (undo-tree-id39516 . -19) (undo-tree-id39517 . -19) (undo-tree-id39518 . -19) (undo-tree-id39519 . -19) (undo-tree-id39520 . -19) (undo-tree-id39521 . -19) (undo-tree-id39522 . -19) (undo-tree-id39523 . -19) (undo-tree-id39524 . -19) (undo-tree-id39525 . -19) (undo-tree-id39526 . -19) (undo-tree-id39527 . -19) (undo-tree-id39528 . -19) (undo-tree-id39529 . -19) (undo-tree-id39530 . -19) (undo-tree-id39531 . -19) (undo-tree-id39532 . -19) (undo-tree-id39533 . -19) (undo-tree-id39534 . -19) (undo-tree-id39535 . -19) (undo-tree-id39536 . -19) (undo-tree-id39537 . -19) (undo-tree-id39538 . -19) (undo-tree-id39539 . -19) (undo-tree-id39540 . -19) (undo-tree-id39541 . -19) (undo-tree-id39542 . -19) (undo-tree-id39543 . -19) (undo-tree-id39544 . -19) (undo-tree-id39545 . -19) (undo-tree-id39546 . -19) (undo-tree-id39547 . -19) (undo-tree-id39548 . -19) (undo-tree-id39549 . -19) (undo-tree-id39550 . -20) (undo-tree-id39551 . -20) (undo-tree-id39552 . -20) (undo-tree-id39553 . -20) (undo-tree-id39554 . -20) (undo-tree-id39555 . -20) (undo-tree-id39556 . -20) (undo-tree-id39557 . -20) (undo-tree-id39558 . -20) (undo-tree-id39559 . -20) (undo-tree-id39560 . -20) (undo-tree-id39561 . -20) (undo-tree-id39562 . -20) (undo-tree-id39563 . -20) (undo-tree-id39564 . -20) (undo-tree-id39565 . -20) (undo-tree-id39566 . -20) (undo-tree-id39567 . -20) (undo-tree-id39568 . -20) (undo-tree-id39569 . -20) (undo-tree-id39570 . -20) (undo-tree-id39571 . -20) (undo-tree-id39572 . -21) 3121) nil (25774 60904 437707 79000) 0 nil])
([nil nil ((3101 . 3102) (#("a" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 3101)) nil (25774 60904 436993 945000) 0 nil])
([nil nil ((3138 . 3142) (3126 . 3138)) nil (25774 60904 436988 549000) 0 nil])
([nil nil ((3137 . 3138) (t 25774 60904 475859 302000)) nil (25774 60907 643911 102000) 0 nil])
([nil nil ((3135 . 3137) (#("r" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -3135) (undo-tree-id39585 . -1) (undo-tree-id39586 . -1) (undo-tree-id39587 . -1) (undo-tree-id39588 . -1) (undo-tree-id39589 . -1) (undo-tree-id39590 . -1) (undo-tree-id39591 . -1) (undo-tree-id39592 . -1) (undo-tree-id39593 . -1) (undo-tree-id39594 . -1) (undo-tree-id39595 . -1) (undo-tree-id39596 . -1) (undo-tree-id39597 . -1) (undo-tree-id39598 . -1) (undo-tree-id39599 . -1) (undo-tree-id39600 . -1) (undo-tree-id39601 . -1) (undo-tree-id39602 . -1) (undo-tree-id39603 . -1) (undo-tree-id39604 . -1) (undo-tree-id39605 . -1) 3136 (t 25774 60907 687885 373000)) nil (25774 60914 894812 393000) 0 nil])
([nil nil ((3099 . 4090) (#("- The first part computes bidirectional annotations of the input. The second part consists of the recurrent block, which is very much like the original RNN, except that it uses context vectors instead of the original input. The last part concerns the computation of the attention weights and context vectors, which describe the relationship between each pair of input and output elements. The transformer architecture also utilizes an attention mechanism, but unlike the attention-based RNN, it solely relies on the self-attention mechanism and does not include the recurrent process found in the RNN. In other words, a transformer model processes the whole input sequence all at once instead of reading and processing the sequence one element at a time. In the next section, we will introduce a basic form of the self-attention mechanism before we discuss the transformer architecture in more detail in the following section.

- Attention-based RNN model can be structured into three parts." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 16 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 16 17 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 17 102 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 102 103 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 103 104 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 104 114 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 114 115 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 115 160 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 160 162 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 162 194 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 194 216 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 216 217 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 217 248 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 248 314 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 314 315 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 315 349 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 349 351 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 351 363 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 363 365 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 365 388 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 388 389 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 389 393 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 393 394 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 394 395 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 395 414 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 414 416 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 416 419 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 419 421 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 421 433 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 433 435 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 435 438 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 438 439 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 439 440 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 440 441 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 441 442 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 442 443 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 443 444 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 444 445 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 445 446 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 446 447 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 447 448 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 448 449 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 449 450 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 450 451 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 451 452 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 452 453 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 453 454 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 454 455 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 455 456 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 456 491 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 491 492 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 492 517 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 517 592 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 592 593 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 593 692 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 692 693 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 693 793 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 793 794 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 794 893 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 893 894 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 894 925 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 925 926 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 926 927 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 927 928 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 928 929 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil composition (0 1 [8226])) 929 930 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 930 941 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 941 991 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 3099) (undo-tree-id39746 . 25) (undo-tree-id39747 . -930) (undo-tree-id39748 . -930) (undo-tree-id39749 . 60) (undo-tree-id39750 . -930) (undo-tree-id39751 . -930) (undo-tree-id39752 . -964) (undo-tree-id39753 . -991) (undo-tree-id39754 . 45) (undo-tree-id39755 . -949) (undo-tree-id39756 . -964) (undo-tree-id39757 . -964) (undo-tree-id39758 . -964) (undo-tree-id39759 . -964) (undo-tree-id39760 . -964) (undo-tree-id39761 . -964) (undo-tree-id39762 . -964) (undo-tree-id39763 . -964) (undo-tree-id39764 . -964) (undo-tree-id39765 . -964) (undo-tree-id39766 . -964) (undo-tree-id39767 . -964) (undo-tree-id39768 . -964) (undo-tree-id39769 . -964) (undo-tree-id39770 . -964) (undo-tree-id39771 . -964) (undo-tree-id39772 . -964) (undo-tree-id39773 . -964) (undo-tree-id39774 . -977) (undo-tree-id39775 . -977) (undo-tree-id39776 . -977) (undo-tree-id39777 . -977) (undo-tree-id39778 . -977) (undo-tree-id39779 . -977) (undo-tree-id39780 . -977) (undo-tree-id39781 . -977) (undo-tree-id39782 . -977) (undo-tree-id39783 . -977) (undo-tree-id39784 . -977) (undo-tree-id39785 . -977) (undo-tree-id39786 . -977) (undo-tree-id39787 . -977) (undo-tree-id39788 . -930) (undo-tree-id39789 . -930) (undo-tree-id39790 . -930) (undo-tree-id39791 . -930) (undo-tree-id39792 . -930) (undo-tree-id39793 . -930) (undo-tree-id39794 . -930) (undo-tree-id39795 . -930) (undo-tree-id39796 . -930) (undo-tree-id39797 . -930) (undo-tree-id39798 . -930) (undo-tree-id39799 . -930) (undo-tree-id39800 . -930) (undo-tree-id39801 . -930) (undo-tree-id39802 . -930) (undo-tree-id39803 . -930) (undo-tree-id39804 . -930) (undo-tree-id39805 . -930) (undo-tree-id39806 . -930) (undo-tree-id39807 . -930) (undo-tree-id39808 . -930) (undo-tree-id39809 . -930) (undo-tree-id39810 . -930) (undo-tree-id39811 . -930) (undo-tree-id39812 . -930) (undo-tree-id39813 . -930) (undo-tree-id39814 . -930) (undo-tree-id39815 . -930) (undo-tree-id39816 . -930) (undo-tree-id39817 . -930) (undo-tree-id39818 . -930) (undo-tree-id39819 . -930) (undo-tree-id39820 . -991) (undo-tree-id39821 . -930) (undo-tree-id39822 . -930) (undo-tree-id39823 . -930) (undo-tree-id39824 . -930) (undo-tree-id39825 . -930) (undo-tree-id39826 . -930) (undo-tree-id39827 . -930) (undo-tree-id39828 . -930) (undo-tree-id39829 . -930) (undo-tree-id39830 . -930) (undo-tree-id39831 . -930) (undo-tree-id39832 . -930) (undo-tree-id39833 . -930) (undo-tree-id39834 . -930) (undo-tree-id39835 . -930) (undo-tree-id39836 . -930) (undo-tree-id39837 . -930) (undo-tree-id39838 . -930) (undo-tree-id39839 . -930) (undo-tree-id39840 . -930) (undo-tree-id39841 . -930) (undo-tree-id39842 . -930) (undo-tree-id39843 . -930) (undo-tree-id39844 . -930) (undo-tree-id39845 . -930) (undo-tree-id39846 . -930) (undo-tree-id39847 . -930) (undo-tree-id39848 . -930) (undo-tree-id39849 . -930) (undo-tree-id39850 . -930) (undo-tree-id39851 . -930) (undo-tree-id39852 . -930) (undo-tree-id39853 . -930) (undo-tree-id39854 . -930) (undo-tree-id39855 . -930) (undo-tree-id39856 . -930) (undo-tree-id39857 . -930) (undo-tree-id39858 . -930) (undo-tree-id39859 . -930) (undo-tree-id39860 . -930) (undo-tree-id39861 . -930) (undo-tree-id39862 . -930) (undo-tree-id39863 . -930) (undo-tree-id39864 . -930) (undo-tree-id39865 . -930) (undo-tree-id39866 . -930) (undo-tree-id39867 . -930) (undo-tree-id39868 . -930) (undo-tree-id39869 . -930) (undo-tree-id39870 . -930) (undo-tree-id39871 . -930) (undo-tree-id39872 . -930) (undo-tree-id39873 . -930) (undo-tree-id39874 . -930) (undo-tree-id39875 . -930) (undo-tree-id39876 . -930) (undo-tree-id39877 . -930) (undo-tree-id39878 . -930) (undo-tree-id39879 . -930) (undo-tree-id39880 . -990) (undo-tree-id39881 . -990) (undo-tree-id39882 . -990) (undo-tree-id39883 . -990) (undo-tree-id39884 . -990) (undo-tree-id39885 . -990) (undo-tree-id39886 . -990) (undo-tree-id39887 . -990) (undo-tree-id39888 . -990) (undo-tree-id39889 . -990) (undo-tree-id39890 . -990) (undo-tree-id39891 . -990) (undo-tree-id39892 . -990) (undo-tree-id39893 . -990) (undo-tree-id39894 . -990) (undo-tree-id39895 . -990) (undo-tree-id39896 . -990) (undo-tree-id39897 . -990) (undo-tree-id39898 . -990) (undo-tree-id39899 . -990) (undo-tree-id39900 . -990) (undo-tree-id39901 . -991) (undo-tree-id39902 . -991) (undo-tree-id39903 . -991) (undo-tree-id39904 . -991) (undo-tree-id39905 . -991) (undo-tree-id39906 . -991) (undo-tree-id39907 . -991) (undo-tree-id39908 . -991) (undo-tree-id39909 . -991) (undo-tree-id39910 . -991) (undo-tree-id39911 . -991) (undo-tree-id39912 . -991) (undo-tree-id39913 . -991) (undo-tree-id39914 . -991) (undo-tree-id39915 . -991) (undo-tree-id39916 . -991) (undo-tree-id39917 . -991) (undo-tree-id39918 . -991) (undo-tree-id39919 . -991) (undo-tree-id39920 . -991) (undo-tree-id39921 . -991) (undo-tree-id39922 . -991) (undo-tree-id39923 . -991) (undo-tree-id39924 . -991) (undo-tree-id39925 . -928) (3099 . 4027) (#(" The first part computes bidirectional annotations of the input. The second part consists of the recurrent block, which is very much like the original RNN, except that it uses context vectors instead of the original input. The last part concerns the computation of the attention weights and context vectors, which describe the relationship between each pair of input and output elements. The transformer architecture also utilizes an attention mechanism, but unlike the attention-based RNN, it solely relies on the self-attention mechanism and does not include the recurrent process found in the RNN. In other words, a transformer model processes the whole input sequence all at once instead of reading and processing the sequence one element at a time. In the next section, we will introduce a basic form of the self-attention mechanism before we discuss the transformer architecture in more detail in the following section." 0 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 15 16 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 16 101 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 101 102 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 102 103 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 103 113 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 113 114 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 114 159 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 159 161 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 161 193 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 193 215 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 215 216 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 216 247 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 247 313 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 313 314 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 314 348 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 348 350 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 350 362 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 362 364 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 364 387 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 387 388 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 388 392 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 392 393 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 393 394 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 394 413 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 413 415 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 415 418 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 418 420 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 420 432 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 432 434 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 434 437 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 437 438 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 438 439 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 439 440 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 440 441 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 441 442 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 442 443 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 443 444 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 444 445 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 445 446 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 446 447 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 447 448 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 448 449 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 449 450 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 450 451 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 451 452 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 452 453 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 453 454 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 454 455 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 455 490 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 490 491 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 491 516 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 516 591 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 591 592 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 592 691 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 691 692 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 692 792 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 792 793 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 793 892 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 892 893 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 893 924 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 924 925 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3162) (undo-tree-id39926 . 439) (undo-tree-id39927 . -489) (undo-tree-id39928 . -924) (t 25774 60914 943944 380000)) nil (25774 60943 457955 831000) 0 nil])
([nil nil ((3164 . 4093) (#("- The second part consists of the recurrent block, which is very much like the original RNN, except that it uses context vectors instead of the original input. The last part concerns the computation of the attention weights and context vectors, which describe the relationship between each pair of input and output elements. The transformer architecture also utilizes an attention mechanism, but unlike the attention-based RNN, it solely relies on the self-attention mechanism and does not include the recurrent process found in the RNN. In other words, a transformer model processes the whole input sequence all at once instead of reading and processing the sequence one element at a time. In the next section, we will introduce a basic form of the self-attention mechanism before we discuss the transformer architecture in more detail in the following section.

- The first part computes bidirectional annotations of the input." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 38 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 38 39 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 39 40 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 40 50 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 50 51 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 51 96 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 96 98 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 98 130 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 130 152 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 152 153 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 153 184 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 184 250 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 250 251 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 251 285 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 285 287 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 287 299 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 299 301 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 301 324 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 324 325 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 325 329 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 329 330 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 330 331 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 331 350 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 350 352 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 352 355 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 355 357 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 357 369 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 369 371 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 371 374 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 374 375 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 375 376 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 376 377 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 377 378 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 378 379 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 379 380 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 380 381 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 381 382 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 382 383 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 383 384 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 384 385 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 385 386 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 386 387 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 387 388 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 388 389 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 389 390 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 390 391 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 391 392 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 392 427 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 427 428 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 428 453 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 453 528 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 528 529 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 529 628 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 628 629 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 629 729 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 729 730 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 730 829 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 829 830 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 830 861 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 861 862 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 862 863 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 863 864 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 864 865 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 865 866 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 866 880 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 880 881 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 881 929 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 3164) (undo-tree-id39606 . 63) (undo-tree-id39607 . -929) (undo-tree-id39608 . -866) (undo-tree-id39609 . -866) (undo-tree-id39610 . -866) (undo-tree-id39611 . -866) (undo-tree-id39612 . -866) (undo-tree-id39613 . -866) (undo-tree-id39614 . -866) (undo-tree-id39615 . -866) (undo-tree-id39616 . -866) (undo-tree-id39617 . -866) (undo-tree-id39618 . -866) (undo-tree-id39619 . -866) (undo-tree-id39620 . -866) (undo-tree-id39621 . -866) (undo-tree-id39622 . -866) (undo-tree-id39623 . -866) (undo-tree-id39624 . -866) (undo-tree-id39625 . -866) (undo-tree-id39626 . -866) (undo-tree-id39627 . -866) (undo-tree-id39628 . -866) (undo-tree-id39629 . -866) (undo-tree-id39630 . -866) (undo-tree-id39631 . -866) (undo-tree-id39632 . -866) (undo-tree-id39633 . -866) (undo-tree-id39634 . -866) (undo-tree-id39635 . -865) (undo-tree-id39636 . -865) (undo-tree-id39637 . -865) (undo-tree-id39638 . -865) (undo-tree-id39639 . -865) (undo-tree-id39640 . -865) (undo-tree-id39641 . -865) (undo-tree-id39642 . -865) (undo-tree-id39643 . -865) (undo-tree-id39644 . -865) (undo-tree-id39645 . -865) (undo-tree-id39646 . -865) (undo-tree-id39647 . -865) (undo-tree-id39648 . -865) (undo-tree-id39649 . -865) (undo-tree-id39650 . -865) (undo-tree-id39651 . -865) (undo-tree-id39652 . -865) (undo-tree-id39653 . -865) (undo-tree-id39654 . -865) (undo-tree-id39655 . -865) (undo-tree-id39656 . -865) (undo-tree-id39657 . -865) (undo-tree-id39658 . -865) (undo-tree-id39659 . -865) (undo-tree-id39660 . -865) (undo-tree-id39661 . -865) (undo-tree-id39662 . -865) (undo-tree-id39663 . -865) (undo-tree-id39664 . -865) (undo-tree-id39665 . -865) (undo-tree-id39666 . -865) (undo-tree-id39667 . -865) (undo-tree-id39668 . -865) (undo-tree-id39669 . -865) (undo-tree-id39670 . -865) (undo-tree-id39671 . -865) (undo-tree-id39672 . -865) (undo-tree-id39673 . -865) (undo-tree-id39674 . -865) (undo-tree-id39675 . -865) (undo-tree-id39676 . -865) (undo-tree-id39677 . -865) (undo-tree-id39678 . -865) (undo-tree-id39679 . -865) (undo-tree-id39680 . -865) (undo-tree-id39681 . -865) (undo-tree-id39682 . -865) (undo-tree-id39683 . -865) (undo-tree-id39684 . -865) (undo-tree-id39685 . -865) (undo-tree-id39686 . -865) (undo-tree-id39687 . -865) (undo-tree-id39688 . -865) (undo-tree-id39689 . -865) (undo-tree-id39690 . -865) (undo-tree-id39691 . -865) (undo-tree-id39692 . -865) (undo-tree-id39693 . -865) (undo-tree-id39694 . -865) (undo-tree-id39695 . -865) (undo-tree-id39696 . -865) (undo-tree-id39697 . -865) (undo-tree-id39698 . -865) (undo-tree-id39699 . -865) (undo-tree-id39700 . -928) (undo-tree-id39701 . -928) (undo-tree-id39702 . -928) (undo-tree-id39703 . -928) (undo-tree-id39704 . -928) (undo-tree-id39705 . -928) (undo-tree-id39706 . -928) (undo-tree-id39707 . -928) (undo-tree-id39708 . -928) (undo-tree-id39709 . -928) (undo-tree-id39710 . -928) (undo-tree-id39711 . -928) (undo-tree-id39712 . -928) (undo-tree-id39713 . -928) (undo-tree-id39714 . -928) (undo-tree-id39715 . -928) (undo-tree-id39716 . -929) (undo-tree-id39717 . -929) (undo-tree-id39718 . -929) (undo-tree-id39719 . -929) (undo-tree-id39720 . -929) (undo-tree-id39721 . -929) (undo-tree-id39722 . -929) (undo-tree-id39723 . -929) (undo-tree-id39724 . -929) (undo-tree-id39725 . -929) (undo-tree-id39726 . -929) (undo-tree-id39727 . -929) (undo-tree-id39728 . -929) (undo-tree-id39729 . -929) (undo-tree-id39730 . -929) (undo-tree-id39731 . -929) (undo-tree-id39732 . -929) (undo-tree-id39733 . -929) (undo-tree-id39734 . -929) (undo-tree-id39735 . -929) (undo-tree-id39736 . -929) (undo-tree-id39737 . -929) (undo-tree-id39738 . -929) (undo-tree-id39739 . -929) (undo-tree-id39740 . -929) (undo-tree-id39741 . -929) (undo-tree-id39742 . -929) (undo-tree-id39743 . -929) (undo-tree-id39744 . -929) (undo-tree-id39745 . -864) (3164 . 4028) (#(" The second part consists of the recurrent block, which is very much like the original RNN, except that it uses context vectors instead of the original input. The last part concerns the computation of the attention weights and context vectors, which describe the relationship between each pair of input and output elements. The transformer architecture also utilizes an attention mechanism, but unlike the attention-based RNN, it solely relies on the self-attention mechanism and does not include the recurrent process found in the RNN. In other words, a transformer model processes the whole input sequence all at once instead of reading and processing the sequence one element at a time. In the next section, we will introduce a basic form of the self-attention mechanism before we discuss the transformer architecture in more detail in the following section." 0 37 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 37 38 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 38 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 39 49 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 49 50 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 50 95 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 95 97 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 97 129 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 129 151 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 151 152 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 152 183 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 183 249 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 249 250 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 250 284 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 284 286 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 286 298 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 298 300 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 300 323 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 323 324 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 324 328 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 328 329 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 329 330 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 330 349 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 349 351 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 351 354 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 354 356 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 356 368 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 368 370 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 370 373 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 373 374 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 374 375 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 375 376 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 376 377 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 377 378 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 378 379 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 379 380 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 380 381 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 381 382 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 382 383 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 383 384 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 384 385 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 385 386 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 386 387 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 387 388 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 388 389 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 389 390 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 390 391 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 391 426 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 426 427 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 427 452 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 452 527 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 527 528 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 528 627 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 627 628 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 628 728 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 728 729 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 729 828 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 828 829 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 829 860 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 860 861 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3229)) nil (25774 60943 457776 658000) 0 nil])
([nil nil ((3231 . 4096) (#("- The last part concerns the computation of the attention weights and context vectors, which describe the relationship between each pair of input and output elements. The transformer architecture also utilizes an attention mechanism, but unlike the attention-based RNN, it solely relies on the self-attention mechanism and does not include the recurrent process found in the RNN. In other words, a transformer model processes the whole input sequence all at once instead of reading and processing the sequence one element at a time. In the next section, we will introduce a basic form of the self-attention mechanism before we discuss the transformer architecture in more detail in the following section.

- The second part consists of the recurrent block, which is very much like the original RNN, except that it uses context vectors instead of the original input." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 26 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 26 92 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 92 93 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 93 127 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 127 129 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 129 141 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 141 143 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 143 166 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 166 167 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 167 171 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 171 172 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 172 173 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 173 192 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 192 194 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 194 197 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 197 199 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 199 211 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 211 213 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 213 216 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 216 217 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 217 218 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 218 219 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 219 220 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 220 221 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 221 222 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 222 223 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 223 224 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 224 225 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 225 226 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 226 227 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 227 228 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 228 229 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 229 230 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 230 231 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 231 232 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 232 233 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 233 234 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 234 269 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 269 270 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 270 275 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 275 295 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 295 370 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 370 371 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 371 470 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 470 471 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 471 571 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 571 572 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 572 671 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 671 672 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 672 703 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 703 704 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 704 705 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 705 706 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 706 707 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 707 708 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 708 744 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 744 745 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 745 746 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 746 756 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 756 757 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 757 802 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 802 804 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 804 836 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 836 858 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 858 859 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 859 865 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 3231) (undo-tree-id39929 . 157) (undo-tree-id39930 . -707) (undo-tree-id39931 . -865) (undo-tree-id39932 . -707) (undo-tree-id39933 . -707) (undo-tree-id39934 . -707) (undo-tree-id39935 . -707) (undo-tree-id39936 . -707) (undo-tree-id39937 . -707) (undo-tree-id39938 . -707) (undo-tree-id39939 . -707) (undo-tree-id39940 . -707) (undo-tree-id39941 . -707) (undo-tree-id39942 . -707) (undo-tree-id39943 . -707) (undo-tree-id39944 . -707) (undo-tree-id39945 . -707) (undo-tree-id39946 . -707) (undo-tree-id39947 . -707) (undo-tree-id39948 . -707) (undo-tree-id39949 . -707) (undo-tree-id39950 . -707) (undo-tree-id39951 . -707) (undo-tree-id39952 . -707) (undo-tree-id39953 . -707) (undo-tree-id39954 . -707) (undo-tree-id39955 . -707) (undo-tree-id39956 . -707) (undo-tree-id39957 . -707) (undo-tree-id39958 . -707) (undo-tree-id39959 . -707) (undo-tree-id39960 . -707) (undo-tree-id39961 . -707) (undo-tree-id39962 . -707) (undo-tree-id39963 . -707) (undo-tree-id39964 . -707) (undo-tree-id39965 . -707) (undo-tree-id39966 . -707) (undo-tree-id39967 . -707) (undo-tree-id39968 . -707) (undo-tree-id39969 . -707) (undo-tree-id39970 . -707) (undo-tree-id39971 . -707) (undo-tree-id39972 . -707) (undo-tree-id39973 . -707) (undo-tree-id39974 . -707) (undo-tree-id39975 . -707) (undo-tree-id39976 . -707) (undo-tree-id39977 . -707) (undo-tree-id39978 . -707) (undo-tree-id39979 . -707) (undo-tree-id39980 . -707) (undo-tree-id39981 . -707) (undo-tree-id39982 . -707) (undo-tree-id39983 . -707) (undo-tree-id39984 . -707) (undo-tree-id39985 . -707) (undo-tree-id39986 . -707) (undo-tree-id39987 . -707) (undo-tree-id39988 . -707) (undo-tree-id39989 . -707) (undo-tree-id39990 . -707) (undo-tree-id39991 . -707) (undo-tree-id39992 . -707) (undo-tree-id39993 . -707) (undo-tree-id39994 . -707) (undo-tree-id39995 . -707) (undo-tree-id39996 . -707) (undo-tree-id39997 . -707) (undo-tree-id39998 . -707) (undo-tree-id39999 . -707) (undo-tree-id40000 . -707) (undo-tree-id40001 . -707) (undo-tree-id40002 . -707) (undo-tree-id40003 . -707) (undo-tree-id40004 . -707) (undo-tree-id40005 . -707) (undo-tree-id40006 . -707) (undo-tree-id40007 . -707) (undo-tree-id40008 . -707) (undo-tree-id40009 . -707) (undo-tree-id40010 . -707) (undo-tree-id40011 . -864) (undo-tree-id40012 . -864) (undo-tree-id40013 . -864) (undo-tree-id40014 . -864) (undo-tree-id40015 . -864) (undo-tree-id40016 . -864) (undo-tree-id40017 . -864) (undo-tree-id40018 . -864) (undo-tree-id40019 . -864) (undo-tree-id40020 . -864) (undo-tree-id40021 . -864) (undo-tree-id40022 . -864) (undo-tree-id40023 . -864) (undo-tree-id40024 . -864) (undo-tree-id40025 . -864) (undo-tree-id40026 . -864) (undo-tree-id40027 . -865) (undo-tree-id40028 . -865) (undo-tree-id40029 . -865) (undo-tree-id40030 . -865) (undo-tree-id40031 . -865) (undo-tree-id40032 . -865) (undo-tree-id40033 . -865) (undo-tree-id40034 . -865) (undo-tree-id40035 . -865) (undo-tree-id40036 . -865) (undo-tree-id40037 . -865) (undo-tree-id40038 . -865) (undo-tree-id40039 . -865) (undo-tree-id40040 . -865) (undo-tree-id40041 . -865) (undo-tree-id40042 . -865) (undo-tree-id40043 . -865) (undo-tree-id40044 . -865) (undo-tree-id40045 . -865) (undo-tree-id40046 . -706) (3231 . 3937) (#(" The last part concerns the computation of the attention weights and context vectors, which describe the relationship between each pair of input and output elements. The transformer architecture also utilizes an attention mechanism, but unlike the attention-based RNN, it solely relies on the self-attention mechanism and does not include the recurrent process found in the RNN. In other words, a transformer model processes the whole input sequence all at once instead of reading and processing the sequence one element at a time. In the next section, we will introduce a basic form of the self-attention mechanism before we discuss the transformer architecture in more detail in the following section." 0 25 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 25 91 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 91 92 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 92 126 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 126 128 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 128 140 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 140 142 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 142 165 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 165 166 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 166 170 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 170 171 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 171 172 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 172 191 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 191 193 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 193 196 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 196 198 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 198 210 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 210 212 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 212 215 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 215 216 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 216 217 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 217 218 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 218 219 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 219 220 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 220 221 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 221 222 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 222 223 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 223 224 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 224 225 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 225 226 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 226 227 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 227 228 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 228 229 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 229 230 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 230 231 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 231 232 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 232 233 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 233 268 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 268 269 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 269 274 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 274 294 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 294 369 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 369 370 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 370 469 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 469 470 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 470 570 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 570 571 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 571 670 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 670 671 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 671 702 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 702 703 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3390) (t 25774 60943 496178 0)) nil (25774 60957 445206 964000) 0 nil])
([nil nil ((3392 . 4099) (#("- The transformer architecture also utilizes an attention mechanism, but unlike the attention-based RNN, it solely relies on the self-attention mechanism and does not include the recurrent process found in the RNN. In other words, a transformer model processes the whole input sequence all at once instead of reading and processing the sequence one element at a time. In the next section, we will introduce a basic form of the self-attention mechanism before we discuss the transformer architecture in more detail in the following section.

- The last part concerns the computation of the attention weights and context vectors, which describe the relationship between each pair of input and output elements." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 6 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 6 7 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 7 8 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 8 27 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 27 29 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 29 32 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 32 34 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 34 46 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 46 48 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 48 51 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 51 52 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 52 53 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 53 54 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 54 55 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 55 56 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 56 57 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 57 58 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 58 59 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 59 60 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 60 61 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 61 62 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 62 63 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 63 64 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 64 65 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 65 66 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 66 67 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 67 68 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 68 69 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 69 104 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 104 105 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 105 110 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 110 130 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 130 174 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 174 205 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 205 206 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 206 305 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 305 306 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 306 406 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 406 407 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 407 506 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 506 507 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 507 538 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 538 539 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 539 540 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 540 541 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 541 542 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 542 543 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 543 567 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 567 633 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 633 634 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 634 668 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 668 670 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 670 682 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 682 684 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 684 707 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 3392) (undo-tree-id40047 . 164) (undo-tree-id40048 . -542) (undo-tree-id40049 . -707) (undo-tree-id40050 . -542) (undo-tree-id40051 . -542) (undo-tree-id40052 . -542) (undo-tree-id40053 . -542) (undo-tree-id40054 . -542) (undo-tree-id40055 . -542) (undo-tree-id40056 . -542) (undo-tree-id40057 . -542) (undo-tree-id40058 . -542) (undo-tree-id40059 . -542) (undo-tree-id40060 . -542) (undo-tree-id40061 . -542) (undo-tree-id40062 . -542) (undo-tree-id40063 . -542) (undo-tree-id40064 . -542) (undo-tree-id40065 . -542) (undo-tree-id40066 . -542) (undo-tree-id40067 . -542) (undo-tree-id40068 . -542) (undo-tree-id40069 . -542) (undo-tree-id40070 . -542) (undo-tree-id40071 . -542) (undo-tree-id40072 . -542) (undo-tree-id40073 . -542) (undo-tree-id40074 . -542) (undo-tree-id40075 . -542) (undo-tree-id40076 . -542) (undo-tree-id40077 . -542) (undo-tree-id40078 . -542) (undo-tree-id40079 . -542) (undo-tree-id40080 . -542) (undo-tree-id40081 . -542) (undo-tree-id40082 . -542) (undo-tree-id40083 . -542) (undo-tree-id40084 . -542) (undo-tree-id40085 . -542) (undo-tree-id40086 . -542) (undo-tree-id40087 . -542) (undo-tree-id40088 . -542) (undo-tree-id40089 . -542) (undo-tree-id40090 . -542) (undo-tree-id40091 . -542) (undo-tree-id40092 . -542) (undo-tree-id40093 . -542) (undo-tree-id40094 . -542) (undo-tree-id40095 . -542) (undo-tree-id40096 . -542) (undo-tree-id40097 . -542) (undo-tree-id40098 . -542) (undo-tree-id40099 . -542) (undo-tree-id40100 . -542) (undo-tree-id40101 . -542) (undo-tree-id40102 . -542) (undo-tree-id40103 . -542) (undo-tree-id40104 . -542) (undo-tree-id40105 . -542) (undo-tree-id40106 . -542) (undo-tree-id40107 . -542) (undo-tree-id40108 . -542) (undo-tree-id40109 . -542) (undo-tree-id40110 . -542) (undo-tree-id40111 . -542) (undo-tree-id40112 . -542) (undo-tree-id40113 . -542) (undo-tree-id40114 . -542) (undo-tree-id40115 . -542) (undo-tree-id40116 . -542) (undo-tree-id40117 . -542) (undo-tree-id40118 . -542) (undo-tree-id40119 . -542) (undo-tree-id40120 . -542) (undo-tree-id40121 . -542) (undo-tree-id40122 . -542) (undo-tree-id40123 . -542) (undo-tree-id40124 . -706) (undo-tree-id40125 . -706) (undo-tree-id40126 . -706) (undo-tree-id40127 . -706) (undo-tree-id40128 . -706) (undo-tree-id40129 . -706) (undo-tree-id40130 . -706) (undo-tree-id40131 . -706) (undo-tree-id40132 . -706) (undo-tree-id40133 . -706) (undo-tree-id40134 . -706) (undo-tree-id40135 . -706) (undo-tree-id40136 . -706) (undo-tree-id40137 . -706) (undo-tree-id40138 . -706) (undo-tree-id40139 . -706) (undo-tree-id40140 . -707) (undo-tree-id40141 . -707) (undo-tree-id40142 . -707) (undo-tree-id40143 . -707) (undo-tree-id40144 . -707) (undo-tree-id40145 . -707) (undo-tree-id40146 . -707) (undo-tree-id40147 . -707) (undo-tree-id40148 . -707) (undo-tree-id40149 . -707) (undo-tree-id40150 . -707) (undo-tree-id40151 . -707) (undo-tree-id40152 . -707) (undo-tree-id40153 . -707) (undo-tree-id40154 . -707) (undo-tree-id40155 . -707) (undo-tree-id40156 . -707) (undo-tree-id40157 . -707) (undo-tree-id40158 . -707) (undo-tree-id40159 . -541) (3392 . 3933) (#(" The transformer architecture also utilizes an attention mechanism, but unlike the attention-based RNN, it solely relies on the self-attention mechanism and does not include the recurrent process found in the RNN. In other words, a transformer model processes the whole input sequence all at once instead of reading and processing the sequence one element at a time. In the next section, we will introduce a basic form of the self-attention mechanism before we discuss the transformer architecture in more detail in the following section." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 5 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 6 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 7 26 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 26 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 28 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 31 33 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 33 45 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 45 47 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 47 50 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 50 51 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 51 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 52 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 53 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 54 55 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 55 56 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 56 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 57 58 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 58 59 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 59 60 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 60 61 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 61 62 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 62 63 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 63 64 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 64 65 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 65 66 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 66 67 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 67 68 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 68 103 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 103 104 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 104 109 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 109 129 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 129 173 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 173 204 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 204 205 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 205 304 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 304 305 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 305 405 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 405 406 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 406 505 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 505 506 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 506 537 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 537 538 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3558) (t 25774 60957 484293 259000)) nil (25774 60969 528030 332000) 0 nil])
([nil nil ((3560 . 4102) (#("- In other words, a transformer model processes the whole input sequence all at once instead of reading and processing the sequence one element at a time. In the next section, we will introduce a basic form of the self-attention mechanism before we discuss the transformer architecture in more detail in the following section.

- The transformer architecture also utilizes an attention mechanism, but unlike the attention-based RNN, it solely relies on the self-attention mechanism and does not include the recurrent process found in the RNN." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 92 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 92 93 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 93 119 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 119 193 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 193 194 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 194 293 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 293 294 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 294 325 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 325 326 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 326 327 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 327 328 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 328 329 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 329 330 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 330 334 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 334 335 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 335 336 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 336 355 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 355 357 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 357 360 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 360 362 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 362 374 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 374 376 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 376 379 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 379 380 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 380 381 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 381 382 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 382 383 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 383 384 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 384 385 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 385 386 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 386 387 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 387 388 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 388 389 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 389 390 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 390 391 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 391 392 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 392 393 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 393 394 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 394 395 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 395 396 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 396 397 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 397 432 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 432 433 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 433 438 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 438 458 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 458 502 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 502 533 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 533 534 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 534 542 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 3560) (undo-tree-id40160 . 212) (undo-tree-id40161 . -329) (undo-tree-id40162 . -542) (undo-tree-id40163 . -329) (undo-tree-id40164 . -329) (undo-tree-id40165 . -329) (undo-tree-id40166 . -329) (undo-tree-id40167 . -329) (undo-tree-id40168 . -329) (undo-tree-id40169 . -329) (undo-tree-id40170 . -329) (undo-tree-id40171 . -329) (undo-tree-id40172 . -329) (undo-tree-id40173 . -329) (undo-tree-id40174 . -329) (undo-tree-id40175 . -329) (undo-tree-id40176 . -329) (undo-tree-id40177 . -329) (undo-tree-id40178 . -329) (undo-tree-id40179 . -329) (undo-tree-id40180 . -329) (undo-tree-id40181 . -329) (undo-tree-id40182 . -329) (undo-tree-id40183 . -329) (undo-tree-id40184 . -329) (undo-tree-id40185 . -329) (undo-tree-id40186 . -329) (undo-tree-id40187 . -329) (undo-tree-id40188 . -329) (undo-tree-id40189 . -329) (undo-tree-id40190 . -329) (undo-tree-id40191 . -329) (undo-tree-id40192 . -329) (undo-tree-id40193 . -329) (undo-tree-id40194 . -329) (undo-tree-id40195 . -329) (undo-tree-id40196 . -329) (undo-tree-id40197 . -329) (undo-tree-id40198 . -329) (undo-tree-id40199 . -329) (undo-tree-id40200 . -329) (undo-tree-id40201 . -329) (undo-tree-id40202 . -329) (undo-tree-id40203 . -329) (undo-tree-id40204 . -329) (undo-tree-id40205 . -329) (undo-tree-id40206 . -329) (undo-tree-id40207 . -329) (undo-tree-id40208 . -329) (undo-tree-id40209 . -329) (undo-tree-id40210 . -329) (undo-tree-id40211 . -329) (undo-tree-id40212 . 4) (undo-tree-id40213 . -541) (undo-tree-id40214 . -541) (undo-tree-id40215 . -541) (undo-tree-id40216 . -541) (undo-tree-id40217 . -541) (undo-tree-id40218 . -541) (undo-tree-id40219 . -541) (undo-tree-id40220 . -541) (undo-tree-id40221 . -541) (undo-tree-id40222 . -541) (undo-tree-id40223 . -541) (undo-tree-id40224 . -541) (undo-tree-id40225 . -541) (undo-tree-id40226 . -541) (undo-tree-id40227 . -541) (undo-tree-id40228 . -541) (undo-tree-id40229 . -541) (undo-tree-id40230 . -541) (undo-tree-id40231 . -541) (undo-tree-id40232 . -541) (undo-tree-id40233 . -541) (undo-tree-id40234 . -541) (undo-tree-id40235 . -542) (undo-tree-id40236 . -542) (undo-tree-id40237 . -542) (undo-tree-id40238 . -542) (undo-tree-id40239 . -542) (undo-tree-id40240 . -542) (undo-tree-id40241 . -542) (undo-tree-id40242 . -542) (undo-tree-id40243 . -542) (undo-tree-id40244 . -542) (undo-tree-id40245 . -542) (undo-tree-id40246 . -542) (undo-tree-id40247 . -542) (undo-tree-id40248 . -542) (undo-tree-id40249 . -542) (undo-tree-id40250 . -542) (undo-tree-id40251 . -542) (undo-tree-id40252 . -542) (undo-tree-id40253 . -542) (undo-tree-id40254 . -328) (3560 . 3888) (#(" In other words, a transformer model processes the whole input sequence all at once instead of reading and processing the sequence one element at a time. In the next section, we will introduce a basic form of the self-attention mechanism before we discuss the transformer architecture in more detail in the following section." 0 91 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 91 92 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 92 118 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 118 192 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 192 193 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 193 292 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 292 293 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 293 324 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 324 325 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3774) (t 25774 60969 568393 243000)) nil (25774 60973 301113 48000) 0 nil])
([nil nil ((3776 . 4105) (#("- In the next section, we will introduce a basic form of the self-attention mechanism before we discuss the transformer architecture in more detail in the following section.

- In other words, a transformer model processes the whole input sequence all at once instead of reading and processing the sequence one element at a time." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 40 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 40 41 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 41 131 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 131 140 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 140 141 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 141 172 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 172 173 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 173 174 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 174 175 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 175 176 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 176 177 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 177 267 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 267 268 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 268 294 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 294 329 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 3776) (undo-tree-id40255 . 152) (undo-tree-id40256 . -176) (undo-tree-id40257 . -329) (undo-tree-id40258 . -176) (undo-tree-id40259 . -176) (undo-tree-id40260 . -176) (undo-tree-id40261 . -176) (undo-tree-id40262 . -176) (undo-tree-id40263 . -176) (undo-tree-id40264 . -176) (undo-tree-id40265 . -176) (undo-tree-id40266 . -176) (undo-tree-id40267 . -176) (undo-tree-id40268 . -176) (undo-tree-id40269 . -176) (undo-tree-id40270 . -176) (undo-tree-id40271 . -176) (undo-tree-id40272 . -176) (undo-tree-id40273 . -176) (undo-tree-id40274 . -176) (undo-tree-id40275 . -176) (undo-tree-id40276 . -176) (undo-tree-id40277 . -176) (undo-tree-id40278 . -176) (undo-tree-id40279 . -176) (undo-tree-id40280 . -176) (undo-tree-id40281 . -176) (undo-tree-id40282 . -176) (undo-tree-id40283 . -176) (undo-tree-id40284 . -176) (undo-tree-id40285 . -176) (undo-tree-id40286 . -176) (undo-tree-id40287 . -176) (undo-tree-id40288 . -176) (undo-tree-id40289 . -176) (undo-tree-id40290 . -176) (undo-tree-id40291 . -176) (undo-tree-id40292 . -176) (undo-tree-id40293 . -176) (undo-tree-id40294 . -176) (undo-tree-id40295 . -176) (undo-tree-id40296 . -176) (undo-tree-id40297 . -176) (undo-tree-id40298 . -176) (undo-tree-id40299 . -176) (undo-tree-id40300 . -176) (undo-tree-id40301 . -176) (undo-tree-id40302 . -176) (undo-tree-id40303 . -176) (undo-tree-id40304 . -176) (undo-tree-id40305 . -176) (undo-tree-id40306 . -176) (undo-tree-id40307 . -176) (undo-tree-id40308 . -176) (undo-tree-id40309 . -176) (undo-tree-id40310 . -176) (undo-tree-id40311 . -176) (undo-tree-id40312 . -328) (undo-tree-id40313 . -328) (undo-tree-id40314 . -328) (undo-tree-id40315 . -328) (undo-tree-id40316 . -328) (undo-tree-id40317 . -328) (undo-tree-id40318 . -328) (undo-tree-id40319 . -328) (undo-tree-id40320 . -328) (undo-tree-id40321 . -328) (undo-tree-id40322 . -328) (undo-tree-id40323 . -328) (undo-tree-id40324 . -328) (undo-tree-id40325 . -328) (undo-tree-id40326 . -328) (undo-tree-id40327 . -328) (undo-tree-id40328 . -329) (undo-tree-id40329 . -329) (undo-tree-id40330 . -329) (undo-tree-id40331 . -329) (undo-tree-id40332 . -329) (undo-tree-id40333 . -329) (undo-tree-id40334 . -329) (undo-tree-id40335 . -329) (undo-tree-id40336 . -329) (undo-tree-id40337 . -329) (undo-tree-id40338 . -329) (undo-tree-id40339 . -329) (undo-tree-id40340 . -329) (undo-tree-id40341 . -329) (undo-tree-id40342 . -329) (undo-tree-id40343 . -329) (undo-tree-id40344 . -329) (undo-tree-id40345 . -329) (undo-tree-id40346 . -329) (undo-tree-id40347 . -175) (3776 . 3951) (#(" In the next section, we will introduce a basic form of the self-attention mechanism before we discuss the transformer architecture in more detail in the following section." 0 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 39 40 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 40 130 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 130 139 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 139 140 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 140 171 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 171 172 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3930) (t 25774 60973 344424 563000)) nil (25774 60978 428790 822000) 0 nil])
([nil nil ((#("which is very much like the original RNN" 0 40 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3282) (undo-tree-id40568 . -39) (undo-tree-id40569 . -40) (t 25774 60976 836453 561000)) nil (25774 61046 457691 325000) 0 nil] [nil nil ((3932 . 3936) 3934 (t 25774 60976 836453 561000)) ((#("- 

" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 3932) (undo-tree-id40348 . 2) (undo-tree-id40349 . -1) (undo-tree-id40350 . -1) (undo-tree-id40351 . -1) (undo-tree-id40352 . -1)) (25774 60978 428332 255000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3282) (undo-tree-id40566 . -1) (undo-tree-id40567 . -2)) nil (25774 61046 457662 803000) 0 nil])
nil
([nil nil ((#("except " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 5 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3282) (undo-tree-id40564 . -6) (undo-tree-id40565 . -7)) nil (25774 61046 457659 469000) 0 nil])
([nil nil ((#("that " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3282) (undo-tree-id40562 . -4) (undo-tree-id40563 . -5)) nil (25774 61046 457655 952000) 0 nil])
([nil nil ((3249 . 3250) (#("consists of the " 0 16 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3249) (undo-tree-id40410 . -15) (undo-tree-id40411 . -15) (undo-tree-id40412 . -15) (undo-tree-id40413 . -15) (undo-tree-id40414 . -9) (undo-tree-id40415 . -9) (undo-tree-id40416 . -9) (undo-tree-id40417 . -9) (undo-tree-id40418 . -9) (undo-tree-id40419 . -9) (undo-tree-id40420 . -9) (undo-tree-id40421 . -9) (undo-tree-id40422 . -9) (undo-tree-id40423 . -9) (undo-tree-id40424 . -9) (undo-tree-id40425 . -9) (undo-tree-id40426 . -9) (undo-tree-id40427 . -9) (undo-tree-id40428 . -9) (undo-tree-id40429 . -9) (undo-tree-id40430 . -12) (undo-tree-id40431 . -12) (undo-tree-id40432 . -12) (undo-tree-id40433 . -12) (undo-tree-id40434 . -12) (undo-tree-id40435 . -12) (undo-tree-id40436 . -12) (undo-tree-id40437 . -12) (undo-tree-id40438 . -12) (undo-tree-id40439 . -12) (undo-tree-id40440 . -12) (undo-tree-id40441 . -12) (undo-tree-id40442 . -12) (undo-tree-id40443 . -12) (undo-tree-id40444 . -12) (undo-tree-id40445 . -12) (undo-tree-id40446 . -16) (undo-tree-id40447 . -16) (undo-tree-id40448 . -16) (undo-tree-id40449 . -16) (undo-tree-id40450 . -16) (undo-tree-id40451 . -16) (undo-tree-id40452 . -16) (undo-tree-id40453 . -16) (undo-tree-id40454 . -16) (undo-tree-id40455 . -16) (undo-tree-id40456 . -16) (undo-tree-id40457 . -16) (undo-tree-id40458 . -16) (undo-tree-id40459 . -16) (undo-tree-id40460 . -16) (undo-tree-id40461 . -16) (undo-tree-id40462 . -16) (undo-tree-id40463 . -16) (undo-tree-id40464 . -16) (undo-tree-id40465 . -16) (undo-tree-id40466 . -16) (undo-tree-id40467 . -16) (undo-tree-id40468 . -15) (undo-tree-id40469 . -7) (undo-tree-id40470 . -7) (undo-tree-id40471 . -7) (undo-tree-id40472 . -7) (undo-tree-id40473 . -7) (undo-tree-id40474 . -7) (undo-tree-id40475 . -7) (undo-tree-id40476 . -7) (undo-tree-id40477 . -7) (undo-tree-id40478 . -7) (undo-tree-id40479 . -7) (undo-tree-id40480 . -7) (undo-tree-id40481 . -7) (undo-tree-id40482 . -7) (undo-tree-id40483 . -7) (undo-tree-id40484 . -7) (undo-tree-id40485 . -7) (undo-tree-id40486 . -7) (undo-tree-id40487 . -7) (undo-tree-id40488 . -7) (undo-tree-id40489 . -7) (undo-tree-id40490 . -10) (undo-tree-id40491 . -10) (undo-tree-id40492 . -10) (undo-tree-id40493 . -10) (undo-tree-id40494 . -10) (undo-tree-id40495 . -10) (undo-tree-id40496 . -10) (undo-tree-id40497 . -10) (undo-tree-id40498 . -10) (undo-tree-id40499 . -10) (undo-tree-id40500 . -10) (undo-tree-id40501 . -10) (undo-tree-id40502 . -10) (undo-tree-id40503 . -10) (undo-tree-id40504 . -10) (undo-tree-id40505 . -10) (undo-tree-id40506 . -10) (undo-tree-id40507 . -10) (undo-tree-id40508 . -10) (undo-tree-id40509 . -10) (undo-tree-id40510 . -10) (undo-tree-id40511 . -14) (undo-tree-id40512 . -14) (undo-tree-id40513 . -14) (undo-tree-id40514 . -14) (undo-tree-id40515 . -14) (undo-tree-id40516 . -14) (undo-tree-id40517 . -14) (undo-tree-id40518 . -14) (undo-tree-id40519 . -14) (undo-tree-id40520 . -14) (undo-tree-id40521 . -14) (undo-tree-id40522 . -14) (undo-tree-id40523 . -14) (undo-tree-id40524 . -14) (undo-tree-id40525 . -14) (undo-tree-id40526 . -14) (undo-tree-id40527 . -14) (undo-tree-id40528 . -14) (undo-tree-id40529 . -14) (undo-tree-id40530 . -14) (undo-tree-id40531 . -14) (undo-tree-id40532 . -14) (undo-tree-id40533 . -14) (undo-tree-id40534 . -14) (undo-tree-id40535 . -14) (undo-tree-id40536 . -14) (undo-tree-id40537 . -15) (undo-tree-id40538 . -15) (undo-tree-id40539 . -15) (undo-tree-id40540 . -15) (undo-tree-id40541 . -15) (undo-tree-id40542 . -15) (undo-tree-id40543 . -15) (undo-tree-id40544 . -15) (undo-tree-id40545 . -15) (undo-tree-id40546 . -15) (undo-tree-id40547 . -15) (undo-tree-id40548 . -15) (undo-tree-id40549 . -15) (undo-tree-id40550 . -15) (undo-tree-id40551 . -15) (undo-tree-id40552 . -15) (undo-tree-id40553 . -15) (undo-tree-id40554 . -15) (undo-tree-id40555 . -15) (undo-tree-id40556 . -15) (undo-tree-id40557 . -15) (undo-tree-id40558 . -15) (undo-tree-id40559 . -16) (undo-tree-id40560 . -16) (undo-tree-id40561 . -16) 3264) nil (25774 61046 457642 183000) 0 nil])
([nil nil ((3265 . 3266) (#("(" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3265) (undo-tree-id40355 . -1) (undo-tree-id40356 . -1) (undo-tree-id40357 . -1) (undo-tree-id40358 . -1) (undo-tree-id40359 . -1) (undo-tree-id40360 . -1) (undo-tree-id40361 . -1) (undo-tree-id40362 . -1) (undo-tree-id40363 . -1) (undo-tree-id40364 . -1) (undo-tree-id40365 . -1) (undo-tree-id40366 . -1) (undo-tree-id40367 . -1) (undo-tree-id40368 . -1) (undo-tree-id40369 . -1) (undo-tree-id40370 . -1) (undo-tree-id40371 . -1) (undo-tree-id40372 . -1) (undo-tree-id40373 . -1) 3266 (3265 . 3266) (#("," 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3265) (undo-tree-id40374 . -1) (undo-tree-id40375 . -1) (undo-tree-id40376 . -1) (undo-tree-id40377 . -1) (undo-tree-id40378 . -1) (undo-tree-id40379 . -1) (undo-tree-id40380 . -1) (undo-tree-id40381 . -1) (undo-tree-id40382 . -1) (undo-tree-id40383 . -1) (undo-tree-id40384 . -1) (undo-tree-id40385 . -1) (undo-tree-id40386 . -1) (undo-tree-id40387 . -1) (undo-tree-id40388 . -1) (undo-tree-id40389 . -1) (undo-tree-id40390 . -1) (undo-tree-id40391 . -1) (undo-tree-id40392 . -1) (undo-tree-id40393 . -1) (undo-tree-id40394 . -1) (undo-tree-id40395 . -1) (undo-tree-id40396 . -1) (undo-tree-id40397 . -1) (undo-tree-id40398 . -1) (undo-tree-id40399 . -1) (undo-tree-id40400 . -1) (undo-tree-id40401 . -1) (undo-tree-id40402 . -1) (undo-tree-id40403 . -1) (undo-tree-id40404 . -1) (undo-tree-id40405 . -1) (undo-tree-id40406 . -1) (undo-tree-id40407 . -1) (undo-tree-id40408 . -1) (undo-tree-id40409 . -1) 3266) nil (25774 61046 457290 606000) 0 nil])
([nil nil ((#("it " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3267) (undo-tree-id40353 . -2) (undo-tree-id40354 . -3)) nil (25774 61046 456126 213000) 0 nil])
([nil nil ((#("last " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3326) (undo-tree-id40570 . -4) (undo-tree-id40571 . -5) (t 25774 61046 497038 130000)) nil (25774 61061 204933 565000) 0 nil])
([nil nil ((3326 . 3332)) nil (25774 61061 204917 14000) 0 nil])
([nil nil ((3406 . 3408) (#("," 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3406) (undo-tree-id40608 . -1) (undo-tree-id40609 . -1) (undo-tree-id40610 . -1) (t 25774 61061 245163 310000)) nil (25774 61120 79191 263000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3408) (undo-tree-id40605 . 1) (undo-tree-id40606 . -1) (undo-tree-id40607 . -1)) nil (25774 61120 79180 862000) 0 nil])
([nil nil ((#("which " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 5 6 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3408) (undo-tree-id40602 . 6) (undo-tree-id40603 . -5) (undo-tree-id40604 . -6)) nil (25774 61120 77492 313000) 0 nil])
([nil nil ((#("describe " 0 9 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3408) (undo-tree-id40599 . 9) (undo-tree-id40600 . -8) (undo-tree-id40601 . -9)) nil (25774 61120 77489 750000) 0 nil])
([nil nil ((#("the " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3408) (undo-tree-id40596 . 4) (undo-tree-id40597 . -3) (undo-tree-id40598 . -4)) nil (25774 61120 77486 589000) 0 nil])
([nil nil ((#("each " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3429) (undo-tree-id40573 . -4) (undo-tree-id40574 . -3) (undo-tree-id40575 . -3) (undo-tree-id40576 . -3) (undo-tree-id40577 . -3) (undo-tree-id40578 . -3) (undo-tree-id40579 . -3) (undo-tree-id40580 . -3) (undo-tree-id40581 . -3) (undo-tree-id40582 . -3) (undo-tree-id40583 . -3) (undo-tree-id40584 . -3) (undo-tree-id40585 . -3) (undo-tree-id40586 . -3) (undo-tree-id40587 . -3) (undo-tree-id40588 . -3) (undo-tree-id40589 . -3) (undo-tree-id40590 . -3) (undo-tree-id40591 . -3) (undo-tree-id40592 . -3) (undo-tree-id40593 . -3) (undo-tree-id40594 . -3) (undo-tree-id40595 . -5)) nil (25774 61120 77482 752000) 0 nil])
([nil nil ((3462 . 3463) (#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3462) (undo-tree-id40572 . -1)) nil (25774 61120 77460 248000) 0 nil])
([nil nil ((3463 . 3464) (t 25774 61120 121667 525000)) nil (25774 61122 240557 622000) 0 nil])
([nil nil ((3468 . 3469) (3465 . 3468) (t 25774 61122 277686 120000) 3465) nil (25774 61207 868576 356000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3468 . 3469) (#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -3683) (3468 . 3684) 3466) nil (25774 61207 868574 425000) 0 nil])
([nil nil ((#("  
" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) rear-nonsticky t)) . 3466) (undo-tree-id40611 . -2) (undo-tree-id40612 . -2) (undo-tree-id40613 . -2) (undo-tree-id40614 . -2) (undo-tree-id40615 . -2) (undo-tree-id40616 . -2) (undo-tree-id40617 . -2) (undo-tree-id40618 . -2) (undo-tree-id40619 . -2) (undo-tree-id40620 . -3) (undo-tree-id40621 . -3) (undo-tree-id40622 . -3) (undo-tree-id40623 . -3) (undo-tree-id40624 . -3) (undo-tree-id40625 . -3) (undo-tree-id40626 . -3) (undo-tree-id40627 . -3) (undo-tree-id40628 . -3) (undo-tree-id40629 . -3) (undo-tree-id40630 . -3) (undo-tree-id40631 . -3) (undo-tree-id40632 . -3) (undo-tree-id40633 . -3) (undo-tree-id40634 . -3) (undo-tree-id40635 . -3) (undo-tree-id40636 . -3) (undo-tree-id40637 . -3) (undo-tree-id40638 . -3) (undo-tree-id40639 . -3) (undo-tree-id40640 . -3) (undo-tree-id40641 . -3) (undo-tree-id40642 . -3) (undo-tree-id40643 . -3) (undo-tree-id40644 . -3) (undo-tree-id40645 . -3) (undo-tree-id40646 . -3) (undo-tree-id40647 . -3) (undo-tree-id40648 . -3) (undo-tree-id40649 . -3) (undo-tree-id40650 . -3) (undo-tree-id40651 . -3) (undo-tree-id40652 . -3)) nil (25774 61221 13829 105000) 0 nil])
([nil nil ((#("also utilizes an attention mechanism" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 15 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 15 17 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 17 20 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 20 21 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 21 22 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 22 23 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 23 24 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 24 25 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 25 26 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 26 27 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 27 28 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 28 29 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 29 30 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 30 31 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 31 32 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 32 33 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 33 34 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 34 35 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 35 36 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3497) (undo-tree-id40678 . -35) (undo-tree-id40679 . -36) (t 25774 61207 910431 386000)) nil (25774 61237 401454 661000) 0 nil] [nil nil ((#("The transformer architecture also utilizes an attention mechanism" 0 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 4 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 5 6 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 6 25 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 25 27 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 27 30 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 30 32 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 32 44 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 44 46 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 46 49 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 49 50 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 50 51 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 51 52 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 52 53 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 53 54 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 54 55 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 55 56 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 56 57 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 57 58 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 58 59 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 59 60 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 60 61 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 61 62 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 62 63 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 63 64 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 64 65 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3468) (undo-tree-id40653 . -64) (undo-tree-id40654 . -65) (t 25774 61207 910431 386000)) ((3468 . 3533)) (25774 61221 12962 348000) 0 nil])
([nil nil ((#(", " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3497) (undo-tree-id40676 . -1) (undo-tree-id40677 . -2)) nil (25774 61237 401451 872000) 0 nil])
nil
([nil nil ((#("but " 0 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3497) (undo-tree-id40674 . -3) (undo-tree-id40675 . -4)) nil (25774 61237 401447 791000) 0 nil])
([nil nil ((#("unlike " 0 7 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3497) (undo-tree-id40672 . -6) (undo-tree-id40673 . -7)) nil (25774 61237 401445 317000) 0 nil])
([nil nil ((#("the " 0 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3497) (undo-tree-id40670 . -3) (undo-tree-id40671 . -4)) nil (25774 61237 401443 301000) 0 nil])
([nil nil ((#("attention" 0 9 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3497) (undo-tree-id40668 . -8) (undo-tree-id40669 . -9)) nil (25774 61237 401441 357000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3497) (undo-tree-id40667 . -1)) nil (25774 61237 401439 421000) 0 nil])
([nil nil ((#("based " 0 6 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3497) (undo-tree-id40665 . -5) (undo-tree-id40666 . -6)) nil (25774 61237 401437 721000) 0 nil])
([nil nil ((#("RNN" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3497) (undo-tree-id40661 . -2) (undo-tree-id40662 . 3) (undo-tree-id40663 . -3) (undo-tree-id40664 . -3)) nil (25774 61237 401435 214000) 0 nil])
([nil nil ((#(", " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3497) (undo-tree-id40659 . -1) (undo-tree-id40660 . -2)) nil (25774 61237 401431 117000) 0 nil])
([nil nil ((#("it " 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3497) (undo-tree-id40657 . -2) (undo-tree-id40658 . -3)) nil (25774 61237 401428 352000) 0 nil])
([nil nil ((#("solely " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 7 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3497) (undo-tree-id40655 . -6) (undo-tree-id40656 . -7)) nil (25774 61237 401422 761000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3597 . 3598) (#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -3728) (3597 . 3729) (t 25774 61237 442691 236000)) nil (25774 61259 818977 816000) 0 nil])
([nil nil ((#(" and does not include the recurrent process found in the RNN." 0 21 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 21 52 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 52 53 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 53 61 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3535) (undo-tree-id40730 . 60) (undo-tree-id40731 . -60) (undo-tree-id40732 . -60) (undo-tree-id40733 . -60) (undo-tree-id40734 . -60) (undo-tree-id40735 . -60) (undo-tree-id40736 . -60) (undo-tree-id40737 . -60) (undo-tree-id40738 . -60) (undo-tree-id40739 . -60) (undo-tree-id40740 . -60) (undo-tree-id40741 . -60) (undo-tree-id40742 . -60) (undo-tree-id40743 . -60) (undo-tree-id40744 . -60) (undo-tree-id40745 . -60) (undo-tree-id40746 . -60) (undo-tree-id40747 . -60) (undo-tree-id40748 . 4) (undo-tree-id40749 . -60) (undo-tree-id40750 . -53) (undo-tree-id40751 . -53) (undo-tree-id40752 . -53) (undo-tree-id40753 . -53) (undo-tree-id40754 . -53) (undo-tree-id40755 . -53) (undo-tree-id40756 . -53) (undo-tree-id40757 . -53) (undo-tree-id40758 . -53) (undo-tree-id40759 . -53) (undo-tree-id40760 . -53) (undo-tree-id40761 . -53) (undo-tree-id40762 . -53) (undo-tree-id40763 . -53) (undo-tree-id40764 . -53) (undo-tree-id40765 . -53) (undo-tree-id40766 . -1) (undo-tree-id40767 . -1) (undo-tree-id40768 . -1) (undo-tree-id40769 . -1) (undo-tree-id40770 . -1) (undo-tree-id40771 . -1) (undo-tree-id40772 . -1) (undo-tree-id40773 . -1) (undo-tree-id40774 . -1) (undo-tree-id40775 . -1) (undo-tree-id40776 . -1) (undo-tree-id40777 . -1) (undo-tree-id40778 . -1) (undo-tree-id40779 . -1) (undo-tree-id40780 . -1) (undo-tree-id40781 . -1) (undo-tree-id40782 . -1) (undo-tree-id40783 . -1) (undo-tree-id40784 . -1) (undo-tree-id40785 . -1) (undo-tree-id40786 . -1) (undo-tree-id40787 . -1) (undo-tree-id40788 . -1) (undo-tree-id40789 . -1) (undo-tree-id40790 . -1) (undo-tree-id40791 . -1) (undo-tree-id40792 . -1) (undo-tree-id40793 . -1) (undo-tree-id40794 . -1) (undo-tree-id40795 . -1) (undo-tree-id40796 . -1) (undo-tree-id40797 . -1) (undo-tree-id40798 . -1) (undo-tree-id40799 . -1) (undo-tree-id40800 . -1) (undo-tree-id40801 . -1) (undo-tree-id40802 . -1) (undo-tree-id40803 . -1) (undo-tree-id40804 . -1) (undo-tree-id40805 . -1) (undo-tree-id40806 . -1) (undo-tree-id40807 . -1) (undo-tree-id40808 . -1) (undo-tree-id40809 . -1) (undo-tree-id40810 . -1) (undo-tree-id40811 . -1) (undo-tree-id40812 . -1) (undo-tree-id40813 . -1) (undo-tree-id40814 . -1) (undo-tree-id40815 . -1) (undo-tree-id40816 . -1) (undo-tree-id40817 . -1) (undo-tree-id40818 . -1) (undo-tree-id40819 . -1) (undo-tree-id40820 . -1) (undo-tree-id40821 . -1) (undo-tree-id40822 . -1) (undo-tree-id40823 . -1) (undo-tree-id40824 . -1) (undo-tree-id40825 . -61) (undo-tree-id40826 . -61)) nil (25774 61259 818973 493000) 0 nil])
([nil nil ((3535 . 3536)) nil (25774 61259 818860 862000) 0 nil])
([nil nil ((#("relies on the self-attention mechanism and" 0 15 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 15 42 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3569) (undo-tree-id40680 . -41) (undo-tree-id40681 . -41) (undo-tree-id40682 . -41) (undo-tree-id40683 . -41) (undo-tree-id40684 . -42) (undo-tree-id40685 . -41) (undo-tree-id40686 . -42) (undo-tree-id40687 . -42) (undo-tree-id40688 . -42) (undo-tree-id40689 . -42) (undo-tree-id40690 . -42) (undo-tree-id40691 . -42) (undo-tree-id40692 . -42) (undo-tree-id40693 . -42) (undo-tree-id40694 . -42) (undo-tree-id40695 . -42) (undo-tree-id40696 . -42) (undo-tree-id40697 . -42) (undo-tree-id40698 . -42) (undo-tree-id40699 . -42) (undo-tree-id40700 . -42) (undo-tree-id40701 . -42) (undo-tree-id40702 . -42) (undo-tree-id40703 . -42) (undo-tree-id40704 . -42) (undo-tree-id40705 . -42) (undo-tree-id40706 . -42) (undo-tree-id40707 . -41) (undo-tree-id40708 . -41) (undo-tree-id40709 . -41) (undo-tree-id40710 . -41) (undo-tree-id40711 . -41) (undo-tree-id40712 . -41) (undo-tree-id40713 . -41) (undo-tree-id40714 . -41) (undo-tree-id40715 . -41) (undo-tree-id40716 . -41) (undo-tree-id40717 . -41) (undo-tree-id40718 . -41) (undo-tree-id40719 . -41) (undo-tree-id40720 . -41) (undo-tree-id40721 . -41) (undo-tree-id40722 . -41) (undo-tree-id40723 . -41) (undo-tree-id40724 . -41) (undo-tree-id40725 . -41) (undo-tree-id40726 . -41) (undo-tree-id40727 . -41) (undo-tree-id40728 . -41) (undo-tree-id40729 . -42) 3610) nil (25774 61259 818855 712000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -3627) (undo-tree-id40846 . -2) (undo-tree-id40847 . -2) (undo-tree-id40848 . -2) (undo-tree-id40849 . -2) (undo-tree-id40850 . -2) (undo-tree-id40851 . -2) (undo-tree-id40852 . -2) (undo-tree-id40853 . -2) (undo-tree-id40854 . -2) (undo-tree-id40855 . -2) 3629 (3626 . 3629) (t 25774 61259 862889 390000) 3625) nil (25774 61264 896369 223000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3569) (undo-tree-id40827 . 1) (undo-tree-id40828 . -1) (undo-tree-id40829 . -1) (undo-tree-id40830 . -1) (undo-tree-id40831 . -1) (undo-tree-id40832 . -1) (undo-tree-id40833 . -1) (undo-tree-id40834 . -1) (undo-tree-id40835 . -1) (undo-tree-id40836 . -1) (undo-tree-id40837 . -1) (undo-tree-id40838 . -1) (undo-tree-id40839 . -1) (undo-tree-id40840 . -1) (undo-tree-id40841 . -1) (undo-tree-id40842 . -1) (undo-tree-id40843 . -1) (undo-tree-id40844 . -1) (undo-tree-id40845 . -1)) nil (25774 61264 896352 16000) 0 nil])
([nil nil ((#("- The transformer architecture also utilizes an attention mechanism, but unlike the attention-based RNN, it solely relies on the self-attention mechanism and does not include the recurrent process found in the RNN.
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 6 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 6 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 7 8 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 8 27 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 27 29 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 29 32 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 32 34 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 34 46 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 46 48 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 48 51 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 51 52 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 52 53 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 53 54 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 54 55 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 55 56 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 56 57 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 57 58 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 58 59 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 59 60 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 60 61 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 61 62 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 62 63 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 63 64 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 64 65 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 65 66 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 66 67 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 67 68 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 68 69 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 69 104 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 104 105 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 105 110 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 110 130 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 130 174 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 174 205 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 205 206 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 206 214 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 214 215 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3627) (undo-tree-id40857 . -214) (undo-tree-id40858 . 5) (undo-tree-id40859 . -213) (undo-tree-id40860 . 115) (undo-tree-id40861 . -103) (undo-tree-id40862 . -2) (undo-tree-id40863 . -2) (undo-tree-id40864 . -2) (undo-tree-id40865 . -2) (undo-tree-id40866 . -2) (undo-tree-id40867 . -2) (undo-tree-id40868 . -2) (undo-tree-id40869 . -2) (undo-tree-id40870 . -2) (undo-tree-id40871 . -2) (undo-tree-id40872 . -2) (undo-tree-id40873 . -2) (undo-tree-id40874 . -2) (undo-tree-id40875 . -2) (undo-tree-id40876 . -2) (undo-tree-id40877 . -2) (undo-tree-id40878 . -2) (undo-tree-id40879 . -2) (undo-tree-id40880 . -2) (undo-tree-id40881 . -2) (undo-tree-id40882 . -2) (undo-tree-id40883 . -2) (undo-tree-id40884 . -2) (undo-tree-id40885 . -2) (undo-tree-id40886 . -2) (undo-tree-id40887 . -2) (undo-tree-id40888 . -2) (undo-tree-id40889 . -2) (undo-tree-id40890 . -2) (undo-tree-id40891 . -2) (undo-tree-id40892 . -2) (undo-tree-id40893 . -2) (undo-tree-id40894 . -2) (undo-tree-id40895 . -2) (undo-tree-id40896 . -2) (undo-tree-id40897 . -2) (undo-tree-id40898 . -2) (undo-tree-id40899 . -2) (undo-tree-id40900 . -2) (undo-tree-id40901 . -2) (undo-tree-id40902 . -2) (undo-tree-id40903 . -2) (undo-tree-id40904 . -2) (undo-tree-id40905 . -2) (undo-tree-id40906 . -2) (undo-tree-id40907 . -2) (undo-tree-id40908 . -2) (undo-tree-id40909 . -2) (undo-tree-id40910 . -2) (undo-tree-id40911 . -2) (undo-tree-id40912 . -2) (undo-tree-id40913 . -2) (undo-tree-id40914 . -2) (undo-tree-id40915 . -2) (undo-tree-id40916 . -2) (undo-tree-id40917 . -2) (undo-tree-id40918 . -2) (undo-tree-id40919 . -2) (undo-tree-id40920 . -2) (undo-tree-id40921 . -2) (undo-tree-id40922 . -2) (undo-tree-id40923 . -2) (undo-tree-id40924 . -2) (undo-tree-id40925 . -2) (undo-tree-id40926 . -2) (undo-tree-id40927 . -2) (undo-tree-id40928 . -2) (undo-tree-id40929 . -2) (undo-tree-id40930 . -2) (undo-tree-id40931 . -2) (undo-tree-id40932 . -2) (undo-tree-id40933 . -2) (undo-tree-id40934 . -2) (undo-tree-id40935 . -2) (undo-tree-id40936 . -2) (undo-tree-id40937 . -2) (undo-tree-id40938 . -2) (undo-tree-id40939 . -2) (undo-tree-id40940 . -2) (undo-tree-id40941 . -2) (undo-tree-id40942 . -2) (undo-tree-id40943 . -2) (undo-tree-id40944 . -2) (undo-tree-id40945 . -2) (undo-tree-id40946 . -2) (undo-tree-id40947 . -2) (undo-tree-id40948 . -2) (undo-tree-id40949 . -2) (undo-tree-id40950 . -2) (undo-tree-id40951 . -2) (undo-tree-id40952 . -2) (undo-tree-id40953 . -2) (undo-tree-id40954 . -2) (undo-tree-id40955 . -2) (undo-tree-id40956 . -2) (undo-tree-id40957 . -2) (undo-tree-id40958 . -2) (undo-tree-id40959 . -2) (undo-tree-id40960 . -2) (undo-tree-id40961 . -2) (undo-tree-id40962 . -2) (undo-tree-id40963 . -2) (undo-tree-id40964 . -2) (undo-tree-id40965 . -2) (undo-tree-id40966 . -2) (undo-tree-id40967 . -2) (undo-tree-id40968 . -2) (undo-tree-id40969 . -2) (undo-tree-id40970 . -2) (undo-tree-id40971 . -2) (undo-tree-id40972 . -2) (undo-tree-id40973 . -2) (undo-tree-id40974 . -2) (undo-tree-id40975 . -2) (undo-tree-id40976 . -2) (undo-tree-id40977 . -2) (undo-tree-id40978 . -2) (undo-tree-id40979 . -2) (undo-tree-id40980 . -2) (undo-tree-id40981 . -2) (undo-tree-id40982 . -2) (undo-tree-id40983 . -2) (undo-tree-id40984 . -2) (undo-tree-id40985 . -2) (undo-tree-id40986 . -2) (undo-tree-id40987 . -2) (undo-tree-id40988 . -2) (undo-tree-id40989 . -2) (undo-tree-id40990 . -2) (undo-tree-id40991 . -2) (undo-tree-id40992 . -2) (undo-tree-id40993 . -2) (undo-tree-id40994 . -2) (undo-tree-id40995 . -2) (undo-tree-id40996 . -2) (undo-tree-id40997 . -2) (undo-tree-id40998 . -2) (undo-tree-id40999 . -2) (undo-tree-id41000 . -2) (undo-tree-id41001 . -2) (undo-tree-id41002 . -2) (undo-tree-id41003 . -2) (undo-tree-id41004 . -2) (undo-tree-id41005 . -2) (undo-tree-id41006 . -2) (undo-tree-id41007 . -2) (undo-tree-id41008 . -2) (undo-tree-id41009 . -2) (undo-tree-id41010 . -2) (undo-tree-id41011 . -2) (undo-tree-id41012 . -2) (undo-tree-id41013 . -2) (undo-tree-id41014 . -2) (undo-tree-id41015 . -2) (undo-tree-id41016 . -2) (undo-tree-id41017 . -2) (undo-tree-id41018 . -2) (undo-tree-id41019 . -2) (undo-tree-id41020 . -2) (undo-tree-id41021 . -2) (undo-tree-id41022 . -2) (undo-tree-id41023 . -2) (undo-tree-id41024 . -2) (undo-tree-id41025 . -2) (undo-tree-id41026 . -2) (undo-tree-id41027 . -2) (undo-tree-id41028 . -2) (undo-tree-id41029 . -2) (undo-tree-id41030 . -2) (undo-tree-id41031 . -2) (undo-tree-id41032 . -2) (undo-tree-id41033 . -2) (undo-tree-id41034 . -2) (undo-tree-id41035 . -2) (undo-tree-id41036 . -2) (undo-tree-id41037 . -2) (undo-tree-id41038 . -2) (undo-tree-id41039 . -2) (undo-tree-id41040 . -2) (undo-tree-id41041 . -2) (undo-tree-id41042 . -2) (undo-tree-id41043 . -2) (undo-tree-id41044 . -2) (undo-tree-id41045 . -2) (undo-tree-id41046 . -2) (undo-tree-id41047 . -2) (undo-tree-id41048 . -2) (undo-tree-id41049 . -2) (undo-tree-id41050 . -2) (undo-tree-id41051 . -2) (undo-tree-id41052 . -2) (undo-tree-id41053 . -2) (undo-tree-id41054 . -2) (undo-tree-id41055 . -2) (undo-tree-id41056 . -2) (undo-tree-id41057 . -2) (undo-tree-id41058 . -2) (undo-tree-id41059 . -2) (undo-tree-id41060 . -2) (undo-tree-id41061 . -2) (undo-tree-id41062 . -2) (undo-tree-id41063 . -2) (undo-tree-id41064 . -2) (undo-tree-id41065 . -2) (undo-tree-id41066 . -2) (undo-tree-id41067 . -2) (undo-tree-id41068 . -2) (undo-tree-id41069 . -2) (undo-tree-id41070 . -2) (undo-tree-id41071 . -2) (undo-tree-id41072 . -2) (undo-tree-id41073 . -2) (undo-tree-id41074 . -2) (undo-tree-id41075 . -2) (undo-tree-id41076 . -2) (undo-tree-id41077 . -2) (undo-tree-id41078 . -2) (undo-tree-id41079 . -2) (undo-tree-id41080 . -2) (undo-tree-id41081 . -2) (undo-tree-id41082 . -2) (undo-tree-id41083 . -2) (undo-tree-id41084 . -2) (undo-tree-id41085 . -215) 3629 (t 25774 61264 938934 357000)) nil (25774 61329 721024 80000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3627) (undo-tree-id40856 . -1)) nil (25774 61329 719992 133000) 0 nil])
([nil nil ((#("In " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3629) (undo-tree-id41094 . -2) (undo-tree-id41095 . -3) (t 25774 61329 763511 717000)) nil (25774 61340 969235 539000) 0 nil])
([nil nil ((#("other " 0 6 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3629) (undo-tree-id41092 . -5) (undo-tree-id41093 . -6)) nil (25774 61340 969233 335000) 0 nil])
([nil nil ((#("words" 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3629) (undo-tree-id41090 . -4) (undo-tree-id41091 . -5)) nil (25774 61340 969231 328000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3629) (undo-tree-id41088 . -1) (undo-tree-id41089 . -2)) nil (25774 61342 163111 226000) 0 nil])
([nil nil ((3629 . 3630) (#("a" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3629)) nil (25774 61345 340739 538000) 0 nil] [nil nil ((#("a " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3629) (undo-tree-id41086 . -1) (undo-tree-id41087 . -2)) ((3629 . 3631)) (25774 61341 719774 510000) 0 nil])
([nil nil ((#("- In the next section, we will introduce a basic form of the self-attention mechanism before we discuss the transformer architecture in more detail in the following section.
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 40 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 40 41 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 41 131 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 131 140 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 140 141 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 141 172 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 172 173 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 173 174 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3767) (undo-tree-id45287 . -173) (undo-tree-id45288 . -174) (t 25774 61345 379651 619000)) nil (25774 61450 905669 83000) 0 nil])
([nil nil ((3629 . 3630) (#("t" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3629)) ((3629 . 3630) (#("T" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3629) (t 25774 61341 11612 455000)) (25774 61340 969214 256000) 0 nil])
([nil nil ((3767 . 3770)) nil (25774 61450 905667 213000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 5693 . 5694) (nil fontified nil 5652 . 5694) (nil fontified nil 5551 . 5652) (nil fontified nil 5487 . 5551) (nil fontified nil 5385 . 5487) (nil fontified nil 5284 . 5385) (nil fontified nil 5280 . 5284) (nil fontified nil 5276 . 5280) (nil fontified nil 5176 . 5276) (nil fontified nil 5066 . 5176) (nil fontified nil 4967 . 5066) (nil fontified nil 4870 . 4967) (nil fontified nil 4801 . 4870) (nil fontified nil 4704 . 4801) (nil fontified nil 4605 . 4704) (nil fontified nil 4499 . 4605) (nil fontified nil 4394 . 4499) (nil fontified nil 4336 . 4394) (nil fontified nil 4236 . 4336) (nil fontified nil 4138 . 4236) (nil fontified nil 4033 . 4138) (nil fontified nil 3921 . 4033) (nil fontified nil 3818 . 3921) (nil fontified nil 3770 . 3818) (3770 . 5694) 3769) nil (25774 61450 905665 838000) 0 nil])
([nil nil ((5651 . 5652) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5651) (undo-tree-id45050 . -1) (5550 . 5551) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5550) (undo-tree-id45051 . -1) (undo-tree-id45052 . -1) (undo-tree-id45053 . -1) (undo-tree-id45054 . -1) (undo-tree-id45055 . -1) (undo-tree-id45056 . -1) (undo-tree-id45057 . -1) (undo-tree-id45058 . -1) (undo-tree-id45059 . -1) (undo-tree-id45060 . -1) (undo-tree-id45061 . -1) (undo-tree-id45062 . -1) (undo-tree-id45063 . -1) (undo-tree-id45064 . -1) (undo-tree-id45065 . -1) (undo-tree-id45066 . -1) (undo-tree-id45067 . -1) (5486 . 5487) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5486) (undo-tree-id45068 . -1) (5384 . 5385) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5384) (undo-tree-id45069 . -1) (5283 . 5284) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5283) (undo-tree-id45070 . -1) (5279 . 5280) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5279) (undo-tree-id45071 . -1) (5275 . 5276) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5275) (undo-tree-id45072 . -1) (5175 . 5176) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5175) (undo-tree-id45073 . -1) (5065 . 5066) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5065) (undo-tree-id45074 . -1) (4966 . 4967) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4966) (undo-tree-id45075 . -1) (4869 . 4870) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4869) (undo-tree-id45076 . -1) (undo-tree-id45077 . -1) (undo-tree-id45078 . -1) (undo-tree-id45079 . -1) (undo-tree-id45080 . -1) (undo-tree-id45081 . -1) (undo-tree-id45082 . -1) (undo-tree-id45083 . -1) (undo-tree-id45084 . -1) (undo-tree-id45085 . -1) (undo-tree-id45086 . -1) (undo-tree-id45087 . -1) (undo-tree-id45088 . -1) (undo-tree-id45089 . -1) (undo-tree-id45090 . -1) (undo-tree-id45091 . -1) (undo-tree-id45092 . -1) (4800 . 4801) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4800) (undo-tree-id45093 . -1) (4703 . 4704) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4703) (undo-tree-id45094 . -1) (4604 . 4605) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4604) (undo-tree-id45095 . -1) (4498 . 4499) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4498) (undo-tree-id45096 . -1) (4393 . 4394) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4393) (undo-tree-id45097 . -1) (undo-tree-id45098 . -1) (undo-tree-id45099 . -1) (undo-tree-id45100 . -1) (undo-tree-id45101 . -1) (undo-tree-id45102 . -1) (undo-tree-id45103 . -1) (undo-tree-id45104 . -1) (undo-tree-id45105 . -1) (undo-tree-id45106 . -1) (undo-tree-id45107 . -1) (undo-tree-id45108 . -1) (undo-tree-id45109 . -1) (undo-tree-id45110 . -1) (undo-tree-id45111 . -1) (undo-tree-id45112 . -1) (undo-tree-id45113 . -1) (undo-tree-id45114 . -1) (undo-tree-id45115 . -1) (undo-tree-id45116 . -1) (undo-tree-id45117 . -1) (undo-tree-id45118 . -1) (undo-tree-id45119 . -1) (undo-tree-id45120 . -1) (undo-tree-id45121 . -1) (undo-tree-id45122 . -1) (undo-tree-id45123 . -1) (undo-tree-id45124 . -1) (undo-tree-id45125 . -1) (undo-tree-id45126 . -1) (undo-tree-id45127 . -1) (undo-tree-id45128 . -1) (undo-tree-id45129 . -1) (undo-tree-id45130 . -1) (undo-tree-id45131 . -1) (undo-tree-id45132 . -1) (undo-tree-id45133 . -1) (undo-tree-id45134 . -1) (undo-tree-id45135 . -1) (undo-tree-id45136 . -1) (undo-tree-id45137 . -1) (undo-tree-id45138 . -1) (undo-tree-id45139 . -1) (undo-tree-id45140 . -1) (undo-tree-id45141 . -1) (undo-tree-id45142 . -1) (undo-tree-id45143 . -1) (undo-tree-id45144 . -1) (undo-tree-id45145 . -1) (undo-tree-id45146 . -1) (undo-tree-id45147 . -1) (undo-tree-id45148 . -1) (undo-tree-id45149 . -1) (undo-tree-id45150 . -1) (undo-tree-id45151 . -1) (undo-tree-id45152 . -1) (undo-tree-id45153 . -1) (undo-tree-id45154 . -1) (undo-tree-id45155 . -1) (undo-tree-id45156 . -1) (undo-tree-id45157 . -1) (undo-tree-id45158 . -1) (undo-tree-id45159 . -1) (undo-tree-id45160 . -1) (undo-tree-id45161 . -1) (undo-tree-id45162 . -1) (undo-tree-id45163 . -1) (undo-tree-id45164 . -1) (undo-tree-id45165 . -1) (undo-tree-id45166 . -1) (undo-tree-id45167 . -1) (undo-tree-id45168 . -1) (undo-tree-id45169 . -1) (undo-tree-id45170 . -1) (undo-tree-id45171 . -1) (undo-tree-id45172 . -1) (undo-tree-id45173 . -1) (undo-tree-id45174 . -1) (undo-tree-id45175 . -1) (undo-tree-id45176 . -1) (undo-tree-id45177 . -1) (undo-tree-id45178 . -1) (undo-tree-id45179 . -1) (undo-tree-id45180 . -1) (undo-tree-id45181 . -1) (undo-tree-id45182 . -1) (undo-tree-id45183 . -1) (undo-tree-id45184 . -1) (undo-tree-id45185 . -1) (undo-tree-id45186 . -1) (undo-tree-id45187 . -1) (undo-tree-id45188 . -1) (undo-tree-id45189 . -1) (undo-tree-id45190 . -1) (undo-tree-id45191 . -1) (undo-tree-id45192 . -1) (undo-tree-id45193 . -1) (undo-tree-id45194 . -1) (undo-tree-id45195 . -1) (undo-tree-id45196 . -1) (undo-tree-id45197 . -1) (undo-tree-id45198 . -1) (undo-tree-id45199 . -1) (undo-tree-id45200 . -1) (undo-tree-id45201 . -1) (undo-tree-id45202 . -1) (undo-tree-id45203 . -1) (undo-tree-id45204 . -1) (undo-tree-id45205 . -1) (undo-tree-id45206 . -1) (undo-tree-id45207 . -1) (undo-tree-id45208 . -1) (undo-tree-id45209 . -1) (undo-tree-id45210 . -1) (undo-tree-id45211 . -1) (undo-tree-id45212 . -1) (undo-tree-id45213 . -1) (undo-tree-id45214 . -1) (undo-tree-id45215 . -1) (undo-tree-id45216 . -1) (undo-tree-id45217 . -1) (undo-tree-id45218 . -1) (undo-tree-id45219 . -1) (undo-tree-id45220 . -1) (undo-tree-id45221 . -1) (undo-tree-id45222 . -1) (undo-tree-id45223 . -1) (undo-tree-id45224 . -1) (undo-tree-id45225 . -1) (undo-tree-id45226 . -1) (undo-tree-id45227 . -1) (undo-tree-id45228 . -1) (undo-tree-id45229 . -1) (undo-tree-id45230 . -1) (undo-tree-id45231 . -1) (undo-tree-id45232 . -1) (undo-tree-id45233 . -1) (undo-tree-id45234 . -1) (undo-tree-id45235 . -1) (undo-tree-id45236 . -1) (undo-tree-id45237 . -1) (undo-tree-id45238 . -1) (undo-tree-id45239 . -1) (undo-tree-id45240 . -1) (undo-tree-id45241 . -1) (undo-tree-id45242 . -1) (undo-tree-id45243 . -1) (undo-tree-id45244 . -1) (undo-tree-id45245 . -1) (undo-tree-id45246 . -1) (undo-tree-id45247 . -1) (undo-tree-id45248 . -1) (undo-tree-id45249 . -1) (undo-tree-id45250 . -1) (undo-tree-id45251 . -1) (undo-tree-id45252 . -1) (undo-tree-id45253 . -1) (undo-tree-id45254 . -1) (undo-tree-id45255 . -1) (undo-tree-id45256 . -1) (undo-tree-id45257 . -1) (undo-tree-id45258 . -1) (undo-tree-id45259 . -1) (undo-tree-id45260 . -1) (undo-tree-id45261 . -1) (undo-tree-id45262 . -1) (undo-tree-id45263 . -1) (undo-tree-id45264 . -1) (undo-tree-id45265 . -1) (4335 . 4336) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4335) (undo-tree-id45266 . -1) (4235 . 4236) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4235) (undo-tree-id45267 . -1) (4137 . 4138) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4137) (undo-tree-id45268 . -1) (4032 . 4033) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4032) (undo-tree-id45269 . -1) (undo-tree-id45270 . -1) (undo-tree-id45271 . -1) (undo-tree-id45272 . -1) (undo-tree-id45273 . -1) (undo-tree-id45274 . -1) (undo-tree-id45275 . -1) (undo-tree-id45276 . -1) (undo-tree-id45277 . -1) (undo-tree-id45278 . -1) (undo-tree-id45279 . -1) (undo-tree-id45280 . -1) (undo-tree-id45281 . -1) (undo-tree-id45282 . -1) (undo-tree-id45283 . -1) (undo-tree-id45284 . -1) (undo-tree-id45285 . -1) (3920 . 3921) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3920) (undo-tree-id45286 . -1) 3818) nil (25774 61450 905650 954000) 0 nil])
([nil nil ((3818 . 3820)) nil (25774 61450 905509 444000) 0 nil])
([nil nil ((3818 . 5698) (#("- You can think of a context vector as an augmented version of the input vector, 𝑥𝑥 (𝑖𝑖). In other words, the 𝑐𝑐𝑖𝑖 input vector also incorporates information from all other input elements via an attention mechanism. As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs. In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
- The first RNN (RNN #1) of the attention-based RNN in Figure 16.3 is a bidirectional RNN that generates context vectors, 𝑐𝑐𝑖𝑖 ." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 89 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 89 90 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 90 194 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 194 195 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 195 292 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 292 293 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 293 326 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 326 373 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 373 374 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 374 375 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 375 392 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 392 393 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 393 450 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 450 451 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 451 555 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 555 556 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 556 661 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 661 662 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 662 760 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 760 761 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 761 857 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 857 858 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 858 893 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 893 926 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 926 927 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 927 1023 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1023 1024 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1024 1122 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1122 1123 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1123 1232 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1232 1233 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1233 1332 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1332 1333 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1333 1336 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1336 1337 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1337 1340 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1340 1341 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1341 1427 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1427 1441 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1441 1442 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1442 1543 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1543 1544 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1544 1607 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1607 1608 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1608 1708 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1708 1709 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1709 1750 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1750 1751 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1751 1752 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1752 1753 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil composition (0 1 [8226])) 1753 1754 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1754 1856 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1856 1857 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1857 1880 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 3818) (undo-tree-id43530 . 126) (undo-tree-id43531 . -1880) (undo-tree-id43532 . -1816) (undo-tree-id43533 . -1880) (undo-tree-id43534 . -1880) (undo-tree-id43535 . -1880) (undo-tree-id43536 . -1880) (undo-tree-id43537 . -1880) (undo-tree-id43538 . -1880) (undo-tree-id43539 . -1880) (undo-tree-id43540 . -1880) (undo-tree-id43541 . -1880) (undo-tree-id43542 . -1880) (undo-tree-id43543 . -1880) (undo-tree-id43544 . -1880) (undo-tree-id43545 . -1880) (undo-tree-id43546 . -1880) (undo-tree-id43547 . -1880) (undo-tree-id43548 . -1880) (undo-tree-id43549 . -1880) (undo-tree-id43550 . -1880) (undo-tree-id43551 . -1880) (undo-tree-id43552 . -1880) (undo-tree-id43553 . -1880) (undo-tree-id43554 . -1880) (undo-tree-id43555 . -1880) (undo-tree-id43556 . -1880) (undo-tree-id43557 . -1880) (undo-tree-id43558 . -1880) (undo-tree-id43559 . -1880) (undo-tree-id43560 . -1880) (undo-tree-id43561 . -1880) (undo-tree-id43562 . -1880) (undo-tree-id43563 . -1880) (undo-tree-id43564 . -1880) (undo-tree-id43565 . -1880) (undo-tree-id43566 . -1880) (undo-tree-id43567 . -1880) (undo-tree-id43568 . -1880) (undo-tree-id43569 . -1880) (undo-tree-id43570 . -1880) (undo-tree-id43571 . -1880) (undo-tree-id43572 . -1880) (undo-tree-id43573 . -1880) (undo-tree-id43574 . -1880) (undo-tree-id43575 . -1880) (undo-tree-id43576 . -1880) (undo-tree-id43577 . -1880) (undo-tree-id43578 . -1880) (undo-tree-id43579 . -1880) (undo-tree-id43580 . -1880) (undo-tree-id43581 . -1880) (undo-tree-id43582 . -1880) (undo-tree-id43583 . -1880) (undo-tree-id43584 . -1880) (undo-tree-id43585 . -1880) (undo-tree-id43586 . -1880) (undo-tree-id43587 . -1880) (undo-tree-id43588 . -1880) (undo-tree-id43589 . -1880) (undo-tree-id43590 . -1880) (undo-tree-id43591 . -1880) (undo-tree-id43592 . -1880) (undo-tree-id43593 . -1880) (undo-tree-id43594 . -1880) (undo-tree-id43595 . -1880) (undo-tree-id43596 . -1880) (undo-tree-id43597 . -1880) (undo-tree-id43598 . -1880) (undo-tree-id43599 . -1880) (undo-tree-id43600 . -1880) (undo-tree-id43601 . -1880) (undo-tree-id43602 . -1880) (undo-tree-id43603 . -1880) (undo-tree-id43604 . -1880) (undo-tree-id43605 . -1880) (undo-tree-id43606 . -1880) (undo-tree-id43607 . -1880) (undo-tree-id43608 . -1880) (undo-tree-id43609 . -1880) (undo-tree-id43610 . -1880) (undo-tree-id43611 . -1880) (undo-tree-id43612 . -1880) (undo-tree-id43613 . -1880) (undo-tree-id43614 . -1880) (undo-tree-id43615 . -1880) (undo-tree-id43616 . -1880) (undo-tree-id43617 . -1880) (undo-tree-id43618 . -1880) (undo-tree-id43619 . -1880) (undo-tree-id43620 . -1880) (undo-tree-id43621 . -1880) (undo-tree-id43622 . -1880) (undo-tree-id43623 . -1880) (undo-tree-id43624 . -1880) (undo-tree-id43625 . -1880) (undo-tree-id43626 . -1880) (undo-tree-id43627 . -1880) (undo-tree-id43628 . -1880) (undo-tree-id43629 . -1880) (undo-tree-id43630 . -1880) (undo-tree-id43631 . -1880) (undo-tree-id43632 . -1880) (undo-tree-id43633 . -1880) (undo-tree-id43634 . -1880) (undo-tree-id43635 . -1880) (undo-tree-id43636 . -1880) (undo-tree-id43637 . -1880) (undo-tree-id43638 . -1880) (undo-tree-id43639 . -1880) (undo-tree-id43640 . -1880) (undo-tree-id43641 . -1880) (undo-tree-id43642 . -1880) (undo-tree-id43643 . -1880) (undo-tree-id43644 . -1880) (undo-tree-id43645 . -1880) (undo-tree-id43646 . -1880) (undo-tree-id43647 . -1880) (undo-tree-id43648 . -1880) (undo-tree-id43649 . -1880) (undo-tree-id43650 . -1880) (undo-tree-id43651 . -1880) (undo-tree-id43652 . -1880) (undo-tree-id43653 . -1880) (undo-tree-id43654 . -1880) (undo-tree-id43655 . -1880) (undo-tree-id43656 . -1880) (undo-tree-id43657 . -1880) (undo-tree-id43658 . -1880) (undo-tree-id43659 . -1880) (undo-tree-id43660 . -1880) (undo-tree-id43661 . -1880) (undo-tree-id43662 . -1880) (undo-tree-id43663 . -1880) (undo-tree-id43664 . -1880) (undo-tree-id43665 . -1880) (undo-tree-id43666 . -1880) (undo-tree-id43667 . -1880) (undo-tree-id43668 . -1880) (undo-tree-id43669 . -1880) (undo-tree-id43670 . -1880) (undo-tree-id43671 . -1880) (undo-tree-id43672 . -1880) (undo-tree-id43673 . -1880) (undo-tree-id43674 . -1880) (undo-tree-id43675 . -1880) (undo-tree-id43676 . -1880) (undo-tree-id43677 . -1880) (undo-tree-id43678 . -1880) (undo-tree-id43679 . -1880) (undo-tree-id43680 . -1880) (undo-tree-id43681 . -1880) (undo-tree-id43682 . -1880) (undo-tree-id43683 . -1880) (undo-tree-id43684 . -1880) (undo-tree-id43685 . -1880) (undo-tree-id43686 . -1880) (undo-tree-id43687 . -1880) (undo-tree-id43688 . -1880) (undo-tree-id43689 . -1880) (undo-tree-id43690 . -1880) (undo-tree-id43691 . -1880) (undo-tree-id43692 . -1880) (undo-tree-id43693 . -1880) (undo-tree-id43694 . -1880) (undo-tree-id43695 . -1880) (undo-tree-id43696 . -1880) (undo-tree-id43697 . -1880) (undo-tree-id43698 . -1880) (undo-tree-id43699 . -1880) (undo-tree-id43700 . -1880) (undo-tree-id43701 . -1880) (undo-tree-id43702 . -1880) (undo-tree-id43703 . -1880) (undo-tree-id43704 . -1880) (undo-tree-id43705 . -1880) (undo-tree-id43706 . -1880) (undo-tree-id43707 . -1880) (undo-tree-id43708 . -1880) (undo-tree-id43709 . -1880) (undo-tree-id43710 . -1880) (undo-tree-id43711 . -1880) (undo-tree-id43712 . -1880) (undo-tree-id43713 . -1880) (undo-tree-id43714 . -1880) (undo-tree-id43715 . -1880) (undo-tree-id43716 . -1880) (undo-tree-id43717 . -1880) (undo-tree-id43718 . -1880) (undo-tree-id43719 . -1880) (undo-tree-id43720 . -1880) (undo-tree-id43721 . -1880) (undo-tree-id43722 . -1880) (undo-tree-id43723 . -1880) (undo-tree-id43724 . -1880) (undo-tree-id43725 . -1880) (undo-tree-id43726 . -1880) (undo-tree-id43727 . -1880) (undo-tree-id43728 . -1880) (undo-tree-id43729 . -1880) (undo-tree-id43730 . -1880) (undo-tree-id43731 . -1880) (undo-tree-id43732 . -1880) (undo-tree-id43733 . -1880) (undo-tree-id43734 . -1880) (undo-tree-id43735 . -1880) (undo-tree-id43736 . -1880) (undo-tree-id43737 . -1880) (undo-tree-id43738 . -1880) (undo-tree-id43739 . -1880) (undo-tree-id43740 . -1880) (undo-tree-id43741 . -1880) (undo-tree-id43742 . -1880) (undo-tree-id43743 . -1880) (undo-tree-id43744 . -1880) (undo-tree-id43745 . -1880) (undo-tree-id43746 . -1880) (undo-tree-id43747 . -1880) (undo-tree-id43748 . -1880) (undo-tree-id43749 . -1880) (undo-tree-id43750 . -1880) (undo-tree-id43751 . -1880) (undo-tree-id43752 . -1880) (undo-tree-id43753 . -1880) (undo-tree-id43754 . -1880) (undo-tree-id43755 . -1880) (undo-tree-id43756 . -1880) (undo-tree-id43757 . -1880) (undo-tree-id43758 . -1880) (undo-tree-id43759 . -1880) (undo-tree-id43760 . -1880) (undo-tree-id43761 . -1880) (undo-tree-id43762 . -1880) (undo-tree-id43763 . -1880) (undo-tree-id43764 . -1880) (undo-tree-id43765 . -1880) (undo-tree-id43766 . -1880) (undo-tree-id43767 . -1880) (undo-tree-id43768 . -1880) (undo-tree-id43769 . -1880) (undo-tree-id43770 . -1880) (undo-tree-id43771 . -1880) (undo-tree-id43772 . -1880) (undo-tree-id43773 . -1880) (undo-tree-id43774 . -1880) (undo-tree-id43775 . -1880) (undo-tree-id43776 . -1880) (undo-tree-id43777 . -1880) (undo-tree-id43778 . -1880) (undo-tree-id43779 . -1880) (undo-tree-id43780 . -1880) (undo-tree-id43781 . -1880) (undo-tree-id43782 . -1880) (undo-tree-id43783 . -1880) (undo-tree-id43784 . -1880) (undo-tree-id43785 . -1880) (undo-tree-id43786 . -1880) (undo-tree-id43787 . -1880) (undo-tree-id43788 . -1880) (undo-tree-id43789 . -1880) (undo-tree-id43790 . -1880) (undo-tree-id43791 . -1880) (undo-tree-id43792 . -1880) (undo-tree-id43793 . -1880) (undo-tree-id43794 . -1880) (undo-tree-id43795 . -1880) (undo-tree-id43796 . -1880) (undo-tree-id43797 . -1880) (undo-tree-id43798 . -1880) (undo-tree-id43799 . -1880) (undo-tree-id43800 . -1880) (undo-tree-id43801 . -1880) (undo-tree-id43802 . -1880) (undo-tree-id43803 . -1880) (undo-tree-id43804 . -1880) (undo-tree-id43805 . -1880) (undo-tree-id43806 . -1880) (undo-tree-id43807 . -1880) (undo-tree-id43808 . -1880) (undo-tree-id43809 . -1880) (undo-tree-id43810 . -1880) (undo-tree-id43811 . -1880) (undo-tree-id43812 . -1880) (undo-tree-id43813 . -1880) (undo-tree-id43814 . -1880) (undo-tree-id43815 . -1880) (undo-tree-id43816 . -1880) (undo-tree-id43817 . -1880) (undo-tree-id43818 . -1880) (undo-tree-id43819 . -1880) (undo-tree-id43820 . -1880) (undo-tree-id43821 . -1880) (undo-tree-id43822 . -1880) (undo-tree-id43823 . -1880) (undo-tree-id43824 . -1880) (undo-tree-id43825 . -1880) (undo-tree-id43826 . -1880) (undo-tree-id43827 . -1880) (undo-tree-id43828 . -1880) (undo-tree-id43829 . -1880) (undo-tree-id43830 . -1880) (undo-tree-id43831 . -1880) (undo-tree-id43832 . -1880) (undo-tree-id43833 . -1880) (undo-tree-id43834 . -1880) (undo-tree-id43835 . -1880) (undo-tree-id43836 . -1880) (undo-tree-id43837 . -1880) (undo-tree-id43838 . -1880) (undo-tree-id43839 . -1880) (undo-tree-id43840 . -1880) (undo-tree-id43841 . -1880) (undo-tree-id43842 . -1880) (undo-tree-id43843 . -1880) (undo-tree-id43844 . -1880) (undo-tree-id43845 . -1880) (undo-tree-id43846 . -1880) (undo-tree-id43847 . -1880) (undo-tree-id43848 . -1880) (undo-tree-id43849 . -1880) (undo-tree-id43850 . -1880) (undo-tree-id43851 . -1880) (undo-tree-id43852 . -1880) (undo-tree-id43853 . -1880) (undo-tree-id43854 . -1880) (undo-tree-id43855 . -1880) (undo-tree-id43856 . -1880) (undo-tree-id43857 . -1880) (undo-tree-id43858 . -1880) (undo-tree-id43859 . -1880) (undo-tree-id43860 . -1880) (undo-tree-id43861 . -1880) (undo-tree-id43862 . -1880) (undo-tree-id43863 . -1880) (undo-tree-id43864 . -1880) (undo-tree-id43865 . -1880) (undo-tree-id43866 . -1880) (undo-tree-id43867 . -1880) (undo-tree-id43868 . -1880) (undo-tree-id43869 . -1880) (undo-tree-id43870 . -1880) (undo-tree-id43871 . -1880) (undo-tree-id43872 . -1880) (undo-tree-id43873 . -1880) (undo-tree-id43874 . -1880) (undo-tree-id43875 . -1880) (undo-tree-id43876 . -1880) (undo-tree-id43877 . -1880) (undo-tree-id43878 . -1880) (undo-tree-id43879 . -1880) (undo-tree-id43880 . -1880) (undo-tree-id43881 . -1880) (undo-tree-id43882 . -1880) (undo-tree-id43883 . -1880) (undo-tree-id43884 . -1880) (undo-tree-id43885 . -1880) (undo-tree-id43886 . -1880) (undo-tree-id43887 . -1880) (undo-tree-id43888 . -1880) (undo-tree-id43889 . -1880) (undo-tree-id43890 . -1880) (undo-tree-id43891 . -1880) (undo-tree-id43892 . -1880) (undo-tree-id43893 . -1880) (undo-tree-id43894 . -1880) (undo-tree-id43895 . -1880) (undo-tree-id43896 . -1880) (undo-tree-id43897 . -1880) (undo-tree-id43898 . -1880) (undo-tree-id43899 . -1880) (undo-tree-id43900 . -1880) (undo-tree-id43901 . -1880) (undo-tree-id43902 . -1880) (undo-tree-id43903 . -1880) (undo-tree-id43904 . -1880) (undo-tree-id43905 . -1880) (undo-tree-id43906 . -1880) (undo-tree-id43907 . -1880) (undo-tree-id43908 . -1880) (undo-tree-id43909 . -1880) (undo-tree-id43910 . -1880) (undo-tree-id43911 . -1880) (undo-tree-id43912 . -1880) (undo-tree-id43913 . -1880) (undo-tree-id43914 . -1880) (undo-tree-id43915 . -1880) (undo-tree-id43916 . -1880) (undo-tree-id43917 . -1880) (undo-tree-id43918 . -1880) (undo-tree-id43919 . -1856) (undo-tree-id43920 . -1856) (undo-tree-id43921 . -1856) (undo-tree-id43922 . -1856) (undo-tree-id43923 . -1856) (undo-tree-id43924 . -1856) (undo-tree-id43925 . -1856) (undo-tree-id43926 . -1856) (undo-tree-id43927 . -1856) (undo-tree-id43928 . -1856) (undo-tree-id43929 . -1856) (undo-tree-id43930 . -1856) (undo-tree-id43931 . -1856) (undo-tree-id43932 . -1856) (undo-tree-id43933 . -1856) (undo-tree-id43934 . -1856) (undo-tree-id43935 . -1856) (undo-tree-id43936 . -1856) (undo-tree-id43937 . -1856) (undo-tree-id43938 . -1856) (undo-tree-id43939 . -1856) (undo-tree-id43940 . -1856) (undo-tree-id43941 . -1880) (undo-tree-id43942 . -1880) (undo-tree-id43943 . -1880) (undo-tree-id43944 . -1880) (undo-tree-id43945 . -1880) (undo-tree-id43946 . -1880) (undo-tree-id43947 . -1880) (undo-tree-id43948 . -1880) (undo-tree-id43949 . -1880) (undo-tree-id43950 . -1880) (undo-tree-id43951 . -1880) (undo-tree-id43952 . -1880) (undo-tree-id43953 . -1880) (undo-tree-id43954 . -1880) (undo-tree-id43955 . -1880) (undo-tree-id43956 . -1880) (undo-tree-id43957 . -1880) (undo-tree-id43958 . -1880) (undo-tree-id43959 . -1880) (undo-tree-id43960 . -1880) (undo-tree-id43961 . -1880) (undo-tree-id43962 . -1880) (undo-tree-id43963 . -1880) (undo-tree-id43964 . -1880) (undo-tree-id43965 . -1880) (undo-tree-id43966 . -1880) (undo-tree-id43967 . -1880) (undo-tree-id43968 . -1880) (undo-tree-id43969 . -1880) (undo-tree-id43970 . -1880) (undo-tree-id43971 . -1880) (undo-tree-id43972 . -1880) (undo-tree-id43973 . -1880) (undo-tree-id43974 . -1880) (undo-tree-id43975 . -1880) (undo-tree-id43976 . -1880) (undo-tree-id43977 . -1880) (undo-tree-id43978 . -1880) (undo-tree-id43979 . -1880) (undo-tree-id43980 . -1880) (undo-tree-id43981 . -1880) (undo-tree-id43982 . -1880) (undo-tree-id43983 . -1880) (undo-tree-id43984 . -1880) (undo-tree-id43985 . -1880) (undo-tree-id43986 . -1880) (undo-tree-id43987 . -1880) (undo-tree-id43988 . -1880) (undo-tree-id43989 . -1880) (undo-tree-id43990 . -1880) (undo-tree-id43991 . -1880) (undo-tree-id43992 . -1880) (undo-tree-id43993 . -1880) (undo-tree-id43994 . -1880) (undo-tree-id43995 . -1880) (undo-tree-id43996 . -1880) (undo-tree-id43997 . -1880) (undo-tree-id43998 . -1880) (undo-tree-id43999 . -1880) (undo-tree-id44000 . -1880) (undo-tree-id44001 . -1880) (undo-tree-id44002 . -1880) (undo-tree-id44003 . -1880) (undo-tree-id44004 . -1880) (undo-tree-id44005 . -1880) (undo-tree-id44006 . -1880) (undo-tree-id44007 . -1880) (undo-tree-id44008 . -1880) (undo-tree-id44009 . -1880) (undo-tree-id44010 . -1880) (undo-tree-id44011 . -1880) (undo-tree-id44012 . -1880) (undo-tree-id44013 . -1880) (undo-tree-id44014 . -1880) (undo-tree-id44015 . -1880) (undo-tree-id44016 . -1880) (undo-tree-id44017 . -1880) (undo-tree-id44018 . -1880) (undo-tree-id44019 . -1880) (undo-tree-id44020 . -1880) (undo-tree-id44021 . -1880) (undo-tree-id44022 . -1880) (undo-tree-id44023 . -1880) (undo-tree-id44024 . -1880) (undo-tree-id44025 . -1880) (undo-tree-id44026 . -1880) (undo-tree-id44027 . -1880) (undo-tree-id44028 . -1880) (undo-tree-id44029 . -1880) (undo-tree-id44030 . -1880) (undo-tree-id44031 . -1880) (undo-tree-id44032 . -1880) (undo-tree-id44033 . -1880) (undo-tree-id44034 . -1880) (undo-tree-id44035 . -1880) (undo-tree-id44036 . -1880) (undo-tree-id44037 . -1880) (undo-tree-id44038 . -1880) (undo-tree-id44039 . -1880) (undo-tree-id44040 . -1880) (undo-tree-id44041 . -1880) (undo-tree-id44042 . -1880) (undo-tree-id44043 . -1880) (undo-tree-id44044 . -1880) (undo-tree-id44045 . -1880) (undo-tree-id44046 . -1880) (undo-tree-id44047 . -1880) (undo-tree-id44048 . -1880) (undo-tree-id44049 . -1880) (undo-tree-id44050 . -1880) (undo-tree-id44051 . -1880) (undo-tree-id44052 . -1880) (undo-tree-id44053 . -1880) (undo-tree-id44054 . -1880) (undo-tree-id44055 . -1880) (undo-tree-id44056 . -1880) (undo-tree-id44057 . -1880) (undo-tree-id44058 . -1880) (undo-tree-id44059 . -1880) (undo-tree-id44060 . -1880) (undo-tree-id44061 . -1880) (undo-tree-id44062 . -1880) (undo-tree-id44063 . -1880) (undo-tree-id44064 . -1880) (undo-tree-id44065 . -1880) (undo-tree-id44066 . -1880) (undo-tree-id44067 . -1880) (undo-tree-id44068 . -1880) (undo-tree-id44069 . -1880) (undo-tree-id44070 . -1880) (undo-tree-id44071 . -1880) (undo-tree-id44072 . -1880) (undo-tree-id44073 . -1880) (undo-tree-id44074 . -1880) (undo-tree-id44075 . -1880) (undo-tree-id44076 . -1880) (undo-tree-id44077 . -1880) (undo-tree-id44078 . -1880) (undo-tree-id44079 . -1880) (undo-tree-id44080 . -1880) (undo-tree-id44081 . -1880) (undo-tree-id44082 . -1880) (undo-tree-id44083 . -1880) (undo-tree-id44084 . -1880) (undo-tree-id44085 . -1880) (undo-tree-id44086 . -1880) (undo-tree-id44087 . -1880) (undo-tree-id44088 . -1880) (undo-tree-id44089 . -1880) (undo-tree-id44090 . -1880) (undo-tree-id44091 . -1880) (undo-tree-id44092 . -1880) (undo-tree-id44093 . -1880) (undo-tree-id44094 . -1880) (undo-tree-id44095 . -1880) (undo-tree-id44096 . -1880) (undo-tree-id44097 . -1880) (undo-tree-id44098 . -1880) (undo-tree-id44099 . -1880) (undo-tree-id44100 . -1880) (undo-tree-id44101 . -1880) (undo-tree-id44102 . -1880) (undo-tree-id44103 . -1880) (undo-tree-id44104 . -1880) (undo-tree-id44105 . -1880) (undo-tree-id44106 . -1880) (undo-tree-id44107 . -1880) (undo-tree-id44108 . -1880) (undo-tree-id44109 . -1880) (undo-tree-id44110 . -1880) (undo-tree-id44111 . -1880) (undo-tree-id44112 . -1880) (undo-tree-id44113 . -1880) (undo-tree-id44114 . -1880) (undo-tree-id44115 . -1880) (undo-tree-id44116 . -1880) (undo-tree-id44117 . -1880) (undo-tree-id44118 . -1880) (undo-tree-id44119 . -1880) (undo-tree-id44120 . -1880) (undo-tree-id44121 . -1880) (undo-tree-id44122 . -1880) (undo-tree-id44123 . -1880) (undo-tree-id44124 . -1880) (undo-tree-id44125 . -1880) (undo-tree-id44126 . -1880) (undo-tree-id44127 . -1880) (undo-tree-id44128 . -1880) (undo-tree-id44129 . -1880) (undo-tree-id44130 . -1880) (undo-tree-id44131 . -1880) (undo-tree-id44132 . -1880) (undo-tree-id44133 . -1880) (undo-tree-id44134 . -1880) (undo-tree-id44135 . -1880) (undo-tree-id44136 . -1880) (undo-tree-id44137 . -1880) (undo-tree-id44138 . -1880) (undo-tree-id44139 . -1880) (undo-tree-id44140 . -1880) (undo-tree-id44141 . -1880) (undo-tree-id44142 . -1880) (undo-tree-id44143 . -1880) (undo-tree-id44144 . -1880) (undo-tree-id44145 . -1880) (undo-tree-id44146 . -1880) (undo-tree-id44147 . -1880) (undo-tree-id44148 . -1880) (undo-tree-id44149 . -1880) (undo-tree-id44150 . -1880) (undo-tree-id44151 . -1880) (undo-tree-id44152 . -1880) (undo-tree-id44153 . -1880) (undo-tree-id44154 . -1880) (undo-tree-id44155 . -1880) (undo-tree-id44156 . -1880) (undo-tree-id44157 . -1880) (undo-tree-id44158 . -1880) (undo-tree-id44159 . -1880) (undo-tree-id44160 . -1880) (undo-tree-id44161 . -1880) (undo-tree-id44162 . -1880) (undo-tree-id44163 . -1880) (undo-tree-id44164 . -1880) (undo-tree-id44165 . -1880) (undo-tree-id44166 . -1880) (undo-tree-id44167 . -1880) (undo-tree-id44168 . -1880) (undo-tree-id44169 . -1880) (undo-tree-id44170 . -1880) (undo-tree-id44171 . -1880) (undo-tree-id44172 . -1880) (undo-tree-id44173 . -1880) (undo-tree-id44174 . -1880) (undo-tree-id44175 . -1880) (undo-tree-id44176 . -1880) (undo-tree-id44177 . -1880) (undo-tree-id44178 . -1880) (undo-tree-id44179 . -1880) (undo-tree-id44180 . -1880) (undo-tree-id44181 . -1880) (undo-tree-id44182 . -1880) (undo-tree-id44183 . -1880) (undo-tree-id44184 . -1880) (undo-tree-id44185 . -1880) (undo-tree-id44186 . -1880) (undo-tree-id44187 . -1880) (undo-tree-id44188 . -1880) (undo-tree-id44189 . -1880) (undo-tree-id44190 . -1880) (undo-tree-id44191 . -1880) (undo-tree-id44192 . -1880) (undo-tree-id44193 . -1880) (undo-tree-id44194 . -1880) (undo-tree-id44195 . -1880) (undo-tree-id44196 . -1880) (undo-tree-id44197 . -1880) (undo-tree-id44198 . -1880) (undo-tree-id44199 . -1880) (undo-tree-id44200 . -1880) (undo-tree-id44201 . -1880) (undo-tree-id44202 . -1880) (undo-tree-id44203 . -1880) (undo-tree-id44204 . -1880) (undo-tree-id44205 . -1880) (undo-tree-id44206 . -1880) (undo-tree-id44207 . -1880) (undo-tree-id44208 . -1880) (undo-tree-id44209 . -1880) (undo-tree-id44210 . -1880) (undo-tree-id44211 . -1880) (undo-tree-id44212 . -1880) (undo-tree-id44213 . -1880) (undo-tree-id44214 . -1880) (undo-tree-id44215 . -1880) (undo-tree-id44216 . -1880) (undo-tree-id44217 . -1880) (undo-tree-id44218 . -1880) (undo-tree-id44219 . -1880) (undo-tree-id44220 . -1880) (undo-tree-id44221 . -1880) (undo-tree-id44222 . -1880) (undo-tree-id44223 . -1880) (undo-tree-id44224 . -1880) (undo-tree-id44225 . -1753) (undo-tree-id44226 . -1753) (undo-tree-id44227 . -1753) (undo-tree-id44228 . -1753) (undo-tree-id44229 . -1753) (undo-tree-id44230 . -1753) (undo-tree-id44231 . -1753) (undo-tree-id44232 . -1753) (undo-tree-id44233 . -1753) (undo-tree-id44234 . -1753) (undo-tree-id44235 . -1753) (undo-tree-id44236 . -1754) (undo-tree-id44237 . -1754) (undo-tree-id44238 . -1754) (undo-tree-id44239 . -1754) (undo-tree-id44240 . -1754) (undo-tree-id44241 . -1754) (undo-tree-id44242 . -1754) (undo-tree-id44243 . -1754) (undo-tree-id44244 . -1754) (undo-tree-id44245 . -1754) (undo-tree-id44246 . -1754) (undo-tree-id44247 . -1754) (undo-tree-id44248 . -1754) (undo-tree-id44249 . -1754) (undo-tree-id44250 . -1754) (undo-tree-id44251 . -1754) (undo-tree-id44252 . -1754) (undo-tree-id44253 . -1754) (undo-tree-id44254 . -1754) (undo-tree-id44255 . -1754) (undo-tree-id44256 . -1754) (undo-tree-id44257 . -1754) (undo-tree-id44258 . -1753) (undo-tree-id44259 . -1753) (undo-tree-id44260 . -1753) (undo-tree-id44261 . -1753) (undo-tree-id44262 . -1753) (undo-tree-id44263 . -1753) (undo-tree-id44264 . -1753) (undo-tree-id44265 . -1753) (undo-tree-id44266 . -1753) (undo-tree-id44267 . -1753) (undo-tree-id44268 . -1753) (undo-tree-id44269 . -1753) (undo-tree-id44270 . -1753) (undo-tree-id44271 . -1753) (undo-tree-id44272 . -1753) (undo-tree-id44273 . -1753) (undo-tree-id44274 . -1753) (undo-tree-id44275 . -1753) (undo-tree-id44276 . -1753) (undo-tree-id44277 . -1753) (undo-tree-id44278 . -1753) (undo-tree-id44279 . -1753) (undo-tree-id44280 . -1753) (undo-tree-id44281 . -1753) (undo-tree-id44282 . -1753) (undo-tree-id44283 . -1753) (undo-tree-id44284 . -1753) (undo-tree-id44285 . -1753) (undo-tree-id44286 . -1753) (undo-tree-id44287 . -1753) (undo-tree-id44288 . -1753) (undo-tree-id44289 . -1753) (undo-tree-id44290 . -1753) (undo-tree-id44291 . -1753) (undo-tree-id44292 . -1753) (undo-tree-id44293 . -1753) (undo-tree-id44294 . -1753) (undo-tree-id44295 . -1753) (undo-tree-id44296 . -1753) (undo-tree-id44297 . -1753) (undo-tree-id44298 . -1753) (undo-tree-id44299 . -1753) (undo-tree-id44300 . -1753) (undo-tree-id44301 . -1753) (undo-tree-id44302 . -1753) (undo-tree-id44303 . -1753) (undo-tree-id44304 . -1753) (undo-tree-id44305 . -1753) (undo-tree-id44306 . -1753) (undo-tree-id44307 . -1753) (undo-tree-id44308 . -1880) (undo-tree-id44309 . -1816) (undo-tree-id44310 . -1816) (undo-tree-id44311 . -1816) (undo-tree-id44312 . -1816) (undo-tree-id44313 . -1816) (undo-tree-id44314 . -1816) (undo-tree-id44315 . -1816) (undo-tree-id44316 . -1816) (undo-tree-id44317 . -1816) (undo-tree-id44318 . -1816) (undo-tree-id44319 . -1816) (undo-tree-id44320 . -1816) (undo-tree-id44321 . -1816) (undo-tree-id44322 . -1816) (undo-tree-id44323 . -1816) (undo-tree-id44324 . -1816) (undo-tree-id44325 . -1816) (undo-tree-id44326 . -1816) (undo-tree-id44327 . -1816) (undo-tree-id44328 . -1816) (undo-tree-id44329 . -1816) (undo-tree-id44330 . -1816) (undo-tree-id44331 . -1816) (undo-tree-id44332 . -1816) (undo-tree-id44333 . -1816) (undo-tree-id44334 . -1816) (undo-tree-id44335 . -1753) (undo-tree-id44336 . -1879) (undo-tree-id44337 . -1879) (undo-tree-id44338 . -1879) (undo-tree-id44339 . -1879) (undo-tree-id44340 . -1879) (undo-tree-id44341 . -1879) (undo-tree-id44342 . -1879) (undo-tree-id44343 . -1879) (undo-tree-id44344 . -1879) (undo-tree-id44345 . -1879) (undo-tree-id44346 . -1879) (undo-tree-id44347 . -1879) (undo-tree-id44348 . -1879) (undo-tree-id44349 . -1879) (undo-tree-id44350 . -1879) (undo-tree-id44351 . -1879) (undo-tree-id44352 . -1880) (undo-tree-id44353 . -1880) (undo-tree-id44354 . -1880) (undo-tree-id44355 . -1880) (undo-tree-id44356 . -1880) (undo-tree-id44357 . -1880) (undo-tree-id44358 . -1880) (undo-tree-id44359 . -1880) (undo-tree-id44360 . -1880) (undo-tree-id44361 . -1880) (undo-tree-id44362 . -1880) (undo-tree-id44363 . -1880) (undo-tree-id44364 . -1880) (undo-tree-id44365 . -1880) (undo-tree-id44366 . -1880) (undo-tree-id44367 . -1880) (undo-tree-id44368 . -1880) (undo-tree-id44369 . -1880) (undo-tree-id44370 . -1880) (undo-tree-id44371 . -1880) (undo-tree-id44372 . -1880) (undo-tree-id44373 . -1880) (undo-tree-id44374 . -1880) (undo-tree-id44375 . -1880) (undo-tree-id44376 . -1752) (3818 . 5570) (#(" You can think of a context vector as an augmented version of the input vector, 𝑥𝑥 (𝑖𝑖). In other words, the 𝑐𝑐𝑖𝑖 input vector also incorporates information from all other input elements via an attention mechanism. As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs. In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 88 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 88 89 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 89 193 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 193 194 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 194 291 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 291 292 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 292 325 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 325 372 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 372 373 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 373 374 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 374 391 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 391 392 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 392 449 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 449 450 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 450 554 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 554 555 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 555 660 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 660 661 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 661 759 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 759 760 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 760 856 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 856 857 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 857 892 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 892 925 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 925 926 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 926 1022 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1022 1023 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1023 1121 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1121 1122 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1122 1231 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1231 1232 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1232 1331 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1331 1332 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1332 1335 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1335 1336 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1336 1339 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1339 1340 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1340 1426 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1426 1440 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1440 1441 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1441 1542 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1542 1543 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1543 1606 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1606 1607 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1607 1707 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1707 1708 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1708 1749 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1749 1750 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3946) (undo-tree-id44377 . -1749) (undo-tree-id44378 . -1749) (undo-tree-id44379 . -1749) (undo-tree-id44380 . -1749) (undo-tree-id44381 . -1749) (undo-tree-id44382 . -1749) (undo-tree-id44383 . -1749) (undo-tree-id44384 . -1749) (undo-tree-id44385 . -1749) (undo-tree-id44386 . -1749) (undo-tree-id44387 . -1749) (undo-tree-id44388 . -1749) (undo-tree-id44389 . -1749) (undo-tree-id44390 . -1749) (undo-tree-id44391 . -1749) (undo-tree-id44392 . -1749) (undo-tree-id44393 . -1749) (undo-tree-id44394 . -1749) (undo-tree-id44395 . -1749) (undo-tree-id44396 . -1749) (undo-tree-id44397 . -1749) (undo-tree-id44398 . -1749) (undo-tree-id44399 . -1749) (undo-tree-id44400 . -1749) (undo-tree-id44401 . -1749) (undo-tree-id44402 . -1749) (undo-tree-id44403 . -1749) (undo-tree-id44404 . -1749) (undo-tree-id44405 . -1749) (undo-tree-id44406 . -1749) (undo-tree-id44407 . -1749) (undo-tree-id44408 . -1749) (undo-tree-id44409 . -1749) (undo-tree-id44410 . -1749) (undo-tree-id44411 . -1749) (undo-tree-id44412 . -1749) (undo-tree-id44413 . -1749) (undo-tree-id44414 . -1749) (undo-tree-id44415 . -1749) (undo-tree-id44416 . -1749) (undo-tree-id44417 . -1749) (undo-tree-id44418 . -1749) (undo-tree-id44419 . -1749) (undo-tree-id44420 . -1749) (undo-tree-id44421 . -1749) (undo-tree-id44422 . -1749) (undo-tree-id44423 . -1749) (undo-tree-id44424 . -1749) (undo-tree-id44425 . -1749) (undo-tree-id44426 . -1749) (undo-tree-id44427 . -1749) (undo-tree-id44428 . -1749) (undo-tree-id44429 . -1749) (undo-tree-id44430 . -1749) (undo-tree-id44431 . -1749) (undo-tree-id44432 . -1749) (undo-tree-id44433 . -1749) (undo-tree-id44434 . -1749) (undo-tree-id44435 . -1749) (undo-tree-id44436 . -1749) (undo-tree-id44437 . -1749) (undo-tree-id44438 . -1749) (undo-tree-id44439 . -1749) (undo-tree-id44440 . -1749) (undo-tree-id44441 . -1749) (undo-tree-id44442 . -1749) (undo-tree-id44443 . -1749) (undo-tree-id44444 . -1749) (undo-tree-id44445 . -1749) (undo-tree-id44446 . -1749) (undo-tree-id44447 . -1749) (undo-tree-id44448 . -1749) (undo-tree-id44449 . -1749) (undo-tree-id44450 . -1749) (undo-tree-id44451 . -1749) (undo-tree-id44452 . -1749) (undo-tree-id44453 . -1749) (undo-tree-id44454 . -1749) (undo-tree-id44455 . -1749) (undo-tree-id44456 . -1749) (undo-tree-id44457 . -1749) (undo-tree-id44458 . -1749) (undo-tree-id44459 . -1749) (undo-tree-id44460 . -1749) (undo-tree-id44461 . -1749) (undo-tree-id44462 . -1749) (undo-tree-id44463 . -1749) (undo-tree-id44464 . -1749) (undo-tree-id44465 . -1749) (undo-tree-id44466 . -1749) (undo-tree-id44467 . -1749) (undo-tree-id44468 . -1749) (undo-tree-id44469 . -1749) (undo-tree-id44470 . -1749) (undo-tree-id44471 . -1749) (undo-tree-id44472 . -1749) (undo-tree-id44473 . -1749) (undo-tree-id44474 . -1749) (undo-tree-id44475 . -1749) (undo-tree-id44476 . -1749) (undo-tree-id44477 . -1749) (undo-tree-id44478 . -1749) (undo-tree-id44479 . -1749) (undo-tree-id44480 . -1749) (undo-tree-id44481 . -1749) (undo-tree-id44482 . -1749) (undo-tree-id44483 . -1749) (undo-tree-id44484 . -1749) (undo-tree-id44485 . -1749) (undo-tree-id44486 . -1749) (undo-tree-id44487 . -1749) (undo-tree-id44488 . -1749) (undo-tree-id44489 . -1749) (undo-tree-id44490 . -1749) (undo-tree-id44491 . -1749) (undo-tree-id44492 . -1749) (undo-tree-id44493 . -1749) (undo-tree-id44494 . -1749) (undo-tree-id44495 . -1749) (undo-tree-id44496 . -1749) (undo-tree-id44497 . -1749) (undo-tree-id44498 . -1749) (undo-tree-id44499 . -1749) (undo-tree-id44500 . -1749) (undo-tree-id44501 . -1749) (undo-tree-id44502 . -1749) (undo-tree-id44503 . -1749) (undo-tree-id44504 . -1749) (undo-tree-id44505 . -1749) (undo-tree-id44506 . -1749) (undo-tree-id44507 . -1749) (undo-tree-id44508 . -1749) (undo-tree-id44509 . -1749) (undo-tree-id44510 . -1749) (undo-tree-id44511 . -1749) (undo-tree-id44512 . -1749) (undo-tree-id44513 . -1749) (undo-tree-id44514 . -1749) (undo-tree-id44515 . -1749) (undo-tree-id44516 . -1749) (undo-tree-id44517 . -1749) (undo-tree-id44518 . -1749) (undo-tree-id44519 . -1749) (undo-tree-id44520 . -1749) (undo-tree-id44521 . -1749) (undo-tree-id44522 . -1749) (undo-tree-id44523 . -1749) (undo-tree-id44524 . -1749) (undo-tree-id44525 . -1749) (undo-tree-id44526 . -1749) (undo-tree-id44527 . -1749) (undo-tree-id44528 . -1749) (undo-tree-id44529 . -1749) (undo-tree-id44530 . -1749) (undo-tree-id44531 . -1749) (undo-tree-id44532 . -1749) (undo-tree-id44533 . -1749) (undo-tree-id44534 . -1749) (undo-tree-id44535 . -1749) (undo-tree-id44536 . -1749) (undo-tree-id44537 . -1749) (undo-tree-id44538 . -1749) (undo-tree-id44539 . -1749) (undo-tree-id44540 . -1749) (undo-tree-id44541 . -1749) (undo-tree-id44542 . -1749) (undo-tree-id44543 . -1749) (undo-tree-id44544 . -1749) (undo-tree-id44545 . -1749) (undo-tree-id44546 . -1749) (undo-tree-id44547 . -1606) (undo-tree-id44548 . -1606) (undo-tree-id44549 . -1606) (undo-tree-id44550 . -1606) (undo-tree-id44551 . -1606) (undo-tree-id44552 . -1606) (undo-tree-id44553 . -1606) (undo-tree-id44554 . -1606) (undo-tree-id44555 . -1606) (undo-tree-id44556 . -1606) (undo-tree-id44557 . -1606) (undo-tree-id44558 . -1606) (undo-tree-id44559 . -1606) (undo-tree-id44560 . -1606) (undo-tree-id44561 . -1606) (undo-tree-id44562 . -1606) (undo-tree-id44563 . -925) (undo-tree-id44564 . -925) (undo-tree-id44565 . -925) (undo-tree-id44566 . -925) (undo-tree-id44567 . -925) (undo-tree-id44568 . -925) (undo-tree-id44569 . -925) (undo-tree-id44570 . -925) (undo-tree-id44571 . -925) (undo-tree-id44572 . -925) (undo-tree-id44573 . -925) (undo-tree-id44574 . -925) (undo-tree-id44575 . -925) (undo-tree-id44576 . -925) (undo-tree-id44577 . -925) (undo-tree-id44578 . -925) (undo-tree-id44579 . -449) (undo-tree-id44580 . -449) (undo-tree-id44581 . -449) (undo-tree-id44582 . -449) (undo-tree-id44583 . -449) (undo-tree-id44584 . -449) (undo-tree-id44585 . -449) (undo-tree-id44586 . -449) (undo-tree-id44587 . -449) (undo-tree-id44588 . -449) (undo-tree-id44589 . -449) (undo-tree-id44590 . -449) (undo-tree-id44591 . -449) (undo-tree-id44592 . -449) (undo-tree-id44593 . -449) (undo-tree-id44594 . -449) (undo-tree-id44595 . -449) (undo-tree-id44596 . -449) (undo-tree-id44597 . -449) (undo-tree-id44598 . -449) (undo-tree-id44599 . -449) (undo-tree-id44600 . -449) (undo-tree-id44601 . -449) (undo-tree-id44602 . -449) (undo-tree-id44603 . -449) (undo-tree-id44604 . -449) (undo-tree-id44605 . -449) (undo-tree-id44606 . -449) (undo-tree-id44607 . -449) (undo-tree-id44608 . -449) (undo-tree-id44609 . -449) (undo-tree-id44610 . -449) (undo-tree-id44611 . -449) (undo-tree-id44612 . -449) (undo-tree-id44613 . -449) (undo-tree-id44614 . -449) (undo-tree-id44615 . -449) (undo-tree-id44616 . -449) (undo-tree-id44617 . -449) (undo-tree-id44618 . -449) (undo-tree-id44619 . -449) (undo-tree-id44620 . -449) (undo-tree-id44621 . -449) (undo-tree-id44622 . -449) (undo-tree-id44623 . -449) (undo-tree-id44624 . -449) (undo-tree-id44625 . -449) (undo-tree-id44626 . -449) (undo-tree-id44627 . -449) (undo-tree-id44628 . -449) (undo-tree-id44629 . -449) (undo-tree-id44630 . -449) (undo-tree-id44631 . -449) (undo-tree-id44632 . -449) (undo-tree-id44633 . -449) (undo-tree-id44634 . -449) (undo-tree-id44635 . -449) (undo-tree-id44636 . -449) (undo-tree-id44637 . -449) (undo-tree-id44638 . -449) (undo-tree-id44639 . -449) (undo-tree-id44640 . -449) (undo-tree-id44641 . -449) (undo-tree-id44642 . -449) (undo-tree-id44643 . -449) (undo-tree-id44644 . -449) (undo-tree-id44645 . -449) (undo-tree-id44646 . -449) (undo-tree-id44647 . -449) (undo-tree-id44648 . -449) (undo-tree-id44649 . -449) (undo-tree-id44650 . -449) (undo-tree-id44651 . -449) (undo-tree-id44652 . -449) (undo-tree-id44653 . -449) (undo-tree-id44654 . -449) (undo-tree-id44655 . -449) (undo-tree-id44656 . -449) (undo-tree-id44657 . -449) (undo-tree-id44658 . -449) (undo-tree-id44659 . -449) (undo-tree-id44660 . -449) (undo-tree-id44661 . -449) (undo-tree-id44662 . -449) (undo-tree-id44663 . -449) (undo-tree-id44664 . -449) (undo-tree-id44665 . -449) (undo-tree-id44666 . -449) (undo-tree-id44667 . -449) (undo-tree-id44668 . -449) (undo-tree-id44669 . -449) (undo-tree-id44670 . -449) (undo-tree-id44671 . -449) (undo-tree-id44672 . -449) (undo-tree-id44673 . -449) (undo-tree-id44674 . -449) (undo-tree-id44675 . -449) (undo-tree-id44676 . -449) (undo-tree-id44677 . -449) (undo-tree-id44678 . -449) (undo-tree-id44679 . -449) (undo-tree-id44680 . -449) (undo-tree-id44681 . -449) (undo-tree-id44682 . -449) (undo-tree-id44683 . -449) (undo-tree-id44684 . -449) (undo-tree-id44685 . -449) (undo-tree-id44686 . -449) (undo-tree-id44687 . -449) (undo-tree-id44688 . -449) (undo-tree-id44689 . -449) (undo-tree-id44690 . -449) (undo-tree-id44691 . -449) (undo-tree-id44692 . -449) (undo-tree-id44693 . -449) (undo-tree-id44694 . -449) (undo-tree-id44695 . -449) (undo-tree-id44696 . -449) (undo-tree-id44697 . -449) (undo-tree-id44698 . -449) (undo-tree-id44699 . -449) (undo-tree-id44700 . -449) (undo-tree-id44701 . -449) (undo-tree-id44702 . -449) (undo-tree-id44703 . -449) (undo-tree-id44704 . -449) (undo-tree-id44705 . -449) (undo-tree-id44706 . -449) (undo-tree-id44707 . -449) (undo-tree-id44708 . -449) (undo-tree-id44709 . -449) (undo-tree-id44710 . -449) (undo-tree-id44711 . -449) (undo-tree-id44712 . -449) (undo-tree-id44713 . -449) (undo-tree-id44714 . -449) (undo-tree-id44715 . -449) (undo-tree-id44716 . -449) (undo-tree-id44717 . -449) (undo-tree-id44718 . -449) (undo-tree-id44719 . -449) (undo-tree-id44720 . -449) (undo-tree-id44721 . -449) (undo-tree-id44722 . -449) (undo-tree-id44723 . -449) (undo-tree-id44724 . -449) (undo-tree-id44725 . -449) (undo-tree-id44726 . -449) (undo-tree-id44727 . -449) (undo-tree-id44728 . -449) (undo-tree-id44729 . -449) (undo-tree-id44730 . -449) (undo-tree-id44731 . -449) (undo-tree-id44732 . -449) (undo-tree-id44733 . -449) (undo-tree-id44734 . -449) (undo-tree-id44735 . -449) (undo-tree-id44736 . -449) (undo-tree-id44737 . -449) (undo-tree-id44738 . -449) (undo-tree-id44739 . -449) (undo-tree-id44740 . -449) (undo-tree-id44741 . -449) (undo-tree-id44742 . -449) (undo-tree-id44743 . -449) (undo-tree-id44744 . -449) (undo-tree-id44745 . -449) (undo-tree-id44746 . -449) (undo-tree-id44747 . -88) (undo-tree-id44748 . -88) (undo-tree-id44749 . -88) (undo-tree-id44750 . -88) (undo-tree-id44751 . -88) (undo-tree-id44752 . -88) (undo-tree-id44753 . -88) (undo-tree-id44754 . -88) (undo-tree-id44755 . -88) (undo-tree-id44756 . -88) (undo-tree-id44757 . -88) (undo-tree-id44758 . -88) (undo-tree-id44759 . -88) (undo-tree-id44760 . -88) (undo-tree-id44761 . -88) (undo-tree-id44762 . -88) (undo-tree-id44763 . -88) (undo-tree-id44764 . -88) (undo-tree-id44765 . -88) (undo-tree-id44766 . -88) (undo-tree-id44767 . -88) (undo-tree-id44768 . -88) (undo-tree-id44769 . -88) (undo-tree-id44770 . -88) (undo-tree-id44771 . -88) (undo-tree-id44772 . -88) (undo-tree-id44773 . -88) (undo-tree-id44774 . -88) (undo-tree-id44775 . -193) (undo-tree-id44776 . -193) (undo-tree-id44777 . -193) (undo-tree-id44778 . -193) (undo-tree-id44779 . -193) (undo-tree-id44780 . -193) (undo-tree-id44781 . -193) (undo-tree-id44782 . -193) (undo-tree-id44783 . -193) (undo-tree-id44784 . -193) (undo-tree-id44785 . -193) (undo-tree-id44786 . -193) (undo-tree-id44787 . -291) (undo-tree-id44788 . -291) (undo-tree-id44789 . -291) (undo-tree-id44790 . -291) (undo-tree-id44791 . -291) (undo-tree-id44792 . -291) (undo-tree-id44793 . -291) (undo-tree-id44794 . -291) (undo-tree-id44795 . -291) (undo-tree-id44796 . -291) (undo-tree-id44797 . -291) (undo-tree-id44798 . -291) (undo-tree-id44799 . 1365) (undo-tree-id44800 . -388) (undo-tree-id44801 . -391) (undo-tree-id44802 . -391) (undo-tree-id44803 . -391) (undo-tree-id44804 . -391) (undo-tree-id44805 . -391) (undo-tree-id44806 . -391) (undo-tree-id44807 . -391) (undo-tree-id44808 . -391) (undo-tree-id44809 . -391) (undo-tree-id44810 . -391) (undo-tree-id44811 . -391) (undo-tree-id44812 . -391) (undo-tree-id44813 . -449) (undo-tree-id44814 . -449) (undo-tree-id44815 . -449) (undo-tree-id44816 . -449) (undo-tree-id44817 . -449) (undo-tree-id44818 . -449) (undo-tree-id44819 . -449) (undo-tree-id44820 . -449) (undo-tree-id44821 . -449) (undo-tree-id44822 . -449) (undo-tree-id44823 . -449) (undo-tree-id44824 . -449) (undo-tree-id44825 . -554) (undo-tree-id44826 . -554) (undo-tree-id44827 . -554) (undo-tree-id44828 . -554) (undo-tree-id44829 . -554) (undo-tree-id44830 . -554) (undo-tree-id44831 . -554) (undo-tree-id44832 . -554) (undo-tree-id44833 . -554) (undo-tree-id44834 . -554) (undo-tree-id44835 . -554) (undo-tree-id44836 . -554) (undo-tree-id44837 . -660) (undo-tree-id44838 . -660) (undo-tree-id44839 . -660) (undo-tree-id44840 . -660) (undo-tree-id44841 . -660) (undo-tree-id44842 . -660) (undo-tree-id44843 . -660) (undo-tree-id44844 . -660) (undo-tree-id44845 . -660) (undo-tree-id44846 . -660) (undo-tree-id44847 . -660) (undo-tree-id44848 . -660) (undo-tree-id44849 . -759) (undo-tree-id44850 . -759) (undo-tree-id44851 . -759) (undo-tree-id44852 . -759) (undo-tree-id44853 . -759) (undo-tree-id44854 . -759) (undo-tree-id44855 . -759) (undo-tree-id44856 . -759) (undo-tree-id44857 . -759) (undo-tree-id44858 . -759) (undo-tree-id44859 . -759) (undo-tree-id44860 . -759) (undo-tree-id44861 . -856) (undo-tree-id44862 . -856) (undo-tree-id44863 . -856) (undo-tree-id44864 . -856) (undo-tree-id44865 . -856) (undo-tree-id44866 . -856) (undo-tree-id44867 . -856) (undo-tree-id44868 . -856) (undo-tree-id44869 . -856) (undo-tree-id44870 . -856) (undo-tree-id44871 . -856) (undo-tree-id44872 . -856) (undo-tree-id44873 . -925) (undo-tree-id44874 . -925) (undo-tree-id44875 . -925) (undo-tree-id44876 . -925) (undo-tree-id44877 . -925) (undo-tree-id44878 . -925) (undo-tree-id44879 . -925) (undo-tree-id44880 . -925) (undo-tree-id44881 . -925) (undo-tree-id44882 . -925) (undo-tree-id44883 . -925) (undo-tree-id44884 . -925) (undo-tree-id44885 . -1022) (undo-tree-id44886 . -1022) (undo-tree-id44887 . -1022) (undo-tree-id44888 . -1022) (undo-tree-id44889 . -1022) (undo-tree-id44890 . -1022) (undo-tree-id44891 . -1022) (undo-tree-id44892 . -1022) (undo-tree-id44893 . -1022) (undo-tree-id44894 . -1022) (undo-tree-id44895 . -1022) (undo-tree-id44896 . -1022) (undo-tree-id44897 . -1121) (undo-tree-id44898 . -1121) (undo-tree-id44899 . -1121) (undo-tree-id44900 . -1121) (undo-tree-id44901 . -1121) (undo-tree-id44902 . -1121) (undo-tree-id44903 . -1121) (undo-tree-id44904 . -1121) (undo-tree-id44905 . -1121) (undo-tree-id44906 . -1121) (undo-tree-id44907 . -1121) (undo-tree-id44908 . -1121) (undo-tree-id44909 . -1231) (undo-tree-id44910 . -1231) (undo-tree-id44911 . -1231) (undo-tree-id44912 . -1231) (undo-tree-id44913 . -1231) (undo-tree-id44914 . -1231) (undo-tree-id44915 . -1231) (undo-tree-id44916 . -1231) (undo-tree-id44917 . -1231) (undo-tree-id44918 . -1231) (undo-tree-id44919 . -1231) (undo-tree-id44920 . -1231) (undo-tree-id44921 . -1331) (undo-tree-id44922 . -1331) (undo-tree-id44923 . -1331) (undo-tree-id44924 . -1331) (undo-tree-id44925 . -1331) (undo-tree-id44926 . -1331) (undo-tree-id44927 . -1331) (undo-tree-id44928 . -1331) (undo-tree-id44929 . -1331) (undo-tree-id44930 . -1331) (undo-tree-id44931 . -1331) (undo-tree-id44932 . -1335) (undo-tree-id44933 . -1335) (undo-tree-id44934 . -1335) (undo-tree-id44935 . -1335) (undo-tree-id44936 . -1335) (undo-tree-id44937 . -1335) (undo-tree-id44938 . -1335) (undo-tree-id44939 . -1335) (undo-tree-id44940 . -1335) (undo-tree-id44941 . -1335) (undo-tree-id44942 . -1335) (undo-tree-id44943 . -1335) (undo-tree-id44944 . -1335) (undo-tree-id44945 . -1335) (undo-tree-id44946 . -1335) (undo-tree-id44947 . -1335) (undo-tree-id44948 . -1335) (undo-tree-id44949 . -1335) (undo-tree-id44950 . -1335) (undo-tree-id44951 . -1335) (undo-tree-id44952 . -1335) (undo-tree-id44953 . -1339) (undo-tree-id44954 . -1339) (undo-tree-id44955 . -1339) (undo-tree-id44956 . -1339) (undo-tree-id44957 . -1339) (undo-tree-id44958 . -1339) (undo-tree-id44959 . -1339) (undo-tree-id44960 . -1339) (undo-tree-id44961 . -1339) (undo-tree-id44962 . -1339) (undo-tree-id44963 . -1339) (undo-tree-id44964 . -1339) (undo-tree-id44965 . -1440) (undo-tree-id44966 . -1440) (undo-tree-id44967 . -1440) (undo-tree-id44968 . -1440) (undo-tree-id44969 . -1440) (undo-tree-id44970 . -1440) (undo-tree-id44971 . -1440) (undo-tree-id44972 . -1440) (undo-tree-id44973 . -1440) (undo-tree-id44974 . -1440) (undo-tree-id44975 . -1440) (undo-tree-id44976 . -1440) (undo-tree-id44977 . -1542) (undo-tree-id44978 . -1542) (undo-tree-id44979 . -1542) (undo-tree-id44980 . -1542) (undo-tree-id44981 . -1542) (undo-tree-id44982 . -1542) (undo-tree-id44983 . -1542) (undo-tree-id44984 . -1542) (undo-tree-id44985 . -1542) (undo-tree-id44986 . -1542) (undo-tree-id44987 . -1542) (undo-tree-id44988 . -1542) (undo-tree-id44989 . -1606) (undo-tree-id44990 . -1606) (undo-tree-id44991 . -1606) (undo-tree-id44992 . -1606) (undo-tree-id44993 . -1606) (undo-tree-id44994 . -1606) (undo-tree-id44995 . -1606) (undo-tree-id44996 . -1606) (undo-tree-id44997 . -1606) (undo-tree-id44998 . -1606) (undo-tree-id44999 . -1606) (undo-tree-id45000 . -1606) (undo-tree-id45001 . -1749) (undo-tree-id45002 . -1707) (undo-tree-id45003 . -1707) (undo-tree-id45004 . -1707) (undo-tree-id45005 . -1707) (undo-tree-id45006 . -1707) (undo-tree-id45007 . -1707) (undo-tree-id45008 . -1707) (undo-tree-id45009 . -1707) (undo-tree-id45010 . -1707) (undo-tree-id45011 . -1707) (undo-tree-id45012 . -1707) (undo-tree-id45013 . -1707) (undo-tree-id45014 . -1707) (undo-tree-id45015 . -1606) (undo-tree-id45016 . -1749) (undo-tree-id45017 . -1749) (undo-tree-id45018 . -1749) (undo-tree-id45019 . -1749) (undo-tree-id45020 . -1749) (undo-tree-id45021 . -1749) (undo-tree-id45022 . -1749) (undo-tree-id45023 . -1749) (undo-tree-id45024 . -1749) (undo-tree-id45025 . -1749) (undo-tree-id45026 . -1749) (undo-tree-id45027 . -1749) (undo-tree-id45028 . -1749) (undo-tree-id45029 . -1749) (undo-tree-id45030 . -1749) (undo-tree-id45031 . -1749) (undo-tree-id45032 . -1749) (undo-tree-id45033 . -1749) (undo-tree-id45034 . -1749) (undo-tree-id45035 . -1749) (undo-tree-id45036 . -1749) (undo-tree-id45037 . -1749) (undo-tree-id45038 . -1749) (undo-tree-id45039 . -1749) (undo-tree-id45040 . -1749) (undo-tree-id45041 . -1749) (undo-tree-id45042 . -1749) (undo-tree-id45043 . -1749) (undo-tree-id45044 . -1749) (undo-tree-id45045 . -1749) (undo-tree-id45046 . -1749) (undo-tree-id45047 . -1749) (undo-tree-id45048 . -1707) (undo-tree-id45049 . -1749)) nil (25774 61450 905462 301000) 0 nil])
([nil nil ((3947 . 5700) (#("- In other words, the 𝑐𝑐𝑖𝑖 input vector also incorporates information from all other input elements via an attention mechanism. As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs. In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.
- You can think of a context vector as an augmented version of the input vector, 𝑥𝑥 (𝑖𝑖)." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 106 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 106 107 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 107 204 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 204 205 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 205 238 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 238 283 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 283 285 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 285 286 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 286 287 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 287 304 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 304 305 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 305 362 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 362 363 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 363 467 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 467 468 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 468 573 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 573 574 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 574 672 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 672 673 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 673 769 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 769 770 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 770 805 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 805 838 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 838 839 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 839 935 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 935 936 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 936 1034 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1034 1035 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1035 1144 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1144 1145 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1145 1244 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1244 1245 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1245 1248 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1248 1249 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1249 1252 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1252 1253 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1253 1339 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1339 1353 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1353 1354 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1354 1455 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1455 1456 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1456 1519 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1519 1520 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1520 1620 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1620 1621 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1621 1662 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1662 1663 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1663 1664 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1664 1665 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1665 1666 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1666 1753 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 3947) (undo-tree-id43439 . 87) (undo-tree-id43440 . -1665) (undo-tree-id43441 . -1753) (undo-tree-id43442 . -1666) (undo-tree-id43443 . -1666) (undo-tree-id43444 . -1666) (undo-tree-id43445 . -1666) (undo-tree-id43446 . -1666) (undo-tree-id43447 . -1666) (undo-tree-id43448 . -1666) (undo-tree-id43449 . -1666) (undo-tree-id43450 . -1666) (undo-tree-id43451 . -1666) (undo-tree-id43452 . -1666) (undo-tree-id43453 . -1666) (undo-tree-id43454 . -1666) (undo-tree-id43455 . -1666) (undo-tree-id43456 . -1666) (undo-tree-id43457 . -1666) (undo-tree-id43458 . -1666) (undo-tree-id43459 . -1665) (undo-tree-id43460 . -1665) (undo-tree-id43461 . -1665) (undo-tree-id43462 . -1665) (undo-tree-id43463 . -1665) (undo-tree-id43464 . -1665) (undo-tree-id43465 . -1665) (undo-tree-id43466 . -1665) (undo-tree-id43467 . -1665) (undo-tree-id43468 . -1665) (undo-tree-id43469 . -1665) (undo-tree-id43470 . -1665) (undo-tree-id43471 . -1665) (undo-tree-id43472 . -1665) (undo-tree-id43473 . -1665) (undo-tree-id43474 . -1665) (undo-tree-id43475 . -1665) (undo-tree-id43476 . -1665) (undo-tree-id43477 . -1665) (undo-tree-id43478 . -1665) (undo-tree-id43479 . -1665) (undo-tree-id43480 . -1665) (undo-tree-id43481 . -1665) (undo-tree-id43482 . -1665) (undo-tree-id43483 . -1665) (undo-tree-id43484 . -1665) (undo-tree-id43485 . -1665) (undo-tree-id43486 . -1665) (undo-tree-id43487 . -1665) (undo-tree-id43488 . -1665) (undo-tree-id43489 . -1752) (undo-tree-id43490 . -1752) (undo-tree-id43491 . -1752) (undo-tree-id43492 . -1752) (undo-tree-id43493 . -1752) (undo-tree-id43494 . -1752) (undo-tree-id43495 . -1752) (undo-tree-id43496 . -1752) (undo-tree-id43497 . -1752) (undo-tree-id43498 . -1752) (undo-tree-id43499 . -1752) (undo-tree-id43500 . -1752) (undo-tree-id43501 . -1752) (undo-tree-id43502 . -1752) (undo-tree-id43503 . -1752) (undo-tree-id43504 . -1752) (undo-tree-id43505 . -1752) (undo-tree-id43506 . -1752) (undo-tree-id43507 . -1752) (undo-tree-id43508 . -1752) (undo-tree-id43509 . -1752) (undo-tree-id43510 . -1753) (undo-tree-id43511 . -1753) (undo-tree-id43512 . -1753) (undo-tree-id43513 . -1753) (undo-tree-id43514 . -1753) (undo-tree-id43515 . -1753) (undo-tree-id43516 . -1753) (undo-tree-id43517 . -1753) (undo-tree-id43518 . -1753) (undo-tree-id43519 . -1753) (undo-tree-id43520 . -1753) (undo-tree-id43521 . -1753) (undo-tree-id43522 . -1753) (undo-tree-id43523 . -1753) (undo-tree-id43524 . -1753) (undo-tree-id43525 . -1753) (undo-tree-id43526 . -1753) (undo-tree-id43527 . -1753) (undo-tree-id43528 . -1753) (undo-tree-id43529 . -1664) (3947 . 5611) (#(" In other words, the 𝑐𝑐𝑖𝑖 input vector also incorporates information from all other input elements via an attention mechanism. As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs. In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 105 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 105 106 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 106 203 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 203 204 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 204 237 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 237 282 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 282 284 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 284 285 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 285 286 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 286 303 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 303 304 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 304 361 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 361 362 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 362 466 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 466 467 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 467 572 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 572 573 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 573 671 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 671 672 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 672 768 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 768 769 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 769 804 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 804 837 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 837 838 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 838 934 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 934 935 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 935 1033 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1033 1034 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1034 1143 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1143 1144 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1144 1243 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1243 1244 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1244 1247 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1247 1248 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1248 1251 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1251 1252 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1252 1338 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1338 1352 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1352 1353 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1353 1454 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1454 1455 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1455 1518 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1518 1519 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1519 1619 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1619 1620 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1620 1661 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1661 1662 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4036)) nil (25774 61450 904494 777000) 0 nil])
([nil nil ((3949 . 3950) (3946 . 3949) 3940) nil (25774 61450 904441 941000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -4041) (undo-tree-id43429 . -2) (undo-tree-id43430 . -2) (undo-tree-id43431 . -2) (undo-tree-id43432 . -2) (undo-tree-id43433 . -2) (undo-tree-id43434 . -2) (undo-tree-id43435 . -2) (undo-tree-id43436 . -2) (undo-tree-id43437 . -2) (undo-tree-id43438 . -2) 4043 (4040 . 4043) 4014) nil (25774 61450 904440 474000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3950) (undo-tree-id43308 . -1) (undo-tree-id43309 . -1) (undo-tree-id43310 . -1) (undo-tree-id43311 . -1) (undo-tree-id43312 . -1) (undo-tree-id43313 . -1) (undo-tree-id43314 . -1) (undo-tree-id43315 . -1) (undo-tree-id43316 . -1) (undo-tree-id43317 . -1) (undo-tree-id43318 . -1) (undo-tree-id43319 . -1) (undo-tree-id43320 . -1) (undo-tree-id43321 . -1) (undo-tree-id43322 . -1) (undo-tree-id43323 . -1) (undo-tree-id43324 . -1) (undo-tree-id43325 . -1) (undo-tree-id43326 . -1) (undo-tree-id43327 . -1) (undo-tree-id43328 . -1) (undo-tree-id43329 . -1) (undo-tree-id43330 . -1) (undo-tree-id43331 . -1) (undo-tree-id43332 . -1) (undo-tree-id43333 . -1) (undo-tree-id43334 . -1) (undo-tree-id43335 . -1) (undo-tree-id43336 . -1) (undo-tree-id43337 . -1) (undo-tree-id43338 . -1) (undo-tree-id43339 . -1) (undo-tree-id43340 . -1) (undo-tree-id43341 . -1) (undo-tree-id43342 . -1) (undo-tree-id43343 . -1) (undo-tree-id43344 . -1) (undo-tree-id43345 . -1) (undo-tree-id43346 . -1) (undo-tree-id43347 . -1) (undo-tree-id43348 . -1) (undo-tree-id43349 . -1) (undo-tree-id43350 . -1) (undo-tree-id43351 . -1) (undo-tree-id43352 . -1) (undo-tree-id43353 . -1) (undo-tree-id43354 . -1) (undo-tree-id43355 . -1) (undo-tree-id43356 . -1) (undo-tree-id43357 . -1) (undo-tree-id43358 . -1) (undo-tree-id43359 . -1) (undo-tree-id43360 . -1) (undo-tree-id43361 . -1) (undo-tree-id43362 . -1) (undo-tree-id43363 . -1) (undo-tree-id43364 . -1) (undo-tree-id43365 . -1) (undo-tree-id43366 . -1) (undo-tree-id43367 . -1) (undo-tree-id43368 . -1) (undo-tree-id43369 . -1) (undo-tree-id43370 . -1) (undo-tree-id43371 . -1) (undo-tree-id43372 . -1) (undo-tree-id43373 . -1) (undo-tree-id43374 . -1) (undo-tree-id43375 . -1) (undo-tree-id43376 . -1) (undo-tree-id43377 . -1) (undo-tree-id43378 . -1) (undo-tree-id43379 . -1) (undo-tree-id43380 . -1) (undo-tree-id43381 . -1) (undo-tree-id43382 . -1) (undo-tree-id43383 . -1) (undo-tree-id43384 . -1) (undo-tree-id43385 . -1) (undo-tree-id43386 . -1) (undo-tree-id43387 . -1) (undo-tree-id43388 . -1) (undo-tree-id43389 . -1) (undo-tree-id43390 . -1) (undo-tree-id43391 . -1) (undo-tree-id43392 . -1) (undo-tree-id43393 . -1) (undo-tree-id43394 . -1) (undo-tree-id43395 . -1) (undo-tree-id43396 . -1) (undo-tree-id43397 . -1) (undo-tree-id43398 . -1) (undo-tree-id43399 . -1) (undo-tree-id43400 . -1) (undo-tree-id43401 . -1) (undo-tree-id43402 . -1) (undo-tree-id43403 . -1) (undo-tree-id43404 . -1) (undo-tree-id43405 . -1) (undo-tree-id43406 . -1) (undo-tree-id43407 . -1) (undo-tree-id43408 . -1) (undo-tree-id43409 . -1) (undo-tree-id43410 . -1) (undo-tree-id43411 . -1) (undo-tree-id43412 . -1) (undo-tree-id43413 . -1) (undo-tree-id43414 . -1) (undo-tree-id43415 . -1) (undo-tree-id43416 . -1) (undo-tree-id43417 . -1) (undo-tree-id43418 . -1) (undo-tree-id43419 . -1) (undo-tree-id43420 . -1) (undo-tree-id43421 . -1) (undo-tree-id43422 . -1) (undo-tree-id43423 . -1) (undo-tree-id43424 . -1) (undo-tree-id43425 . -1) (undo-tree-id43426 . -1) (undo-tree-id43427 . -1) (undo-tree-id43428 . -1)) nil (25774 61450 904429 911000) 0 nil])
([nil nil ((4041 . 5707) (#("- As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs. In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.

- In other words, the 𝑐𝑐𝑖𝑖 input vector also incorporates information from all other input elements via an attention mechanism." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 78 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 78 79 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 79 112 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 112 157 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 157 159 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 159 160 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 160 161 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 161 178 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 178 179 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 179 236 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 236 237 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 237 284 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 284 341 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 341 342 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 342 447 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 447 448 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 448 546 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 546 547 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 547 643 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 643 644 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 644 679 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 679 712 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 712 713 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 713 809 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 809 810 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 810 908 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 908 909 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 909 1018 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1018 1019 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1019 1118 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1118 1119 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1119 1122 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1122 1123 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1123 1126 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1126 1127 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1127 1213 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1213 1227 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1227 1228 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1228 1329 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1329 1330 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1330 1393 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1393 1394 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1394 1494 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1494 1495 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1495 1536 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1536 1537 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1537 1538 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1538 1539 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1539 1540 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1540 1541 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1541 1645 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1645 1646 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1646 1666 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4041) (undo-tree-id43212 . -1666) (undo-tree-id43213 . -1541) (undo-tree-id43214 . -1541) (undo-tree-id43215 . -1541) (undo-tree-id43216 . -1541) (undo-tree-id43217 . -1541) (undo-tree-id43218 . -1541) (undo-tree-id43219 . -1541) (undo-tree-id43220 . -1541) (undo-tree-id43221 . -1541) (undo-tree-id43222 . -1541) (undo-tree-id43223 . -1541) (undo-tree-id43224 . -1541) (undo-tree-id43225 . -1541) (undo-tree-id43226 . -1541) (undo-tree-id43227 . -1541) (undo-tree-id43228 . -1541) (undo-tree-id43229 . -1541) (undo-tree-id43230 . -1541) (undo-tree-id43231 . -1541) (undo-tree-id43232 . -1541) (undo-tree-id43233 . -1541) (undo-tree-id43234 . -1541) (undo-tree-id43235 . -1540) (undo-tree-id43236 . -1540) (undo-tree-id43237 . -1540) (undo-tree-id43238 . -1540) (undo-tree-id43239 . -1540) (undo-tree-id43240 . -1540) (undo-tree-id43241 . -1540) (undo-tree-id43242 . -1540) (undo-tree-id43243 . -1540) (undo-tree-id43244 . -1540) (undo-tree-id43245 . -1540) (undo-tree-id43246 . -1540) (undo-tree-id43247 . -1540) (undo-tree-id43248 . -1540) (undo-tree-id43249 . -1540) (undo-tree-id43250 . -1540) (undo-tree-id43251 . -1540) (undo-tree-id43252 . -1540) (undo-tree-id43253 . -1540) (undo-tree-id43254 . -1540) (undo-tree-id43255 . -1540) (undo-tree-id43256 . -1540) (undo-tree-id43257 . -1540) (undo-tree-id43258 . -1540) (undo-tree-id43259 . -1540) (undo-tree-id43260 . -1540) (undo-tree-id43261 . -1540) (undo-tree-id43262 . -1540) (undo-tree-id43263 . -1540) (undo-tree-id43264 . -1540) (undo-tree-id43265 . -1665) (undo-tree-id43266 . -1665) (undo-tree-id43267 . -1665) (undo-tree-id43268 . -1665) (undo-tree-id43269 . -1665) (undo-tree-id43270 . -1665) (undo-tree-id43271 . -1665) (undo-tree-id43272 . -1665) (undo-tree-id43273 . -1665) (undo-tree-id43274 . -1665) (undo-tree-id43275 . -1665) (undo-tree-id43276 . -1665) (undo-tree-id43277 . -1665) (undo-tree-id43278 . -1665) (undo-tree-id43279 . -1665) (undo-tree-id43280 . -1665) (undo-tree-id43281 . -1665) (undo-tree-id43282 . -1665) (undo-tree-id43283 . -1665) (undo-tree-id43284 . -1665) (undo-tree-id43285 . -1665) (undo-tree-id43286 . -1665) (undo-tree-id43287 . -1665) (undo-tree-id43288 . -1666) (undo-tree-id43289 . -1666) (undo-tree-id43290 . -1666) (undo-tree-id43291 . -1666) (undo-tree-id43292 . -1666) (undo-tree-id43293 . -1666) (undo-tree-id43294 . -1666) (undo-tree-id43295 . -1666) (undo-tree-id43296 . -1666) (undo-tree-id43297 . -1666) (undo-tree-id43298 . -1666) (undo-tree-id43299 . -1666) (undo-tree-id43300 . -1666) (undo-tree-id43301 . -1666) (undo-tree-id43302 . -1666) (undo-tree-id43303 . -1666) (undo-tree-id43304 . -1666) (undo-tree-id43305 . -1666) (undo-tree-id43306 . -1666) (undo-tree-id43307 . -1539) (4041 . 5580) (#(" As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs. In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 77 78 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 78 111 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 111 156 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 156 158 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 158 159 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 159 160 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 160 177 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 177 178 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 178 235 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 235 236 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 236 283 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 283 340 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 340 341 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 341 446 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 446 447 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 447 545 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 545 546 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 546 642 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 642 643 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 643 678 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 678 711 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 711 712 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 712 808 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 808 809 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 809 907 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 907 908 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 908 1017 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1017 1018 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1018 1117 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1117 1118 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1118 1121 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1121 1122 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1122 1125 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1125 1126 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1126 1212 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1212 1226 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1226 1227 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1227 1328 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1328 1329 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1329 1392 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1392 1393 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1393 1493 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1493 1494 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1494 1535 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1535 1536 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4168)) nil (25774 61450 904354 956000) 0 nil])
([nil nil ((4170 . 5710) (#("- In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.

- As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 44 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 44 46 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 46 47 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 47 48 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 48 65 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 65 66 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 66 123 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 123 124 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 124 171 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 171 228 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 228 229 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 229 258 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 258 334 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 334 335 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 335 433 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 433 434 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 434 530 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 530 531 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 531 566 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 566 599 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 599 600 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 600 696 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 696 697 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 697 795 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 795 796 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 796 905 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 905 906 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 906 1005 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1005 1006 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1006 1009 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1009 1010 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1010 1013 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1013 1014 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1014 1100 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1100 1114 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1114 1115 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1115 1216 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1216 1217 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1217 1280 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1280 1281 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1281 1381 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1381 1382 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1382 1423 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1423 1424 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1424 1425 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1425 1426 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1426 1427 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1427 1428 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1428 1504 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1504 1505 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1505 1538 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1538 1540 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4170) (undo-tree-id43111 . 112) (undo-tree-id43112 . -1454) (undo-tree-id43113 . -1539) (undo-tree-id43114 . -1428) (undo-tree-id43115 . -1428) (undo-tree-id43116 . -1428) (undo-tree-id43117 . -1428) (undo-tree-id43118 . -1428) (undo-tree-id43119 . -1428) (undo-tree-id43120 . -1428) (undo-tree-id43121 . -1428) (undo-tree-id43122 . -1428) (undo-tree-id43123 . -1428) (undo-tree-id43124 . -1428) (undo-tree-id43125 . -1428) (undo-tree-id43126 . -1428) (undo-tree-id43127 . -1428) (undo-tree-id43128 . -1428) (undo-tree-id43129 . -1428) (undo-tree-id43130 . -1428) (undo-tree-id43131 . -1427) (undo-tree-id43132 . -1427) (undo-tree-id43133 . -1427) (undo-tree-id43134 . -1427) (undo-tree-id43135 . -1427) (undo-tree-id43136 . -1427) (undo-tree-id43137 . -1427) (undo-tree-id43138 . -1427) (undo-tree-id43139 . -1427) (undo-tree-id43140 . -1427) (undo-tree-id43141 . -1427) (undo-tree-id43142 . -1427) (undo-tree-id43143 . -1427) (undo-tree-id43144 . -1427) (undo-tree-id43145 . -1427) (undo-tree-id43146 . -1427) (undo-tree-id43147 . -1427) (undo-tree-id43148 . -1427) (undo-tree-id43149 . -1427) (undo-tree-id43150 . -1427) (undo-tree-id43151 . -1427) (undo-tree-id43152 . -1427) (undo-tree-id43153 . -1427) (undo-tree-id43154 . -1427) (undo-tree-id43155 . -1427) (undo-tree-id43156 . -1427) (undo-tree-id43157 . -1427) (undo-tree-id43158 . -1427) (undo-tree-id43159 . -1427) (undo-tree-id43160 . -1427) (undo-tree-id43161 . -1454) (undo-tree-id43162 . -1454) (undo-tree-id43163 . -1454) (undo-tree-id43164 . -1454) (undo-tree-id43165 . -1454) (undo-tree-id43166 . -1454) (undo-tree-id43167 . -1454) (undo-tree-id43168 . -1454) (undo-tree-id43169 . -1454) (undo-tree-id43170 . -1454) (undo-tree-id43171 . -1454) (undo-tree-id43172 . -1454) (undo-tree-id43173 . -1454) (undo-tree-id43174 . -1454) (undo-tree-id43175 . -1454) (undo-tree-id43176 . -1454) (undo-tree-id43177 . -1454) (undo-tree-id43178 . -1454) (undo-tree-id43179 . -1454) (undo-tree-id43180 . -1454) (undo-tree-id43181 . -1454) (undo-tree-id43182 . -1454) (undo-tree-id43183 . -1454) (undo-tree-id43184 . -1454) (undo-tree-id43185 . -1454) (undo-tree-id43186 . -1454) (undo-tree-id43187 . -1539) (undo-tree-id43188 . -1539) (undo-tree-id43189 . -1539) (undo-tree-id43190 . -1539) (undo-tree-id43191 . -1539) (undo-tree-id43192 . -1539) (undo-tree-id43193 . -1539) (undo-tree-id43194 . -1539) (undo-tree-id43195 . -1539) (undo-tree-id43196 . -1539) (undo-tree-id43197 . -1539) (undo-tree-id43198 . -1539) (undo-tree-id43199 . -1539) (undo-tree-id43200 . -1539) (undo-tree-id43201 . -1539) (undo-tree-id43202 . -1539) (undo-tree-id43203 . -1539) (undo-tree-id43204 . -1539) (undo-tree-id43205 . -1539) (undo-tree-id43206 . -1539) (undo-tree-id43207 . -1539) (undo-tree-id43208 . -1539) (undo-tree-id43209 . -1540) (undo-tree-id43210 . -1540) (undo-tree-id43211 . -1426) (4170 . 5596) (#(" In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection. The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 43 45 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 45 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 46 47 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 47 64 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 64 65 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 65 122 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 122 123 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 123 170 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 170 227 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 227 228 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 228 257 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 257 333 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 333 334 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 334 432 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 432 433 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 433 529 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 529 530 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 530 565 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 565 598 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 598 599 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 599 695 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 695 696 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 696 794 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 794 795 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 795 904 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 904 905 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 905 1004 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1004 1005 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1005 1008 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1008 1009 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1009 1012 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1012 1013 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1013 1099 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1099 1113 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1113 1114 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1114 1215 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1215 1216 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1216 1279 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1279 1280 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1280 1380 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1380 1381 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1381 1422 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1422 1423 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4284)) nil (25774 61450 904295 82000) 0 nil])
([nil nil ((4286 . 5713) (#("- The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.

- In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 49 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 49 106 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 106 107 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 107 136 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 136 212 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 212 213 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 213 262 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 262 311 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 311 312 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 312 408 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 408 409 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 409 444 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 444 477 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 477 478 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 478 574 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 574 575 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 575 673 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 673 674 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 674 783 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 783 784 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 784 883 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 883 884 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 884 887 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 887 888 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 888 891 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 891 892 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 892 978 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 978 992 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 992 993 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 993 1094 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1094 1095 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1095 1158 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1158 1159 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1159 1259 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1259 1260 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1260 1301 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1301 1302 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1302 1303 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1303 1304 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1304 1305 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1305 1306 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1306 1348 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1348 1350 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1350 1351 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1351 1352 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1352 1369 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1369 1370 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1370 1427 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4286) (undo-tree-id43039 . 121) (undo-tree-id43040 . -1305) (undo-tree-id43041 . -1426) (undo-tree-id43042 . -1306) (undo-tree-id43043 . -1305) (undo-tree-id43044 . -1305) (undo-tree-id43045 . -1305) (undo-tree-id43046 . -1305) (undo-tree-id43047 . -1305) (undo-tree-id43048 . -1305) (undo-tree-id43049 . -1305) (undo-tree-id43050 . -1305) (undo-tree-id43051 . -1305) (undo-tree-id43052 . -1305) (undo-tree-id43053 . -1305) (undo-tree-id43054 . -1305) (undo-tree-id43055 . -1305) (undo-tree-id43056 . -1305) (undo-tree-id43057 . -1305) (undo-tree-id43058 . -1305) (undo-tree-id43059 . -1305) (undo-tree-id43060 . -1305) (undo-tree-id43061 . -1305) (undo-tree-id43062 . -1305) (undo-tree-id43063 . -1305) (undo-tree-id43064 . -1305) (undo-tree-id43065 . -1305) (undo-tree-id43066 . -1305) (undo-tree-id43067 . -1305) (undo-tree-id43068 . -1305) (undo-tree-id43069 . -1305) (undo-tree-id43070 . -1305) (undo-tree-id43071 . -1305) (undo-tree-id43072 . -1305) (undo-tree-id43073 . -1305) (undo-tree-id43074 . -1305) (undo-tree-id43075 . -1305) (undo-tree-id43076 . -1305) (undo-tree-id43077 . -1305) (undo-tree-id43078 . -1305) (undo-tree-id43079 . -1305) (undo-tree-id43080 . -1305) (undo-tree-id43081 . -1426) (undo-tree-id43082 . -1426) (undo-tree-id43083 . -1426) (undo-tree-id43084 . -1426) (undo-tree-id43085 . -1426) (undo-tree-id43086 . -1426) (undo-tree-id43087 . -1426) (undo-tree-id43088 . -1426) (undo-tree-id43089 . -1426) (undo-tree-id43090 . -1426) (undo-tree-id43091 . -1426) (undo-tree-id43092 . -1426) (undo-tree-id43093 . -1426) (undo-tree-id43094 . -1426) (undo-tree-id43095 . -1426) (undo-tree-id43096 . -1426) (undo-tree-id43097 . -1426) (undo-tree-id43098 . -1426) (undo-tree-id43099 . -1426) (undo-tree-id43100 . -1426) (undo-tree-id43101 . -1426) (undo-tree-id43102 . -1426) (undo-tree-id43103 . -1426) (undo-tree-id43104 . -1426) (undo-tree-id43105 . -1426) (undo-tree-id43106 . -1426) (undo-tree-id43107 . -1426) (undo-tree-id43108 . -1427) (undo-tree-id43109 . -1427) (undo-tree-id43110 . -1304) (4286 . 5590) (#(" The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇). Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 48 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 48 105 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 105 106 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 106 135 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 135 211 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 211 212 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 212 261 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 261 310 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 310 311 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 311 407 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 407 408 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 408 443 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 443 476 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 476 477 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 477 573 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 573 574 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 574 672 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 672 673 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 673 782 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 782 783 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 783 882 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 882 883 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 883 886 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 886 887 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 887 890 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 890 891 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 891 977 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 977 991 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 991 992 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 992 1093 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1093 1094 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1094 1157 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1157 1158 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1158 1258 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1258 1259 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1259 1300 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1300 1301 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4409)) nil (25774 61450 904232 630000) 0 nil])
([nil nil ((4411 . 5716) (#("- Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.

- The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇)." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 77 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 77 78 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 78 127 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 127 176 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 176 177 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 177 240 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 240 273 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 273 274 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 274 309 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 309 342 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 342 343 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 343 439 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 439 440 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 440 538 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 538 539 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 539 648 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 648 649 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 649 748 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 748 749 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 749 752 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 752 753 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 753 756 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 756 757 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 757 843 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 843 857 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 857 858 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 858 959 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 959 960 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 960 1023 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1023 1024 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1024 1124 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1124 1125 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1125 1166 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1166 1167 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1167 1168 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1168 1169 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1169 1170 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1170 1171 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1171 1218 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1218 1275 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1275 1276 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1276 1305 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4411) (undo-tree-id42764 . 134) (undo-tree-id42765 . -1266) (undo-tree-id42766 . -1304) (undo-tree-id42767 . -1171) (undo-tree-id42768 . -1170) (undo-tree-id42769 . -1170) (undo-tree-id42770 . -1170) (undo-tree-id42771 . -1170) (undo-tree-id42772 . -1170) (undo-tree-id42773 . -1170) (undo-tree-id42774 . -1170) (undo-tree-id42775 . -1170) (undo-tree-id42776 . -1170) (undo-tree-id42777 . -1170) (undo-tree-id42778 . -1170) (undo-tree-id42779 . -1170) (undo-tree-id42780 . -1170) (undo-tree-id42781 . -1170) (undo-tree-id42782 . -1170) (undo-tree-id42783 . -1170) (undo-tree-id42784 . -1170) (undo-tree-id42785 . -1170) (undo-tree-id42786 . -1170) (undo-tree-id42787 . -1170) (undo-tree-id42788 . -1170) (undo-tree-id42789 . -1170) (undo-tree-id42790 . -1170) (undo-tree-id42791 . -1262) (undo-tree-id42792 . -1262) (undo-tree-id42793 . -1262) (undo-tree-id42794 . -1262) (undo-tree-id42795 . -1262) (undo-tree-id42796 . -1262) (undo-tree-id42797 . -1262) (undo-tree-id42798 . -1262) (undo-tree-id42799 . -1262) (undo-tree-id42800 . -1262) (undo-tree-id42801 . -1262) (undo-tree-id42802 . -1262) (undo-tree-id42803 . -1262) (undo-tree-id42804 . -1262) (undo-tree-id42805 . -1262) (undo-tree-id42806 . -1262) (undo-tree-id42807 . -1262) (undo-tree-id42808 . -1262) (undo-tree-id42809 . -1262) (undo-tree-id42810 . -1262) (undo-tree-id42811 . -1262) (undo-tree-id42812 . -1262) (undo-tree-id42813 . -1262) (undo-tree-id42814 . -1262) (undo-tree-id42815 . -1262) (undo-tree-id42816 . -1262) (undo-tree-id42817 . -1262) (undo-tree-id42818 . -1262) (undo-tree-id42819 . -1262) (undo-tree-id42820 . -1262) (undo-tree-id42821 . -1262) (undo-tree-id42822 . -1262) (undo-tree-id42823 . -1262) (undo-tree-id42824 . -1262) (undo-tree-id42825 . -1262) (undo-tree-id42826 . -1262) (undo-tree-id42827 . -1262) (undo-tree-id42828 . -1262) (undo-tree-id42829 . -1262) (undo-tree-id42830 . -1262) (undo-tree-id42831 . -1262) (undo-tree-id42832 . -1262) (undo-tree-id42833 . -1262) (undo-tree-id42834 . -1262) (undo-tree-id42835 . -1262) (undo-tree-id42836 . -1262) (undo-tree-id42837 . -1262) (undo-tree-id42838 . -1262) (undo-tree-id42839 . -1262) (undo-tree-id42840 . -1262) (undo-tree-id42841 . -1262) (undo-tree-id42842 . -1262) (undo-tree-id42843 . -1262) (undo-tree-id42844 . -1262) (undo-tree-id42845 . -1262) (undo-tree-id42846 . -1262) (undo-tree-id42847 . -1262) (undo-tree-id42848 . -1262) (undo-tree-id42849 . -1262) (undo-tree-id42850 . -1262) (undo-tree-id42851 . -1262) (undo-tree-id42852 . -1262) (undo-tree-id42853 . -1262) (undo-tree-id42854 . -1262) (undo-tree-id42855 . -1262) (undo-tree-id42856 . -1262) (undo-tree-id42857 . -1262) (undo-tree-id42858 . -1262) (undo-tree-id42859 . -1262) (undo-tree-id42860 . -1262) (undo-tree-id42861 . -1262) (undo-tree-id42862 . -1262) (undo-tree-id42863 . -1262) (undo-tree-id42864 . -1262) (undo-tree-id42865 . -1262) (undo-tree-id42866 . -1262) (undo-tree-id42867 . -1262) (undo-tree-id42868 . -1262) (undo-tree-id42869 . -1262) (undo-tree-id42870 . -1262) (undo-tree-id42871 . -1262) (undo-tree-id42872 . -1262) (undo-tree-id42873 . -1262) (undo-tree-id42874 . -1262) (undo-tree-id42875 . -1262) (undo-tree-id42876 . -1262) (undo-tree-id42877 . -1262) (undo-tree-id42878 . -1262) (undo-tree-id42879 . -1262) (undo-tree-id42880 . -1262) (undo-tree-id42881 . -1262) (undo-tree-id42882 . -1262) (undo-tree-id42883 . -1262) (undo-tree-id42884 . -1262) (undo-tree-id42885 . -1262) (undo-tree-id42886 . -1262) (undo-tree-id42887 . -1262) (undo-tree-id42888 . -1262) (undo-tree-id42889 . -1262) (undo-tree-id42890 . -1262) (undo-tree-id42891 . -1262) (undo-tree-id42892 . -1262) (undo-tree-id42893 . -1262) (undo-tree-id42894 . -1262) (undo-tree-id42895 . -1262) (undo-tree-id42896 . -1262) (undo-tree-id42897 . -1262) (undo-tree-id42898 . -1262) (undo-tree-id42899 . -1262) (undo-tree-id42900 . -1262) (undo-tree-id42901 . -1262) (undo-tree-id42902 . -1262) (undo-tree-id42903 . -1262) (undo-tree-id42904 . -1262) (undo-tree-id42905 . -1262) (undo-tree-id42906 . -1262) (undo-tree-id42907 . -1262) (undo-tree-id42908 . -1262) (undo-tree-id42909 . -1262) (undo-tree-id42910 . -1262) (undo-tree-id42911 . -1262) (undo-tree-id42912 . -1262) (undo-tree-id42913 . -1262) (undo-tree-id42914 . -1262) (undo-tree-id42915 . -1262) (undo-tree-id42916 . -1262) (undo-tree-id42917 . -1262) (undo-tree-id42918 . -1262) (undo-tree-id42919 . -1262) (undo-tree-id42920 . -1262) (undo-tree-id42921 . -1262) (undo-tree-id42922 . -1262) (undo-tree-id42923 . -1262) (undo-tree-id42924 . -1262) (undo-tree-id42925 . -1262) (undo-tree-id42926 . -1262) (undo-tree-id42927 . -1262) (undo-tree-id42928 . -1262) (undo-tree-id42929 . -1262) (undo-tree-id42930 . -1262) (undo-tree-id42931 . -1262) (undo-tree-id42932 . -1262) (undo-tree-id42933 . -1262) (undo-tree-id42934 . -1262) (undo-tree-id42935 . -1262) (undo-tree-id42936 . -1262) (undo-tree-id42937 . -1262) (undo-tree-id42938 . -1262) (undo-tree-id42939 . -1262) (undo-tree-id42940 . -1262) (undo-tree-id42941 . -1262) (undo-tree-id42942 . -1262) (undo-tree-id42943 . -1262) (undo-tree-id42944 . -1262) (undo-tree-id42945 . -1262) (undo-tree-id42946 . -1262) (undo-tree-id42947 . -1262) (undo-tree-id42948 . -1262) (undo-tree-id42949 . -1262) (undo-tree-id42950 . -1262) (undo-tree-id42951 . -1262) (undo-tree-id42952 . -1262) (undo-tree-id42953 . -1262) (undo-tree-id42954 . -1262) (undo-tree-id42955 . -1262) (undo-tree-id42956 . -1262) (undo-tree-id42957 . -1262) (undo-tree-id42958 . -1262) (undo-tree-id42959 . -1262) (undo-tree-id42960 . -1262) (undo-tree-id42961 . -1262) (undo-tree-id42962 . -1262) (undo-tree-id42963 . -1262) (undo-tree-id42964 . -1262) (undo-tree-id42965 . -1262) (undo-tree-id42966 . -1262) (undo-tree-id42967 . -1262) (undo-tree-id42968 . -1262) (undo-tree-id42969 . -1262) (undo-tree-id42970 . -1262) (undo-tree-id42971 . -1262) (undo-tree-id42972 . -1262) (undo-tree-id42973 . -1262) (undo-tree-id42974 . -1264) (undo-tree-id42975 . -1264) (undo-tree-id42976 . -1264) (undo-tree-id42977 . -1264) (undo-tree-id42978 . -1264) (undo-tree-id42979 . -1264) (undo-tree-id42980 . -1264) (undo-tree-id42981 . -1264) (undo-tree-id42982 . -1264) (undo-tree-id42983 . -1264) (undo-tree-id42984 . -1264) (undo-tree-id42985 . -1264) (undo-tree-id42986 . -1264) (undo-tree-id42987 . -1264) (undo-tree-id42988 . -1264) (undo-tree-id42989 . -1264) (undo-tree-id42990 . -1266) (undo-tree-id42991 . -1266) (undo-tree-id42992 . -1266) (undo-tree-id42993 . -1266) (undo-tree-id42994 . -1266) (undo-tree-id42995 . -1266) (undo-tree-id42996 . -1266) (undo-tree-id42997 . -1266) (undo-tree-id42998 . -1266) (undo-tree-id42999 . -1266) (undo-tree-id43000 . -1266) (undo-tree-id43001 . -1266) (undo-tree-id43002 . -1266) (undo-tree-id43003 . -1266) (undo-tree-id43004 . -1266) (undo-tree-id43005 . -1266) (undo-tree-id43006 . -1170) (undo-tree-id43007 . -1304) (undo-tree-id43008 . -1304) (undo-tree-id43009 . -1304) (undo-tree-id43010 . -1304) (undo-tree-id43011 . -1304) (undo-tree-id43012 . -1304) (undo-tree-id43013 . -1304) (undo-tree-id43014 . -1304) (undo-tree-id43015 . -1304) (undo-tree-id43016 . -1304) (undo-tree-id43017 . -1304) (undo-tree-id43018 . -1304) (undo-tree-id43019 . -1304) (undo-tree-id43020 . -1304) (undo-tree-id43021 . -1304) (undo-tree-id43022 . -1304) (undo-tree-id43023 . -1304) (undo-tree-id43024 . -1304) (undo-tree-id43025 . -1304) (undo-tree-id43026 . -1304) (undo-tree-id43027 . -1304) (undo-tree-id43028 . -1304) (undo-tree-id43029 . -1304) (undo-tree-id43030 . -1304) (undo-tree-id43031 . -1304) (undo-tree-id43032 . -1304) (undo-tree-id43033 . -1304) (undo-tree-id43034 . 3) (undo-tree-id43035 . -1303) (undo-tree-id43036 . -1305) (undo-tree-id43037 . -1305) (undo-tree-id43038 . -1169) (4411 . 5580) (#(" Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order. The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 76 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 76 77 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 77 126 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 126 175 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 175 176 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 176 239 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 239 272 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 272 273 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 273 308 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 308 341 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 341 342 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 342 438 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 438 439 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 439 537 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 537 538 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 538 647 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 647 648 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 648 747 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 747 748 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 748 751 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 751 752 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 752 755 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 755 756 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 756 842 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 842 856 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 856 857 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 857 958 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 958 959 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 959 1022 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1022 1023 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1023 1123 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1123 1124 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1124 1165 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1165 1166 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4547)) nil (25774 61450 904181 550000) 0 nil])
([nil nil ((4549 . 5719) (#("- The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.

- Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 22 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 22 23 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 23 86 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 86 119 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 119 120 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 120 155 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 155 188 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 188 189 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 189 208 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 208 285 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 285 286 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 286 384 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 384 385 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 385 494 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 494 495 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 495 594 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 594 595 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 595 598 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 598 599 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 599 602 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 602 603 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 603 689 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 689 703 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 703 704 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 704 805 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 805 806 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 806 869 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 869 870 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 870 970 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 970 971 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 971 1012 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1012 1013 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1013 1014 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1014 1015 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1015 1016 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1016 1017 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1017 1092 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1092 1093 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1093 1142 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1142 1170 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4549) (undo-tree-id42717 . 153) (undo-tree-id42718 . -1016) (undo-tree-id42719 . -1169) (undo-tree-id42720 . -1017) (undo-tree-id42721 . -1016) (undo-tree-id42722 . -1016) (undo-tree-id42723 . -1016) (undo-tree-id42724 . -1016) (undo-tree-id42725 . -1016) (undo-tree-id42726 . -1016) (undo-tree-id42727 . -1016) (undo-tree-id42728 . -1016) (undo-tree-id42729 . -1016) (undo-tree-id42730 . -1016) (undo-tree-id42731 . -1016) (undo-tree-id42732 . -1016) (undo-tree-id42733 . -1016) (undo-tree-id42734 . -1016) (undo-tree-id42735 . -1016) (undo-tree-id42736 . -1016) (undo-tree-id42737 . -1016) (undo-tree-id42738 . -1016) (undo-tree-id42739 . -1169) (undo-tree-id42740 . -1169) (undo-tree-id42741 . -1169) (undo-tree-id42742 . -1169) (undo-tree-id42743 . -1169) (undo-tree-id42744 . -1169) (undo-tree-id42745 . -1169) (undo-tree-id42746 . -1169) (undo-tree-id42747 . -1169) (undo-tree-id42748 . -1169) (undo-tree-id42749 . -1169) (undo-tree-id42750 . -1169) (undo-tree-id42751 . -1169) (undo-tree-id42752 . -1169) (undo-tree-id42753 . -1169) (undo-tree-id42754 . -1169) (undo-tree-id42755 . -1169) (undo-tree-id42756 . -1169) (undo-tree-id42757 . -1169) (undo-tree-id42758 . -1169) (undo-tree-id42759 . -1169) (undo-tree-id42760 . -1169) (undo-tree-id42761 . -1170) (undo-tree-id42762 . -1170) (undo-tree-id42763 . -1015) (4549 . 5564) (#(" The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both. Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 21 22 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 22 85 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 85 118 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 118 119 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 119 154 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 154 187 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 187 188 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 188 207 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 207 284 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 284 285 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 285 383 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 383 384 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 384 493 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 493 494 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 494 593 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 593 594 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 594 597 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 597 598 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 598 601 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 601 602 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 602 688 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 688 702 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 702 703 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 703 804 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 804 805 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 805 868 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 868 869 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 869 969 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 969 970 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 970 1011 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1011 1012 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4704)) nil (25774 61450 904018 325000) 0 nil])
([nil nil ((4706 . 5722) (#("- Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.

- The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 21 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 21 98 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 98 99 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 99 156 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 156 197 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 197 198 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 198 307 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 307 308 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 308 407 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 407 408 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 408 411 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 411 412 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 412 415 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 415 416 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 416 502 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 502 516 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 516 517 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 517 618 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 618 619 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 619 682 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 682 683 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 683 783 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 783 784 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 784 825 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 825 826 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 826 827 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 827 828 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 828 829 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 829 830 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 830 850 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 850 851 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 851 914 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 914 947 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 947 948 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 948 983 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 983 1016 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4706) (undo-tree-id42670 . 186) (undo-tree-id42671 . -829) (undo-tree-id42672 . -1015) (undo-tree-id42673 . -830) (undo-tree-id42674 . -829) (undo-tree-id42675 . -829) (undo-tree-id42676 . -829) (undo-tree-id42677 . -829) (undo-tree-id42678 . -829) (undo-tree-id42679 . -829) (undo-tree-id42680 . -829) (undo-tree-id42681 . -829) (undo-tree-id42682 . -829) (undo-tree-id42683 . -829) (undo-tree-id42684 . -829) (undo-tree-id42685 . -829) (undo-tree-id42686 . -829) (undo-tree-id42687 . -829) (undo-tree-id42688 . -829) (undo-tree-id42689 . -829) (undo-tree-id42690 . -829) (undo-tree-id42691 . -829) (undo-tree-id42692 . -1015) (undo-tree-id42693 . -1015) (undo-tree-id42694 . -1015) (undo-tree-id42695 . -1015) (undo-tree-id42696 . -1015) (undo-tree-id42697 . -1015) (undo-tree-id42698 . -1015) (undo-tree-id42699 . -1015) (undo-tree-id42700 . -1015) (undo-tree-id42701 . -1015) (undo-tree-id42702 . -1015) (undo-tree-id42703 . -1015) (undo-tree-id42704 . -1015) (undo-tree-id42705 . -1015) (undo-tree-id42706 . -1015) (undo-tree-id42707 . -1015) (undo-tree-id42708 . -1015) (undo-tree-id42709 . -1015) (undo-tree-id42710 . -1015) (undo-tree-id42711 . -1015) (undo-tree-id42712 . -1015) (undo-tree-id42713 . -1015) (undo-tree-id42714 . -1016) (undo-tree-id42715 . -1016) (undo-tree-id42716 . -828) (4706 . 5534) (#(" Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element. For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 20 97 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 97 98 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 98 155 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 155 196 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 196 197 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 197 306 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 306 307 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 307 406 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 406 407 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 407 410 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 410 411 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 411 414 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 414 415 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 415 501 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 501 515 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 515 516 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 516 617 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 617 618 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 618 681 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 681 682 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 682 782 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 782 783 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 783 824 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 824 825 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4894)) nil (25774 61450 903986 196000) 0 nil])
([nil nil ((4896 . 5725) (#("- For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.

- Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 12 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 12 53 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 53 54 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 54 163 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 163 164 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 164 166 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 166 263 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 263 264 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 264 267 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 267 268 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 268 271 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 271 272 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 272 358 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 358 372 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 372 373 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 373 474 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 474 475 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 475 538 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 538 539 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 539 639 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 639 640 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 640 681 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 681 682 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 682 683 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 683 684 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 684 685 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 685 686 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 686 705 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 705 782 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 782 783 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 783 829 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4896) (undo-tree-id42667 . 143) (undo-tree-id42668 . -685) (undo-tree-id42669 . -828) (4896 . 5580) (#(" For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass. These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 11 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 52 53 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 53 162 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 162 163 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 163 165 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 165 262 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 262 263 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 263 266 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 266 267 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 267 270 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 270 271 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 271 357 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 357 371 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 371 372 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 372 473 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 473 474 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 474 537 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 537 538 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 538 638 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 638 639 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 639 680 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 680 681 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 5041)) nil (25774 61450 903955 876000) 0 nil])
([nil nil ((5043 . 5728) (#("- These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.

- For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 95 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 95 96 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 96 99 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 99 100 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 100 103 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 103 104 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 104 185 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 185 190 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 190 204 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 204 205 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 205 306 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 306 307 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 307 370 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 370 371 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 371 471 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 471 472 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 472 513 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 513 514 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 514 515 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 515 516 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 516 517 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 517 518 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 518 528 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 528 569 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 569 570 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 570 679 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 679 680 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 680 682 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 682 685 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 5043) (undo-tree-id42533 . 167) (undo-tree-id42534 . -517) (undo-tree-id42535 . -684) (undo-tree-id42536 . -684) (undo-tree-id42537 . -684) (undo-tree-id42538 . -684) (undo-tree-id42539 . -684) (undo-tree-id42540 . -684) (undo-tree-id42541 . -684) (undo-tree-id42542 . -684) (undo-tree-id42543 . -684) (undo-tree-id42544 . -684) (undo-tree-id42545 . -684) (undo-tree-id42546 . -684) (undo-tree-id42547 . -684) (undo-tree-id42548 . -684) (undo-tree-id42549 . -684) (undo-tree-id42550 . -684) (undo-tree-id42551 . -684) (undo-tree-id42552 . -684) (undo-tree-id42553 . -684) (undo-tree-id42554 . -684) (undo-tree-id42555 . -684) (undo-tree-id42556 . -684) (undo-tree-id42557 . -684) (undo-tree-id42558 . -684) (undo-tree-id42559 . -684) (undo-tree-id42560 . -684) (undo-tree-id42561 . -684) (undo-tree-id42562 . -684) (undo-tree-id42563 . -684) (undo-tree-id42564 . -684) (undo-tree-id42565 . -684) (undo-tree-id42566 . -684) (undo-tree-id42567 . -684) (undo-tree-id42568 . -684) (undo-tree-id42569 . -684) (undo-tree-id42570 . -684) (undo-tree-id42571 . -684) (undo-tree-id42572 . -684) (undo-tree-id42573 . -684) (undo-tree-id42574 . -684) (undo-tree-id42575 . -684) (undo-tree-id42576 . -684) (undo-tree-id42577 . -684) (undo-tree-id42578 . -684) (undo-tree-id42579 . -684) (undo-tree-id42580 . -684) (undo-tree-id42581 . -684) (undo-tree-id42582 . -684) (undo-tree-id42583 . -684) (undo-tree-id42584 . -684) (undo-tree-id42585 . -684) (undo-tree-id42586 . -684) (undo-tree-id42587 . -684) (undo-tree-id42588 . -684) (undo-tree-id42589 . -684) (undo-tree-id42590 . -684) (undo-tree-id42591 . -684) (undo-tree-id42592 . -684) (undo-tree-id42593 . -684) (undo-tree-id42594 . -684) (undo-tree-id42595 . -684) (undo-tree-id42596 . -684) (undo-tree-id42597 . -684) (undo-tree-id42598 . -684) (undo-tree-id42599 . -684) (undo-tree-id42600 . -684) (undo-tree-id42601 . -684) (undo-tree-id42602 . -684) (undo-tree-id42603 . -684) (undo-tree-id42604 . -684) (undo-tree-id42605 . -684) (undo-tree-id42606 . -684) (undo-tree-id42607 . -684) (undo-tree-id42608 . -684) (undo-tree-id42609 . -684) (undo-tree-id42610 . -684) (undo-tree-id42611 . -684) (undo-tree-id42612 . -684) (undo-tree-id42613 . -684) (undo-tree-id42614 . -684) (undo-tree-id42615 . -684) (undo-tree-id42616 . -684) (undo-tree-id42617 . -684) (undo-tree-id42618 . -684) (undo-tree-id42619 . -684) (undo-tree-id42620 . -684) (undo-tree-id42621 . -684) (undo-tree-id42622 . -684) (undo-tree-id42623 . -684) (undo-tree-id42624 . -684) (undo-tree-id42625 . -684) (undo-tree-id42626 . -684) (undo-tree-id42627 . -684) (undo-tree-id42628 . -684) (undo-tree-id42629 . -684) (undo-tree-id42630 . -684) (undo-tree-id42631 . -684) (undo-tree-id42632 . -684) (undo-tree-id42633 . -684) (undo-tree-id42634 . -684) (undo-tree-id42635 . -684) (undo-tree-id42636 . -684) (undo-tree-id42637 . -684) (undo-tree-id42638 . -684) (undo-tree-id42639 . -684) (undo-tree-id42640 . -684) (undo-tree-id42641 . -684) (undo-tree-id42642 . -684) (undo-tree-id42643 . -684) (undo-tree-id42644 . -684) (undo-tree-id42645 . -684) (undo-tree-id42646 . -684) (undo-tree-id42647 . -684) (undo-tree-id42648 . -684) (undo-tree-id42649 . -684) (undo-tree-id42650 . -684) (undo-tree-id42651 . -684) (undo-tree-id42652 . -684) (undo-tree-id42653 . -684) (undo-tree-id42654 . -684) (undo-tree-id42655 . -684) (undo-tree-id42656 . -684) (undo-tree-id42657 . -684) (undo-tree-id42658 . -684) (undo-tree-id42659 . -684) (undo-tree-id42660 . -684) (undo-tree-id42661 . -684) (undo-tree-id42662 . -684) (undo-tree-id42663 . -684) (undo-tree-id42664 . -685) (undo-tree-id42665 . -685) (undo-tree-id42666 . -516) (5043 . 5559) (#(" These two hidden states are then concatenated to form the hidden state ℎ(2) . For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 94 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 94 95 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 95 98 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 98 99 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 99 102 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 102 103 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 103 184 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 184 189 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 189 203 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 203 204 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 204 305 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 305 306 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 306 369 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 369 370 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 370 470 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 470 471 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 471 512 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 512 513 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 5212)) nil (25774 61450 903948 637000) 0 nil])
([nil nil ((5214 . 5731) (#("- For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.

- These two hidden states are then concatenated to form the hidden state ℎ(2) ." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 17 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 17 18 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 18 21 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 21 22 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 22 25 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 25 26 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 26 107 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 107 112 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 112 126 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 126 127 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 127 228 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 228 229 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 229 251 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 251 292 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 292 293 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 293 393 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 393 394 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 394 435 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 435 436 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 436 437 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 437 438 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 438 439 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 439 440 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 440 517 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 5214) (undo-tree-id42481 . 77) (undo-tree-id42482 . -439) (undo-tree-id42483 . -516) (undo-tree-id42484 . -440) (undo-tree-id42485 . -439) (undo-tree-id42486 . -439) (undo-tree-id42487 . -439) (undo-tree-id42488 . -439) (undo-tree-id42489 . -439) (undo-tree-id42490 . -439) (undo-tree-id42491 . -439) (undo-tree-id42492 . -439) (undo-tree-id42493 . -439) (undo-tree-id42494 . -439) (undo-tree-id42495 . -439) (undo-tree-id42496 . -439) (undo-tree-id42497 . -439) (undo-tree-id42498 . -439) (undo-tree-id42499 . -439) (undo-tree-id42500 . -439) (undo-tree-id42501 . -439) (undo-tree-id42502 . -439) (undo-tree-id42503 . -439) (undo-tree-id42504 . -439) (undo-tree-id42505 . -439) (undo-tree-id42506 . -439) (undo-tree-id42507 . -439) (undo-tree-id42508 . -516) (undo-tree-id42509 . -516) (undo-tree-id42510 . -516) (undo-tree-id42511 . -516) (undo-tree-id42512 . -516) (undo-tree-id42513 . -516) (undo-tree-id42514 . -516) (undo-tree-id42515 . -516) (undo-tree-id42516 . -516) (undo-tree-id42517 . -516) (undo-tree-id42518 . -516) (undo-tree-id42519 . -516) (undo-tree-id42520 . -516) (undo-tree-id42521 . -516) (undo-tree-id42522 . -516) (undo-tree-id42523 . -516) (undo-tree-id42524 . -516) (undo-tree-id42525 . -516) (undo-tree-id42526 . -516) (undo-tree-id42527 . -516) (undo-tree-id42528 . -516) (undo-tree-id42529 . -516) (undo-tree-id42530 . -517) (undo-tree-id42531 . -517) (undo-tree-id42532 . -438) (5214 . 5652) (#(" For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements. We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 16 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 16 17 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 17 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 20 21 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 21 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 24 25 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 25 106 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 106 111 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 111 125 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 125 126 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 126 227 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 227 228 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 228 250 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 250 291 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 291 292 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 292 392 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 392 393 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 393 434 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 434 435 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 5293)) nil (25774 61450 903859 997000) 0 nil])
([nil nil ((5295 . 5734) (#("- We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.

- For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 93 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 93 94 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 94 116 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 116 157 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 157 158 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 158 258 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 258 259 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 259 284 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 284 300 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 300 301 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 301 302 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 302 303 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 303 304 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 304 305 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 305 320 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 320 321 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 321 324 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 324 325 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 325 328 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 328 329 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 329 410 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 410 415 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 415 429 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 429 430 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 430 439 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 5295) (undo-tree-id42429 . 134) (undo-tree-id42430 . -304) (undo-tree-id42431 . -438) (undo-tree-id42432 . -305) (undo-tree-id42433 . -304) (undo-tree-id42434 . -304) (undo-tree-id42435 . -304) (undo-tree-id42436 . -304) (undo-tree-id42437 . -304) (undo-tree-id42438 . -304) (undo-tree-id42439 . -304) (undo-tree-id42440 . -304) (undo-tree-id42441 . -304) (undo-tree-id42442 . -304) (undo-tree-id42443 . -304) (undo-tree-id42444 . -304) (undo-tree-id42445 . -304) (undo-tree-id42446 . -304) (undo-tree-id42447 . -304) (undo-tree-id42448 . -304) (undo-tree-id42449 . -304) (undo-tree-id42450 . -304) (undo-tree-id42451 . -304) (undo-tree-id42452 . -304) (undo-tree-id42453 . -304) (undo-tree-id42454 . -304) (undo-tree-id42455 . -304) (undo-tree-id42456 . -438) (undo-tree-id42457 . -438) (undo-tree-id42458 . -438) (undo-tree-id42459 . -438) (undo-tree-id42460 . -438) (undo-tree-id42461 . -438) (undo-tree-id42462 . -438) (undo-tree-id42463 . -438) (undo-tree-id42464 . -438) (undo-tree-id42465 . -438) (undo-tree-id42466 . -438) (undo-tree-id42467 . -438) (undo-tree-id42468 . -438) (undo-tree-id42469 . -438) (undo-tree-id42470 . -438) (undo-tree-id42471 . -438) (undo-tree-id42472 . -438) (undo-tree-id42473 . -438) (undo-tree-id42474 . -438) (undo-tree-id42475 . -438) (undo-tree-id42476 . -438) (undo-tree-id42477 . -438) (undo-tree-id42478 . -439) (undo-tree-id42479 . -439) (undo-tree-id42480 . -303) (5295 . 5598) (#(" We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions. In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 92 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 92 93 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 93 115 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 115 156 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 156 157 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 157 257 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 257 258 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 258 283 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 283 299 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 299 300 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 5431)) nil (25774 61450 903825 161000) 0 nil])
([nil nil ((5433 . 5737) (#("- In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs.

- We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 102 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 102 103 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 103 128 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 128 144 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 144 145 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 145 146 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 146 147 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 147 148 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 148 149 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 149 240 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 240 241 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 241 263 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 263 304 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 5433) (undo-tree-id42382 . 155) (undo-tree-id42383 . -148) (undo-tree-id42384 . -303) (undo-tree-id42385 . -149) (undo-tree-id42386 . -148) (undo-tree-id42387 . -148) (undo-tree-id42388 . -148) (undo-tree-id42389 . -148) (undo-tree-id42390 . -148) (undo-tree-id42391 . -148) (undo-tree-id42392 . -148) (undo-tree-id42393 . -148) (undo-tree-id42394 . -148) (undo-tree-id42395 . -148) (undo-tree-id42396 . -148) (undo-tree-id42397 . -148) (undo-tree-id42398 . -148) (undo-tree-id42399 . -148) (undo-tree-id42400 . -148) (undo-tree-id42401 . -148) (undo-tree-id42402 . -148) (undo-tree-id42403 . -148) (undo-tree-id42404 . -303) (undo-tree-id42405 . -303) (undo-tree-id42406 . -303) (undo-tree-id42407 . -303) (undo-tree-id42408 . -303) (undo-tree-id42409 . -303) (undo-tree-id42410 . -303) (undo-tree-id42411 . -303) (undo-tree-id42412 . -303) (undo-tree-id42413 . -303) (undo-tree-id42414 . -303) (undo-tree-id42415 . -303) (undo-tree-id42416 . -303) (undo-tree-id42417 . -303) (undo-tree-id42418 . -303) (undo-tree-id42419 . -303) (undo-tree-id42420 . -303) (undo-tree-id42421 . -303) (undo-tree-id42422 . -303) (undo-tree-id42423 . -303) (undo-tree-id42424 . -303) (undo-tree-id42425 . -303) (undo-tree-id42426 . -304) (undo-tree-id42427 . -304) (undo-tree-id42428 . -147) (5433 . 5580) (#(" In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 101 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 101 102 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 102 127 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 127 143 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 143 144 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 5590)) nil (25774 61450 903791 24000) 0 nil])
([nil nil ((#("The first RNN (" 0 15 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3820) (undo-tree-id42124 . -14) (undo-tree-id42125 . -14) (undo-tree-id42126 . -14) (undo-tree-id42127 . -14) (undo-tree-id42128 . -4) (undo-tree-id42129 . -4) (undo-tree-id42130 . -4) (undo-tree-id42131 . -4) (undo-tree-id42132 . -4) (undo-tree-id42133 . -4) (undo-tree-id42134 . -4) (undo-tree-id42135 . -4) (undo-tree-id42136 . -4) (undo-tree-id42137 . -4) (undo-tree-id42138 . -4) (undo-tree-id42139 . -4) (undo-tree-id42140 . -4) (undo-tree-id42141 . -4) (undo-tree-id42142 . -4) (undo-tree-id42143 . -4) (undo-tree-id42144 . -10) (undo-tree-id42145 . -10) (undo-tree-id42146 . -10) (undo-tree-id42147 . -10) (undo-tree-id42148 . -10) (undo-tree-id42149 . -10) (undo-tree-id42150 . -10) (undo-tree-id42151 . -10) (undo-tree-id42152 . -10) (undo-tree-id42153 . -10) (undo-tree-id42154 . -10) (undo-tree-id42155 . -10) (undo-tree-id42156 . -10) (undo-tree-id42157 . -10) (undo-tree-id42158 . -10) (undo-tree-id42159 . -10) (undo-tree-id42160 . -10) (undo-tree-id42161 . -10) (undo-tree-id42162 . -10) (undo-tree-id42163 . -10) (undo-tree-id42164 . -10) (undo-tree-id42165 . -10) (undo-tree-id42166 . -10) (undo-tree-id42167 . -10) (undo-tree-id42168 . -10) (undo-tree-id42169 . -10) (undo-tree-id42170 . -4) (undo-tree-id42171 . -4) (undo-tree-id42172 . -4) (undo-tree-id42173 . -4) (undo-tree-id42174 . -4) (undo-tree-id42175 . -4) (undo-tree-id42176 . -4) (undo-tree-id42177 . -4) (undo-tree-id42178 . -4) (undo-tree-id42179 . -4) (undo-tree-id42180 . -4) (undo-tree-id42181 . -4) (undo-tree-id42182 . -4) (undo-tree-id42183 . -4) (undo-tree-id42184 . -4) (undo-tree-id42185 . -4) (undo-tree-id42186 . -4) (undo-tree-id42187 . -4) (undo-tree-id42188 . -4) (undo-tree-id42189 . -4) (undo-tree-id42190 . -4) (undo-tree-id42191 . -15) (undo-tree-id42192 . -14) (undo-tree-id42193 . -2) (undo-tree-id42194 . -2) (undo-tree-id42195 . -2) (undo-tree-id42196 . -2) (undo-tree-id42197 . -2) (undo-tree-id42198 . -2) (undo-tree-id42199 . -2) (undo-tree-id42200 . -2) (undo-tree-id42201 . -2) (undo-tree-id42202 . -2) (undo-tree-id42203 . -2) (undo-tree-id42204 . -2) (undo-tree-id42205 . -2) (undo-tree-id42206 . -2) (undo-tree-id42207 . -2) (undo-tree-id42208 . -2) (undo-tree-id42209 . -2) (undo-tree-id42210 . -2) (undo-tree-id42211 . -2) (undo-tree-id42212 . -2) (undo-tree-id42213 . -2) (undo-tree-id42214 . -8) (undo-tree-id42215 . -8) (undo-tree-id42216 . -8) (undo-tree-id42217 . -8) (undo-tree-id42218 . -8) (undo-tree-id42219 . -8) (undo-tree-id42220 . -8) (undo-tree-id42221 . -8) (undo-tree-id42222 . -8) (undo-tree-id42223 . -8) (undo-tree-id42224 . -8) (undo-tree-id42225 . -8) (undo-tree-id42226 . -8) (undo-tree-id42227 . -8) (undo-tree-id42228 . -8) (undo-tree-id42229 . -8) (undo-tree-id42230 . -8) (undo-tree-id42231 . -8) (undo-tree-id42232 . -8) (undo-tree-id42233 . -8) (undo-tree-id42234 . -8) (undo-tree-id42235 . -8) (undo-tree-id42236 . -8) (undo-tree-id42237 . -8) (undo-tree-id42238 . -8) (undo-tree-id42239 . -8) (undo-tree-id42240 . -8) (undo-tree-id42241 . -8) (undo-tree-id42242 . -8) (undo-tree-id42243 . -8) (undo-tree-id42244 . -8) (undo-tree-id42245 . -9) (undo-tree-id42246 . -9) (undo-tree-id42247 . -9) (undo-tree-id42248 . -9) (undo-tree-id42249 . -9) (undo-tree-id42250 . -9) (undo-tree-id42251 . -9) (undo-tree-id42252 . -9) (undo-tree-id42253 . -9) (undo-tree-id42254 . -9) (undo-tree-id42255 . -9) (undo-tree-id42256 . -9) (undo-tree-id42257 . -9) (undo-tree-id42258 . -9) (undo-tree-id42259 . -9) (undo-tree-id42260 . -9) (undo-tree-id42261 . -9) (undo-tree-id42262 . -9) (undo-tree-id42263 . -9) (undo-tree-id42264 . -9) (undo-tree-id42265 . -9) (undo-tree-id42266 . 5) (undo-tree-id42267 . -13) (undo-tree-id42268 . -10) (undo-tree-id42269 . -10) (undo-tree-id42270 . -10) (undo-tree-id42271 . -10) (undo-tree-id42272 . -10) (undo-tree-id42273 . -10) (undo-tree-id42274 . -10) (undo-tree-id42275 . -10) (undo-tree-id42276 . -10) (undo-tree-id42277 . -10) (undo-tree-id42278 . -10) (undo-tree-id42279 . -10) (undo-tree-id42280 . -10) (undo-tree-id42281 . -10) (undo-tree-id42282 . -10) (undo-tree-id42283 . -10) (undo-tree-id42284 . -10) (undo-tree-id42285 . -10) (undo-tree-id42286 . -10) (undo-tree-id42287 . -10) (undo-tree-id42288 . -10) (undo-tree-id42289 . -11) (undo-tree-id42290 . -11) (undo-tree-id42291 . -11) (undo-tree-id42292 . -11) (undo-tree-id42293 . -11) (undo-tree-id42294 . -11) (undo-tree-id42295 . -11) (undo-tree-id42296 . -11) (undo-tree-id42297 . -11) (undo-tree-id42298 . -11) (undo-tree-id42299 . -11) (undo-tree-id42300 . -11) (undo-tree-id42301 . -11) (undo-tree-id42302 . -11) (undo-tree-id42303 . -11) (undo-tree-id42304 . -11) (undo-tree-id42305 . -11) (undo-tree-id42306 . -11) (undo-tree-id42307 . -11) (undo-tree-id42308 . -11) (undo-tree-id42309 . -11) (undo-tree-id42310 . -12) (undo-tree-id42311 . -12) (undo-tree-id42312 . -12) (undo-tree-id42313 . -12) (undo-tree-id42314 . -12) (undo-tree-id42315 . -12) (undo-tree-id42316 . -12) (undo-tree-id42317 . -12) (undo-tree-id42318 . -12) (undo-tree-id42319 . -12) (undo-tree-id42320 . -12) (undo-tree-id42321 . -12) (undo-tree-id42322 . -12) (undo-tree-id42323 . -12) (undo-tree-id42324 . -12) (undo-tree-id42325 . -12) (undo-tree-id42326 . -12) (undo-tree-id42327 . -12) (undo-tree-id42328 . -12) (undo-tree-id42329 . -12) (undo-tree-id42330 . -12) (undo-tree-id42331 . -13) (undo-tree-id42332 . -13) (undo-tree-id42333 . -13) (undo-tree-id42334 . -13) (undo-tree-id42335 . -13) (undo-tree-id42336 . -13) (undo-tree-id42337 . -13) (undo-tree-id42338 . -13) (undo-tree-id42339 . -13) (undo-tree-id42340 . -13) (undo-tree-id42341 . -13) (undo-tree-id42342 . -13) (undo-tree-id42343 . -13) (undo-tree-id42344 . -13) (undo-tree-id42345 . -13) (undo-tree-id42346 . -13) (undo-tree-id42347 . -13) (undo-tree-id42348 . -13) (undo-tree-id42349 . -13) (undo-tree-id42350 . -13) (undo-tree-id42351 . -13) (undo-tree-id42352 . -14) (undo-tree-id42353 . -14) (undo-tree-id42354 . -14) (undo-tree-id42355 . -14) (undo-tree-id42356 . -14) (undo-tree-id42357 . -14) (undo-tree-id42358 . -14) (undo-tree-id42359 . -14) (undo-tree-id42360 . -14) (undo-tree-id42361 . -14) (undo-tree-id42362 . -14) (undo-tree-id42363 . -14) (undo-tree-id42364 . -14) (undo-tree-id42365 . -14) (undo-tree-id42366 . -14) (undo-tree-id42367 . 1) (undo-tree-id42368 . -15) (undo-tree-id42369 . -14) (undo-tree-id42370 . -14) (undo-tree-id42371 . -14) (undo-tree-id42372 . -14) (undo-tree-id42373 . -14) (undo-tree-id42374 . -14) (undo-tree-id42375 . -14) (undo-tree-id42376 . -14) (undo-tree-id42377 . -14) (undo-tree-id42378 . -14) (undo-tree-id42379 . -14) (undo-tree-id42380 . -14) (undo-tree-id42381 . -15) 3834) nil (25774 61450 903755 428000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3826) (undo-tree-id42120 . 1) (undo-tree-id42121 . -1) (undo-tree-id42122 . -1) (undo-tree-id42123 . -1)) nil (25774 61450 903602 101000) 0 nil])
([nil nil ((#("of the attention-based RNN in Figure 16.3 " 0 42 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3827) (undo-tree-id41848 . -41) (undo-tree-id41849 . -41) (undo-tree-id41850 . -41) (undo-tree-id41851 . -41) (undo-tree-id41852 . -42) (undo-tree-id41853 . -41) (undo-tree-id41854 . -1) (undo-tree-id41855 . -1) (undo-tree-id41856 . -1) (undo-tree-id41857 . -1) (undo-tree-id41858 . -1) (undo-tree-id41859 . -1) (undo-tree-id41860 . -1) (undo-tree-id41861 . -1) (undo-tree-id41862 . -1) (undo-tree-id41863 . -1) (undo-tree-id41864 . -1) (undo-tree-id41865 . -1) (undo-tree-id41866 . -1) (undo-tree-id41867 . -1) (undo-tree-id41868 . -1) (undo-tree-id41869 . -1) (undo-tree-id41870 . -1) (undo-tree-id41871 . -1) (undo-tree-id41872 . -1) (undo-tree-id41873 . -1) (undo-tree-id41874 . -1) (undo-tree-id41875 . -5) (undo-tree-id41876 . -5) (undo-tree-id41877 . -5) (undo-tree-id41878 . -5) (undo-tree-id41879 . -5) (undo-tree-id41880 . -5) (undo-tree-id41881 . -5) (undo-tree-id41882 . -5) (undo-tree-id41883 . -5) (undo-tree-id41884 . -5) (undo-tree-id41885 . -5) (undo-tree-id41886 . -5) (undo-tree-id41887 . -5) (undo-tree-id41888 . -5) (undo-tree-id41889 . -5) (undo-tree-id41890 . -5) (undo-tree-id41891 . -5) (undo-tree-id41892 . -5) (undo-tree-id41893 . -5) (undo-tree-id41894 . -5) (undo-tree-id41895 . -5) (undo-tree-id41896 . -15) (undo-tree-id41897 . -15) (undo-tree-id41898 . -15) (undo-tree-id41899 . -15) (undo-tree-id41900 . -15) (undo-tree-id41901 . -15) (undo-tree-id41902 . -15) (undo-tree-id41903 . -15) (undo-tree-id41904 . -15) (undo-tree-id41905 . -15) (undo-tree-id41906 . -15) (undo-tree-id41907 . -15) (undo-tree-id41908 . -15) (undo-tree-id41909 . -15) (undo-tree-id41910 . -15) (undo-tree-id41911 . -15) (undo-tree-id41912 . -15) (undo-tree-id41913 . -15) (undo-tree-id41914 . -15) (undo-tree-id41915 . -15) (undo-tree-id41916 . -15) (undo-tree-id41917 . -16) (undo-tree-id41918 . -16) (undo-tree-id41919 . -16) (undo-tree-id41920 . -16) (undo-tree-id41921 . -16) (undo-tree-id41922 . -16) (undo-tree-id41923 . -16) (undo-tree-id41924 . -16) (undo-tree-id41925 . -16) (undo-tree-id41926 . -16) (undo-tree-id41927 . -16) (undo-tree-id41928 . -16) (undo-tree-id41929 . -16) (undo-tree-id41930 . -16) (undo-tree-id41931 . -16) (undo-tree-id41932 . -16) (undo-tree-id41933 . -16) (undo-tree-id41934 . -16) (undo-tree-id41935 . -16) (undo-tree-id41936 . -16) (undo-tree-id41937 . -16) (undo-tree-id41938 . -21) (undo-tree-id41939 . -21) (undo-tree-id41940 . -21) (undo-tree-id41941 . -21) (undo-tree-id41942 . -21) (undo-tree-id41943 . -21) (undo-tree-id41944 . -21) (undo-tree-id41945 . -21) (undo-tree-id41946 . -21) (undo-tree-id41947 . -21) (undo-tree-id41948 . -21) (undo-tree-id41949 . -21) (undo-tree-id41950 . -21) (undo-tree-id41951 . -21) (undo-tree-id41952 . -21) (undo-tree-id41953 . -21) (undo-tree-id41954 . -21) (undo-tree-id41955 . -21) (undo-tree-id41956 . -21) (undo-tree-id41957 . -21) (undo-tree-id41958 . -21) (undo-tree-id41959 . 19) (undo-tree-id41960 . -26) (undo-tree-id41961 . -25) (undo-tree-id41962 . -25) (undo-tree-id41963 . -25) (undo-tree-id41964 . -25) (undo-tree-id41965 . -25) (undo-tree-id41966 . -25) (undo-tree-id41967 . -25) (undo-tree-id41968 . -25) (undo-tree-id41969 . -25) (undo-tree-id41970 . -25) (undo-tree-id41971 . -25) (undo-tree-id41972 . -25) (undo-tree-id41973 . -25) (undo-tree-id41974 . -25) (undo-tree-id41975 . -25) (undo-tree-id41976 . -25) (undo-tree-id41977 . -25) (undo-tree-id41978 . -25) (undo-tree-id41979 . -25) (undo-tree-id41980 . -25) (undo-tree-id41981 . -25) (undo-tree-id41982 . -28) (undo-tree-id41983 . -28) (undo-tree-id41984 . -28) (undo-tree-id41985 . -28) (undo-tree-id41986 . -28) (undo-tree-id41987 . -28) (undo-tree-id41988 . -28) (undo-tree-id41989 . -28) (undo-tree-id41990 . -28) (undo-tree-id41991 . -28) (undo-tree-id41992 . -28) (undo-tree-id41993 . -28) (undo-tree-id41994 . -28) (undo-tree-id41995 . -28) (undo-tree-id41996 . -28) (undo-tree-id41997 . -28) (undo-tree-id41998 . -28) (undo-tree-id41999 . -28) (undo-tree-id42000 . -28) (undo-tree-id42001 . -28) (undo-tree-id42002 . -28) (undo-tree-id42003 . -35) (undo-tree-id42004 . -35) (undo-tree-id42005 . -35) (undo-tree-id42006 . -35) (undo-tree-id42007 . -35) (undo-tree-id42008 . -35) (undo-tree-id42009 . -35) (undo-tree-id42010 . -35) (undo-tree-id42011 . -35) (undo-tree-id42012 . -35) (undo-tree-id42013 . -35) (undo-tree-id42014 . -35) (undo-tree-id42015 . -35) (undo-tree-id42016 . -35) (undo-tree-id42017 . -35) (undo-tree-id42018 . -35) (undo-tree-id42019 . -35) (undo-tree-id42020 . -35) (undo-tree-id42021 . -35) (undo-tree-id42022 . -35) (undo-tree-id42023 . -35) (undo-tree-id42024 . -38) (undo-tree-id42025 . -38) (undo-tree-id42026 . -38) (undo-tree-id42027 . -38) (undo-tree-id42028 . -38) (undo-tree-id42029 . -38) (undo-tree-id42030 . -38) (undo-tree-id42031 . -38) (undo-tree-id42032 . -38) (undo-tree-id42033 . -38) (undo-tree-id42034 . -38) (undo-tree-id42035 . -38) (undo-tree-id42036 . -38) (undo-tree-id42037 . -38) (undo-tree-id42038 . -38) (undo-tree-id42039 . -38) (undo-tree-id42040 . -38) (undo-tree-id42041 . -38) (undo-tree-id42042 . -38) (undo-tree-id42043 . -38) (undo-tree-id42044 . -38) (undo-tree-id42045 . -39) (undo-tree-id42046 . -39) (undo-tree-id42047 . -39) (undo-tree-id42048 . -39) (undo-tree-id42049 . -39) (undo-tree-id42050 . -39) (undo-tree-id42051 . -39) (undo-tree-id42052 . -39) (undo-tree-id42053 . -39) (undo-tree-id42054 . -39) (undo-tree-id42055 . -39) (undo-tree-id42056 . -39) (undo-tree-id42057 . -39) (undo-tree-id42058 . -39) (undo-tree-id42059 . -39) (undo-tree-id42060 . -39) (undo-tree-id42061 . -39) (undo-tree-id42062 . -39) (undo-tree-id42063 . -39) (undo-tree-id42064 . -39) (undo-tree-id42065 . -39) (undo-tree-id42066 . -40) (undo-tree-id42067 . -40) (undo-tree-id42068 . -40) (undo-tree-id42069 . -40) (undo-tree-id42070 . -40) (undo-tree-id42071 . -40) (undo-tree-id42072 . -40) (undo-tree-id42073 . -40) (undo-tree-id42074 . -40) (undo-tree-id42075 . -40) (undo-tree-id42076 . -40) (undo-tree-id42077 . -40) (undo-tree-id42078 . -40) (undo-tree-id42079 . -40) (undo-tree-id42080 . -40) (undo-tree-id42081 . -40) (undo-tree-id42082 . -40) (undo-tree-id42083 . -40) (undo-tree-id42084 . -40) (undo-tree-id42085 . -40) (undo-tree-id42086 . -40) (undo-tree-id42087 . -40) (undo-tree-id42088 . -40) (undo-tree-id42089 . -40) (undo-tree-id42090 . -40) (undo-tree-id42091 . -40) (undo-tree-id42092 . -40) (undo-tree-id42093 . -40) (undo-tree-id42094 . -40) (undo-tree-id42095 . -40) (undo-tree-id42096 . -40) (undo-tree-id42097 . -41) (undo-tree-id42098 . -41) (undo-tree-id42099 . -41) (undo-tree-id42100 . -41) (undo-tree-id42101 . -41) (undo-tree-id42102 . -41) (undo-tree-id42103 . -41) (undo-tree-id42104 . -41) (undo-tree-id42105 . -41) (undo-tree-id42106 . -41) (undo-tree-id42107 . -41) (undo-tree-id42108 . -41) (undo-tree-id42109 . -41) (undo-tree-id42110 . -41) (undo-tree-id42111 . -41) (undo-tree-id42112 . -41) (undo-tree-id42113 . -41) (undo-tree-id42114 . -41) (undo-tree-id42115 . -41) (undo-tree-id42116 . -41) (undo-tree-id42117 . -41) (undo-tree-id42118 . -41) (undo-tree-id42119 . -42) 3868) nil (25774 61478 995392 417000) 0 nil])
([nil nil ((#("
** Processing the inputs using a bidirectional RNN
- RNN #1 is a bidirectional RNN that generates context vectors, 𝑐𝑐𝑖𝑖 .
  
- You can think of a context vector as an augmented version of the input vector, 𝑥𝑥 (𝑖𝑖).

- In other words, the 𝑐𝑐𝑖𝑖 input vector also incorporates information from all other input elements via an attention mechanism.

- As we can see in Figure 16.3, RNN #2 then uses this context vector, prepared by RNN #1, to generate the outputs.

- In the remainder of this subsection, we will discuss how RNN #1 works, and we will revisit RNN #2 in the next subsection.

- The bidirectional RNN #1 processes the input sequence x in the regular forward direction (1. . . 𝑇𝑇 ) as well as backward (𝑇𝑇𝑇 𝑇 𝑇 𝑇).

- Parsing a sequence in the backward direction has the same effect as revers- ing the original input sequence—think of reading a sentence in reverse order.

- The rationale behind this is to capture additional information since current inputs may have a dependence on sequence elements that came either before or after it in a sentence, or both.

- Consequently, from reading the input sequence twice (that is, forward and backward), we have two hidden states for each input sequence element.

- For instance, for the second input sequence element 𝑥𝑥 (2), we obtain the hidden state ℎ𝐹𝐹(2) from the forward pass and the hidden state ℎ𝐵𝐵(2) from the backward pass.

- These two hidden states are then concatenated to form the hidden state ℎ(2) .

- For example, if (2) (2) both ℎ𝐹𝐹 and ℎ𝐵𝐵 are 128-dimensional vectors, the concatenated hidden state ℎ(2) will consist of 256 elements.

- We can consider this concatenated hidden state as the “annotation” of the source word since it contains the information of the jth word in both directions.

- In the next section, we will see how these concatenated hidden states are further processed and used by the second RNN to generate the outputs." 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (2 1 [9679]) keymap (keymap) face org-level-2) 3 4 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 4 51 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 51 52 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t) 52 53 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) composition (0 1 [8226])) 53 54 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 54 84 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 84 88 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 88 98 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 98 99 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 99 114 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 114 115 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 115 116 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 116 122 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 122 123 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 123 124 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 124 126 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 126 127 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 127 128 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 128 215 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 215 216 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 216 217 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 217 218 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 218 219 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 219 323 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 323 324 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 324 344 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 344 345 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 345 346 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 346 347 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 347 348 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 348 424 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 424 425 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 425 458 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 458 460 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 460 461 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 461 462 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 462 463 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 463 464 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 464 506 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 506 508 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 508 509 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 509 510 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 510 527 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 527 528 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 528 585 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 585 586 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 586 587 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 587 588 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 588 589 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 589 636 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 636 693 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 693 694 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 694 723 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 723 724 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 724 725 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 725 726 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 726 727 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 727 802 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 802 803 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 803 852 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 852 880 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 880 881 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 881 882 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 882 883 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 883 884 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 884 904 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 904 905 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 905 968 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 968 1001 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1001 1002 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1002 1037 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1037 1070 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1070 1071 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1071 1072 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1072 1073 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1073 1074 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1074 1093 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1093 1170 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1170 1171 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1171 1217 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1217 1218 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1218 1219 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1219 1220 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1220 1221 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1221 1231 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1231 1272 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1272 1273 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1273 1382 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1382 1383 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1383 1385 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1385 1388 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1388 1389 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1389 1390 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1390 1391 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1391 1392 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1392 1469 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1469 1470 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1470 1471 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1471 1472 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1472 1473 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1473 1488 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1488 1489 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1489 1492 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1492 1493 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1493 1496 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1496 1497 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1497 1578 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1578 1583 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1583 1597 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1597 1598 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1598 1607 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1607 1608 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1608 1609 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1609 1610 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1610 1611 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1611 1702 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1702 1703 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1703 1725 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1725 1766 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1766 1767 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1767 1768 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1768 1769 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1769 1770 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1770 1870 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1870 1871 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1871 1896 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1896 1912 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1912 1913 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3766) (undo-tree-id47056 . 1791) (undo-tree-id47057 . -1) (undo-tree-id47058 . -1912) (undo-tree-id47059 . -1892) (undo-tree-id47060 . -1) (undo-tree-id47061 . -1) (undo-tree-id47062 . -1892) (undo-tree-id47063 . -84) (undo-tree-id47064 . -4) (undo-tree-id47065 . -52) (undo-tree-id47066 . -52) (undo-tree-id47067 . -52) (undo-tree-id47068 . -52) (undo-tree-id47069 . -52) (undo-tree-id47070 . -52) (undo-tree-id47071 . -52) (undo-tree-id47072 . -52) (undo-tree-id47073 . -52) (undo-tree-id47074 . -52) (undo-tree-id47075 . -52) (undo-tree-id47076 . -52) (undo-tree-id47077 . -52) (undo-tree-id47078 . -52) (undo-tree-id47079 . -52) (undo-tree-id47080 . -52) (undo-tree-id47081 . -52) (undo-tree-id47082 . -52) (undo-tree-id47083 . -52) (undo-tree-id47084 . -52) (undo-tree-id47085 . -52) (undo-tree-id47086 . -52) (undo-tree-id47087 . -52) (undo-tree-id47088 . -52) (undo-tree-id47089 . -52) (undo-tree-id47090 . -52) (undo-tree-id47091 . -52) (undo-tree-id47092 . -52) (undo-tree-id47093 . -52) (undo-tree-id47094 . -52) (undo-tree-id47095 . -52) (undo-tree-id47096 . -52) (undo-tree-id47097 . -52) (undo-tree-id47098 . -52) (undo-tree-id47099 . -52) (undo-tree-id47100 . -52) (undo-tree-id47101 . -52) (undo-tree-id47102 . -52) (undo-tree-id47103 . -52) (undo-tree-id47104 . -52) (undo-tree-id47105 . -52) (undo-tree-id47106 . -52) (undo-tree-id47107 . -52) (undo-tree-id47108 . -52) (undo-tree-id47109 . -52) (undo-tree-id47110 . -52) (undo-tree-id47111 . -52) (undo-tree-id47112 . -52) (undo-tree-id47113 . -52) (undo-tree-id47114 . -52) (undo-tree-id47115 . -52) (undo-tree-id47116 . -52) (undo-tree-id47117 . -52) (undo-tree-id47118 . -52) (undo-tree-id47119 . -52) (undo-tree-id47120 . -52) (undo-tree-id47121 . -52) (undo-tree-id47122 . -52) (undo-tree-id47123 . -52) (undo-tree-id47124 . -52) (undo-tree-id47125 . -52) (undo-tree-id47126 . -52) (undo-tree-id47127 . -52) (undo-tree-id47128 . -52) (undo-tree-id47129 . -52) (undo-tree-id47130 . -52) (undo-tree-id47131 . -52) (undo-tree-id47132 . -52) (undo-tree-id47133 . -52) (undo-tree-id47134 . -52) (undo-tree-id47135 . -52) (undo-tree-id47136 . -52) (undo-tree-id47137 . -52) (undo-tree-id47138 . -52) (undo-tree-id47139 . -52) (undo-tree-id47140 . -52) (undo-tree-id47141 . -52) (undo-tree-id47142 . -52) (undo-tree-id47143 . -52) (undo-tree-id47144 . -52) (undo-tree-id47145 . -52) (undo-tree-id47146 . -52) (undo-tree-id47147 . -52) (undo-tree-id47148 . -52) (undo-tree-id47149 . -52) (undo-tree-id47150 . -52) (undo-tree-id47151 . -52) (undo-tree-id47152 . -52) (undo-tree-id47153 . -52) (undo-tree-id47154 . -52) (undo-tree-id47155 . -52) (undo-tree-id47156 . -52) (undo-tree-id47157 . -52) (undo-tree-id47158 . -52) (undo-tree-id47159 . -52) (undo-tree-id47160 . -52) (undo-tree-id47161 . -52) (undo-tree-id47162 . -52) (undo-tree-id47163 . -52) (undo-tree-id47164 . -52) (undo-tree-id47165 . -52) (undo-tree-id47166 . -52) (undo-tree-id47167 . -52) (undo-tree-id47168 . -52) (undo-tree-id47169 . -52) (undo-tree-id47170 . -52) (undo-tree-id47171 . -52) (undo-tree-id47172 . -52) (undo-tree-id47173 . -52) (undo-tree-id47174 . -52) (undo-tree-id47175 . -52) (undo-tree-id47176 . -52) (undo-tree-id47177 . -52) (undo-tree-id47178 . -52) (undo-tree-id47179 . -52) (undo-tree-id47180 . -52) (undo-tree-id47181 . -52) (undo-tree-id47182 . -52) (undo-tree-id47183 . -52) (undo-tree-id47184 . -52) (undo-tree-id47185 . -52) (undo-tree-id47186 . -52) (undo-tree-id47187 . -52) (undo-tree-id47188 . -52) (undo-tree-id47189 . -52) (undo-tree-id47190 . -52) (undo-tree-id47191 . -52) (undo-tree-id47192 . -52) (undo-tree-id47193 . -52) (undo-tree-id47194 . -52) (undo-tree-id47195 . -52) (undo-tree-id47196 . -52) (undo-tree-id47197 . -52) (undo-tree-id47198 . -52) (undo-tree-id47199 . -52) (undo-tree-id47200 . -52) (undo-tree-id47201 . -52) (undo-tree-id47202 . -52) (undo-tree-id47203 . -52) (undo-tree-id47204 . -52) (undo-tree-id47205 . -52) (undo-tree-id47206 . -52) (undo-tree-id47207 . -52) (undo-tree-id47208 . -52) (undo-tree-id47209 . -52) (undo-tree-id47210 . -52) (undo-tree-id47211 . -52) (undo-tree-id47212 . -52) (undo-tree-id47213 . -52) (undo-tree-id47214 . -52) (undo-tree-id47215 . -52) (undo-tree-id47216 . -52) (undo-tree-id47217 . -52) (undo-tree-id47218 . -52) (undo-tree-id47219 . -52) (undo-tree-id47220 . -52) (undo-tree-id47221 . -52) (undo-tree-id47222 . -52) (undo-tree-id47223 . -52) (undo-tree-id47224 . -52) (undo-tree-id47225 . -52) (undo-tree-id47226 . -52) (undo-tree-id47227 . -52) (undo-tree-id47228 . -52) (undo-tree-id47229 . -52) (undo-tree-id47230 . -52) (undo-tree-id47231 . -52) (undo-tree-id47232 . -52) (undo-tree-id47233 . -52) (undo-tree-id47234 . -52) (undo-tree-id47235 . -52) (undo-tree-id47236 . -52) (undo-tree-id47237 . -52) (undo-tree-id47238 . -52) (undo-tree-id47239 . -52) (undo-tree-id47240 . -52) (undo-tree-id47241 . -52) (undo-tree-id47242 . -52) (undo-tree-id47243 . -52) (undo-tree-id47244 . -52) (undo-tree-id47245 . -52) (undo-tree-id47246 . -52) (undo-tree-id47247 . -52) (undo-tree-id47248 . -52) (undo-tree-id47249 . -52) (undo-tree-id47250 . -52) (undo-tree-id47251 . -52) (undo-tree-id47252 . -52) (undo-tree-id47253 . -52) (undo-tree-id47254 . -52) (undo-tree-id47255 . -52) (undo-tree-id47256 . -52) (undo-tree-id47257 . -52) (undo-tree-id47258 . -52) (undo-tree-id47259 . -52) (undo-tree-id47260 . -52) (undo-tree-id47261 . -52) (undo-tree-id47262 . -52) (undo-tree-id47263 . -52) (undo-tree-id47264 . -52) (undo-tree-id47265 . -52) (undo-tree-id47266 . -52) (undo-tree-id47267 . -52) (undo-tree-id47268 . -52) (undo-tree-id47269 . -52) (undo-tree-id47270 . -52) (undo-tree-id47271 . -52) (undo-tree-id47272 . -52) (undo-tree-id47273 . -52) (undo-tree-id47274 . -52) (undo-tree-id47275 . -52) (undo-tree-id47276 . -52) (undo-tree-id47277 . -52) (undo-tree-id47278 . -52) (undo-tree-id47279 . -52) (undo-tree-id47280 . -52) (undo-tree-id47281 . -52) (undo-tree-id47282 . -52) (undo-tree-id47283 . -52) (undo-tree-id47284 . -52) (undo-tree-id47285 . -52) (undo-tree-id47286 . -52) (undo-tree-id47287 . -52) (undo-tree-id47288 . -52) (undo-tree-id47289 . -52) (undo-tree-id47290 . -52) (undo-tree-id47291 . -52) (undo-tree-id47292 . -52) (undo-tree-id47293 . -52) (undo-tree-id47294 . -52) (undo-tree-id47295 . -52) (undo-tree-id47296 . -52) (undo-tree-id47297 . -52) (undo-tree-id47298 . -52) (undo-tree-id47299 . -52) (undo-tree-id47300 . -52) (undo-tree-id47301 . -52) (undo-tree-id47302 . -52) (undo-tree-id47303 . -52) (undo-tree-id47304 . -52) (undo-tree-id47305 . -52) (undo-tree-id47306 . -52) (undo-tree-id47307 . -52) (undo-tree-id47308 . -52) (undo-tree-id47309 . -52) (undo-tree-id47310 . -52) (undo-tree-id47311 . -52) (undo-tree-id47312 . -52) (undo-tree-id47313 . -52) (undo-tree-id47314 . -52) (undo-tree-id47315 . -52) (undo-tree-id47316 . -52) (undo-tree-id47317 . -52) (undo-tree-id47318 . -52) (undo-tree-id47319 . -52) (undo-tree-id47320 . -52) (undo-tree-id47321 . -52) (undo-tree-id47322 . -52) (undo-tree-id47323 . -52) (undo-tree-id47324 . -52) (undo-tree-id47325 . -52) (undo-tree-id47326 . -52) (undo-tree-id47327 . -52) (undo-tree-id47328 . -52) (undo-tree-id47329 . -52) (undo-tree-id47330 . -52) (undo-tree-id47331 . -52) (undo-tree-id47332 . -52) (undo-tree-id47333 . -52) (undo-tree-id47334 . -52) (undo-tree-id47335 . -52) (undo-tree-id47336 . -52) (undo-tree-id47337 . -52) (undo-tree-id47338 . -52) (undo-tree-id47339 . -52) (undo-tree-id47340 . -52) (undo-tree-id47341 . -52) (undo-tree-id47342 . -52) (undo-tree-id47343 . -52) (undo-tree-id47344 . -52) (undo-tree-id47345 . -52) (undo-tree-id47346 . -52) (undo-tree-id47347 . -52) (undo-tree-id47348 . -52) (undo-tree-id47349 . -52) (undo-tree-id47350 . -52) (undo-tree-id47351 . -52) (undo-tree-id47352 . -52) (undo-tree-id47353 . -52) (undo-tree-id47354 . -52) (undo-tree-id47355 . -52) (undo-tree-id47356 . -52) (undo-tree-id47357 . -52) (undo-tree-id47358 . -52) (undo-tree-id47359 . -52) (undo-tree-id47360 . -52) (undo-tree-id47361 . -52) (undo-tree-id47362 . -52) (undo-tree-id47363 . -52) (undo-tree-id47364 . -52) (undo-tree-id47365 . -52) (undo-tree-id47366 . -52) (undo-tree-id47367 . -52) (undo-tree-id47368 . -52) (undo-tree-id47369 . -52) (undo-tree-id47370 . -52) (undo-tree-id47371 . -52) (undo-tree-id47372 . -52) (undo-tree-id47373 . -52) (undo-tree-id47374 . -52) (undo-tree-id47375 . -52) (undo-tree-id47376 . -52) (undo-tree-id47377 . -52) (undo-tree-id47378 . -52) (undo-tree-id47379 . -52) (undo-tree-id47380 . -52) (undo-tree-id47381 . -52) (undo-tree-id47382 . -52) (undo-tree-id47383 . -52) (undo-tree-id47384 . -52) (undo-tree-id47385 . -52) (undo-tree-id47386 . -52) (undo-tree-id47387 . -52) (undo-tree-id47388 . -52) (undo-tree-id47389 . -52) (undo-tree-id47390 . -52) (undo-tree-id47391 . -52) (undo-tree-id47392 . -52) (undo-tree-id47393 . -52) (undo-tree-id47394 . -52) (undo-tree-id47395 . -52) (undo-tree-id47396 . -52) (undo-tree-id47397 . -52) (undo-tree-id47398 . -52) (undo-tree-id47399 . -52) (undo-tree-id47400 . -52) (undo-tree-id47401 . -52) (undo-tree-id47402 . -52) (undo-tree-id47403 . -52) (undo-tree-id47404 . -52) (undo-tree-id47405 . -52) (undo-tree-id47406 . -52) (undo-tree-id47407 . -52) (undo-tree-id47408 . -52) (undo-tree-id47409 . -52) (undo-tree-id47410 . -52) (undo-tree-id47411 . -52) (undo-tree-id47412 . -52) (undo-tree-id47413 . -52) (undo-tree-id47414 . -52) (undo-tree-id47415 . -52) (undo-tree-id47416 . -52) (undo-tree-id47417 . -52) (undo-tree-id47418 . -52) (undo-tree-id47419 . -52) (undo-tree-id47420 . -52) (undo-tree-id47421 . -52) (undo-tree-id47422 . -52) (undo-tree-id47423 . -52) (undo-tree-id47424 . -52) (undo-tree-id47425 . -52) (undo-tree-id47426 . -52) (undo-tree-id47427 . -52) (undo-tree-id47428 . -52) (undo-tree-id47429 . -52) (undo-tree-id47430 . -52) (undo-tree-id47431 . -52) (undo-tree-id47432 . -52) (undo-tree-id47433 . -52) (undo-tree-id47434 . -52) (undo-tree-id47435 . -52) (undo-tree-id47436 . -52) (undo-tree-id47437 . -52) (undo-tree-id47438 . -52) (undo-tree-id47439 . -52) (undo-tree-id47440 . -52) (undo-tree-id47441 . -52) (undo-tree-id47442 . -52) (undo-tree-id47443 . -52) (undo-tree-id47444 . -52) (undo-tree-id47445 . -52) (undo-tree-id47446 . -52) (undo-tree-id47447 . -52) (undo-tree-id47448 . -52) (undo-tree-id47449 . -52) (undo-tree-id47450 . -52) (undo-tree-id47451 . -52) (undo-tree-id47452 . -52) (undo-tree-id47453 . -52) (undo-tree-id47454 . -52) (undo-tree-id47455 . -52) (undo-tree-id47456 . -52) (undo-tree-id47457 . -52) (undo-tree-id47458 . -52) (undo-tree-id47459 . -52) (undo-tree-id47460 . -52) (undo-tree-id47461 . -52) (undo-tree-id47462 . -52) (undo-tree-id47463 . -52) (undo-tree-id47464 . -52) (undo-tree-id47465 . -52) (undo-tree-id47466 . -52) (undo-tree-id47467 . -52) (undo-tree-id47468 . -52) (undo-tree-id47469 . -52) (undo-tree-id47470 . -52) (undo-tree-id47471 . -52) (undo-tree-id47472 . -52) (undo-tree-id47473 . -52) (undo-tree-id47474 . -52) (undo-tree-id47475 . -52) (undo-tree-id47476 . -52) (undo-tree-id47477 . -52) (undo-tree-id47478 . -52) (undo-tree-id47479 . -52) (undo-tree-id47480 . -52) (undo-tree-id47481 . -52) (undo-tree-id47482 . -52) (undo-tree-id47483 . -52) (undo-tree-id47484 . -52) (undo-tree-id47485 . -52) (undo-tree-id47486 . -52) (undo-tree-id47487 . -52) (undo-tree-id47488 . -52) (undo-tree-id47489 . -52) (undo-tree-id47490 . -52) (undo-tree-id47491 . -52) (undo-tree-id47492 . -52) (undo-tree-id47493 . -52) (undo-tree-id47494 . -52) (undo-tree-id47495 . -52) (undo-tree-id47496 . -52) (undo-tree-id47497 . -52) (undo-tree-id47498 . -52) (undo-tree-id47499 . -52) (undo-tree-id47500 . -52) (undo-tree-id47501 . -52) (undo-tree-id47502 . -52) (undo-tree-id47503 . -52) (undo-tree-id47504 . -52) (undo-tree-id47505 . -52) (undo-tree-id47506 . -52) (undo-tree-id47507 . -52) (undo-tree-id47508 . -52) (undo-tree-id47509 . -52) (undo-tree-id47510 . -52) (undo-tree-id47511 . -52) (undo-tree-id47512 . -52) (undo-tree-id47513 . -52) (undo-tree-id47514 . -52) (undo-tree-id47515 . -52) (undo-tree-id47516 . -52) (undo-tree-id47517 . -52) (undo-tree-id47518 . -52) (undo-tree-id47519 . -52) (undo-tree-id47520 . -52) (undo-tree-id47521 . -52) (undo-tree-id47522 . -52) (undo-tree-id47523 . -52) (undo-tree-id47524 . -52) (undo-tree-id47525 . -52) (undo-tree-id47526 . -52) (undo-tree-id47527 . -52) (undo-tree-id47528 . -52) (undo-tree-id47529 . -52) (undo-tree-id47530 . -52) (undo-tree-id47531 . -52) (undo-tree-id47532 . -52) (undo-tree-id47533 . -52) (undo-tree-id47534 . -52) (undo-tree-id47535 . -52) (undo-tree-id47536 . -52) (undo-tree-id47537 . -52) (undo-tree-id47538 . -52) (undo-tree-id47539 . -52) (undo-tree-id47540 . -52) (undo-tree-id47541 . -52) (undo-tree-id47542 . -52) (undo-tree-id47543 . -52) (undo-tree-id47544 . -52) (undo-tree-id47545 . -52) (undo-tree-id47546 . -52) (undo-tree-id47547 . -52) (undo-tree-id47548 . -52) (undo-tree-id47549 . -52) (undo-tree-id47550 . -52) (undo-tree-id47551 . -52) (undo-tree-id47552 . -52) (undo-tree-id47553 . -52) (undo-tree-id47554 . -52) (undo-tree-id47555 . -52) (undo-tree-id47556 . -52) (undo-tree-id47557 . -52) (undo-tree-id47558 . -52) (undo-tree-id47559 . -52) (undo-tree-id47560 . -52) (undo-tree-id47561 . -52) (undo-tree-id47562 . -52) (undo-tree-id47563 . -52) (undo-tree-id47564 . -52) (undo-tree-id47565 . -52) (undo-tree-id47566 . -52) (undo-tree-id47567 . -52) (undo-tree-id47568 . -52) (undo-tree-id47569 . -52) (undo-tree-id47570 . -52) (undo-tree-id47571 . -52) (undo-tree-id47572 . -52) (undo-tree-id47573 . -52) (undo-tree-id47574 . -52) (undo-tree-id47575 . -52) (undo-tree-id47576 . -52) (undo-tree-id47577 . -52) (undo-tree-id47578 . -52) (undo-tree-id47579 . -52) (undo-tree-id47580 . -52) (undo-tree-id47581 . -52) (undo-tree-id47582 . -52) (undo-tree-id47583 . -52) (undo-tree-id47584 . -52) (undo-tree-id47585 . -52) (undo-tree-id47586 . -52) (undo-tree-id47587 . -52) (undo-tree-id47588 . -52) (undo-tree-id47589 . -52) (undo-tree-id47590 . -52) (undo-tree-id47591 . -52) (undo-tree-id47592 . -52) (undo-tree-id47593 . -52) (undo-tree-id47594 . -52) (undo-tree-id47595 . -52) (undo-tree-id47596 . -52) (undo-tree-id47597 . -52) (undo-tree-id47598 . -52) (undo-tree-id47599 . -52) (undo-tree-id47600 . -52) (undo-tree-id47601 . -52) (undo-tree-id47602 . -52) (undo-tree-id47603 . -52) (undo-tree-id47604 . -52) (undo-tree-id47605 . -52) (undo-tree-id47606 . -52) (undo-tree-id47607 . -52) (undo-tree-id47608 . -52) (undo-tree-id47609 . -52) (undo-tree-id47610 . -52) (undo-tree-id47611 . -52) (undo-tree-id47612 . -52) (undo-tree-id47613 . -52) (undo-tree-id47614 . -52) (undo-tree-id47615 . -52) (undo-tree-id47616 . -52) (undo-tree-id47617 . -52) (undo-tree-id47618 . -52) (undo-tree-id47619 . -52) (undo-tree-id47620 . -52) (undo-tree-id47621 . -52) (undo-tree-id47622 . -52) (undo-tree-id47623 . -52) (undo-tree-id47624 . -52) (undo-tree-id47625 . -52) (undo-tree-id47626 . -52) (undo-tree-id47627 . -52) (undo-tree-id47628 . -52) (undo-tree-id47629 . -52) (undo-tree-id47630 . -52) (undo-tree-id47631 . -52) (undo-tree-id47632 . -52) (undo-tree-id47633 . -52) (undo-tree-id47634 . -52) (undo-tree-id47635 . -52) (undo-tree-id47636 . -52) (undo-tree-id47637 . -52) (undo-tree-id47638 . -52) (undo-tree-id47639 . -52) (undo-tree-id47640 . -52) (undo-tree-id47641 . -52) (undo-tree-id47642 . -52) (undo-tree-id47643 . -52) (undo-tree-id47644 . -52) (undo-tree-id47645 . -52) (undo-tree-id47646 . -52) (undo-tree-id47647 . -52) (undo-tree-id47648 . -52) (undo-tree-id47649 . -52) (undo-tree-id47650 . -52) (undo-tree-id47651 . -52) (undo-tree-id47652 . -52) (undo-tree-id47653 . -52) (undo-tree-id47654 . -52) (undo-tree-id47655 . -52) (undo-tree-id47656 . -52) (undo-tree-id47657 . -52) (undo-tree-id47658 . -52) (undo-tree-id47659 . -52) (undo-tree-id47660 . -52) (undo-tree-id47661 . -52) (undo-tree-id47662 . -52) (undo-tree-id47663 . -52) (undo-tree-id47664 . -52) (undo-tree-id47665 . -52) (undo-tree-id47666 . -52) (undo-tree-id47667 . -52) (undo-tree-id47668 . -52) (undo-tree-id47669 . -52) (undo-tree-id47670 . -52) (undo-tree-id47671 . -52) (undo-tree-id47672 . -52) (undo-tree-id47673 . -52) (undo-tree-id47674 . -52) (undo-tree-id47675 . -52) (undo-tree-id47676 . -52) (undo-tree-id47677 . -52) (undo-tree-id47678 . -52) (undo-tree-id47679 . -52) (undo-tree-id47680 . -52) (undo-tree-id47681 . -52) (undo-tree-id47682 . -52) (undo-tree-id47683 . -52) (undo-tree-id47684 . -52) (undo-tree-id47685 . -52) (undo-tree-id47686 . -52) (undo-tree-id47687 . -52) (undo-tree-id47688 . -52) (undo-tree-id47689 . -52) (undo-tree-id47690 . -52) (undo-tree-id47691 . -52) (undo-tree-id47692 . -52) (undo-tree-id47693 . -52) (undo-tree-id47694 . -52) (undo-tree-id47695 . -52) (undo-tree-id47696 . -52) (undo-tree-id47697 . -52) (undo-tree-id47698 . -52) (undo-tree-id47699 . -52) (undo-tree-id47700 . -52) (undo-tree-id47701 . -52) (undo-tree-id47702 . -52) (undo-tree-id47703 . -52) (undo-tree-id47704 . -52) (undo-tree-id47705 . -52) (undo-tree-id47706 . -52) (undo-tree-id47707 . -52) (undo-tree-id47708 . -52) (undo-tree-id47709 . -52) (undo-tree-id47710 . -52) (undo-tree-id47711 . -52) (undo-tree-id47712 . -52) (undo-tree-id47713 . -52) (undo-tree-id47714 . -52) (undo-tree-id47715 . -52) (undo-tree-id47716 . -52) (undo-tree-id47717 . -52) (undo-tree-id47718 . -52) (undo-tree-id47719 . -52) (undo-tree-id47720 . -52) (undo-tree-id47721 . -52) (undo-tree-id47722 . -52) (undo-tree-id47723 . -52) (undo-tree-id47724 . -52) (undo-tree-id47725 . -52) (undo-tree-id47726 . -52) (undo-tree-id47727 . -52) (undo-tree-id47728 . -52) (undo-tree-id47729 . -52) (undo-tree-id47730 . -52) (undo-tree-id47731 . -52) (undo-tree-id47732 . -52) (undo-tree-id47733 . -52) (undo-tree-id47734 . -52) (undo-tree-id47735 . -52) (undo-tree-id47736 . -52) (undo-tree-id47737 . -52) (undo-tree-id47738 . -52) (undo-tree-id47739 . -52) (undo-tree-id47740 . -52) (undo-tree-id47741 . -52) (undo-tree-id47742 . -52) (undo-tree-id47743 . -52) (undo-tree-id47744 . -52) (undo-tree-id47745 . -52) (undo-tree-id47746 . -52) (undo-tree-id47747 . -52) (undo-tree-id47748 . -52) (undo-tree-id47749 . -52) (undo-tree-id47750 . -52) (undo-tree-id47751 . -52) (undo-tree-id47752 . -52) (undo-tree-id47753 . -52) (undo-tree-id47754 . -52) (undo-tree-id47755 . -52) (undo-tree-id47756 . -52) (undo-tree-id47757 . -52) (undo-tree-id47758 . -52) (undo-tree-id47759 . -52) (undo-tree-id47760 . -52) (undo-tree-id47761 . -52) (undo-tree-id47762 . -52) (undo-tree-id47763 . -52) (undo-tree-id47764 . -52) (undo-tree-id47765 . -52) (undo-tree-id47766 . -52) (undo-tree-id47767 . -52) (undo-tree-id47768 . -52) (undo-tree-id47769 . -52) (undo-tree-id47770 . -52) (undo-tree-id47771 . -52) (undo-tree-id47772 . -52) (undo-tree-id47773 . -52) (undo-tree-id47774 . -52) (undo-tree-id47775 . -52) (undo-tree-id47776 . -52) (undo-tree-id47777 . -52) (undo-tree-id47778 . -52) (undo-tree-id47779 . -52) (undo-tree-id47780 . -52) (undo-tree-id47781 . -52) (undo-tree-id47782 . -52) (undo-tree-id47783 . -52) (undo-tree-id47784 . -52) (undo-tree-id47785 . -52) (undo-tree-id47786 . -52) (undo-tree-id47787 . -52) (undo-tree-id47788 . -52) (undo-tree-id47789 . -52) (undo-tree-id47790 . -52) (undo-tree-id47791 . -52) (undo-tree-id47792 . -52) (undo-tree-id47793 . -52) (undo-tree-id47794 . -52) (undo-tree-id47795 . -52) (undo-tree-id47796 . -52) (undo-tree-id47797 . -52) (undo-tree-id47798 . -52) (undo-tree-id47799 . -52) (undo-tree-id47800 . -52) (undo-tree-id47801 . -52) (undo-tree-id47802 . -52) (undo-tree-id47803 . -52) (undo-tree-id47804 . -52) (undo-tree-id47805 . -52) (undo-tree-id47806 . -52) (undo-tree-id47807 . -52) (undo-tree-id47808 . -52) (undo-tree-id47809 . -52) (undo-tree-id47810 . -52) (undo-tree-id47811 . -52) (undo-tree-id47812 . -52) (undo-tree-id47813 . -52) (undo-tree-id47814 . -52) (undo-tree-id47815 . -52) (undo-tree-id47816 . -52) (undo-tree-id47817 . -52) (undo-tree-id47818 . -52) (undo-tree-id47819 . -52) (undo-tree-id47820 . -52) (undo-tree-id47821 . -52) (undo-tree-id47822 . -52) (undo-tree-id47823 . -52) (undo-tree-id47824 . -52) (undo-tree-id47825 . -52) (undo-tree-id47826 . -52) (undo-tree-id47827 . -52) (undo-tree-id47828 . -52) (undo-tree-id47829 . -52) (undo-tree-id47830 . -52) (undo-tree-id47831 . -52) (undo-tree-id47832 . -52) (undo-tree-id47833 . -52) (undo-tree-id47834 . -52) (undo-tree-id47835 . -52) (undo-tree-id47836 . -52) (undo-tree-id47837 . -52) (undo-tree-id47838 . -52) (undo-tree-id47839 . -52) (undo-tree-id47840 . -52) (undo-tree-id47841 . -52) (undo-tree-id47842 . -52) (undo-tree-id47843 . -52) (undo-tree-id47844 . -52) (undo-tree-id47845 . -52) (undo-tree-id47846 . -52) (undo-tree-id47847 . -52) (undo-tree-id47848 . -52) (undo-tree-id47849 . -52) (undo-tree-id47850 . -52) (undo-tree-id47851 . -52) (undo-tree-id47852 . -52) (undo-tree-id47853 . -52) (undo-tree-id47854 . -52) (undo-tree-id47855 . -52) (undo-tree-id47856 . -52) (undo-tree-id47857 . -52) (undo-tree-id47858 . -52) (undo-tree-id47859 . -52) (undo-tree-id47860 . -52) (undo-tree-id47861 . -52) (undo-tree-id47862 . -52) (undo-tree-id47863 . -52) (undo-tree-id47864 . -52) (undo-tree-id47865 . -52) (undo-tree-id47866 . -52) (undo-tree-id47867 . -52) (undo-tree-id47868 . -52) (undo-tree-id47869 . -52) (undo-tree-id47870 . -52) (undo-tree-id47871 . -52) (undo-tree-id47872 . -52) (undo-tree-id47873 . -52) (undo-tree-id47874 . -52) (undo-tree-id47875 . -52) (undo-tree-id47876 . -52) (undo-tree-id47877 . -52) (undo-tree-id47878 . -52) (undo-tree-id47879 . -52) (undo-tree-id47880 . -52) (undo-tree-id47881 . -52) (undo-tree-id47882 . -52) (undo-tree-id47883 . -52) (undo-tree-id47884 . -52) (undo-tree-id47885 . -52) (undo-tree-id47886 . -52) (undo-tree-id47887 . -52) (undo-tree-id47888 . -52) (undo-tree-id47889 . -52) (undo-tree-id47890 . -52) (undo-tree-id47891 . -52) (undo-tree-id47892 . -52) (undo-tree-id47893 . -52) (undo-tree-id47894 . -52) (undo-tree-id47895 . -52) (undo-tree-id47896 . -52) (undo-tree-id47897 . -52) (undo-tree-id47898 . -52) (undo-tree-id47899 . -52) (undo-tree-id47900 . -52) (undo-tree-id47901 . -52) (undo-tree-id47902 . -52) (undo-tree-id47903 . -52) (undo-tree-id47904 . -52) (undo-tree-id47905 . -52) (undo-tree-id47906 . -126) (undo-tree-id47907 . -126) (undo-tree-id47908 . -126) (undo-tree-id47909 . -126) (undo-tree-id47910 . -126) (undo-tree-id47911 . -126) (undo-tree-id47912 . -126) (undo-tree-id47913 . -126) (undo-tree-id47914 . -126) (undo-tree-id47915 . -126) (undo-tree-id47916 . -126) (undo-tree-id47917 . -126) (undo-tree-id47918 . -126) (undo-tree-id47919 . -126) (undo-tree-id47920 . -126) (undo-tree-id47921 . -126) (undo-tree-id47922 . -126) (undo-tree-id47923 . -126) (undo-tree-id47924 . -126) (undo-tree-id47925 . -126) (undo-tree-id47926 . -126) (undo-tree-id47927 . -126) (undo-tree-id47928 . -126) (undo-tree-id47929 . -126) (undo-tree-id47930 . -126) (undo-tree-id47931 . -126) (undo-tree-id47932 . -126) (undo-tree-id47933 . -126) (undo-tree-id47934 . -126) (undo-tree-id47935 . -126) (undo-tree-id47936 . -126) (undo-tree-id47937 . -126) (undo-tree-id47938 . -126) (undo-tree-id47939 . -126) (undo-tree-id47940 . -126) (undo-tree-id47941 . -126) (undo-tree-id47942 . -126) (undo-tree-id47943 . -126) (undo-tree-id47944 . -126) (undo-tree-id47945 . -126) (undo-tree-id47946 . -126) (undo-tree-id47947 . -126) (undo-tree-id47948 . -126) (undo-tree-id47949 . -126) (undo-tree-id47950 . -126) (undo-tree-id47951 . -126) (undo-tree-id47952 . -126) (undo-tree-id47953 . -126) (undo-tree-id47954 . -126) (undo-tree-id47955 . -126) (undo-tree-id47956 . -126) (undo-tree-id47957 . -126) (undo-tree-id47958 . -126) (undo-tree-id47959 . -126) (undo-tree-id47960 . -126) (undo-tree-id47961 . -126) (undo-tree-id47962 . -126) (undo-tree-id47963 . -126) (undo-tree-id47964 . -126) (undo-tree-id47965 . -126) (undo-tree-id47966 . -126) (undo-tree-id47967 . -126) (undo-tree-id47968 . -126) (undo-tree-id47969 . -126) (undo-tree-id47970 . -126) (undo-tree-id47971 . -126) (undo-tree-id47972 . -126) (undo-tree-id47973 . -126) (undo-tree-id47974 . -126) (undo-tree-id47975 . -126) (undo-tree-id47976 . -126) (undo-tree-id47977 . -126) (undo-tree-id47978 . -126) (undo-tree-id47979 . -126) (undo-tree-id47980 . -126) (undo-tree-id47981 . -126) (undo-tree-id47982 . -126) (undo-tree-id47983 . -126) (undo-tree-id47984 . -126) (undo-tree-id47985 . -126) (undo-tree-id47986 . -126) (undo-tree-id47987 . -126) (undo-tree-id47988 . -126) (undo-tree-id47989 . -126) (undo-tree-id47990 . -126) (undo-tree-id47991 . -126) (undo-tree-id47992 . -126) (undo-tree-id47993 . -217) (undo-tree-id47994 . -217) (undo-tree-id47995 . -217) (undo-tree-id47996 . -217) (undo-tree-id47997 . -217) (undo-tree-id47998 . -217) (undo-tree-id47999 . -217) (undo-tree-id48000 . -217) (undo-tree-id48001 . -217) (undo-tree-id48002 . -217) (undo-tree-id48003 . -217) (undo-tree-id48004 . -217) (undo-tree-id48005 . -217) (undo-tree-id48006 . -217) (undo-tree-id48007 . -217) (undo-tree-id48008 . -217) (undo-tree-id48009 . -217) (undo-tree-id48010 . -217) (undo-tree-id48011 . -217) (undo-tree-id48012 . -217) (undo-tree-id48013 . -217) (undo-tree-id48014 . -217) (undo-tree-id48015 . -217) (undo-tree-id48016 . -217) (undo-tree-id48017 . -217) (undo-tree-id48018 . -217) (undo-tree-id48019 . -217) (undo-tree-id48020 . -217) (undo-tree-id48021 . -217) (undo-tree-id48022 . -217) (undo-tree-id48023 . -217) (undo-tree-id48024 . -217) (undo-tree-id48025 . -217) (undo-tree-id48026 . -217) (undo-tree-id48027 . -217) (undo-tree-id48028 . -217) (undo-tree-id48029 . -217) (undo-tree-id48030 . -217) (undo-tree-id48031 . -217) (undo-tree-id48032 . -217) (undo-tree-id48033 . -217) (undo-tree-id48034 . -217) (undo-tree-id48035 . -217) (undo-tree-id48036 . -217) (undo-tree-id48037 . -217) (undo-tree-id48038 . -217) (undo-tree-id48039 . -217) (undo-tree-id48040 . -217) (undo-tree-id48041 . -217) (undo-tree-id48042 . -217) (undo-tree-id48043 . -217) (undo-tree-id48044 . -217) (undo-tree-id48045 . -126) (undo-tree-id48046 . -126) (undo-tree-id48047 . -126) (undo-tree-id48048 . -126) (undo-tree-id48049 . -126) (undo-tree-id48050 . -126) (undo-tree-id48051 . -126) (undo-tree-id48052 . -126) (undo-tree-id48053 . -126) (undo-tree-id48054 . -126) (undo-tree-id48055 . -126) (undo-tree-id48056 . -126) (undo-tree-id48057 . -126) (undo-tree-id48058 . -126) (undo-tree-id48059 . -126) (undo-tree-id48060 . -126) (undo-tree-id48061 . -216) (undo-tree-id48062 . -216) (undo-tree-id48063 . -216) (undo-tree-id48064 . -216) (undo-tree-id48065 . -216) (undo-tree-id48066 . -216) (undo-tree-id48067 . -216) (undo-tree-id48068 . -216) (undo-tree-id48069 . -126) (undo-tree-id48070 . -126) (undo-tree-id48071 . -126) (undo-tree-id48072 . -126) (undo-tree-id48073 . -126) (undo-tree-id48074 . -126) (undo-tree-id48075 . -126) (undo-tree-id48076 . -126) (undo-tree-id48077 . -126) (undo-tree-id48078 . -126) (undo-tree-id48079 . -126) (undo-tree-id48080 . -126) (undo-tree-id48081 . -126) (undo-tree-id48082 . -126) (undo-tree-id48083 . -126) (undo-tree-id48084 . -126) (undo-tree-id48085 . -217) (undo-tree-id48086 . -217) (undo-tree-id48087 . -217) (undo-tree-id48088 . -217) (undo-tree-id48089 . -217) (undo-tree-id48090 . -217) (undo-tree-id48091 . -217) (undo-tree-id48092 . -217) (undo-tree-id48093 . -217) (undo-tree-id48094 . -217) (undo-tree-id48095 . -217) (undo-tree-id48096 . -217) (undo-tree-id48097 . -217) (undo-tree-id48098 . -217) (undo-tree-id48099 . -217) (undo-tree-id48100 . -217) (undo-tree-id48101 . -217) (undo-tree-id48102 . -217) (undo-tree-id48103 . -217) (undo-tree-id48104 . -217) (undo-tree-id48105 . -217) (undo-tree-id48106 . -217) (undo-tree-id48107 . -217) (undo-tree-id48108 . -217) (undo-tree-id48109 . -217) (undo-tree-id48110 . -217) (undo-tree-id48111 . -217) (undo-tree-id48112 . -217) (undo-tree-id48113 . -217) (undo-tree-id48114 . -217) (undo-tree-id48115 . -217) (undo-tree-id48116 . -217) (undo-tree-id48117 . -217) (undo-tree-id48118 . -217) (undo-tree-id48119 . -217) (undo-tree-id48120 . -217) (undo-tree-id48121 . -217) (undo-tree-id48122 . -217) (undo-tree-id48123 . -217) (undo-tree-id48124 . -217) (undo-tree-id48125 . -217) (undo-tree-id48126 . -346) (undo-tree-id48127 . -346) (undo-tree-id48128 . -346) (undo-tree-id48129 . -346) (undo-tree-id48130 . -346) (undo-tree-id48131 . -346) (undo-tree-id48132 . -346) (undo-tree-id48133 . -346) (undo-tree-id48134 . -346) (undo-tree-id48135 . -346) (undo-tree-id48136 . -346) (undo-tree-id48137 . -346) (undo-tree-id48138 . -346) (undo-tree-id48139 . -346) (undo-tree-id48140 . -346) (undo-tree-id48141 . -346) (undo-tree-id48142 . -346) (undo-tree-id48143 . -346) (undo-tree-id48144 . -346) (undo-tree-id48145 . -346) (undo-tree-id48146 . -346) (undo-tree-id48147 . -346) (undo-tree-id48148 . -346) (undo-tree-id48149 . -346) (undo-tree-id48150 . -346) (undo-tree-id48151 . -346) (undo-tree-id48152 . -346) (undo-tree-id48153 . -346) (undo-tree-id48154 . -346) (undo-tree-id48155 . -346) (undo-tree-id48156 . -346) (undo-tree-id48157 . -346) (undo-tree-id48158 . -346) (undo-tree-id48159 . -346) (undo-tree-id48160 . -346) (undo-tree-id48161 . -346) (undo-tree-id48162 . -346) (undo-tree-id48163 . -346) (undo-tree-id48164 . -346) (undo-tree-id48165 . -346) (undo-tree-id48166 . -346) (undo-tree-id48167 . -346) (undo-tree-id48168 . -346) (undo-tree-id48169 . -346) (undo-tree-id48170 . -346) (undo-tree-id48171 . -346) (undo-tree-id48172 . -346) (undo-tree-id48173 . -346) (undo-tree-id48174 . -346) (undo-tree-id48175 . -346) (undo-tree-id48176 . -346) (undo-tree-id48177 . -346) (undo-tree-id48178 . -346) (undo-tree-id48179 . -346) (undo-tree-id48180 . -346) (undo-tree-id48181 . -346) (undo-tree-id48182 . -346) (undo-tree-id48183 . -346) (undo-tree-id48184 . -346) (undo-tree-id48185 . -346) (undo-tree-id48186 . -346) (undo-tree-id48187 . -346) (undo-tree-id48188 . -346) (undo-tree-id48189 . -346) (undo-tree-id48190 . -346) (undo-tree-id48191 . -346) (undo-tree-id48192 . -346) (undo-tree-id48193 . -346) (undo-tree-id48194 . -346) (undo-tree-id48195 . -346) (undo-tree-id48196 . -346) (undo-tree-id48197 . -346) (undo-tree-id48198 . -346) (undo-tree-id48199 . -346) (undo-tree-id48200 . -346) (undo-tree-id48201 . -346) (undo-tree-id48202 . -346) (undo-tree-id48203 . -346) (undo-tree-id48204 . -346) (undo-tree-id48205 . -346) (undo-tree-id48206 . -346) (undo-tree-id48207 . -346) (undo-tree-id48208 . -346) (undo-tree-id48209 . -346) (undo-tree-id48210 . -346) (undo-tree-id48211 . -346) (undo-tree-id48212 . -346) (undo-tree-id48213 . -346) (undo-tree-id48214 . -346) (undo-tree-id48215 . -346) (undo-tree-id48216 . -346) (undo-tree-id48217 . -346) (undo-tree-id48218 . -346) (undo-tree-id48219 . -346) (undo-tree-id48220 . -346) (undo-tree-id48221 . -346) (undo-tree-id48222 . -462) (undo-tree-id48223 . -462) (undo-tree-id48224 . -462) (undo-tree-id48225 . -462) (undo-tree-id48226 . -462) (undo-tree-id48227 . -462) (undo-tree-id48228 . -462) (undo-tree-id48229 . -462) (undo-tree-id48230 . -462) (undo-tree-id48231 . -462) (undo-tree-id48232 . -462) (undo-tree-id48233 . -462) (undo-tree-id48234 . -462) (undo-tree-id48235 . -462) (undo-tree-id48236 . -462) (undo-tree-id48237 . -462) (undo-tree-id48238 . -462) (undo-tree-id48239 . -462) (undo-tree-id48240 . -462) (undo-tree-id48241 . -462) (undo-tree-id48242 . -462) (undo-tree-id48243 . -462) (undo-tree-id48244 . -462) (undo-tree-id48245 . -462) (undo-tree-id48246 . -462) (undo-tree-id48247 . -462) (undo-tree-id48248 . -462) (undo-tree-id48249 . -462) (undo-tree-id48250 . -462) (undo-tree-id48251 . -462) (undo-tree-id48252 . -462) (undo-tree-id48253 . -462) (undo-tree-id48254 . -462) (undo-tree-id48255 . -462) (undo-tree-id48256 . -462) (undo-tree-id48257 . -462) (undo-tree-id48258 . -462) (undo-tree-id48259 . -462) (undo-tree-id48260 . -462) (undo-tree-id48261 . -462) (undo-tree-id48262 . -462) (undo-tree-id48263 . -462) (undo-tree-id48264 . -462) (undo-tree-id48265 . -462) (undo-tree-id48266 . -462) (undo-tree-id48267 . -462) (undo-tree-id48268 . -462) (undo-tree-id48269 . -462) (undo-tree-id48270 . -462) (undo-tree-id48271 . -462) (undo-tree-id48272 . -462) (undo-tree-id48273 . -462) (undo-tree-id48274 . -462) (undo-tree-id48275 . -462) (undo-tree-id48276 . -462) (undo-tree-id48277 . -462) (undo-tree-id48278 . -462) (undo-tree-id48279 . -462) (undo-tree-id48280 . -462) (undo-tree-id48281 . -462) (undo-tree-id48282 . -462) (undo-tree-id48283 . -462) (undo-tree-id48284 . -462) (undo-tree-id48285 . -462) (undo-tree-id48286 . -462) (undo-tree-id48287 . -462) (undo-tree-id48288 . -462) (undo-tree-id48289 . -587) (undo-tree-id48290 . -587) (undo-tree-id48291 . -587) (undo-tree-id48292 . -587) (undo-tree-id48293 . -587) (undo-tree-id48294 . -587) (undo-tree-id48295 . -587) (undo-tree-id48296 . -587) (undo-tree-id48297 . -587) (undo-tree-id48298 . -587) (undo-tree-id48299 . -587) (undo-tree-id48300 . -587) (undo-tree-id48301 . -587) (undo-tree-id48302 . -587) (undo-tree-id48303 . -587) (undo-tree-id48304 . -587) (undo-tree-id48305 . -587) (undo-tree-id48306 . -587) (undo-tree-id48307 . -587) (undo-tree-id48308 . -587) (undo-tree-id48309 . -587) (undo-tree-id48310 . -587) (undo-tree-id48311 . -587) (undo-tree-id48312 . -587) (undo-tree-id48313 . -587) (undo-tree-id48314 . -587) (undo-tree-id48315 . -587) (undo-tree-id48316 . -587) (undo-tree-id48317 . -587) (undo-tree-id48318 . -587) (undo-tree-id48319 . -587) (undo-tree-id48320 . -587) (undo-tree-id48321 . -587) (undo-tree-id48322 . -587) (undo-tree-id48323 . -587) (undo-tree-id48324 . -587) (undo-tree-id48325 . -587) (undo-tree-id48326 . -587) (undo-tree-id48327 . -587) (undo-tree-id48328 . -587) (undo-tree-id48329 . -587) (undo-tree-id48330 . -587) (undo-tree-id48331 . -587) (undo-tree-id48332 . -587) (undo-tree-id48333 . -587) (undo-tree-id48334 . -587) (undo-tree-id48335 . -587) (undo-tree-id48336 . -587) (undo-tree-id48337 . -587) (undo-tree-id48338 . -587) (undo-tree-id48339 . -587) (undo-tree-id48340 . -587) (undo-tree-id48341 . -587) (undo-tree-id48342 . -587) (undo-tree-id48343 . -587) (undo-tree-id48344 . -587) (undo-tree-id48345 . -587) (undo-tree-id48346 . -587) (undo-tree-id48347 . -587) (undo-tree-id48348 . -587) (undo-tree-id48349 . -587) (undo-tree-id48350 . -587) (undo-tree-id48351 . -587) (undo-tree-id48352 . -587) (undo-tree-id48353 . -587) (undo-tree-id48354 . -587) (undo-tree-id48355 . -587) (undo-tree-id48356 . -587) (undo-tree-id48357 . -587) (undo-tree-id48358 . -587) (undo-tree-id48359 . -587) (undo-tree-id48360 . -587) (undo-tree-id48361 . -587) (undo-tree-id48362 . -587) (undo-tree-id48363 . -587) (undo-tree-id48364 . -587) (undo-tree-id48365 . -587) (undo-tree-id48366 . -587) (undo-tree-id48367 . -587) (undo-tree-id48368 . -587) (undo-tree-id48369 . -587) (undo-tree-id48370 . -587) (undo-tree-id48371 . -587) (undo-tree-id48372 . -587) (undo-tree-id48373 . -587) (undo-tree-id48374 . -587) (undo-tree-id48375 . -587) (undo-tree-id48376 . -587) (undo-tree-id48377 . -587) (undo-tree-id48378 . -587) (undo-tree-id48379 . -587) (undo-tree-id48380 . -587) (undo-tree-id48381 . -587) (undo-tree-id48382 . -587) (undo-tree-id48383 . -587) (undo-tree-id48384 . -587) (undo-tree-id48385 . -587) (undo-tree-id48386 . -587) (undo-tree-id48387 . -587) (undo-tree-id48388 . -587) (undo-tree-id48389 . -587) (undo-tree-id48390 . -587) (undo-tree-id48391 . -587) (undo-tree-id48392 . -587) (undo-tree-id48393 . -587) (undo-tree-id48394 . -587) (undo-tree-id48395 . -587) (undo-tree-id48396 . -587) (undo-tree-id48397 . -587) (undo-tree-id48398 . -587) (undo-tree-id48399 . -587) (undo-tree-id48400 . -587) (undo-tree-id48401 . -587) (undo-tree-id48402 . -587) (undo-tree-id48403 . -587) (undo-tree-id48404 . -587) (undo-tree-id48405 . -587) (undo-tree-id48406 . -587) (undo-tree-id48407 . -587) (undo-tree-id48408 . -587) (undo-tree-id48409 . -587) (undo-tree-id48410 . -587) (undo-tree-id48411 . -587) (undo-tree-id48412 . -587) (undo-tree-id48413 . -587) (undo-tree-id48414 . -587) (undo-tree-id48415 . -587) (undo-tree-id48416 . -587) (undo-tree-id48417 . -587) (undo-tree-id48418 . -587) (undo-tree-id48419 . -587) (undo-tree-id48420 . -587) (undo-tree-id48421 . -587) (undo-tree-id48422 . -587) (undo-tree-id48423 . -587) (undo-tree-id48424 . -587) (undo-tree-id48425 . -587) (undo-tree-id48426 . -587) (undo-tree-id48427 . -587) (undo-tree-id48428 . -587) (undo-tree-id48429 . -587) (undo-tree-id48430 . -587) (undo-tree-id48431 . -587) (undo-tree-id48432 . -587) (undo-tree-id48433 . -587) (undo-tree-id48434 . -587) (undo-tree-id48435 . -587) (undo-tree-id48436 . -587) (undo-tree-id48437 . -587) (undo-tree-id48438 . -587) (undo-tree-id48439 . -587) (undo-tree-id48440 . -587) (undo-tree-id48441 . -587) (undo-tree-id48442 . -587) (undo-tree-id48443 . -587) (undo-tree-id48444 . -587) (undo-tree-id48445 . -587) (undo-tree-id48446 . -587) (undo-tree-id48447 . -587) (undo-tree-id48448 . -587) (undo-tree-id48449 . -587) (undo-tree-id48450 . -587) (undo-tree-id48451 . -587) (undo-tree-id48452 . -587) (undo-tree-id48453 . -587) (undo-tree-id48454 . -587) (undo-tree-id48455 . -587) (undo-tree-id48456 . -587) (undo-tree-id48457 . -587) (undo-tree-id48458 . -587) (undo-tree-id48459 . -587) (undo-tree-id48460 . -587) (undo-tree-id48461 . -587) (undo-tree-id48462 . -587) (undo-tree-id48463 . -587) (undo-tree-id48464 . -587) (undo-tree-id48465 . -587) (undo-tree-id48466 . -587) (undo-tree-id48467 . -587) (undo-tree-id48468 . -587) (undo-tree-id48469 . -587) (undo-tree-id48470 . -587) (undo-tree-id48471 . -587) (undo-tree-id48472 . -587) (undo-tree-id48473 . -587) (undo-tree-id48474 . -587) (undo-tree-id48475 . -587) (undo-tree-id48476 . -587) (undo-tree-id48477 . -587) (undo-tree-id48478 . -587) (undo-tree-id48479 . -587) (undo-tree-id48480 . -587) (undo-tree-id48481 . -587) (undo-tree-id48482 . -587) (undo-tree-id48483 . -587) (undo-tree-id48484 . -587) (undo-tree-id48485 . -587) (undo-tree-id48486 . -587) (undo-tree-id48487 . -587) (undo-tree-id48488 . -587) (undo-tree-id48489 . -587) (undo-tree-id48490 . -587) (undo-tree-id48491 . -587) (undo-tree-id48492 . -587) (undo-tree-id48493 . -587) (undo-tree-id48494 . -587) (undo-tree-id48495 . -587) (undo-tree-id48496 . -587) (undo-tree-id48497 . -587) (undo-tree-id48498 . -587) (undo-tree-id48499 . -587) (undo-tree-id48500 . -587) (undo-tree-id48501 . -587) (undo-tree-id48502 . -587) (undo-tree-id48503 . -587) (undo-tree-id48504 . -587) (undo-tree-id48505 . -587) (undo-tree-id48506 . -587) (undo-tree-id48507 . -587) (undo-tree-id48508 . -587) (undo-tree-id48509 . -587) (undo-tree-id48510 . -587) (undo-tree-id48511 . -587) (undo-tree-id48512 . -587) (undo-tree-id48513 . -587) (undo-tree-id48514 . -587) (undo-tree-id48515 . -587) (undo-tree-id48516 . -587) (undo-tree-id48517 . -587) (undo-tree-id48518 . -587) (undo-tree-id48519 . -587) (undo-tree-id48520 . -587) (undo-tree-id48521 . -587) (undo-tree-id48522 . -587) (undo-tree-id48523 . -587) (undo-tree-id48524 . -587) (undo-tree-id48525 . -587) (undo-tree-id48526 . -587) (undo-tree-id48527 . -587) (undo-tree-id48528 . -587) (undo-tree-id48529 . -587) (undo-tree-id48530 . -587) (undo-tree-id48531 . -587) (undo-tree-id48532 . -587) (undo-tree-id48533 . -587) (undo-tree-id48534 . -587) (undo-tree-id48535 . -587) (undo-tree-id48536 . -587) (undo-tree-id48537 . -587) (undo-tree-id48538 . -587) (undo-tree-id48539 . -587) (undo-tree-id48540 . -587) (undo-tree-id48541 . -587) (undo-tree-id48542 . -587) (undo-tree-id48543 . -587) (undo-tree-id48544 . -587) (undo-tree-id48545 . -587) (undo-tree-id48546 . -587) (undo-tree-id48547 . -587) (undo-tree-id48548 . -587) (undo-tree-id48549 . -587) (undo-tree-id48550 . -587) (undo-tree-id48551 . -587) (undo-tree-id48552 . -587) (undo-tree-id48553 . -587) (undo-tree-id48554 . -587) (undo-tree-id48555 . -587) (undo-tree-id48556 . -587) (undo-tree-id48557 . -725) (undo-tree-id48558 . -725) (undo-tree-id48559 . -725) (undo-tree-id48560 . -725) (undo-tree-id48561 . -725) (undo-tree-id48562 . -725) (undo-tree-id48563 . -725) (undo-tree-id48564 . -725) (undo-tree-id48565 . -725) (undo-tree-id48566 . -725) (undo-tree-id48567 . -725) (undo-tree-id48568 . -725) (undo-tree-id48569 . -725) (undo-tree-id48570 . -725) (undo-tree-id48571 . -725) (undo-tree-id48572 . -725) (undo-tree-id48573 . -725) (undo-tree-id48574 . -725) (undo-tree-id48575 . -725) (undo-tree-id48576 . -725) (undo-tree-id48577 . -725) (undo-tree-id48578 . -725) (undo-tree-id48579 . -725) (undo-tree-id48580 . -725) (undo-tree-id48581 . -725) (undo-tree-id48582 . -725) (undo-tree-id48583 . -725) (undo-tree-id48584 . -725) (undo-tree-id48585 . -725) (undo-tree-id48586 . -725) (undo-tree-id48587 . -725) (undo-tree-id48588 . -725) (undo-tree-id48589 . -725) (undo-tree-id48590 . -725) (undo-tree-id48591 . -725) (undo-tree-id48592 . -725) (undo-tree-id48593 . -725) (undo-tree-id48594 . -725) (undo-tree-id48595 . -725) (undo-tree-id48596 . -725) (undo-tree-id48597 . -725) (undo-tree-id48598 . -725) (undo-tree-id48599 . -882) (undo-tree-id48600 . -882) (undo-tree-id48601 . -882) (undo-tree-id48602 . -882) (undo-tree-id48603 . -882) (undo-tree-id48604 . -882) (undo-tree-id48605 . -882) (undo-tree-id48606 . -882) (undo-tree-id48607 . -882) (undo-tree-id48608 . -882) (undo-tree-id48609 . -882) (undo-tree-id48610 . -882) (undo-tree-id48611 . -882) (undo-tree-id48612 . -882) (undo-tree-id48613 . -882) (undo-tree-id48614 . -882) (undo-tree-id48615 . -882) (undo-tree-id48616 . -882) (undo-tree-id48617 . -882) (undo-tree-id48618 . -882) (undo-tree-id48619 . -882) (undo-tree-id48620 . -882) (undo-tree-id48621 . -882) (undo-tree-id48622 . -882) (undo-tree-id48623 . -882) (undo-tree-id48624 . -882) (undo-tree-id48625 . -882) (undo-tree-id48626 . -882) (undo-tree-id48627 . -882) (undo-tree-id48628 . -882) (undo-tree-id48629 . -882) (undo-tree-id48630 . -882) (undo-tree-id48631 . -882) (undo-tree-id48632 . -882) (undo-tree-id48633 . -882) (undo-tree-id48634 . -882) (undo-tree-id48635 . -882) (undo-tree-id48636 . -882) (undo-tree-id48637 . -882) (undo-tree-id48638 . -882) (undo-tree-id48639 . -882) (undo-tree-id48640 . -882) (undo-tree-id48641 . -882) (undo-tree-id48642 . -882) (undo-tree-id48643 . -1072) (undo-tree-id48644 . -1072) (undo-tree-id48645 . -1219) (undo-tree-id48646 . -1219) (undo-tree-id48647 . -1219) (undo-tree-id48648 . -1219) (undo-tree-id48649 . -1219) (undo-tree-id48650 . -1219) (undo-tree-id48651 . -1219) (undo-tree-id48652 . -1219) (undo-tree-id48653 . -1219) (undo-tree-id48654 . -1219) (undo-tree-id48655 . -1219) (undo-tree-id48656 . -1219) (undo-tree-id48657 . -1219) (undo-tree-id48658 . -1219) (undo-tree-id48659 . -1219) (undo-tree-id48660 . -1219) (undo-tree-id48661 . -1219) (undo-tree-id48662 . -1219) (undo-tree-id48663 . -1219) (undo-tree-id48664 . -1219) (undo-tree-id48665 . -1219) (undo-tree-id48666 . -1219) (undo-tree-id48667 . -1219) (undo-tree-id48668 . -1219) (undo-tree-id48669 . -1219) (undo-tree-id48670 . -1219) (undo-tree-id48671 . -1219) (undo-tree-id48672 . -1219) (undo-tree-id48673 . -1219) (undo-tree-id48674 . -1219) (undo-tree-id48675 . -1219) (undo-tree-id48676 . -1219) (undo-tree-id48677 . -1219) (undo-tree-id48678 . -1219) (undo-tree-id48679 . -1219) (undo-tree-id48680 . -1219) (undo-tree-id48681 . -1219) (undo-tree-id48682 . -1219) (undo-tree-id48683 . -1219) (undo-tree-id48684 . -1219) (undo-tree-id48685 . -1219) (undo-tree-id48686 . -1219) (undo-tree-id48687 . -1219) (undo-tree-id48688 . -1219) (undo-tree-id48689 . -1219) (undo-tree-id48690 . -1219) (undo-tree-id48691 . -1219) (undo-tree-id48692 . -1219) (undo-tree-id48693 . -1219) (undo-tree-id48694 . -1219) (undo-tree-id48695 . -1219) (undo-tree-id48696 . -1219) (undo-tree-id48697 . -1219) (undo-tree-id48698 . -1219) (undo-tree-id48699 . -1219) (undo-tree-id48700 . -1219) (undo-tree-id48701 . -1219) (undo-tree-id48702 . -1219) (undo-tree-id48703 . -1219) (undo-tree-id48704 . -1219) (undo-tree-id48705 . -1219) (undo-tree-id48706 . -1219) (undo-tree-id48707 . -1219) (undo-tree-id48708 . -1219) (undo-tree-id48709 . -1219) (undo-tree-id48710 . -1219) (undo-tree-id48711 . -1219) (undo-tree-id48712 . -1219) (undo-tree-id48713 . -1219) (undo-tree-id48714 . -1219) (undo-tree-id48715 . -1219) (undo-tree-id48716 . -1219) (undo-tree-id48717 . -1219) (undo-tree-id48718 . -1219) (undo-tree-id48719 . -1219) (undo-tree-id48720 . -1219) (undo-tree-id48721 . -1219) (undo-tree-id48722 . -1219) (undo-tree-id48723 . -1219) (undo-tree-id48724 . -1219) (undo-tree-id48725 . -1219) (undo-tree-id48726 . -1219) (undo-tree-id48727 . -1219) (undo-tree-id48728 . -1219) (undo-tree-id48729 . -1219) (undo-tree-id48730 . -1219) (undo-tree-id48731 . -1219) (undo-tree-id48732 . -1219) (undo-tree-id48733 . -1219) (undo-tree-id48734 . -1219) (undo-tree-id48735 . -1219) (undo-tree-id48736 . -1219) (undo-tree-id48737 . -1219) (undo-tree-id48738 . -1219) (undo-tree-id48739 . -1219) (undo-tree-id48740 . -1219) (undo-tree-id48741 . -1219) (undo-tree-id48742 . -1219) (undo-tree-id48743 . -1219) (undo-tree-id48744 . -1219) (undo-tree-id48745 . -1219) (undo-tree-id48746 . -1219) (undo-tree-id48747 . -1219) (undo-tree-id48748 . -1219) (undo-tree-id48749 . -1219) (undo-tree-id48750 . -1219) (undo-tree-id48751 . -1219) (undo-tree-id48752 . -1219) (undo-tree-id48753 . -1219) (undo-tree-id48754 . -1219) (undo-tree-id48755 . -1219) (undo-tree-id48756 . -1219) (undo-tree-id48757 . -1219) (undo-tree-id48758 . -1219) (undo-tree-id48759 . -1219) (undo-tree-id48760 . -1219) (undo-tree-id48761 . -1219) (undo-tree-id48762 . -1219) (undo-tree-id48763 . -1219) (undo-tree-id48764 . -1219) (undo-tree-id48765 . -1219) (undo-tree-id48766 . -1219) (undo-tree-id48767 . -1219) (undo-tree-id48768 . -1219) (undo-tree-id48769 . -1219) (undo-tree-id48770 . -1219) (undo-tree-id48771 . -1219) (undo-tree-id48772 . -1219) (undo-tree-id48773 . -1219) (undo-tree-id48774 . -1219) (undo-tree-id48775 . -1390) (undo-tree-id48776 . -1390) (undo-tree-id48777 . -1390) (undo-tree-id48778 . -1390) (undo-tree-id48779 . -1390) (undo-tree-id48780 . -1390) (undo-tree-id48781 . -1390) (undo-tree-id48782 . -1390) (undo-tree-id48783 . -1390) (undo-tree-id48784 . -1390) (undo-tree-id48785 . -1390) (undo-tree-id48786 . -1390) (undo-tree-id48787 . -1390) (undo-tree-id48788 . -1390) (undo-tree-id48789 . -1390) (undo-tree-id48790 . -1390) (undo-tree-id48791 . -1390) (undo-tree-id48792 . -1390) (undo-tree-id48793 . -1390) (undo-tree-id48794 . -1390) (undo-tree-id48795 . -1390) (undo-tree-id48796 . -1390) (undo-tree-id48797 . -1390) (undo-tree-id48798 . -1390) (undo-tree-id48799 . -1219) (undo-tree-id48800 . -1390) (undo-tree-id48801 . -1390) (undo-tree-id48802 . -1390) (undo-tree-id48803 . -1390) (undo-tree-id48804 . -1390) (undo-tree-id48805 . -1390) (undo-tree-id48806 . -1390) (undo-tree-id48807 . -1390) (undo-tree-id48808 . -1390) (undo-tree-id48809 . -1390) (undo-tree-id48810 . -1390) (undo-tree-id48811 . -1390) (undo-tree-id48812 . -1390) (undo-tree-id48813 . -1390) (undo-tree-id48814 . -1390) (undo-tree-id48815 . -1390) (undo-tree-id48816 . -1390) (undo-tree-id48817 . -1390) (undo-tree-id48818 . -1390) (undo-tree-id48819 . -1390) (undo-tree-id48820 . -1390) (undo-tree-id48821 . -1390) (undo-tree-id48822 . -1390) (undo-tree-id48823 . -1390) (undo-tree-id48824 . -1471) (undo-tree-id48825 . -1471) (undo-tree-id48826 . -1471) (undo-tree-id48827 . -1471) (undo-tree-id48828 . -1471) (undo-tree-id48829 . -1471) (undo-tree-id48830 . -1471) (undo-tree-id48831 . -1471) (undo-tree-id48832 . -1471) (undo-tree-id48833 . -1471) (undo-tree-id48834 . -1471) (undo-tree-id48835 . -1471) (undo-tree-id48836 . -1471) (undo-tree-id48837 . -1471) (undo-tree-id48838 . -1471) (undo-tree-id48839 . -1471) (undo-tree-id48840 . -1471) (undo-tree-id48841 . -1471) (undo-tree-id48842 . -1471) (undo-tree-id48843 . -1471) (undo-tree-id48844 . -1471) (undo-tree-id48845 . -1471) (undo-tree-id48846 . -1471) (undo-tree-id48847 . -1471) (undo-tree-id48848 . -1390) (undo-tree-id48849 . -1471) (undo-tree-id48850 . -1471) (undo-tree-id48851 . -1471) (undo-tree-id48852 . -1471) (undo-tree-id48853 . -1471) (undo-tree-id48854 . -1471) (undo-tree-id48855 . -1471) (undo-tree-id48856 . -1471) (undo-tree-id48857 . -1471) (undo-tree-id48858 . -1471) (undo-tree-id48859 . -1471) (undo-tree-id48860 . -1471) (undo-tree-id48861 . -1471) (undo-tree-id48862 . -1471) (undo-tree-id48863 . -1471) (undo-tree-id48864 . -1471) (undo-tree-id48865 . -1471) (undo-tree-id48866 . -1471) (undo-tree-id48867 . -1471) (undo-tree-id48868 . -1471) (undo-tree-id48869 . -1471) (undo-tree-id48870 . -1471) (undo-tree-id48871 . -1471) (undo-tree-id48872 . -1471) (undo-tree-id48873 . -1471) (undo-tree-id48874 . -1609) (undo-tree-id48875 . -1609) (undo-tree-id48876 . -1769) (undo-tree-id48877 . -652) (undo-tree-id48878 . -1) (undo-tree-id48879 . -1892) (undo-tree-id48880 . -51) (undo-tree-id48881 . -4) (undo-tree-id48882 . -4) (undo-tree-id48883 . -4) (undo-tree-id48884 . -1) (undo-tree-id48885 . -1892) 5658) nil (25774 61582 760687 4000) 0 nil] [nil nil ((3850 . 3853) (#("i" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3850) (undo-tree-id41793 . -1) (undo-tree-id41794 . -1) 3851 (3850 . 3851) (#("that" 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3850) (undo-tree-id41795 . -3) (undo-tree-id41796 . -3) (undo-tree-id41798 . -3) (undo-tree-id41800 . -3) (undo-tree-id41802 . -3) (undo-tree-id41804 . -3) (undo-tree-id41806 . -3) (undo-tree-id41808 . -3) (undo-tree-id41810 . -3) (undo-tree-id41812 . -3) (undo-tree-id41814 . -3) (undo-tree-id41816 . -3) (undo-tree-id41818 . -3) (undo-tree-id41820 . -3) (undo-tree-id41822 . -3) (undo-tree-id41824 . -3) (undo-tree-id41826 . -3) (undo-tree-id41828 . -3) (undo-tree-id41830 . -3) (undo-tree-id41832 . -3) (undo-tree-id41834 . -3) (undo-tree-id41836 . -3) (undo-tree-id41838 . -3) (undo-tree-id41840 . -3) (undo-tree-id41842 . -3) (undo-tree-id41844 . -3) (undo-tree-id41846 . -4) 3853) ((3850 . 3854) (#("i" 0 1 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3850) (3850 . 3851) (#("and" 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3850) (undo-tree-id45372 . -2)) (25774 61478 768798 349000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2612) (undo-tree-id47054 . -1) (undo-tree-id47055 . -1)) nil (25774 61582 759528 316000) 0 nil])
([nil nil ((#("," 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3879) (undo-tree-id41792 . -1)) ((3879 . 3880)) (25774 61478 547360 142000) 0 nil])
([nil nil ((3765 . 3766) (3765 . 3768)) nil (25774 61582 759526 502000) 0 nil])
([nil nil ((#("𝑐𝑐𝑖𝑖 ." 0 6 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3880) (undo-tree-id45357 . -5) (undo-tree-id45358 . -6) (undo-tree-id45359 . -6)) ((3880 . 3886)) (25774 61478 304802 260000) 0 nil] [nil nil ((#("- RNN #1 is a bidirectional RNN and generates context vectors 𝑐𝑐𝑖𝑖 .
" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2 45 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 45 46 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 46 68 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 68 69 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 3818) (undo-tree-id41096 . 34) (undo-tree-id41097 . -68) (undo-tree-id41098 . -9) (undo-tree-id41099 . -9) (undo-tree-id41100 . 60) (undo-tree-id41101 . -9) (undo-tree-id41102 . -9) (undo-tree-id41103 . -34) (undo-tree-id41104 . -34) (undo-tree-id41105 . -62) (undo-tree-id41106 . -2) (undo-tree-id41107 . -2) (undo-tree-id41108 . -2) (undo-tree-id41109 . -2) (undo-tree-id41110 . -2) (undo-tree-id41111 . -2) (undo-tree-id41112 . -2) (undo-tree-id41113 . -2) (undo-tree-id41114 . -2) (undo-tree-id41115 . -2) (undo-tree-id41116 . -2) (undo-tree-id41117 . -2) (undo-tree-id41118 . -2) (undo-tree-id41119 . -2) (undo-tree-id41120 . -2) (undo-tree-id41121 . -2) (undo-tree-id41122 . -2) (undo-tree-id41123 . -2) (undo-tree-id41124 . -2) (undo-tree-id41125 . -2) (undo-tree-id41126 . -2) (undo-tree-id41127 . -2) (undo-tree-id41128 . -2) (undo-tree-id41129 . -2) (undo-tree-id41130 . -2) (undo-tree-id41131 . -2) (undo-tree-id41132 . -2) (undo-tree-id41133 . -2) (undo-tree-id41134 . -2) (undo-tree-id41135 . -2) (undo-tree-id41136 . -2) (undo-tree-id41137 . -2) (undo-tree-id41138 . -2) (undo-tree-id41139 . -2) (undo-tree-id41140 . -2) (undo-tree-id41141 . -2) (undo-tree-id41142 . -2) (undo-tree-id41143 . -2) (undo-tree-id41144 . -2) (undo-tree-id41145 . -2) (undo-tree-id41146 . -2) (undo-tree-id41147 . -2) (undo-tree-id41148 . -2) (undo-tree-id41149 . -2) (undo-tree-id41150 . -2) (undo-tree-id41151 . -2) (undo-tree-id41152 . -2) (undo-tree-id41153 . -2) (undo-tree-id41154 . -2) (undo-tree-id41155 . -2) (undo-tree-id41156 . -2) (undo-tree-id41157 . -2) (undo-tree-id41158 . -2) (undo-tree-id41159 . -2) (undo-tree-id41160 . -2) (undo-tree-id41161 . -2) (undo-tree-id41162 . -2) (undo-tree-id41163 . -2) (undo-tree-id41164 . -2) (undo-tree-id41165 . -2) (undo-tree-id41166 . -2) (undo-tree-id41167 . -2) (undo-tree-id41168 . -2) (undo-tree-id41169 . -2) (undo-tree-id41170 . -2) (undo-tree-id41171 . -2) (undo-tree-id41172 . -2) (undo-tree-id41173 . -2) (undo-tree-id41174 . -2) (undo-tree-id41175 . -2) (undo-tree-id41176 . -2) (undo-tree-id41177 . -2) (undo-tree-id41178 . -2) (undo-tree-id41179 . -2) (undo-tree-id41180 . -2) (undo-tree-id41181 . -2) (undo-tree-id41182 . -2) (undo-tree-id41183 . -2) (undo-tree-id41184 . -2) (undo-tree-id41185 . -2) (undo-tree-id41186 . -2) (undo-tree-id41187 . -2) (undo-tree-id41188 . -2) (undo-tree-id41189 . -2) (undo-tree-id41190 . -2) (undo-tree-id41191 . -2) (undo-tree-id41192 . -2) (undo-tree-id41193 . -2) (undo-tree-id41194 . -2) (undo-tree-id41195 . -2) (undo-tree-id41196 . -2) (undo-tree-id41197 . -2) (undo-tree-id41198 . -2) (undo-tree-id41199 . -2) (undo-tree-id41200 . -2) (undo-tree-id41201 . -2) (undo-tree-id41202 . -2) (undo-tree-id41203 . -2) (undo-tree-id41204 . -2) (undo-tree-id41205 . -2) (undo-tree-id41206 . -2) (undo-tree-id41207 . -2) (undo-tree-id41208 . -2) (undo-tree-id41209 . -2) (undo-tree-id41210 . -2) (undo-tree-id41211 . -2) (undo-tree-id41212 . -2) (undo-tree-id41213 . -2) (undo-tree-id41214 . -2) (undo-tree-id41215 . -2) (undo-tree-id41216 . -2) (undo-tree-id41217 . -2) (undo-tree-id41218 . -2) (undo-tree-id41219 . -2) (undo-tree-id41220 . -2) (undo-tree-id41221 . -2) (undo-tree-id41222 . -2) (undo-tree-id41223 . -2) (undo-tree-id41224 . -2) (undo-tree-id41225 . -2) (undo-tree-id41226 . -2) (undo-tree-id41227 . -2) (undo-tree-id41228 . -2) (undo-tree-id41229 . -2) (undo-tree-id41230 . -2) (undo-tree-id41231 . -2) (undo-tree-id41232 . -2) (undo-tree-id41233 . -2) (undo-tree-id41234 . -2) (undo-tree-id41235 . -2) (undo-tree-id41236 . -2) (undo-tree-id41237 . -2) (undo-tree-id41238 . -2) (undo-tree-id41239 . -2) (undo-tree-id41240 . -2) (undo-tree-id41241 . -2) (undo-tree-id41242 . -2) (undo-tree-id41243 . -2) (undo-tree-id41244 . -2) (undo-tree-id41245 . -2) (undo-tree-id41246 . -2) (undo-tree-id41247 . -2) (undo-tree-id41248 . -2) (undo-tree-id41249 . -2) (undo-tree-id41250 . -2) (undo-tree-id41251 . -2) (undo-tree-id41252 . -2) (undo-tree-id41253 . -2) (undo-tree-id41254 . -2) (undo-tree-id41255 . -2) (undo-tree-id41256 . -2) (undo-tree-id41257 . -2) (undo-tree-id41258 . -2) (undo-tree-id41259 . -2) (undo-tree-id41260 . -2) (undo-tree-id41261 . -2) (undo-tree-id41262 . -2) (undo-tree-id41263 . -2) (undo-tree-id41264 . -2) (undo-tree-id41265 . -2) (undo-tree-id41266 . -2) (undo-tree-id41267 . -2) (undo-tree-id41268 . -2) (undo-tree-id41269 . -2) (undo-tree-id41270 . -2) (undo-tree-id41271 . -2) (undo-tree-id41272 . -2) (undo-tree-id41273 . -2) (undo-tree-id41274 . -2) (undo-tree-id41275 . -2) (undo-tree-id41276 . -2) (undo-tree-id41277 . -2) (undo-tree-id41278 . -2) (undo-tree-id41279 . -2) (undo-tree-id41280 . -2) (undo-tree-id41281 . -2) (undo-tree-id41282 . -2) (undo-tree-id41283 . -2) (undo-tree-id41284 . -2) (undo-tree-id41285 . -2) (undo-tree-id41286 . -2) (undo-tree-id41287 . -2) (undo-tree-id41288 . -2) (undo-tree-id41289 . -2) (undo-tree-id41290 . -2) (undo-tree-id41291 . -2) (undo-tree-id41292 . -2) (undo-tree-id41293 . -2) (undo-tree-id41294 . -2) (undo-tree-id41295 . -2) (undo-tree-id41296 . -2) (undo-tree-id41297 . -2) (undo-tree-id41298 . -2) (undo-tree-id41299 . -2) (undo-tree-id41300 . -2) (undo-tree-id41301 . -2) (undo-tree-id41302 . -2) (undo-tree-id41303 . -2) (undo-tree-id41304 . -2) (undo-tree-id41305 . -2) (undo-tree-id41306 . -2) (undo-tree-id41307 . -2) (undo-tree-id41308 . -2) (undo-tree-id41309 . -2) (undo-tree-id41310 . -2) (undo-tree-id41311 . -2) (undo-tree-id41312 . -2) (undo-tree-id41313 . -2) (undo-tree-id41314 . -2) (undo-tree-id41315 . -2) (undo-tree-id41316 . -2) (undo-tree-id41317 . -2) (undo-tree-id41318 . -2) (undo-tree-id41319 . -2) (undo-tree-id41320 . -2) (undo-tree-id41321 . -2) (undo-tree-id41322 . -2) (undo-tree-id41323 . -2) (undo-tree-id41324 . -2) (undo-tree-id41325 . -2) (undo-tree-id41326 . -2) (undo-tree-id41327 . -2) (undo-tree-id41328 . -2) (undo-tree-id41329 . -2) (undo-tree-id41330 . -2) (undo-tree-id41331 . -2) (undo-tree-id41332 . -2) (undo-tree-id41333 . -2) (undo-tree-id41334 . -2) (undo-tree-id41335 . -2) (undo-tree-id41336 . -2) (undo-tree-id41337 . -2) (undo-tree-id41338 . -2) (undo-tree-id41339 . -2) (undo-tree-id41340 . -2) (undo-tree-id41341 . -2) (undo-tree-id41342 . -2) (undo-tree-id41343 . -2) (undo-tree-id41344 . -2) (undo-tree-id41345 . -2) (undo-tree-id41346 . -2) (undo-tree-id41347 . -2) (undo-tree-id41348 . -2) (undo-tree-id41349 . -2) (undo-tree-id41350 . -2) (undo-tree-id41351 . -2) (undo-tree-id41352 . 67) (undo-tree-id41353 . -5) (undo-tree-id41354 . -9) (undo-tree-id41355 . -9) (undo-tree-id41356 . -9) (undo-tree-id41357 . -9) (undo-tree-id41358 . -9) (undo-tree-id41359 . -9) (undo-tree-id41360 . -9) (undo-tree-id41361 . -9) (undo-tree-id41362 . -9) (undo-tree-id41363 . -9) (undo-tree-id41364 . -9) (undo-tree-id41365 . -9) (undo-tree-id41366 . -9) (undo-tree-id41367 . -9) (undo-tree-id41368 . -9) (undo-tree-id41369 . -9) (undo-tree-id41370 . -9) (undo-tree-id41371 . -9) (undo-tree-id41372 . -9) (undo-tree-id41373 . -9) (undo-tree-id41374 . -9) (undo-tree-id41375 . -9) (undo-tree-id41376 . -9) (undo-tree-id41377 . -9) (undo-tree-id41378 . -9) (undo-tree-id41379 . -9) (undo-tree-id41380 . -9) (undo-tree-id41381 . -9) (undo-tree-id41382 . -9) (undo-tree-id41383 . -9) (undo-tree-id41384 . -9) (undo-tree-id41385 . -9) (undo-tree-id41386 . -9) (undo-tree-id41387 . -9) (undo-tree-id41388 . -9) (undo-tree-id41389 . -9) (undo-tree-id41390 . -9) (undo-tree-id41391 . -9) (undo-tree-id41392 . -9) (undo-tree-id41393 . -9) (undo-tree-id41394 . -9) (undo-tree-id41395 . -9) (undo-tree-id41396 . -9) (undo-tree-id41397 . -9) (undo-tree-id41398 . -9) (undo-tree-id41399 . -9) (undo-tree-id41400 . -9) (undo-tree-id41401 . -9) (undo-tree-id41402 . -9) (undo-tree-id41403 . -9) (undo-tree-id41404 . -9) (undo-tree-id41405 . -9) (undo-tree-id41406 . -9) (undo-tree-id41407 . -9) (undo-tree-id41408 . -9) (undo-tree-id41409 . -9) (undo-tree-id41410 . -9) (undo-tree-id41411 . -9) (undo-tree-id41412 . -9) (undo-tree-id41413 . -9) (undo-tree-id41414 . -9) (undo-tree-id41415 . -9) (undo-tree-id41416 . -9) (undo-tree-id41417 . -9) (undo-tree-id41418 . -9) (undo-tree-id41419 . -9) (undo-tree-id41420 . -9) (undo-tree-id41421 . -9) (undo-tree-id41422 . -9) (undo-tree-id41423 . -9) (undo-tree-id41424 . -9) (undo-tree-id41425 . -9) (undo-tree-id41426 . -9) (undo-tree-id41427 . -9) (undo-tree-id41428 . -9) (undo-tree-id41429 . -9) (undo-tree-id41430 . -9) (undo-tree-id41431 . -9) (undo-tree-id41432 . -9) (undo-tree-id41433 . -9) (undo-tree-id41434 . -9) (undo-tree-id41435 . -9) (undo-tree-id41436 . -9) (undo-tree-id41437 . -9) (undo-tree-id41438 . -9) (undo-tree-id41439 . -9) (undo-tree-id41440 . -9) (undo-tree-id41441 . -9) (undo-tree-id41442 . -9) (undo-tree-id41443 . -9) (undo-tree-id41444 . -9) (undo-tree-id41445 . -9) (undo-tree-id41446 . -9) (undo-tree-id41447 . -9) (undo-tree-id41448 . -9) (undo-tree-id41449 . -9) (undo-tree-id41450 . -9) (undo-tree-id41451 . -9) (undo-tree-id41452 . -9) (undo-tree-id41453 . -9) (undo-tree-id41454 . -9) (undo-tree-id41455 . -9) (undo-tree-id41456 . -9) (undo-tree-id41457 . -9) (undo-tree-id41458 . -9) (undo-tree-id41459 . -9) (undo-tree-id41460 . -9) (undo-tree-id41461 . -9) (undo-tree-id41462 . -9) (undo-tree-id41463 . -9) (undo-tree-id41464 . -9) (undo-tree-id41465 . -9) (undo-tree-id41466 . -9) (undo-tree-id41467 . -9) (undo-tree-id41468 . -9) (undo-tree-id41469 . -9) (undo-tree-id41470 . -9) (undo-tree-id41471 . -9) (undo-tree-id41472 . -9) (undo-tree-id41473 . -9) (undo-tree-id41474 . -9) (undo-tree-id41475 . -9) (undo-tree-id41476 . -9) (undo-tree-id41477 . -9) (undo-tree-id41478 . -9) (undo-tree-id41479 . -9) (undo-tree-id41480 . -9) (undo-tree-id41481 . -9) (undo-tree-id41482 . -9) (undo-tree-id41483 . -9) (undo-tree-id41484 . -9) (undo-tree-id41485 . -9) (undo-tree-id41486 . -9) (undo-tree-id41487 . -9) (undo-tree-id41488 . -9) (undo-tree-id41489 . -9) (undo-tree-id41490 . -9) (undo-tree-id41491 . -9) (undo-tree-id41492 . -9) (undo-tree-id41493 . -9) (undo-tree-id41494 . -9) (undo-tree-id41495 . -9) (undo-tree-id41496 . -9) (undo-tree-id41497 . -9) (undo-tree-id41498 . -9) (undo-tree-id41499 . -9) (undo-tree-id41500 . -9) (undo-tree-id41501 . -9) (undo-tree-id41502 . -9) (undo-tree-id41503 . -9) (undo-tree-id41504 . -9) (undo-tree-id41505 . -9) (undo-tree-id41506 . -9) (undo-tree-id41507 . -9) (undo-tree-id41508 . -9) (undo-tree-id41509 . -9) (undo-tree-id41510 . -9) (undo-tree-id41511 . -9) (undo-tree-id41512 . -9) (undo-tree-id41513 . -9) (undo-tree-id41514 . -9) (undo-tree-id41515 . -9) (undo-tree-id41516 . -9) (undo-tree-id41517 . -9) (undo-tree-id41518 . -9) (undo-tree-id41519 . -9) (undo-tree-id41520 . -9) (undo-tree-id41521 . -9) (undo-tree-id41522 . -9) (undo-tree-id41523 . -9) (undo-tree-id41524 . -9) (undo-tree-id41525 . -9) (undo-tree-id41526 . -9) (undo-tree-id41527 . -9) (undo-tree-id41528 . -9) (undo-tree-id41529 . -9) (undo-tree-id41530 . -9) (undo-tree-id41531 . -9) (undo-tree-id41532 . -9) (undo-tree-id41533 . -9) (undo-tree-id41534 . -9) (undo-tree-id41535 . -9) (undo-tree-id41536 . -9) (undo-tree-id41537 . -9) (undo-tree-id41538 . -9) (undo-tree-id41539 . -9) (undo-tree-id41540 . -9) (undo-tree-id41541 . -9) (undo-tree-id41542 . -9) (undo-tree-id41543 . -9) (undo-tree-id41544 . -9) (undo-tree-id41545 . -9) (undo-tree-id41546 . -9) (undo-tree-id41547 . -9) (undo-tree-id41548 . -9) (undo-tree-id41549 . -9) (undo-tree-id41550 . -9) (undo-tree-id41551 . -9) (undo-tree-id41552 . -9) (undo-tree-id41553 . -9) (undo-tree-id41554 . -9) (undo-tree-id41555 . -9) (undo-tree-id41556 . -9) (undo-tree-id41557 . -9) (undo-tree-id41558 . -9) (undo-tree-id41559 . -9) (undo-tree-id41560 . -9) (undo-tree-id41561 . -9) (undo-tree-id41562 . -9) (undo-tree-id41563 . -9) (undo-tree-id41564 . -9) (undo-tree-id41565 . -9) (undo-tree-id41566 . -9) (undo-tree-id41567 . -9) (undo-tree-id41568 . -9) (undo-tree-id41569 . -9) (undo-tree-id41570 . -9) (undo-tree-id41571 . -9) (undo-tree-id41572 . -9) (undo-tree-id41573 . -9) (undo-tree-id41574 . -9) (undo-tree-id41575 . -9) (undo-tree-id41576 . -9) (undo-tree-id41577 . -9) (undo-tree-id41578 . -9) (undo-tree-id41579 . -9) (undo-tree-id41580 . -9) (undo-tree-id41581 . -9) (undo-tree-id41582 . -9) (undo-tree-id41583 . -9) (undo-tree-id41584 . -9) (undo-tree-id41585 . -9) (undo-tree-id41586 . -9) (undo-tree-id41587 . -9) (undo-tree-id41588 . -9) (undo-tree-id41589 . -9) (undo-tree-id41590 . -9) (undo-tree-id41591 . -9) (undo-tree-id41592 . -9) (undo-tree-id41593 . -9) (undo-tree-id41594 . -9) (undo-tree-id41595 . -9) (undo-tree-id41596 . -9) (undo-tree-id41597 . -9) (undo-tree-id41598 . -9) (undo-tree-id41599 . -9) (undo-tree-id41600 . -9) (undo-tree-id41601 . -9) (undo-tree-id41602 . -9) (undo-tree-id41603 . -9) (undo-tree-id41604 . -9) (undo-tree-id41605 . -9) (undo-tree-id41606 . -9) (undo-tree-id41607 . -9) (undo-tree-id41608 . -9) (undo-tree-id41609 . -9) (undo-tree-id41610 . -9) (undo-tree-id41611 . -9) (undo-tree-id41612 . -9) (undo-tree-id41613 . -9) (undo-tree-id41614 . -9) (undo-tree-id41615 . -9) (undo-tree-id41616 . -32) (undo-tree-id41617 . -32) (undo-tree-id41618 . -32) (undo-tree-id41619 . -32) (undo-tree-id41620 . -32) (undo-tree-id41621 . -32) (undo-tree-id41622 . -32) (undo-tree-id41623 . -32) (undo-tree-id41624 . -32) (undo-tree-id41625 . -32) (undo-tree-id41626 . -32) (undo-tree-id41627 . -32) (undo-tree-id41628 . -32) (undo-tree-id41629 . -32) (undo-tree-id41630 . -32) (undo-tree-id41631 . -32) (undo-tree-id41632 . -32) (undo-tree-id41633 . -32) (undo-tree-id41634 . -32) (undo-tree-id41635 . -32) (undo-tree-id41636 . -32) (undo-tree-id41637 . -32) (undo-tree-id41638 . -32) (undo-tree-id41639 . -32) (undo-tree-id41640 . -32) (undo-tree-id41641 . -32) (undo-tree-id41642 . -32) (undo-tree-id41643 . -32) (undo-tree-id41644 . -32) (undo-tree-id41645 . -32) (undo-tree-id41646 . -32) (undo-tree-id41647 . -32) (undo-tree-id41648 . -32) (undo-tree-id41649 . -32) (undo-tree-id41650 . -32) (undo-tree-id41651 . -32) (undo-tree-id41652 . -32) (undo-tree-id41653 . -32) (undo-tree-id41654 . -32) (undo-tree-id41655 . -32) (undo-tree-id41656 . -32) (undo-tree-id41657 . -32) (undo-tree-id41658 . -32) (undo-tree-id41659 . -32) (undo-tree-id41660 . -32) (undo-tree-id41661 . -32) (undo-tree-id41662 . -32) (undo-tree-id41663 . -32) (undo-tree-id41664 . 41) (undo-tree-id41665 . -31) (undo-tree-id41666 . -34) (undo-tree-id41667 . -35) (undo-tree-id41668 . -35) (undo-tree-id41669 . -35) (undo-tree-id41670 . -35) (undo-tree-id41671 . -35) (undo-tree-id41672 . -35) (undo-tree-id41673 . -34) (undo-tree-id41674 . -34) (undo-tree-id41675 . -34) (undo-tree-id41676 . -34) (undo-tree-id41677 . -34) (undo-tree-id41678 . -34) (undo-tree-id41679 . -34) (undo-tree-id41680 . -34) (undo-tree-id41681 . -34) (undo-tree-id41682 . -34) (undo-tree-id41683 . -34) (undo-tree-id41684 . -34) (undo-tree-id41685 . -34) (undo-tree-id41686 . -34) (undo-tree-id41687 . -34) (undo-tree-id41688 . -34) (undo-tree-id41689 . -34) (undo-tree-id41690 . -34) (undo-tree-id41691 . -34) (undo-tree-id41692 . -34) (undo-tree-id41693 . -34) (undo-tree-id41694 . -34) (undo-tree-id41695 . -34) (undo-tree-id41696 . -34) (undo-tree-id41697 . -34) (undo-tree-id41698 . -34) (undo-tree-id41699 . -34) (undo-tree-id41700 . -34) (undo-tree-id41701 . -34) (undo-tree-id41702 . -34) (undo-tree-id41703 . -34) (undo-tree-id41704 . -34) (undo-tree-id41705 . -34) (undo-tree-id41706 . -34) (undo-tree-id41707 . -34) (undo-tree-id41708 . -34) (undo-tree-id41709 . -34) (undo-tree-id41710 . -34) (undo-tree-id41711 . -34) (undo-tree-id41712 . -34) (undo-tree-id41713 . -34) (undo-tree-id41714 . -34) (undo-tree-id41715 . -34) (undo-tree-id41716 . -34) (undo-tree-id41717 . -34) (undo-tree-id41718 . -34) (undo-tree-id41719 . -34) (undo-tree-id41720 . -34) (undo-tree-id41721 . -34) (undo-tree-id41722 . -34) (undo-tree-id41723 . -61) (undo-tree-id41724 . -61) (undo-tree-id41725 . -61) (undo-tree-id41726 . -61) (undo-tree-id41727 . -61) (undo-tree-id41728 . -61) (undo-tree-id41729 . -61) (undo-tree-id41730 . -61) (undo-tree-id41731 . -61) (undo-tree-id41732 . -61) (undo-tree-id41733 . -61) (undo-tree-id41734 . -61) (undo-tree-id41735 . -61) (undo-tree-id41736 . -61) (undo-tree-id41737 . -61) (undo-tree-id41738 . -61) (undo-tree-id41739 . -61) (undo-tree-id41740 . -61) (undo-tree-id41741 . -61) (undo-tree-id41742 . -61) (undo-tree-id41743 . -61) (undo-tree-id41744 . -61) (undo-tree-id41745 . -61) (undo-tree-id41746 . -61) (undo-tree-id41747 . -61) (undo-tree-id41748 . -61) (undo-tree-id41749 . -61) (undo-tree-id41750 . -61) (undo-tree-id41751 . -61) (undo-tree-id41752 . -61) (undo-tree-id41753 . -61) (undo-tree-id41754 . -61) (undo-tree-id41755 . -61) (undo-tree-id41756 . -61) (undo-tree-id41757 . -61) (undo-tree-id41758 . -61) (undo-tree-id41759 . -61) (undo-tree-id41760 . -61) (undo-tree-id41761 . -62) (undo-tree-id41762 . -62) (undo-tree-id41763 . -62) (undo-tree-id41764 . -62) (undo-tree-id41765 . -62) (undo-tree-id41766 . -62) (undo-tree-id41767 . -62) (undo-tree-id41768 . -62) (undo-tree-id41769 . -62) (undo-tree-id41770 . -62) (undo-tree-id41771 . -62) (undo-tree-id41772 . -62) (undo-tree-id41773 . -62) (undo-tree-id41774 . -62) (undo-tree-id41775 . -62) (undo-tree-id41776 . -62) (undo-tree-id41777 . -62) (undo-tree-id41778 . -62) (undo-tree-id41779 . -62) (undo-tree-id41780 . -62) (undo-tree-id41781 . -62) (undo-tree-id41782 . -62) (undo-tree-id41783 . -62) (undo-tree-id41784 . -62) (undo-tree-id41785 . -62) (undo-tree-id41786 . -62) (undo-tree-id41787 . -62) (undo-tree-id41788 . -62) (undo-tree-id41789 . -62) (undo-tree-id41790 . -69) 3880) ((3818 . 3887)) (25774 61450 903374 768000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4175 . 4176) (nil fontified nil 4107 . 4176) (nil fontified nil 4005 . 4107) (nil fontified nil 3907 . 4005) (nil fontified nil 3810 . 3907) (nil fontified nil 3769 . 3810) (3769 . 4176) 3768) nil (25774 61582 759525 467000) 0 nil])
([nil nil ((3879 . 3880) (#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3879) (undo-tree-id45289 . -1) (undo-tree-id45290 . -1) (undo-tree-id45291 . -1) (undo-tree-id45292 . -1) (undo-tree-id45293 . -1) (undo-tree-id45294 . -1) (undo-tree-id45295 . -1) (undo-tree-id45296 . -1) (undo-tree-id45297 . -1) (undo-tree-id45298 . -1) (undo-tree-id45299 . -1) (undo-tree-id45300 . -1) (undo-tree-id45301 . -1) (undo-tree-id45302 . -1) (undo-tree-id45303 . -1) (undo-tree-id45304 . -1) (undo-tree-id45305 . -1) (undo-tree-id45306 . -1) (undo-tree-id45307 . -1) (undo-tree-id45308 . -1) (undo-tree-id45309 . -1) (undo-tree-id45310 . -1) (undo-tree-id45311 . -1) (undo-tree-id45312 . -1) (undo-tree-id45313 . -1) (undo-tree-id45314 . -1) (undo-tree-id45315 . -1) (undo-tree-id45316 . -1) (undo-tree-id45317 . -1) (undo-tree-id45318 . -1) (undo-tree-id45319 . -1) (undo-tree-id45320 . -1) (undo-tree-id45321 . -1) (undo-tree-id45322 . -1) (undo-tree-id45323 . -1) (undo-tree-id45324 . -1) (undo-tree-id45325 . -1) (undo-tree-id45326 . -1) (undo-tree-id45327 . -1) (undo-tree-id45328 . -1) (undo-tree-id45329 . -1) (undo-tree-id45330 . -1) (undo-tree-id45331 . -1) (undo-tree-id45332 . -1) (undo-tree-id45333 . -1) (undo-tree-id45334 . -1) (undo-tree-id45335 . -1) (undo-tree-id45336 . -1) (undo-tree-id45337 . -1) (undo-tree-id45338 . -1) (undo-tree-id45339 . -1) (undo-tree-id45340 . -1) (undo-tree-id45341 . -1) (undo-tree-id45342 . -1) (undo-tree-id45343 . -1) (undo-tree-id45344 . -1) (undo-tree-id45345 . -1) (undo-tree-id45346 . -1) (undo-tree-id45347 . -1) (undo-tree-id45348 . -1) (undo-tree-id45349 . -1) (undo-tree-id45350 . -1) (undo-tree-id45351 . -1) (undo-tree-id45352 . -1) (undo-tree-id45353 . -1) (undo-tree-id45354 . -1) (undo-tree-id45355 . -1) (undo-tree-id45356 . -1) 3880) ((3879 . 3880) (#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3879)) (25774 61478 49235 342000) 0 nil])
nil
([nil nil ((4176 . 4177)) nil (25774 61582 759523 424000) 0 nil])
([nil nil ((5671 . 5672)) ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 5671) (undo-tree-id45360 . -1) (undo-tree-id45361 . -1) (undo-tree-id45362 . -1) (undo-tree-id45363 . -1) (undo-tree-id45364 . -1) (undo-tree-id45365 . -1) (undo-tree-id45366 . -1) (undo-tree-id45367 . -1) (undo-tree-id45368 . -1) (undo-tree-id45369 . -1) (undo-tree-id45370 . -1) (undo-tree-id45371 . -1) (t 25774 61455 116642 669000)) (25774 61455 67865 331000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5161 . 5162) (nil fontified nil 5132 . 5162) (nil fontified nil 5031 . 5132) (nil fontified nil 4930 . 5031) (nil fontified nil 4828 . 4930) (nil fontified nil 4786 . 4828) (nil fontified nil 4686 . 4786) (nil fontified nil 4585 . 4686) (nil fontified nil 4486 . 4585) (nil fontified nil 4384 . 4486) (nil fontified nil 4280 . 4384) (nil fontified nil 4177 . 4280) (4177 . 5162)) nil (25774 61582 759522 217000) 0 nil])
nil
([nil nil ((5131 . 5132) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5131) (undo-tree-id46984 . -1) (5030 . 5031) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5030) (undo-tree-id46985 . -1) (4929 . 4930) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4929) (undo-tree-id46986 . -1) (4827 . 4828) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4827) (undo-tree-id46987 . -1) (undo-tree-id46988 . -1) (undo-tree-id46989 . -1) (undo-tree-id46990 . -1) (undo-tree-id46991 . -1) (undo-tree-id46992 . -1) (undo-tree-id46993 . -1) (undo-tree-id46994 . -1) (undo-tree-id46995 . -1) (undo-tree-id46996 . -1) (undo-tree-id46997 . -1) (undo-tree-id46998 . -1) (undo-tree-id46999 . -1) (undo-tree-id47000 . -1) (undo-tree-id47001 . -1) (undo-tree-id47002 . -1) (undo-tree-id47003 . -1) (4785 . 4786) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4785) (undo-tree-id47004 . -1) (4685 . 4686) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4685) (undo-tree-id47005 . -1) (4584 . 4585) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4584) (undo-tree-id47006 . -1) (4485 . 4486) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4485) (undo-tree-id47007 . -1) (4383 . 4384) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4383) (undo-tree-id47008 . -1) (4279 . 4280) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4279) (undo-tree-id47009 . -1) (4176 . 4177) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -4176) (undo-tree-id47010 . -1) (undo-tree-id47011 . -1) (undo-tree-id47012 . -1) (undo-tree-id47013 . -1) (undo-tree-id47014 . -1) (undo-tree-id47015 . -1) (undo-tree-id47016 . -1) (undo-tree-id47017 . -1) (undo-tree-id47018 . -1) (undo-tree-id47019 . -1) (undo-tree-id47020 . -1) (undo-tree-id47021 . -1) (undo-tree-id47022 . -1) (undo-tree-id47023 . -1) (undo-tree-id47024 . -1) (undo-tree-id47025 . -1) (undo-tree-id47026 . -1) (undo-tree-id47027 . -1) (undo-tree-id47028 . -1) (undo-tree-id47029 . -1) (undo-tree-id47030 . -1) (undo-tree-id47031 . -1) (undo-tree-id47032 . -1) (undo-tree-id47033 . -1) (undo-tree-id47034 . -1) (undo-tree-id47035 . -1) (undo-tree-id47036 . -1) (undo-tree-id47037 . -1) (undo-tree-id47038 . -1) (undo-tree-id47039 . -1) (undo-tree-id47040 . -1) (undo-tree-id47041 . -1) (undo-tree-id47042 . -1) (undo-tree-id47043 . -1) (undo-tree-id47044 . -1) (undo-tree-id47045 . -1) (undo-tree-id47046 . -1) (undo-tree-id47047 . -1) (undo-tree-id47048 . -1) (undo-tree-id47049 . -1) (undo-tree-id47050 . -1) (4106 . 4107) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4106) (undo-tree-id47051 . -1) (4004 . 4005) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4004) (undo-tree-id47052 . -1) (3906 . 3907) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3906) (undo-tree-id47053 . -1) 3810) nil (25774 61582 759514 708000) 0 nil])
([nil nil ((3810 . 3812)) nil (25774 61582 759465 957000) 0 nil])
([nil nil ((3810 . 5166) (#("- As we will see in the next section, we can have an architecture entirely based on attention, without the recurrent parts of an RNN. This attention-based architecture is known as transformer, and we will discuss it in more detail later. In fact, transformers can appear a bit complicated at first glance. So, before we discuss transformers in the next section, let us dive into the self-attention mechanism used in transformers. In fact, as we will see, this self-attention mechanism is just a different flavor of the attention mechanism that we discussed in the previous section. We can think of the previously discussed attention mechanism as an operation that connects two different modules, that is, the encoder and decoder of the RNN. As we will see, self-attention focuses only on the input and captures only dependencies between the input elements. without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters.
- In the previous section, we saw that attention mechanisms can help RNNs with remembering context when working with long sequences." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 65 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 65 66 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 66 167 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 167 168 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 168 236 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 236 237 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 237 238 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 238 340 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 340 341 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 341 369 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 369 370 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 370 444 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 444 445 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 445 546 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 546 547 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 547 645 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 645 646 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 646 738 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 738 746 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 746 747 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 747 846 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 846 847 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 847 888 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 888 889 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 889 990 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 990 991 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 991 1091 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1091 1092 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1092 1192 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1192 1193 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1193 1222 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1222 1223 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1223 1224 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1224 1225 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil composition (0 1 [8226])) 1225 1226 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1226 1322 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1322 1323 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1323 1356 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 3810) (undo-tree-id46001 . 130) (undo-tree-id46002 . -1356) (undo-tree-id46003 . -1225) (undo-tree-id46004 . -1356) (undo-tree-id46005 . -1356) (undo-tree-id46006 . -1356) (undo-tree-id46007 . -1356) (undo-tree-id46008 . -1356) (undo-tree-id46009 . -1356) (undo-tree-id46010 . -1356) (undo-tree-id46011 . -1356) (undo-tree-id46012 . -1356) (undo-tree-id46013 . -1356) (undo-tree-id46014 . -1356) (undo-tree-id46015 . -1356) (undo-tree-id46016 . -1356) (undo-tree-id46017 . -1356) (undo-tree-id46018 . -1356) (undo-tree-id46019 . -1356) (undo-tree-id46020 . -1356) (undo-tree-id46021 . -1356) (undo-tree-id46022 . -1356) (undo-tree-id46023 . -1356) (undo-tree-id46024 . -1356) (undo-tree-id46025 . -1356) (undo-tree-id46026 . -1356) (undo-tree-id46027 . -1356) (undo-tree-id46028 . -1356) (undo-tree-id46029 . -1356) (undo-tree-id46030 . -1356) (undo-tree-id46031 . -1356) (undo-tree-id46032 . -1356) (undo-tree-id46033 . -1356) (undo-tree-id46034 . -1356) (undo-tree-id46035 . -1356) (undo-tree-id46036 . -1356) (undo-tree-id46037 . -1356) (undo-tree-id46038 . -1356) (undo-tree-id46039 . -1356) (undo-tree-id46040 . -1356) (undo-tree-id46041 . -1356) (undo-tree-id46042 . -1356) (undo-tree-id46043 . -1356) (undo-tree-id46044 . -1356) (undo-tree-id46045 . -1356) (undo-tree-id46046 . -1356) (undo-tree-id46047 . -1356) (undo-tree-id46048 . -1356) (undo-tree-id46049 . -1356) (undo-tree-id46050 . -1356) (undo-tree-id46051 . -1356) (undo-tree-id46052 . -1356) (undo-tree-id46053 . -1356) (undo-tree-id46054 . -1356) (undo-tree-id46055 . -1356) (undo-tree-id46056 . -1356) (undo-tree-id46057 . -1356) (undo-tree-id46058 . -1356) (undo-tree-id46059 . -1356) (undo-tree-id46060 . -1356) (undo-tree-id46061 . -1356) (undo-tree-id46062 . -1356) (undo-tree-id46063 . -1356) (undo-tree-id46064 . -1356) (undo-tree-id46065 . -1356) (undo-tree-id46066 . -1356) (undo-tree-id46067 . -1356) (undo-tree-id46068 . -1356) (undo-tree-id46069 . -1356) (undo-tree-id46070 . -1356) (undo-tree-id46071 . -1356) (undo-tree-id46072 . -1356) (undo-tree-id46073 . -1356) (undo-tree-id46074 . -1356) (undo-tree-id46075 . -1356) (undo-tree-id46076 . -1356) (undo-tree-id46077 . -1356) (undo-tree-id46078 . -1356) (undo-tree-id46079 . -1356) (undo-tree-id46080 . -1356) (undo-tree-id46081 . -1356) (undo-tree-id46082 . -1356) (undo-tree-id46083 . -1356) (undo-tree-id46084 . -1356) (undo-tree-id46085 . -1356) (undo-tree-id46086 . -1356) (undo-tree-id46087 . -1356) (undo-tree-id46088 . -1356) (undo-tree-id46089 . -1356) (undo-tree-id46090 . -1356) (undo-tree-id46091 . -1356) (undo-tree-id46092 . -1356) (undo-tree-id46093 . -1356) (undo-tree-id46094 . -1356) (undo-tree-id46095 . -1356) (undo-tree-id46096 . -1356) (undo-tree-id46097 . -1356) (undo-tree-id46098 . -1356) (undo-tree-id46099 . -1356) (undo-tree-id46100 . -1356) (undo-tree-id46101 . -1356) (undo-tree-id46102 . -1356) (undo-tree-id46103 . -1356) (undo-tree-id46104 . -1356) (undo-tree-id46105 . -1356) (undo-tree-id46106 . -1356) (undo-tree-id46107 . -1356) (undo-tree-id46108 . -1356) (undo-tree-id46109 . -1356) (undo-tree-id46110 . -1356) (undo-tree-id46111 . -1356) (undo-tree-id46112 . -1356) (undo-tree-id46113 . -1356) (undo-tree-id46114 . -1356) (undo-tree-id46115 . -1356) (undo-tree-id46116 . -1356) (undo-tree-id46117 . -1356) (undo-tree-id46118 . -1356) (undo-tree-id46119 . -1356) (undo-tree-id46120 . -1356) (undo-tree-id46121 . -1356) (undo-tree-id46122 . -1356) (undo-tree-id46123 . -1356) (undo-tree-id46124 . -1356) (undo-tree-id46125 . -1356) (undo-tree-id46126 . -1356) (undo-tree-id46127 . -1356) (undo-tree-id46128 . -1356) (undo-tree-id46129 . -1356) (undo-tree-id46130 . -1356) (undo-tree-id46131 . -1356) (undo-tree-id46132 . -1356) (undo-tree-id46133 . -1356) (undo-tree-id46134 . -1356) (undo-tree-id46135 . -1356) (undo-tree-id46136 . -1356) (undo-tree-id46137 . -1356) (undo-tree-id46138 . -1356) (undo-tree-id46139 . -1356) (undo-tree-id46140 . -1356) (undo-tree-id46141 . -1356) (undo-tree-id46142 . -1356) (undo-tree-id46143 . -1356) (undo-tree-id46144 . -1356) (undo-tree-id46145 . -1356) (undo-tree-id46146 . -1356) (undo-tree-id46147 . -1356) (undo-tree-id46148 . -1356) (undo-tree-id46149 . -1356) (undo-tree-id46150 . -1356) (undo-tree-id46151 . -1356) (undo-tree-id46152 . -1356) (undo-tree-id46153 . -1356) (undo-tree-id46154 . -1356) (undo-tree-id46155 . -1356) (undo-tree-id46156 . -1356) (undo-tree-id46157 . -1356) (undo-tree-id46158 . -1356) (undo-tree-id46159 . -1356) (undo-tree-id46160 . -1356) (undo-tree-id46161 . -1356) (undo-tree-id46162 . -1356) (undo-tree-id46163 . -1356) (undo-tree-id46164 . -1356) (undo-tree-id46165 . -1356) (undo-tree-id46166 . -1356) (undo-tree-id46167 . -1356) (undo-tree-id46168 . -1356) (undo-tree-id46169 . -1356) (undo-tree-id46170 . -1356) (undo-tree-id46171 . -1356) (undo-tree-id46172 . -1356) (undo-tree-id46173 . -1356) (undo-tree-id46174 . -1356) (undo-tree-id46175 . -1356) (undo-tree-id46176 . -1356) (undo-tree-id46177 . -1356) (undo-tree-id46178 . -1356) (undo-tree-id46179 . -1356) (undo-tree-id46180 . -1356) (undo-tree-id46181 . -1356) (undo-tree-id46182 . -1356) (undo-tree-id46183 . -1356) (undo-tree-id46184 . -1356) (undo-tree-id46185 . -1356) (undo-tree-id46186 . -1356) (undo-tree-id46187 . -1356) (undo-tree-id46188 . -1356) (undo-tree-id46189 . -1356) (undo-tree-id46190 . -1356) (undo-tree-id46191 . -1356) (undo-tree-id46192 . -1356) (undo-tree-id46193 . -1356) (undo-tree-id46194 . -1356) (undo-tree-id46195 . -1356) (undo-tree-id46196 . -1356) (undo-tree-id46197 . -1356) (undo-tree-id46198 . -1356) (undo-tree-id46199 . -1356) (undo-tree-id46200 . -1356) (undo-tree-id46201 . -1356) (undo-tree-id46202 . -1356) (undo-tree-id46203 . -1356) (undo-tree-id46204 . -1356) (undo-tree-id46205 . -1356) (undo-tree-id46206 . -1356) (undo-tree-id46207 . -1356) (undo-tree-id46208 . -1356) (undo-tree-id46209 . -1356) (undo-tree-id46210 . -1356) (undo-tree-id46211 . -1356) (undo-tree-id46212 . -1356) (undo-tree-id46213 . -1356) (undo-tree-id46214 . -1356) (undo-tree-id46215 . -1356) (undo-tree-id46216 . -1356) (undo-tree-id46217 . -1356) (undo-tree-id46218 . -1356) (undo-tree-id46219 . -1356) (undo-tree-id46220 . -1356) (undo-tree-id46221 . -1356) (undo-tree-id46222 . -1356) (undo-tree-id46223 . -1356) (undo-tree-id46224 . -1356) (undo-tree-id46225 . -1356) (undo-tree-id46226 . -1322) (undo-tree-id46227 . -1322) (undo-tree-id46228 . -1322) (undo-tree-id46229 . -1322) (undo-tree-id46230 . -1322) (undo-tree-id46231 . -1322) (undo-tree-id46232 . -1322) (undo-tree-id46233 . -1322) (undo-tree-id46234 . -1322) (undo-tree-id46235 . -1322) (undo-tree-id46236 . -1322) (undo-tree-id46237 . -1322) (undo-tree-id46238 . -1322) (undo-tree-id46239 . -1322) (undo-tree-id46240 . -1322) (undo-tree-id46241 . -1322) (undo-tree-id46242 . -1322) (undo-tree-id46243 . -1322) (undo-tree-id46244 . -1322) (undo-tree-id46245 . -1322) (undo-tree-id46246 . -1322) (undo-tree-id46247 . -1322) (undo-tree-id46248 . -1356) (undo-tree-id46249 . -1356) (undo-tree-id46250 . -1356) (undo-tree-id46251 . -1356) (undo-tree-id46252 . -1356) (undo-tree-id46253 . -1356) (undo-tree-id46254 . -1356) (undo-tree-id46255 . -1356) (undo-tree-id46256 . -1356) (undo-tree-id46257 . -1356) (undo-tree-id46258 . -1356) (undo-tree-id46259 . -1356) (undo-tree-id46260 . -1356) (undo-tree-id46261 . -1356) (undo-tree-id46262 . -1356) (undo-tree-id46263 . -1356) (undo-tree-id46264 . -1356) (undo-tree-id46265 . -1356) (undo-tree-id46266 . -1356) (undo-tree-id46267 . -1356) (undo-tree-id46268 . -1356) (undo-tree-id46269 . -1356) (undo-tree-id46270 . -1356) (undo-tree-id46271 . -1356) (undo-tree-id46272 . -1356) (undo-tree-id46273 . -1356) (undo-tree-id46274 . -1356) (undo-tree-id46275 . -1356) (undo-tree-id46276 . -1356) (undo-tree-id46277 . -1356) (undo-tree-id46278 . -1356) (undo-tree-id46279 . -1356) (undo-tree-id46280 . -1356) (undo-tree-id46281 . -1356) (undo-tree-id46282 . -1356) (undo-tree-id46283 . -1356) (undo-tree-id46284 . -1356) (undo-tree-id46285 . -1356) (undo-tree-id46286 . -1356) (undo-tree-id46287 . -1356) (undo-tree-id46288 . -1356) (undo-tree-id46289 . -1356) (undo-tree-id46290 . -1356) (undo-tree-id46291 . -1356) (undo-tree-id46292 . -1356) (undo-tree-id46293 . -1356) (undo-tree-id46294 . -1356) (undo-tree-id46295 . -1356) (undo-tree-id46296 . -1356) (undo-tree-id46297 . -1356) (undo-tree-id46298 . -1356) (undo-tree-id46299 . -1356) (undo-tree-id46300 . -1356) (undo-tree-id46301 . -1356) (undo-tree-id46302 . -1356) (undo-tree-id46303 . -1356) (undo-tree-id46304 . -1356) (undo-tree-id46305 . -1356) (undo-tree-id46306 . -1356) (undo-tree-id46307 . -1356) (undo-tree-id46308 . -1356) (undo-tree-id46309 . -1356) (undo-tree-id46310 . -1356) (undo-tree-id46311 . -1356) (undo-tree-id46312 . -1356) (undo-tree-id46313 . -1356) (undo-tree-id46314 . -1356) (undo-tree-id46315 . -1356) (undo-tree-id46316 . -1356) (undo-tree-id46317 . -1356) (undo-tree-id46318 . -1356) (undo-tree-id46319 . -1356) (undo-tree-id46320 . -1356) (undo-tree-id46321 . -1356) (undo-tree-id46322 . -1356) (undo-tree-id46323 . -1356) (undo-tree-id46324 . -1356) (undo-tree-id46325 . -1356) (undo-tree-id46326 . -1356) (undo-tree-id46327 . -1356) (undo-tree-id46328 . -1356) (undo-tree-id46329 . -1356) (undo-tree-id46330 . -1356) (undo-tree-id46331 . -1356) (undo-tree-id46332 . -1356) (undo-tree-id46333 . -1356) (undo-tree-id46334 . -1356) (undo-tree-id46335 . -1356) (undo-tree-id46336 . -1356) (undo-tree-id46337 . -1356) (undo-tree-id46338 . -1356) (undo-tree-id46339 . -1356) (undo-tree-id46340 . -1356) (undo-tree-id46341 . -1356) (undo-tree-id46342 . -1356) (undo-tree-id46343 . -1356) (undo-tree-id46344 . -1356) (undo-tree-id46345 . -1356) (undo-tree-id46346 . -1356) (undo-tree-id46347 . -1356) (undo-tree-id46348 . -1356) (undo-tree-id46349 . -1356) (undo-tree-id46350 . -1356) (undo-tree-id46351 . -1356) (undo-tree-id46352 . -1356) (undo-tree-id46353 . -1356) (undo-tree-id46354 . -1356) (undo-tree-id46355 . -1356) (undo-tree-id46356 . -1356) (undo-tree-id46357 . -1356) (undo-tree-id46358 . -1356) (undo-tree-id46359 . -1356) (undo-tree-id46360 . -1356) (undo-tree-id46361 . -1356) (undo-tree-id46362 . -1356) (undo-tree-id46363 . -1356) (undo-tree-id46364 . -1356) (undo-tree-id46365 . -1356) (undo-tree-id46366 . -1356) (undo-tree-id46367 . -1356) (undo-tree-id46368 . -1356) (undo-tree-id46369 . -1356) (undo-tree-id46370 . -1356) (undo-tree-id46371 . -1356) (undo-tree-id46372 . -1356) (undo-tree-id46373 . -1356) (undo-tree-id46374 . -1356) (undo-tree-id46375 . -1356) (undo-tree-id46376 . -1356) (undo-tree-id46377 . -1356) (undo-tree-id46378 . -1356) (undo-tree-id46379 . -1356) (undo-tree-id46380 . -1356) (undo-tree-id46381 . -1356) (undo-tree-id46382 . -1356) (undo-tree-id46383 . -1356) (undo-tree-id46384 . -1356) (undo-tree-id46385 . -1356) (undo-tree-id46386 . -1356) (undo-tree-id46387 . -1356) (undo-tree-id46388 . -1356) (undo-tree-id46389 . -1356) (undo-tree-id46390 . -1356) (undo-tree-id46391 . -1356) (undo-tree-id46392 . -1356) (undo-tree-id46393 . -1356) (undo-tree-id46394 . -1356) (undo-tree-id46395 . -1356) (undo-tree-id46396 . -1356) (undo-tree-id46397 . -1356) (undo-tree-id46398 . -1356) (undo-tree-id46399 . -1356) (undo-tree-id46400 . -1356) (undo-tree-id46401 . -1356) (undo-tree-id46402 . -1356) (undo-tree-id46403 . -1356) (undo-tree-id46404 . -1356) (undo-tree-id46405 . -1356) (undo-tree-id46406 . -1356) (undo-tree-id46407 . -1356) (undo-tree-id46408 . -1356) (undo-tree-id46409 . -1356) (undo-tree-id46410 . -1356) (undo-tree-id46411 . -1356) (undo-tree-id46412 . -1356) (undo-tree-id46413 . -1356) (undo-tree-id46414 . -1356) (undo-tree-id46415 . -1356) (undo-tree-id46416 . -1356) (undo-tree-id46417 . -1356) (undo-tree-id46418 . -1356) (undo-tree-id46419 . -1356) (undo-tree-id46420 . -1356) (undo-tree-id46421 . -1356) (undo-tree-id46422 . -1356) (undo-tree-id46423 . -1356) (undo-tree-id46424 . -1356) (undo-tree-id46425 . -1225) (undo-tree-id46426 . -1225) (undo-tree-id46427 . -1225) (undo-tree-id46428 . -1225) (undo-tree-id46429 . -1225) (undo-tree-id46430 . -1225) (undo-tree-id46431 . -1225) (undo-tree-id46432 . -1225) (undo-tree-id46433 . -1225) (undo-tree-id46434 . -1225) (undo-tree-id46435 . -1225) (undo-tree-id46436 . -1226) (undo-tree-id46437 . -1226) (undo-tree-id46438 . -1226) (undo-tree-id46439 . -1226) (undo-tree-id46440 . -1226) (undo-tree-id46441 . -1226) (undo-tree-id46442 . -1226) (undo-tree-id46443 . -1226) (undo-tree-id46444 . -1226) (undo-tree-id46445 . -1226) (undo-tree-id46446 . -1226) (undo-tree-id46447 . -1226) (undo-tree-id46448 . -1226) (undo-tree-id46449 . -1226) (undo-tree-id46450 . -1226) (undo-tree-id46451 . -1226) (undo-tree-id46452 . -1226) (undo-tree-id46453 . -1225) (undo-tree-id46454 . -1225) (undo-tree-id46455 . -1225) (undo-tree-id46456 . -1225) (undo-tree-id46457 . -1225) (undo-tree-id46458 . -1225) (undo-tree-id46459 . -1225) (undo-tree-id46460 . -1225) (undo-tree-id46461 . -1225) (undo-tree-id46462 . -1225) (undo-tree-id46463 . -1225) (undo-tree-id46464 . -1225) (undo-tree-id46465 . -1225) (undo-tree-id46466 . -1225) (undo-tree-id46467 . -1225) (undo-tree-id46468 . -1225) (undo-tree-id46469 . -1225) (undo-tree-id46470 . -1225) (undo-tree-id46471 . -1225) (undo-tree-id46472 . -1225) (undo-tree-id46473 . -1225) (undo-tree-id46474 . -1225) (undo-tree-id46475 . -1225) (undo-tree-id46476 . -1225) (undo-tree-id46477 . -1225) (undo-tree-id46478 . -1225) (undo-tree-id46479 . -1225) (undo-tree-id46480 . -1225) (undo-tree-id46481 . -1225) (undo-tree-id46482 . -1225) (undo-tree-id46483 . -1225) (undo-tree-id46484 . -1225) (undo-tree-id46485 . -1225) (undo-tree-id46486 . -1225) (undo-tree-id46487 . -1225) (undo-tree-id46488 . -1225) (undo-tree-id46489 . -1225) (undo-tree-id46490 . -1225) (undo-tree-id46491 . -1225) (undo-tree-id46492 . -1225) (undo-tree-id46493 . -1225) (undo-tree-id46494 . -1356) (undo-tree-id46495 . -1225) (undo-tree-id46496 . -1225) (undo-tree-id46497 . -1225) (undo-tree-id46498 . -1225) (undo-tree-id46499 . -1225) (undo-tree-id46500 . -1225) (undo-tree-id46501 . -1225) (undo-tree-id46502 . -1225) (undo-tree-id46503 . -1225) (undo-tree-id46504 . -1225) (undo-tree-id46505 . -1225) (undo-tree-id46506 . -1225) (undo-tree-id46507 . -1225) (undo-tree-id46508 . -1225) (undo-tree-id46509 . -1225) (undo-tree-id46510 . -1225) (undo-tree-id46511 . -1225) (undo-tree-id46512 . -1225) (undo-tree-id46513 . -1225) (undo-tree-id46514 . -1225) (undo-tree-id46515 . -1225) (undo-tree-id46516 . -1225) (undo-tree-id46517 . -1225) (undo-tree-id46518 . -1225) (undo-tree-id46519 . -1225) (undo-tree-id46520 . -1225) (undo-tree-id46521 . -1225) (undo-tree-id46522 . -1225) (undo-tree-id46523 . -1225) (undo-tree-id46524 . -1225) (undo-tree-id46525 . -1225) (undo-tree-id46526 . -1225) (undo-tree-id46527 . -1225) (undo-tree-id46528 . -1225) (undo-tree-id46529 . -1356) (undo-tree-id46530 . -1355) (undo-tree-id46531 . -1355) (undo-tree-id46532 . -1355) (undo-tree-id46533 . -1355) (undo-tree-id46534 . -1355) (undo-tree-id46535 . -1355) (undo-tree-id46536 . -1355) (undo-tree-id46537 . -1355) (undo-tree-id46538 . -1355) (undo-tree-id46539 . -1355) (undo-tree-id46540 . -1355) (undo-tree-id46541 . -1355) (undo-tree-id46542 . -1355) (undo-tree-id46543 . -1355) (undo-tree-id46544 . -1355) (undo-tree-id46545 . -1355) (undo-tree-id46546 . -1355) (undo-tree-id46547 . -1355) (undo-tree-id46548 . -1355) (undo-tree-id46549 . -1355) (undo-tree-id46550 . -1355) (undo-tree-id46551 . -1355) (undo-tree-id46552 . -1355) (undo-tree-id46553 . -1355) (undo-tree-id46554 . -1355) (undo-tree-id46555 . -1355) (undo-tree-id46556 . -1356) (undo-tree-id46557 . -1356) (undo-tree-id46558 . -1356) (undo-tree-id46559 . -1356) (undo-tree-id46560 . -1356) (undo-tree-id46561 . -1356) (undo-tree-id46562 . -1356) (undo-tree-id46563 . -1356) (undo-tree-id46564 . -1356) (undo-tree-id46565 . -1356) (undo-tree-id46566 . -1356) (undo-tree-id46567 . -1356) (undo-tree-id46568 . -1356) (undo-tree-id46569 . -1356) (undo-tree-id46570 . -1356) (undo-tree-id46571 . -1356) (undo-tree-id46572 . -1356) (undo-tree-id46573 . -1356) (undo-tree-id46574 . -1356) (undo-tree-id46575 . -1356) (undo-tree-id46576 . -1356) (undo-tree-id46577 . -1356) (undo-tree-id46578 . -1356) (undo-tree-id46579 . -1356) (undo-tree-id46580 . -1224) (3810 . 5034) (#(" As we will see in the next section, we can have an architecture entirely based on attention, without the recurrent parts of an RNN. This attention-based architecture is known as transformer, and we will discuss it in more detail later. In fact, transformers can appear a bit complicated at first glance. So, before we discuss transformers in the next section, let us dive into the self-attention mechanism used in transformers. In fact, as we will see, this self-attention mechanism is just a different flavor of the attention mechanism that we discussed in the previous section. We can think of the previously discussed attention mechanism as an operation that connects two different modules, that is, the encoder and decoder of the RNN. As we will see, self-attention focuses only on the input and captures only dependencies between the input elements. without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters." 0 64 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 64 65 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 65 166 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 166 167 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 167 235 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 235 236 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 236 237 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 237 339 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 339 340 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 340 368 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 368 369 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 369 443 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 443 444 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 444 545 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 545 546 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 546 644 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 644 645 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 645 737 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 737 745 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 745 746 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 746 845 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 845 846 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 846 887 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 887 888 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 888 989 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 989 990 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 990 1090 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1090 1091 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1091 1191 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1191 1192 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1192 1221 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1221 1222 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 3942) (undo-tree-id46581 . -1221) (undo-tree-id46582 . -235) (undo-tree-id46583 . -235) (undo-tree-id46584 . -235) (undo-tree-id46585 . -235) (undo-tree-id46586 . -235) (undo-tree-id46587 . -235) (undo-tree-id46588 . -235) (undo-tree-id46589 . -235) (undo-tree-id46590 . -235) (undo-tree-id46591 . -235) (undo-tree-id46592 . -235) (undo-tree-id46593 . -235) (undo-tree-id46594 . -235) (undo-tree-id46595 . -235) (undo-tree-id46596 . -235) (undo-tree-id46597 . -235) (undo-tree-id46598 . -235) (undo-tree-id46599 . -235) (undo-tree-id46600 . -235) (undo-tree-id46601 . -235) (undo-tree-id46602 . -235) (undo-tree-id46603 . -235) (undo-tree-id46604 . -235) (undo-tree-id46605 . -235) (undo-tree-id46606 . -235) (undo-tree-id46607 . -235) (undo-tree-id46608 . -235) (undo-tree-id46609 . -235) (undo-tree-id46610 . -235) (undo-tree-id46611 . -235) (undo-tree-id46612 . -235) (undo-tree-id46613 . -235) (undo-tree-id46614 . -235) (undo-tree-id46615 . -235) (undo-tree-id46616 . -235) (undo-tree-id46617 . -235) (undo-tree-id46618 . -235) (undo-tree-id46619 . -235) (undo-tree-id46620 . -235) (undo-tree-id46621 . -235) (undo-tree-id46622 . -235) (undo-tree-id46623 . -235) (undo-tree-id46624 . -235) (undo-tree-id46625 . -235) (undo-tree-id46626 . -235) (undo-tree-id46627 . -235) (undo-tree-id46628 . -235) (undo-tree-id46629 . -235) (undo-tree-id46630 . -235) (undo-tree-id46631 . -235) (undo-tree-id46632 . -235) (undo-tree-id46633 . -235) (undo-tree-id46634 . -235) (undo-tree-id46635 . -235) (undo-tree-id46636 . -235) (undo-tree-id46637 . -235) (undo-tree-id46638 . -235) (undo-tree-id46639 . -235) (undo-tree-id46640 . -235) (undo-tree-id46641 . -235) (undo-tree-id46642 . -235) (undo-tree-id46643 . -235) (undo-tree-id46644 . -235) (undo-tree-id46645 . -235) (undo-tree-id46646 . -235) (undo-tree-id46647 . -235) (undo-tree-id46648 . -235) (undo-tree-id46649 . -235) (undo-tree-id46650 . -235) (undo-tree-id46651 . -235) (undo-tree-id46652 . -235) (undo-tree-id46653 . -235) (undo-tree-id46654 . -235) (undo-tree-id46655 . -235) (undo-tree-id46656 . -235) (undo-tree-id46657 . -235) (undo-tree-id46658 . -235) (undo-tree-id46659 . -235) (undo-tree-id46660 . -235) (undo-tree-id46661 . -235) (undo-tree-id46662 . -235) (undo-tree-id46663 . -235) (undo-tree-id46664 . -235) (undo-tree-id46665 . -235) (undo-tree-id46666 . -235) (undo-tree-id46667 . -235) (undo-tree-id46668 . -235) (undo-tree-id46669 . -235) (undo-tree-id46670 . -236) (undo-tree-id46671 . -236) (undo-tree-id46672 . -236) (undo-tree-id46673 . -236) (undo-tree-id46674 . -236) (undo-tree-id46675 . -236) (undo-tree-id46676 . -236) (undo-tree-id46677 . -236) (undo-tree-id46678 . -236) (undo-tree-id46679 . -236) (undo-tree-id46680 . -236) (undo-tree-id46681 . -236) (undo-tree-id46682 . -236) (undo-tree-id46683 . -236) (undo-tree-id46684 . -236) (undo-tree-id46685 . -236) (undo-tree-id46686 . -236) (undo-tree-id46687 . -236) (undo-tree-id46688 . -236) (undo-tree-id46689 . -236) (undo-tree-id46690 . -236) (undo-tree-id46691 . -236) (undo-tree-id46692 . -235) (undo-tree-id46693 . -235) (undo-tree-id46694 . -235) (undo-tree-id46695 . -235) (undo-tree-id46696 . -235) (undo-tree-id46697 . -235) (undo-tree-id46698 . -235) (undo-tree-id46699 . -235) (undo-tree-id46700 . -235) (undo-tree-id46701 . -235) (undo-tree-id46702 . -235) (undo-tree-id46703 . -235) (undo-tree-id46704 . -235) (undo-tree-id46705 . -235) (undo-tree-id46706 . -235) (undo-tree-id46707 . -235) (undo-tree-id46708 . -235) (undo-tree-id46709 . -235) (undo-tree-id46710 . -235) (undo-tree-id46711 . -235) (undo-tree-id46712 . -235) (undo-tree-id46713 . -235) (undo-tree-id46714 . -235) (undo-tree-id46715 . -235) (undo-tree-id46716 . -235) (undo-tree-id46717 . -235) (undo-tree-id46718 . -235) (undo-tree-id46719 . -235) (undo-tree-id46720 . -235) (undo-tree-id46721 . -235) (undo-tree-id46722 . -236) (undo-tree-id46723 . -236) (undo-tree-id46724 . -236) (undo-tree-id46725 . -236) (undo-tree-id46726 . -236) (undo-tree-id46727 . -236) (undo-tree-id46728 . -236) (undo-tree-id46729 . -236) (undo-tree-id46730 . -236) (undo-tree-id46731 . -236) (undo-tree-id46732 . -236) (undo-tree-id46733 . -236) (undo-tree-id46734 . -236) (undo-tree-id46735 . -236) (undo-tree-id46736 . -236) (undo-tree-id46737 . -236) (undo-tree-id46738 . -236) (undo-tree-id46739 . -236) (undo-tree-id46740 . -236) (undo-tree-id46741 . -236) (undo-tree-id46742 . -236) (undo-tree-id46743 . -236) (undo-tree-id46744 . -236) (undo-tree-id46745 . -236) (undo-tree-id46746 . -236) (undo-tree-id46747 . -236) (undo-tree-id46748 . -236) (undo-tree-id46749 . -236) (undo-tree-id46750 . -236) (undo-tree-id46751 . -236) (undo-tree-id46752 . -236) (undo-tree-id46753 . -236) (undo-tree-id46754 . -236) (undo-tree-id46755 . -236) (undo-tree-id46756 . -236) (undo-tree-id46757 . -236) (undo-tree-id46758 . -236) (undo-tree-id46759 . -236) (undo-tree-id46760 . -236) (undo-tree-id46761 . -236) (undo-tree-id46762 . -236) (undo-tree-id46763 . -236) (undo-tree-id46764 . -1221) (undo-tree-id46765 . -1221) (undo-tree-id46766 . -1221) (undo-tree-id46767 . -1221) (undo-tree-id46768 . -1221) (undo-tree-id46769 . -1221) (undo-tree-id46770 . -1221) (undo-tree-id46771 . -236) (undo-tree-id46772 . -887) (undo-tree-id46773 . -887) (undo-tree-id46774 . -887) (undo-tree-id46775 . -887) (undo-tree-id46776 . -887) (undo-tree-id46777 . -887) (undo-tree-id46778 . -887) (undo-tree-id46779 . -887) (undo-tree-id46780 . -887) (undo-tree-id46781 . -887) (undo-tree-id46782 . -887) (undo-tree-id46783 . -887) (undo-tree-id46784 . -887) (undo-tree-id46785 . -887) (undo-tree-id46786 . -887) (undo-tree-id46787 . -887) (undo-tree-id46788 . -236) (undo-tree-id46789 . -236) (undo-tree-id46790 . -236) (undo-tree-id46791 . -236) (undo-tree-id46792 . -236) (undo-tree-id46793 . -236) (undo-tree-id46794 . -236) (undo-tree-id46795 . -236) (undo-tree-id46796 . -236) (undo-tree-id46797 . -236) (undo-tree-id46798 . -236) (undo-tree-id46799 . -236) (undo-tree-id46800 . -236) (undo-tree-id46801 . -236) (undo-tree-id46802 . -236) (undo-tree-id46803 . -236) (undo-tree-id46804 . -64) (undo-tree-id46805 . -64) (undo-tree-id46806 . -64) (undo-tree-id46807 . -64) (undo-tree-id46808 . -64) (undo-tree-id46809 . -64) (undo-tree-id46810 . -64) (undo-tree-id46811 . -64) (undo-tree-id46812 . -64) (undo-tree-id46813 . -64) (undo-tree-id46814 . -64) (undo-tree-id46815 . -64) (undo-tree-id46816 . -166) (undo-tree-id46817 . -166) (undo-tree-id46818 . -166) (undo-tree-id46819 . -166) (undo-tree-id46820 . -166) (undo-tree-id46821 . -166) (undo-tree-id46822 . -166) (undo-tree-id46823 . -166) (undo-tree-id46824 . -166) (undo-tree-id46825 . -166) (undo-tree-id46826 . -166) (undo-tree-id46827 . -166) (undo-tree-id46828 . -236) (undo-tree-id46829 . -236) (undo-tree-id46830 . -236) (undo-tree-id46831 . -236) (undo-tree-id46832 . -236) (undo-tree-id46833 . -236) (undo-tree-id46834 . -236) (undo-tree-id46835 . -236) (undo-tree-id46836 . -236) (undo-tree-id46837 . -236) (undo-tree-id46838 . -236) (undo-tree-id46839 . -236) (undo-tree-id46840 . -339) (undo-tree-id46841 . -339) (undo-tree-id46842 . -339) (undo-tree-id46843 . -339) (undo-tree-id46844 . -339) (undo-tree-id46845 . -339) (undo-tree-id46846 . -339) (undo-tree-id46847 . -339) (undo-tree-id46848 . -339) (undo-tree-id46849 . -339) (undo-tree-id46850 . -339) (undo-tree-id46851 . -339) (undo-tree-id46852 . -443) (undo-tree-id46853 . -443) (undo-tree-id46854 . -443) (undo-tree-id46855 . -443) (undo-tree-id46856 . -443) (undo-tree-id46857 . -443) (undo-tree-id46858 . -443) (undo-tree-id46859 . -443) (undo-tree-id46860 . -443) (undo-tree-id46861 . -443) (undo-tree-id46862 . -443) (undo-tree-id46863 . -443) (undo-tree-id46864 . -545) (undo-tree-id46865 . -545) (undo-tree-id46866 . -545) (undo-tree-id46867 . -545) (undo-tree-id46868 . -545) (undo-tree-id46869 . -545) (undo-tree-id46870 . -545) (undo-tree-id46871 . -545) (undo-tree-id46872 . -545) (undo-tree-id46873 . -545) (undo-tree-id46874 . -545) (undo-tree-id46875 . -545) (undo-tree-id46876 . -644) (undo-tree-id46877 . -644) (undo-tree-id46878 . -644) (undo-tree-id46879 . -644) (undo-tree-id46880 . -644) (undo-tree-id46881 . -644) (undo-tree-id46882 . -644) (undo-tree-id46883 . -644) (undo-tree-id46884 . -644) (undo-tree-id46885 . -644) (undo-tree-id46886 . -644) (undo-tree-id46887 . -644) (undo-tree-id46888 . -745) (undo-tree-id46889 . -745) (undo-tree-id46890 . -745) (undo-tree-id46891 . -745) (undo-tree-id46892 . -745) (undo-tree-id46893 . -745) (undo-tree-id46894 . -745) (undo-tree-id46895 . -745) (undo-tree-id46896 . -745) (undo-tree-id46897 . -745) (undo-tree-id46898 . -745) (undo-tree-id46899 . -745) (undo-tree-id46900 . -845) (undo-tree-id46901 . -845) (undo-tree-id46902 . -845) (undo-tree-id46903 . -845) (undo-tree-id46904 . -845) (undo-tree-id46905 . -845) (undo-tree-id46906 . -845) (undo-tree-id46907 . -845) (undo-tree-id46908 . -845) (undo-tree-id46909 . -845) (undo-tree-id46910 . -845) (undo-tree-id46911 . -845) (undo-tree-id46912 . -887) (undo-tree-id46913 . -887) (undo-tree-id46914 . -887) (undo-tree-id46915 . -887) (undo-tree-id46916 . -887) (undo-tree-id46917 . -887) (undo-tree-id46918 . -887) (undo-tree-id46919 . -887) (undo-tree-id46920 . -887) (undo-tree-id46921 . -887) (undo-tree-id46922 . -887) (undo-tree-id46923 . -887) (undo-tree-id46924 . 239) (undo-tree-id46925 . -988) (undo-tree-id46926 . -989) (undo-tree-id46927 . -989) (undo-tree-id46928 . -989) (undo-tree-id46929 . -989) (undo-tree-id46930 . -989) (undo-tree-id46931 . -989) (undo-tree-id46932 . -989) (undo-tree-id46933 . -989) (undo-tree-id46934 . -989) (undo-tree-id46935 . -989) (undo-tree-id46936 . -989) (undo-tree-id46937 . -989) (undo-tree-id46938 . -1090) (undo-tree-id46939 . -1090) (undo-tree-id46940 . -1090) (undo-tree-id46941 . -1090) (undo-tree-id46942 . -1090) (undo-tree-id46943 . -1090) (undo-tree-id46944 . -1090) (undo-tree-id46945 . -1090) (undo-tree-id46946 . -1090) (undo-tree-id46947 . -1090) (undo-tree-id46948 . -1090) (undo-tree-id46949 . -1090) (undo-tree-id46950 . -1221) (undo-tree-id46951 . -1191) (undo-tree-id46952 . -1191) (undo-tree-id46953 . -1191) (undo-tree-id46954 . -1191) (undo-tree-id46955 . -1191) (undo-tree-id46956 . -1191) (undo-tree-id46957 . -1191) (undo-tree-id46958 . -1191) (undo-tree-id46959 . -1191) (undo-tree-id46960 . -1191) (undo-tree-id46961 . -1191) (undo-tree-id46962 . -1221) (undo-tree-id46963 . -1221) (undo-tree-id46964 . -1221) (undo-tree-id46965 . -1221) (undo-tree-id46966 . -1221) (undo-tree-id46967 . -1221) (undo-tree-id46968 . -1221) (undo-tree-id46969 . -1221) (undo-tree-id46970 . -1221) (undo-tree-id46971 . -1221) (undo-tree-id46972 . -1221) (undo-tree-id46973 . -1221) (undo-tree-id46974 . -1221) (undo-tree-id46975 . -1221) (undo-tree-id46976 . -1221) (undo-tree-id46977 . -1221) (undo-tree-id46978 . -1221) (undo-tree-id46979 . -1221) (undo-tree-id46980 . -1221) (undo-tree-id46981 . -1221) (undo-tree-id46982 . -1221) (undo-tree-id46983 . -1090)) nil (25774 61582 759430 135000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -3943) (undo-tree-id45991 . -2) (undo-tree-id45992 . -2) (undo-tree-id45993 . -2) (undo-tree-id45994 . -2) (undo-tree-id45995 . -2) (undo-tree-id45996 . -2) (undo-tree-id45997 . -2) (undo-tree-id45998 . -2) (undo-tree-id45999 . -2) (undo-tree-id46000 . -2) 3945 (3942 . 3945) 3932) nil (25774 61582 758764 510000) 0 nil])
([nil nil ((3944 . 5170) (#("- This attention-based architecture is known as transformer, and we will discuss it in more detail later. In fact, transformers can appear a bit complicated at first glance. So, before we discuss transformers in the next section, let us dive into the self-attention mechanism used in transformers. In fact, as we will see, this self-attention mechanism is just a different flavor of the attention mechanism that we discussed in the previous section. We can think of the previously discussed attention mechanism as an operation that connects two different modules, that is, the encoder and decoder of the RNN. As we will see, self-attention focuses only on the input and captures only dependencies between the input elements. without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters.

- As we will see in the next section, we can have an architecture entirely based on attention, without the recurrent parts of an RNN." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 35 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 35 36 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 36 104 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 104 105 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 105 106 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 106 208 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 208 209 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 209 235 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 235 237 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 237 238 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 238 312 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 312 313 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 313 414 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 414 415 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 415 513 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 513 514 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 514 606 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 606 614 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 614 615 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 615 714 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 714 715 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 715 756 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 756 757 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 757 858 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 858 859 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 859 959 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 959 960 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 960 1060 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1060 1061 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1061 1090 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1090 1091 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1091 1092 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1092 1093 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1093 1094 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1094 1095 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1095 1158 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1158 1159 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1159 1226 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 3944) (undo-tree-id45885 . -1226) (undo-tree-id45886 . -1095) (undo-tree-id45887 . -1095) (undo-tree-id45888 . -1095) (undo-tree-id45889 . -1095) (undo-tree-id45890 . -1095) (undo-tree-id45891 . -1095) (undo-tree-id45892 . -1095) (undo-tree-id45893 . -1095) (undo-tree-id45894 . -1095) (undo-tree-id45895 . -1095) (undo-tree-id45896 . -1095) (undo-tree-id45897 . -1095) (undo-tree-id45898 . -1095) (undo-tree-id45899 . -1095) (undo-tree-id45900 . -1095) (undo-tree-id45901 . -1095) (undo-tree-id45902 . -1095) (undo-tree-id45903 . -1095) (undo-tree-id45904 . -1095) (undo-tree-id45905 . -1095) (undo-tree-id45906 . -1095) (undo-tree-id45907 . -1095) (undo-tree-id45908 . -1095) (undo-tree-id45909 . -1095) (undo-tree-id45910 . -1095) (undo-tree-id45911 . -1095) (undo-tree-id45912 . -1095) (undo-tree-id45913 . -1094) (undo-tree-id45914 . -1094) (undo-tree-id45915 . -1094) (undo-tree-id45916 . -1094) (undo-tree-id45917 . -1094) (undo-tree-id45918 . -1094) (undo-tree-id45919 . -1094) (undo-tree-id45920 . -1094) (undo-tree-id45921 . -1094) (undo-tree-id45922 . -1094) (undo-tree-id45923 . -1094) (undo-tree-id45924 . -1094) (undo-tree-id45925 . -1094) (undo-tree-id45926 . -1094) (undo-tree-id45927 . -1094) (undo-tree-id45928 . -1094) (undo-tree-id45929 . -1094) (undo-tree-id45930 . -1094) (undo-tree-id45931 . -1094) (undo-tree-id45932 . -1094) (undo-tree-id45933 . -1094) (undo-tree-id45934 . -1094) (undo-tree-id45935 . -1094) (undo-tree-id45936 . -1094) (undo-tree-id45937 . -1094) (undo-tree-id45938 . -1094) (undo-tree-id45939 . -1094) (undo-tree-id45940 . -1094) (undo-tree-id45941 . -1094) (undo-tree-id45942 . -1094) (undo-tree-id45943 . 4) (undo-tree-id45944 . -1225) (undo-tree-id45945 . -1225) (undo-tree-id45946 . -1225) (undo-tree-id45947 . -1225) (undo-tree-id45948 . -1225) (undo-tree-id45949 . -1225) (undo-tree-id45950 . -1225) (undo-tree-id45951 . -1225) (undo-tree-id45952 . -1225) (undo-tree-id45953 . -1225) (undo-tree-id45954 . -1225) (undo-tree-id45955 . -1225) (undo-tree-id45956 . -1225) (undo-tree-id45957 . -1225) (undo-tree-id45958 . -1225) (undo-tree-id45959 . -1225) (undo-tree-id45960 . -1225) (undo-tree-id45961 . -1226) (undo-tree-id45962 . -1226) (undo-tree-id45963 . -1226) (undo-tree-id45964 . -1226) (undo-tree-id45965 . -1226) (undo-tree-id45966 . -1226) (undo-tree-id45967 . -1226) (undo-tree-id45968 . -1226) (undo-tree-id45969 . -1226) (undo-tree-id45970 . -1226) (undo-tree-id45971 . -1226) (undo-tree-id45972 . -1226) (undo-tree-id45973 . -1226) (undo-tree-id45974 . -1226) (undo-tree-id45975 . -1226) (undo-tree-id45976 . -1226) (undo-tree-id45977 . -1226) (undo-tree-id45978 . -1226) (undo-tree-id45979 . -1226) (undo-tree-id45980 . -1226) (undo-tree-id45981 . -1226) (undo-tree-id45982 . -1226) (undo-tree-id45983 . -1226) (undo-tree-id45984 . -1226) (undo-tree-id45985 . -1226) (undo-tree-id45986 . -1226) (undo-tree-id45987 . -1226) (undo-tree-id45988 . -1226) (undo-tree-id45989 . -1226) (undo-tree-id45990 . -1093) (3944 . 5037) (#(" This attention-based architecture is known as transformer, and we will discuss it in more detail later. In fact, transformers can appear a bit complicated at first glance. So, before we discuss transformers in the next section, let us dive into the self-attention mechanism used in transformers. In fact, as we will see, this self-attention mechanism is just a different flavor of the attention mechanism that we discussed in the previous section. We can think of the previously discussed attention mechanism as an operation that connects two different modules, that is, the encoder and decoder of the RNN. As we will see, self-attention focuses only on the input and captures only dependencies between the input elements. without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters." 0 34 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 34 35 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 35 103 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 103 104 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 104 105 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 105 207 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 207 208 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 208 234 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 234 236 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 236 237 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 237 311 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 311 312 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 312 413 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 413 414 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 414 512 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 512 513 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 513 605 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 605 613 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 613 614 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 614 713 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 713 714 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 714 755 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 755 756 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 756 857 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 857 858 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 858 958 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 958 959 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 959 1059 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1059 1060 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1060 1089 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1089 1090 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4077)) nil (25774 61582 758752 471000) 0 nil])
([nil nil ((4079 . 5173) (#("- In fact, transformers can appear a bit complicated at first glance. So, before we discuss transformers in the next section, let us dive into the self-attention mechanism used in transformers. In fact, as we will see, this self-attention mechanism is just a different flavor of the attention mechanism that we discussed in the previous section. We can think of the previously discussed attention mechanism as an operation that connects two different modules, that is, the encoder and decoder of the RNN. As we will see, self-attention focuses only on the input and captures only dependencies between the input elements. without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters.

- This attention-based architecture is known as transformer, and we will discuss it in more detail later." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 104 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 104 105 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 105 131 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 131 133 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 133 134 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 134 208 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 208 209 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 209 261 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 261 310 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 310 311 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 311 409 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 409 410 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 410 502 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 502 510 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 510 511 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 511 610 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 610 611 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 611 652 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 652 653 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 653 754 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 754 755 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 755 855 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 855 856 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 856 956 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 956 957 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 957 986 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 986 987 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 987 988 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 988 989 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 989 990 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 990 991 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 991 1024 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1024 1025 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1025 1093 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1093 1094 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil rear-nonsticky t)) . 4079) (undo-tree-id45810 . 103) (undo-tree-id45811 . -990) (undo-tree-id45812 . -1093) (undo-tree-id45813 . -991) (undo-tree-id45814 . -991) (undo-tree-id45815 . -991) (undo-tree-id45816 . -991) (undo-tree-id45817 . -991) (undo-tree-id45818 . -991) (undo-tree-id45819 . -991) (undo-tree-id45820 . -991) (undo-tree-id45821 . -991) (undo-tree-id45822 . -991) (undo-tree-id45823 . -991) (undo-tree-id45824 . -991) (undo-tree-id45825 . -991) (undo-tree-id45826 . -991) (undo-tree-id45827 . -991) (undo-tree-id45828 . -991) (undo-tree-id45829 . -991) (undo-tree-id45830 . -990) (undo-tree-id45831 . -990) (undo-tree-id45832 . -990) (undo-tree-id45833 . -990) (undo-tree-id45834 . -990) (undo-tree-id45835 . -990) (undo-tree-id45836 . -990) (undo-tree-id45837 . -990) (undo-tree-id45838 . -990) (undo-tree-id45839 . -990) (undo-tree-id45840 . -990) (undo-tree-id45841 . -990) (undo-tree-id45842 . -990) (undo-tree-id45843 . -990) (undo-tree-id45844 . -990) (undo-tree-id45845 . -990) (undo-tree-id45846 . -990) (undo-tree-id45847 . -990) (undo-tree-id45848 . -990) (undo-tree-id45849 . -990) (undo-tree-id45850 . -990) (undo-tree-id45851 . -990) (undo-tree-id45852 . -990) (undo-tree-id45853 . -990) (undo-tree-id45854 . -990) (undo-tree-id45855 . -990) (undo-tree-id45856 . -990) (undo-tree-id45857 . -990) (undo-tree-id45858 . -990) (undo-tree-id45859 . -990) (undo-tree-id45860 . -1093) (undo-tree-id45861 . -1093) (undo-tree-id45862 . -1093) (undo-tree-id45863 . -1093) (undo-tree-id45864 . -1093) (undo-tree-id45865 . -1093) (undo-tree-id45866 . -1093) (undo-tree-id45867 . -1093) (undo-tree-id45868 . -1093) (undo-tree-id45869 . -1093) (undo-tree-id45870 . -1093) (undo-tree-id45871 . -1093) (undo-tree-id45872 . -1093) (undo-tree-id45873 . -1093) (undo-tree-id45874 . -1093) (undo-tree-id45875 . -1093) (undo-tree-id45876 . -1093) (undo-tree-id45877 . -1093) (undo-tree-id45878 . -1093) (undo-tree-id45879 . -1093) (undo-tree-id45880 . -1093) (undo-tree-id45881 . -1093) (undo-tree-id45882 . -1094) (undo-tree-id45883 . -1094) (undo-tree-id45884 . -989) (4079 . 5068) (#(" In fact, transformers can appear a bit complicated at first glance. So, before we discuss transformers in the next section, let us dive into the self-attention mechanism used in transformers. In fact, as we will see, this self-attention mechanism is just a different flavor of the attention mechanism that we discussed in the previous section. We can think of the previously discussed attention mechanism as an operation that connects two different modules, that is, the encoder and decoder of the RNN. As we will see, self-attention focuses only on the input and captures only dependencies between the input elements. without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 103 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 103 104 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 104 130 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 130 132 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 132 133 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 133 207 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 207 208 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 208 260 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 260 309 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 309 310 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 310 408 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 408 409 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 409 501 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 501 509 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 509 510 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 510 609 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 609 610 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 610 651 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 651 652 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 652 753 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 753 754 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 754 854 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 854 855 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 855 955 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 955 956 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 956 985 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 985 986 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4184)) nil (25774 61582 758678 895000) 0 nil])
([nil nil ((4186 . 5176) (#("- So, before we discuss transformers in the next section, let us dive into the self-attention mechanism used in transformers. In fact, as we will see, this self-attention mechanism is just a different flavor of the attention mechanism that we discussed in the previous section. We can think of the previously discussed attention mechanism as an operation that connects two different modules, that is, the encoder and decoder of the RNN. As we will see, self-attention focuses only on the input and captures only dependencies between the input elements. without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters.

- In fact, transformers can appear a bit complicated at first glance." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 36 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 36 37 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 37 63 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 63 65 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 65 66 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 66 140 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 140 141 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 141 193 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 193 242 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 242 243 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 243 325 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 325 341 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 341 342 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 342 434 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 434 442 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 442 443 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 443 542 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 542 543 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 543 584 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 584 585 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 585 686 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 686 687 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 687 787 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 787 788 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 788 888 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 888 889 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 889 918 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 918 919 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 919 920 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 920 921 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 921 922 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 922 923 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 923 990 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4186) (undo-tree-id45758 . 67) (undo-tree-id45759 . -922) (undo-tree-id45760 . -989) (undo-tree-id45761 . -923) (undo-tree-id45762 . -922) (undo-tree-id45763 . -922) (undo-tree-id45764 . -922) (undo-tree-id45765 . -922) (undo-tree-id45766 . -922) (undo-tree-id45767 . -922) (undo-tree-id45768 . -922) (undo-tree-id45769 . -922) (undo-tree-id45770 . -922) (undo-tree-id45771 . -922) (undo-tree-id45772 . -922) (undo-tree-id45773 . -922) (undo-tree-id45774 . -922) (undo-tree-id45775 . -922) (undo-tree-id45776 . -922) (undo-tree-id45777 . -922) (undo-tree-id45778 . -922) (undo-tree-id45779 . -922) (undo-tree-id45780 . -989) (undo-tree-id45781 . -989) (undo-tree-id45782 . -989) (undo-tree-id45783 . -989) (undo-tree-id45784 . -989) (undo-tree-id45785 . -989) (undo-tree-id45786 . -989) (undo-tree-id45787 . -989) (undo-tree-id45788 . -989) (undo-tree-id45789 . -989) (undo-tree-id45790 . -989) (undo-tree-id45791 . -989) (undo-tree-id45792 . -989) (undo-tree-id45793 . -989) (undo-tree-id45794 . -989) (undo-tree-id45795 . -989) (undo-tree-id45796 . -989) (undo-tree-id45797 . -989) (undo-tree-id45798 . -989) (undo-tree-id45799 . -989) (undo-tree-id45800 . -989) (undo-tree-id45801 . -989) (undo-tree-id45802 . -989) (undo-tree-id45803 . -989) (undo-tree-id45804 . -989) (undo-tree-id45805 . -989) (undo-tree-id45806 . -989) (undo-tree-id45807 . -990) (undo-tree-id45808 . -990) (undo-tree-id45809 . -921) (4186 . 5107) (#(" So, before we discuss transformers in the next section, let us dive into the self-attention mechanism used in transformers. In fact, as we will see, this self-attention mechanism is just a different flavor of the attention mechanism that we discussed in the previous section. We can think of the previously discussed attention mechanism as an operation that connects two different modules, that is, the encoder and decoder of the RNN. As we will see, self-attention focuses only on the input and captures only dependencies between the input elements. without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters." 0 35 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 35 36 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 36 62 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 62 64 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 64 65 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 65 139 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 139 140 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 140 192 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 192 241 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 241 242 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 242 324 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 324 340 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 340 341 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 341 433 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 433 441 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 441 442 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 442 541 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 541 542 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 542 583 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 583 584 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 584 685 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 685 686 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 686 786 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 786 787 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 787 887 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 887 888 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 888 917 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 917 918 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4255)) nil (25774 61582 758627 160000) 0 nil])
([nil nil ((4257 . 5179) (#("- In fact, as we will see, this self-attention mechanism is just a different flavor of the attention mechanism that we discussed in the previous section. We can think of the previously discussed attention mechanism as an operation that connects two different modules, that is, the encoder and decoder of the RNN. As we will see, self-attention focuses only on the input and captures only dependencies between the input elements. without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters.

- So, before we discuss transformers in the next section, let us dive into the self-attention mechanism used in transformers." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 16 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 16 17 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 17 69 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 69 118 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 118 119 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 119 201 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 201 217 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 217 218 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 218 305 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 305 310 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 310 318 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 318 319 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 319 418 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 418 419 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 419 460 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 460 461 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 461 562 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 562 563 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 563 663 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 663 664 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 664 764 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 764 765 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 765 794 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 794 795 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 795 796 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 796 797 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 797 798 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 798 799 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 799 833 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 833 834 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 834 860 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 860 862 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 862 863 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 863 922 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4257) (undo-tree-id45706 . 123) (undo-tree-id45707 . -798) (undo-tree-id45708 . -921) (undo-tree-id45709 . -799) (undo-tree-id45710 . -798) (undo-tree-id45711 . -798) (undo-tree-id45712 . -798) (undo-tree-id45713 . -798) (undo-tree-id45714 . -798) (undo-tree-id45715 . -798) (undo-tree-id45716 . -798) (undo-tree-id45717 . -798) (undo-tree-id45718 . -798) (undo-tree-id45719 . -798) (undo-tree-id45720 . -798) (undo-tree-id45721 . -798) (undo-tree-id45722 . -798) (undo-tree-id45723 . -798) (undo-tree-id45724 . -798) (undo-tree-id45725 . -798) (undo-tree-id45726 . -798) (undo-tree-id45727 . -798) (undo-tree-id45728 . -921) (undo-tree-id45729 . -921) (undo-tree-id45730 . -921) (undo-tree-id45731 . -921) (undo-tree-id45732 . -921) (undo-tree-id45733 . -921) (undo-tree-id45734 . -921) (undo-tree-id45735 . -921) (undo-tree-id45736 . -921) (undo-tree-id45737 . -921) (undo-tree-id45738 . -921) (undo-tree-id45739 . -921) (undo-tree-id45740 . -921) (undo-tree-id45741 . -921) (undo-tree-id45742 . -921) (undo-tree-id45743 . -921) (undo-tree-id45744 . -921) (undo-tree-id45745 . -921) (undo-tree-id45746 . -921) (undo-tree-id45747 . -921) (undo-tree-id45748 . -921) (undo-tree-id45749 . -921) (undo-tree-id45750 . -921) (undo-tree-id45751 . -921) (undo-tree-id45752 . -921) (undo-tree-id45753 . -921) (undo-tree-id45754 . -921) (undo-tree-id45755 . -922) (undo-tree-id45756 . -922) (undo-tree-id45757 . -797) (4257 . 5054) (#(" In fact, as we will see, this self-attention mechanism is just a different flavor of the attention mechanism that we discussed in the previous section. We can think of the previously discussed attention mechanism as an operation that connects two different modules, that is, the encoder and decoder of the RNN. As we will see, self-attention focuses only on the input and captures only dependencies between the input elements. without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters." 0 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 15 16 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 16 68 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 68 117 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 117 118 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 118 200 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 200 216 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 216 217 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 217 304 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 304 309 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 309 317 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 317 318 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 318 417 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 417 418 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 418 459 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 459 460 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 460 561 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 561 562 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 562 662 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 662 663 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 663 763 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 763 764 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 764 793 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 793 794 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4382)) nil (25774 61582 758581 849000) 0 nil])
([nil nil ((4384 . 5182) (#("- We can think of the previously discussed attention mechanism as an operation that connects two different modules, that is, the encoder and decoder of the RNN. As we will see, self-attention focuses only on the input and captures only dependencies between the input elements. without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters.

- In fact, as we will see, this self-attention mechanism is just a different flavor of the attention mechanism that we discussed in the previous section." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 49 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 49 65 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 65 66 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 66 153 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 153 158 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 158 166 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 166 167 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 167 221 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 221 266 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 266 267 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 267 308 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 308 309 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 309 410 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 410 411 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 411 511 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 511 512 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 512 612 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 612 613 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 613 642 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 642 643 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 643 644 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 644 645 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 645 646 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 646 647 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 647 661 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 661 662 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 662 714 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 714 763 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 763 764 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 764 798 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4384) (undo-tree-id45664 . 151) (undo-tree-id45665 . -646) (undo-tree-id45666 . -797) (undo-tree-id45667 . -647) (undo-tree-id45668 . -646) (undo-tree-id45669 . -646) (undo-tree-id45670 . -646) (undo-tree-id45671 . -646) (undo-tree-id45672 . -646) (undo-tree-id45673 . -646) (undo-tree-id45674 . -646) (undo-tree-id45675 . -646) (undo-tree-id45676 . -646) (undo-tree-id45677 . -646) (undo-tree-id45678 . -646) (undo-tree-id45679 . -646) (undo-tree-id45680 . -646) (undo-tree-id45681 . -646) (undo-tree-id45682 . -646) (undo-tree-id45683 . -646) (undo-tree-id45684 . -646) (undo-tree-id45685 . -646) (undo-tree-id45686 . -797) (undo-tree-id45687 . -797) (undo-tree-id45688 . -797) (undo-tree-id45689 . -797) (undo-tree-id45690 . -797) (undo-tree-id45691 . -797) (undo-tree-id45692 . -797) (undo-tree-id45693 . -797) (undo-tree-id45694 . -797) (undo-tree-id45695 . -797) (undo-tree-id45696 . -797) (undo-tree-id45697 . -797) (undo-tree-id45698 . -797) (undo-tree-id45699 . -797) (undo-tree-id45700 . -797) (undo-tree-id45701 . -797) (undo-tree-id45702 . -797) (undo-tree-id45703 . -798) (undo-tree-id45704 . -798) (undo-tree-id45705 . -645) (4384 . 5029) (#(" We can think of the previously discussed attention mechanism as an operation that connects two different modules, that is, the encoder and decoder of the RNN. As we will see, self-attention focuses only on the input and captures only dependencies between the input elements. without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters." 0 48 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 48 64 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 64 65 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 65 152 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 152 157 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 157 165 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 165 166 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 166 220 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 220 265 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 265 266 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 266 307 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 307 308 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 308 409 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 409 410 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 410 510 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 510 511 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 511 611 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 611 612 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 612 641 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 641 642 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4537)) nil (25774 61582 758544 284000) 0 nil])
([nil nil ((4539 . 5185) (#("- As we will see, self-attention focuses only on the input and captures only dependencies between the input elements. without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters.

- We can think of the previously discussed attention mechanism as an operation that connects two different modules, that is, the encoder and decoder of the RNN." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 7 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 7 8 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 8 62 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 62 107 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 107 108 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 108 149 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 149 150 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 150 186 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 186 251 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 251 252 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 252 352 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 352 353 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 353 453 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 453 454 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 454 483 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 483 484 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 484 485 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 485 486 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 486 487 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 487 488 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 488 535 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 535 551 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 551 552 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 552 639 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 639 644 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 644 646 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4539) (undo-tree-id45615 . 158) (undo-tree-id45616 . -487) (undo-tree-id45617 . -645) (undo-tree-id45618 . -488) (undo-tree-id45619 . -487) (undo-tree-id45620 . -487) (undo-tree-id45621 . -487) (undo-tree-id45622 . -487) (undo-tree-id45623 . -487) (undo-tree-id45624 . -487) (undo-tree-id45625 . -487) (undo-tree-id45626 . -487) (undo-tree-id45627 . -487) (undo-tree-id45628 . -487) (undo-tree-id45629 . -487) (undo-tree-id45630 . -487) (undo-tree-id45631 . -487) (undo-tree-id45632 . -487) (undo-tree-id45633 . -487) (undo-tree-id45634 . -487) (undo-tree-id45635 . -487) (undo-tree-id45636 . -487) (undo-tree-id45637 . 4) (undo-tree-id45638 . -645) (undo-tree-id45639 . -645) (undo-tree-id45640 . -645) (undo-tree-id45641 . -645) (undo-tree-id45642 . -645) (undo-tree-id45643 . -645) (undo-tree-id45644 . -645) (undo-tree-id45645 . -645) (undo-tree-id45646 . -645) (undo-tree-id45647 . -645) (undo-tree-id45648 . -645) (undo-tree-id45649 . -645) (undo-tree-id45650 . -645) (undo-tree-id45651 . -645) (undo-tree-id45652 . -645) (undo-tree-id45653 . -645) (undo-tree-id45654 . -645) (undo-tree-id45655 . -645) (undo-tree-id45656 . -645) (undo-tree-id45657 . -645) (undo-tree-id45658 . -645) (undo-tree-id45659 . -645) (undo-tree-id45660 . -645) (undo-tree-id45661 . -646) (undo-tree-id45662 . -646) (undo-tree-id45663 . -486) (4539 . 5025) (#(" As we will see, self-attention focuses only on the input and captures only dependencies between the input elements. without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters." 0 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 6 7 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 7 61 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 61 106 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 106 107 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 107 148 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 148 149 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 149 185 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 185 250 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 250 251 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 251 351 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 351 352 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 352 452 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 452 453 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 453 482 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 482 483 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4699)) nil (25774 61582 758512 932000) 0 nil])
([nil nil ((4701 . 5188) (#("- without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters.

- As we will see, self-attention focuses only on the input and captures only dependencies between the input elements." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 33 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 33 34 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 34 70 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 70 135 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 135 136 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 136 222 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 222 236 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 236 237 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 237 337 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 337 338 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 338 367 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 367 368 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 368 369 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 369 370 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 370 371 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 371 372 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 372 377 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 377 378 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 378 432 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 432 477 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 477 478 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 478 487 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4701) (undo-tree-id45573 . 115) (undo-tree-id45574 . -371) (undo-tree-id45575 . -486) (undo-tree-id45576 . -372) (undo-tree-id45577 . -371) (undo-tree-id45578 . -371) (undo-tree-id45579 . -371) (undo-tree-id45580 . -371) (undo-tree-id45581 . -371) (undo-tree-id45582 . -371) (undo-tree-id45583 . -371) (undo-tree-id45584 . -371) (undo-tree-id45585 . -371) (undo-tree-id45586 . -371) (undo-tree-id45587 . -371) (undo-tree-id45588 . -371) (undo-tree-id45589 . -371) (undo-tree-id45590 . -371) (undo-tree-id45591 . -371) (undo-tree-id45592 . -371) (undo-tree-id45593 . -371) (undo-tree-id45594 . -371) (undo-tree-id45595 . -486) (undo-tree-id45596 . -486) (undo-tree-id45597 . -486) (undo-tree-id45598 . -486) (undo-tree-id45599 . -486) (undo-tree-id45600 . -486) (undo-tree-id45601 . -486) (undo-tree-id45602 . -486) (undo-tree-id45603 . -486) (undo-tree-id45604 . -486) (undo-tree-id45605 . -486) (undo-tree-id45606 . -486) (undo-tree-id45607 . -486) (undo-tree-id45608 . -486) (undo-tree-id45609 . -486) (undo-tree-id45610 . -486) (undo-tree-id45611 . -486) (undo-tree-id45612 . -487) (undo-tree-id45613 . -487) (undo-tree-id45614 . -370) (4701 . 5071) (#(" without connecting two modules. In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters." 0 32 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 32 33 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 33 69 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 69 134 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 134 135 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 135 221 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 221 235 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 235 236 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 236 336 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 336 337 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 337 366 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 366 367 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4818)) nil (25774 61582 758474 187000) 0 nil])
([nil nil ((4820 . 5191) (#("- In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters.

- without connecting two modules." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 38 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 38 103 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 103 104 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 104 190 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 190 204 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 204 205 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 205 305 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 305 306 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 306 335 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 335 336 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 336 337 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 337 338 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 338 339 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 339 340 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 340 371 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4820) (undo-tree-id45527 . 31) (undo-tree-id45528 . -370) (undo-tree-id45529 . -340) (undo-tree-id45530 . -339) (undo-tree-id45531 . -339) (undo-tree-id45532 . -339) (undo-tree-id45533 . -339) (undo-tree-id45534 . -339) (undo-tree-id45535 . -339) (undo-tree-id45536 . -339) (undo-tree-id45537 . -339) (undo-tree-id45538 . -339) (undo-tree-id45539 . -339) (undo-tree-id45540 . -339) (undo-tree-id45541 . -339) (undo-tree-id45542 . -339) (undo-tree-id45543 . -339) (undo-tree-id45544 . -339) (undo-tree-id45545 . -339) (undo-tree-id45546 . -339) (undo-tree-id45547 . -339) (undo-tree-id45548 . -339) (undo-tree-id45549 . -339) (undo-tree-id45550 . -339) (undo-tree-id45551 . -339) (undo-tree-id45552 . -339) (undo-tree-id45553 . -370) (undo-tree-id45554 . -370) (undo-tree-id45555 . -370) (undo-tree-id45556 . -370) (undo-tree-id45557 . -370) (undo-tree-id45558 . -370) (undo-tree-id45559 . -370) (undo-tree-id45560 . -370) (undo-tree-id45561 . -370) (undo-tree-id45562 . -370) (undo-tree-id45563 . -370) (undo-tree-id45564 . -370) (undo-tree-id45565 . -370) (undo-tree-id45566 . -370) (undo-tree-id45567 . -370) (undo-tree-id45568 . -370) (undo-tree-id45569 . -370) (undo-tree-id45570 . -371) (undo-tree-id45571 . -371) (undo-tree-id45572 . -338) (4820 . 5158) (#(" In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input. Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 37 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 37 102 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 102 103 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 103 189 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 189 203 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 203 204 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 204 304 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 304 305 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 305 334 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 334 335 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4853)) nil (25774 61582 756552 556000) 0 nil])
([nil nil ((4855 . 5194) (#("- Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters.

- In the first subsection, we will introduce a basic form of self-attention without any learning param- eters, which is very much like a pre-processing step to the input." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 21 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 21 35 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 35 36 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 36 136 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 136 137 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 137 166 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 166 167 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 167 168 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 168 169 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 169 170 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 170 171 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 171 207 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 207 272 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 272 273 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 273 339 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4855) (undo-tree-id45373 . 168) (undo-tree-id45374 . -170) (undo-tree-id45375 . -338) (undo-tree-id45376 . -171) (undo-tree-id45377 . -170) (undo-tree-id45378 . -170) (undo-tree-id45379 . -170) (undo-tree-id45380 . -170) (undo-tree-id45381 . -170) (undo-tree-id45382 . -170) (undo-tree-id45383 . -170) (undo-tree-id45384 . -170) (undo-tree-id45385 . -170) (undo-tree-id45386 . -170) (undo-tree-id45387 . -170) (undo-tree-id45388 . -170) (undo-tree-id45389 . -170) (undo-tree-id45390 . -170) (undo-tree-id45391 . -170) (undo-tree-id45392 . -170) (undo-tree-id45393 . -170) (undo-tree-id45394 . -170) (undo-tree-id45395 . -170) (undo-tree-id45396 . -170) (undo-tree-id45397 . -170) (undo-tree-id45398 . -170) (undo-tree-id45399 . -170) (undo-tree-id45400 . -338) (undo-tree-id45401 . -338) (undo-tree-id45402 . -338) (undo-tree-id45403 . -338) (undo-tree-id45404 . -338) (undo-tree-id45405 . -338) (undo-tree-id45406 . -338) (undo-tree-id45407 . -338) (undo-tree-id45408 . -338) (undo-tree-id45409 . -338) (undo-tree-id45410 . -338) (undo-tree-id45411 . -338) (undo-tree-id45412 . -338) (undo-tree-id45413 . -338) (undo-tree-id45414 . -338) (undo-tree-id45415 . -338) (undo-tree-id45416 . -338) (undo-tree-id45417 . -338) (undo-tree-id45418 . -338) (undo-tree-id45419 . -338) (undo-tree-id45420 . -338) (undo-tree-id45421 . -338) (undo-tree-id45422 . -338) (undo-tree-id45423 . -338) (undo-tree-id45424 . -338) (undo-tree-id45425 . -338) (undo-tree-id45426 . -338) (undo-tree-id45427 . -338) (undo-tree-id45428 . -338) (undo-tree-id45429 . -338) (undo-tree-id45430 . -338) (undo-tree-id45431 . -338) (undo-tree-id45432 . -338) (undo-tree-id45433 . -338) (undo-tree-id45434 . -338) (undo-tree-id45435 . -338) (undo-tree-id45436 . -338) (undo-tree-id45437 . -338) (undo-tree-id45438 . -338) (undo-tree-id45439 . -338) (undo-tree-id45440 . -338) (undo-tree-id45441 . -338) (undo-tree-id45442 . -338) (undo-tree-id45443 . -338) (undo-tree-id45444 . -338) (undo-tree-id45445 . -338) (undo-tree-id45446 . -338) (undo-tree-id45447 . -338) (undo-tree-id45448 . -338) (undo-tree-id45449 . -338) (undo-tree-id45450 . -338) (undo-tree-id45451 . -338) (undo-tree-id45452 . -338) (undo-tree-id45453 . -338) (undo-tree-id45454 . -338) (undo-tree-id45455 . -338) (undo-tree-id45456 . -338) (undo-tree-id45457 . -338) (undo-tree-id45458 . -338) (undo-tree-id45459 . -338) (undo-tree-id45460 . -338) (undo-tree-id45461 . -338) (undo-tree-id45462 . -338) (undo-tree-id45463 . -338) (undo-tree-id45464 . -338) (undo-tree-id45465 . -338) (undo-tree-id45466 . -338) (undo-tree-id45467 . -338) (undo-tree-id45468 . -338) (undo-tree-id45469 . -338) (undo-tree-id45470 . -338) (undo-tree-id45471 . -338) (undo-tree-id45472 . -338) (undo-tree-id45473 . -338) (undo-tree-id45474 . -338) (undo-tree-id45475 . -338) (undo-tree-id45476 . -338) (undo-tree-id45477 . -338) (undo-tree-id45478 . -338) (undo-tree-id45479 . -338) (undo-tree-id45480 . -338) (undo-tree-id45481 . -338) (undo-tree-id45482 . -338) (undo-tree-id45483 . -338) (undo-tree-id45484 . -338) (undo-tree-id45485 . -338) (undo-tree-id45486 . -338) (undo-tree-id45487 . -338) (undo-tree-id45488 . -338) (undo-tree-id45489 . -338) (undo-tree-id45490 . -338) (undo-tree-id45491 . -338) (undo-tree-id45492 . -338) (undo-tree-id45493 . -338) (undo-tree-id45494 . -338) (undo-tree-id45495 . -338) (undo-tree-id45496 . -338) (undo-tree-id45497 . -338) (undo-tree-id45498 . -338) (undo-tree-id45499 . -338) (undo-tree-id45500 . -338) (undo-tree-id45501 . -338) (undo-tree-id45502 . -338) (undo-tree-id45503 . -338) (undo-tree-id45504 . -338) (undo-tree-id45505 . -338) (undo-tree-id45506 . -338) (undo-tree-id45507 . -338) (undo-tree-id45508 . -338) (undo-tree-id45509 . -338) (undo-tree-id45510 . -338) (undo-tree-id45511 . -338) (undo-tree-id45512 . -338) (undo-tree-id45513 . -338) (undo-tree-id45514 . -338) (undo-tree-id45515 . -338) (undo-tree-id45516 . -338) (undo-tree-id45517 . -338) (undo-tree-id45518 . -338) (undo-tree-id45519 . -338) (undo-tree-id45520 . -338) (undo-tree-id45521 . -338) (undo-tree-id45522 . -338) (undo-tree-id45523 . -338) (undo-tree-id45524 . -339) (undo-tree-id45525 . -339) (undo-tree-id45526 . -169) (4855 . 5024) (#(" Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters." 0 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 20 34 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 34 35 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 35 135 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 135 136 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 136 165 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 165 166 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 5025)) nil (25774 61582 756517 247000) 0 nil])
([nil nil ((5194 . 5195)) nil (25774 61582 756399 601000) 0 nil])
([nil nil ((3809 . 3810) (t 25774 61582 813810 781000) 3808) nil (25774 61589 645001 540000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 3765) (undo-tree-id48886 . -1)) nil (25774 61589 644995 811000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3812) (undo-tree-id49115 . -1) (t 25774 61589 697874 140000)) nil (25774 61608 479404 648000) 0 nil])
([nil nil ((#("n the previous section, we saw that " 0 36 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3812) (undo-tree-id48887 . -35) (undo-tree-id48888 . -35) (undo-tree-id48889 . -35) (undo-tree-id48890 . -35) (undo-tree-id48891 . -4) (undo-tree-id48892 . -4) (undo-tree-id48893 . -4) (undo-tree-id48894 . -4) (undo-tree-id48895 . -4) (undo-tree-id48896 . -4) (undo-tree-id48897 . -4) (undo-tree-id48898 . -4) (undo-tree-id48899 . -4) (undo-tree-id48900 . -4) (undo-tree-id48901 . -4) (undo-tree-id48902 . -4) (undo-tree-id48903 . -4) (undo-tree-id48904 . -4) (undo-tree-id48905 . -4) (undo-tree-id48906 . -4) (undo-tree-id48907 . -4) (undo-tree-id48908 . -4) (undo-tree-id48909 . -4) (undo-tree-id48910 . -4) (undo-tree-id48911 . -4) (undo-tree-id48912 . -4) (undo-tree-id48913 . -4) (undo-tree-id48914 . -4) (undo-tree-id48915 . -4) (undo-tree-id48916 . -4) (undo-tree-id48917 . -2) (undo-tree-id48918 . -2) (undo-tree-id48919 . -2) (undo-tree-id48920 . -2) (undo-tree-id48921 . -2) (undo-tree-id48922 . -2) (undo-tree-id48923 . -2) (undo-tree-id48924 . -2) (undo-tree-id48925 . -2) (undo-tree-id48926 . -2) (undo-tree-id48927 . -2) (undo-tree-id48928 . -2) (undo-tree-id48929 . -2) (undo-tree-id48930 . -2) (undo-tree-id48931 . -2) (undo-tree-id48932 . -2) (undo-tree-id48933 . -36) (undo-tree-id48934 . -35) (undo-tree-id48935 . -4) (undo-tree-id48936 . -4) (undo-tree-id48937 . -4) (undo-tree-id48938 . -4) (undo-tree-id48939 . -4) (undo-tree-id48940 . -4) (undo-tree-id48941 . -4) (undo-tree-id48942 . -4) (undo-tree-id48943 . -4) (undo-tree-id48944 . -4) (undo-tree-id48945 . -4) (undo-tree-id48946 . -4) (undo-tree-id48947 . -4) (undo-tree-id48948 . -4) (undo-tree-id48949 . -4) (undo-tree-id48950 . -4) (undo-tree-id48951 . -4) (undo-tree-id48952 . -4) (undo-tree-id48953 . -4) (undo-tree-id48954 . -4) (undo-tree-id48955 . -4) (undo-tree-id48956 . -13) (undo-tree-id48957 . -13) (undo-tree-id48958 . -13) (undo-tree-id48959 . -13) (undo-tree-id48960 . -13) (undo-tree-id48961 . -13) (undo-tree-id48962 . -13) (undo-tree-id48963 . -13) (undo-tree-id48964 . -13) (undo-tree-id48965 . -13) (undo-tree-id48966 . -13) (undo-tree-id48967 . -13) (undo-tree-id48968 . -13) (undo-tree-id48969 . -13) (undo-tree-id48970 . -13) (undo-tree-id48971 . -13) (undo-tree-id48972 . -13) (undo-tree-id48973 . -13) (undo-tree-id48974 . -13) (undo-tree-id48975 . -13) (undo-tree-id48976 . -13) (undo-tree-id48977 . -21) (undo-tree-id48978 . -21) (undo-tree-id48979 . -21) (undo-tree-id48980 . -21) (undo-tree-id48981 . -21) (undo-tree-id48982 . -21) (undo-tree-id48983 . -21) (undo-tree-id48984 . -21) (undo-tree-id48985 . -21) (undo-tree-id48986 . -21) (undo-tree-id48987 . -21) (undo-tree-id48988 . -21) (undo-tree-id48989 . -21) (undo-tree-id48990 . -21) (undo-tree-id48991 . -21) (undo-tree-id48992 . -21) (undo-tree-id48993 . -21) (undo-tree-id48994 . -21) (undo-tree-id48995 . -21) (undo-tree-id48996 . -21) (undo-tree-id48997 . -21) (undo-tree-id48998 . -22) (undo-tree-id48999 . -22) (undo-tree-id49000 . -22) (undo-tree-id49001 . -22) (undo-tree-id49002 . -22) (undo-tree-id49003 . -22) (undo-tree-id49004 . -22) (undo-tree-id49005 . -22) (undo-tree-id49006 . -22) (undo-tree-id49007 . -22) (undo-tree-id49008 . -22) (undo-tree-id49009 . -22) (undo-tree-id49010 . -22) (undo-tree-id49011 . -22) (undo-tree-id49012 . -22) (undo-tree-id49013 . -22) (undo-tree-id49014 . -22) (undo-tree-id49015 . -22) (undo-tree-id49016 . -22) (undo-tree-id49017 . -22) (undo-tree-id49018 . -22) (undo-tree-id49019 . -25) (undo-tree-id49020 . -25) (undo-tree-id49021 . -25) (undo-tree-id49022 . -25) (undo-tree-id49023 . -25) (undo-tree-id49024 . -25) (undo-tree-id49025 . -25) (undo-tree-id49026 . -25) (undo-tree-id49027 . -25) (undo-tree-id49028 . -25) (undo-tree-id49029 . -25) (undo-tree-id49030 . -25) (undo-tree-id49031 . -25) (undo-tree-id49032 . -25) (undo-tree-id49033 . -25) (undo-tree-id49034 . -25) (undo-tree-id49035 . -25) (undo-tree-id49036 . -25) (undo-tree-id49037 . -25) (undo-tree-id49038 . -25) (undo-tree-id49039 . -25) (undo-tree-id49040 . -29) (undo-tree-id49041 . -29) (undo-tree-id49042 . -29) (undo-tree-id49043 . -29) (undo-tree-id49044 . -29) (undo-tree-id49045 . -29) (undo-tree-id49046 . -29) (undo-tree-id49047 . -29) (undo-tree-id49048 . -29) (undo-tree-id49049 . -29) (undo-tree-id49050 . -29) (undo-tree-id49051 . -29) (undo-tree-id49052 . -29) (undo-tree-id49053 . -29) (undo-tree-id49054 . -29) (undo-tree-id49055 . -29) (undo-tree-id49056 . -29) (undo-tree-id49057 . -29) (undo-tree-id49058 . -29) (undo-tree-id49059 . -29) (undo-tree-id49060 . -29) (undo-tree-id49061 . -34) (undo-tree-id49062 . -34) (undo-tree-id49063 . -34) (undo-tree-id49064 . -34) (undo-tree-id49065 . -34) (undo-tree-id49066 . -34) (undo-tree-id49067 . -34) (undo-tree-id49068 . -34) (undo-tree-id49069 . -34) (undo-tree-id49070 . -34) (undo-tree-id49071 . -34) (undo-tree-id49072 . -34) (undo-tree-id49073 . -34) (undo-tree-id49074 . -34) (undo-tree-id49075 . -34) (undo-tree-id49076 . -34) (undo-tree-id49077 . -34) (undo-tree-id49078 . -34) (undo-tree-id49079 . -34) (undo-tree-id49080 . -34) (undo-tree-id49081 . -34) (undo-tree-id49082 . -34) (undo-tree-id49083 . -34) (undo-tree-id49084 . -34) (undo-tree-id49085 . -34) (undo-tree-id49086 . -34) (undo-tree-id49087 . -34) (undo-tree-id49088 . -34) (undo-tree-id49089 . -34) (undo-tree-id49090 . -34) (undo-tree-id49091 . -34) (undo-tree-id49092 . -35) (undo-tree-id49093 . -35) (undo-tree-id49094 . -35) (undo-tree-id49095 . -35) (undo-tree-id49096 . -35) (undo-tree-id49097 . -35) (undo-tree-id49098 . -35) (undo-tree-id49099 . -35) (undo-tree-id49100 . -35) (undo-tree-id49101 . -35) (undo-tree-id49102 . -35) (undo-tree-id49103 . -35) (undo-tree-id49104 . -35) (undo-tree-id49105 . -35) (undo-tree-id49106 . -35) (undo-tree-id49107 . -35) (undo-tree-id49108 . -35) (undo-tree-id49109 . -35) (undo-tree-id49110 . -35) (undo-tree-id49111 . -35) (undo-tree-id49112 . -35) (undo-tree-id49113 . -35) (undo-tree-id49114 . -36) 3847) nil (25774 61608 479391 788000) 0 nil])
([nil nil ((3812 . 3813) (#("a" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3812)) nil (25774 61608 478839 214000) 0 nil])
([nil nil ((#("As we will see in the next section" 0 34 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3909) (undo-tree-id49118 . -33) (undo-tree-id49119 . -3) (undo-tree-id49120 . -3) (undo-tree-id49121 . -3) (undo-tree-id49122 . -3) (undo-tree-id49123 . -3) (undo-tree-id49124 . -3) (undo-tree-id49125 . -3) (undo-tree-id49126 . -3) (undo-tree-id49127 . -3) (undo-tree-id49128 . -3) (undo-tree-id49129 . -3) (undo-tree-id49130 . -3) (undo-tree-id49131 . -3) (undo-tree-id49132 . -3) (undo-tree-id49133 . -3) (undo-tree-id49134 . -3) (undo-tree-id49135 . -3) (undo-tree-id49136 . -3) (undo-tree-id49137 . -3) (undo-tree-id49138 . -3) (undo-tree-id49139 . -3) (undo-tree-id49140 . -3) (undo-tree-id49141 . -3) (undo-tree-id49142 . -3) (undo-tree-id49143 . -3) (undo-tree-id49144 . -3) (undo-tree-id49145 . -3) (undo-tree-id49146 . -3) (undo-tree-id49147 . -3) (undo-tree-id49148 . -3) (undo-tree-id49149 . -3) (undo-tree-id49150 . -3) (undo-tree-id49151 . -3) (undo-tree-id49152 . -3) (undo-tree-id49153 . -3) (undo-tree-id49154 . -3) (undo-tree-id49155 . -3) (undo-tree-id49156 . -3) (undo-tree-id49157 . -3) (undo-tree-id49158 . -3) (undo-tree-id49159 . -3) (undo-tree-id49160 . -3) (undo-tree-id49161 . -3) (undo-tree-id49162 . -3) (undo-tree-id49163 . -3) (undo-tree-id49164 . -3) (undo-tree-id49165 . -3) (undo-tree-id49166 . -3) (undo-tree-id49167 . -3) (undo-tree-id49168 . -3) (undo-tree-id49169 . -3) (undo-tree-id49170 . -3) (undo-tree-id49171 . -3) (undo-tree-id49172 . -3) (undo-tree-id49173 . -3) (undo-tree-id49174 . -3) (undo-tree-id49175 . -3) (undo-tree-id49176 . -3) (undo-tree-id49177 . -3) (undo-tree-id49178 . -3) (undo-tree-id49179 . -3) (undo-tree-id49180 . -3) (undo-tree-id49181 . -3) (undo-tree-id49182 . -3) (undo-tree-id49183 . -3) (undo-tree-id49184 . -3) (undo-tree-id49185 . -3) (undo-tree-id49186 . -3) (undo-tree-id49187 . -3) (undo-tree-id49188 . -3) (undo-tree-id49189 . -3) (undo-tree-id49190 . -3) (undo-tree-id49191 . -3) (undo-tree-id49192 . -3) (undo-tree-id49193 . -3) (undo-tree-id49194 . -3) (undo-tree-id49195 . -3) (undo-tree-id49196 . -3) (undo-tree-id49197 . -3) (undo-tree-id49198 . -3) (undo-tree-id49199 . -3) (undo-tree-id49200 . -3) (undo-tree-id49201 . -3) (undo-tree-id49202 . -3) (undo-tree-id49203 . -3) (undo-tree-id49204 . -3) (undo-tree-id49205 . -3) (undo-tree-id49206 . -3) (undo-tree-id49207 . -3) (undo-tree-id49208 . -3) (undo-tree-id49209 . -3) (undo-tree-id49210 . -3) (undo-tree-id49211 . -3) (undo-tree-id49212 . -3) (undo-tree-id49213 . -3) (undo-tree-id49214 . -3) (undo-tree-id49215 . -3) (undo-tree-id49216 . -3) (undo-tree-id49217 . -3) (undo-tree-id49218 . -3) (undo-tree-id49219 . -3) (undo-tree-id49220 . -3) (undo-tree-id49221 . -3) (undo-tree-id49222 . -3) (undo-tree-id49223 . -3) (undo-tree-id49224 . -3) (undo-tree-id49225 . -3) (undo-tree-id49226 . -3) (undo-tree-id49227 . -3) (undo-tree-id49228 . -3) (undo-tree-id49229 . -3) (undo-tree-id49230 . -3) (undo-tree-id49231 . -34) (t 25774 61608 526047 616000)) nil (25774 61646 58160 875000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3909) (undo-tree-id49116 . -1) (undo-tree-id49117 . -2)) nil (25774 61646 57582 190000) 0 nil])
([nil nil ((3909 . 3910) (#("w" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3909)) nil (25774 61646 57514 382000) 0 nil])
([nil nil ((#(", and we will discuss it in more detail later." 0 45 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 45 46 (rear-nonsticky t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4065) (undo-tree-id49232 . -45) (undo-tree-id49233 . -46) (undo-tree-id49234 . -46) (t 25774 61646 110394 653000)) nil (25774 61662 164831 668000) 0 nil])
([nil nil ((4065 . 4066)) nil (25774 61662 164815 633000) 0 nil])
([nil nil ((#("In fact" 0 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4070) (undo-tree-id49237 . -6) (undo-tree-id49238 . -7) (t 25774 61662 214543 652000)) nil (25774 61668 171994 637000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4070) (undo-tree-id49235 . -1) (undo-tree-id49236 . -2)) nil (25774 61668 171991 123000) 0 nil])
([nil nil ((4070 . 4071) (#("t" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4070)) nil (25774 61668 171977 886000) 0 nil])
([nil nil ((#("- Transformers can appear a bit complicated at first glance.
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 60 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 60 61 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 4068) (undo-tree-id49306 . -60) (undo-tree-id49307 . -2) (undo-tree-id49308 . -2) (undo-tree-id49309 . 58) (undo-tree-id49310 . -2) (undo-tree-id49311 . -2) (undo-tree-id49312 . -2) (undo-tree-id49313 . -2) (undo-tree-id49314 . -2) (undo-tree-id49315 . -2) (undo-tree-id49316 . -2) (undo-tree-id49317 . -2) (undo-tree-id49318 . -2) (undo-tree-id49319 . -2) (undo-tree-id49320 . -2) (undo-tree-id49321 . -2) (undo-tree-id49322 . -2) (undo-tree-id49323 . -2) (undo-tree-id49324 . -2) (undo-tree-id49325 . -2) (undo-tree-id49326 . -2) (undo-tree-id49327 . -2) (undo-tree-id49328 . -2) (undo-tree-id49329 . -2) (undo-tree-id49330 . -2) (undo-tree-id49331 . -61) 4070 (t 25774 61668 222599 283000)) nil (25774 61688 502813 995000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 4068) (undo-tree-id49255 . 1) (undo-tree-id49256 . -1) (undo-tree-id49257 . -1) (undo-tree-id49258 . -1) (undo-tree-id49259 . -1) (undo-tree-id49260 . -1) (undo-tree-id49261 . -1) (undo-tree-id49262 . -1) (undo-tree-id49263 . -1) (undo-tree-id49264 . -1) (undo-tree-id49265 . -1) (undo-tree-id49266 . -1) (undo-tree-id49267 . -1) (undo-tree-id49268 . -1) (undo-tree-id49269 . -1) (undo-tree-id49270 . -1) (undo-tree-id49271 . -1) (undo-tree-id49272 . -1) (undo-tree-id49273 . -1) (undo-tree-id49274 . -1) (undo-tree-id49275 . -1) (undo-tree-id49276 . -1) (undo-tree-id49277 . -1) (undo-tree-id49278 . -1) (undo-tree-id49279 . -1) (undo-tree-id49280 . -1) (undo-tree-id49281 . -1) (undo-tree-id49282 . -1) (undo-tree-id49283 . -1) (undo-tree-id49284 . -1) (undo-tree-id49285 . -1) (undo-tree-id49286 . -1) (undo-tree-id49287 . -1) (undo-tree-id49288 . -1) (undo-tree-id49289 . -1) (undo-tree-id49290 . -1) (undo-tree-id49291 . -1) (undo-tree-id49292 . -1) (undo-tree-id49293 . -1) (undo-tree-id49294 . -1) (undo-tree-id49295 . -1) (undo-tree-id49296 . -1) (undo-tree-id49297 . -1) (undo-tree-id49298 . -1) (undo-tree-id49299 . -1) (undo-tree-id49300 . -1) (undo-tree-id49301 . -1) (undo-tree-id49302 . -1) (undo-tree-id49303 . -1) (undo-tree-id49304 . -1) (undo-tree-id49305 . -1)) nil (25774 61688 502792 354000) 0 nil])
([nil nil ((#("So" 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4070) (undo-tree-id49253 . -1) (undo-tree-id49254 . -2)) nil (25774 61688 502758 246000) 0 nil])
([nil nil ((#(", before we discuss transformers in the next section" 0 32 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 32 33 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 33 52 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4070) (undo-tree-id49251 . -51) (undo-tree-id49252 . -52)) nil (25774 61688 502755 914000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4070) (undo-tree-id49249 . -1) (undo-tree-id49250 . -2)) nil (25774 61688 502753 280000) 0 nil])
([nil nil ((#("let " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4070) (undo-tree-id49247 . -3) (undo-tree-id49248 . -4)) nil (25774 61688 502749 714000) 0 nil])
([nil nil ((#("us " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4070) (undo-tree-id49245 . -2) (undo-tree-id49246 . -3)) nil (25774 61688 502747 424000) 0 nil])
([nil nil ((#("dive " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4070) (undo-tree-id49243 . -4) (undo-tree-id49244 . -5)) nil (25774 61688 502744 990000) 0 nil])
([nil nil ((#("into " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4070) (undo-tree-id49241 . -4) (undo-tree-id49242 . -5)) nil (25774 61688 503092 705000) 0 nil])
([nil nil ((#("the " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4070) (undo-tree-id49332 . -3) (undo-tree-id49333 . -4)) nil (25774 61691 590456 313000) 0 nil] [nil nil ((#("the " 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4070) (undo-tree-id49239 . -3) (undo-tree-id49240 . -4)) ((4070 . 4074)) (25774 61688 502736 497000) 0 nil])
([nil nil ((4070 . 4071) (#("s" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4070)) nil (25774 61691 590438 984000) 0 nil])
nil
([nil nil ((#("In fact" 0 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4120) (undo-tree-id49454 . -6) (undo-tree-id49455 . -7) (t 25774 61691 642816 371000)) nil (25774 61728 899006 389000) 0 nil])
([nil nil ((#(", as we will see" 0 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 7 8 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 8 16 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4120) (undo-tree-id49452 . -15) (undo-tree-id49453 . -16)) nil (25774 61728 899004 206000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4120) (undo-tree-id49450 . -1) (undo-tree-id49451 . -2)) nil (25774 61728 899002 228000) 0 nil])
([nil nil ((#("this " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4120) (undo-tree-id49448 . -4) (undo-tree-id49449 . -5)) nil (25774 61728 898999 122000) 0 nil])
([nil nil ((4120 . 4121) (#("s" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4120)) nil (25774 61728 898996 393000) 0 nil])
([nil nil ((4199 . 4200) (#("t" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4199)) nil (25774 61728 898995 35000) 0 nil])
([nil nil ((#("That we discussed in the previous section" 0 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 7 8 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 8 41 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4199) (undo-tree-id49445 . -40) (undo-tree-id49446 . 40) (undo-tree-id49447 . -41)) nil (25774 61728 898993 299000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4198) (undo-tree-id49334 . -1) (undo-tree-id49335 . -1) (undo-tree-id49336 . -1) (undo-tree-id49337 . -1) (undo-tree-id49338 . -1) (undo-tree-id49339 . -1) (undo-tree-id49340 . -1) (undo-tree-id49341 . -1) (undo-tree-id49342 . -1) (undo-tree-id49343 . -1) (undo-tree-id49344 . -1) (undo-tree-id49345 . -1) (undo-tree-id49346 . -1) (undo-tree-id49347 . -1) (undo-tree-id49348 . -1) (undo-tree-id49349 . -1) (undo-tree-id49350 . -1) (undo-tree-id49351 . -1) (undo-tree-id49352 . -1) (undo-tree-id49353 . -1) (undo-tree-id49354 . -1) (undo-tree-id49355 . -1) (undo-tree-id49356 . -1) (undo-tree-id49357 . -1) (undo-tree-id49358 . -1) (undo-tree-id49359 . -1) (undo-tree-id49360 . -1) (undo-tree-id49361 . -1) (undo-tree-id49362 . -1) (undo-tree-id49363 . -1) (undo-tree-id49364 . -1) (undo-tree-id49365 . -1) (undo-tree-id49366 . -1) (undo-tree-id49367 . -1) (undo-tree-id49368 . -1) (undo-tree-id49369 . -1) (undo-tree-id49370 . -1) (undo-tree-id49371 . -1) (undo-tree-id49372 . -1) (undo-tree-id49373 . -1) (undo-tree-id49374 . -1) (undo-tree-id49375 . -1) (undo-tree-id49376 . -1) (undo-tree-id49377 . -1) (undo-tree-id49378 . -1) (undo-tree-id49379 . -1) (undo-tree-id49380 . -1) (undo-tree-id49381 . -1) (undo-tree-id49382 . -1) (undo-tree-id49383 . -1) (undo-tree-id49384 . -1) (undo-tree-id49385 . -1) (undo-tree-id49386 . -1) (undo-tree-id49387 . -1) (undo-tree-id49388 . -1) (undo-tree-id49389 . -1) (undo-tree-id49390 . -1) (undo-tree-id49391 . -1) (undo-tree-id49392 . -1) (undo-tree-id49393 . -1) (undo-tree-id49394 . -1) (undo-tree-id49395 . -1) (undo-tree-id49396 . -1) (undo-tree-id49397 . -1) (undo-tree-id49398 . -1) (undo-tree-id49399 . -1) (undo-tree-id49400 . -1) (undo-tree-id49401 . -1) (undo-tree-id49402 . -1) (undo-tree-id49403 . -1) (undo-tree-id49404 . -1) (undo-tree-id49405 . -1) (undo-tree-id49406 . -1) (undo-tree-id49407 . -1) (undo-tree-id49408 . -1) (undo-tree-id49409 . -1) (undo-tree-id49410 . -1) (undo-tree-id49411 . -1) (undo-tree-id49412 . -1) (undo-tree-id49413 . -1) (undo-tree-id49414 . -1) (undo-tree-id49415 . -1) (undo-tree-id49416 . -1) (undo-tree-id49417 . -1) (undo-tree-id49418 . -1) (undo-tree-id49419 . -1) (undo-tree-id49420 . -1) (undo-tree-id49421 . -1) (undo-tree-id49422 . -1) (undo-tree-id49423 . -1) (undo-tree-id49424 . -1) (undo-tree-id49425 . -1) (undo-tree-id49426 . -1) (undo-tree-id49427 . -1) (undo-tree-id49428 . -1) (undo-tree-id49429 . -1) (undo-tree-id49430 . -1) (undo-tree-id49431 . -1) (undo-tree-id49432 . -1) (undo-tree-id49433 . -1) (undo-tree-id49434 . -1) (undo-tree-id49435 . -1) (undo-tree-id49436 . -1) (undo-tree-id49437 . -1) (undo-tree-id49438 . -1) (undo-tree-id49439 . -1) (undo-tree-id49440 . -1) (undo-tree-id49441 . -1) (undo-tree-id49442 . -1) (undo-tree-id49443 . -1) (undo-tree-id49444 . -1)) nil (25774 61728 898980 52000) 0 nil])
([nil nil ((#("We c" 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4203) (undo-tree-id49458 . -3) (undo-tree-id49459 . -4) (t 25774 61728 951162 888000)) nil (25774 61748 907596 770000) 0 nil])
([nil nil ((#("an think of the previously discussed " 0 37 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4203) (undo-tree-id49456 . -36) (undo-tree-id49457 . -37)) nil (25774 61748 907592 973000) 0 nil])
([nil nil ((4203 . 4204) (#("a" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4203)) nil (25774 61748 907578 455000) 0 nil])
([nil nil ((#("that " 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4276) (undo-tree-id49520 . -4) (undo-tree-id49521 . -5) (t 25774 61748 963349 85000)) nil (25774 61774 600694 769000) 0 nil])
([nil nil ((#("is" 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4276) (undo-tree-id49518 . -1) (undo-tree-id49519 . -2)) nil (25774 61774 600692 397000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4276) (undo-tree-id49516 . -1) (undo-tree-id49517 . -2)) nil (25774 61774 600689 951000) 0 nil])
([nil nil ((#("," 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4274) (undo-tree-id49460 . 1) (undo-tree-id49461 . -1) (undo-tree-id49462 . -1) (undo-tree-id49463 . -1) (undo-tree-id49464 . -1) (undo-tree-id49465 . -1) (undo-tree-id49466 . -1) (undo-tree-id49467 . -1) (undo-tree-id49468 . -1) (undo-tree-id49469 . -1) (undo-tree-id49470 . -1) (undo-tree-id49471 . -1) (undo-tree-id49472 . -1) (undo-tree-id49473 . -1) (undo-tree-id49474 . -1) (undo-tree-id49475 . -1) (undo-tree-id49476 . -1) (undo-tree-id49477 . -1) (undo-tree-id49478 . -1) (undo-tree-id49479 . -1) (undo-tree-id49480 . -1) (undo-tree-id49481 . -1) (undo-tree-id49482 . -1) (undo-tree-id49483 . -1) (undo-tree-id49484 . -1) (undo-tree-id49485 . -1) (undo-tree-id49486 . -1) (undo-tree-id49487 . -1) (undo-tree-id49488 . -1) (undo-tree-id49489 . -1) (undo-tree-id49490 . -1) (undo-tree-id49491 . -1) (undo-tree-id49492 . -1) (undo-tree-id49493 . -1) (undo-tree-id49494 . -1) (undo-tree-id49495 . -1) (undo-tree-id49496 . -1) (undo-tree-id49497 . -1) (undo-tree-id49498 . -1) (undo-tree-id49499 . -1) (undo-tree-id49500 . -1) (undo-tree-id49501 . -1) (undo-tree-id49502 . -1) (undo-tree-id49503 . -1) (undo-tree-id49504 . -1) (undo-tree-id49505 . -1) (undo-tree-id49506 . -1) (undo-tree-id49507 . -1) (undo-tree-id49508 . -1) (undo-tree-id49509 . -1) (undo-tree-id49510 . -1) (undo-tree-id49511 . -1) (undo-tree-id49512 . -1) (undo-tree-id49513 . -1) (undo-tree-id49514 . -1) (undo-tree-id49515 . -1)) nil (25774 61774 600685 234000) 0 nil])
([nil nil ((4275 . 4276)) nil (25774 61774 600633 821000) 0 nil])
([nil nil ((4310 . 4311)) nil (25774 61774 600628 612000) 0 nil])
([nil nil ((#("As we will see" 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 5 6 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 6 14 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4316) (undo-tree-id49524 . -13) (undo-tree-id49525 . -14) (t 25774 61774 655588 463000)) nil (25774 61786 445829 544000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4316) (undo-tree-id49522 . -1) (undo-tree-id49523 . -2)) nil (25774 61786 445826 134000) 0 nil])
([nil nil ((4316 . 4317) (#("s" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4316)) nil (25774 61786 445813 104000) 0 nil])
([nil nil ((4316 . 4317) (#("s" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4316)) nil (25774 61807 267075 493000) 0 nil])
([nil nil ((4415 . 4416) (#("
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4415) (undo-tree-id49764 . -1) (undo-tree-id49765 . -1) (undo-tree-id49766 . -1) (undo-tree-id49767 . -1) (undo-tree-id49768 . -1) (undo-tree-id49769 . -1) (undo-tree-id49770 . -1) (undo-tree-id49771 . -1) (undo-tree-id49772 . -1) (undo-tree-id49773 . -1) (undo-tree-id49774 . -1) (undo-tree-id49775 . -1) (undo-tree-id49776 . -1) (undo-tree-id49777 . -1) (undo-tree-id49778 . -1) (undo-tree-id49779 . -1) (undo-tree-id49780 . -1) (undo-tree-id49781 . -1) (undo-tree-id49782 . -1) (undo-tree-id49783 . -1) (undo-tree-id49784 . -1) (undo-tree-id49785 . -1) (undo-tree-id49786 . -1) (undo-tree-id49787 . -1) (undo-tree-id49788 . -1) (undo-tree-id49789 . -1) (undo-tree-id49790 . -1) (undo-tree-id49791 . -1) (#("
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4415) (undo-tree-id49792 . -1) (undo-tree-id49793 . -1) (undo-tree-id49794 . -1) (undo-tree-id49795 . -1) (undo-tree-id49796 . -1) (undo-tree-id49797 . -1) (undo-tree-id49798 . -1) (undo-tree-id49799 . -1) (undo-tree-id49800 . -1) (undo-tree-id49801 . -1) (undo-tree-id49802 . -1) (undo-tree-id49803 . -1) (undo-tree-id49804 . -1) (undo-tree-id49805 . -1) (undo-tree-id49806 . -1) (undo-tree-id49807 . -1) (undo-tree-id49808 . -1) (undo-tree-id49809 . -1) (undo-tree-id49810 . -1) (undo-tree-id49811 . -1) (undo-tree-id49812 . -1) (undo-tree-id49813 . -1) (undo-tree-id49814 . -1) (undo-tree-id49815 . -1) (undo-tree-id49816 . -1) (undo-tree-id49817 . -1) (undo-tree-id49818 . -1) (undo-tree-id49819 . -1) (undo-tree-id49820 . -1) (undo-tree-id49821 . -1) (undo-tree-id49822 . -1) 4375 (t 25774 61786 499698 935000)) nil (25774 61814 795793 546000) 0 nil] [nil nil ((#("
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4415) (undo-tree-id49587 . -1) (undo-tree-id49588 . -1) (undo-tree-id49589 . -1) (undo-tree-id49590 . -1) (undo-tree-id49591 . -1) (undo-tree-id49592 . -1) (undo-tree-id49593 . -1) (undo-tree-id49594 . -1) (undo-tree-id49595 . -1) (undo-tree-id49596 . -1) (undo-tree-id49597 . -1) (undo-tree-id49598 . -1) (undo-tree-id49599 . -1) (undo-tree-id49600 . -1) (undo-tree-id49601 . -1) (undo-tree-id49602 . -1) (undo-tree-id49603 . -1) (undo-tree-id49604 . -1) (undo-tree-id49605 . -1) (undo-tree-id49606 . -1) (undo-tree-id49607 . -1) (undo-tree-id49608 . -1) (undo-tree-id49609 . -1) (undo-tree-id49610 . -1) (undo-tree-id49611 . -1) (undo-tree-id49612 . -1) (undo-tree-id49613 . -1) (undo-tree-id49614 . -1) (undo-tree-id49615 . -1) (undo-tree-id49616 . -1) (undo-tree-id49617 . -1) 4375 (t 25774 61786 499698 935000)) ((4415 . 4416)) (25774 61806 484359 141000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 4416) (undo-tree-id49762 . -1) (undo-tree-id49763 . -1)) nil (25774 61814 795617 523000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4414) (undo-tree-id49554 . -1) (undo-tree-id49555 . -1) (undo-tree-id49556 . -1) (undo-tree-id49557 . -1) (undo-tree-id49558 . -1) (undo-tree-id49559 . -1) (undo-tree-id49560 . -1) (undo-tree-id49561 . -1) (undo-tree-id49562 . -1) (undo-tree-id49563 . -1) (undo-tree-id49564 . -1) (undo-tree-id49565 . -1) (undo-tree-id49566 . -1) (undo-tree-id49567 . -1) (undo-tree-id49568 . -1) (undo-tree-id49569 . -1) (undo-tree-id49570 . -1) (undo-tree-id49571 . -1) (undo-tree-id49572 . -1) (undo-tree-id49573 . -1) (undo-tree-id49574 . -1) (undo-tree-id49575 . -1) (undo-tree-id49576 . -1) (undo-tree-id49577 . -1) (undo-tree-id49578 . -1) (undo-tree-id49579 . -1) (undo-tree-id49580 . -1) (undo-tree-id49581 . -1) (undo-tree-id49582 . -1) (undo-tree-id49583 . -1) (undo-tree-id49584 . -1) (undo-tree-id49585 . -1) (undo-tree-id49586 . -1)) ((4414 . 4415)) (25774 61805 355847 115000) 0 nil])
([nil nil ((#("." 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4414) (undo-tree-id49654 . -1) (undo-tree-id49655 . -1) (undo-tree-id49656 . -1) (undo-tree-id49657 . -1) (undo-tree-id49658 . -1) (undo-tree-id49659 . -1) (undo-tree-id49660 . -1) (undo-tree-id49661 . -1) (undo-tree-id49662 . -1) (undo-tree-id49663 . -1) (undo-tree-id49664 . -1) (undo-tree-id49665 . -1) (undo-tree-id49666 . -1) (undo-tree-id49667 . -1) (undo-tree-id49668 . -1) (undo-tree-id49669 . -1) (undo-tree-id49670 . -1) (undo-tree-id49671 . -1) (undo-tree-id49672 . -1) (undo-tree-id49673 . -1) (undo-tree-id49674 . -1) (undo-tree-id49675 . -1) (undo-tree-id49676 . -1) (undo-tree-id49677 . -1) (undo-tree-id49678 . -1) (undo-tree-id49679 . -1) (undo-tree-id49680 . -1) (undo-tree-id49681 . -1) (undo-tree-id49682 . -1) (undo-tree-id49683 . -1) (undo-tree-id49684 . -1) (undo-tree-id49685 . -1) (undo-tree-id49686 . -1) (undo-tree-id49687 . -1) (undo-tree-id49688 . -1) (undo-tree-id49689 . -1) (undo-tree-id49690 . -1) (undo-tree-id49691 . -1) (undo-tree-id49692 . -1) (undo-tree-id49693 . -1) (undo-tree-id49694 . -1) (undo-tree-id49695 . -1) (undo-tree-id49696 . -1) (undo-tree-id49697 . -1) (undo-tree-id49698 . -1) (undo-tree-id49699 . -1) (undo-tree-id49700 . -1) (undo-tree-id49701 . -1) (undo-tree-id49702 . -1) (undo-tree-id49703 . -1) (undo-tree-id49704 . -1) (undo-tree-id49705 . -1) (undo-tree-id49706 . -1) (undo-tree-id49707 . -1) (undo-tree-id49708 . -1) (undo-tree-id49709 . -1) (undo-tree-id49710 . -1) (undo-tree-id49711 . -1) (undo-tree-id49712 . -1) (undo-tree-id49713 . -1) (undo-tree-id49714 . -1) (undo-tree-id49715 . -1) (undo-tree-id49716 . -1) (undo-tree-id49717 . -1) (undo-tree-id49718 . -1) (undo-tree-id49719 . -1) (undo-tree-id49720 . -1) (undo-tree-id49721 . -1) (undo-tree-id49722 . -1) (undo-tree-id49723 . -1) (undo-tree-id49724 . -1) (undo-tree-id49725 . -1) (undo-tree-id49726 . -1) (undo-tree-id49727 . -1) (undo-tree-id49728 . -1) (undo-tree-id49729 . -1) (undo-tree-id49730 . -1) (undo-tree-id49731 . -1) (undo-tree-id49732 . -1) (undo-tree-id49733 . -1) (undo-tree-id49734 . -1) (undo-tree-id49735 . -1) (undo-tree-id49736 . -1) (undo-tree-id49737 . -1) (undo-tree-id49738 . -1) (undo-tree-id49739 . -1) (undo-tree-id49740 . -1) (undo-tree-id49741 . -1) (undo-tree-id49742 . -1) (undo-tree-id49743 . -1) (undo-tree-id49744 . -1) (undo-tree-id49745 . -1) (undo-tree-id49746 . -1) (undo-tree-id49747 . -1) (undo-tree-id49748 . -1) (undo-tree-id49749 . -1) (undo-tree-id49750 . -1) (undo-tree-id49751 . -1) (undo-tree-id49752 . -1) (undo-tree-id49753 . -1) (undo-tree-id49754 . -1) (undo-tree-id49755 . -1) (undo-tree-id49756 . -1) (undo-tree-id49757 . -1) (undo-tree-id49758 . -1) (undo-tree-id49759 . -1) (undo-tree-id49760 . -1) (undo-tree-id49761 . -1)) nil (25774 61814 795611 935000) 0 nil])
([nil nil ((4414 . 4415) (#("
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4414) (undo-tree-id49526 . -1) (undo-tree-id49527 . -1) (undo-tree-id49528 . -1) (undo-tree-id49529 . -1) (undo-tree-id49530 . -1) (undo-tree-id49531 . -1) (undo-tree-id49532 . -1) (undo-tree-id49533 . -1) (undo-tree-id49534 . -1) (undo-tree-id49535 . -1) (undo-tree-id49536 . -1) (undo-tree-id49537 . -1) (undo-tree-id49538 . -1) (undo-tree-id49539 . -1) (undo-tree-id49540 . -1) (undo-tree-id49541 . -1) (undo-tree-id49542 . -1) (undo-tree-id49543 . -1) (undo-tree-id49544 . -1) (undo-tree-id49545 . -1) (undo-tree-id49546 . -1) (undo-tree-id49547 . -1) (undo-tree-id49548 . -1) (undo-tree-id49549 . -1) (undo-tree-id49550 . -1) (undo-tree-id49551 . -1) (undo-tree-id49552 . -1) (undo-tree-id49553 . -1) 4413) ((4414 . 4415) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 4414)) (25774 61805 354125 196000) 0 nil])
([nil nil ((4414 . 4415)) nil (25774 61814 795520 238000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 4415) (undo-tree-id49618 . 1) (undo-tree-id49619 . -1) (undo-tree-id49620 . -1) (undo-tree-id49621 . -1) (undo-tree-id49622 . -1) (undo-tree-id49623 . -1) (undo-tree-id49624 . -1) (undo-tree-id49625 . -1) (undo-tree-id49626 . -1) (undo-tree-id49627 . -1) (undo-tree-id49628 . -1) (undo-tree-id49629 . -1) (undo-tree-id49630 . -1) (undo-tree-id49631 . -1) (undo-tree-id49632 . -1) (undo-tree-id49633 . -1) (undo-tree-id49634 . -1) (undo-tree-id49635 . -1) (undo-tree-id49636 . -1) (undo-tree-id49637 . -1) (undo-tree-id49638 . -1) (undo-tree-id49639 . -1) (undo-tree-id49640 . -1) (undo-tree-id49641 . -1) (undo-tree-id49642 . -1) (undo-tree-id49643 . -1) (undo-tree-id49644 . -1) (undo-tree-id49645 . -1) (undo-tree-id49646 . -1) (undo-tree-id49647 . -1) (undo-tree-id49648 . -1) (undo-tree-id49649 . -1) (undo-tree-id49650 . -1) (undo-tree-id49651 . -1) (undo-tree-id49652 . -1) (undo-tree-id49653 . -1)) nil (25774 61814 795513 456000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4551) (undo-tree-id49825 . -1) (undo-tree-id49826 . -1) (t 25774 61814 847963 635000)) nil (25774 61825 728360 387000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 4551) (undo-tree-id49823 . -1) (undo-tree-id49824 . -1)) nil (25774 61825 728354 531000) 0 nil])
([nil nil ((#("- In the first subsection, we will introduce a basic form of self-attention without any learning parameters, which is very much like a pre-processing step to the input.
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 38 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 38 102 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 102 168 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 168 169 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 4449) (undo-tree-id49986 . -168) (undo-tree-id49987 . -102) (undo-tree-id49988 . -102) (undo-tree-id49989 . -102) (undo-tree-id49990 . -102) (undo-tree-id49991 . -102) (undo-tree-id49992 . -102) (undo-tree-id49993 . -102) (undo-tree-id49994 . -102) (undo-tree-id49995 . -102) (undo-tree-id49996 . -102) (undo-tree-id49997 . -102) (undo-tree-id49998 . -102) (undo-tree-id49999 . -102) (undo-tree-id50000 . -102) (undo-tree-id50001 . -102) (undo-tree-id50002 . -102) (undo-tree-id50003 . -102) (undo-tree-id50004 . -102) (undo-tree-id50005 . -102) (undo-tree-id50006 . -102) (undo-tree-id50007 . -102) (undo-tree-id50008 . -102) (undo-tree-id50009 . -102) (undo-tree-id50010 . -102) (undo-tree-id50011 . -102) (undo-tree-id50012 . -102) (undo-tree-id50013 . -102) (undo-tree-id50014 . -102) (undo-tree-id50015 . -102) (undo-tree-id50016 . -102) (undo-tree-id50017 . -43) (undo-tree-id50018 . -43) (undo-tree-id50019 . -43) (undo-tree-id50020 . -43) (undo-tree-id50021 . -43) (undo-tree-id50022 . -43) (undo-tree-id50023 . -43) (undo-tree-id50024 . -43) (undo-tree-id50025 . -43) (undo-tree-id50026 . -43) (undo-tree-id50027 . -43) (undo-tree-id50028 . -43) (undo-tree-id50029 . -43) (undo-tree-id50030 . -43) (undo-tree-id50031 . -43) (undo-tree-id50032 . -43) (undo-tree-id50033 . -169) (t 25774 61825 784065 858000)) nil (25774 61836 689222 988000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 4449) (undo-tree-id49985 . -1)) nil (25774 61836 689190 586000) 0 nil])
([nil nil ((#("- Then in the second subsection, we will introduce the common version of self-attention that is used in the transformer architecture and involves learnable parameters.
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 21 35 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 35 36 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 36 136 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 136 137 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 137 166 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 166 167 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 167 168 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 4449) (undo-tree-id49983 . -167) (undo-tree-id49984 . -168)) nil (25774 61836 689142 101000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4448) (undo-tree-id49827 . -1) (undo-tree-id49828 . -1) (undo-tree-id49829 . -1) (undo-tree-id49830 . -1) (undo-tree-id49831 . -1) (undo-tree-id49832 . -1) (undo-tree-id49833 . -1) (undo-tree-id49834 . -1) (undo-tree-id49835 . -1) (undo-tree-id49836 . -1) (undo-tree-id49837 . -1) (undo-tree-id49838 . -1) (undo-tree-id49839 . -1) (undo-tree-id49840 . -1) (undo-tree-id49841 . -1) (undo-tree-id49842 . -1) (undo-tree-id49843 . -1) (undo-tree-id49844 . -1) (undo-tree-id49845 . -1) (undo-tree-id49846 . -1) (undo-tree-id49847 . -1) (undo-tree-id49848 . -1) (undo-tree-id49849 . -1) (undo-tree-id49850 . -1) (undo-tree-id49851 . -1) (undo-tree-id49852 . -1) (undo-tree-id49853 . -1) (undo-tree-id49854 . -1) (undo-tree-id49855 . -1) (undo-tree-id49856 . -1) (undo-tree-id49857 . -1) (undo-tree-id49858 . -1) (undo-tree-id49859 . -1) (undo-tree-id49860 . -1) (undo-tree-id49861 . -1) (undo-tree-id49862 . -1) (undo-tree-id49863 . -1) (undo-tree-id49864 . -1) (undo-tree-id49865 . -1) (undo-tree-id49866 . -1) (undo-tree-id49867 . -1) (undo-tree-id49868 . -1) (undo-tree-id49869 . -1) (undo-tree-id49870 . -1) (undo-tree-id49871 . -1) (undo-tree-id49872 . -1) (undo-tree-id49873 . -1) (undo-tree-id49874 . -1) (undo-tree-id49875 . -1) (undo-tree-id49876 . -1) (undo-tree-id49877 . -1) (undo-tree-id49878 . -1) (undo-tree-id49879 . -1) (undo-tree-id49880 . -1) (undo-tree-id49881 . -1) (undo-tree-id49882 . -1) (undo-tree-id49883 . -1) (undo-tree-id49884 . -1) (undo-tree-id49885 . -1) (undo-tree-id49886 . -1) (undo-tree-id49887 . -1) (undo-tree-id49888 . -1) (undo-tree-id49889 . -1) (undo-tree-id49890 . -1) (undo-tree-id49891 . -1) (undo-tree-id49892 . -1) (undo-tree-id49893 . -1) (undo-tree-id49894 . -1) (undo-tree-id49895 . -1) (undo-tree-id49896 . -1) (undo-tree-id49897 . -1) (undo-tree-id49898 . -1) (undo-tree-id49899 . -1) (undo-tree-id49900 . -1) (undo-tree-id49901 . -1) (undo-tree-id49902 . -1) (undo-tree-id49903 . -1) (undo-tree-id49904 . -1) (undo-tree-id49905 . -1) (undo-tree-id49906 . -1) (undo-tree-id49907 . -1) (undo-tree-id49908 . -1) (undo-tree-id49909 . -1) (undo-tree-id49910 . -1) (undo-tree-id49911 . -1) (undo-tree-id49912 . -1) (undo-tree-id49913 . -1) (undo-tree-id49914 . -1) (undo-tree-id49915 . -1) (undo-tree-id49916 . -1) (undo-tree-id49917 . -1) (undo-tree-id49918 . -1) (undo-tree-id49919 . -1) (undo-tree-id49920 . -1) (undo-tree-id49921 . -1) (undo-tree-id49922 . -1) (undo-tree-id49923 . -1) (undo-tree-id49924 . -1) (undo-tree-id49925 . -1) (undo-tree-id49926 . -1) (undo-tree-id49927 . -1) (undo-tree-id49928 . -1) (undo-tree-id49929 . -1) (undo-tree-id49930 . -1) (undo-tree-id49931 . -1) (undo-tree-id49932 . -1) (undo-tree-id49933 . -1) (undo-tree-id49934 . -1) (undo-tree-id49935 . -1) (undo-tree-id49936 . -1) (undo-tree-id49937 . -1) (undo-tree-id49938 . -1) (undo-tree-id49939 . -1) (undo-tree-id49940 . -1) (undo-tree-id49941 . -1) (undo-tree-id49942 . -1) (undo-tree-id49943 . -1) (undo-tree-id49944 . -1) (undo-tree-id49945 . -1) (undo-tree-id49946 . -1) (undo-tree-id49947 . -1) (undo-tree-id49948 . -1) (undo-tree-id49949 . -1) (undo-tree-id49950 . -1) (undo-tree-id49951 . -1) (undo-tree-id49952 . -1) (undo-tree-id49953 . -1) (undo-tree-id49954 . -1) (undo-tree-id49955 . -1) (undo-tree-id49956 . -1) (undo-tree-id49957 . -1) (undo-tree-id49958 . -1) (undo-tree-id49959 . -1) (undo-tree-id49960 . -1) (undo-tree-id49961 . -1) (undo-tree-id49962 . -1) (undo-tree-id49963 . -1) (undo-tree-id49964 . -1) (undo-tree-id49965 . -1) (undo-tree-id49966 . -1) (undo-tree-id49967 . -1) (undo-tree-id49968 . -1) (undo-tree-id49969 . -1) (undo-tree-id49970 . -1) (undo-tree-id49971 . -1) (undo-tree-id49972 . -1) (undo-tree-id49973 . -1) (undo-tree-id49974 . -1) (undo-tree-id49975 . -1) (undo-tree-id49976 . -1) (undo-tree-id49977 . -1) (undo-tree-id49978 . -1) (undo-tree-id49979 . -1) (undo-tree-id49980 . -1) (undo-tree-id49981 . -1) (undo-tree-id49982 . -1) 4449) nil (25774 61836 689131 775000) 0 nil])
([nil nil ((4448 . 4451) (t 25774 61836 744168 361000)) nil (25774 61914 340917 444000) 0 nil])
([nil nil ((4451 . 4455) 4450) nil (25774 61914 340916 384000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6472 . 6473) (nil fontified nil 6459 . 6473) (nil fontified nil 6457 . 6459) (nil fontified nil 6429 . 6457) (nil fontified nil 6329 . 6429) (nil fontified nil 6289 . 6329) (nil fontified nil 6179 . 6289) (nil fontified nil 6074 . 6179) (nil fontified nil 5976 . 6074) (nil fontified nil 5869 . 5976) (nil fontified nil 5864 . 5869) (nil fontified nil 5839 . 5864) (nil fontified nil 5836 . 5839) (nil fontified nil 5824 . 5836) (nil fontified nil 5715 . 5824) (nil fontified nil 5608 . 5715) (nil fontified nil 5567 . 5608) (nil fontified nil 5470 . 5567) (nil fontified nil 5369 . 5470) (nil fontified nil 5272 . 5369) (nil fontified nil 5172 . 5272) (nil fontified nil 5068 . 5172) (nil fontified nil 4963 . 5068) (nil fontified nil 4846 . 4963) (nil fontified nil 4827 . 4846) (nil fontified nil 4724 . 4827) (nil fontified nil 4610 . 4724) (nil fontified nil 4500 . 4610) (nil fontified nil 4455 . 4500) (4455 . 6473) 4454) nil (25774 61914 340913 912000) 0 nil])
([nil nil ((#("** 
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (2 1 [9679]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 3 4 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 4448) (undo-tree-id50048 . -3)) nil (25774 61914 340906 620000) 0 nil])
([nil nil ((4496 . 4498)) nil (25774 61914 340904 106000) 0 nil])
([nil nil ((6176 . 6177) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -6176) (6071 . 6072) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -6071) (5973 . 5974) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -5973) (5866 . 5867) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -5866) (5861 . 5862) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -5861) (5836 . 5837) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -5836) (5833 . 5834) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -5833) (5821 . 5822) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -5821) (5712 . 5713) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -5712) (5605 . 5606) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -5605) (5564 . 5565) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -5564) (5467 . 5468) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -5467) (5366 . 5367) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -5366) (5269 . 5270) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -5269) (5169 . 5170) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -5169) (5065 . 5066) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -5065) (4960 . 4961) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -4960) (4843 . 4844) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -4843) (4824 . 4825) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -4824) (4721 . 4722) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -4721) (4607 . 4608) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -4607) 4497) nil (25774 61914 340898 125000) 0 nil])
([nil nil ((6456 . 6457) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -6456) (6454 . 6455) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -6454) (6426 . 6427) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -6426) (6326 . 6327) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -6326) (6286 . 6287) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -6286) 6176) nil (25774 61914 340891 417000) 0 nil])
([nil nil ((#("To introduce self-attention" 0 27 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4498) (undo-tree-id50046 . 27) (undo-tree-id50047 . -26)) nil (25774 61914 340889 91000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4498) (undo-tree-id50043 . 2) (undo-tree-id50044 . -1) (undo-tree-id50045 . -2)) nil (25774 61914 340887 5000) 0 nil])
([nil nil ((#("let" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4498) (undo-tree-id50040 . 3) (undo-tree-id50041 . -2) (undo-tree-id50042 . -3)) nil (25774 61914 340884 226000) 0 nil])
([nil nil ((#("’" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4498) (undo-tree-id50038 . 1) (undo-tree-id50039 . -1)) nil (25774 61914 340881 444000) 0 nil])
([nil nil ((#("s " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4498) (undo-tree-id50034 . 2) (undo-tree-id50035 . -1) (undo-tree-id50036 . 2) (undo-tree-id50037 . -2)) nil (25774 61914 340879 137000) 0 nil])
([nil nil ((4498 . 4499) (#("a" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4498)) nil (25774 61914 340868 625000) 0 nil])
([nil nil ((6436 . 6437)) nil (25774 61914 340862 945000) 0 nil])
([nil nil ((#("we have " 0 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4505) (undo-tree-id50389 . -7) (undo-tree-id50390 . -7) (undo-tree-id50391 . -7) (undo-tree-id50392 . -7) (undo-tree-id50393 . -8) (undo-tree-id50394 . -7) (undo-tree-id50395 . -1) (undo-tree-id50396 . -1) (undo-tree-id50397 . -1) (undo-tree-id50398 . -1) (undo-tree-id50399 . -1) (undo-tree-id50400 . -1) (undo-tree-id50401 . -1) (undo-tree-id50402 . -1) (undo-tree-id50403 . -1) (undo-tree-id50404 . -1) (undo-tree-id50405 . -1) (undo-tree-id50406 . -1) (undo-tree-id50407 . -1) (undo-tree-id50408 . -1) (undo-tree-id50409 . -1) (undo-tree-id50410 . -1) (undo-tree-id50411 . -1) (undo-tree-id50412 . -1) (undo-tree-id50413 . -1) (undo-tree-id50414 . -1) (undo-tree-id50415 . -1) (undo-tree-id50416 . -1) (undo-tree-id50417 . -1) (undo-tree-id50418 . -1) (undo-tree-id50419 . -1) (undo-tree-id50420 . -1) (undo-tree-id50421 . -6) (undo-tree-id50422 . -6) (undo-tree-id50423 . -6) (undo-tree-id50424 . -6) (undo-tree-id50425 . -6) (undo-tree-id50426 . -6) (undo-tree-id50427 . -6) (undo-tree-id50428 . -6) (undo-tree-id50429 . -6) (undo-tree-id50430 . -6) (undo-tree-id50431 . -6) (undo-tree-id50432 . -6) (undo-tree-id50433 . -6) (undo-tree-id50434 . -6) (undo-tree-id50435 . -6) (undo-tree-id50436 . -6) (undo-tree-id50437 . -6) (undo-tree-id50438 . -6) (undo-tree-id50439 . -6) (undo-tree-id50440 . -6) (undo-tree-id50441 . -6) (undo-tree-id50442 . -6) (undo-tree-id50443 . -6) (undo-tree-id50444 . -6) (undo-tree-id50445 . -6) (undo-tree-id50446 . -6) (undo-tree-id50447 . -6) (undo-tree-id50448 . -6) (undo-tree-id50449 . -6) (undo-tree-id50450 . -6) (undo-tree-id50451 . -6) (undo-tree-id50452 . -7) (undo-tree-id50453 . -7) (undo-tree-id50454 . -7) (undo-tree-id50455 . -7) (undo-tree-id50456 . -7) (undo-tree-id50457 . -7) (undo-tree-id50458 . -7) (undo-tree-id50459 . -7) (undo-tree-id50460 . -7) (undo-tree-id50461 . -7) (undo-tree-id50462 . -7) (undo-tree-id50463 . -7) (undo-tree-id50464 . -7) (undo-tree-id50465 . -7) (undo-tree-id50466 . -7) (undo-tree-id50467 . -7) (undo-tree-id50468 . -7) (undo-tree-id50469 . -7) (undo-tree-id50470 . -7) (undo-tree-id50471 . -7) (undo-tree-id50472 . -7) (undo-tree-id50473 . -7) (undo-tree-id50474 . -7) (undo-tree-id50475 . -7) (undo-tree-id50476 . -7) (undo-tree-id50477 . -7) (undo-tree-id50478 . -7) (undo-tree-id50479 . -8) 4512 (t 25774 61914 392896 111000)) nil (25774 61941 584351 56000) 0 nil])
([nil nil ((4503 . 4506) (#("r" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -4503) (undo-tree-id50348 . -1) (undo-tree-id50349 . -1) (undo-tree-id50350 . -1) (undo-tree-id50351 . -1) (undo-tree-id50352 . -1) (undo-tree-id50353 . -1) (undo-tree-id50354 . -1) (undo-tree-id50355 . -1) (undo-tree-id50356 . -1) (undo-tree-id50357 . -1) (undo-tree-id50358 . -1) (undo-tree-id50359 . -1) (undo-tree-id50360 . -1) (undo-tree-id50361 . -1) (undo-tree-id50362 . -1) (undo-tree-id50363 . -1) (undo-tree-id50364 . -1) (undo-tree-id50365 . -1) (undo-tree-id50366 . -1) (undo-tree-id50367 . -1) (undo-tree-id50368 . -1) (undo-tree-id50369 . -1) (undo-tree-id50370 . -1) (undo-tree-id50371 . -1) (undo-tree-id50372 . -1) (undo-tree-id50373 . -1) (undo-tree-id50374 . -1) (#("d" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -4504) (undo-tree-id50375 . -1) (undo-tree-id50376 . -1) (undo-tree-id50377 . -1) (undo-tree-id50378 . -1) (undo-tree-id50379 . -1) (undo-tree-id50380 . -1) (undo-tree-id50381 . -1) (undo-tree-id50382 . -1) 4505 (4498 . 4505) (#("i" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -4498) (undo-tree-id50383 . -1) (undo-tree-id50384 . -1) 4499 (4498 . 4499) (#("Assume" 0 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4498) (undo-tree-id50385 . 6) (undo-tree-id50386 . -5) (undo-tree-id50387 . -6) (undo-tree-id50388 . -6)) nil (25774 61941 584280 711000) 0 nil])
([nil nil ((#(", 𝒙𝒙(1) , … , 𝒙𝒙(𝑇𝑇) ," 0 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4536) (undo-tree-id50083 . -21) (undo-tree-id50084 . -21) (undo-tree-id50085 . -21) (undo-tree-id50086 . -21) (undo-tree-id50087 . -22) (undo-tree-id50088 . -21) (undo-tree-id50089 . -3) (undo-tree-id50090 . -3) (undo-tree-id50091 . -3) (undo-tree-id50092 . -3) (undo-tree-id50093 . -3) (undo-tree-id50094 . -3) (undo-tree-id50095 . -3) (undo-tree-id50096 . -3) (undo-tree-id50097 . -3) (undo-tree-id50098 . -3) (undo-tree-id50099 . -3) (undo-tree-id50100 . -3) (undo-tree-id50101 . -3) (undo-tree-id50102 . -3) (undo-tree-id50103 . -3) (undo-tree-id50104 . -3) (undo-tree-id50105 . -3) (undo-tree-id50106 . -3) (undo-tree-id50107 . -3) (undo-tree-id50108 . -3) (undo-tree-id50109 . -3) (undo-tree-id50110 . -4) (undo-tree-id50111 . -4) (undo-tree-id50112 . -4) (undo-tree-id50113 . -4) (undo-tree-id50114 . -4) (undo-tree-id50115 . -4) (undo-tree-id50116 . -4) (undo-tree-id50117 . -4) (undo-tree-id50118 . -4) (undo-tree-id50119 . -4) (undo-tree-id50120 . -4) (undo-tree-id50121 . -4) (undo-tree-id50122 . -4) (undo-tree-id50123 . -4) (undo-tree-id50124 . -4) (undo-tree-id50125 . -4) (undo-tree-id50126 . -4) (undo-tree-id50127 . -4) (undo-tree-id50128 . -4) (undo-tree-id50129 . -4) (undo-tree-id50130 . -4) (undo-tree-id50131 . -5) (undo-tree-id50132 . -5) (undo-tree-id50133 . -5) (undo-tree-id50134 . -5) (undo-tree-id50135 . -5) (undo-tree-id50136 . -5) (undo-tree-id50137 . -5) (undo-tree-id50138 . -5) (undo-tree-id50139 . -5) (undo-tree-id50140 . -5) (undo-tree-id50141 . -5) (undo-tree-id50142 . -5) (undo-tree-id50143 . -5) (undo-tree-id50144 . -5) (undo-tree-id50145 . -5) (undo-tree-id50146 . -5) (undo-tree-id50147 . -5) (undo-tree-id50148 . -5) (undo-tree-id50149 . -5) (undo-tree-id50150 . -5) (undo-tree-id50151 . -5) (undo-tree-id50152 . -6) (undo-tree-id50153 . -6) (undo-tree-id50154 . -6) (undo-tree-id50155 . -6) (undo-tree-id50156 . -6) (undo-tree-id50157 . -6) (undo-tree-id50158 . -6) (undo-tree-id50159 . -6) (undo-tree-id50160 . -6) (undo-tree-id50161 . -6) (undo-tree-id50162 . -6) (undo-tree-id50163 . -6) (undo-tree-id50164 . -6) (undo-tree-id50165 . -6) (undo-tree-id50166 . -6) (undo-tree-id50167 . -6) (undo-tree-id50168 . -6) (undo-tree-id50169 . -6) (undo-tree-id50170 . -6) (undo-tree-id50171 . -6) (undo-tree-id50172 . -6) (undo-tree-id50173 . -8) (undo-tree-id50174 . -8) (undo-tree-id50175 . -8) (undo-tree-id50176 . -8) (undo-tree-id50177 . -8) (undo-tree-id50178 . -8) (undo-tree-id50179 . -8) (undo-tree-id50180 . -8) (undo-tree-id50181 . -8) (undo-tree-id50182 . -8) (undo-tree-id50183 . -8) (undo-tree-id50184 . -8) (undo-tree-id50185 . -8) (undo-tree-id50186 . -8) (undo-tree-id50187 . -8) (undo-tree-id50188 . -8) (undo-tree-id50189 . -8) (undo-tree-id50190 . -8) (undo-tree-id50191 . -8) (undo-tree-id50192 . -8) (undo-tree-id50193 . -8) (undo-tree-id50194 . -10) (undo-tree-id50195 . -10) (undo-tree-id50196 . -10) (undo-tree-id50197 . -10) (undo-tree-id50198 . -10) (undo-tree-id50199 . -10) (undo-tree-id50200 . -10) (undo-tree-id50201 . -10) (undo-tree-id50202 . -10) (undo-tree-id50203 . -10) (undo-tree-id50204 . -10) (undo-tree-id50205 . -10) (undo-tree-id50206 . -10) (undo-tree-id50207 . -10) (undo-tree-id50208 . -10) (undo-tree-id50209 . -10) (undo-tree-id50210 . -10) (undo-tree-id50211 . -10) (undo-tree-id50212 . -10) (undo-tree-id50213 . -10) (undo-tree-id50214 . -10) (undo-tree-id50215 . -12) (undo-tree-id50216 . -12) (undo-tree-id50217 . -12) (undo-tree-id50218 . -12) (undo-tree-id50219 . -12) (undo-tree-id50220 . -12) (undo-tree-id50221 . -12) (undo-tree-id50222 . -12) (undo-tree-id50223 . -12) (undo-tree-id50224 . -12) (undo-tree-id50225 . -12) (undo-tree-id50226 . -12) (undo-tree-id50227 . -12) (undo-tree-id50228 . -12) (undo-tree-id50229 . -12) (undo-tree-id50230 . -12) (undo-tree-id50231 . -12) (undo-tree-id50232 . -12) (undo-tree-id50233 . -12) (undo-tree-id50234 . -12) (undo-tree-id50235 . -12) (undo-tree-id50236 . -15) (undo-tree-id50237 . -15) (undo-tree-id50238 . -15) (undo-tree-id50239 . -15) (undo-tree-id50240 . -15) (undo-tree-id50241 . -15) (undo-tree-id50242 . -15) (undo-tree-id50243 . -15) (undo-tree-id50244 . -15) (undo-tree-id50245 . -15) (undo-tree-id50246 . -15) (undo-tree-id50247 . -15) (undo-tree-id50248 . -15) (undo-tree-id50249 . -15) (undo-tree-id50250 . -15) (undo-tree-id50251 . -15) (undo-tree-id50252 . -15) (undo-tree-id50253 . -15) (undo-tree-id50254 . -15) (undo-tree-id50255 . -15) (undo-tree-id50256 . -15) (undo-tree-id50257 . -16) (undo-tree-id50258 . -16) (undo-tree-id50259 . -16) (undo-tree-id50260 . -16) (undo-tree-id50261 . -16) (undo-tree-id50262 . -16) (undo-tree-id50263 . -16) (undo-tree-id50264 . -16) (undo-tree-id50265 . -16) (undo-tree-id50266 . -16) (undo-tree-id50267 . -16) (undo-tree-id50268 . -16) (undo-tree-id50269 . -16) (undo-tree-id50270 . -16) (undo-tree-id50271 . -16) (undo-tree-id50272 . -16) (undo-tree-id50273 . -16) (undo-tree-id50274 . -16) (undo-tree-id50275 . -16) (undo-tree-id50276 . -16) (undo-tree-id50277 . -16) (undo-tree-id50278 . -18) (undo-tree-id50279 . -18) (undo-tree-id50280 . -18) (undo-tree-id50281 . -18) (undo-tree-id50282 . -18) (undo-tree-id50283 . -18) (undo-tree-id50284 . -18) (undo-tree-id50285 . -18) (undo-tree-id50286 . -18) (undo-tree-id50287 . -18) (undo-tree-id50288 . -18) (undo-tree-id50289 . -18) (undo-tree-id50290 . -18) (undo-tree-id50291 . -18) (undo-tree-id50292 . -18) (undo-tree-id50293 . -18) (undo-tree-id50294 . -18) (undo-tree-id50295 . -18) (undo-tree-id50296 . -18) (undo-tree-id50297 . -18) (undo-tree-id50298 . -18) (undo-tree-id50299 . -19) (undo-tree-id50300 . -19) (undo-tree-id50301 . -19) (undo-tree-id50302 . -19) (undo-tree-id50303 . -19) (undo-tree-id50304 . -19) (undo-tree-id50305 . -19) (undo-tree-id50306 . -19) (undo-tree-id50307 . -19) (undo-tree-id50308 . -19) (undo-tree-id50309 . -19) (undo-tree-id50310 . -19) (undo-tree-id50311 . -19) (undo-tree-id50312 . -19) (undo-tree-id50313 . -19) (undo-tree-id50314 . -19) (undo-tree-id50315 . -19) (undo-tree-id50316 . -19) (undo-tree-id50317 . -19) (undo-tree-id50318 . -19) (undo-tree-id50319 . -19) (undo-tree-id50320 . -21) (undo-tree-id50321 . -21) (undo-tree-id50322 . -21) (undo-tree-id50323 . -21) (undo-tree-id50324 . -21) (undo-tree-id50325 . -21) (undo-tree-id50326 . -21) (undo-tree-id50327 . -21) (undo-tree-id50328 . -21) (undo-tree-id50329 . -21) (undo-tree-id50330 . -21) (undo-tree-id50331 . -21) (undo-tree-id50332 . -21) (undo-tree-id50333 . -21) (undo-tree-id50334 . -21) (undo-tree-id50335 . -21) (undo-tree-id50336 . -21) (undo-tree-id50337 . -21) (undo-tree-id50338 . -21) (undo-tree-id50339 . -21) (undo-tree-id50340 . -21) (undo-tree-id50341 . -21) (undo-tree-id50342 . -21) (undo-tree-id50343 . -21) (undo-tree-id50344 . -21) (undo-tree-id50345 . -21) (undo-tree-id50346 . -21) (undo-tree-id50347 . -22) 4557) nil (25774 61941 584235 989000) 0 nil])
([nil nil ((4536 . 4537)) nil (25774 61941 584756 589000) 0 nil])
([nil nil ((#(", 𝒛𝒛(1) , 𝒛𝒛(2) , … , 𝒛𝒛(𝑇𝑇) " 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 4 29 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4567) (undo-tree-id53123 . -28) (undo-tree-id53124 . -3) (undo-tree-id53125 . 25) (undo-tree-id53126 . -3) (undo-tree-id53127 . -3) (undo-tree-id53128 . -3) (undo-tree-id53129 . -3) (undo-tree-id53130 . -3) (undo-tree-id53131 . -3) (undo-tree-id53132 . -3) (undo-tree-id53133 . -3) (undo-tree-id53134 . -3) (undo-tree-id53135 . -3) (undo-tree-id53136 . -3) (undo-tree-id53137 . -3) (undo-tree-id53138 . -3) (undo-tree-id53139 . -3) (undo-tree-id53140 . -3) (undo-tree-id53141 . -3) (undo-tree-id53142 . -3) (undo-tree-id53143 . -3) (undo-tree-id53144 . -3) (undo-tree-id53145 . -3) (undo-tree-id53146 . -3) (undo-tree-id53147 . -3) (undo-tree-id53148 . -3) (undo-tree-id53149 . -3) (undo-tree-id53150 . -3) (undo-tree-id53151 . -3) (undo-tree-id53152 . -3) (undo-tree-id53153 . -28) (undo-tree-id53154 . -3) (undo-tree-id53155 . -3) (undo-tree-id53156 . -3) (undo-tree-id53157 . -3) (undo-tree-id53158 . -3) (undo-tree-id53159 . -3) (undo-tree-id53160 . -3) (undo-tree-id53161 . -3) (undo-tree-id53162 . -3) (undo-tree-id53163 . -3) (undo-tree-id53164 . -3) (undo-tree-id53165 . -3) (undo-tree-id53166 . -3) (undo-tree-id53167 . -3) (undo-tree-id53168 . -3) (undo-tree-id53169 . -3) (undo-tree-id53170 . -3) (undo-tree-id53171 . -3) (undo-tree-id53172 . -3) (undo-tree-id53173 . -3) (undo-tree-id53174 . -3) (undo-tree-id53175 . -3) (undo-tree-id53176 . -2) (undo-tree-id53177 . -2) (undo-tree-id53178 . -2) (undo-tree-id53179 . -2) (undo-tree-id53180 . -2) (undo-tree-id53181 . -2) (undo-tree-id53182 . -2) (undo-tree-id53183 . -2) (undo-tree-id53184 . -2) (undo-tree-id53185 . -2) (undo-tree-id53186 . -2) (undo-tree-id53187 . -2) (undo-tree-id53188 . -2) (undo-tree-id53189 . -2) (undo-tree-id53190 . -2) (undo-tree-id53191 . -2) (undo-tree-id53192 . -29)) nil (25774 62011 26815 436000) 0 nil] [nil nil ((#(", 𝒛𝒛" 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4567) (undo-tree-id50049 . -3) (undo-tree-id50050 . -3) (undo-tree-id50051 . -3) (undo-tree-id50052 . -3) (undo-tree-id50053 . -4) (undo-tree-id50054 . -3) (undo-tree-id50055 . -3) (undo-tree-id50056 . -3) (undo-tree-id50057 . -3) (undo-tree-id50058 . -3) (undo-tree-id50059 . -3) (undo-tree-id50060 . -3) (undo-tree-id50061 . -3) (undo-tree-id50062 . -3) (undo-tree-id50063 . -3) (undo-tree-id50064 . -3) (undo-tree-id50065 . -3) (undo-tree-id50066 . -3) (undo-tree-id50067 . -3) (undo-tree-id50068 . -3) (undo-tree-id50069 . -3) (undo-tree-id50070 . -3) (undo-tree-id50071 . -3) (undo-tree-id50072 . -3) (undo-tree-id50073 . -3) (undo-tree-id50074 . -3) (undo-tree-id50075 . -3) (undo-tree-id50076 . -3) (undo-tree-id50077 . -3) (undo-tree-id50078 . -3) (undo-tree-id50079 . -3) (undo-tree-id50080 . -3) (undo-tree-id50081 . -3) (undo-tree-id50082 . -4) 4570) ((4567 . 4571)) (25774 61941 579822 998000) 0 nil])
([nil nil ((4496 . 6382) (#("- To avoid confusion, we will use 𝒐𝒐 as the final output of the whole transformer model and 𝒛𝒛 as the output of the self-attention layer because it is an intermediate step in the model. Each ith element in these sequences, 𝒙𝒙(𝑖𝑖) and 𝒛𝒛(𝑖𝑖), are vectors of size d (that is, 𝒙𝒙(𝑖𝑖) ∈ 𝑅𝑅𝑑𝑑 ) representing the feature information for the input at position i, which is similar to RNNs. Then, for a seq2seq task, the goal of self-attention is to model the dependencies of the current input element to all other input elements. To achieve this, self-attention mechanisms are composed of three stages. First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)
- Consider an input sequence of length T, as well as an output sequence." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 25 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 25 63 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 63 64 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 64 166 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 166 167 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 167 185 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 185 186 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 186 294 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 294 302 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 302 303 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 303 338 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 338 365 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 365 367 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 367 370 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 370 371 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 371 373 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 373 379 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 379 380 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 380 381 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 381 382 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 382 383 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 383 384 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 384 385 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 385 386 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 386 387 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 387 400 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 400 401 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 401 404 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 404 407 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 407 408 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 408 429 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 429 511 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 511 512 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 512 525 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 525 611 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 611 612 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 612 708 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 708 709 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 709 803 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 803 809 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 809 810 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 810 906 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 906 907 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 907 947 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 947 948 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 948 1054 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1054 1055 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1055 1163 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1163 1164 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1164 1175 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1175 1176 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1176 1178 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1178 1179 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1179 1203 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1203 1204 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1204 1208 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1208 1209 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1209 1310 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1310 1315 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1315 1316 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1316 1413 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1413 1414 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1414 1518 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1518 1519 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1519 1628 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1628 1629 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1629 1668 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1668 1669 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1669 1768 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1768 1769 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1769 1796 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1796 1797 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1797 1798 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1798 1799 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1799 1812 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1812 1813 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1813 1814 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1814 1815 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil composition (0 1 [8226])) 1815 1824 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1824 1863 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1863 1864 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1864 1885 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1885 1886 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4496) (undo-tree-id52573 . 31) (undo-tree-id52574 . -1885) (undo-tree-id52575 . -1885) (undo-tree-id52576 . -1885) (undo-tree-id52577 . -1885) (undo-tree-id52578 . 1) (undo-tree-id52579 . -1885) (undo-tree-id52580 . -1885) (undo-tree-id52581 . -1820) (undo-tree-id52582 . -1886) (undo-tree-id52583 . -1824) (undo-tree-id52584 . -1886) (undo-tree-id52585 . -1825) (undo-tree-id52586 . -1825) (undo-tree-id52587 . -1825) (undo-tree-id52588 . -1825) (undo-tree-id52589 . -1825) (undo-tree-id52590 . -1825) (undo-tree-id52591 . -1825) (undo-tree-id52592 . -1825) (undo-tree-id52593 . -1825) (undo-tree-id52594 . -1825) (undo-tree-id52595 . -1825) (undo-tree-id52596 . -1825) (undo-tree-id52597 . -1825) (undo-tree-id52598 . -1825) (undo-tree-id52599 . -1825) (undo-tree-id52600 . -1825) (undo-tree-id52601 . -1825) (undo-tree-id52602 . -1825) (undo-tree-id52603 . -1825) (undo-tree-id52604 . -1825) (undo-tree-id52605 . -1825) (undo-tree-id52606 . -1825) (undo-tree-id52607 . -1825) (undo-tree-id52608 . -1825) (undo-tree-id52609 . -1825) (undo-tree-id52610 . -1825) (undo-tree-id52611 . -1825) (undo-tree-id52612 . -1825) (undo-tree-id52613 . -1825) (undo-tree-id52614 . -1825) (undo-tree-id52615 . -1825) (undo-tree-id52616 . -1825) (undo-tree-id52617 . -1825) (undo-tree-id52618 . -1825) (undo-tree-id52619 . -1825) (undo-tree-id52620 . -1825) (undo-tree-id52621 . -1825) (undo-tree-id52622 . -1825) (undo-tree-id52623 . -1825) (undo-tree-id52624 . -1825) (undo-tree-id52625 . -1825) (undo-tree-id52626 . -1825) (undo-tree-id52627 . -1825) (undo-tree-id52628 . -1825) (undo-tree-id52629 . -1825) (undo-tree-id52630 . -1825) (undo-tree-id52631 . -1825) (undo-tree-id52632 . -1825) (undo-tree-id52633 . -1825) (undo-tree-id52634 . -1825) (undo-tree-id52635 . -1825) (undo-tree-id52636 . -1825) (undo-tree-id52637 . -1825) (undo-tree-id52638 . -1825) (undo-tree-id52639 . -1825) (undo-tree-id52640 . -1825) (undo-tree-id52641 . -1825) (undo-tree-id52642 . -1825) (undo-tree-id52643 . -1825) (undo-tree-id52644 . -1825) (undo-tree-id52645 . -1825) (undo-tree-id52646 . -1825) (undo-tree-id52647 . -1825) (undo-tree-id52648 . -1825) (undo-tree-id52649 . -1825) (undo-tree-id52650 . -1825) (undo-tree-id52651 . -1825) (undo-tree-id52652 . -1825) (undo-tree-id52653 . -1825) (undo-tree-id52654 . -1825) (undo-tree-id52655 . -1825) (undo-tree-id52656 . -1825) (undo-tree-id52657 . -1825) (undo-tree-id52658 . -1825) (undo-tree-id52659 . -1825) (undo-tree-id52660 . -1825) (undo-tree-id52661 . -1825) (undo-tree-id52662 . -1825) (undo-tree-id52663 . -1825) (undo-tree-id52664 . -1825) (undo-tree-id52665 . -1825) (undo-tree-id52666 . -1825) (undo-tree-id52667 . -1825) (undo-tree-id52668 . -1821) (undo-tree-id52669 . -1821) (undo-tree-id52670 . -1821) (undo-tree-id52671 . -1821) (undo-tree-id52672 . -1821) (undo-tree-id52673 . -1821) (undo-tree-id52674 . -1821) (undo-tree-id52675 . -1821) (undo-tree-id52676 . -1821) (undo-tree-id52677 . -1821) (undo-tree-id52678 . -1821) (undo-tree-id52679 . -1821) (undo-tree-id52680 . -1821) (undo-tree-id52681 . -1821) (undo-tree-id52682 . -1821) (undo-tree-id52683 . -1821) (undo-tree-id52684 . -1821) (undo-tree-id52685 . -1821) (undo-tree-id52686 . -1821) (undo-tree-id52687 . -1821) (undo-tree-id52688 . -1821) (undo-tree-id52689 . -1821) (undo-tree-id52690 . -1821) (undo-tree-id52691 . -1821) (undo-tree-id52692 . -1854) (undo-tree-id52693 . -1854) (undo-tree-id52694 . -1854) (undo-tree-id52695 . -1854) (undo-tree-id52696 . -1854) (undo-tree-id52697 . -1854) (undo-tree-id52698 . -1854) (undo-tree-id52699 . -1854) (undo-tree-id52700 . -1854) (undo-tree-id52701 . -1854) (undo-tree-id52702 . -1854) (undo-tree-id52703 . -1854) (undo-tree-id52704 . -1854) (undo-tree-id52705 . -1854) (undo-tree-id52706 . -1854) (undo-tree-id52707 . -1854) (undo-tree-id52708 . -1854) (undo-tree-id52709 . -1854) (undo-tree-id52710 . -1854) (undo-tree-id52711 . -1854) (undo-tree-id52712 . -1854) (undo-tree-id52713 . -1854) (undo-tree-id52714 . -1854) (undo-tree-id52715 . -1854) (undo-tree-id52716 . -1854) (undo-tree-id52717 . -1854) (undo-tree-id52718 . -1854) (undo-tree-id52719 . -1854) (undo-tree-id52720 . -1854) (undo-tree-id52721 . -1854) (undo-tree-id52722 . -1854) (undo-tree-id52723 . -1854) (undo-tree-id52724 . -1854) (undo-tree-id52725 . -1854) (undo-tree-id52726 . -1854) (undo-tree-id52727 . -1854) (undo-tree-id52728 . -1854) (undo-tree-id52729 . -1854) (undo-tree-id52730 . -1854) (undo-tree-id52731 . -1854) (undo-tree-id52732 . -1854) (undo-tree-id52733 . -1854) (undo-tree-id52734 . -1854) (undo-tree-id52735 . -1854) (undo-tree-id52736 . -1854) (undo-tree-id52737 . -1854) (undo-tree-id52738 . -1854) (undo-tree-id52739 . -1854) (undo-tree-id52740 . -1854) (undo-tree-id52741 . -1854) (undo-tree-id52742 . -1854) (undo-tree-id52743 . -1854) (undo-tree-id52744 . -1854) (undo-tree-id52745 . -1854) (undo-tree-id52746 . -1854) (undo-tree-id52747 . -1854) (undo-tree-id52748 . -1854) (undo-tree-id52749 . -1854) (undo-tree-id52750 . -1854) (undo-tree-id52751 . -1854) (undo-tree-id52752 . -1854) (undo-tree-id52753 . -1854) (undo-tree-id52754 . -1854) (undo-tree-id52755 . -1854) (undo-tree-id52756 . -1854) (undo-tree-id52757 . -1854) (undo-tree-id52758 . -1854) (undo-tree-id52759 . -1854) (undo-tree-id52760 . -1854) (undo-tree-id52761 . -1854) (undo-tree-id52762 . -1854) (undo-tree-id52763 . -1854) (undo-tree-id52764 . -1854) (undo-tree-id52765 . -1854) (undo-tree-id52766 . -1854) (undo-tree-id52767 . -1854) (undo-tree-id52768 . -1854) (undo-tree-id52769 . -1854) (undo-tree-id52770 . -1854) (undo-tree-id52771 . -1854) (undo-tree-id52772 . -1854) (undo-tree-id52773 . -1854) (undo-tree-id52774 . -1854) (undo-tree-id52775 . -1854) (undo-tree-id52776 . -1854) (undo-tree-id52777 . -1854) (undo-tree-id52778 . -1854) (undo-tree-id52779 . -1854) (undo-tree-id52780 . -1854) (undo-tree-id52781 . -1854) (undo-tree-id52782 . -1854) (undo-tree-id52783 . -1854) (undo-tree-id52784 . -1854) (undo-tree-id52785 . -1854) (undo-tree-id52786 . -1854) (undo-tree-id52787 . -1854) (undo-tree-id52788 . -1854) (undo-tree-id52789 . -1854) (undo-tree-id52790 . -1854) (undo-tree-id52791 . -1854) (undo-tree-id52792 . -1854) (undo-tree-id52793 . -1854) (undo-tree-id52794 . -1854) (undo-tree-id52795 . -1854) (undo-tree-id52796 . -1854) (undo-tree-id52797 . -1854) (undo-tree-id52798 . -1854) (undo-tree-id52799 . -1854) (undo-tree-id52800 . -1854) (undo-tree-id52801 . -1854) (undo-tree-id52802 . -1854) (undo-tree-id52803 . -1854) (undo-tree-id52804 . -1854) (undo-tree-id52805 . -1854) (undo-tree-id52806 . -1854) (undo-tree-id52807 . -1854) (undo-tree-id52808 . -1854) (undo-tree-id52809 . -1854) (undo-tree-id52810 . -1854) (undo-tree-id52811 . -1854) (undo-tree-id52812 . -1854) (undo-tree-id52813 . -1854) (undo-tree-id52814 . -1854) (undo-tree-id52815 . -1854) (undo-tree-id52816 . -1854) (undo-tree-id52817 . -1854) (undo-tree-id52818 . -1854) (undo-tree-id52819 . -1854) (undo-tree-id52820 . -1854) (undo-tree-id52821 . -1854) (undo-tree-id52822 . -1854) (undo-tree-id52823 . -1854) (undo-tree-id52824 . -1854) (undo-tree-id52825 . -1854) (undo-tree-id52826 . -1854) (undo-tree-id52827 . -1854) (undo-tree-id52828 . -1854) (undo-tree-id52829 . -1854) (undo-tree-id52830 . -1854) (undo-tree-id52831 . -1854) (undo-tree-id52832 . -1854) (undo-tree-id52833 . -1854) (undo-tree-id52834 . -1854) (undo-tree-id52835 . -1854) (undo-tree-id52836 . -1854) (undo-tree-id52837 . -1854) (undo-tree-id52838 . -1854) (undo-tree-id52839 . -1854) (undo-tree-id52840 . -1854) (undo-tree-id52841 . -1854) (undo-tree-id52842 . -1854) (undo-tree-id52843 . -1854) (undo-tree-id52844 . -1854) (undo-tree-id52845 . -1854) (undo-tree-id52846 . -1854) (undo-tree-id52847 . -1854) (undo-tree-id52848 . -1854) (undo-tree-id52849 . -1854) (undo-tree-id52850 . -1854) (undo-tree-id52851 . -1854) (undo-tree-id52852 . -1854) (undo-tree-id52853 . -1854) (undo-tree-id52854 . -1854) (undo-tree-id52855 . -1854) (undo-tree-id52856 . -1854) (undo-tree-id52857 . -1854) (undo-tree-id52858 . -1854) (undo-tree-id52859 . -1854) (undo-tree-id52860 . -1854) (undo-tree-id52861 . -1854) (undo-tree-id52862 . -1854) (undo-tree-id52863 . -1854) (undo-tree-id52864 . -1854) (undo-tree-id52865 . -1854) (undo-tree-id52866 . -1854) (undo-tree-id52867 . -1854) (undo-tree-id52868 . -1854) (undo-tree-id52869 . -1854) (undo-tree-id52870 . -1854) (undo-tree-id52871 . -1854) (undo-tree-id52872 . -1854) (undo-tree-id52873 . -1854) (undo-tree-id52874 . -1854) (undo-tree-id52875 . -1854) (undo-tree-id52876 . -1854) (undo-tree-id52877 . -1854) (undo-tree-id52878 . -1854) (undo-tree-id52879 . -1854) (undo-tree-id52880 . -1854) (undo-tree-id52881 . -1854) (undo-tree-id52882 . -1854) (undo-tree-id52883 . -1854) (undo-tree-id52884 . -1854) (undo-tree-id52885 . -1854) (undo-tree-id52886 . -1854) (undo-tree-id52887 . -1854) (undo-tree-id52888 . -1854) (undo-tree-id52889 . -1854) (undo-tree-id52890 . -1854) (undo-tree-id52891 . -1854) (undo-tree-id52892 . -1854) (undo-tree-id52893 . -1854) (undo-tree-id52894 . -1854) (undo-tree-id52895 . -1854) (undo-tree-id52896 . -1854) (undo-tree-id52897 . -1854) (undo-tree-id52898 . -1854) (undo-tree-id52899 . -1854) (undo-tree-id52900 . -1854) (undo-tree-id52901 . -1854) (undo-tree-id52902 . -1854) (undo-tree-id52903 . -1854) (undo-tree-id52904 . -1854) (undo-tree-id52905 . -1854) (undo-tree-id52906 . -1854) (undo-tree-id52907 . -1854) (undo-tree-id52908 . -1854) (undo-tree-id52909 . -1854) (undo-tree-id52910 . -1854) (undo-tree-id52911 . -1854) (undo-tree-id52912 . -1854) (undo-tree-id52913 . -1854) (undo-tree-id52914 . -1854) (undo-tree-id52915 . -1854) (undo-tree-id52916 . -1854) (undo-tree-id52917 . -1854) (undo-tree-id52918 . -1854) (undo-tree-id52919 . -1854) (undo-tree-id52920 . -1854) (undo-tree-id52921 . -1854) (undo-tree-id52922 . -1854) (undo-tree-id52923 . -1854) (undo-tree-id52924 . -1854) (undo-tree-id52925 . -1854) (undo-tree-id52926 . -1854) (undo-tree-id52927 . -1854) (undo-tree-id52928 . -1854) (undo-tree-id52929 . -1854) (undo-tree-id52930 . -1854) (undo-tree-id52931 . -1854) (undo-tree-id52932 . -1854) (undo-tree-id52933 . -1854) (undo-tree-id52934 . -1854) (undo-tree-id52935 . -1854) (undo-tree-id52936 . -1854) (undo-tree-id52937 . -1854) (undo-tree-id52938 . -1854) (undo-tree-id52939 . -1854) (undo-tree-id52940 . -1854) (undo-tree-id52941 . -1854) (undo-tree-id52942 . -1854) (undo-tree-id52943 . -1854) (undo-tree-id52944 . -1854) (undo-tree-id52945 . -1854) (undo-tree-id52946 . -1854) (undo-tree-id52947 . -1854) (undo-tree-id52948 . -1854) (undo-tree-id52949 . -1885) (undo-tree-id52950 . -1885) (undo-tree-id52951 . -1885) (undo-tree-id52952 . -1885) (undo-tree-id52953 . -1885) (undo-tree-id52954 . -1885) (undo-tree-id52955 . -1885) (undo-tree-id52956 . -1885) (undo-tree-id52957 . -1885) (undo-tree-id52958 . -1885) (undo-tree-id52959 . -1885) (undo-tree-id52960 . -1885) (undo-tree-id52961 . -1885) (undo-tree-id52962 . -1885) (undo-tree-id52963 . -1885) (undo-tree-id52964 . -1885) (undo-tree-id52965 . -1885) (undo-tree-id52966 . -1885) (undo-tree-id52967 . -1885) (undo-tree-id52968 . -1885) (undo-tree-id52969 . -1885) (undo-tree-id52970 . -1885) (undo-tree-id52971 . -1885) (undo-tree-id52972 . -1885) (undo-tree-id52973 . -1885) (undo-tree-id52974 . -1885) (undo-tree-id52975 . -1885) (undo-tree-id52976 . -1885) (undo-tree-id52977 . -1885) (undo-tree-id52978 . -1885) (undo-tree-id52979 . -1885) (undo-tree-id52980 . -1885) (undo-tree-id52981 . -1885) (undo-tree-id52982 . -1885) (undo-tree-id52983 . -1885) (undo-tree-id52984 . -1885) (undo-tree-id52985 . -1885) (undo-tree-id52986 . -1885) (undo-tree-id52987 . -1885) (undo-tree-id52988 . -1885) (undo-tree-id52989 . -1885) (undo-tree-id52990 . -1885) (undo-tree-id52991 . -1885) (undo-tree-id52992 . -1885) (undo-tree-id52993 . -1885) (undo-tree-id52994 . -1885) (undo-tree-id52995 . -1885) (undo-tree-id52996 . -1885) (undo-tree-id52997 . -1885) (undo-tree-id52998 . -1885) (undo-tree-id52999 . -1885) (undo-tree-id53000 . -1885) (undo-tree-id53001 . -1885) (undo-tree-id53002 . -1885) (undo-tree-id53003 . -1885) (undo-tree-id53004 . -1885) (undo-tree-id53005 . -1885) (undo-tree-id53006 . -1885) (undo-tree-id53007 . -1885) (undo-tree-id53008 . -1885) (undo-tree-id53009 . -1885) (undo-tree-id53010 . -1885) (undo-tree-id53011 . -1885) (undo-tree-id53012 . -1885) (undo-tree-id53013 . -1885) (undo-tree-id53014 . -1885) (undo-tree-id53015 . -1885) (undo-tree-id53016 . -1885) (undo-tree-id53017 . -1885) (undo-tree-id53018 . -1885) (undo-tree-id53019 . -1885) (undo-tree-id53020 . -1885) (undo-tree-id53021 . -1885) (undo-tree-id53022 . -1885) (undo-tree-id53023 . -1885) (undo-tree-id53024 . -1885) (undo-tree-id53025 . -1885) (undo-tree-id53026 . -1885) (undo-tree-id53027 . -1885) (undo-tree-id53028 . -1885) (undo-tree-id53029 . -1885) (undo-tree-id53030 . -1885) (undo-tree-id53031 . -1885) (undo-tree-id53032 . -1885) (undo-tree-id53033 . -1885) (undo-tree-id53034 . -1885) (undo-tree-id53035 . -1885) (undo-tree-id53036 . -1885) (undo-tree-id53037 . -1885) (undo-tree-id53038 . -1885) (undo-tree-id53039 . -1885) (undo-tree-id53040 . -1885) (undo-tree-id53041 . -1885) (undo-tree-id53042 . -1885) (undo-tree-id53043 . -1885) (undo-tree-id53044 . -1885) (undo-tree-id53045 . -1885) (undo-tree-id53046 . -1885) (undo-tree-id53047 . -1885) (undo-tree-id53048 . -1885) (undo-tree-id53049 . -1885) (undo-tree-id53050 . -1885) (undo-tree-id53051 . -1885) (undo-tree-id53052 . -1885) (undo-tree-id53053 . -1885) (undo-tree-id53054 . -1885) (undo-tree-id53055 . -1885) (undo-tree-id53056 . -1885) (undo-tree-id53057 . -1885) (undo-tree-id53058 . -1885) (undo-tree-id53059 . -1885) (undo-tree-id53060 . -1885) (undo-tree-id53061 . -1885) (undo-tree-id53062 . -1885) (undo-tree-id53063 . -1885) (undo-tree-id53064 . -1885) (undo-tree-id53065 . -1885) (undo-tree-id53066 . -1885) (undo-tree-id53067 . -1885) (undo-tree-id53068 . -1885) (undo-tree-id53069 . -1885) (undo-tree-id53070 . -1885) (undo-tree-id53071 . -1885) (undo-tree-id53072 . -1885) (undo-tree-id53073 . -1885) (undo-tree-id53074 . -1885) (undo-tree-id53075 . -1885) (undo-tree-id53076 . -1885) (undo-tree-id53077 . -1885) (undo-tree-id53078 . -1885) (undo-tree-id53079 . -1885) (undo-tree-id53080 . -1885) (undo-tree-id53081 . -1885) (undo-tree-id53082 . -1885) (undo-tree-id53083 . -1885) (undo-tree-id53084 . -1885) (undo-tree-id53085 . -1885) (undo-tree-id53086 . -1885) (undo-tree-id53087 . -1885) (undo-tree-id53088 . -1885) (undo-tree-id53089 . -1885) (undo-tree-id53090 . -1885) (undo-tree-id53091 . -1885) (undo-tree-id53092 . -1885) (undo-tree-id53093 . -1885) (undo-tree-id53094 . -1885) (undo-tree-id53095 . -1886) (undo-tree-id53096 . -1886) (undo-tree-id53097 . -1886) (undo-tree-id53098 . -1886) (undo-tree-id53099 . -1886) (undo-tree-id53100 . -1886) (undo-tree-id53101 . -1886) (undo-tree-id53102 . -1886) (undo-tree-id53103 . -1886) (undo-tree-id53104 . -1886) (undo-tree-id53105 . -1886) (undo-tree-id53106 . -1886) (undo-tree-id53107 . -1886) (undo-tree-id53108 . -1886) (undo-tree-id53109 . -1886) (undo-tree-id53110 . -1886) (undo-tree-id53111 . -1886) (undo-tree-id53112 . -1886) (undo-tree-id53113 . -1886) (undo-tree-id53114 . -1886) (undo-tree-id53115 . -1886) (undo-tree-id53116 . -1886) (undo-tree-id53117 . -1886) (undo-tree-id53118 . -1886) (undo-tree-id53119 . -1814) (4496 . 6310) (#(" To avoid confusion, we will use 𝒐𝒐 as the final output of the whole transformer model and 𝒛𝒛 as the output of the self-attention layer because it is an intermediate step in the model. Each ith element in these sequences, 𝒙𝒙(𝑖𝑖) and 𝒛𝒛(𝑖𝑖), are vectors of size d (that is, 𝒙𝒙(𝑖𝑖) ∈ 𝑅𝑅𝑑𝑑 ) representing the feature information for the input at position i, which is similar to RNNs. Then, for a seq2seq task, the goal of self-attention is to model the dependencies of the current input element to all other input elements. To achieve this, self-attention mechanisms are composed of three stages. First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 24 62 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 62 63 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 63 165 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 165 166 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 166 184 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 184 185 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 185 293 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 293 301 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 301 302 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 302 337 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 337 364 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 364 366 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 366 369 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 369 370 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 370 372 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 372 378 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 378 379 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 379 380 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 380 381 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 381 382 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 382 383 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 383 384 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 384 385 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 385 386 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 386 399 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 399 400 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 400 403 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 403 406 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 406 407 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 407 428 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 428 510 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 510 511 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 511 524 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 524 610 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 610 611 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 611 707 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 707 708 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 708 802 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 802 808 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 808 809 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 809 905 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 905 906 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 906 946 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 946 947 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 947 1053 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1053 1054 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1054 1162 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1162 1163 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1163 1174 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1174 1175 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1175 1177 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1177 1178 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1178 1202 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1202 1203 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1203 1207 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1207 1208 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1208 1309 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1309 1314 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1314 1315 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1315 1412 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1412 1413 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1413 1517 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1517 1518 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1518 1627 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1627 1628 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1628 1667 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1667 1668 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1668 1767 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1767 1768 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1768 1795 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1795 1796 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1796 1797 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1797 1798 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1798 1811 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1811 1812 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4568) (undo-tree-id53120 . 1010) (undo-tree-id53121 . -807) (undo-tree-id53122 . -1811)) nil (25774 62011 26762 43000) 0 nil])
nil
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -4569) (undo-tree-id52563 . -2) (undo-tree-id52564 . -2) (undo-tree-id52565 . -2) (undo-tree-id52566 . -2) (undo-tree-id52567 . -2) (undo-tree-id52568 . -2) (undo-tree-id52569 . -2) (undo-tree-id52570 . -2) (undo-tree-id52571 . -2) (undo-tree-id52572 . -2) 4571 (4568 . 4571) 4559) nil (25774 62011 26433 409000) 0 nil])
([nil nil ((4495 . 4496) 4451) nil (25774 62011 26425 373000) 0 nil])
([nil nil ((#("To avoid confusion" 0 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4573) (undo-tree-id52472 . -17) (undo-tree-id52473 . -1) (undo-tree-id52474 . -1) (undo-tree-id52475 . -1) (undo-tree-id52476 . -1) (undo-tree-id52477 . -1) (undo-tree-id52478 . -1) (undo-tree-id52479 . -1) (undo-tree-id52480 . -1) (undo-tree-id52481 . -1) (undo-tree-id52482 . -1) (undo-tree-id52483 . -1) (undo-tree-id52484 . -1) (undo-tree-id52485 . -1) (undo-tree-id52486 . -1) (undo-tree-id52487 . -1) (undo-tree-id52488 . -1) (undo-tree-id52489 . -1) (undo-tree-id52490 . -1) (undo-tree-id52491 . -1) (undo-tree-id52492 . -1) (undo-tree-id52493 . -1) (undo-tree-id52494 . -7) (undo-tree-id52495 . -7) (undo-tree-id52496 . -7) (undo-tree-id52497 . -7) (undo-tree-id52498 . -7) (undo-tree-id52499 . -7) (undo-tree-id52500 . -7) (undo-tree-id52501 . -7) (undo-tree-id52502 . -7) (undo-tree-id52503 . -7) (undo-tree-id52504 . -7) (undo-tree-id52505 . -7) (undo-tree-id52506 . -7) (undo-tree-id52507 . -7) (undo-tree-id52508 . -7) (undo-tree-id52509 . -7) (undo-tree-id52510 . -7) (undo-tree-id52511 . -7) (undo-tree-id52512 . -7) (undo-tree-id52513 . -7) (undo-tree-id52514 . -7) (undo-tree-id52515 . -17) (undo-tree-id52516 . -17) (undo-tree-id52517 . -17) (undo-tree-id52518 . -17) (undo-tree-id52519 . -17) (undo-tree-id52520 . -17) (undo-tree-id52521 . -17) (undo-tree-id52522 . -17) (undo-tree-id52523 . -17) (undo-tree-id52524 . -17) (undo-tree-id52525 . -17) (undo-tree-id52526 . -17) (undo-tree-id52527 . -17) (undo-tree-id52528 . -17) (undo-tree-id52529 . -17) (undo-tree-id52530 . -17) (undo-tree-id52531 . -17) (undo-tree-id52532 . -17) (undo-tree-id52533 . -17) (undo-tree-id52534 . -17) (undo-tree-id52535 . -17) (undo-tree-id52536 . -18) (undo-tree-id52537 . -18) (undo-tree-id52538 . -18) (undo-tree-id52539 . -18) (undo-tree-id52540 . -18) (undo-tree-id52541 . -18) (undo-tree-id52542 . -18) (undo-tree-id52543 . -18) (undo-tree-id52544 . -18) (undo-tree-id52545 . -18) (undo-tree-id52546 . -18) (undo-tree-id52547 . -18) (undo-tree-id52548 . -18) (undo-tree-id52549 . -18) (undo-tree-id52550 . -18) (undo-tree-id52551 . -18) (undo-tree-id52552 . -18) (undo-tree-id52553 . -18) (undo-tree-id52554 . -18) (undo-tree-id52555 . -18) (undo-tree-id52556 . -18) (undo-tree-id52557 . -18) (undo-tree-id52558 . -18) (undo-tree-id52559 . -18) (undo-tree-id52560 . -18) (undo-tree-id52561 . -18) (undo-tree-id52562 . -18)) nil (25774 62011 26421 847000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4573) (undo-tree-id52470 . -1) (undo-tree-id52471 . -2)) nil (25774 62011 26369 284000) 0 nil])
([nil nil ((#("we " 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4573) (undo-tree-id52457 . -2) (undo-tree-id52458 . -1) (undo-tree-id52459 . -1) (undo-tree-id52460 . -1) (undo-tree-id52461 . -1) (undo-tree-id52462 . -1) (undo-tree-id52463 . -1) (undo-tree-id52464 . -1) (undo-tree-id52465 . -1) (undo-tree-id52466 . -1) (undo-tree-id52467 . -1) (undo-tree-id52468 . -1) (undo-tree-id52469 . -3)) nil (25774 62011 26366 997000) 0 nil])
([nil nil ((#("will " 0 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4573) (undo-tree-id52428 . -4) (undo-tree-id52429 . -3) (undo-tree-id52430 . -3) (undo-tree-id52431 . -3) (undo-tree-id52432 . -3) (undo-tree-id52433 . -3) (undo-tree-id52434 . -3) (undo-tree-id52435 . -3) (undo-tree-id52436 . -3) (undo-tree-id52437 . -3) (undo-tree-id52438 . -3) (undo-tree-id52439 . -3) (undo-tree-id52440 . -1) (undo-tree-id52441 . -1) (undo-tree-id52442 . -1) (undo-tree-id52443 . -1) (undo-tree-id52444 . -1) (undo-tree-id52445 . -1) (undo-tree-id52446 . -1) (undo-tree-id52447 . -1) (undo-tree-id52448 . -1) (undo-tree-id52449 . -1) (undo-tree-id52450 . -1) (undo-tree-id52451 . -1) (undo-tree-id52452 . -1) (undo-tree-id52453 . -1) (undo-tree-id52454 . -1) (undo-tree-id52455 . -1) (undo-tree-id52456 . -5)) nil (25774 62011 26357 881000) 0 nil])
([nil nil ((#("use " 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4573) (undo-tree-id52415 . -3) (undo-tree-id52416 . -2) (undo-tree-id52417 . -2) (undo-tree-id52418 . -2) (undo-tree-id52419 . -2) (undo-tree-id52420 . -2) (undo-tree-id52421 . -2) (undo-tree-id52422 . -2) (undo-tree-id52423 . -2) (undo-tree-id52424 . -2) (undo-tree-id52425 . -2) (undo-tree-id52426 . -2) (undo-tree-id52427 . -4)) nil (25774 62011 26341 17000) 0 nil])
([nil nil ((#("𝒐" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4573) (undo-tree-id52402 . -1) (undo-tree-id52403 . -1) (undo-tree-id52404 . -1) (undo-tree-id52405 . -1) (undo-tree-id52406 . -1) (undo-tree-id52407 . -1) (undo-tree-id52408 . -1) (undo-tree-id52409 . -1) (undo-tree-id52410 . -1) (undo-tree-id52411 . -1) (undo-tree-id52412 . -1) (undo-tree-id52413 . -1) (undo-tree-id52414 . -1)) nil (25774 62011 26332 173000) 0 nil])
([nil nil ((#("𝒐" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4573) (undo-tree-id52400 . -1) (undo-tree-id52401 . -1)) nil (25774 62011 26323 647000) 0 nil])
([nil nil ((4574 . 4576) (4573 . 4574)) nil (25774 62011 26320 949000) 0 nil])
([nil nil ((4575 . 4576)) nil (25774 62011 26320 53000) 0 nil])
([nil nil ((#("as " 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4578) (undo-tree-id52387 . -2) (undo-tree-id52388 . -1) (undo-tree-id52389 . -1) (undo-tree-id52390 . -1) (undo-tree-id52391 . -1) (undo-tree-id52392 . -1) (undo-tree-id52393 . -1) (undo-tree-id52394 . -1) (undo-tree-id52395 . -1) (undo-tree-id52396 . -1) (undo-tree-id52397 . -1) (undo-tree-id52398 . -1) (undo-tree-id52399 . -3)) nil (25774 62011 26318 979000) 0 nil])
([nil nil ((4571 . 6355) (#("- and 𝒛𝒛 as the output of the self-attention layer because it is an intermediate step in the model. Each ith element in these sequences, 𝒙𝒙(𝑖𝑖) and 𝒛𝒛(𝑖𝑖), are vectors of size d (that is, 𝒙𝒙(𝑖𝑖) ∈ 𝑅𝑅𝑑𝑑 ) representing the feature information for the input at position i, which is similar to RNNs. Then, for a seq2seq task, the goal of self-attention is to model the dependencies of the current input element to all other input elements. To achieve this, self-attention mechanisms are composed of three stages. First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)

- *o:* the final output of the whole transformer model." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 80 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 80 81 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 81 99 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 99 100 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 100 208 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 208 216 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 216 217 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 217 252 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 252 279 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 279 281 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 281 284 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 284 285 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 285 287 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 287 293 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 293 294 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 294 295 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 295 296 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 296 297 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 297 298 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 298 299 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 299 300 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 300 301 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 301 314 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 314 315 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 315 318 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 318 321 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 321 322 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 322 341 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 341 343 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 343 425 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 425 426 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 426 432 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 432 434 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 434 437 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 437 439 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 439 442 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 442 444 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 444 445 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 445 446 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 446 447 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 447 448 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 448 525 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 525 526 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 526 622 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 622 623 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 623 717 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 717 723 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 723 724 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 724 820 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 820 821 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 821 861 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 861 862 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 862 968 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 968 969 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 969 1077 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1077 1078 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1078 1089 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1089 1090 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1090 1092 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1092 1093 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1093 1117 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1117 1118 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1118 1122 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1122 1123 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1123 1224 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1224 1229 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1229 1230 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1230 1327 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1327 1328 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1328 1432 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1432 1433 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1433 1542 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1542 1543 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1543 1582 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1582 1583 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1583 1682 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1682 1683 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1683 1710 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1710 1711 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1711 1712 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1712 1713 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1713 1726 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1726 1727 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1727 1728 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1728 1729 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1729 1730 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1730 1731 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1731 1732 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil face (bold) font-lock-multiline t org-emphasis t invisible org-link) 1732 1734 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil face (bold) font-lock-multiline t org-emphasis t) 1734 1735 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil face (bold) font-lock-multiline t org-emphasis t invisible org-link) 1735 1759 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1759 1760 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1760 1784 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4571) (undo-tree-id50940 . 50) (undo-tree-id50941 . -1736) (undo-tree-id50942 . -1736) (undo-tree-id50943 . -1731) (undo-tree-id50944 . -1731) (undo-tree-id50945 . -1731) (undo-tree-id50946 . -1784) (undo-tree-id50947 . -1733) (undo-tree-id50948 . -1784) (undo-tree-id50949 . -1731) (undo-tree-id50950 . -1731) (undo-tree-id50951 . -1731) (undo-tree-id50952 . -1731) (undo-tree-id50953 . -1731) (undo-tree-id50954 . -1731) (undo-tree-id50955 . -1731) (undo-tree-id50956 . -1731) (undo-tree-id50957 . -1731) (undo-tree-id50958 . -1731) (undo-tree-id50959 . -1731) (undo-tree-id50960 . -1731) (undo-tree-id50961 . -1731) (undo-tree-id50962 . -1731) (undo-tree-id50963 . -1731) (undo-tree-id50964 . -1731) (undo-tree-id50965 . -1731) (undo-tree-id50966 . -1731) (undo-tree-id50967 . -1731) (undo-tree-id50968 . -1731) (undo-tree-id50969 . -1731) (undo-tree-id50970 . -1731) (undo-tree-id50971 . -1731) (undo-tree-id50972 . -1731) (undo-tree-id50973 . -1731) (undo-tree-id50974 . -1731) (undo-tree-id50975 . -1731) (undo-tree-id50976 . -1730) (undo-tree-id50977 . -1730) (undo-tree-id50978 . -1730) (undo-tree-id50979 . -1730) (undo-tree-id50980 . -1730) (undo-tree-id50981 . -1730) (undo-tree-id50982 . -1730) (undo-tree-id50983 . -1730) (undo-tree-id50984 . -1730) (undo-tree-id50985 . -1730) (undo-tree-id50986 . -1730) (undo-tree-id50987 . -1730) (undo-tree-id50988 . -1730) (undo-tree-id50989 . -1730) (undo-tree-id50990 . -1730) (undo-tree-id50991 . -1730) (undo-tree-id50992 . -1730) (undo-tree-id50993 . -1730) (undo-tree-id50994 . -1730) (undo-tree-id50995 . -1730) (undo-tree-id50996 . -1730) (undo-tree-id50997 . -1730) (undo-tree-id50998 . -1730) (undo-tree-id50999 . -1730) (undo-tree-id51000 . -1730) (undo-tree-id51001 . -1730) (undo-tree-id51002 . -1730) (undo-tree-id51003 . -1730) (undo-tree-id51004 . -1730) (undo-tree-id51005 . -1730) (undo-tree-id51006 . -1730) (undo-tree-id51007 . -1730) (undo-tree-id51008 . -1730) (undo-tree-id51009 . -1730) (undo-tree-id51010 . -1730) (undo-tree-id51011 . -1731) (undo-tree-id51012 . -1731) (undo-tree-id51013 . -1731) (undo-tree-id51014 . -1731) (undo-tree-id51015 . -1731) (undo-tree-id51016 . -1731) (undo-tree-id51017 . -1731) (undo-tree-id51018 . -1731) (undo-tree-id51019 . -1731) (undo-tree-id51020 . -1731) (undo-tree-id51021 . -1731) (undo-tree-id51022 . -1731) (undo-tree-id51023 . -1731) (undo-tree-id51024 . -1731) (undo-tree-id51025 . -1731) (undo-tree-id51026 . -1731) (undo-tree-id51027 . -1731) (undo-tree-id51028 . -1731) (undo-tree-id51029 . -1731) (undo-tree-id51030 . -1731) (undo-tree-id51031 . -1731) (undo-tree-id51032 . -1731) (undo-tree-id51033 . -1731) (undo-tree-id51034 . -1731) (undo-tree-id51035 . -1731) (undo-tree-id51036 . -1731) (undo-tree-id51037 . -1731) (undo-tree-id51038 . -1731) (undo-tree-id51039 . -1731) (undo-tree-id51040 . -1731) (undo-tree-id51041 . -1731) (undo-tree-id51042 . -1731) (undo-tree-id51043 . -1731) (undo-tree-id51044 . -1731) (undo-tree-id51045 . -1731) (undo-tree-id51046 . -1731) (undo-tree-id51047 . -1731) (undo-tree-id51048 . -1731) (undo-tree-id51049 . -1731) (undo-tree-id51050 . -1731) (undo-tree-id51051 . -1731) (undo-tree-id51052 . -1731) (undo-tree-id51053 . -1731) (undo-tree-id51054 . -1731) (undo-tree-id51055 . -1731) (undo-tree-id51056 . -1731) (undo-tree-id51057 . -1731) (undo-tree-id51058 . -1731) (undo-tree-id51059 . -1731) (undo-tree-id51060 . -1731) (undo-tree-id51061 . -1731) (undo-tree-id51062 . -1731) (undo-tree-id51063 . -1731) (undo-tree-id51064 . -1731) (undo-tree-id51065 . -1731) (undo-tree-id51066 . -1731) (undo-tree-id51067 . -1731) (undo-tree-id51068 . -1731) (undo-tree-id51069 . -1731) (undo-tree-id51070 . -1731) (undo-tree-id51071 . -1731) (undo-tree-id51072 . -1731) (undo-tree-id51073 . -1731) (undo-tree-id51074 . -1731) (undo-tree-id51075 . -1731) (undo-tree-id51076 . -1731) (undo-tree-id51077 . -1731) (undo-tree-id51078 . -1731) (undo-tree-id51079 . -1731) (undo-tree-id51080 . -1731) (undo-tree-id51081 . -1731) (undo-tree-id51082 . -1731) (undo-tree-id51083 . -1731) (undo-tree-id51084 . -1731) (undo-tree-id51085 . -1731) (undo-tree-id51086 . -1731) (undo-tree-id51087 . -1731) (undo-tree-id51088 . -1731) (undo-tree-id51089 . -1731) (undo-tree-id51090 . -1731) (undo-tree-id51091 . -1731) (undo-tree-id51092 . -1731) (undo-tree-id51093 . -1731) (undo-tree-id51094 . -1731) (undo-tree-id51095 . -1731) (undo-tree-id51096 . -1731) (undo-tree-id51097 . -1731) (undo-tree-id51098 . -1731) (undo-tree-id51099 . -1731) (undo-tree-id51100 . -1731) (undo-tree-id51101 . -1731) (undo-tree-id51102 . -1731) (undo-tree-id51103 . -1731) (undo-tree-id51104 . -1731) (undo-tree-id51105 . -1731) (undo-tree-id51106 . -1731) (undo-tree-id51107 . -1731) (undo-tree-id51108 . -1731) (undo-tree-id51109 . -1731) (undo-tree-id51110 . -1731) (undo-tree-id51111 . -1731) (undo-tree-id51112 . -1731) (undo-tree-id51113 . -1731) (undo-tree-id51114 . -1731) (undo-tree-id51115 . -1731) (undo-tree-id51116 . -1731) (undo-tree-id51117 . -1731) (undo-tree-id51118 . -1731) (undo-tree-id51119 . -1731) (undo-tree-id51120 . -1731) (undo-tree-id51121 . -1731) (undo-tree-id51122 . -1731) (undo-tree-id51123 . -1731) (undo-tree-id51124 . -1731) (undo-tree-id51125 . -1731) (undo-tree-id51126 . -1731) (undo-tree-id51127 . -1731) (undo-tree-id51128 . -1731) (undo-tree-id51129 . -1731) (undo-tree-id51130 . -1731) (undo-tree-id51131 . -1731) (undo-tree-id51132 . -1731) (undo-tree-id51133 . -1731) (undo-tree-id51134 . -1731) (undo-tree-id51135 . -1731) (undo-tree-id51136 . -1731) (undo-tree-id51137 . -1731) (undo-tree-id51138 . -1731) (undo-tree-id51139 . -1731) (undo-tree-id51140 . -1731) (undo-tree-id51141 . -1731) (undo-tree-id51142 . -1731) (undo-tree-id51143 . -1731) (undo-tree-id51144 . -1731) (undo-tree-id51145 . -1731) (undo-tree-id51146 . -1731) (undo-tree-id51147 . -1731) (undo-tree-id51148 . -1731) (undo-tree-id51149 . -1731) (undo-tree-id51150 . -1731) (undo-tree-id51151 . -1731) (undo-tree-id51152 . -1731) (undo-tree-id51153 . -1731) (undo-tree-id51154 . -1731) (undo-tree-id51155 . -1731) (undo-tree-id51156 . -1731) (undo-tree-id51157 . -1731) (undo-tree-id51158 . -1731) (undo-tree-id51159 . -1731) (undo-tree-id51160 . -1731) (undo-tree-id51161 . -1731) (undo-tree-id51162 . -1731) (undo-tree-id51163 . -1731) (undo-tree-id51164 . -1731) (undo-tree-id51165 . -1731) (undo-tree-id51166 . -1731) (undo-tree-id51167 . -1731) (undo-tree-id51168 . -1731) (undo-tree-id51169 . -1731) (undo-tree-id51170 . -1731) (undo-tree-id51171 . -1731) (undo-tree-id51172 . -1731) (undo-tree-id51173 . -1731) (undo-tree-id51174 . -1731) (undo-tree-id51175 . -1731) (undo-tree-id51176 . -1731) (undo-tree-id51177 . -1731) (undo-tree-id51178 . -1731) (undo-tree-id51179 . -1731) (undo-tree-id51180 . -1731) (undo-tree-id51181 . -1731) (undo-tree-id51182 . -1731) (undo-tree-id51183 . -1731) (undo-tree-id51184 . -1731) (undo-tree-id51185 . -1731) (undo-tree-id51186 . -1731) (undo-tree-id51187 . -1731) (undo-tree-id51188 . -1731) (undo-tree-id51189 . -1731) (undo-tree-id51190 . -1731) (undo-tree-id51191 . -1731) (undo-tree-id51192 . -1731) (undo-tree-id51193 . -1731) (undo-tree-id51194 . -1731) (undo-tree-id51195 . -1731) (undo-tree-id51196 . -1731) (undo-tree-id51197 . -1731) (undo-tree-id51198 . -1736) (undo-tree-id51199 . -1736) (undo-tree-id51200 . -1736) (undo-tree-id51201 . -1736) (undo-tree-id51202 . -1736) (undo-tree-id51203 . -1736) (undo-tree-id51204 . -1736) (undo-tree-id51205 . -1736) (undo-tree-id51206 . -1736) (undo-tree-id51207 . -1736) (undo-tree-id51208 . -1736) (undo-tree-id51209 . -1738) (undo-tree-id51210 . -1738) (undo-tree-id51211 . -1738) (undo-tree-id51212 . -1738) (undo-tree-id51213 . -1738) (undo-tree-id51214 . -1738) (undo-tree-id51215 . -1738) (undo-tree-id51216 . -1738) (undo-tree-id51217 . -1738) (undo-tree-id51218 . -1738) (undo-tree-id51219 . -1738) (undo-tree-id51220 . -1744) (undo-tree-id51221 . -1744) (undo-tree-id51222 . -1744) (undo-tree-id51223 . -1744) (undo-tree-id51224 . -1744) (undo-tree-id51225 . -1744) (undo-tree-id51226 . -1744) (undo-tree-id51227 . -1744) (undo-tree-id51228 . -1744) (undo-tree-id51229 . -1744) (undo-tree-id51230 . -1744) (undo-tree-id51231 . -1751) (undo-tree-id51232 . -1751) (undo-tree-id51233 . -1751) (undo-tree-id51234 . -1751) (undo-tree-id51235 . -1751) (undo-tree-id51236 . -1751) (undo-tree-id51237 . -1751) (undo-tree-id51238 . -1751) (undo-tree-id51239 . -1751) (undo-tree-id51240 . -1751) (undo-tree-id51241 . -1751) (undo-tree-id51242 . -1754) (undo-tree-id51243 . -1754) (undo-tree-id51244 . -1754) (undo-tree-id51245 . -1754) (undo-tree-id51246 . -1754) (undo-tree-id51247 . -1754) (undo-tree-id51248 . -1754) (undo-tree-id51249 . -1754) (undo-tree-id51250 . -1754) (undo-tree-id51251 . -1754) (undo-tree-id51252 . -1754) (undo-tree-id51253 . -1754) (undo-tree-id51254 . -1754) (undo-tree-id51255 . -1754) (undo-tree-id51256 . -1754) (undo-tree-id51257 . -1754) (undo-tree-id51258 . -1754) (undo-tree-id51259 . -1754) (undo-tree-id51260 . -1754) (undo-tree-id51261 . -1754) (undo-tree-id51262 . -1754) (undo-tree-id51263 . -1758) (undo-tree-id51264 . -1758) (undo-tree-id51265 . -1758) (undo-tree-id51266 . -1758) (undo-tree-id51267 . -1758) (undo-tree-id51268 . -1758) (undo-tree-id51269 . -1758) (undo-tree-id51270 . -1758) (undo-tree-id51271 . -1758) (undo-tree-id51272 . -1758) (undo-tree-id51273 . -1758) (undo-tree-id51274 . -1758) (undo-tree-id51275 . -1758) (undo-tree-id51276 . -1758) (undo-tree-id51277 . -1758) (undo-tree-id51278 . -1758) (undo-tree-id51279 . -1758) (undo-tree-id51280 . -1758) (undo-tree-id51281 . -1758) (undo-tree-id51282 . -1758) (undo-tree-id51283 . -1758) (undo-tree-id51284 . -1758) (undo-tree-id51285 . -1758) (undo-tree-id51286 . -1758) (undo-tree-id51287 . -1758) (undo-tree-id51288 . -1758) (undo-tree-id51289 . -1764) (undo-tree-id51290 . -1764) (undo-tree-id51291 . -1764) (undo-tree-id51292 . -1764) (undo-tree-id51293 . -1764) (undo-tree-id51294 . -1764) (undo-tree-id51295 . -1764) (undo-tree-id51296 . -1764) (undo-tree-id51297 . -1764) (undo-tree-id51298 . -1764) (undo-tree-id51299 . -1764) (undo-tree-id51300 . -1764) (undo-tree-id51301 . -1764) (undo-tree-id51302 . -1764) (undo-tree-id51303 . -1764) (undo-tree-id51304 . -1764) (undo-tree-id51305 . -1764) (undo-tree-id51306 . -1764) (undo-tree-id51307 . -1764) (undo-tree-id51308 . -1764) (undo-tree-id51309 . -1764) (undo-tree-id51310 . -1776) (undo-tree-id51311 . -1776) (undo-tree-id51312 . -1776) (undo-tree-id51313 . -1776) (undo-tree-id51314 . -1776) (undo-tree-id51315 . -1776) (undo-tree-id51316 . -1776) (undo-tree-id51317 . -1776) (undo-tree-id51318 . -1776) (undo-tree-id51319 . -1776) (undo-tree-id51320 . -1776) (undo-tree-id51321 . -1776) (undo-tree-id51322 . -1776) (undo-tree-id51323 . -1776) (undo-tree-id51324 . -1776) (undo-tree-id51325 . -1776) (undo-tree-id51326 . -1776) (undo-tree-id51327 . -1776) (undo-tree-id51328 . -1776) (undo-tree-id51329 . -1776) (undo-tree-id51330 . -1776) (undo-tree-id51331 . -1782) (undo-tree-id51332 . -1782) (undo-tree-id51333 . -1782) (undo-tree-id51334 . -1782) (undo-tree-id51335 . -1782) (undo-tree-id51336 . -1782) (undo-tree-id51337 . -1782) (undo-tree-id51338 . -1782) (undo-tree-id51339 . -1782) (undo-tree-id51340 . -1782) (undo-tree-id51341 . -1782) (undo-tree-id51342 . -1782) (undo-tree-id51343 . -1782) (undo-tree-id51344 . -1782) (undo-tree-id51345 . -1782) (undo-tree-id51346 . -1782) (undo-tree-id51347 . -1782) (undo-tree-id51348 . -1782) (undo-tree-id51349 . -1782) (undo-tree-id51350 . -1782) (undo-tree-id51351 . -1782) (undo-tree-id51352 . -1784) (undo-tree-id51353 . -1784) (undo-tree-id51354 . -1784) (undo-tree-id51355 . -1784) (undo-tree-id51356 . -1784) (undo-tree-id51357 . -1784) (undo-tree-id51358 . -1784) (undo-tree-id51359 . -1784) (undo-tree-id51360 . -1784) (undo-tree-id51361 . -1784) (undo-tree-id51362 . -1784) (undo-tree-id51363 . -1784) (undo-tree-id51364 . -1784) (undo-tree-id51365 . -1784) (undo-tree-id51366 . -1784) (undo-tree-id51367 . -1784) (undo-tree-id51368 . -1784) (undo-tree-id51369 . -1784) (undo-tree-id51370 . -1784) (undo-tree-id51371 . -1784) (undo-tree-id51372 . -1784) (undo-tree-id51373 . -1784) (undo-tree-id51374 . -1784) (undo-tree-id51375 . -1784) (undo-tree-id51376 . -1784) (undo-tree-id51377 . -1784) (undo-tree-id51378 . -1784) (undo-tree-id51379 . -1784) (undo-tree-id51380 . -1784) (undo-tree-id51381 . -1784) (undo-tree-id51382 . -1784) (undo-tree-id51383 . -1784) (undo-tree-id51384 . -1784) (undo-tree-id51385 . -1784) (undo-tree-id51386 . -1784) (undo-tree-id51387 . -1784) (undo-tree-id51388 . -1784) (undo-tree-id51389 . -1784) (undo-tree-id51390 . -1784) (undo-tree-id51391 . -1784) (undo-tree-id51392 . -1784) (undo-tree-id51393 . -1784) (undo-tree-id51394 . -1784) (undo-tree-id51395 . -1784) (undo-tree-id51396 . -1784) (undo-tree-id51397 . -1784) (undo-tree-id51398 . -1784) (undo-tree-id51399 . -1784) (undo-tree-id51400 . -1784) (undo-tree-id51401 . -1784) (undo-tree-id51402 . -1784) (undo-tree-id51403 . -1784) (undo-tree-id51404 . -1784) (undo-tree-id51405 . -1784) (undo-tree-id51406 . -1784) (undo-tree-id51407 . -1784) (undo-tree-id51408 . -1784) (undo-tree-id51409 . -1784) (undo-tree-id51410 . -1784) (undo-tree-id51411 . -1784) (undo-tree-id51412 . -1784) (undo-tree-id51413 . -1784) (undo-tree-id51414 . -1784) (undo-tree-id51415 . -1784) (undo-tree-id51416 . -1784) (undo-tree-id51417 . -1784) (undo-tree-id51418 . -1784) (undo-tree-id51419 . -1784) (undo-tree-id51420 . -1784) (undo-tree-id51421 . -1784) (undo-tree-id51422 . -1784) (undo-tree-id51423 . -1784) (undo-tree-id51424 . -1784) (undo-tree-id51425 . -1784) (undo-tree-id51426 . -1784) (undo-tree-id51427 . -1784) (undo-tree-id51428 . -1784) (undo-tree-id51429 . -1784) (undo-tree-id51430 . -1784) (undo-tree-id51431 . -1784) (undo-tree-id51432 . -1784) (undo-tree-id51433 . -1784) (undo-tree-id51434 . -1784) (undo-tree-id51435 . -1784) (undo-tree-id51436 . -1784) (undo-tree-id51437 . -1784) (undo-tree-id51438 . -1784) (undo-tree-id51439 . -1784) (undo-tree-id51440 . -1784) (undo-tree-id51441 . -1784) (undo-tree-id51442 . -1784) (undo-tree-id51443 . -1784) (undo-tree-id51444 . -1784) (undo-tree-id51445 . -1784) (undo-tree-id51446 . -1784) (undo-tree-id51447 . -1784) (undo-tree-id51448 . -1784) (undo-tree-id51449 . -1784) (undo-tree-id51450 . -1784) (undo-tree-id51451 . -1784) (undo-tree-id51452 . -1784) (undo-tree-id51453 . -1784) (undo-tree-id51454 . -1784) (undo-tree-id51455 . -1784) (undo-tree-id51456 . -1784) (undo-tree-id51457 . -1784) (undo-tree-id51458 . -1784) (undo-tree-id51459 . -1784) (undo-tree-id51460 . -1784) (undo-tree-id51461 . -1784) (undo-tree-id51462 . -1784) (undo-tree-id51463 . -1784) (undo-tree-id51464 . -1784) (undo-tree-id51465 . -1784) (undo-tree-id51466 . -1784) (undo-tree-id51467 . -1784) (undo-tree-id51468 . -1784) (undo-tree-id51469 . -1784) (undo-tree-id51470 . -1784) (undo-tree-id51471 . -1784) (undo-tree-id51472 . -1784) (undo-tree-id51473 . -1784) (undo-tree-id51474 . -1784) (undo-tree-id51475 . -1784) (undo-tree-id51476 . -1784) (undo-tree-id51477 . -1784) (undo-tree-id51478 . -1784) (undo-tree-id51479 . -1784) (undo-tree-id51480 . -1784) (undo-tree-id51481 . -1784) (undo-tree-id51482 . -1784) (undo-tree-id51483 . -1784) (undo-tree-id51484 . -1784) (undo-tree-id51485 . -1784) (undo-tree-id51486 . -1784) (undo-tree-id51487 . -1784) (undo-tree-id51488 . -1784) (undo-tree-id51489 . -1784) (undo-tree-id51490 . -1784) (undo-tree-id51491 . -1784) (undo-tree-id51492 . -1784) (undo-tree-id51493 . -1784) (undo-tree-id51494 . -1784) (undo-tree-id51495 . -1784) (undo-tree-id51496 . -1784) (undo-tree-id51497 . -1784) (undo-tree-id51498 . -1784) (undo-tree-id51499 . -1731) (undo-tree-id51500 . -1731) (undo-tree-id51501 . -1731) (undo-tree-id51502 . -1731) (undo-tree-id51503 . -1731) (undo-tree-id51504 . -1731) (undo-tree-id51505 . -1731) (undo-tree-id51506 . -1731) (undo-tree-id51507 . -1731) (undo-tree-id51508 . -1731) (undo-tree-id51509 . -1731) (undo-tree-id51510 . -1731) (undo-tree-id51511 . -1731) (undo-tree-id51512 . -1731) (undo-tree-id51513 . -1731) (undo-tree-id51514 . -1731) (undo-tree-id51515 . -1731) (undo-tree-id51516 . -1731) (undo-tree-id51517 . -1731) (undo-tree-id51518 . -1731) (undo-tree-id51519 . -1731) (undo-tree-id51520 . -1731) (undo-tree-id51521 . -1731) (undo-tree-id51522 . -1731) (undo-tree-id51523 . -1731) (undo-tree-id51524 . -1731) (undo-tree-id51525 . -1731) (undo-tree-id51526 . -1731) (undo-tree-id51527 . -1731) (undo-tree-id51528 . -1731) (undo-tree-id51529 . -1731) (undo-tree-id51530 . -1731) (undo-tree-id51531 . -1731) (undo-tree-id51532 . -1731) (undo-tree-id51533 . -1731) (undo-tree-id51534 . -1731) (undo-tree-id51535 . -1731) (undo-tree-id51536 . -1731) (undo-tree-id51537 . -1731) (undo-tree-id51538 . -1731) (undo-tree-id51539 . -1731) (undo-tree-id51540 . -1731) (undo-tree-id51541 . -1731) (undo-tree-id51542 . -1731) (undo-tree-id51543 . -1731) (undo-tree-id51544 . -1731) (undo-tree-id51545 . -1731) (undo-tree-id51546 . -1731) (undo-tree-id51547 . -1731) (undo-tree-id51548 . -1731) (undo-tree-id51549 . -1731) (undo-tree-id51550 . -1731) (undo-tree-id51551 . -1731) (undo-tree-id51552 . -1731) (undo-tree-id51553 . -1731) (undo-tree-id51554 . -1731) (undo-tree-id51555 . -1731) (undo-tree-id51556 . -1731) (undo-tree-id51557 . -1731) (undo-tree-id51558 . -1731) (undo-tree-id51559 . -1731) (undo-tree-id51560 . -1731) (undo-tree-id51561 . -1731) (undo-tree-id51562 . -1731) (undo-tree-id51563 . -1731) (undo-tree-id51564 . -1731) (undo-tree-id51565 . -1731) (undo-tree-id51566 . -1731) (undo-tree-id51567 . -1731) (undo-tree-id51568 . -1731) (undo-tree-id51569 . -1731) (undo-tree-id51570 . -1731) (undo-tree-id51571 . -1731) (undo-tree-id51572 . -1731) (undo-tree-id51573 . -1731) (undo-tree-id51574 . -1731) (undo-tree-id51575 . -1731) (undo-tree-id51576 . -1731) (undo-tree-id51577 . -1731) (undo-tree-id51578 . -1731) (undo-tree-id51579 . -1731) (undo-tree-id51580 . -1731) (undo-tree-id51581 . -1731) (undo-tree-id51582 . -1731) (undo-tree-id51583 . -1731) (undo-tree-id51584 . -1731) (undo-tree-id51585 . -1731) (undo-tree-id51586 . -1731) (undo-tree-id51587 . -1731) (undo-tree-id51588 . -1731) (undo-tree-id51589 . -1731) (undo-tree-id51590 . -1731) (undo-tree-id51591 . -1731) (undo-tree-id51592 . -1731) (undo-tree-id51593 . -1731) (undo-tree-id51594 . -1731) (undo-tree-id51595 . -1731) (undo-tree-id51596 . -1731) (undo-tree-id51597 . -1731) (undo-tree-id51598 . -1731) (undo-tree-id51599 . -1731) (undo-tree-id51600 . -1731) (undo-tree-id51601 . -1731) (undo-tree-id51602 . -1731) (undo-tree-id51603 . -1731) (undo-tree-id51604 . -1731) (undo-tree-id51605 . -1731) (undo-tree-id51606 . -1731) (undo-tree-id51607 . -1731) (undo-tree-id51608 . -1731) (undo-tree-id51609 . -1731) (undo-tree-id51610 . -1731) (undo-tree-id51611 . -1731) (undo-tree-id51612 . -1731) (undo-tree-id51613 . -1731) (undo-tree-id51614 . -1731) (undo-tree-id51615 . -1731) (undo-tree-id51616 . -1731) (undo-tree-id51617 . -1731) (undo-tree-id51618 . -1731) (undo-tree-id51619 . -1731) (undo-tree-id51620 . -1731) (undo-tree-id51621 . -1731) (undo-tree-id51622 . -1731) (undo-tree-id51623 . -1731) (undo-tree-id51624 . -1731) (undo-tree-id51625 . -1731) (undo-tree-id51626 . -1731) (undo-tree-id51627 . -1731) (undo-tree-id51628 . -1731) (undo-tree-id51629 . -1731) (undo-tree-id51630 . -1731) (undo-tree-id51631 . -1731) (undo-tree-id51632 . -1731) (undo-tree-id51633 . -1731) (undo-tree-id51634 . -1731) (undo-tree-id51635 . -1731) (undo-tree-id51636 . -1731) (undo-tree-id51637 . -1731) (undo-tree-id51638 . -1731) (undo-tree-id51639 . -1731) (undo-tree-id51640 . -1731) (undo-tree-id51641 . -1731) (undo-tree-id51642 . -1731) (undo-tree-id51643 . -1731) (undo-tree-id51644 . -1731) (undo-tree-id51645 . -1731) (undo-tree-id51646 . -1731) (undo-tree-id51647 . -1731) (undo-tree-id51648 . -1731) (undo-tree-id51649 . -1731) (undo-tree-id51650 . -1731) (undo-tree-id51651 . -1731) (undo-tree-id51652 . -1731) (undo-tree-id51653 . -1731) (undo-tree-id51654 . -1731) (undo-tree-id51655 . -1731) (undo-tree-id51656 . -1731) (undo-tree-id51657 . -1731) (undo-tree-id51658 . -1731) (undo-tree-id51659 . -1731) (undo-tree-id51660 . -1731) (undo-tree-id51661 . -1731) (undo-tree-id51662 . -1731) (undo-tree-id51663 . -1731) (undo-tree-id51664 . -1731) (undo-tree-id51665 . -1731) (undo-tree-id51666 . -1731) (undo-tree-id51667 . -1731) (undo-tree-id51668 . -1731) (undo-tree-id51669 . -1731) (undo-tree-id51670 . -1731) (undo-tree-id51671 . -1731) (undo-tree-id51672 . -1731) (undo-tree-id51673 . -1731) (undo-tree-id51674 . -1731) (undo-tree-id51675 . -1731) (undo-tree-id51676 . -1731) (undo-tree-id51677 . -1731) (undo-tree-id51678 . -1731) (undo-tree-id51679 . -1731) (undo-tree-id51680 . -1731) (undo-tree-id51681 . -1731) (undo-tree-id51682 . -1731) (undo-tree-id51683 . -1731) (undo-tree-id51684 . -1731) (undo-tree-id51685 . -1731) (undo-tree-id51686 . -1731) (undo-tree-id51687 . -1731) (undo-tree-id51688 . -1731) (undo-tree-id51689 . -1731) (undo-tree-id51690 . -1731) (undo-tree-id51691 . -1731) (undo-tree-id51692 . -1731) (undo-tree-id51693 . -1731) (undo-tree-id51694 . -1731) (undo-tree-id51695 . -1731) (undo-tree-id51696 . -1731) (undo-tree-id51697 . -1731) (undo-tree-id51698 . -1731) (undo-tree-id51699 . -1731) (undo-tree-id51700 . -1731) (undo-tree-id51701 . -1731) (undo-tree-id51702 . -1731) (undo-tree-id51703 . -1731) (undo-tree-id51704 . -1731) (undo-tree-id51705 . -1731) (undo-tree-id51706 . -1731) (undo-tree-id51707 . -1731) (undo-tree-id51708 . -1731) (undo-tree-id51709 . -1731) (undo-tree-id51710 . -1731) (undo-tree-id51711 . -1731) (undo-tree-id51712 . -1731) (undo-tree-id51713 . -1731) (undo-tree-id51714 . -1731) (undo-tree-id51715 . -1731) (undo-tree-id51716 . -1731) (undo-tree-id51717 . -1731) (undo-tree-id51718 . -1731) (undo-tree-id51719 . -1731) (undo-tree-id51720 . -1731) (undo-tree-id51721 . -1731) (undo-tree-id51722 . -1731) (undo-tree-id51723 . -1731) (undo-tree-id51724 . -1731) (undo-tree-id51725 . -1731) (undo-tree-id51726 . -1731) (undo-tree-id51727 . -1731) (undo-tree-id51728 . -1731) (undo-tree-id51729 . -1731) (undo-tree-id51730 . -1731) (undo-tree-id51731 . -1731) (undo-tree-id51732 . -1731) (undo-tree-id51733 . -1731) (undo-tree-id51734 . -1731) (undo-tree-id51735 . -1731) (undo-tree-id51736 . -1731) (undo-tree-id51737 . -1731) (undo-tree-id51738 . -1731) (undo-tree-id51739 . -1731) (undo-tree-id51740 . -1731) (undo-tree-id51741 . -1731) (undo-tree-id51742 . -1731) (undo-tree-id51743 . -1731) (undo-tree-id51744 . -1731) (undo-tree-id51745 . -1731) (undo-tree-id51746 . -1731) (undo-tree-id51747 . -1731) (undo-tree-id51748 . -1731) (undo-tree-id51749 . -1731) (undo-tree-id51750 . -1731) (undo-tree-id51751 . -1731) (undo-tree-id51752 . -1731) (undo-tree-id51753 . -1731) (undo-tree-id51754 . -1731) (undo-tree-id51755 . -1731) (undo-tree-id51756 . -1731) (undo-tree-id51757 . -1731) (undo-tree-id51758 . -1731) (undo-tree-id51759 . -1731) (undo-tree-id51760 . -1731) (undo-tree-id51761 . -1731) (undo-tree-id51762 . -1731) (undo-tree-id51763 . -1731) (undo-tree-id51764 . -1731) (undo-tree-id51765 . -1731) (undo-tree-id51766 . -1731) (undo-tree-id51767 . -1731) (undo-tree-id51768 . -1731) (undo-tree-id51769 . -1731) (undo-tree-id51770 . -1731) (undo-tree-id51771 . -1731) (undo-tree-id51772 . -1731) (undo-tree-id51773 . -1731) (undo-tree-id51774 . -1731) (undo-tree-id51775 . -1731) (undo-tree-id51776 . -1731) (undo-tree-id51777 . -1731) (undo-tree-id51778 . -1731) (undo-tree-id51779 . -1731) (undo-tree-id51780 . -1731) (undo-tree-id51781 . -1731) (undo-tree-id51782 . -1731) (undo-tree-id51783 . -1731) (undo-tree-id51784 . -1731) (undo-tree-id51785 . -1731) (undo-tree-id51786 . -1731) (undo-tree-id51787 . -1731) (undo-tree-id51788 . -1731) (undo-tree-id51789 . -1731) (undo-tree-id51790 . -1731) (undo-tree-id51791 . -1731) (undo-tree-id51792 . -1731) (undo-tree-id51793 . -1732) (undo-tree-id51794 . -1732) (undo-tree-id51795 . -1732) (undo-tree-id51796 . -1732) (undo-tree-id51797 . -1732) (undo-tree-id51798 . -1732) (undo-tree-id51799 . -1732) (undo-tree-id51800 . -1732) (undo-tree-id51801 . -1732) (undo-tree-id51802 . -1732) (undo-tree-id51803 . -1732) (undo-tree-id51804 . -1732) (undo-tree-id51805 . -1732) (undo-tree-id51806 . -1732) (undo-tree-id51807 . -1732) (undo-tree-id51808 . -1732) (undo-tree-id51809 . -1732) (undo-tree-id51810 . -1732) (undo-tree-id51811 . -1732) (undo-tree-id51812 . -1732) (undo-tree-id51813 . -1732) (undo-tree-id51814 . -1732) (undo-tree-id51815 . -1732) (undo-tree-id51816 . -1732) (undo-tree-id51817 . -1732) (undo-tree-id51818 . -1732) (undo-tree-id51819 . -1732) (undo-tree-id51820 . -1732) (undo-tree-id51821 . -1732) (undo-tree-id51822 . -1732) (undo-tree-id51823 . -1732) (undo-tree-id51824 . -1732) (undo-tree-id51825 . -1733) (undo-tree-id51826 . -1733) (undo-tree-id51827 . -1733) (undo-tree-id51828 . -1733) (undo-tree-id51829 . -1733) (undo-tree-id51830 . -1733) (undo-tree-id51831 . -1733) (undo-tree-id51832 . -1733) (undo-tree-id51833 . -1733) (undo-tree-id51834 . -1733) (undo-tree-id51835 . -1733) (undo-tree-id51836 . -1733) (undo-tree-id51837 . -1733) (undo-tree-id51838 . -1733) (undo-tree-id51839 . -1733) (undo-tree-id51840 . -1733) (undo-tree-id51841 . -1733) (undo-tree-id51842 . -1733) (undo-tree-id51843 . -1733) (undo-tree-id51844 . -1733) (undo-tree-id51845 . -1733) (undo-tree-id51846 . -1733) (undo-tree-id51847 . -1733) (undo-tree-id51848 . -1733) (undo-tree-id51849 . -1733) (undo-tree-id51850 . -1733) (undo-tree-id51851 . -1733) (undo-tree-id51852 . -1733) (undo-tree-id51853 . -1735) (undo-tree-id51854 . -1735) (undo-tree-id51855 . -1735) (undo-tree-id51856 . -1735) (undo-tree-id51857 . -1735) (undo-tree-id51858 . -1735) (undo-tree-id51859 . -1735) (undo-tree-id51860 . -1735) (undo-tree-id51861 . -1735) (undo-tree-id51862 . -1735) (undo-tree-id51863 . -1735) (undo-tree-id51864 . -1735) (undo-tree-id51865 . -1735) (undo-tree-id51866 . -1735) (undo-tree-id51867 . -1735) (undo-tree-id51868 . -1735) (undo-tree-id51869 . -1735) (undo-tree-id51870 . -1735) (undo-tree-id51871 . -1735) (undo-tree-id51872 . -1735) (undo-tree-id51873 . -1735) (undo-tree-id51874 . -1735) (undo-tree-id51875 . -1735) (undo-tree-id51876 . -1735) (undo-tree-id51877 . -1735) (undo-tree-id51878 . -1735) (undo-tree-id51879 . -1735) (undo-tree-id51880 . -1735) (undo-tree-id51881 . -1735) (undo-tree-id51882 . -1735) (undo-tree-id51883 . -1735) (undo-tree-id51884 . -1735) (undo-tree-id51885 . -1735) (undo-tree-id51886 . -1733) (undo-tree-id51887 . -1733) (undo-tree-id51888 . -1733) (undo-tree-id51889 . -1733) (undo-tree-id51890 . -1733) (undo-tree-id51891 . -1733) (undo-tree-id51892 . -1733) (undo-tree-id51893 . -1732) (undo-tree-id51894 . -1732) (undo-tree-id51895 . -1732) (undo-tree-id51896 . -1732) (undo-tree-id51897 . -1732) (undo-tree-id51898 . -1732) (undo-tree-id51899 . -1732) (undo-tree-id51900 . -1732) (undo-tree-id51901 . -1732) (undo-tree-id51902 . -1732) (undo-tree-id51903 . -1732) (undo-tree-id51904 . -1732) (undo-tree-id51905 . -1732) (undo-tree-id51906 . -1732) (undo-tree-id51907 . -1732) (undo-tree-id51908 . -1732) (undo-tree-id51909 . -1732) (undo-tree-id51910 . -1732) (undo-tree-id51911 . -1733) (undo-tree-id51912 . -1733) (undo-tree-id51913 . -1733) (undo-tree-id51914 . -1733) (undo-tree-id51915 . -1733) (undo-tree-id51916 . -1733) (undo-tree-id51917 . -1733) (undo-tree-id51918 . -1733) (undo-tree-id51919 . -1733) (undo-tree-id51920 . -1733) (undo-tree-id51921 . -1733) (undo-tree-id51922 . -1733) (undo-tree-id51923 . -1733) (undo-tree-id51924 . -1733) (undo-tree-id51925 . -1733) (undo-tree-id51926 . -1733) (undo-tree-id51927 . -1733) (undo-tree-id51928 . -1733) (undo-tree-id51929 . -1733) (undo-tree-id51930 . -1733) (undo-tree-id51931 . -1733) (undo-tree-id51932 . -1733) (undo-tree-id51933 . -1733) (undo-tree-id51934 . -1734) (undo-tree-id51935 . -1734) (undo-tree-id51936 . -1734) (undo-tree-id51937 . -1734) (undo-tree-id51938 . -1734) (undo-tree-id51939 . -1734) (undo-tree-id51940 . -1734) (undo-tree-id51941 . -1734) (undo-tree-id51942 . -1734) (undo-tree-id51943 . -1734) (undo-tree-id51944 . -1734) (undo-tree-id51945 . -1734) (undo-tree-id51946 . -1734) (undo-tree-id51947 . -1734) (undo-tree-id51948 . -1734) (undo-tree-id51949 . -1734) (undo-tree-id51950 . -1734) (undo-tree-id51951 . -1733) (undo-tree-id51952 . -1733) (undo-tree-id51953 . -1733) (undo-tree-id51954 . -1733) (undo-tree-id51955 . -1733) (undo-tree-id51956 . -1733) (undo-tree-id51957 . -1733) (undo-tree-id51958 . -1733) (undo-tree-id51959 . -1733) (undo-tree-id51960 . -1733) (undo-tree-id51961 . -1733) (undo-tree-id51962 . -1733) (undo-tree-id51963 . -1733) (undo-tree-id51964 . -1733) (undo-tree-id51965 . -1733) (undo-tree-id51966 . -1733) (undo-tree-id51967 . -1733) (undo-tree-id51968 . -1733) (undo-tree-id51969 . -1733) (undo-tree-id51970 . -1733) (undo-tree-id51971 . -1736) (undo-tree-id51972 . -1736) (undo-tree-id51973 . -1736) (undo-tree-id51974 . -1736) (undo-tree-id51975 . -1736) (undo-tree-id51976 . -1736) (undo-tree-id51977 . -1736) (undo-tree-id51978 . -1736) (undo-tree-id51979 . -1736) (undo-tree-id51980 . -1736) (undo-tree-id51981 . -1736) (undo-tree-id51982 . -1736) (undo-tree-id51983 . -1736) (undo-tree-id51984 . -1736) (undo-tree-id51985 . -1736) (undo-tree-id51986 . -1736) (undo-tree-id51987 . -1736) (undo-tree-id51988 . -1736) (undo-tree-id51989 . -1736) (undo-tree-id51990 . -1736) (undo-tree-id51991 . -1736) (undo-tree-id51992 . -1736) (undo-tree-id51993 . -1736) (undo-tree-id51994 . -1736) (undo-tree-id51995 . -1736) (undo-tree-id51996 . -1736) (undo-tree-id51997 . -1736) (undo-tree-id51998 . -1736) (undo-tree-id51999 . -1736) (undo-tree-id52000 . -1736) (undo-tree-id52001 . -1736) (undo-tree-id52002 . -1736) (undo-tree-id52003 . -1736) (undo-tree-id52004 . -1736) (undo-tree-id52005 . -1736) (undo-tree-id52006 . -1736) (undo-tree-id52007 . -1736) (undo-tree-id52008 . -1736) (undo-tree-id52009 . -1736) (undo-tree-id52010 . -1736) (undo-tree-id52011 . -1736) (undo-tree-id52012 . -1736) (undo-tree-id52013 . -1736) (undo-tree-id52014 . -1736) (undo-tree-id52015 . -1736) (undo-tree-id52016 . -1736) (undo-tree-id52017 . -1736) (undo-tree-id52018 . -1736) (undo-tree-id52019 . -1736) (undo-tree-id52020 . -1736) (undo-tree-id52021 . -1736) (undo-tree-id52022 . -1736) (undo-tree-id52023 . -1736) (undo-tree-id52024 . -1736) (undo-tree-id52025 . -1736) (undo-tree-id52026 . -1736) (undo-tree-id52027 . -1738) (undo-tree-id52028 . -1738) (undo-tree-id52029 . -1738) (undo-tree-id52030 . -1738) (undo-tree-id52031 . -1738) (undo-tree-id52032 . -1738) (undo-tree-id52033 . -1738) (undo-tree-id52034 . -1738) (undo-tree-id52035 . -1738) (undo-tree-id52036 . -1738) (undo-tree-id52037 . -1738) (undo-tree-id52038 . -1738) (undo-tree-id52039 . -1738) (undo-tree-id52040 . -1738) (undo-tree-id52041 . -1738) (undo-tree-id52042 . -1738) (undo-tree-id52043 . -1744) (undo-tree-id52044 . -1744) (undo-tree-id52045 . -1744) (undo-tree-id52046 . -1744) (undo-tree-id52047 . -1744) (undo-tree-id52048 . -1744) (undo-tree-id52049 . -1744) (undo-tree-id52050 . -1744) (undo-tree-id52051 . -1744) (undo-tree-id52052 . -1744) (undo-tree-id52053 . -1744) (undo-tree-id52054 . -1744) (undo-tree-id52055 . -1744) (undo-tree-id52056 . -1744) (undo-tree-id52057 . -1744) (undo-tree-id52058 . -1744) (undo-tree-id52059 . -1751) (undo-tree-id52060 . -1751) (undo-tree-id52061 . -1751) (undo-tree-id52062 . -1751) (undo-tree-id52063 . -1751) (undo-tree-id52064 . -1751) (undo-tree-id52065 . -1751) (undo-tree-id52066 . -1751) (undo-tree-id52067 . -1751) (undo-tree-id52068 . -1751) (undo-tree-id52069 . -1751) (undo-tree-id52070 . -1751) (undo-tree-id52071 . -1751) (undo-tree-id52072 . -1751) (undo-tree-id52073 . -1751) (undo-tree-id52074 . -1751) (undo-tree-id52075 . -1754) (undo-tree-id52076 . -1754) (undo-tree-id52077 . -1754) (undo-tree-id52078 . -1754) (undo-tree-id52079 . -1754) (undo-tree-id52080 . -1754) (undo-tree-id52081 . -1754) (undo-tree-id52082 . -1754) (undo-tree-id52083 . -1754) (undo-tree-id52084 . -1754) (undo-tree-id52085 . -1754) (undo-tree-id52086 . -1754) (undo-tree-id52087 . -1754) (undo-tree-id52088 . -1754) (undo-tree-id52089 . -1754) (undo-tree-id52090 . -1754) (undo-tree-id52091 . -1758) (undo-tree-id52092 . -1758) (undo-tree-id52093 . -1758) (undo-tree-id52094 . -1758) (undo-tree-id52095 . -1758) (undo-tree-id52096 . -1758) (undo-tree-id52097 . -1758) (undo-tree-id52098 . -1758) (undo-tree-id52099 . -1758) (undo-tree-id52100 . -1758) (undo-tree-id52101 . -1758) (undo-tree-id52102 . -1758) (undo-tree-id52103 . -1758) (undo-tree-id52104 . -1758) (undo-tree-id52105 . -1758) (undo-tree-id52106 . -1758) (undo-tree-id52107 . -1764) (undo-tree-id52108 . -1764) (undo-tree-id52109 . -1764) (undo-tree-id52110 . -1764) (undo-tree-id52111 . -1764) (undo-tree-id52112 . -1764) (undo-tree-id52113 . -1764) (undo-tree-id52114 . -1764) (undo-tree-id52115 . -1764) (undo-tree-id52116 . -1764) (undo-tree-id52117 . -1764) (undo-tree-id52118 . -1764) (undo-tree-id52119 . -1764) (undo-tree-id52120 . -1764) (undo-tree-id52121 . -1764) (undo-tree-id52122 . -1764) (undo-tree-id52123 . -1776) (undo-tree-id52124 . -1776) (undo-tree-id52125 . -1776) (undo-tree-id52126 . -1776) (undo-tree-id52127 . -1776) (undo-tree-id52128 . -1776) (undo-tree-id52129 . -1776) (undo-tree-id52130 . -1776) (undo-tree-id52131 . -1776) (undo-tree-id52132 . -1776) (undo-tree-id52133 . -1776) (undo-tree-id52134 . -1776) (undo-tree-id52135 . -1776) (undo-tree-id52136 . -1776) (undo-tree-id52137 . -1776) (undo-tree-id52138 . -1776) (undo-tree-id52139 . -1782) (undo-tree-id52140 . -1782) (undo-tree-id52141 . -1782) (undo-tree-id52142 . -1782) (undo-tree-id52143 . -1782) (undo-tree-id52144 . -1782) (undo-tree-id52145 . -1782) (undo-tree-id52146 . -1782) (undo-tree-id52147 . -1782) (undo-tree-id52148 . -1782) (undo-tree-id52149 . -1782) (undo-tree-id52150 . -1782) (undo-tree-id52151 . -1782) (undo-tree-id52152 . -1782) (undo-tree-id52153 . -1782) (undo-tree-id52154 . -1782) (undo-tree-id52155 . -1782) (undo-tree-id52156 . -1782) (undo-tree-id52157 . -1782) (undo-tree-id52158 . -1782) (undo-tree-id52159 . -1782) (undo-tree-id52160 . -1783) (undo-tree-id52161 . -1783) (undo-tree-id52162 . -1783) (undo-tree-id52163 . -1783) (undo-tree-id52164 . -1783) (undo-tree-id52165 . -1783) (undo-tree-id52166 . -1783) (undo-tree-id52167 . -1783) (undo-tree-id52168 . -1783) (undo-tree-id52169 . -1783) (undo-tree-id52170 . -1783) (undo-tree-id52171 . -1783) (undo-tree-id52172 . -1783) (undo-tree-id52173 . -1783) (undo-tree-id52174 . -1783) (undo-tree-id52175 . -1783) (undo-tree-id52176 . -1783) (undo-tree-id52177 . -1783) (undo-tree-id52178 . -1783) (undo-tree-id52179 . -1783) (undo-tree-id52180 . -1783) (undo-tree-id52181 . -1783) (undo-tree-id52182 . -1783) (undo-tree-id52183 . -1783) (undo-tree-id52184 . -1783) (undo-tree-id52185 . -1783) (undo-tree-id52186 . -1783) (undo-tree-id52187 . -1783) (undo-tree-id52188 . -1783) (undo-tree-id52189 . -1783) (undo-tree-id52190 . -1783) (undo-tree-id52191 . -1783) (undo-tree-id52192 . -1783) (undo-tree-id52193 . -1783) (undo-tree-id52194 . -1783) (undo-tree-id52195 . -1783) (undo-tree-id52196 . -1783) (undo-tree-id52197 . -1783) (undo-tree-id52198 . -1783) (undo-tree-id52199 . -1783) (undo-tree-id52200 . -1783) (undo-tree-id52201 . -1783) (undo-tree-id52202 . -1783) (undo-tree-id52203 . -1783) (undo-tree-id52204 . -1783) (undo-tree-id52205 . -1783) (undo-tree-id52206 . -1784) (undo-tree-id52207 . -1784) (undo-tree-id52208 . -1784) (undo-tree-id52209 . -1784) (undo-tree-id52210 . -1784) (undo-tree-id52211 . -1784) (undo-tree-id52212 . -1784) (undo-tree-id52213 . -1784) (undo-tree-id52214 . -1784) (undo-tree-id52215 . -1784) (undo-tree-id52216 . -1784) (undo-tree-id52217 . -1784) (undo-tree-id52218 . -1784) (undo-tree-id52219 . -1784) (undo-tree-id52220 . -1784) (undo-tree-id52221 . -1784) (undo-tree-id52222 . -1784) (undo-tree-id52223 . -1784) (undo-tree-id52224 . -1729) (4571 . 6300) (#(" and 𝒛𝒛 as the output of the self-attention layer because it is an intermediate step in the model. Each ith element in these sequences, 𝒙𝒙(𝑖𝑖) and 𝒛𝒛(𝑖𝑖), are vectors of size d (that is, 𝒙𝒙(𝑖𝑖) ∈ 𝑅𝑅𝑑𝑑 ) representing the feature information for the input at position i, which is similar to RNNs. Then, for a seq2seq task, the goal of self-attention is to model the dependencies of the current input element to all other input elements. To achieve this, self-attention mechanisms are composed of three stages. First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 79 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 79 80 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 80 98 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 98 99 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 99 207 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 207 215 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 215 216 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 216 251 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 251 278 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 278 280 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 280 283 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 283 284 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 284 286 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 286 292 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 292 293 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 293 294 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 294 295 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 295 296 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 296 297 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 297 298 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 298 299 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 299 300 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 300 313 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 313 314 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 314 317 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 317 320 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 320 321 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 321 340 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 340 342 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 342 424 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 424 425 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 425 431 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 431 433 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 433 436 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 436 438 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 438 441 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 441 443 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 443 444 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 444 445 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 445 446 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 446 447 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 447 524 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 524 525 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 525 621 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 621 622 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 622 716 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 716 722 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 722 723 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 723 819 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 819 820 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 820 860 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 860 861 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 861 967 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 967 968 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 968 1076 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1076 1077 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1077 1088 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1088 1089 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1089 1091 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1091 1092 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1092 1116 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1116 1117 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1117 1121 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1121 1122 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1122 1223 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1223 1228 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1228 1229 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1229 1326 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1326 1327 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1327 1431 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1431 1432 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1432 1541 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1541 1542 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1542 1581 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1581 1582 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1582 1681 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1681 1682 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1682 1709 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1709 1710 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1710 1711 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1711 1712 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1712 1725 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1725 1726 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4626) (undo-tree-id52225 . 1724) (undo-tree-id52226 . -1) (undo-tree-id52227 . -3) (undo-tree-id52228 . -3) (undo-tree-id52229 . -3) (undo-tree-id52230 . -3) (undo-tree-id52231 . -3) (undo-tree-id52232 . -3) (undo-tree-id52233 . -3) (undo-tree-id52234 . -3) (undo-tree-id52235 . -3) (undo-tree-id52236 . -3) (undo-tree-id52237 . -3) (undo-tree-id52238 . -3) (undo-tree-id52239 . -3) (undo-tree-id52240 . -3) (undo-tree-id52241 . -3) (undo-tree-id52242 . -3) (undo-tree-id52243 . -3) (undo-tree-id52244 . -3) (undo-tree-id52245 . -3) (undo-tree-id52246 . -3) (undo-tree-id52247 . -3) (undo-tree-id52248 . -3) (undo-tree-id52249 . -3) (undo-tree-id52250 . -3) (undo-tree-id52251 . -3) (undo-tree-id52252 . -3) (undo-tree-id52253 . -6) (undo-tree-id52254 . -6) (undo-tree-id52255 . -6) (undo-tree-id52256 . -6) (undo-tree-id52257 . -6) (undo-tree-id52258 . -6) (undo-tree-id52259 . -6) (undo-tree-id52260 . -6) (undo-tree-id52261 . -6) (undo-tree-id52262 . -6) (undo-tree-id52263 . -6) (undo-tree-id52264 . -6) (undo-tree-id52265 . -6) (undo-tree-id52266 . -6) (undo-tree-id52267 . -6) (undo-tree-id52268 . -6) (undo-tree-id52269 . -6) (undo-tree-id52270 . -6) (undo-tree-id52271 . -6) (undo-tree-id52272 . -6) (undo-tree-id52273 . -6) (undo-tree-id52274 . -6) (undo-tree-id52275 . -6) (undo-tree-id52276 . -6) (undo-tree-id52277 . -6) (undo-tree-id52278 . -6) (undo-tree-id52279 . -5) (undo-tree-id52280 . -5) (undo-tree-id52281 . -5) (undo-tree-id52282 . -5) (undo-tree-id52283 . -5) (undo-tree-id52284 . -5) (undo-tree-id52285 . -5) (undo-tree-id52286 . -5) (undo-tree-id52287 . -5) (undo-tree-id52288 . -5) (undo-tree-id52289 . -5) (undo-tree-id52290 . -5) (undo-tree-id52291 . -5) (undo-tree-id52292 . -5) (undo-tree-id52293 . -5) (undo-tree-id52294 . -5) (undo-tree-id52295 . -5) (undo-tree-id52296 . -5) (undo-tree-id52297 . -5) (undo-tree-id52298 . -5) (undo-tree-id52299 . -5) (undo-tree-id52300 . -5) (undo-tree-id52301 . -5) (undo-tree-id52302 . -5) (undo-tree-id52303 . -5) (undo-tree-id52304 . -5) (undo-tree-id52305 . -5) (undo-tree-id52306 . -5) (undo-tree-id52307 . -5) (undo-tree-id52308 . -5) (undo-tree-id52309 . -5) (undo-tree-id52310 . -1) (undo-tree-id52311 . -1) (undo-tree-id52312 . -1) (undo-tree-id52313 . -1) (undo-tree-id52314 . -1) (undo-tree-id52315 . -1) (undo-tree-id52316 . -1) (undo-tree-id52317 . -1) (undo-tree-id52318 . -1) (undo-tree-id52319 . -1) (undo-tree-id52320 . -1) (undo-tree-id52321 . -1) (undo-tree-id52322 . -1) (undo-tree-id52323 . -1) (undo-tree-id52324 . -1) (undo-tree-id52325 . -1) (undo-tree-id52326 . -1) (undo-tree-id52327 . -1) (undo-tree-id52328 . -1) (undo-tree-id52329 . -1) (undo-tree-id52330 . -1) (undo-tree-id52331 . -1) (undo-tree-id52332 . -1) (undo-tree-id52333 . -1) (undo-tree-id52334 . -1) (undo-tree-id52335 . -1) (undo-tree-id52336 . -1) (undo-tree-id52337 . -1) (undo-tree-id52338 . -1) (undo-tree-id52339 . -1) (undo-tree-id52340 . -1) (undo-tree-id52341 . -1) (undo-tree-id52342 . -1) (undo-tree-id52343 . -1) (undo-tree-id52344 . -1) (undo-tree-id52345 . -1) (undo-tree-id52346 . -1) (undo-tree-id52347 . -1) (undo-tree-id52348 . -1) (undo-tree-id52349 . -1) (undo-tree-id52350 . -1) (undo-tree-id52351 . -1) (undo-tree-id52352 . -1) (undo-tree-id52353 . -1) (undo-tree-id52354 . -1) (undo-tree-id52355 . -1) (undo-tree-id52356 . -1) (undo-tree-id52357 . -1) (undo-tree-id52358 . -1) (undo-tree-id52359 . -1) (undo-tree-id52360 . -1) (undo-tree-id52361 . -1) (undo-tree-id52362 . -1) (undo-tree-id52363 . -1) (undo-tree-id52364 . -1) (undo-tree-id52365 . -1) (undo-tree-id52366 . -1) (undo-tree-id52367 . -1) (undo-tree-id52368 . -1) (undo-tree-id52369 . -1) (undo-tree-id52370 . -1) (undo-tree-id52371 . -1) (undo-tree-id52372 . -1) (undo-tree-id52373 . -1) (4625 . 4626) (#("i" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -4625) (undo-tree-id52374 . -1) (undo-tree-id52375 . -1) (undo-tree-id52376 . -1) (undo-tree-id52377 . -1) (undo-tree-id52378 . -1) (undo-tree-id52379 . -1) (undo-tree-id52380 . -1) (undo-tree-id52381 . -1) (undo-tree-id52382 . -1) (undo-tree-id52383 . -1) (undo-tree-id52384 . -1) (undo-tree-id52385 . -1) (undo-tree-id52386 . -1) 4626 (4625 . 4626)) nil (25774 62011 26268 646000) 0 nil])
([nil nil ((#("and " 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4630) (undo-tree-id50937 . 4) (undo-tree-id50938 . -3) (undo-tree-id50939 . -4)) nil (25774 62011 25401 692000) 0 nil])
([nil nil ((#("𝒛𝒛 " 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4630) (undo-tree-id50934 . 3) (undo-tree-id50935 . -2) (undo-tree-id50936 . -3)) nil (25774 62011 25399 145000) 0 nil])
([nil nil ((4632 . 4634) (#("6" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4632) (undo-tree-id50932 . -1) (undo-tree-id50933 . -1) 4633 (4630 . 4633)) nil (25774 62011 25396 687000) 0 nil])
([nil nil ((#("as " 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4634) (undo-tree-id50929 . 3) (undo-tree-id50930 . -2) (undo-tree-id50931 . -3)) nil (25774 62011 25393 726000) 0 nil])
([nil nil ((4632 . 4633)) nil (25774 62011 25389 722000) 0 nil])
([nil nil ((4628 . 6353) (#("- because it is an intermediate step in the model. Each ith element in these sequences, 𝒙𝒙(𝑖𝑖) and 𝒛𝒛(𝑖𝑖), are vectors of size d (that is, 𝒙𝒙(𝑖𝑖) ∈ 𝑅𝑅𝑑𝑑 ) representing the feature information for the input at position i, which is similar to RNNs. Then, for a seq2seq task, the goal of self-attention is to model the dependencies of the current input element to all other input elements. To achieve this, self-attention mechanisms are composed of three stages. First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)

- *z:* the output of the self-attention layer" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 31 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 31 32 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 32 50 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 50 51 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 51 159 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 159 167 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 167 168 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 168 203 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 203 230 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 230 232 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 232 235 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 235 236 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 236 238 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 238 244 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 244 245 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 245 246 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 246 247 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 247 248 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 248 249 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 249 250 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 250 251 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 251 252 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 252 265 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 265 266 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 266 269 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 269 272 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 272 273 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 273 292 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 292 294 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 294 376 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 376 377 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 377 383 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 383 385 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 385 388 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 388 390 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 390 393 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 393 394 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 394 395 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 395 396 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 396 397 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 397 398 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 398 399 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 399 454 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 454 455 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 455 456 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 456 457 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 457 458 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 458 476 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 476 477 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 477 573 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 573 574 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 574 668 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 668 674 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 674 675 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 675 771 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 771 772 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 772 812 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 812 813 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 813 919 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 919 920 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 920 1028 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1028 1029 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1029 1040 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1040 1041 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1041 1043 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1043 1044 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1044 1068 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1068 1069 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1069 1073 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1073 1074 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1074 1175 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1175 1180 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1180 1181 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1181 1278 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1278 1279 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1279 1383 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1383 1384 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1384 1493 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1493 1494 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1494 1533 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1533 1534 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1534 1633 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1633 1634 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1634 1661 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1661 1662 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1662 1663 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1663 1664 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1664 1677 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1677 1678 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1678 1679 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1679 1680 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1680 1681 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1681 1682 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1682 1683 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil face (bold) font-lock-multiline t org-emphasis t invisible org-link) 1683 1685 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil face (bold) font-lock-multiline t org-emphasis t) 1685 1686 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil face (bold) font-lock-multiline t org-emphasis t invisible org-link) 1686 1687 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1687 1725 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4628) (undo-tree-id50480 . 40) (undo-tree-id50481 . -1687) (undo-tree-id50482 . -1687) (undo-tree-id50483 . -1725) (undo-tree-id50484 . -1684) (undo-tree-id50485 . -1684) (undo-tree-id50486 . -1684) (undo-tree-id50487 . -1684) (undo-tree-id50488 . -1684) (undo-tree-id50489 . -1684) (undo-tree-id50490 . -1684) (undo-tree-id50491 . -1684) (undo-tree-id50492 . -1684) (undo-tree-id50493 . -1684) (undo-tree-id50494 . -1684) (undo-tree-id50495 . -1684) (undo-tree-id50496 . -1684) (undo-tree-id50497 . -1684) (undo-tree-id50498 . -1684) (undo-tree-id50499 . -1684) (undo-tree-id50500 . -1684) (undo-tree-id50501 . -1684) (undo-tree-id50502 . -1686) (undo-tree-id50503 . -1686) (undo-tree-id50504 . -1686) (undo-tree-id50505 . -1686) (undo-tree-id50506 . -1686) (undo-tree-id50507 . -1686) (undo-tree-id50508 . -1686) (undo-tree-id50509 . -1686) (undo-tree-id50510 . -1686) (undo-tree-id50511 . -1686) (undo-tree-id50512 . -1686) (undo-tree-id50513 . -1686) (undo-tree-id50514 . -1686) (undo-tree-id50515 . -1686) (undo-tree-id50516 . -1686) (undo-tree-id50517 . -1686) (undo-tree-id50518 . -1686) (undo-tree-id50519 . -1687) (undo-tree-id50520 . -1687) (undo-tree-id50521 . -1687) (undo-tree-id50522 . -1687) (undo-tree-id50523 . -1687) (undo-tree-id50524 . -1687) (undo-tree-id50525 . -1687) (undo-tree-id50526 . -1687) (undo-tree-id50527 . -1687) (undo-tree-id50528 . -1687) (undo-tree-id50529 . -1687) (undo-tree-id50530 . -1687) (undo-tree-id50531 . -1687) (undo-tree-id50532 . -1687) (undo-tree-id50533 . -1687) (undo-tree-id50534 . -1687) (undo-tree-id50535 . -1687) (undo-tree-id50536 . -1686) (undo-tree-id50537 . -1686) (undo-tree-id50538 . -1686) (undo-tree-id50539 . -1686) (undo-tree-id50540 . -1686) (undo-tree-id50541 . -1686) (undo-tree-id50542 . -1686) (undo-tree-id50543 . -1684) (undo-tree-id50544 . -1684) (undo-tree-id50545 . -1684) (undo-tree-id50546 . -1684) (undo-tree-id50547 . -1684) (undo-tree-id50548 . -1684) (undo-tree-id50549 . -1684) (undo-tree-id50550 . -1684) (undo-tree-id50551 . -1684) (undo-tree-id50552 . -1684) (undo-tree-id50553 . -1684) (undo-tree-id50554 . -1684) (undo-tree-id50555 . -1684) (undo-tree-id50556 . -1684) (undo-tree-id50557 . -1684) (undo-tree-id50558 . -1684) (undo-tree-id50559 . -1684) (undo-tree-id50560 . -1684) (undo-tree-id50561 . -1687) (undo-tree-id50562 . -1687) (undo-tree-id50563 . -1687) (undo-tree-id50564 . -1687) (undo-tree-id50565 . -1687) (undo-tree-id50566 . -1687) (undo-tree-id50567 . -1687) (undo-tree-id50568 . -1687) (undo-tree-id50569 . -1687) (undo-tree-id50570 . -1687) (undo-tree-id50571 . -1687) (undo-tree-id50572 . -1687) (undo-tree-id50573 . -1687) (undo-tree-id50574 . -1687) (undo-tree-id50575 . -1687) (undo-tree-id50576 . -1687) (undo-tree-id50577 . -1687) (undo-tree-id50578 . -1687) (undo-tree-id50579 . -1687) (undo-tree-id50580 . -1687) (undo-tree-id50581 . -1687) (undo-tree-id50582 . -1687) (undo-tree-id50583 . -1687) (undo-tree-id50584 . -1687) (undo-tree-id50585 . -1687) (undo-tree-id50586 . -1687) (undo-tree-id50587 . -1687) (undo-tree-id50588 . -1687) (undo-tree-id50589 . -1687) (undo-tree-id50590 . -1687) (undo-tree-id50591 . -1687) (undo-tree-id50592 . -1687) (undo-tree-id50593 . -1687) (undo-tree-id50594 . -1687) (undo-tree-id50595 . -1687) (undo-tree-id50596 . -1687) (undo-tree-id50597 . -1687) (undo-tree-id50598 . -1687) (undo-tree-id50599 . -1687) (undo-tree-id50600 . -1687) (undo-tree-id50601 . -1687) (undo-tree-id50602 . -1687) (undo-tree-id50603 . -1687) (undo-tree-id50604 . -1687) (undo-tree-id50605 . -1687) (undo-tree-id50606 . -1687) (undo-tree-id50607 . -1687) (undo-tree-id50608 . -1687) (undo-tree-id50609 . -1687) (undo-tree-id50610 . -1687) (undo-tree-id50611 . -1687) (undo-tree-id50612 . -1689) (undo-tree-id50613 . -1689) (undo-tree-id50614 . -1689) (undo-tree-id50615 . -1689) (undo-tree-id50616 . -1689) (undo-tree-id50617 . -1689) (undo-tree-id50618 . -1689) (undo-tree-id50619 . -1689) (undo-tree-id50620 . -1689) (undo-tree-id50621 . -1689) (undo-tree-id50622 . -1689) (undo-tree-id50623 . -1689) (undo-tree-id50624 . -1689) (undo-tree-id50625 . -1689) (undo-tree-id50626 . -1689) (undo-tree-id50627 . -1689) (undo-tree-id50628 . -1689) (undo-tree-id50629 . -1689) (undo-tree-id50630 . -1689) (undo-tree-id50631 . -1689) (undo-tree-id50632 . -1689) (undo-tree-id50633 . -1687) (undo-tree-id50634 . -1687) (undo-tree-id50635 . -1687) (undo-tree-id50636 . -1687) (undo-tree-id50637 . -1687) (undo-tree-id50638 . -1687) (undo-tree-id50639 . -1687) (undo-tree-id50640 . -1687) (undo-tree-id50641 . -1687) (undo-tree-id50642 . -1687) (undo-tree-id50643 . -1687) (undo-tree-id50644 . -1687) (undo-tree-id50645 . -1687) (undo-tree-id50646 . -1687) (undo-tree-id50647 . -1687) (undo-tree-id50648 . -1687) (undo-tree-id50649 . -1684) (undo-tree-id50650 . -1684) (undo-tree-id50651 . -1684) (undo-tree-id50652 . -1684) (undo-tree-id50653 . -1684) (undo-tree-id50654 . -1684) (undo-tree-id50655 . -1684) (undo-tree-id50656 . -1684) (undo-tree-id50657 . -1684) (undo-tree-id50658 . -1684) (undo-tree-id50659 . -1684) (undo-tree-id50660 . -1684) (undo-tree-id50661 . -1684) (undo-tree-id50662 . -1684) (undo-tree-id50663 . -1684) (undo-tree-id50664 . -1684) (undo-tree-id50665 . -1684) (undo-tree-id50666 . -1684) (undo-tree-id50667 . -1684) (undo-tree-id50668 . -1684) (undo-tree-id50669 . -1684) (undo-tree-id50670 . -1684) (undo-tree-id50671 . -1684) (undo-tree-id50672 . -1684) (undo-tree-id50673 . -1684) (undo-tree-id50674 . -1684) (undo-tree-id50675 . -1684) (undo-tree-id50676 . -1684) (undo-tree-id50677 . -1684) (undo-tree-id50678 . -1684) (undo-tree-id50679 . -1684) (undo-tree-id50680 . -1684) (undo-tree-id50681 . -1684) (undo-tree-id50682 . -1684) (undo-tree-id50683 . -1684) (undo-tree-id50684 . -1684) (undo-tree-id50685 . -1684) (undo-tree-id50686 . -1684) (undo-tree-id50687 . -1684) (undo-tree-id50688 . -1684) (undo-tree-id50689 . -1684) (undo-tree-id50690 . -1684) (undo-tree-id50691 . -1684) (undo-tree-id50692 . -1684) (undo-tree-id50693 . -1684) (undo-tree-id50694 . -1684) (undo-tree-id50695 . -1684) (undo-tree-id50696 . -1684) (undo-tree-id50697 . -1684) (undo-tree-id50698 . -1685) (undo-tree-id50699 . -1685) (undo-tree-id50700 . -1685) (undo-tree-id50701 . -1685) (undo-tree-id50702 . -1685) (undo-tree-id50703 . -1685) (undo-tree-id50704 . -1685) (undo-tree-id50705 . -1685) (undo-tree-id50706 . -1685) (undo-tree-id50707 . -1685) (undo-tree-id50708 . -1685) (undo-tree-id50709 . -1685) (undo-tree-id50710 . -1685) (undo-tree-id50711 . -1685) (undo-tree-id50712 . -1685) (undo-tree-id50713 . -1685) (undo-tree-id50714 . -1685) (undo-tree-id50715 . -1684) (undo-tree-id50716 . -1684) (undo-tree-id50717 . -1684) (undo-tree-id50718 . -1684) (undo-tree-id50719 . -1684) (undo-tree-id50720 . -1684) (undo-tree-id50721 . -1684) (undo-tree-id50722 . -1684) (undo-tree-id50723 . -1684) (undo-tree-id50724 . -1684) (undo-tree-id50725 . -1684) (undo-tree-id50726 . -1684) (undo-tree-id50727 . -1684) (undo-tree-id50728 . -1684) (undo-tree-id50729 . -1684) (undo-tree-id50730 . -1684) (undo-tree-id50731 . -1684) (undo-tree-id50732 . -1684) (undo-tree-id50733 . -1684) (undo-tree-id50734 . -1684) (undo-tree-id50735 . -1687) (undo-tree-id50736 . -1687) (undo-tree-id50737 . -1687) (undo-tree-id50738 . -1687) (undo-tree-id50739 . -1687) (undo-tree-id50740 . -1687) (undo-tree-id50741 . -1687) (undo-tree-id50742 . -1687) (undo-tree-id50743 . -1687) (undo-tree-id50744 . -1687) (undo-tree-id50745 . -1687) (undo-tree-id50746 . -1687) (undo-tree-id50747 . -1687) (undo-tree-id50748 . -1687) (undo-tree-id50749 . -1687) (undo-tree-id50750 . -1687) (undo-tree-id50751 . -1687) (undo-tree-id50752 . -1687) (undo-tree-id50753 . -1687) (undo-tree-id50754 . -1687) (undo-tree-id50755 . -1687) (undo-tree-id50756 . -1689) (undo-tree-id50757 . -1689) (undo-tree-id50758 . -1689) (undo-tree-id50759 . -1689) (undo-tree-id50760 . -1689) (undo-tree-id50761 . -1689) (undo-tree-id50762 . -1689) (undo-tree-id50763 . -1689) (undo-tree-id50764 . -1689) (undo-tree-id50765 . -1689) (undo-tree-id50766 . -1689) (undo-tree-id50767 . -1689) (undo-tree-id50768 . -1689) (undo-tree-id50769 . -1689) (undo-tree-id50770 . -1689) (undo-tree-id50771 . -1689) (undo-tree-id50772 . -1689) (undo-tree-id50773 . -1689) (undo-tree-id50774 . -1689) (undo-tree-id50775 . -1689) (undo-tree-id50776 . -1689) (undo-tree-id50777 . -1689) (undo-tree-id50778 . -1689) (undo-tree-id50779 . -1689) (undo-tree-id50780 . -1689) (undo-tree-id50781 . -1689) (undo-tree-id50782 . -1689) (undo-tree-id50783 . -1689) (undo-tree-id50784 . -1689) (undo-tree-id50785 . -1689) (undo-tree-id50786 . -1689) (undo-tree-id50787 . -1696) (undo-tree-id50788 . -1696) (undo-tree-id50789 . -1696) (undo-tree-id50790 . -1696) (undo-tree-id50791 . -1696) (undo-tree-id50792 . -1696) (undo-tree-id50793 . -1696) (undo-tree-id50794 . -1696) (undo-tree-id50795 . -1696) (undo-tree-id50796 . -1696) (undo-tree-id50797 . -1696) (undo-tree-id50798 . -1696) (undo-tree-id50799 . -1696) (undo-tree-id50800 . -1696) (undo-tree-id50801 . -1696) (undo-tree-id50802 . -1696) (undo-tree-id50803 . -1699) (undo-tree-id50804 . -1699) (undo-tree-id50805 . -1699) (undo-tree-id50806 . -1699) (undo-tree-id50807 . -1699) (undo-tree-id50808 . -1699) (undo-tree-id50809 . -1699) (undo-tree-id50810 . -1699) (undo-tree-id50811 . -1699) (undo-tree-id50812 . -1699) (undo-tree-id50813 . -1699) (undo-tree-id50814 . -1699) (undo-tree-id50815 . -1699) (undo-tree-id50816 . -1699) (undo-tree-id50817 . -1699) (undo-tree-id50818 . -1699) (undo-tree-id50819 . -1703) (undo-tree-id50820 . -1703) (undo-tree-id50821 . -1703) (undo-tree-id50822 . -1703) (undo-tree-id50823 . -1703) (undo-tree-id50824 . -1703) (undo-tree-id50825 . -1703) (undo-tree-id50826 . -1703) (undo-tree-id50827 . -1703) (undo-tree-id50828 . -1703) (undo-tree-id50829 . -1703) (undo-tree-id50830 . -1703) (undo-tree-id50831 . -1703) (undo-tree-id50832 . -1703) (undo-tree-id50833 . -1703) (undo-tree-id50834 . -1703) (undo-tree-id50835 . -1703) (undo-tree-id50836 . -1703) (undo-tree-id50837 . -1703) (undo-tree-id50838 . -1703) (undo-tree-id50839 . -1703) (undo-tree-id50840 . -1708) (undo-tree-id50841 . -1708) (undo-tree-id50842 . -1708) (undo-tree-id50843 . -1708) (undo-tree-id50844 . -1708) (undo-tree-id50845 . -1708) (undo-tree-id50846 . -1708) (undo-tree-id50847 . -1708) (undo-tree-id50848 . -1708) (undo-tree-id50849 . -1708) (undo-tree-id50850 . -1708) (undo-tree-id50851 . -1708) (undo-tree-id50852 . -1708) (undo-tree-id50853 . -1708) (undo-tree-id50854 . -1708) (undo-tree-id50855 . -1708) (undo-tree-id50856 . -1709) (undo-tree-id50857 . -1709) (undo-tree-id50858 . -1709) (undo-tree-id50859 . -1709) (undo-tree-id50860 . -1709) (undo-tree-id50861 . -1709) (undo-tree-id50862 . -1709) (undo-tree-id50863 . -1709) (undo-tree-id50864 . -1709) (undo-tree-id50865 . -1709) (undo-tree-id50866 . -1709) (undo-tree-id50867 . -1709) (undo-tree-id50868 . -1709) (undo-tree-id50869 . -1709) (undo-tree-id50870 . -1709) (undo-tree-id50871 . -1709) (undo-tree-id50872 . -1718) (undo-tree-id50873 . -1718) (undo-tree-id50874 . -1718) (undo-tree-id50875 . -1718) (undo-tree-id50876 . -1718) (undo-tree-id50877 . -1718) (undo-tree-id50878 . -1718) (undo-tree-id50879 . -1718) (undo-tree-id50880 . -1718) (undo-tree-id50881 . -1718) (undo-tree-id50882 . -1718) (undo-tree-id50883 . -1718) (undo-tree-id50884 . -1718) (undo-tree-id50885 . -1718) (undo-tree-id50886 . -1718) (undo-tree-id50887 . -1718) (undo-tree-id50888 . -1724) (undo-tree-id50889 . -1724) (undo-tree-id50890 . -1724) (undo-tree-id50891 . -1724) (undo-tree-id50892 . -1724) (undo-tree-id50893 . -1724) (undo-tree-id50894 . -1724) (undo-tree-id50895 . -1724) (undo-tree-id50896 . -1724) (undo-tree-id50897 . -1724) (undo-tree-id50898 . -1724) (undo-tree-id50899 . -1724) (undo-tree-id50900 . -1724) (undo-tree-id50901 . -1724) (undo-tree-id50902 . -1724) (undo-tree-id50903 . -1724) (undo-tree-id50904 . -1725) (undo-tree-id50905 . -1725) (undo-tree-id50906 . -1725) (undo-tree-id50907 . -1725) (undo-tree-id50908 . -1725) (undo-tree-id50909 . -1725) (undo-tree-id50910 . -1725) (undo-tree-id50911 . -1725) (undo-tree-id50912 . -1725) (undo-tree-id50913 . -1725) (undo-tree-id50914 . -1725) (undo-tree-id50915 . -1725) (undo-tree-id50916 . -1725) (undo-tree-id50917 . -1725) (undo-tree-id50918 . -1725) (undo-tree-id50919 . -1725) (undo-tree-id50920 . -1725) (undo-tree-id50921 . -1725) (undo-tree-id50922 . -1725) (undo-tree-id50923 . -1725) (undo-tree-id50924 . -1725) (undo-tree-id50925 . -1725) (undo-tree-id50926 . -1725) (undo-tree-id50927 . -1725) (undo-tree-id50928 . -1680) (4628 . 6308) (#(" because it is an intermediate step in the model. Each ith element in these sequences, 𝒙𝒙(𝑖𝑖) and 𝒛𝒛(𝑖𝑖), are vectors of size d (that is, 𝒙𝒙(𝑖𝑖) ∈ 𝑅𝑅𝑑𝑑 ) representing the feature information for the input at position i, which is similar to RNNs. Then, for a seq2seq task, the goal of self-attention is to model the dependencies of the current input element to all other input elements. To achieve this, self-attention mechanisms are composed of three stages. First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 30 31 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 31 49 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 49 50 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 50 158 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 158 166 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 166 167 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 167 202 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 202 229 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 229 231 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 231 234 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 234 235 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 235 237 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 237 243 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 243 244 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 244 245 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 245 246 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 246 247 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 247 248 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 248 249 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 249 250 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 250 251 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 251 264 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 264 265 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 265 268 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 268 271 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 271 272 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 272 291 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 291 293 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 293 375 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 375 376 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 376 382 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 382 384 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 384 387 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 387 389 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 389 392 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 392 393 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 393 394 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 394 395 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 395 396 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 396 397 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 397 398 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 398 453 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 453 454 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 454 455 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 455 456 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 456 457 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 457 475 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 475 476 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 476 572 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 572 573 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 573 667 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 667 673 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 673 674 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 674 770 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 770 771 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 771 811 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 811 812 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 812 918 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 918 919 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 919 1027 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1027 1028 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1028 1039 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1039 1040 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1040 1042 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1042 1043 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1043 1067 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1067 1068 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1068 1072 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1072 1073 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1073 1174 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1174 1179 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1179 1180 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1180 1277 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1277 1278 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1278 1382 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1382 1383 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1383 1492 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1492 1493 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1493 1532 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1532 1533 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1533 1632 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1632 1633 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1633 1660 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1660 1661 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1661 1662 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1662 1663 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1663 1676 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1676 1677 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4673)) nil (25774 62011 25370 179000) 0 nil])
([nil nil ((#("because it is an intermediate step in the model" 0 29 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 29 30 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 30 47 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4677) (undo-tree-id53441 . 47) (undo-tree-id53442 . -46) (undo-tree-id53443 . -47) (t 25774 62011 77805 637000)) nil (25774 62042 979843 397000) 0 nil])
([nil nil ((#(". " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 4677) (undo-tree-id53438 . 2) (undo-tree-id53439 . -1) (undo-tree-id53440 . -2)) nil (25774 62042 979840 4000) 0 nil])
([nil nil ((4596 . 4598) (4593 . 4596) (4588 . 4593) (#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -4588) (undo-tree-id53193 . -1) (undo-tree-id53194 . -1) (undo-tree-id53195 . -1) (undo-tree-id53196 . -1) (undo-tree-id53197 . -1) (undo-tree-id53198 . -1) (undo-tree-id53199 . -1) (undo-tree-id53200 . -1) (undo-tree-id53201 . -1) (undo-tree-id53202 . -1) (undo-tree-id53203 . -1) (undo-tree-id53204 . -1) (undo-tree-id53205 . -1) (undo-tree-id53206 . -1) (undo-tree-id53207 . -1) (undo-tree-id53208 . -1) (undo-tree-id53209 . -1) (undo-tree-id53210 . -1) (undo-tree-id53211 . -1) (undo-tree-id53212 . -1) (undo-tree-id53213 . -1) (undo-tree-id53214 . -1) (undo-tree-id53215 . -1) (undo-tree-id53216 . -1) (undo-tree-id53217 . -1) (undo-tree-id53218 . -1) (undo-tree-id53219 . -1) (undo-tree-id53220 . -1) (undo-tree-id53221 . -1) (undo-tree-id53222 . -1) (undo-tree-id53223 . -1) (undo-tree-id53224 . -1) (undo-tree-id53225 . -1) (undo-tree-id53226 . -1) (undo-tree-id53227 . -1) (undo-tree-id53228 . -1) (undo-tree-id53229 . -1) (undo-tree-id53230 . -1) (undo-tree-id53231 . -1) (undo-tree-id53232 . -1) (undo-tree-id53233 . -1) (undo-tree-id53234 . -1) (undo-tree-id53235 . -1) (undo-tree-id53236 . -1) (undo-tree-id53237 . -1) (undo-tree-id53238 . -1) (undo-tree-id53239 . -1) (undo-tree-id53240 . -1) (undo-tree-id53241 . -1) (undo-tree-id53242 . -1) (undo-tree-id53243 . -1) (undo-tree-id53244 . -1) (undo-tree-id53245 . -1) (undo-tree-id53246 . -1) (undo-tree-id53247 . -1) (undo-tree-id53248 . -1) (undo-tree-id53249 . -1) (undo-tree-id53250 . -1) (undo-tree-id53251 . -1) (undo-tree-id53252 . -1) (undo-tree-id53253 . -1) (undo-tree-id53254 . -1) (undo-tree-id53255 . -1) (undo-tree-id53256 . -1) (undo-tree-id53257 . -1) (undo-tree-id53258 . -1) (undo-tree-id53259 . -1) (undo-tree-id53260 . -1) (undo-tree-id53261 . -1) (undo-tree-id53262 . -1) (undo-tree-id53263 . -1) (undo-tree-id53264 . -1) (undo-tree-id53265 . -1) (undo-tree-id53266 . -1) (undo-tree-id53267 . -1) (undo-tree-id53268 . -1) (undo-tree-id53269 . -1) (undo-tree-id53270 . -1) (undo-tree-id53271 . -1) (undo-tree-id53272 . -1) (undo-tree-id53273 . -1) (undo-tree-id53274 . -1) (undo-tree-id53275 . -1) (undo-tree-id53276 . -1) (undo-tree-id53277 . -1) (undo-tree-id53278 . -1) (undo-tree-id53279 . -1) (undo-tree-id53280 . -1) (undo-tree-id53281 . -1) (undo-tree-id53282 . -1) (undo-tree-id53283 . -1) (undo-tree-id53284 . -1) (undo-tree-id53285 . -1) (undo-tree-id53286 . -1) (undo-tree-id53287 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -4589) (undo-tree-id53288 . -1) (undo-tree-id53289 . -1) (undo-tree-id53290 . -1) (undo-tree-id53291 . -1) (undo-tree-id53292 . -1) (undo-tree-id53293 . -1) (undo-tree-id53294 . -1) (undo-tree-id53295 . -1) (undo-tree-id53296 . -1) (undo-tree-id53297 . -1) (undo-tree-id53298 . -1) (undo-tree-id53299 . -1) (undo-tree-id53300 . -1) (undo-tree-id53301 . -1) (undo-tree-id53302 . -1) (undo-tree-id53303 . -1) (undo-tree-id53304 . -1) (undo-tree-id53305 . -1) (undo-tree-id53306 . -1) (undo-tree-id53307 . -1) (undo-tree-id53308 . -1) (undo-tree-id53309 . -1) (undo-tree-id53310 . -1) (undo-tree-id53311 . -1) (undo-tree-id53312 . -1) (undo-tree-id53313 . -1) (undo-tree-id53314 . -1) (undo-tree-id53315 . -1) (undo-tree-id53316 . -1) (undo-tree-id53317 . -1) (undo-tree-id53318 . -1) (undo-tree-id53319 . -1) (undo-tree-id53320 . -1) (undo-tree-id53321 . -1) (undo-tree-id53322 . -1) (undo-tree-id53323 . -1) (undo-tree-id53324 . -1) (undo-tree-id53325 . -1) (undo-tree-id53326 . -1) (undo-tree-id53327 . -1) (undo-tree-id53328 . -1) (undo-tree-id53329 . -1) (undo-tree-id53330 . -1) (undo-tree-id53331 . -1) (undo-tree-id53332 . -1) (undo-tree-id53333 . -1) (undo-tree-id53334 . -1) (undo-tree-id53335 . -1) (undo-tree-id53336 . -1) (undo-tree-id53337 . -1) (undo-tree-id53338 . -1) (undo-tree-id53339 . -1) (undo-tree-id53340 . -1) (undo-tree-id53341 . -1) (undo-tree-id53342 . -1) (undo-tree-id53343 . -1) (undo-tree-id53344 . -1) (undo-tree-id53345 . -1) (undo-tree-id53346 . -1) (undo-tree-id53347 . -1) (undo-tree-id53348 . -1) (undo-tree-id53349 . -1) (undo-tree-id53350 . -1) (undo-tree-id53351 . -1) (undo-tree-id53352 . -1) (undo-tree-id53353 . -1) (undo-tree-id53354 . -1) (undo-tree-id53355 . -1) (undo-tree-id53356 . -1) (undo-tree-id53357 . -1) (undo-tree-id53358 . -1) (undo-tree-id53359 . -1) (undo-tree-id53360 . -1) (undo-tree-id53361 . -1) (#("l" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -4590) (undo-tree-id53362 . -1) (undo-tree-id53363 . -1) (undo-tree-id53364 . -1) (undo-tree-id53365 . -1) (undo-tree-id53366 . -1) (undo-tree-id53367 . -1) (undo-tree-id53368 . -1) (undo-tree-id53369 . -1) (undo-tree-id53370 . -1) (undo-tree-id53371 . -1) (undo-tree-id53372 . -1) (undo-tree-id53373 . -1) (undo-tree-id53374 . -1) (undo-tree-id53375 . -1) (undo-tree-id53376 . -1) (undo-tree-id53377 . -1) (undo-tree-id53378 . -1) (undo-tree-id53379 . -1) (undo-tree-id53380 . -1) (undo-tree-id53381 . -1) (undo-tree-id53382 . -1) (undo-tree-id53383 . -1) (undo-tree-id53384 . -1) (undo-tree-id53385 . -1) (undo-tree-id53386 . -1) (undo-tree-id53387 . -1) (undo-tree-id53388 . -1) (undo-tree-id53389 . -1) (undo-tree-id53390 . -1) (undo-tree-id53391 . -1) (undo-tree-id53392 . -1) (undo-tree-id53393 . -1) (undo-tree-id53394 . -1) (undo-tree-id53395 . -1) (undo-tree-id53396 . -1) (undo-tree-id53397 . -1) (undo-tree-id53398 . -1) (undo-tree-id53399 . -1) (undo-tree-id53400 . -1) (undo-tree-id53401 . -1) (undo-tree-id53402 . -1) (undo-tree-id53403 . -1) (undo-tree-id53404 . -1) (undo-tree-id53405 . -1) (undo-tree-id53406 . -1) (undo-tree-id53407 . -1) (undo-tree-id53408 . -1) (undo-tree-id53409 . -1) (undo-tree-id53410 . -1) (undo-tree-id53411 . -1) (undo-tree-id53412 . -1) (undo-tree-id53413 . -1) (undo-tree-id53414 . -1) (undo-tree-id53415 . -1) (undo-tree-id53416 . -1) (undo-tree-id53417 . -1) (undo-tree-id53418 . -1) (undo-tree-id53419 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -4591) (undo-tree-id53420 . -1) (undo-tree-id53421 . -1) (undo-tree-id53422 . -1) (undo-tree-id53423 . -1) (undo-tree-id53424 . -1) (undo-tree-id53425 . -1) (undo-tree-id53426 . -1) (undo-tree-id53427 . -1) (undo-tree-id53428 . -1) (undo-tree-id53429 . -1) (undo-tree-id53430 . -1) (undo-tree-id53431 . -1) (undo-tree-id53432 . -1) (undo-tree-id53433 . -1) (undo-tree-id53434 . -1) (undo-tree-id53435 . -1) (undo-tree-id53436 . -1) 4592 (4586 . 4592) (4585 . 4586) (4573 . 4585) (#("." 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -4573) (undo-tree-id53437 . -1) 4574 (4573 . 4574) (4497 . 4573) (#("- 

- Consider an input sequence of length T, as well as an output sequence." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 4 5 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) composition (0 1 [8226])) 5 14 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 14 53 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 53 54 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 54 75 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 75 76 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4497) (4497 . 4501) 4570) nil (25774 62042 979821 145000) 0 nil])
([nil nil ((#(", 𝒙𝒙(𝑖𝑖) and 𝒛𝒛(𝑖𝑖)," 0 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4741) (undo-tree-id54894 . -19) (undo-tree-id54895 . -19) (undo-tree-id54896 . -19) (undo-tree-id54897 . -19) (undo-tree-id54898 . -20) (undo-tree-id54899 . -19) (undo-tree-id54900 . -3) (undo-tree-id54901 . -3) (undo-tree-id54902 . -3) (undo-tree-id54903 . -3) (undo-tree-id54904 . -3) (undo-tree-id54905 . -3) (undo-tree-id54906 . -3) (undo-tree-id54907 . -3) (undo-tree-id54908 . -3) (undo-tree-id54909 . -3) (undo-tree-id54910 . -3) (undo-tree-id54911 . -3) (undo-tree-id54912 . -3) (undo-tree-id54913 . -3) (undo-tree-id54914 . -3) (undo-tree-id54915 . -3) (undo-tree-id54916 . -3) (undo-tree-id54917 . -3) (undo-tree-id54918 . -3) (undo-tree-id54919 . -3) (undo-tree-id54920 . -3) (undo-tree-id54921 . -4) (undo-tree-id54922 . -4) (undo-tree-id54923 . -4) (undo-tree-id54924 . -4) (undo-tree-id54925 . -4) (undo-tree-id54926 . -4) (undo-tree-id54927 . -4) (undo-tree-id54928 . -4) (undo-tree-id54929 . -4) (undo-tree-id54930 . -4) (undo-tree-id54931 . -4) (undo-tree-id54932 . -4) (undo-tree-id54933 . -4) (undo-tree-id54934 . -4) (undo-tree-id54935 . -4) (undo-tree-id54936 . -4) (undo-tree-id54937 . -4) (undo-tree-id54938 . -4) (undo-tree-id54939 . -4) (undo-tree-id54940 . -4) (undo-tree-id54941 . -4) (undo-tree-id54942 . -6) (undo-tree-id54943 . -6) (undo-tree-id54944 . -6) (undo-tree-id54945 . -6) (undo-tree-id54946 . -6) (undo-tree-id54947 . -6) (undo-tree-id54948 . -6) (undo-tree-id54949 . -6) (undo-tree-id54950 . -6) (undo-tree-id54951 . -6) (undo-tree-id54952 . -6) (undo-tree-id54953 . -6) (undo-tree-id54954 . -6) (undo-tree-id54955 . -6) (undo-tree-id54956 . -6) (undo-tree-id54957 . -6) (undo-tree-id54958 . -6) (undo-tree-id54959 . -6) (undo-tree-id54960 . -6) (undo-tree-id54961 . -6) (undo-tree-id54962 . -6) (undo-tree-id54963 . -7) (undo-tree-id54964 . -7) (undo-tree-id54965 . -7) (undo-tree-id54966 . -7) (undo-tree-id54967 . -7) (undo-tree-id54968 . -7) (undo-tree-id54969 . -7) (undo-tree-id54970 . -7) (undo-tree-id54971 . -7) (undo-tree-id54972 . -7) (undo-tree-id54973 . -7) (undo-tree-id54974 . -7) (undo-tree-id54975 . -7) (undo-tree-id54976 . -7) (undo-tree-id54977 . -7) (undo-tree-id54978 . -7) (undo-tree-id54979 . -7) (undo-tree-id54980 . -7) (undo-tree-id54981 . -7) (undo-tree-id54982 . -7) (undo-tree-id54983 . -7) (undo-tree-id54984 . -11) (undo-tree-id54985 . -11) (undo-tree-id54986 . -11) (undo-tree-id54987 . -11) (undo-tree-id54988 . -11) (undo-tree-id54989 . -11) (undo-tree-id54990 . -11) (undo-tree-id54991 . -11) (undo-tree-id54992 . -11) (undo-tree-id54993 . -11) (undo-tree-id54994 . -11) (undo-tree-id54995 . -11) (undo-tree-id54996 . -11) (undo-tree-id54997 . -11) (undo-tree-id54998 . -11) (undo-tree-id54999 . -11) (undo-tree-id55000 . -11) (undo-tree-id55001 . -11) (undo-tree-id55002 . -11) (undo-tree-id55003 . -11) (undo-tree-id55004 . -11) (undo-tree-id55005 . -14) (undo-tree-id55006 . -14) (undo-tree-id55007 . -14) (undo-tree-id55008 . -14) (undo-tree-id55009 . -14) (undo-tree-id55010 . -14) (undo-tree-id55011 . -14) (undo-tree-id55012 . -14) (undo-tree-id55013 . -14) (undo-tree-id55014 . -14) (undo-tree-id55015 . -14) (undo-tree-id55016 . -14) (undo-tree-id55017 . -14) (undo-tree-id55018 . -14) (undo-tree-id55019 . -14) (undo-tree-id55020 . -14) (undo-tree-id55021 . -14) (undo-tree-id55022 . -14) (undo-tree-id55023 . -14) (undo-tree-id55024 . -14) (undo-tree-id55025 . -14) (undo-tree-id55026 . -15) (undo-tree-id55027 . -15) (undo-tree-id55028 . -15) (undo-tree-id55029 . -15) (undo-tree-id55030 . -15) (undo-tree-id55031 . -15) (undo-tree-id55032 . -15) (undo-tree-id55033 . -15) (undo-tree-id55034 . -15) (undo-tree-id55035 . -15) (undo-tree-id55036 . -15) (undo-tree-id55037 . -15) (undo-tree-id55038 . -15) (undo-tree-id55039 . -15) (undo-tree-id55040 . -15) (undo-tree-id55041 . -15) (undo-tree-id55042 . -15) (undo-tree-id55043 . -15) (undo-tree-id55044 . -15) (undo-tree-id55045 . -15) (undo-tree-id55046 . -15) (undo-tree-id55047 . -17) (undo-tree-id55048 . -17) (undo-tree-id55049 . -17) (undo-tree-id55050 . -17) (undo-tree-id55051 . -17) (undo-tree-id55052 . -17) (undo-tree-id55053 . -17) (undo-tree-id55054 . -17) (undo-tree-id55055 . -17) (undo-tree-id55056 . -17) (undo-tree-id55057 . -17) (undo-tree-id55058 . -17) (undo-tree-id55059 . -17) (undo-tree-id55060 . -17) (undo-tree-id55061 . -17) (undo-tree-id55062 . -17) (undo-tree-id55063 . -17) (undo-tree-id55064 . -17) (undo-tree-id55065 . -17) (undo-tree-id55066 . -17) (undo-tree-id55067 . -17) (undo-tree-id55068 . -19) (undo-tree-id55069 . -19) (undo-tree-id55070 . -19) (undo-tree-id55071 . -19) (undo-tree-id55072 . -19) (undo-tree-id55073 . -19) (undo-tree-id55074 . -19) (undo-tree-id55075 . -19) (undo-tree-id55076 . -19) (undo-tree-id55077 . -19) (undo-tree-id55078 . -19) (undo-tree-id55079 . -19) (undo-tree-id55080 . -19) (undo-tree-id55081 . -19) (undo-tree-id55082 . -19) (undo-tree-id55083 . -19) (undo-tree-id55084 . -19) (undo-tree-id55085 . -19) (undo-tree-id55086 . -19) (undo-tree-id55087 . -19) (undo-tree-id55088 . -19) (undo-tree-id55089 . -19) (undo-tree-id55090 . -19) (undo-tree-id55091 . -19) (undo-tree-id55092 . -19) (undo-tree-id55093 . -19) (undo-tree-id55094 . -19) (undo-tree-id55095 . -19) (undo-tree-id55096 . -19) (undo-tree-id55097 . -19) (undo-tree-id55098 . -19) (undo-tree-id55099 . -19) (undo-tree-id55100 . -19) (undo-tree-id55101 . -19) (undo-tree-id55102 . -19) (undo-tree-id55103 . -19) (undo-tree-id55104 . -19) (undo-tree-id55105 . -20) 4760 (t 25774 62043 34106 980000)) nil (25774 62089 903280 462000) 0 nil])
([nil nil ((#("(that is, 𝒙𝒙(𝑖𝑖) ∈ 𝑅𝑅𝑑𝑑 )" 0 25 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4764) (undo-tree-id54599 . -24) (undo-tree-id54600 . -24) (undo-tree-id54601 . -24) (undo-tree-id54602 . -4) (undo-tree-id54603 . -4) (undo-tree-id54604 . -4) (undo-tree-id54605 . -4) (undo-tree-id54606 . -4) (undo-tree-id54607 . -4) (undo-tree-id54608 . -4) (undo-tree-id54609 . -4) (undo-tree-id54610 . -4) (undo-tree-id54611 . -4) (undo-tree-id54612 . -4) (undo-tree-id54613 . -4) (undo-tree-id54614 . -4) (undo-tree-id54615 . -4) (undo-tree-id54616 . -4) (undo-tree-id54617 . -4) (undo-tree-id54618 . -4) (undo-tree-id54619 . -4) (undo-tree-id54620 . -4) (undo-tree-id54621 . -4) (undo-tree-id54622 . -4) (undo-tree-id54623 . -24) (undo-tree-id54624 . -4) (undo-tree-id54625 . -4) (undo-tree-id54626 . -4) (undo-tree-id54627 . -4) (undo-tree-id54628 . -4) (undo-tree-id54629 . -4) (undo-tree-id54630 . -4) (undo-tree-id54631 . -4) (undo-tree-id54632 . -4) (undo-tree-id54633 . -4) (undo-tree-id54634 . -4) (undo-tree-id54635 . -4) (undo-tree-id54636 . -4) (undo-tree-id54637 . -4) (undo-tree-id54638 . -4) (undo-tree-id54639 . -4) (undo-tree-id54640 . -4) (undo-tree-id54641 . -4) (undo-tree-id54642 . -4) (undo-tree-id54643 . -4) (undo-tree-id54644 . -4) (undo-tree-id54645 . -1) (undo-tree-id54646 . -1) (undo-tree-id54647 . -1) (undo-tree-id54648 . -1) (undo-tree-id54649 . -1) (undo-tree-id54650 . -1) (undo-tree-id54651 . -1) (undo-tree-id54652 . -1) (undo-tree-id54653 . -1) (undo-tree-id54654 . -1) (undo-tree-id54655 . -1) (undo-tree-id54656 . -1) (undo-tree-id54657 . -1) (undo-tree-id54658 . -1) (undo-tree-id54659 . -1) (undo-tree-id54660 . -1) (undo-tree-id54661 . -1) (undo-tree-id54662 . -1) (undo-tree-id54663 . -1) (undo-tree-id54664 . -1) (undo-tree-id54665 . -1) (undo-tree-id54666 . -25) (undo-tree-id54667 . -24) (undo-tree-id54668 . -4) (undo-tree-id54669 . -4) (undo-tree-id54670 . -4) (undo-tree-id54671 . -4) (undo-tree-id54672 . -4) (undo-tree-id54673 . -4) (undo-tree-id54674 . -4) (undo-tree-id54675 . -4) (undo-tree-id54676 . -4) (undo-tree-id54677 . -4) (undo-tree-id54678 . -4) (undo-tree-id54679 . -4) (undo-tree-id54680 . -4) (undo-tree-id54681 . -4) (undo-tree-id54682 . -4) (undo-tree-id54683 . -4) (undo-tree-id54684 . -4) (undo-tree-id54685 . -4) (undo-tree-id54686 . -4) (undo-tree-id54687 . -4) (undo-tree-id54688 . -4) (undo-tree-id54689 . -7) (undo-tree-id54690 . -7) (undo-tree-id54691 . -7) (undo-tree-id54692 . -7) (undo-tree-id54693 . -7) (undo-tree-id54694 . -7) (undo-tree-id54695 . -7) (undo-tree-id54696 . -7) (undo-tree-id54697 . -7) (undo-tree-id54698 . -7) (undo-tree-id54699 . -7) (undo-tree-id54700 . -7) (undo-tree-id54701 . -7) (undo-tree-id54702 . -7) (undo-tree-id54703 . -7) (undo-tree-id54704 . -7) (undo-tree-id54705 . -7) (undo-tree-id54706 . -7) (undo-tree-id54707 . -7) (undo-tree-id54708 . -7) (undo-tree-id54709 . -7) (undo-tree-id54710 . -8) (undo-tree-id54711 . -8) (undo-tree-id54712 . -8) (undo-tree-id54713 . -8) (undo-tree-id54714 . -8) (undo-tree-id54715 . -8) (undo-tree-id54716 . -8) (undo-tree-id54717 . -8) (undo-tree-id54718 . -8) (undo-tree-id54719 . -8) (undo-tree-id54720 . -8) (undo-tree-id54721 . -8) (undo-tree-id54722 . -8) (undo-tree-id54723 . -8) (undo-tree-id54724 . -8) (undo-tree-id54725 . -8) (undo-tree-id54726 . -8) (undo-tree-id54727 . -8) (undo-tree-id54728 . -8) (undo-tree-id54729 . -8) (undo-tree-id54730 . -8) (undo-tree-id54731 . -11) (undo-tree-id54732 . -11) (undo-tree-id54733 . -11) (undo-tree-id54734 . -11) (undo-tree-id54735 . -11) (undo-tree-id54736 . -11) (undo-tree-id54737 . -11) (undo-tree-id54738 . -11) (undo-tree-id54739 . -11) (undo-tree-id54740 . -11) (undo-tree-id54741 . -11) (undo-tree-id54742 . -11) (undo-tree-id54743 . -11) (undo-tree-id54744 . -11) (undo-tree-id54745 . -11) (undo-tree-id54746 . -11) (undo-tree-id54747 . -11) (undo-tree-id54748 . -11) (undo-tree-id54749 . -11) (undo-tree-id54750 . -11) (undo-tree-id54751 . -11) (undo-tree-id54752 . -12) (undo-tree-id54753 . -12) (undo-tree-id54754 . -12) (undo-tree-id54755 . -12) (undo-tree-id54756 . -12) (undo-tree-id54757 . -12) (undo-tree-id54758 . -12) (undo-tree-id54759 . -12) (undo-tree-id54760 . -12) (undo-tree-id54761 . -12) (undo-tree-id54762 . -12) (undo-tree-id54763 . -12) (undo-tree-id54764 . -12) (undo-tree-id54765 . -12) (undo-tree-id54766 . -12) (undo-tree-id54767 . -12) (undo-tree-id54768 . -12) (undo-tree-id54769 . -12) (undo-tree-id54770 . -12) (undo-tree-id54771 . -12) (undo-tree-id54772 . -12) (undo-tree-id54773 . -14) (undo-tree-id54774 . -14) (undo-tree-id54775 . -14) (undo-tree-id54776 . -14) (undo-tree-id54777 . -14) (undo-tree-id54778 . -14) (undo-tree-id54779 . -14) (undo-tree-id54780 . -14) (undo-tree-id54781 . -14) (undo-tree-id54782 . -14) (undo-tree-id54783 . -14) (undo-tree-id54784 . -14) (undo-tree-id54785 . -14) (undo-tree-id54786 . -14) (undo-tree-id54787 . -14) (undo-tree-id54788 . -14) (undo-tree-id54789 . -14) (undo-tree-id54790 . -14) (undo-tree-id54791 . -14) (undo-tree-id54792 . -14) (undo-tree-id54793 . -14) (undo-tree-id54794 . -15) (undo-tree-id54795 . -15) (undo-tree-id54796 . -15) (undo-tree-id54797 . -15) (undo-tree-id54798 . -15) (undo-tree-id54799 . -15) (undo-tree-id54800 . -15) (undo-tree-id54801 . -15) (undo-tree-id54802 . -15) (undo-tree-id54803 . -15) (undo-tree-id54804 . -15) (undo-tree-id54805 . -15) (undo-tree-id54806 . -15) (undo-tree-id54807 . -15) (undo-tree-id54808 . -15) (undo-tree-id54809 . -15) (undo-tree-id54810 . -15) (undo-tree-id54811 . -15) (undo-tree-id54812 . -15) (undo-tree-id54813 . -15) (undo-tree-id54814 . -15) (undo-tree-id54815 . -17) (undo-tree-id54816 . -17) (undo-tree-id54817 . -17) (undo-tree-id54818 . -17) (undo-tree-id54819 . -17) (undo-tree-id54820 . -17) (undo-tree-id54821 . -17) (undo-tree-id54822 . -17) (undo-tree-id54823 . -17) (undo-tree-id54824 . -17) (undo-tree-id54825 . -17) (undo-tree-id54826 . -17) (undo-tree-id54827 . -17) (undo-tree-id54828 . -17) (undo-tree-id54829 . -17) (undo-tree-id54830 . -17) (undo-tree-id54831 . -17) (undo-tree-id54832 . -17) (undo-tree-id54833 . -17) (undo-tree-id54834 . -17) (undo-tree-id54835 . -17) (undo-tree-id54836 . -22) (undo-tree-id54837 . -22) (undo-tree-id54838 . -22) (undo-tree-id54839 . -22) (undo-tree-id54840 . -22) (undo-tree-id54841 . -22) (undo-tree-id54842 . -22) (undo-tree-id54843 . -22) (undo-tree-id54844 . -22) (undo-tree-id54845 . -22) (undo-tree-id54846 . -22) (undo-tree-id54847 . -22) (undo-tree-id54848 . -22) (undo-tree-id54849 . -22) (undo-tree-id54850 . -22) (undo-tree-id54851 . -22) (undo-tree-id54852 . -22) (undo-tree-id54853 . -22) (undo-tree-id54854 . -22) (undo-tree-id54855 . -22) (undo-tree-id54856 . -22) (undo-tree-id54857 . -24) (undo-tree-id54858 . -24) (undo-tree-id54859 . -24) (undo-tree-id54860 . -24) (undo-tree-id54861 . -24) (undo-tree-id54862 . -24) (undo-tree-id54863 . -24) (undo-tree-id54864 . -24) (undo-tree-id54865 . -24) (undo-tree-id54866 . -24) (undo-tree-id54867 . -24) (undo-tree-id54868 . -24) (undo-tree-id54869 . -24) (undo-tree-id54870 . -24) (undo-tree-id54871 . -24) (undo-tree-id54872 . 1) (undo-tree-id54873 . -25) (undo-tree-id54874 . 25) (undo-tree-id54875 . -1) (undo-tree-id54876 . -24) (undo-tree-id54877 . -24) (undo-tree-id54878 . -24) (undo-tree-id54879 . -24) (undo-tree-id54880 . -24) (undo-tree-id54881 . -24) (undo-tree-id54882 . -24) (undo-tree-id54883 . -24) (undo-tree-id54884 . -24) (undo-tree-id54885 . -24) (undo-tree-id54886 . -24) (undo-tree-id54887 . -24) (undo-tree-id54888 . -24) (undo-tree-id54889 . -24) (undo-tree-id54890 . -24) (undo-tree-id54891 . -24) (undo-tree-id54892 . -24) (undo-tree-id54893 . -25) 4788) nil (25774 62089 903150 50000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4764) (undo-tree-id54596 . 1) (undo-tree-id54597 . -1) (undo-tree-id54598 . -1)) nil (25774 62089 905116 784000) 0 nil])
([nil nil ((4704 . 6290) (#("- Then, for a seq2seq task, the goal of self-attention is to model the dependencies of the current input element to all other input elements. To achieve this, self-attention mechanisms are composed of three stages. First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)

- Each ith element in these sequences are vectors of size d representing the feature information for the input at position i, which is similar to RNNs." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 4 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 4 5 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 5 6 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 6 7 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 7 20 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 20 21 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 21 24 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 24 27 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 27 28 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 28 47 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 47 49 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 49 131 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 131 132 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 132 138 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 138 140 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 140 143 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 143 145 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 145 148 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 148 149 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 149 150 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 150 151 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 151 152 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 152 153 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 153 154 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 154 208 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 208 209 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 209 210 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 210 211 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 211 212 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 212 213 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 213 231 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 231 232 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 232 302 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 302 304 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 304 324 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 324 328 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 328 329 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 329 349 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 349 350 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 350 423 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 423 429 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 429 430 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 430 526 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 526 527 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 527 567 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 567 568 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 568 674 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 674 675 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 675 783 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 783 784 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 784 795 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 795 796 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 796 798 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 798 799 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 799 823 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 823 824 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 824 828 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 828 829 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 829 930 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 930 935 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 935 936 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 936 1033 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1033 1034 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1034 1138 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1138 1139 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1139 1248 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1248 1249 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1249 1288 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1288 1289 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1289 1388 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1388 1389 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1389 1416 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1416 1417 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1417 1418 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1418 1419 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1419 1432 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1432 1433 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1433 1434 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1434 1435 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1435 1436 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1436 1437 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1437 1499 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1499 1507 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1507 1508 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1508 1543 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1543 1559 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1559 1570 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1570 1572 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1572 1575 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1575 1576 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1576 1578 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1578 1584 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1584 1585 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1585 1586 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4704) (undo-tree-id55112 . -1495) (undo-tree-id55113 . -1495) (undo-tree-id55114 . -1495) (undo-tree-id55115 . -1495) (undo-tree-id55116 . 91) (undo-tree-id55117 . -1495) (undo-tree-id55118 . -1495) (undo-tree-id55119 . -1459) (undo-tree-id55120 . -1459) (undo-tree-id55121 . -1459) (undo-tree-id55122 . -1459) (undo-tree-id55123 . -1459) (undo-tree-id55124 . -1459) (undo-tree-id55125 . -1459) (undo-tree-id55126 . -1459) (undo-tree-id55127 . -1459) (undo-tree-id55128 . -1459) (undo-tree-id55129 . -1459) (undo-tree-id55130 . -1459) (undo-tree-id55131 . -1459) (undo-tree-id55132 . -1459) (undo-tree-id55133 . -1459) (undo-tree-id55134 . -1459) (undo-tree-id55135 . -1459) (undo-tree-id55136 . -1459) (undo-tree-id55137 . -1459) (undo-tree-id55138 . -1459) (undo-tree-id55139 . -1459) (undo-tree-id55140 . -1459) (undo-tree-id55141 . -1459) (undo-tree-id55142 . -1459) (undo-tree-id55143 . -1459) (undo-tree-id55144 . -1459) (undo-tree-id55145 . -1459) (undo-tree-id55146 . -1459) (undo-tree-id55147 . -1459) (undo-tree-id55148 . -1459) (undo-tree-id55149 . -1459) (undo-tree-id55150 . -1495) (undo-tree-id55151 . -1495) (undo-tree-id55152 . -1495) (undo-tree-id55153 . -1495) (undo-tree-id55154 . -1495) (undo-tree-id55155 . -1495) (undo-tree-id55156 . -1495) (undo-tree-id55157 . -1495) (undo-tree-id55158 . -1495) (undo-tree-id55159 . -1495) (undo-tree-id55160 . -1495) (undo-tree-id55161 . -1495) (undo-tree-id55162 . -1495) (undo-tree-id55163 . -1495) (undo-tree-id55164 . -1495) (undo-tree-id55165 . -1495) (undo-tree-id55166 . -1495) (undo-tree-id55167 . -1495) (undo-tree-id55168 . -1495) (undo-tree-id55169 . -1495) (undo-tree-id55170 . -1495) (undo-tree-id55171 . -1459) (undo-tree-id55172 . -1459) (undo-tree-id55173 . -1459) (undo-tree-id55174 . -1459) (undo-tree-id55175 . -1459) (undo-tree-id55176 . -1459) (undo-tree-id55177 . -1459) (undo-tree-id55178 . -1459) (undo-tree-id55179 . -1459) (undo-tree-id55180 . -1459) (undo-tree-id55181 . -1459) (undo-tree-id55182 . -1459) (undo-tree-id55183 . -1459) (undo-tree-id55184 . -1459) (undo-tree-id55185 . -1459) (undo-tree-id55186 . -1459) (undo-tree-id55187 . -1586) (undo-tree-id55188 . -1437) (undo-tree-id55189 . -1437) (undo-tree-id55190 . -1437) (undo-tree-id55191 . -1437) (undo-tree-id55192 . -1437) (undo-tree-id55193 . -1437) (undo-tree-id55194 . -1437) (undo-tree-id55195 . -1437) (undo-tree-id55196 . -1437) (undo-tree-id55197 . -1437) (undo-tree-id55198 . -1437) (undo-tree-id55199 . -1437) (undo-tree-id55200 . -1437) (undo-tree-id55201 . -1437) (undo-tree-id55202 . -1437) (undo-tree-id55203 . -1437) (undo-tree-id55204 . -1437) (undo-tree-id55205 . -1437) (undo-tree-id55206 . -1437) (undo-tree-id55207 . -1437) (undo-tree-id55208 . -1437) (undo-tree-id55209 . -1437) (undo-tree-id55210 . -1437) (undo-tree-id55211 . -1437) (undo-tree-id55212 . -1437) (undo-tree-id55213 . -1437) (undo-tree-id55214 . -1437) (undo-tree-id55215 . -1437) (undo-tree-id55216 . -1437) (undo-tree-id55217 . -1437) (undo-tree-id55218 . -1437) (undo-tree-id55219 . -1437) (undo-tree-id55220 . -1437) (undo-tree-id55221 . -1437) (undo-tree-id55222 . -1437) (undo-tree-id55223 . -1437) (undo-tree-id55224 . -1437) (undo-tree-id55225 . -1437) (undo-tree-id55226 . -1437) (undo-tree-id55227 . -1437) (undo-tree-id55228 . -1437) (undo-tree-id55229 . -1437) (undo-tree-id55230 . -1437) (undo-tree-id55231 . -1437) (undo-tree-id55232 . -1437) (undo-tree-id55233 . -1437) (undo-tree-id55234 . -1442) (undo-tree-id55235 . -1442) (undo-tree-id55236 . -1442) (undo-tree-id55237 . -1442) (undo-tree-id55238 . -1442) (undo-tree-id55239 . -1442) (undo-tree-id55240 . -1442) (undo-tree-id55241 . -1442) (undo-tree-id55242 . -1442) (undo-tree-id55243 . -1442) (undo-tree-id55244 . -1442) (undo-tree-id55245 . -1442) (undo-tree-id55246 . -1442) (undo-tree-id55247 . -1442) (undo-tree-id55248 . -1442) (undo-tree-id55249 . -1442) (undo-tree-id55250 . -1446) (undo-tree-id55251 . -1446) (undo-tree-id55252 . -1446) (undo-tree-id55253 . -1446) (undo-tree-id55254 . -1446) (undo-tree-id55255 . -1446) (undo-tree-id55256 . -1446) (undo-tree-id55257 . -1446) (undo-tree-id55258 . -1446) (undo-tree-id55259 . -1446) (undo-tree-id55260 . -1446) (undo-tree-id55261 . -1446) (undo-tree-id55262 . -1446) (undo-tree-id55263 . -1446) (undo-tree-id55264 . -1446) (undo-tree-id55265 . -1446) (undo-tree-id55266 . -1454) (undo-tree-id55267 . -1454) (undo-tree-id55268 . -1454) (undo-tree-id55269 . -1454) (undo-tree-id55270 . -1454) (undo-tree-id55271 . -1454) (undo-tree-id55272 . -1454) (undo-tree-id55273 . -1454) (undo-tree-id55274 . -1454) (undo-tree-id55275 . -1454) (undo-tree-id55276 . -1454) (undo-tree-id55277 . -1454) (undo-tree-id55278 . -1454) (undo-tree-id55279 . -1454) (undo-tree-id55280 . -1454) (undo-tree-id55281 . -1454) (undo-tree-id55282 . -1457) (undo-tree-id55283 . -1457) (undo-tree-id55284 . -1457) (undo-tree-id55285 . -1457) (undo-tree-id55286 . -1457) (undo-tree-id55287 . -1457) (undo-tree-id55288 . -1457) (undo-tree-id55289 . -1457) (undo-tree-id55290 . -1457) (undo-tree-id55291 . -1457) (undo-tree-id55292 . -1457) (undo-tree-id55293 . -1457) (undo-tree-id55294 . -1457) (undo-tree-id55295 . -1457) (undo-tree-id55296 . -1457) (undo-tree-id55297 . -1457) (undo-tree-id55298 . -1463) (undo-tree-id55299 . -1463) (undo-tree-id55300 . -1463) (undo-tree-id55301 . -1463) (undo-tree-id55302 . -1463) (undo-tree-id55303 . -1463) (undo-tree-id55304 . -1463) (undo-tree-id55305 . -1463) (undo-tree-id55306 . -1463) (undo-tree-id55307 . -1463) (undo-tree-id55308 . -1463) (undo-tree-id55309 . -1463) (undo-tree-id55310 . -1463) (undo-tree-id55311 . -1463) (undo-tree-id55312 . -1463) (undo-tree-id55313 . -1463) (undo-tree-id55314 . -1472) (undo-tree-id55315 . -1472) (undo-tree-id55316 . -1472) (undo-tree-id55317 . -1472) (undo-tree-id55318 . -1472) (undo-tree-id55319 . -1472) (undo-tree-id55320 . -1472) (undo-tree-id55321 . -1472) (undo-tree-id55322 . -1472) (undo-tree-id55323 . -1472) (undo-tree-id55324 . -1472) (undo-tree-id55325 . -1472) (undo-tree-id55326 . -1472) (undo-tree-id55327 . -1472) (undo-tree-id55328 . -1472) (undo-tree-id55329 . -1472) (undo-tree-id55330 . -1472) (undo-tree-id55331 . -1472) (undo-tree-id55332 . -1472) (undo-tree-id55333 . -1472) (undo-tree-id55334 . -1472) (undo-tree-id55335 . -1472) (undo-tree-id55336 . -1472) (undo-tree-id55337 . -1472) (undo-tree-id55338 . -1472) (undo-tree-id55339 . -1472) (undo-tree-id55340 . -1472) (undo-tree-id55341 . -1472) (undo-tree-id55342 . -1472) (undo-tree-id55343 . -1472) (undo-tree-id55344 . -1472) (undo-tree-id55345 . -1472) (undo-tree-id55346 . -1472) (undo-tree-id55347 . -1472) (undo-tree-id55348 . -1472) (undo-tree-id55349 . -1472) (undo-tree-id55350 . -1472) (undo-tree-id55351 . -1472) (undo-tree-id55352 . -1472) (undo-tree-id55353 . -1472) (undo-tree-id55354 . -1472) (undo-tree-id55355 . -1472) (undo-tree-id55356 . -1472) (undo-tree-id55357 . -1472) (undo-tree-id55358 . -1472) (undo-tree-id55359 . -1472) (undo-tree-id55360 . -1472) (undo-tree-id55361 . -1472) (undo-tree-id55362 . -1472) (undo-tree-id55363 . -1472) (undo-tree-id55364 . -1472) (undo-tree-id55365 . -1472) (undo-tree-id55366 . -1472) (undo-tree-id55367 . -1472) (undo-tree-id55368 . -1472) (undo-tree-id55369 . -1472) (undo-tree-id55370 . -1472) (undo-tree-id55371 . -1472) (undo-tree-id55372 . -1472) (undo-tree-id55373 . -1472) (undo-tree-id55374 . -1472) (undo-tree-id55375 . -1472) (undo-tree-id55376 . -1472) (undo-tree-id55377 . -1472) (undo-tree-id55378 . -1472) (undo-tree-id55379 . -1472) (undo-tree-id55380 . -1472) (undo-tree-id55381 . -1472) (undo-tree-id55382 . -1472) (undo-tree-id55383 . -1472) (undo-tree-id55384 . -1472) (undo-tree-id55385 . -1472) (undo-tree-id55386 . -1472) (undo-tree-id55387 . -1472) (undo-tree-id55388 . -1472) (undo-tree-id55389 . -1472) (undo-tree-id55390 . -1472) (undo-tree-id55391 . -1472) (undo-tree-id55392 . -1472) (undo-tree-id55393 . -1472) (undo-tree-id55394 . -1472) (undo-tree-id55395 . -1472) (undo-tree-id55396 . -1472) (undo-tree-id55397 . -1472) (undo-tree-id55398 . -1472) (undo-tree-id55399 . -1472) (undo-tree-id55400 . -1472) (undo-tree-id55401 . -1472) (undo-tree-id55402 . -1472) (undo-tree-id55403 . -1472) (undo-tree-id55404 . -1472) (undo-tree-id55405 . -1472) (undo-tree-id55406 . -1472) (undo-tree-id55407 . -1472) (undo-tree-id55408 . -1472) (undo-tree-id55409 . -1472) (undo-tree-id55410 . -1472) (undo-tree-id55411 . -1472) (undo-tree-id55412 . -1472) (undo-tree-id55413 . -1472) (undo-tree-id55414 . -1472) (undo-tree-id55415 . -1472) (undo-tree-id55416 . -1472) (undo-tree-id55417 . -1472) (undo-tree-id55418 . -1472) (undo-tree-id55419 . -1472) (undo-tree-id55420 . -1472) (undo-tree-id55421 . -1472) (undo-tree-id55422 . -1472) (undo-tree-id55423 . -1472) (undo-tree-id55424 . -1472) (undo-tree-id55425 . -1472) (undo-tree-id55426 . -1472) (undo-tree-id55427 . -1472) (undo-tree-id55428 . -1472) (undo-tree-id55429 . -1472) (undo-tree-id55430 . -1472) (undo-tree-id55431 . -1472) (undo-tree-id55432 . -1472) (undo-tree-id55433 . -1472) (undo-tree-id55434 . -1472) (undo-tree-id55435 . -1472) (undo-tree-id55436 . -1472) (undo-tree-id55437 . -1472) (undo-tree-id55438 . -1472) (undo-tree-id55439 . -1472) (undo-tree-id55440 . -1472) (undo-tree-id55441 . -1472) (undo-tree-id55442 . -1472) (undo-tree-id55443 . -1472) (undo-tree-id55444 . -1472) (undo-tree-id55445 . -1472) (undo-tree-id55446 . -1472) (undo-tree-id55447 . -1472) (undo-tree-id55448 . -1472) (undo-tree-id55449 . -1472) (undo-tree-id55450 . -1472) (undo-tree-id55451 . -1472) (undo-tree-id55452 . -1472) (undo-tree-id55453 . -1472) (undo-tree-id55454 . -1472) (undo-tree-id55455 . -1472) (undo-tree-id55456 . -1472) (undo-tree-id55457 . -1472) (undo-tree-id55458 . -1472) (undo-tree-id55459 . -1472) (undo-tree-id55460 . -1472) (undo-tree-id55461 . -1472) (undo-tree-id55462 . -1472) (undo-tree-id55463 . -1472) (undo-tree-id55464 . -1472) (undo-tree-id55465 . -1472) (undo-tree-id55466 . -1472) (undo-tree-id55467 . -1472) (undo-tree-id55468 . -1472) (undo-tree-id55469 . -1472) (undo-tree-id55470 . -1472) (undo-tree-id55471 . -1472) (undo-tree-id55472 . -1472) (undo-tree-id55473 . -1472) (undo-tree-id55474 . -1472) (undo-tree-id55475 . -1472) (undo-tree-id55476 . -1472) (undo-tree-id55477 . -1472) (undo-tree-id55478 . -1472) (undo-tree-id55479 . -1472) (undo-tree-id55480 . -1472) (undo-tree-id55481 . -1472) (undo-tree-id55482 . -1472) (undo-tree-id55483 . -1472) (undo-tree-id55484 . -1472) (undo-tree-id55485 . -1472) (undo-tree-id55486 . -1472) (undo-tree-id55487 . -1472) (undo-tree-id55488 . -1472) (undo-tree-id55489 . -1472) (undo-tree-id55490 . -1472) (undo-tree-id55491 . -1472) (undo-tree-id55492 . -1472) (undo-tree-id55493 . -1472) (undo-tree-id55494 . -1472) (undo-tree-id55495 . -1472) (undo-tree-id55496 . -1472) (undo-tree-id55497 . -1472) (undo-tree-id55498 . -1472) (undo-tree-id55499 . -1472) (undo-tree-id55500 . -1472) (undo-tree-id55501 . -1472) (undo-tree-id55502 . -1472) (undo-tree-id55503 . -1472) (undo-tree-id55504 . -1472) (undo-tree-id55505 . -1472) (undo-tree-id55506 . -1472) (undo-tree-id55507 . -1472) (undo-tree-id55508 . -1472) (undo-tree-id55509 . -1472) (undo-tree-id55510 . -1472) (undo-tree-id55511 . -1472) (undo-tree-id55512 . -1472) (undo-tree-id55513 . -1472) (undo-tree-id55514 . -1472) (undo-tree-id55515 . -1472) (undo-tree-id55516 . -1472) (undo-tree-id55517 . -1472) (undo-tree-id55518 . -1472) (undo-tree-id55519 . -1472) (undo-tree-id55520 . -1472) (undo-tree-id55521 . -1472) (undo-tree-id55522 . -1472) (undo-tree-id55523 . -1472) (undo-tree-id55524 . -1472) (undo-tree-id55525 . -1472) (undo-tree-id55526 . -1472) (undo-tree-id55527 . -1472) (undo-tree-id55528 . -1472) (undo-tree-id55529 . -1472) (undo-tree-id55530 . -1472) (undo-tree-id55531 . -1472) (undo-tree-id55532 . -1472) (undo-tree-id55533 . -1472) (undo-tree-id55534 . -1472) (undo-tree-id55535 . -1472) (undo-tree-id55536 . -1472) (undo-tree-id55537 . -1472) (undo-tree-id55538 . -1472) (undo-tree-id55539 . -1472) (undo-tree-id55540 . -1472) (undo-tree-id55541 . -1472) (undo-tree-id55542 . -1472) (undo-tree-id55543 . -1472) (undo-tree-id55544 . -1472) (undo-tree-id55545 . -1472) (undo-tree-id55546 . -1472) (undo-tree-id55547 . -1472) (undo-tree-id55548 . -1472) (undo-tree-id55549 . -1472) (undo-tree-id55550 . -1472) (undo-tree-id55551 . -1472) (undo-tree-id55552 . -1472) (undo-tree-id55553 . -1472) (undo-tree-id55554 . -1472) (undo-tree-id55555 . -1472) (undo-tree-id55556 . -1472) (undo-tree-id55557 . -1472) (undo-tree-id55558 . -1472) (undo-tree-id55559 . -1472) (undo-tree-id55560 . -1472) (undo-tree-id55561 . -1472) (undo-tree-id55562 . -1472) (undo-tree-id55563 . -1472) (undo-tree-id55564 . -1472) (undo-tree-id55565 . -1472) (undo-tree-id55566 . -1472) (undo-tree-id55567 . -1472) (undo-tree-id55568 . -1472) (undo-tree-id55569 . -1472) (undo-tree-id55570 . -1472) (undo-tree-id55571 . -1472) (undo-tree-id55572 . -1472) (undo-tree-id55573 . -1472) (undo-tree-id55574 . -1472) (undo-tree-id55575 . -1472) (undo-tree-id55576 . -1472) (undo-tree-id55577 . -1472) (undo-tree-id55578 . -1472) (undo-tree-id55579 . -1472) (undo-tree-id55580 . -1472) (undo-tree-id55581 . -1472) (undo-tree-id55582 . -1472) (undo-tree-id55583 . -1472) (undo-tree-id55584 . -1472) (undo-tree-id55585 . -1472) (undo-tree-id55586 . -1472) (undo-tree-id55587 . -1472) (undo-tree-id55588 . -1472) (undo-tree-id55589 . -1472) (undo-tree-id55590 . -1472) (undo-tree-id55591 . -1472) (undo-tree-id55592 . -1472) (undo-tree-id55593 . -1472) (undo-tree-id55594 . -1472) (undo-tree-id55595 . -1472) (undo-tree-id55596 . -1472) (undo-tree-id55597 . -1472) (undo-tree-id55598 . -1472) (undo-tree-id55599 . -1472) (undo-tree-id55600 . -1475) (undo-tree-id55601 . -1475) (undo-tree-id55602 . -1475) (undo-tree-id55603 . -1475) (undo-tree-id55604 . -1475) (undo-tree-id55605 . -1475) (undo-tree-id55606 . -1475) (undo-tree-id55607 . -1475) (undo-tree-id55608 . -1475) (undo-tree-id55609 . -1475) (undo-tree-id55610 . -1475) (undo-tree-id55611 . -1475) (undo-tree-id55612 . -1475) (undo-tree-id55613 . -1475) (undo-tree-id55614 . -1475) (undo-tree-id55615 . -1475) (undo-tree-id55616 . -1483) (undo-tree-id55617 . -1483) (undo-tree-id55618 . -1483) (undo-tree-id55619 . -1483) (undo-tree-id55620 . -1483) (undo-tree-id55621 . -1483) (undo-tree-id55622 . -1483) (undo-tree-id55623 . -1483) (undo-tree-id55624 . -1483) (undo-tree-id55625 . -1483) (undo-tree-id55626 . -1483) (undo-tree-id55627 . -1483) (undo-tree-id55628 . -1483) (undo-tree-id55629 . -1483) (undo-tree-id55630 . -1483) (undo-tree-id55631 . -1483) (undo-tree-id55632 . -1486) (undo-tree-id55633 . -1486) (undo-tree-id55634 . -1486) (undo-tree-id55635 . -1486) (undo-tree-id55636 . -1486) (undo-tree-id55637 . -1486) (undo-tree-id55638 . -1486) (undo-tree-id55639 . -1486) (undo-tree-id55640 . -1486) (undo-tree-id55641 . -1486) (undo-tree-id55642 . -1486) (undo-tree-id55643 . -1486) (undo-tree-id55644 . -1486) (undo-tree-id55645 . -1486) (undo-tree-id55646 . -1486) (undo-tree-id55647 . -1486) (undo-tree-id55648 . -1491) (undo-tree-id55649 . -1491) (undo-tree-id55650 . -1491) (undo-tree-id55651 . -1491) (undo-tree-id55652 . -1491) (undo-tree-id55653 . -1491) (undo-tree-id55654 . -1491) (undo-tree-id55655 . -1491) (undo-tree-id55656 . -1491) (undo-tree-id55657 . -1491) (undo-tree-id55658 . -1491) (undo-tree-id55659 . -1491) (undo-tree-id55660 . -1491) (undo-tree-id55661 . -1491) (undo-tree-id55662 . -1491) (undo-tree-id55663 . -1491) (undo-tree-id55664 . -1493) (undo-tree-id55665 . -1493) (undo-tree-id55666 . -1493) (undo-tree-id55667 . -1493) (undo-tree-id55668 . -1493) (undo-tree-id55669 . -1493) (undo-tree-id55670 . -1493) (undo-tree-id55671 . -1493) (undo-tree-id55672 . -1493) (undo-tree-id55673 . -1493) (undo-tree-id55674 . -1493) (undo-tree-id55675 . -1493) (undo-tree-id55676 . -1493) (undo-tree-id55677 . -1493) (undo-tree-id55678 . -1493) (undo-tree-id55679 . -1493) (undo-tree-id55680 . -1495) (undo-tree-id55681 . -1495) (undo-tree-id55682 . -1495) (undo-tree-id55683 . -1495) (undo-tree-id55684 . -1495) (undo-tree-id55685 . -1495) (undo-tree-id55686 . -1495) (undo-tree-id55687 . -1495) (undo-tree-id55688 . -1495) (undo-tree-id55689 . -1495) (undo-tree-id55690 . -1495) (undo-tree-id55691 . -1495) (undo-tree-id55692 . -1495) (undo-tree-id55693 . -1495) (undo-tree-id55694 . -1495) (undo-tree-id55695 . -1495) (undo-tree-id55696 . -1495) (undo-tree-id55697 . -1495) (undo-tree-id55698 . -1495) (undo-tree-id55699 . -1495) (undo-tree-id55700 . -1495) (undo-tree-id55701 . -1495) (undo-tree-id55702 . -1495) (undo-tree-id55703 . -1495) (undo-tree-id55704 . -1495) (undo-tree-id55705 . -1495) (undo-tree-id55706 . -1495) (undo-tree-id55707 . -1495) (undo-tree-id55708 . -1495) (undo-tree-id55709 . -1495) (undo-tree-id55710 . -1495) (undo-tree-id55711 . -1495) (undo-tree-id55712 . -1495) (undo-tree-id55713 . -1495) (undo-tree-id55714 . -1495) (undo-tree-id55715 . -1495) (undo-tree-id55716 . -1495) (undo-tree-id55717 . -1495) (undo-tree-id55718 . -1495) (undo-tree-id55719 . -1495) (undo-tree-id55720 . -1495) (undo-tree-id55721 . -1495) (undo-tree-id55722 . -1495) (undo-tree-id55723 . -1495) (undo-tree-id55724 . -1495) (undo-tree-id55725 . -1495) (undo-tree-id55726 . -1495) (undo-tree-id55727 . -1495) (undo-tree-id55728 . -1495) (undo-tree-id55729 . -1495) (undo-tree-id55730 . -1495) (undo-tree-id55731 . -1495) (undo-tree-id55732 . -1495) (undo-tree-id55733 . -1495) (undo-tree-id55734 . -1495) (undo-tree-id55735 . -1495) (undo-tree-id55736 . -1495) (undo-tree-id55737 . -1495) (undo-tree-id55738 . -1495) (undo-tree-id55739 . -1495) (undo-tree-id55740 . -1495) (undo-tree-id55741 . -1495) (undo-tree-id55742 . -1495) (undo-tree-id55743 . -1495) (undo-tree-id55744 . -1495) (undo-tree-id55745 . -1495) (undo-tree-id55746 . -1495) (undo-tree-id55747 . -1495) (undo-tree-id55748 . -1495) (undo-tree-id55749 . -1495) (undo-tree-id55750 . -1495) (undo-tree-id55751 . -1495) (undo-tree-id55752 . -1495) (undo-tree-id55753 . -1495) (undo-tree-id55754 . -1495) (undo-tree-id55755 . -1495) (undo-tree-id55756 . -1495) (undo-tree-id55757 . -1495) (undo-tree-id55758 . -1495) (undo-tree-id55759 . -1495) (undo-tree-id55760 . -1495) (undo-tree-id55761 . -1495) (undo-tree-id55762 . -1495) (undo-tree-id55763 . -1495) (undo-tree-id55764 . -1495) (undo-tree-id55765 . -1495) (undo-tree-id55766 . -1495) (undo-tree-id55767 . -1495) (undo-tree-id55768 . -1495) (undo-tree-id55769 . -1495) (undo-tree-id55770 . -1495) (undo-tree-id55771 . -1495) (undo-tree-id55772 . -1495) (undo-tree-id55773 . -1495) (undo-tree-id55774 . -1495) (undo-tree-id55775 . -1495) (undo-tree-id55776 . -1495) (undo-tree-id55777 . -1495) (undo-tree-id55778 . -1495) (undo-tree-id55779 . -1495) (undo-tree-id55780 . -1495) (undo-tree-id55781 . -1495) (undo-tree-id55782 . -1495) (undo-tree-id55783 . -1495) (undo-tree-id55784 . -1495) (undo-tree-id55785 . -1495) (undo-tree-id55786 . -1495) (undo-tree-id55787 . -1495) (undo-tree-id55788 . -1495) (undo-tree-id55789 . -1495) (undo-tree-id55790 . -1495) (undo-tree-id55791 . -1495) (undo-tree-id55792 . -1495) (undo-tree-id55793 . -1495) (undo-tree-id55794 . -1495) (undo-tree-id55795 . -1495) (undo-tree-id55796 . -1495) (undo-tree-id55797 . -1495) (undo-tree-id55798 . -1495) (undo-tree-id55799 . -1495) (undo-tree-id55800 . -1495) (undo-tree-id55801 . -1495) (undo-tree-id55802 . -1495) (undo-tree-id55803 . -1495) (undo-tree-id55804 . -1495) (undo-tree-id55805 . -1495) (undo-tree-id55806 . -1495) (undo-tree-id55807 . -1495) (undo-tree-id55808 . -1495) (undo-tree-id55809 . -1495) (undo-tree-id55810 . -1495) (undo-tree-id55811 . -1495) (undo-tree-id55812 . -1495) (undo-tree-id55813 . -1495) (undo-tree-id55814 . -1495) (undo-tree-id55815 . -1495) (undo-tree-id55816 . -1495) (undo-tree-id55817 . -1495) (undo-tree-id55818 . -1495) (undo-tree-id55819 . -1495) (undo-tree-id55820 . -1495) (undo-tree-id55821 . -1495) (undo-tree-id55822 . -1495) (undo-tree-id55823 . -1495) (undo-tree-id55824 . -1495) (undo-tree-id55825 . -1495) (undo-tree-id55826 . -1495) (undo-tree-id55827 . -1495) (undo-tree-id55828 . -1495) (undo-tree-id55829 . -1495) (undo-tree-id55830 . -1495) (undo-tree-id55831 . -1495) (undo-tree-id55832 . -1495) (undo-tree-id55833 . -1495) (undo-tree-id55834 . -1495) (undo-tree-id55835 . -1495) (undo-tree-id55836 . -1495) (undo-tree-id55837 . -1495) (undo-tree-id55838 . -1495) (undo-tree-id55839 . -1495) (undo-tree-id55840 . -1495) (undo-tree-id55841 . -1495) (undo-tree-id55842 . -1495) (undo-tree-id55843 . -1495) (undo-tree-id55844 . -1495) (undo-tree-id55845 . -1495) (undo-tree-id55846 . -1495) (undo-tree-id55847 . -1495) (undo-tree-id55848 . -1495) (undo-tree-id55849 . -1495) (undo-tree-id55850 . -1495) (undo-tree-id55851 . -1495) (undo-tree-id55852 . -1495) (undo-tree-id55853 . -1495) (undo-tree-id55854 . -1495) (undo-tree-id55855 . -1495) (undo-tree-id55856 . -1495) (undo-tree-id55857 . -1495) (undo-tree-id55858 . -1495) (undo-tree-id55859 . -1495) (undo-tree-id55860 . -1495) (undo-tree-id55861 . -1495) (undo-tree-id55862 . -1495) (undo-tree-id55863 . -1495) (undo-tree-id55864 . -1495) (undo-tree-id55865 . -1495) (undo-tree-id55866 . -1495) (undo-tree-id55867 . -1495) (undo-tree-id55868 . -1495) (undo-tree-id55869 . -1495) (undo-tree-id55870 . -1495) (undo-tree-id55871 . -1495) (undo-tree-id55872 . -1495) (undo-tree-id55873 . -1495) (undo-tree-id55874 . -1495) (undo-tree-id55875 . -1495) (undo-tree-id55876 . -1495) (undo-tree-id55877 . -1495) (undo-tree-id55878 . -1495) (undo-tree-id55879 . -1495) (undo-tree-id55880 . -1495) (undo-tree-id55881 . -1495) (undo-tree-id55882 . -1495) (undo-tree-id55883 . -1495) (undo-tree-id55884 . -1495) (undo-tree-id55885 . -1495) (undo-tree-id55886 . -1495) (undo-tree-id55887 . -1495) (undo-tree-id55888 . -1495) (undo-tree-id55889 . -1495) (undo-tree-id55890 . -1495) (undo-tree-id55891 . -1495) (undo-tree-id55892 . -1495) (undo-tree-id55893 . -1495) (undo-tree-id55894 . -1495) (undo-tree-id55895 . -1495) (undo-tree-id55896 . -1495) (undo-tree-id55897 . -1495) (undo-tree-id55898 . -1495) (undo-tree-id55899 . -1495) (undo-tree-id55900 . -1495) (undo-tree-id55901 . -1495) (undo-tree-id55902 . -1495) (undo-tree-id55903 . -1495) (undo-tree-id55904 . -1495) (undo-tree-id55905 . -1495) (undo-tree-id55906 . -1495) (undo-tree-id55907 . -1495) (undo-tree-id55908 . -1495) (undo-tree-id55909 . -1495) (undo-tree-id55910 . -1495) (undo-tree-id55911 . -1495) (undo-tree-id55912 . -1495) (undo-tree-id55913 . -1495) (undo-tree-id55914 . -1495) (undo-tree-id55915 . -1495) (undo-tree-id55916 . -1495) (undo-tree-id55917 . -1495) (undo-tree-id55918 . -1495) (undo-tree-id55919 . -1495) (undo-tree-id55920 . -1495) (undo-tree-id55921 . -1495) (undo-tree-id55922 . -1495) (undo-tree-id55923 . -1495) (undo-tree-id55924 . -1495) (undo-tree-id55925 . -1495) (undo-tree-id55926 . -1495) (undo-tree-id55927 . -1495) (undo-tree-id55928 . -1495) (undo-tree-id55929 . -1495) (undo-tree-id55930 . -1495) (undo-tree-id55931 . -1495) (undo-tree-id55932 . -1495) (undo-tree-id55933 . -1495) (undo-tree-id55934 . -1495) (undo-tree-id55935 . -1495) (undo-tree-id55936 . -1495) (undo-tree-id55937 . -1495) (undo-tree-id55938 . -1495) (undo-tree-id55939 . -1495) (undo-tree-id55940 . -1495) (undo-tree-id55941 . -1495) (undo-tree-id55942 . -1495) (undo-tree-id55943 . -1495) (undo-tree-id55944 . -1495) (undo-tree-id55945 . -1495) (undo-tree-id55946 . -1495) (undo-tree-id55947 . -1495) (undo-tree-id55948 . -1495) (undo-tree-id55949 . -1495) (undo-tree-id55950 . -1495) (undo-tree-id55951 . -1495) (undo-tree-id55952 . -1495) (undo-tree-id55953 . -1495) (undo-tree-id55954 . -1495) (undo-tree-id55955 . -1495) (undo-tree-id55956 . -1495) (undo-tree-id55957 . -1495) (undo-tree-id55958 . -1495) (undo-tree-id55959 . -1495) (undo-tree-id55960 . -1495) (undo-tree-id55961 . -1495) (undo-tree-id55962 . -1495) (undo-tree-id55963 . -1495) (undo-tree-id55964 . -1495) (undo-tree-id55965 . -1495) (undo-tree-id55966 . -1495) (undo-tree-id55967 . -1495) (undo-tree-id55968 . -1495) (undo-tree-id55969 . -1495) (undo-tree-id55970 . -1495) (undo-tree-id55971 . -1495) (undo-tree-id55972 . -1495) (undo-tree-id55973 . -1495) (undo-tree-id55974 . -1495) (undo-tree-id55975 . -1495) (undo-tree-id55976 . -1495) (undo-tree-id55977 . -1495) (undo-tree-id55978 . -1495) (undo-tree-id55979 . -1495) (undo-tree-id55980 . -1495) (undo-tree-id55981 . -1495) (undo-tree-id55982 . -1495) (undo-tree-id55983 . -1495) (undo-tree-id55984 . -1495) (undo-tree-id55985 . -1495) (undo-tree-id55986 . -1495) (undo-tree-id55987 . -1495) (undo-tree-id55988 . -1495) (undo-tree-id55989 . -1495) (undo-tree-id55990 . -1495) (undo-tree-id55991 . -1495) (undo-tree-id55992 . -1495) (undo-tree-id55993 . -1495) (undo-tree-id55994 . -1495) (undo-tree-id55995 . -1495) (undo-tree-id55996 . -1495) (undo-tree-id55997 . -1495) (undo-tree-id55998 . -1495) (undo-tree-id55999 . -1495) (undo-tree-id56000 . -1495) (undo-tree-id56001 . -1495) (undo-tree-id56002 . -1495) (undo-tree-id56003 . -1495) (undo-tree-id56004 . -1495) (undo-tree-id56005 . -1495) (undo-tree-id56006 . -1495) (undo-tree-id56007 . -1495) (undo-tree-id56008 . -1495) (undo-tree-id56009 . -1495) (undo-tree-id56010 . -1495) (undo-tree-id56011 . -1495) (undo-tree-id56012 . -1495) (undo-tree-id56013 . -1495) (undo-tree-id56014 . -1495) (undo-tree-id56015 . -1495) (undo-tree-id56016 . -1495) (undo-tree-id56017 . -1495) (undo-tree-id56018 . -1495) (undo-tree-id56019 . -1495) (undo-tree-id56020 . -1495) (undo-tree-id56021 . -1495) (undo-tree-id56022 . -1495) (undo-tree-id56023 . -1495) (undo-tree-id56024 . -1495) (undo-tree-id56025 . -1495) (undo-tree-id56026 . -1495) (undo-tree-id56027 . -1495) (undo-tree-id56028 . -1495) (undo-tree-id56029 . -1495) (undo-tree-id56030 . -1495) (undo-tree-id56031 . -1495) (undo-tree-id56032 . -1495) (undo-tree-id56033 . -1495) (undo-tree-id56034 . -1495) (undo-tree-id56035 . -1495) (undo-tree-id56036 . -1495) (undo-tree-id56037 . -1495) (undo-tree-id56038 . -1495) (undo-tree-id56039 . -1495) (undo-tree-id56040 . -1495) (undo-tree-id56041 . -1495) (undo-tree-id56042 . -1495) (undo-tree-id56043 . -1495) (undo-tree-id56044 . -1495) (undo-tree-id56045 . -1495) (undo-tree-id56046 . -1495) (undo-tree-id56047 . -1495) (undo-tree-id56048 . -1495) (undo-tree-id56049 . -1495) (undo-tree-id56050 . -1495) (undo-tree-id56051 . -1495) (undo-tree-id56052 . -1495) (undo-tree-id56053 . -1495) (undo-tree-id56054 . -1495) (undo-tree-id56055 . -1495) (undo-tree-id56056 . -1495) (undo-tree-id56057 . -1495) (undo-tree-id56058 . -1495) (undo-tree-id56059 . -1495) (undo-tree-id56060 . -1495) (undo-tree-id56061 . -1495) (undo-tree-id56062 . -1495) (undo-tree-id56063 . -1495) (undo-tree-id56064 . -1495) (undo-tree-id56065 . -1495) (undo-tree-id56066 . -1495) (undo-tree-id56067 . -1506) (undo-tree-id56068 . -1506) (undo-tree-id56069 . -1506) (undo-tree-id56070 . -1506) (undo-tree-id56071 . -1506) (undo-tree-id56072 . -1506) (undo-tree-id56073 . -1506) (undo-tree-id56074 . -1506) (undo-tree-id56075 . -1506) (undo-tree-id56076 . -1506) (undo-tree-id56077 . -1506) (undo-tree-id56078 . -1506) (undo-tree-id56079 . -1506) (undo-tree-id56080 . -1506) (undo-tree-id56081 . -1506) (undo-tree-id56082 . -1506) (undo-tree-id56083 . -1510) (undo-tree-id56084 . -1510) (undo-tree-id56085 . -1510) (undo-tree-id56086 . -1510) (undo-tree-id56087 . -1510) (undo-tree-id56088 . -1510) (undo-tree-id56089 . -1510) (undo-tree-id56090 . -1510) (undo-tree-id56091 . -1510) (undo-tree-id56092 . -1510) (undo-tree-id56093 . -1510) (undo-tree-id56094 . -1510) (undo-tree-id56095 . -1510) (undo-tree-id56096 . -1510) (undo-tree-id56097 . -1510) (undo-tree-id56098 . -1510) (undo-tree-id56099 . -1510) (undo-tree-id56100 . -1510) (undo-tree-id56101 . -1510) (undo-tree-id56102 . -1510) (undo-tree-id56103 . -1510) (undo-tree-id56104 . -1518) (undo-tree-id56105 . -1518) (undo-tree-id56106 . -1518) (undo-tree-id56107 . -1518) (undo-tree-id56108 . -1518) (undo-tree-id56109 . -1518) (undo-tree-id56110 . -1518) (undo-tree-id56111 . -1518) (undo-tree-id56112 . -1518) (undo-tree-id56113 . -1518) (undo-tree-id56114 . -1518) (undo-tree-id56115 . -1518) (undo-tree-id56116 . -1518) (undo-tree-id56117 . -1518) (undo-tree-id56118 . -1518) (undo-tree-id56119 . -1518) (undo-tree-id56120 . -1530) (undo-tree-id56121 . -1530) (undo-tree-id56122 . -1530) (undo-tree-id56123 . -1530) (undo-tree-id56124 . -1530) (undo-tree-id56125 . -1530) (undo-tree-id56126 . -1530) (undo-tree-id56127 . -1530) (undo-tree-id56128 . -1530) (undo-tree-id56129 . -1530) (undo-tree-id56130 . -1530) (undo-tree-id56131 . -1530) (undo-tree-id56132 . -1530) (undo-tree-id56133 . -1530) (undo-tree-id56134 . -1530) (undo-tree-id56135 . -1530) (undo-tree-id56136 . -1534) (undo-tree-id56137 . -1534) (undo-tree-id56138 . -1534) (undo-tree-id56139 . -1534) (undo-tree-id56140 . -1534) (undo-tree-id56141 . -1534) (undo-tree-id56142 . -1534) (undo-tree-id56143 . -1534) (undo-tree-id56144 . -1534) (undo-tree-id56145 . -1534) (undo-tree-id56146 . -1534) (undo-tree-id56147 . -1534) (undo-tree-id56148 . -1534) (undo-tree-id56149 . -1534) (undo-tree-id56150 . -1534) (undo-tree-id56151 . -1534) (undo-tree-id56152 . -1538) (undo-tree-id56153 . -1538) (undo-tree-id56154 . -1538) (undo-tree-id56155 . -1538) (undo-tree-id56156 . -1538) (undo-tree-id56157 . -1538) (undo-tree-id56158 . -1538) (undo-tree-id56159 . -1538) (undo-tree-id56160 . -1538) (undo-tree-id56161 . -1538) (undo-tree-id56162 . -1538) (undo-tree-id56163 . -1538) (undo-tree-id56164 . -1538) (undo-tree-id56165 . -1538) (undo-tree-id56166 . -1538) (undo-tree-id56167 . -1538) (undo-tree-id56168 . -1544) (undo-tree-id56169 . -1544) (undo-tree-id56170 . -1544) (undo-tree-id56171 . -1544) (undo-tree-id56172 . -1544) (undo-tree-id56173 . -1544) (undo-tree-id56174 . -1544) (undo-tree-id56175 . -1544) (undo-tree-id56176 . -1544) (undo-tree-id56177 . -1544) (undo-tree-id56178 . -1544) (undo-tree-id56179 . -1544) (undo-tree-id56180 . -1544) (undo-tree-id56181 . -1544) (undo-tree-id56182 . -1544) (undo-tree-id56183 . -1544) (undo-tree-id56184 . -1547) (undo-tree-id56185 . -1547) (undo-tree-id56186 . -1547) (undo-tree-id56187 . -1547) (undo-tree-id56188 . -1547) (undo-tree-id56189 . -1547) (undo-tree-id56190 . -1547) (undo-tree-id56191 . -1547) (undo-tree-id56192 . -1547) (undo-tree-id56193 . -1547) (undo-tree-id56194 . -1547) (undo-tree-id56195 . -1547) (undo-tree-id56196 . -1547) (undo-tree-id56197 . -1547) (undo-tree-id56198 . -1547) (undo-tree-id56199 . -1547) (undo-tree-id56200 . -1556) (undo-tree-id56201 . -1556) (undo-tree-id56202 . -1556) (undo-tree-id56203 . -1556) (undo-tree-id56204 . -1556) (undo-tree-id56205 . -1556) (undo-tree-id56206 . -1556) (undo-tree-id56207 . -1556) (undo-tree-id56208 . -1556) (undo-tree-id56209 . -1556) (undo-tree-id56210 . -1556) (undo-tree-id56211 . -1556) (undo-tree-id56212 . -1556) (undo-tree-id56213 . -1556) (undo-tree-id56214 . -1556) (undo-tree-id56215 . -1556) (undo-tree-id56216 . -1558) (undo-tree-id56217 . -1558) (undo-tree-id56218 . -1558) (undo-tree-id56219 . -1558) (undo-tree-id56220 . -1558) (undo-tree-id56221 . -1558) (undo-tree-id56222 . -1558) (undo-tree-id56223 . -1558) (undo-tree-id56224 . -1558) (undo-tree-id56225 . -1558) (undo-tree-id56226 . -1558) (undo-tree-id56227 . -1558) (undo-tree-id56228 . -1558) (undo-tree-id56229 . -1558) (undo-tree-id56230 . -1558) (undo-tree-id56231 . -1558) (undo-tree-id56232 . -1559) (undo-tree-id56233 . -1559) (undo-tree-id56234 . -1559) (undo-tree-id56235 . -1559) (undo-tree-id56236 . -1559) (undo-tree-id56237 . -1559) (undo-tree-id56238 . -1559) (undo-tree-id56239 . -1559) (undo-tree-id56240 . -1559) (undo-tree-id56241 . -1559) (undo-tree-id56242 . -1559) (undo-tree-id56243 . -1559) (undo-tree-id56244 . -1559) (undo-tree-id56245 . -1559) (undo-tree-id56246 . -1559) (undo-tree-id56247 . -1559) (undo-tree-id56248 . -1559) (undo-tree-id56249 . -1559) (undo-tree-id56250 . -1559) (undo-tree-id56251 . -1559) (undo-tree-id56252 . -1559) (undo-tree-id56253 . -1559) (undo-tree-id56254 . -1559) (undo-tree-id56255 . -1559) (undo-tree-id56256 . -1559) (undo-tree-id56257 . -1559) (undo-tree-id56258 . -1559) (undo-tree-id56259 . -1559) (undo-tree-id56260 . -1559) (undo-tree-id56261 . -1559) (undo-tree-id56262 . -1559) (undo-tree-id56263 . -1559) (undo-tree-id56264 . -1559) (undo-tree-id56265 . -1559) (undo-tree-id56266 . -1559) (undo-tree-id56267 . -1559) (undo-tree-id56268 . -1559) (undo-tree-id56269 . -1559) (undo-tree-id56270 . -1559) (undo-tree-id56271 . -1559) (undo-tree-id56272 . -1559) (undo-tree-id56273 . -1559) (undo-tree-id56274 . -1559) (undo-tree-id56275 . -1559) (undo-tree-id56276 . -1559) (undo-tree-id56277 . -1559) (undo-tree-id56278 . -1559) (undo-tree-id56279 . -1559) (undo-tree-id56280 . -1559) (undo-tree-id56281 . -1559) (undo-tree-id56282 . -1559) (undo-tree-id56283 . -1559) (undo-tree-id56284 . -1559) (undo-tree-id56285 . -1559) (undo-tree-id56286 . -1559) (undo-tree-id56287 . -1559) (undo-tree-id56288 . -1559) (undo-tree-id56289 . -1559) (undo-tree-id56290 . -1559) (undo-tree-id56291 . -1559) (undo-tree-id56292 . -1565) (undo-tree-id56293 . -1565) (undo-tree-id56294 . -1565) (undo-tree-id56295 . -1565) (undo-tree-id56296 . -1565) (undo-tree-id56297 . -1565) (undo-tree-id56298 . -1565) (undo-tree-id56299 . -1565) (undo-tree-id56300 . -1565) (undo-tree-id56301 . -1565) (undo-tree-id56302 . -1565) (undo-tree-id56303 . -1565) (undo-tree-id56304 . -1565) (undo-tree-id56305 . -1565) (undo-tree-id56306 . -1565) (undo-tree-id56307 . -1565) (undo-tree-id56308 . -1565) (undo-tree-id56309 . -1565) (undo-tree-id56310 . -1565) (undo-tree-id56311 . -1565) (undo-tree-id56312 . -1565) (undo-tree-id56313 . -1565) (undo-tree-id56314 . -1565) (undo-tree-id56315 . -1565) (undo-tree-id56316 . -1565) (undo-tree-id56317 . -1565) (undo-tree-id56318 . -1565) (undo-tree-id56319 . -1565) (undo-tree-id56320 . -1565) (undo-tree-id56321 . -1565) (undo-tree-id56322 . -1565) (undo-tree-id56323 . -1565) (undo-tree-id56324 . -1565) (undo-tree-id56325 . -1565) (undo-tree-id56326 . -1565) (undo-tree-id56327 . -1565) (undo-tree-id56328 . 5) (undo-tree-id56329 . -1585) (undo-tree-id56330 . -1585) (undo-tree-id56331 . -1585) (undo-tree-id56332 . -1585) (undo-tree-id56333 . -1585) (undo-tree-id56334 . -1585) (undo-tree-id56335 . -1585) (undo-tree-id56336 . -1585) (undo-tree-id56337 . -1585) (undo-tree-id56338 . -1585) (undo-tree-id56339 . -1585) (undo-tree-id56340 . -1585) (undo-tree-id56341 . -1585) (undo-tree-id56342 . -1585) (undo-tree-id56343 . -1585) (undo-tree-id56344 . -1585) (undo-tree-id56345 . -1585) (undo-tree-id56346 . -1586) (undo-tree-id56347 . -1586) (undo-tree-id56348 . -1586) (undo-tree-id56349 . -1586) (undo-tree-id56350 . -1586) (undo-tree-id56351 . -1586) (undo-tree-id56352 . -1586) (undo-tree-id56353 . -1586) (undo-tree-id56354 . -1586) (undo-tree-id56355 . -1586) (undo-tree-id56356 . -1586) (undo-tree-id56357 . -1586) (undo-tree-id56358 . -1586) (undo-tree-id56359 . -1586) (undo-tree-id56360 . -1586) (undo-tree-id56361 . -1586) (undo-tree-id56362 . -1586) (undo-tree-id56363 . -1586) (undo-tree-id56364 . -1586) (undo-tree-id56365 . -1435) (4704 . 6139) (#(" Then, for a seq2seq task, the goal of self-attention is to model the dependencies of the current input element to all other input elements. To achieve this, self-attention mechanisms are composed of three stages. First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 2 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 3 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 4 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 5 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 6 19 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 19 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 20 23 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 23 26 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 26 27 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 27 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 46 48 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 48 130 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 130 131 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 131 137 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 137 139 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 139 142 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 142 144 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 144 147 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 147 148 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 148 149 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 149 150 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 150 151 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 151 152 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 152 153 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 153 207 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 207 208 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 208 209 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 209 210 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 210 211 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 211 212 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 212 230 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 230 231 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 231 301 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 301 303 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 303 323 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 323 327 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 327 328 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 328 348 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 348 349 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 349 422 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 422 428 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 428 429 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 429 525 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 525 526 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 526 566 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 566 567 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 567 673 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 673 674 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 674 782 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 782 783 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 783 794 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 794 795 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 795 797 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 797 798 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 798 822 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 822 823 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 823 827 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 827 828 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 828 929 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 929 934 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 934 935 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 935 1032 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1032 1033 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1033 1137 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1137 1138 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1138 1247 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1247 1248 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1248 1287 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1287 1288 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1288 1387 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1387 1388 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1388 1415 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1415 1416 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1416 1417 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1417 1418 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1418 1431 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1431 1432 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4855)) nil (25774 62093 946590 993000) 0 nil] [nil nil ((4704 . 6291) (#("- , which is similar to RNNs. Then, for a seq2seq task, the goal of self-attention is to model the dependencies of the current input element to all other input elements. To achieve this, self-attention mechanisms are composed of three stages. First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)

- Each ith element in these sequences are vectors of size d representing the feature information for the input at position i" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 13 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 13 15 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 15 18 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 18 19 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 19 21 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 21 27 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 27 28 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 28 29 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 29 30 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 30 31 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 31 32 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 32 33 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 33 34 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 34 35 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 35 48 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 48 49 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 49 52 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 52 55 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 55 56 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 56 75 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 75 77 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 77 159 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 159 160 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 160 166 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 166 168 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 168 171 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 171 173 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 173 176 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 176 177 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 177 178 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 178 179 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 179 180 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 180 181 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 181 182 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 182 236 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 236 237 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 237 238 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 238 239 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 239 240 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 240 241 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 241 259 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 259 260 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 260 330 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 330 332 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 332 352 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 352 356 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 356 357 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 357 377 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 377 378 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 378 451 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 451 457 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 457 458 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 458 554 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 554 555 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 555 595 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 595 596 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 596 702 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 702 703 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 703 811 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 811 812 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 812 823 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 823 824 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 824 826 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 826 827 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 827 851 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 851 852 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 852 856 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 856 857 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 857 958 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 958 963 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 963 964 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 964 1061 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1061 1062 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1062 1166 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1166 1167 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1167 1276 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1276 1277 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1277 1316 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1316 1317 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1317 1416 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1416 1417 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1417 1444 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1444 1445 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1445 1446 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1446 1447 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1447 1460 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1460 1461 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1461 1462 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1462 1463 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1463 1464 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1464 1465 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1465 1527 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1527 1535 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1535 1536 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1536 1571 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1571 1587 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4704) (undo-tree-id53444 . -1523) (undo-tree-id53445 . -1523) (undo-tree-id53446 . -1523) (undo-tree-id53447 . -1523) (undo-tree-id53448 . 64) (undo-tree-id53449 . -1523) (undo-tree-id53450 . -1523) (undo-tree-id53451 . -1487) (undo-tree-id53452 . -1487) (undo-tree-id53453 . -1487) (undo-tree-id53454 . -1487) (undo-tree-id53455 . -1487) (undo-tree-id53456 . -1487) (undo-tree-id53457 . -1487) (undo-tree-id53458 . -1487) (undo-tree-id53459 . -1487) (undo-tree-id53460 . -1487) (undo-tree-id53461 . -1487) (undo-tree-id53462 . -1487) (undo-tree-id53463 . -1487) (undo-tree-id53464 . -1487) (undo-tree-id53465 . -1487) (undo-tree-id53466 . -1487) (undo-tree-id53467 . -1487) (undo-tree-id53468 . -1487) (undo-tree-id53469 . -1487) (undo-tree-id53470 . -1487) (undo-tree-id53471 . -1487) (undo-tree-id53472 . -1487) (undo-tree-id53473 . -1487) (undo-tree-id53474 . -1487) (undo-tree-id53475 . -1487) (undo-tree-id53476 . -1487) (undo-tree-id53477 . -1487) (undo-tree-id53478 . -1487) (undo-tree-id53479 . -1487) (undo-tree-id53480 . -1487) (undo-tree-id53481 . -1487) (undo-tree-id53482 . -1523) (undo-tree-id53483 . -1523) (undo-tree-id53484 . -1523) (undo-tree-id53485 . -1523) (undo-tree-id53486 . -1523) (undo-tree-id53487 . -1523) (undo-tree-id53488 . -1523) (undo-tree-id53489 . -1523) (undo-tree-id53490 . -1523) (undo-tree-id53491 . -1523) (undo-tree-id53492 . -1523) (undo-tree-id53493 . -1523) (undo-tree-id53494 . -1523) (undo-tree-id53495 . -1523) (undo-tree-id53496 . -1523) (undo-tree-id53497 . -1523) (undo-tree-id53498 . -1523) (undo-tree-id53499 . -1523) (undo-tree-id53500 . -1523) (undo-tree-id53501 . -1523) (undo-tree-id53502 . -1523) (undo-tree-id53503 . -1487) (undo-tree-id53504 . -1487) (undo-tree-id53505 . -1487) (undo-tree-id53506 . -1487) (undo-tree-id53507 . -1487) (undo-tree-id53508 . -1487) (undo-tree-id53509 . -1487) (undo-tree-id53510 . -1487) (undo-tree-id53511 . -1487) (undo-tree-id53512 . -1487) (undo-tree-id53513 . -1487) (undo-tree-id53514 . -1487) (undo-tree-id53515 . -1487) (undo-tree-id53516 . -1487) (undo-tree-id53517 . -1487) (undo-tree-id53518 . -1487) (undo-tree-id53519 . -1587) (undo-tree-id53520 . -1465) (undo-tree-id53521 . -1465) (undo-tree-id53522 . -1465) (undo-tree-id53523 . -1465) (undo-tree-id53524 . -1465) (undo-tree-id53525 . -1465) (undo-tree-id53526 . -1465) (undo-tree-id53527 . -1465) (undo-tree-id53528 . -1465) (undo-tree-id53529 . -1465) (undo-tree-id53530 . -1465) (undo-tree-id53531 . -1465) (undo-tree-id53532 . -1465) (undo-tree-id53533 . -1465) (undo-tree-id53534 . -1465) (undo-tree-id53535 . -1465) (undo-tree-id53536 . -1465) (undo-tree-id53537 . -1465) (undo-tree-id53538 . -1465) (undo-tree-id53539 . -1465) (undo-tree-id53540 . -1465) (undo-tree-id53541 . -1465) (undo-tree-id53542 . -1465) (undo-tree-id53543 . -1465) (undo-tree-id53544 . -1465) (undo-tree-id53545 . -1465) (undo-tree-id53546 . -1465) (undo-tree-id53547 . -1465) (undo-tree-id53548 . -1465) (undo-tree-id53549 . -1465) (undo-tree-id53550 . -1465) (undo-tree-id53551 . -1465) (undo-tree-id53552 . -1465) (undo-tree-id53553 . -1465) (undo-tree-id53554 . -1465) (undo-tree-id53555 . -1465) (undo-tree-id53556 . -1465) (undo-tree-id53557 . -1465) (undo-tree-id53558 . -1465) (undo-tree-id53559 . -1465) (undo-tree-id53560 . -1465) (undo-tree-id53561 . -1465) (undo-tree-id53562 . -1465) (undo-tree-id53563 . -1465) (undo-tree-id53564 . -1465) (undo-tree-id53565 . -1465) (undo-tree-id53566 . 117) (undo-tree-id53567 . -1473) (undo-tree-id53568 . -1470) (undo-tree-id53569 . -1470) (undo-tree-id53570 . -1470) (undo-tree-id53571 . -1470) (undo-tree-id53572 . -1470) (undo-tree-id53573 . -1470) (undo-tree-id53574 . -1470) (undo-tree-id53575 . -1470) (undo-tree-id53576 . -1470) (undo-tree-id53577 . -1470) (undo-tree-id53578 . -1470) (undo-tree-id53579 . -1470) (undo-tree-id53580 . -1470) (undo-tree-id53581 . -1470) (undo-tree-id53582 . -1470) (undo-tree-id53583 . -1470) (undo-tree-id53584 . -1474) (undo-tree-id53585 . -1474) (undo-tree-id53586 . -1474) (undo-tree-id53587 . -1474) (undo-tree-id53588 . -1474) (undo-tree-id53589 . -1474) (undo-tree-id53590 . -1474) (undo-tree-id53591 . -1474) (undo-tree-id53592 . -1474) (undo-tree-id53593 . -1474) (undo-tree-id53594 . -1474) (undo-tree-id53595 . -1474) (undo-tree-id53596 . -1474) (undo-tree-id53597 . -1474) (undo-tree-id53598 . -1474) (undo-tree-id53599 . -1474) (undo-tree-id53600 . -1482) (undo-tree-id53601 . -1482) (undo-tree-id53602 . -1482) (undo-tree-id53603 . -1482) (undo-tree-id53604 . -1482) (undo-tree-id53605 . -1482) (undo-tree-id53606 . -1482) (undo-tree-id53607 . -1482) (undo-tree-id53608 . -1482) (undo-tree-id53609 . -1482) (undo-tree-id53610 . -1482) (undo-tree-id53611 . -1482) (undo-tree-id53612 . -1482) (undo-tree-id53613 . -1482) (undo-tree-id53614 . -1482) (undo-tree-id53615 . -1482) (undo-tree-id53616 . -1485) (undo-tree-id53617 . -1485) (undo-tree-id53618 . -1485) (undo-tree-id53619 . -1485) (undo-tree-id53620 . -1485) (undo-tree-id53621 . -1485) (undo-tree-id53622 . -1485) (undo-tree-id53623 . -1485) (undo-tree-id53624 . -1485) (undo-tree-id53625 . -1485) (undo-tree-id53626 . -1485) (undo-tree-id53627 . -1485) (undo-tree-id53628 . -1485) (undo-tree-id53629 . -1485) (undo-tree-id53630 . -1485) (undo-tree-id53631 . -1485) (undo-tree-id53632 . -1491) (undo-tree-id53633 . -1491) (undo-tree-id53634 . -1491) (undo-tree-id53635 . -1491) (undo-tree-id53636 . -1491) (undo-tree-id53637 . -1491) (undo-tree-id53638 . -1491) (undo-tree-id53639 . -1491) (undo-tree-id53640 . -1491) (undo-tree-id53641 . -1491) (undo-tree-id53642 . -1491) (undo-tree-id53643 . -1491) (undo-tree-id53644 . -1491) (undo-tree-id53645 . -1491) (undo-tree-id53646 . -1491) (undo-tree-id53647 . -1491) (undo-tree-id53648 . -1500) (undo-tree-id53649 . -1500) (undo-tree-id53650 . -1500) (undo-tree-id53651 . -1500) (undo-tree-id53652 . -1500) (undo-tree-id53653 . -1500) (undo-tree-id53654 . -1500) (undo-tree-id53655 . -1500) (undo-tree-id53656 . -1500) (undo-tree-id53657 . -1500) (undo-tree-id53658 . -1500) (undo-tree-id53659 . -1500) (undo-tree-id53660 . -1500) (undo-tree-id53661 . -1500) (undo-tree-id53662 . -1500) (undo-tree-id53663 . -1500) (undo-tree-id53664 . -1500) (undo-tree-id53665 . -1500) (undo-tree-id53666 . -1500) (undo-tree-id53667 . -1500) (undo-tree-id53668 . -1500) (undo-tree-id53669 . -1500) (undo-tree-id53670 . -1500) (undo-tree-id53671 . -1500) (undo-tree-id53672 . -1500) (undo-tree-id53673 . -1500) (undo-tree-id53674 . -1500) (undo-tree-id53675 . -1500) (undo-tree-id53676 . -1500) (undo-tree-id53677 . -1500) (undo-tree-id53678 . -1500) (undo-tree-id53679 . -1500) (undo-tree-id53680 . -1500) (undo-tree-id53681 . -1500) (undo-tree-id53682 . -1500) (undo-tree-id53683 . -1500) (undo-tree-id53684 . -1500) (undo-tree-id53685 . -1500) (undo-tree-id53686 . -1500) (undo-tree-id53687 . -1500) (undo-tree-id53688 . -1500) (undo-tree-id53689 . -1500) (undo-tree-id53690 . -1500) (undo-tree-id53691 . -1500) (undo-tree-id53692 . -1500) (undo-tree-id53693 . -1500) (undo-tree-id53694 . -1500) (undo-tree-id53695 . -1500) (undo-tree-id53696 . -1500) (undo-tree-id53697 . -1500) (undo-tree-id53698 . -1500) (undo-tree-id53699 . -1500) (undo-tree-id53700 . -1500) (undo-tree-id53701 . -1500) (undo-tree-id53702 . -1500) (undo-tree-id53703 . -1500) (undo-tree-id53704 . -1500) (undo-tree-id53705 . -1500) (undo-tree-id53706 . -1500) (undo-tree-id53707 . -1500) (undo-tree-id53708 . -1500) (undo-tree-id53709 . -1500) (undo-tree-id53710 . -1500) (undo-tree-id53711 . -1500) (undo-tree-id53712 . -1500) (undo-tree-id53713 . -1500) (undo-tree-id53714 . -1500) (undo-tree-id53715 . -1500) (undo-tree-id53716 . -1500) (undo-tree-id53717 . -1500) (undo-tree-id53718 . -1500) (undo-tree-id53719 . -1500) (undo-tree-id53720 . -1500) (undo-tree-id53721 . -1500) (undo-tree-id53722 . -1500) (undo-tree-id53723 . -1500) (undo-tree-id53724 . -1500) (undo-tree-id53725 . -1500) (undo-tree-id53726 . -1500) (undo-tree-id53727 . -1500) (undo-tree-id53728 . -1500) (undo-tree-id53729 . -1500) (undo-tree-id53730 . -1500) (undo-tree-id53731 . -1500) (undo-tree-id53732 . -1500) (undo-tree-id53733 . -1500) (undo-tree-id53734 . -1500) (undo-tree-id53735 . -1500) (undo-tree-id53736 . -1500) (undo-tree-id53737 . -1500) (undo-tree-id53738 . -1500) (undo-tree-id53739 . -1500) (undo-tree-id53740 . -1500) (undo-tree-id53741 . -1500) (undo-tree-id53742 . -1500) (undo-tree-id53743 . -1500) (undo-tree-id53744 . -1500) (undo-tree-id53745 . -1500) (undo-tree-id53746 . -1500) (undo-tree-id53747 . -1500) (undo-tree-id53748 . -1500) (undo-tree-id53749 . -1500) (undo-tree-id53750 . -1500) (undo-tree-id53751 . -1500) (undo-tree-id53752 . -1500) (undo-tree-id53753 . -1500) (undo-tree-id53754 . -1500) (undo-tree-id53755 . -1500) (undo-tree-id53756 . -1500) (undo-tree-id53757 . -1500) (undo-tree-id53758 . -1500) (undo-tree-id53759 . -1500) (undo-tree-id53760 . -1500) (undo-tree-id53761 . -1500) (undo-tree-id53762 . -1500) (undo-tree-id53763 . -1500) (undo-tree-id53764 . -1500) (undo-tree-id53765 . -1500) (undo-tree-id53766 . -1500) (undo-tree-id53767 . -1500) (undo-tree-id53768 . -1500) (undo-tree-id53769 . -1500) (undo-tree-id53770 . -1500) (undo-tree-id53771 . -1500) (undo-tree-id53772 . -1500) (undo-tree-id53773 . -1500) (undo-tree-id53774 . -1500) (undo-tree-id53775 . -1500) (undo-tree-id53776 . -1500) (undo-tree-id53777 . -1500) (undo-tree-id53778 . -1500) (undo-tree-id53779 . -1500) (undo-tree-id53780 . -1500) (undo-tree-id53781 . -1500) (undo-tree-id53782 . -1500) (undo-tree-id53783 . -1500) (undo-tree-id53784 . -1500) (undo-tree-id53785 . -1500) (undo-tree-id53786 . -1500) (undo-tree-id53787 . -1500) (undo-tree-id53788 . -1500) (undo-tree-id53789 . -1500) (undo-tree-id53790 . -1500) (undo-tree-id53791 . -1500) (undo-tree-id53792 . -1500) (undo-tree-id53793 . -1500) (undo-tree-id53794 . -1500) (undo-tree-id53795 . -1500) (undo-tree-id53796 . -1500) (undo-tree-id53797 . -1500) (undo-tree-id53798 . -1500) (undo-tree-id53799 . -1500) (undo-tree-id53800 . -1500) (undo-tree-id53801 . -1500) (undo-tree-id53802 . -1500) (undo-tree-id53803 . -1500) (undo-tree-id53804 . -1500) (undo-tree-id53805 . -1500) (undo-tree-id53806 . -1500) (undo-tree-id53807 . -1500) (undo-tree-id53808 . -1500) (undo-tree-id53809 . -1500) (undo-tree-id53810 . -1500) (undo-tree-id53811 . -1500) (undo-tree-id53812 . -1500) (undo-tree-id53813 . -1500) (undo-tree-id53814 . -1500) (undo-tree-id53815 . -1500) (undo-tree-id53816 . -1500) (undo-tree-id53817 . -1500) (undo-tree-id53818 . -1500) (undo-tree-id53819 . -1500) (undo-tree-id53820 . -1500) (undo-tree-id53821 . -1500) (undo-tree-id53822 . -1500) (undo-tree-id53823 . -1500) (undo-tree-id53824 . -1500) (undo-tree-id53825 . -1500) (undo-tree-id53826 . -1500) (undo-tree-id53827 . -1500) (undo-tree-id53828 . -1500) (undo-tree-id53829 . -1500) (undo-tree-id53830 . -1500) (undo-tree-id53831 . -1500) (undo-tree-id53832 . -1500) (undo-tree-id53833 . -1500) (undo-tree-id53834 . -1500) (undo-tree-id53835 . -1500) (undo-tree-id53836 . -1500) (undo-tree-id53837 . -1500) (undo-tree-id53838 . -1500) (undo-tree-id53839 . -1500) (undo-tree-id53840 . -1500) (undo-tree-id53841 . -1500) (undo-tree-id53842 . -1500) (undo-tree-id53843 . -1500) (undo-tree-id53844 . -1500) (undo-tree-id53845 . -1500) (undo-tree-id53846 . -1500) (undo-tree-id53847 . -1500) (undo-tree-id53848 . -1500) (undo-tree-id53849 . -1500) (undo-tree-id53850 . -1500) (undo-tree-id53851 . -1500) (undo-tree-id53852 . -1500) (undo-tree-id53853 . -1500) (undo-tree-id53854 . -1500) (undo-tree-id53855 . -1500) (undo-tree-id53856 . -1500) (undo-tree-id53857 . -1500) (undo-tree-id53858 . -1500) (undo-tree-id53859 . -1500) (undo-tree-id53860 . -1500) (undo-tree-id53861 . -1500) (undo-tree-id53862 . -1500) (undo-tree-id53863 . -1500) (undo-tree-id53864 . -1500) (undo-tree-id53865 . -1500) (undo-tree-id53866 . -1500) (undo-tree-id53867 . -1500) (undo-tree-id53868 . -1500) (undo-tree-id53869 . -1500) (undo-tree-id53870 . -1500) (undo-tree-id53871 . -1500) (undo-tree-id53872 . -1500) (undo-tree-id53873 . -1500) (undo-tree-id53874 . -1500) (undo-tree-id53875 . -1500) (undo-tree-id53876 . -1500) (undo-tree-id53877 . -1500) (undo-tree-id53878 . -1500) (undo-tree-id53879 . -1500) (undo-tree-id53880 . -1500) (undo-tree-id53881 . -1500) (undo-tree-id53882 . -1500) (undo-tree-id53883 . -1500) (undo-tree-id53884 . -1500) (undo-tree-id53885 . -1500) (undo-tree-id53886 . -1500) (undo-tree-id53887 . -1500) (undo-tree-id53888 . -1500) (undo-tree-id53889 . -1500) (undo-tree-id53890 . -1500) (undo-tree-id53891 . -1500) (undo-tree-id53892 . -1500) (undo-tree-id53893 . -1500) (undo-tree-id53894 . -1500) (undo-tree-id53895 . -1500) (undo-tree-id53896 . -1500) (undo-tree-id53897 . -1500) (undo-tree-id53898 . -1500) (undo-tree-id53899 . -1500) (undo-tree-id53900 . -1500) (undo-tree-id53901 . -1500) (undo-tree-id53902 . -1500) (undo-tree-id53903 . -1500) (undo-tree-id53904 . -1500) (undo-tree-id53905 . -1500) (undo-tree-id53906 . -1500) (undo-tree-id53907 . -1500) (undo-tree-id53908 . -1500) (undo-tree-id53909 . -1500) (undo-tree-id53910 . -1500) (undo-tree-id53911 . -1500) (undo-tree-id53912 . -1500) (undo-tree-id53913 . -1500) (undo-tree-id53914 . -1500) (undo-tree-id53915 . -1500) (undo-tree-id53916 . -1500) (undo-tree-id53917 . -1500) (undo-tree-id53918 . -1500) (undo-tree-id53919 . -1500) (undo-tree-id53920 . -1500) (undo-tree-id53921 . -1500) (undo-tree-id53922 . -1500) (undo-tree-id53923 . -1500) (undo-tree-id53924 . -1500) (undo-tree-id53925 . -1500) (undo-tree-id53926 . -1500) (undo-tree-id53927 . -1500) (undo-tree-id53928 . -1500) (undo-tree-id53929 . -1500) (undo-tree-id53930 . -1500) (undo-tree-id53931 . -1500) (undo-tree-id53932 . -1500) (undo-tree-id53933 . -1500) (undo-tree-id53934 . -1503) (undo-tree-id53935 . -1503) (undo-tree-id53936 . -1503) (undo-tree-id53937 . -1503) (undo-tree-id53938 . -1503) (undo-tree-id53939 . -1503) (undo-tree-id53940 . -1503) (undo-tree-id53941 . -1503) (undo-tree-id53942 . -1503) (undo-tree-id53943 . -1503) (undo-tree-id53944 . -1503) (undo-tree-id53945 . -1503) (undo-tree-id53946 . -1503) (undo-tree-id53947 . -1503) (undo-tree-id53948 . -1503) (undo-tree-id53949 . -1503) (undo-tree-id53950 . -1511) (undo-tree-id53951 . -1511) (undo-tree-id53952 . -1511) (undo-tree-id53953 . -1511) (undo-tree-id53954 . -1511) (undo-tree-id53955 . -1511) (undo-tree-id53956 . -1511) (undo-tree-id53957 . -1511) (undo-tree-id53958 . -1511) (undo-tree-id53959 . -1511) (undo-tree-id53960 . -1511) (undo-tree-id53961 . -1511) (undo-tree-id53962 . -1511) (undo-tree-id53963 . -1511) (undo-tree-id53964 . -1511) (undo-tree-id53965 . -1511) (undo-tree-id53966 . -1514) (undo-tree-id53967 . -1514) (undo-tree-id53968 . -1514) (undo-tree-id53969 . -1514) (undo-tree-id53970 . -1514) (undo-tree-id53971 . -1514) (undo-tree-id53972 . -1514) (undo-tree-id53973 . -1514) (undo-tree-id53974 . -1514) (undo-tree-id53975 . -1514) (undo-tree-id53976 . -1514) (undo-tree-id53977 . -1514) (undo-tree-id53978 . -1514) (undo-tree-id53979 . -1514) (undo-tree-id53980 . -1514) (undo-tree-id53981 . -1514) (undo-tree-id53982 . -1519) (undo-tree-id53983 . -1519) (undo-tree-id53984 . -1519) (undo-tree-id53985 . -1519) (undo-tree-id53986 . -1519) (undo-tree-id53987 . -1519) (undo-tree-id53988 . -1519) (undo-tree-id53989 . -1519) (undo-tree-id53990 . -1519) (undo-tree-id53991 . -1519) (undo-tree-id53992 . -1519) (undo-tree-id53993 . -1519) (undo-tree-id53994 . -1519) (undo-tree-id53995 . -1519) (undo-tree-id53996 . -1519) (undo-tree-id53997 . -1519) (undo-tree-id53998 . -1521) (undo-tree-id53999 . -1521) (undo-tree-id54000 . -1521) (undo-tree-id54001 . -1521) (undo-tree-id54002 . -1521) (undo-tree-id54003 . -1521) (undo-tree-id54004 . -1521) (undo-tree-id54005 . -1521) (undo-tree-id54006 . -1521) (undo-tree-id54007 . -1521) (undo-tree-id54008 . -1521) (undo-tree-id54009 . -1521) (undo-tree-id54010 . -1521) (undo-tree-id54011 . -1521) (undo-tree-id54012 . -1521) (undo-tree-id54013 . -1521) (undo-tree-id54014 . -1523) (undo-tree-id54015 . -1523) (undo-tree-id54016 . -1523) (undo-tree-id54017 . -1523) (undo-tree-id54018 . -1523) (undo-tree-id54019 . -1523) (undo-tree-id54020 . -1523) (undo-tree-id54021 . -1523) (undo-tree-id54022 . -1523) (undo-tree-id54023 . -1523) (undo-tree-id54024 . -1523) (undo-tree-id54025 . -1523) (undo-tree-id54026 . -1523) (undo-tree-id54027 . -1523) (undo-tree-id54028 . -1523) (undo-tree-id54029 . -1523) (undo-tree-id54030 . -1523) (undo-tree-id54031 . -1523) (undo-tree-id54032 . -1523) (undo-tree-id54033 . -1523) (undo-tree-id54034 . -1523) (undo-tree-id54035 . -1523) (undo-tree-id54036 . -1523) (undo-tree-id54037 . -1523) (undo-tree-id54038 . -1523) (undo-tree-id54039 . -1523) (undo-tree-id54040 . -1523) (undo-tree-id54041 . -1523) (undo-tree-id54042 . -1523) (undo-tree-id54043 . -1523) (undo-tree-id54044 . -1523) (undo-tree-id54045 . -1523) (undo-tree-id54046 . -1523) (undo-tree-id54047 . -1523) (undo-tree-id54048 . -1523) (undo-tree-id54049 . -1523) (undo-tree-id54050 . -1523) (undo-tree-id54051 . -1523) (undo-tree-id54052 . -1523) (undo-tree-id54053 . -1523) (undo-tree-id54054 . -1523) (undo-tree-id54055 . -1523) (undo-tree-id54056 . -1523) (undo-tree-id54057 . -1523) (undo-tree-id54058 . -1523) (undo-tree-id54059 . -1523) (undo-tree-id54060 . -1523) (undo-tree-id54061 . -1523) (undo-tree-id54062 . -1523) (undo-tree-id54063 . -1523) (undo-tree-id54064 . -1523) (undo-tree-id54065 . -1523) (undo-tree-id54066 . -1523) (undo-tree-id54067 . -1523) (undo-tree-id54068 . -1523) (undo-tree-id54069 . -1523) (undo-tree-id54070 . -1523) (undo-tree-id54071 . -1523) (undo-tree-id54072 . -1523) (undo-tree-id54073 . -1523) (undo-tree-id54074 . -1523) (undo-tree-id54075 . -1523) (undo-tree-id54076 . -1523) (undo-tree-id54077 . -1523) (undo-tree-id54078 . -1523) (undo-tree-id54079 . -1523) (undo-tree-id54080 . -1523) (undo-tree-id54081 . -1523) (undo-tree-id54082 . -1523) (undo-tree-id54083 . -1523) (undo-tree-id54084 . -1523) (undo-tree-id54085 . -1523) (undo-tree-id54086 . -1523) (undo-tree-id54087 . -1523) (undo-tree-id54088 . -1523) (undo-tree-id54089 . -1523) (undo-tree-id54090 . -1523) (undo-tree-id54091 . -1523) (undo-tree-id54092 . -1523) (undo-tree-id54093 . -1523) (undo-tree-id54094 . -1523) (undo-tree-id54095 . -1523) (undo-tree-id54096 . -1523) (undo-tree-id54097 . -1523) (undo-tree-id54098 . -1523) (undo-tree-id54099 . -1523) (undo-tree-id54100 . -1523) (undo-tree-id54101 . -1523) (undo-tree-id54102 . -1523) (undo-tree-id54103 . -1523) (undo-tree-id54104 . -1523) (undo-tree-id54105 . -1523) (undo-tree-id54106 . -1523) (undo-tree-id54107 . -1523) (undo-tree-id54108 . -1523) (undo-tree-id54109 . -1523) (undo-tree-id54110 . -1523) (undo-tree-id54111 . -1523) (undo-tree-id54112 . -1523) (undo-tree-id54113 . -1523) (undo-tree-id54114 . -1523) (undo-tree-id54115 . -1523) (undo-tree-id54116 . -1523) (undo-tree-id54117 . -1523) (undo-tree-id54118 . -1523) (undo-tree-id54119 . -1523) (undo-tree-id54120 . -1523) (undo-tree-id54121 . -1523) (undo-tree-id54122 . -1523) (undo-tree-id54123 . -1523) (undo-tree-id54124 . -1523) (undo-tree-id54125 . -1523) (undo-tree-id54126 . -1523) (undo-tree-id54127 . -1523) (undo-tree-id54128 . -1523) (undo-tree-id54129 . -1523) (undo-tree-id54130 . -1523) (undo-tree-id54131 . -1523) (undo-tree-id54132 . -1523) (undo-tree-id54133 . -1523) (undo-tree-id54134 . -1523) (undo-tree-id54135 . -1523) (undo-tree-id54136 . -1523) (undo-tree-id54137 . -1523) (undo-tree-id54138 . -1523) (undo-tree-id54139 . -1523) (undo-tree-id54140 . -1523) (undo-tree-id54141 . -1523) (undo-tree-id54142 . -1523) (undo-tree-id54143 . -1523) (undo-tree-id54144 . -1523) (undo-tree-id54145 . -1523) (undo-tree-id54146 . -1523) (undo-tree-id54147 . -1523) (undo-tree-id54148 . -1523) (undo-tree-id54149 . -1523) (undo-tree-id54150 . -1523) (undo-tree-id54151 . -1523) (undo-tree-id54152 . -1523) (undo-tree-id54153 . -1523) (undo-tree-id54154 . -1523) (undo-tree-id54155 . -1523) (undo-tree-id54156 . -1523) (undo-tree-id54157 . -1523) (undo-tree-id54158 . -1523) (undo-tree-id54159 . -1523) (undo-tree-id54160 . -1523) (undo-tree-id54161 . -1523) (undo-tree-id54162 . -1523) (undo-tree-id54163 . -1523) (undo-tree-id54164 . -1523) (undo-tree-id54165 . -1523) (undo-tree-id54166 . -1523) (undo-tree-id54167 . -1523) (undo-tree-id54168 . -1523) (undo-tree-id54169 . -1523) (undo-tree-id54170 . -1523) (undo-tree-id54171 . -1523) (undo-tree-id54172 . -1523) (undo-tree-id54173 . -1523) (undo-tree-id54174 . -1523) (undo-tree-id54175 . -1523) (undo-tree-id54176 . -1523) (undo-tree-id54177 . -1523) (undo-tree-id54178 . -1523) (undo-tree-id54179 . -1523) (undo-tree-id54180 . -1523) (undo-tree-id54181 . -1523) (undo-tree-id54182 . -1523) (undo-tree-id54183 . -1523) (undo-tree-id54184 . -1523) (undo-tree-id54185 . -1523) (undo-tree-id54186 . -1523) (undo-tree-id54187 . -1523) (undo-tree-id54188 . -1523) (undo-tree-id54189 . -1523) (undo-tree-id54190 . -1523) (undo-tree-id54191 . -1523) (undo-tree-id54192 . -1523) (undo-tree-id54193 . -1523) (undo-tree-id54194 . -1523) (undo-tree-id54195 . -1523) (undo-tree-id54196 . -1523) (undo-tree-id54197 . -1523) (undo-tree-id54198 . -1523) (undo-tree-id54199 . -1523) (undo-tree-id54200 . -1523) (undo-tree-id54201 . -1523) (undo-tree-id54202 . -1523) (undo-tree-id54203 . -1523) (undo-tree-id54204 . -1523) (undo-tree-id54205 . -1523) (undo-tree-id54206 . -1523) (undo-tree-id54207 . -1523) (undo-tree-id54208 . -1523) (undo-tree-id54209 . -1523) (undo-tree-id54210 . -1523) (undo-tree-id54211 . -1523) (undo-tree-id54212 . -1523) (undo-tree-id54213 . -1523) (undo-tree-id54214 . -1523) (undo-tree-id54215 . -1523) (undo-tree-id54216 . -1523) (undo-tree-id54217 . -1523) (undo-tree-id54218 . -1523) (undo-tree-id54219 . -1523) (undo-tree-id54220 . -1523) (undo-tree-id54221 . -1523) (undo-tree-id54222 . -1523) (undo-tree-id54223 . -1523) (undo-tree-id54224 . -1523) (undo-tree-id54225 . -1523) (undo-tree-id54226 . -1523) (undo-tree-id54227 . -1523) (undo-tree-id54228 . -1523) (undo-tree-id54229 . -1523) (undo-tree-id54230 . -1523) (undo-tree-id54231 . -1523) (undo-tree-id54232 . -1523) (undo-tree-id54233 . -1523) (undo-tree-id54234 . -1523) (undo-tree-id54235 . -1523) (undo-tree-id54236 . -1523) (undo-tree-id54237 . -1523) (undo-tree-id54238 . -1523) (undo-tree-id54239 . -1523) (undo-tree-id54240 . -1523) (undo-tree-id54241 . -1523) (undo-tree-id54242 . -1523) (undo-tree-id54243 . -1523) (undo-tree-id54244 . -1523) (undo-tree-id54245 . -1523) (undo-tree-id54246 . -1523) (undo-tree-id54247 . -1523) (undo-tree-id54248 . -1523) (undo-tree-id54249 . -1523) (undo-tree-id54250 . -1523) (undo-tree-id54251 . -1523) (undo-tree-id54252 . -1523) (undo-tree-id54253 . -1523) (undo-tree-id54254 . -1523) (undo-tree-id54255 . -1523) (undo-tree-id54256 . -1523) (undo-tree-id54257 . -1523) (undo-tree-id54258 . -1523) (undo-tree-id54259 . -1523) (undo-tree-id54260 . -1523) (undo-tree-id54261 . -1523) (undo-tree-id54262 . -1523) (undo-tree-id54263 . -1523) (undo-tree-id54264 . -1523) (undo-tree-id54265 . -1523) (undo-tree-id54266 . -1523) (undo-tree-id54267 . -1523) (undo-tree-id54268 . -1523) (undo-tree-id54269 . -1523) (undo-tree-id54270 . -1523) (undo-tree-id54271 . -1523) (undo-tree-id54272 . -1523) (undo-tree-id54273 . -1523) (undo-tree-id54274 . -1523) (undo-tree-id54275 . -1523) (undo-tree-id54276 . -1523) (undo-tree-id54277 . -1523) (undo-tree-id54278 . -1523) (undo-tree-id54279 . -1523) (undo-tree-id54280 . -1523) (undo-tree-id54281 . -1523) (undo-tree-id54282 . -1523) (undo-tree-id54283 . -1523) (undo-tree-id54284 . -1523) (undo-tree-id54285 . -1523) (undo-tree-id54286 . -1523) (undo-tree-id54287 . -1523) (undo-tree-id54288 . -1523) (undo-tree-id54289 . -1523) (undo-tree-id54290 . -1523) (undo-tree-id54291 . -1523) (undo-tree-id54292 . -1523) (undo-tree-id54293 . -1523) (undo-tree-id54294 . -1523) (undo-tree-id54295 . -1523) (undo-tree-id54296 . -1523) (undo-tree-id54297 . -1523) (undo-tree-id54298 . -1523) (undo-tree-id54299 . -1523) (undo-tree-id54300 . -1523) (undo-tree-id54301 . -1523) (undo-tree-id54302 . -1523) (undo-tree-id54303 . -1523) (undo-tree-id54304 . -1523) (undo-tree-id54305 . -1523) (undo-tree-id54306 . -1523) (undo-tree-id54307 . -1523) (undo-tree-id54308 . -1523) (undo-tree-id54309 . -1523) (undo-tree-id54310 . -1523) (undo-tree-id54311 . -1523) (undo-tree-id54312 . -1523) (undo-tree-id54313 . -1523) (undo-tree-id54314 . -1523) (undo-tree-id54315 . -1523) (undo-tree-id54316 . -1523) (undo-tree-id54317 . -1523) (undo-tree-id54318 . -1523) (undo-tree-id54319 . -1523) (undo-tree-id54320 . -1523) (undo-tree-id54321 . -1523) (undo-tree-id54322 . -1523) (undo-tree-id54323 . -1523) (undo-tree-id54324 . -1523) (undo-tree-id54325 . -1523) (undo-tree-id54326 . -1523) (undo-tree-id54327 . -1523) (undo-tree-id54328 . -1523) (undo-tree-id54329 . -1523) (undo-tree-id54330 . -1523) (undo-tree-id54331 . -1523) (undo-tree-id54332 . -1523) (undo-tree-id54333 . -1523) (undo-tree-id54334 . -1523) (undo-tree-id54335 . -1523) (undo-tree-id54336 . -1523) (undo-tree-id54337 . -1523) (undo-tree-id54338 . -1523) (undo-tree-id54339 . -1523) (undo-tree-id54340 . -1523) (undo-tree-id54341 . -1523) (undo-tree-id54342 . -1523) (undo-tree-id54343 . -1523) (undo-tree-id54344 . -1523) (undo-tree-id54345 . -1523) (undo-tree-id54346 . -1523) (undo-tree-id54347 . -1523) (undo-tree-id54348 . -1523) (undo-tree-id54349 . -1523) (undo-tree-id54350 . -1523) (undo-tree-id54351 . -1523) (undo-tree-id54352 . -1523) (undo-tree-id54353 . -1523) (undo-tree-id54354 . -1523) (undo-tree-id54355 . -1523) (undo-tree-id54356 . -1523) (undo-tree-id54357 . -1523) (undo-tree-id54358 . -1523) (undo-tree-id54359 . -1523) (undo-tree-id54360 . -1523) (undo-tree-id54361 . -1523) (undo-tree-id54362 . -1523) (undo-tree-id54363 . -1523) (undo-tree-id54364 . -1523) (undo-tree-id54365 . -1523) (undo-tree-id54366 . -1523) (undo-tree-id54367 . -1523) (undo-tree-id54368 . -1523) (undo-tree-id54369 . -1523) (undo-tree-id54370 . -1523) (undo-tree-id54371 . -1523) (undo-tree-id54372 . -1523) (undo-tree-id54373 . -1523) (undo-tree-id54374 . -1523) (undo-tree-id54375 . -1523) (undo-tree-id54376 . -1523) (undo-tree-id54377 . -1523) (undo-tree-id54378 . -1523) (undo-tree-id54379 . -1523) (undo-tree-id54380 . -1523) (undo-tree-id54381 . -1523) (undo-tree-id54382 . -1523) (undo-tree-id54383 . -1523) (undo-tree-id54384 . -1523) (undo-tree-id54385 . -1523) (undo-tree-id54386 . -1523) (undo-tree-id54387 . -1523) (undo-tree-id54388 . -1523) (undo-tree-id54389 . -1523) (undo-tree-id54390 . -1523) (undo-tree-id54391 . -1523) (undo-tree-id54392 . -1523) (undo-tree-id54393 . -1523) (undo-tree-id54394 . -1523) (undo-tree-id54395 . -1523) (undo-tree-id54396 . -1523) (undo-tree-id54397 . -1523) (undo-tree-id54398 . -1523) (undo-tree-id54399 . -1523) (undo-tree-id54400 . -1523) (undo-tree-id54401 . -1534) (undo-tree-id54402 . -1534) (undo-tree-id54403 . -1534) (undo-tree-id54404 . -1534) (undo-tree-id54405 . -1534) (undo-tree-id54406 . -1534) (undo-tree-id54407 . -1534) (undo-tree-id54408 . -1534) (undo-tree-id54409 . -1534) (undo-tree-id54410 . -1534) (undo-tree-id54411 . -1534) (undo-tree-id54412 . -1534) (undo-tree-id54413 . -1534) (undo-tree-id54414 . -1534) (undo-tree-id54415 . -1534) (undo-tree-id54416 . -1534) (undo-tree-id54417 . -1538) (undo-tree-id54418 . -1538) (undo-tree-id54419 . -1538) (undo-tree-id54420 . -1538) (undo-tree-id54421 . -1538) (undo-tree-id54422 . -1538) (undo-tree-id54423 . -1538) (undo-tree-id54424 . -1538) (undo-tree-id54425 . -1538) (undo-tree-id54426 . -1538) (undo-tree-id54427 . -1538) (undo-tree-id54428 . -1538) (undo-tree-id54429 . -1538) (undo-tree-id54430 . -1538) (undo-tree-id54431 . -1538) (undo-tree-id54432 . -1538) (undo-tree-id54433 . -1538) (undo-tree-id54434 . -1538) (undo-tree-id54435 . -1538) (undo-tree-id54436 . -1538) (undo-tree-id54437 . -1538) (undo-tree-id54438 . -1546) (undo-tree-id54439 . -1546) (undo-tree-id54440 . -1546) (undo-tree-id54441 . -1546) (undo-tree-id54442 . -1546) (undo-tree-id54443 . -1546) (undo-tree-id54444 . -1546) (undo-tree-id54445 . -1546) (undo-tree-id54446 . -1546) (undo-tree-id54447 . -1546) (undo-tree-id54448 . -1546) (undo-tree-id54449 . -1546) (undo-tree-id54450 . -1546) (undo-tree-id54451 . -1546) (undo-tree-id54452 . -1546) (undo-tree-id54453 . -1546) (undo-tree-id54454 . -1558) (undo-tree-id54455 . -1558) (undo-tree-id54456 . -1558) (undo-tree-id54457 . -1558) (undo-tree-id54458 . -1558) (undo-tree-id54459 . -1558) (undo-tree-id54460 . -1558) (undo-tree-id54461 . -1558) (undo-tree-id54462 . -1558) (undo-tree-id54463 . -1558) (undo-tree-id54464 . -1558) (undo-tree-id54465 . -1558) (undo-tree-id54466 . -1558) (undo-tree-id54467 . -1558) (undo-tree-id54468 . -1558) (undo-tree-id54469 . -1558) (undo-tree-id54470 . -1562) (undo-tree-id54471 . -1562) (undo-tree-id54472 . -1562) (undo-tree-id54473 . -1562) (undo-tree-id54474 . -1562) (undo-tree-id54475 . -1562) (undo-tree-id54476 . -1562) (undo-tree-id54477 . -1562) (undo-tree-id54478 . -1562) (undo-tree-id54479 . -1562) (undo-tree-id54480 . -1562) (undo-tree-id54481 . -1562) (undo-tree-id54482 . -1562) (undo-tree-id54483 . -1562) (undo-tree-id54484 . -1562) (undo-tree-id54485 . -1562) (undo-tree-id54486 . -1566) (undo-tree-id54487 . -1566) (undo-tree-id54488 . -1566) (undo-tree-id54489 . -1566) (undo-tree-id54490 . -1566) (undo-tree-id54491 . -1566) (undo-tree-id54492 . -1566) (undo-tree-id54493 . -1566) (undo-tree-id54494 . -1566) (undo-tree-id54495 . -1566) (undo-tree-id54496 . -1566) (undo-tree-id54497 . -1566) (undo-tree-id54498 . -1566) (undo-tree-id54499 . -1566) (undo-tree-id54500 . -1566) (undo-tree-id54501 . -1566) (undo-tree-id54502 . -1572) (undo-tree-id54503 . -1572) (undo-tree-id54504 . -1572) (undo-tree-id54505 . -1572) (undo-tree-id54506 . -1572) (undo-tree-id54507 . -1572) (undo-tree-id54508 . -1572) (undo-tree-id54509 . -1572) (undo-tree-id54510 . -1572) (undo-tree-id54511 . -1572) (undo-tree-id54512 . -1572) (undo-tree-id54513 . -1572) (undo-tree-id54514 . -1572) (undo-tree-id54515 . -1572) (undo-tree-id54516 . -1572) (undo-tree-id54517 . -1572) (undo-tree-id54518 . -1575) (undo-tree-id54519 . -1575) (undo-tree-id54520 . -1575) (undo-tree-id54521 . -1575) (undo-tree-id54522 . -1575) (undo-tree-id54523 . -1575) (undo-tree-id54524 . -1575) (undo-tree-id54525 . -1575) (undo-tree-id54526 . -1575) (undo-tree-id54527 . -1575) (undo-tree-id54528 . -1575) (undo-tree-id54529 . -1575) (undo-tree-id54530 . -1575) (undo-tree-id54531 . -1575) (undo-tree-id54532 . -1575) (undo-tree-id54533 . -1575) (undo-tree-id54534 . -1584) (undo-tree-id54535 . -1584) (undo-tree-id54536 . -1584) (undo-tree-id54537 . -1584) (undo-tree-id54538 . -1584) (undo-tree-id54539 . -1584) (undo-tree-id54540 . -1584) (undo-tree-id54541 . -1584) (undo-tree-id54542 . -1584) (undo-tree-id54543 . -1584) (undo-tree-id54544 . -1584) (undo-tree-id54545 . -1584) (undo-tree-id54546 . -1584) (undo-tree-id54547 . -1584) (undo-tree-id54548 . -1584) (undo-tree-id54549 . -1584) (undo-tree-id54550 . -1586) (undo-tree-id54551 . -1586) (undo-tree-id54552 . -1586) (undo-tree-id54553 . -1586) (undo-tree-id54554 . -1586) (undo-tree-id54555 . -1586) (undo-tree-id54556 . -1586) (undo-tree-id54557 . -1586) (undo-tree-id54558 . -1586) (undo-tree-id54559 . -1586) (undo-tree-id54560 . -1586) (undo-tree-id54561 . -1586) (undo-tree-id54562 . -1586) (undo-tree-id54563 . -1586) (undo-tree-id54564 . -1586) (undo-tree-id54565 . -1586) (undo-tree-id54566 . -1587) (undo-tree-id54567 . -1587) (undo-tree-id54568 . -1587) (undo-tree-id54569 . -1587) (undo-tree-id54570 . -1587) (undo-tree-id54571 . -1587) (undo-tree-id54572 . -1587) (undo-tree-id54573 . -1587) (undo-tree-id54574 . -1587) (undo-tree-id54575 . -1587) (undo-tree-id54576 . -1587) (undo-tree-id54577 . -1587) (undo-tree-id54578 . -1587) (undo-tree-id54579 . -1587) (undo-tree-id54580 . -1587) (undo-tree-id54581 . -1587) (undo-tree-id54582 . -1587) (undo-tree-id54583 . -1587) (undo-tree-id54584 . -1587) (undo-tree-id54585 . -1587) (undo-tree-id54586 . -1587) (undo-tree-id54587 . -1587) (undo-tree-id54588 . -1587) (undo-tree-id54589 . -1587) (undo-tree-id54590 . -1587) (undo-tree-id54591 . -1587) (undo-tree-id54592 . -1587) (undo-tree-id54593 . -1587) (undo-tree-id54594 . -1587) (undo-tree-id54595 . -1463) (4704 . 6167) (#(", which is similar to RNNs. Then, for a seq2seq task, the goal of self-attention is to model the dependencies of the current input element to all other input elements. To achieve this, self-attention mechanisms are composed of three stages. First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 11 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 13 16 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 16 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 17 19 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 19 25 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 25 26 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 26 27 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 27 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 28 29 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 29 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 30 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 31 32 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 32 33 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 33 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 46 47 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 47 50 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 50 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 53 54 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 54 73 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 73 75 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 75 157 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 157 158 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 158 164 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 164 166 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 166 169 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 169 171 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 171 174 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 174 175 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 175 176 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 176 177 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 177 178 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 178 179 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 179 180 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 180 234 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 234 235 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 235 236 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 236 237 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 237 238 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 238 239 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 239 257 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 257 258 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 258 328 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 328 330 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 330 350 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 350 354 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 354 355 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 355 375 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 375 376 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 376 449 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 449 455 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 455 456 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 456 552 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 552 553 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 553 593 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 593 594 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 594 700 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 700 701 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 701 809 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 809 810 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 810 821 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 821 822 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 822 824 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 824 825 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 825 849 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 849 850 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 850 854 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 854 855 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 855 956 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 956 961 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 961 962 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 962 1059 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1059 1060 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1060 1164 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1164 1165 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1165 1274 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1274 1275 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1275 1314 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1314 1315 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1315 1414 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1414 1415 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1415 1442 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1442 1443 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1443 1444 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1444 1445 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1445 1458 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1458 1459 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4828)) ((4828 . 6287) (#("- , which is similar to RNNs. Then, for a seq2seq task, the goal of self-attention is to model the dependencies of the current input element to all other input elements. To achieve this, self-attention mechanisms are composed of three stages. First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)

" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 13 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 13 15 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 15 18 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 18 19 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 19 21 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 21 27 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 27 28 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 28 29 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 29 30 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 30 31 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 31 32 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 32 33 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 33 34 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 34 35 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 35 48 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 48 49 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 49 52 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 52 55 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 55 56 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 56 75 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 75 77 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 77 159 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 159 160 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 160 166 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 166 168 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 168 171 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 171 173 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 173 176 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 176 177 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 177 178 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 178 179 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 179 180 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 180 181 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 181 182 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 182 236 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 236 237 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 237 238 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 238 239 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 239 240 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 240 241 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 241 259 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 259 260 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 260 330 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 330 332 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 332 352 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 352 356 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 356 357 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 357 377 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 377 378 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 378 451 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 451 457 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 457 458 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 458 554 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 554 555 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 555 595 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 595 596 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 596 702 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 702 703 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 703 811 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 811 812 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 812 823 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 823 824 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 824 826 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 826 827 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 827 851 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 851 852 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 852 856 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 856 857 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 857 958 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 958 963 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 963 964 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 964 1061 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1061 1062 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1062 1166 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1166 1167 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1167 1276 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1276 1277 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1277 1316 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1316 1317 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1317 1416 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1416 1417 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1417 1444 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1444 1445 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1445 1446 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1446 1447 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1447 1460 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1460 1461 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1461 1462 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1462 1463 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 4704) (4704 . 6291) (#("- Each ith element in these sequences are vectors of size d representing the feature information for the input at position i

- , which is similar to RNNs. Then, for a seq2seq task, the goal of self-attention is to model the dependencies of the current input element to all other input elements. To achieve this, self-attention mechanisms are composed of three stages. First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 64 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 64 72 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 72 73 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 73 108 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 108 124 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 124 125 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 125 126 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 126 127 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 127 128 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 128 139 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 139 141 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 141 144 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 144 145 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 145 147 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 147 153 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 153 154 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 154 155 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 155 156 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 156 157 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 157 158 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 158 159 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 159 160 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 160 161 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 161 174 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 174 175 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 175 178 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 178 181 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 181 182 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 182 201 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 201 203 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 203 285 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 285 286 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 286 292 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 292 294 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 294 297 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 297 299 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 299 302 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 302 303 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 303 304 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 304 305 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 305 306 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 306 307 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 307 308 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 308 362 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 362 363 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 363 364 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 364 365 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 365 366 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 366 367 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 367 385 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 385 386 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 386 456 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 456 458 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 458 478 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 478 482 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 482 483 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 483 500 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 500 503 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 503 504 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 504 577 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 577 583 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 583 584 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 584 680 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 680 681 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 681 721 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 721 722 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 722 828 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 828 829 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 829 937 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 937 938 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 938 949 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 949 950 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 950 952 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 952 953 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 953 977 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 977 978 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 978 982 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 982 983 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 983 1084 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1084 1089 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1089 1090 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1090 1187 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1187 1188 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1188 1292 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1292 1293 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1293 1402 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1402 1403 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1403 1442 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1442 1443 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1443 1542 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1542 1543 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1543 1570 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1570 1571 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1571 1572 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1572 1573 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1573 1586 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1586 1587 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4704) (undo-tree-id55106 . 1459) (undo-tree-id55107 . -128) (undo-tree-id55108 . 1580) (undo-tree-id55109 . -10) (undo-tree-id55110 . -128) (undo-tree-id55111 . -128)) (25774 62089 902938 384000) 0 nil])
([nil nil ((4857 . 6293) (#("- To achieve this, self-attention mechanisms are composed of three stages. First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)

- Then, for a seq2seq task, the goal of self-attention is to model the dependencies of the current input element to all other input elements." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 5 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 5 8 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 8 9 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 9 10 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 10 11 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 11 12 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 12 13 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 13 14 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 14 68 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 68 69 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 69 70 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 70 71 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 71 72 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 72 73 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 73 91 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 91 92 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 92 162 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 162 164 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 164 184 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 184 188 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 188 189 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 189 207 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 207 209 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 209 210 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 210 283 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 283 289 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 289 290 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 290 386 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 386 387 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 387 427 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 427 428 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 428 534 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 534 535 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 535 643 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 643 644 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 644 655 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 655 656 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 656 658 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 658 659 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 659 683 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 683 684 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 684 688 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 688 689 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 689 790 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 790 795 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 795 796 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 796 893 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 893 894 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 894 998 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 998 999 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 999 1108 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1108 1109 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1109 1148 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1148 1149 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1149 1248 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1248 1249 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1249 1276 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1276 1277 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1277 1278 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1278 1279 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1279 1292 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1292 1293 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1293 1294 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1294 1295 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1295 1296 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1296 1297 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1297 1298 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1298 1299 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1299 1300 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1300 1301 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1301 1302 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1302 1315 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1315 1316 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1316 1319 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1319 1322 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1322 1323 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1323 1342 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1342 1344 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1344 1426 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1426 1427 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1427 1433 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1433 1435 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1435 1436 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4857) (undo-tree-id56366 . 139) (undo-tree-id56367 . -1296) (undo-tree-id56368 . -1436) (undo-tree-id56369 . -1296) (undo-tree-id56370 . -1296) (undo-tree-id56371 . -1296) (undo-tree-id56372 . -1296) (undo-tree-id56373 . -1296) (undo-tree-id56374 . -1296) (undo-tree-id56375 . -1296) (undo-tree-id56376 . -1296) (undo-tree-id56377 . -1296) (undo-tree-id56378 . -1296) (undo-tree-id56379 . -1296) (undo-tree-id56380 . -1296) (undo-tree-id56381 . -1296) (undo-tree-id56382 . -1296) (undo-tree-id56383 . -1296) (undo-tree-id56384 . -1296) (undo-tree-id56385 . -1296) (undo-tree-id56386 . -1296) (undo-tree-id56387 . -1296) (undo-tree-id56388 . -1296) (undo-tree-id56389 . -1296) (undo-tree-id56390 . -1296) (undo-tree-id56391 . -1296) (undo-tree-id56392 . -1296) (undo-tree-id56393 . -1296) (undo-tree-id56394 . -1296) (undo-tree-id56395 . -1296) (undo-tree-id56396 . -1296) (undo-tree-id56397 . -1296) (undo-tree-id56398 . -1296) (undo-tree-id56399 . -1296) (undo-tree-id56400 . -1296) (undo-tree-id56401 . -1296) (undo-tree-id56402 . -1296) (undo-tree-id56403 . -1296) (undo-tree-id56404 . -1296) (undo-tree-id56405 . -1296) (undo-tree-id56406 . -1296) (undo-tree-id56407 . -1296) (undo-tree-id56408 . -1297) (undo-tree-id56409 . -1297) (undo-tree-id56410 . -1297) (undo-tree-id56411 . -1297) (undo-tree-id56412 . -1297) (undo-tree-id56413 . -1297) (undo-tree-id56414 . -1297) (undo-tree-id56415 . -1297) (undo-tree-id56416 . -1297) (undo-tree-id56417 . -1297) (undo-tree-id56418 . -1297) (undo-tree-id56419 . -1297) (undo-tree-id56420 . -1297) (undo-tree-id56421 . -1297) (undo-tree-id56422 . -1297) (undo-tree-id56423 . -1297) (undo-tree-id56424 . -1297) (undo-tree-id56425 . -1297) (undo-tree-id56426 . -1297) (undo-tree-id56427 . -1297) (undo-tree-id56428 . -1297) (undo-tree-id56429 . -1297) (undo-tree-id56430 . -1297) (undo-tree-id56431 . -1297) (undo-tree-id56432 . -1297) (undo-tree-id56433 . -1297) (undo-tree-id56434 . -1297) (undo-tree-id56435 . -1297) (undo-tree-id56436 . -1297) (undo-tree-id56437 . -1297) (undo-tree-id56438 . -1297) (undo-tree-id56439 . -1297) (undo-tree-id56440 . -1297) (undo-tree-id56441 . -1297) (undo-tree-id56442 . -1297) (undo-tree-id56443 . -1297) (undo-tree-id56444 . -1297) (undo-tree-id56445 . -1297) (undo-tree-id56446 . -1297) (undo-tree-id56447 . -1297) (undo-tree-id56448 . -1297) (undo-tree-id56449 . -1297) (undo-tree-id56450 . -1297) (undo-tree-id56451 . -1297) (undo-tree-id56452 . -1297) (undo-tree-id56453 . -1297) (undo-tree-id56454 . -1297) (undo-tree-id56455 . -1297) (undo-tree-id56456 . -1297) (undo-tree-id56457 . -1297) (undo-tree-id56458 . -1297) (undo-tree-id56459 . -1297) (undo-tree-id56460 . -1297) (undo-tree-id56461 . -1297) (undo-tree-id56462 . -1297) (undo-tree-id56463 . -1297) (undo-tree-id56464 . -1297) (undo-tree-id56465 . -1297) (undo-tree-id56466 . -1297) (undo-tree-id56467 . -1297) (undo-tree-id56468 . -1297) (undo-tree-id56469 . -1297) (undo-tree-id56470 . -1297) (undo-tree-id56471 . -1297) (undo-tree-id56472 . -1297) (undo-tree-id56473 . -1297) (undo-tree-id56474 . -1435) (undo-tree-id56475 . -1435) (undo-tree-id56476 . -1435) (undo-tree-id56477 . -1435) (undo-tree-id56478 . -1435) (undo-tree-id56479 . -1435) (undo-tree-id56480 . -1435) (undo-tree-id56481 . -1435) (undo-tree-id56482 . -1435) (undo-tree-id56483 . -1435) (undo-tree-id56484 . -1435) (undo-tree-id56485 . -1435) (undo-tree-id56486 . -1435) (undo-tree-id56487 . -1435) (undo-tree-id56488 . -1435) (undo-tree-id56489 . -1435) (undo-tree-id56490 . -1436) (undo-tree-id56491 . -1436) (undo-tree-id56492 . -1436) (undo-tree-id56493 . -1436) (undo-tree-id56494 . -1436) (undo-tree-id56495 . -1436) (undo-tree-id56496 . -1436) (undo-tree-id56497 . -1436) (undo-tree-id56498 . -1436) (undo-tree-id56499 . -1436) (undo-tree-id56500 . -1436) (undo-tree-id56501 . -1436) (undo-tree-id56502 . -1436) (undo-tree-id56503 . -1436) (undo-tree-id56504 . -1436) (undo-tree-id56505 . -1436) (undo-tree-id56506 . -1436) (undo-tree-id56507 . -1436) (undo-tree-id56508 . -1436) (undo-tree-id56509 . -1436) (undo-tree-id56510 . -1436) (undo-tree-id56511 . -1436) (undo-tree-id56512 . -1436) (undo-tree-id56513 . -1436) (undo-tree-id56514 . -1436) (undo-tree-id56515 . -1436) (undo-tree-id56516 . -1436) (undo-tree-id56517 . -1436) (undo-tree-id56518 . -1436) (undo-tree-id56519 . -1436) (undo-tree-id56520 . -1436) (undo-tree-id56521 . -1436) (undo-tree-id56522 . -1436) (undo-tree-id56523 . -1436) (undo-tree-id56524 . -1436) (undo-tree-id56525 . -1436) (undo-tree-id56526 . -1436) (undo-tree-id56527 . -1436) (undo-tree-id56528 . -1436) (undo-tree-id56529 . -1436) (undo-tree-id56530 . -1436) (undo-tree-id56531 . -1436) (undo-tree-id56532 . -1436) (undo-tree-id56533 . -1436) (undo-tree-id56534 . -1436) (undo-tree-id56535 . -1295) (4857 . 6152) (#(" To achieve this, self-attention mechanisms are composed of three stages. First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 2 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 4 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 7 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 8 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 9 10 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 10 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 11 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 13 67 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 67 68 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 68 69 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 69 70 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 70 71 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 71 72 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 72 90 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 90 91 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 91 161 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 161 163 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 163 183 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 183 187 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 187 188 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 188 206 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 206 208 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 208 209 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 209 282 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 282 288 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 288 289 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 289 385 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 385 386 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 386 426 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 426 427 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 427 533 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 533 534 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 534 642 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 642 643 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 643 654 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 654 655 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 655 657 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 657 658 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 658 682 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 682 683 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 683 687 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 687 688 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 688 789 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 789 794 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 794 795 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 795 892 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 892 893 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 893 997 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 997 998 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 998 1107 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1107 1108 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1108 1147 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1147 1148 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1148 1247 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1247 1248 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1248 1275 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1275 1276 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1276 1277 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1277 1278 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1278 1291 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1291 1292 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 4998) (undo-tree-id56536 . -1) (undo-tree-id56537 . -1) (undo-tree-id56538 . -1) (undo-tree-id56539 . -1) (undo-tree-id56540 . -1) (undo-tree-id56541 . -1) (undo-tree-id56542 . -1) (undo-tree-id56543 . -1) (undo-tree-id56544 . -1) (undo-tree-id56545 . -1) (undo-tree-id56546 . -1) (undo-tree-id56547 . -1) (undo-tree-id56548 . -1) (undo-tree-id56549 . -1) (undo-tree-id56550 . -1) (undo-tree-id56551 . -1) (undo-tree-id56552 . -1) (undo-tree-id56553 . -1) (undo-tree-id56554 . -1) (undo-tree-id56555 . -1) (undo-tree-id56556 . -1) (undo-tree-id56557 . -1) (undo-tree-id56558 . -1) (undo-tree-id56559 . -1) (undo-tree-id56560 . -1) (undo-tree-id56561 . -1) (undo-tree-id56562 . -1) (undo-tree-id56563 . -1) 4999 (t 25774 62094 6588 274000)) nil (25774 62114 611191 927000) 0 nil])
nil
([nil nil ((#("T" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4859) (undo-tree-id56589 . -1) (undo-tree-id56590 . -1) (t 25774 62114 670783 591000)) nil (25774 62145 812103 400000) 0 nil])
([nil nil ((#("hen" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4859) (undo-tree-id56586 . -2) (undo-tree-id56587 . 3) (undo-tree-id56588 . -3)) nil (25774 62145 812100 649000) 0 nil])
([nil nil ((#(", for a seq2seq task" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1 14 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 14 15 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 15 18 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 18 20 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4859) (undo-tree-id56567 . -19) (undo-tree-id56568 . 20) (undo-tree-id56569 . -16) (undo-tree-id56570 . -16) (undo-tree-id56571 . -16) (undo-tree-id56572 . -16) (undo-tree-id56573 . -16) (undo-tree-id56574 . -16) (undo-tree-id56575 . -16) (undo-tree-id56576 . -16) (undo-tree-id56577 . -16) (undo-tree-id56578 . -16) (undo-tree-id56579 . -16) (undo-tree-id56580 . -16) (undo-tree-id56581 . -16) (undo-tree-id56582 . -16) (undo-tree-id56583 . -16) (undo-tree-id56584 . -16) (undo-tree-id56585 . -20)) nil (25774 62145 812096 260000) 0 nil])
([nil nil ((#(", " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 4859) (undo-tree-id56564 . -1) (undo-tree-id56565 . 2) (undo-tree-id56566 . -2)) nil (25774 62145 812078 852000) 0 nil])
([nil nil ((4859 . 4860) (#("t" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4859)) nil (25774 62145 812063 354000) 0 nil])
([nil nil ((#("To achieve this" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 3 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 6 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 7 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 8 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 9 10 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 10 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 11 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 12 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4976) (undo-tree-id57023 . 15) (undo-tree-id57024 . -14) (undo-tree-id57025 . -12) (undo-tree-id57026 . -12) (undo-tree-id57027 . -12) (undo-tree-id57028 . -12) (undo-tree-id57029 . -12) (undo-tree-id57030 . -12) (undo-tree-id57031 . -12) (undo-tree-id57032 . -12) (undo-tree-id57033 . -12) (undo-tree-id57034 . -12) (undo-tree-id57035 . -12) (undo-tree-id57036 . -12) (undo-tree-id57037 . -12) (undo-tree-id57038 . -12) (undo-tree-id57039 . -12) (undo-tree-id57040 . -12) (undo-tree-id57041 . -12) (undo-tree-id57042 . -12) (undo-tree-id57043 . -12) (undo-tree-id57044 . -12) (undo-tree-id57045 . -12) (undo-tree-id57046 . -12) (undo-tree-id57047 . -12) (undo-tree-id57048 . -12) (undo-tree-id57049 . -12) (undo-tree-id57050 . -12) (undo-tree-id57051 . -12) (undo-tree-id57052 . -12) (undo-tree-id57053 . -12) (undo-tree-id57054 . -12) (undo-tree-id57055 . -12) (undo-tree-id57056 . -12) (undo-tree-id57057 . -12) (undo-tree-id57058 . -12) (undo-tree-id57059 . -12) (undo-tree-id57060 . -12) (undo-tree-id57061 . -12) (undo-tree-id57062 . -12) (undo-tree-id57063 . -12) (undo-tree-id57064 . -12) (undo-tree-id57065 . -12) (undo-tree-id57066 . -12) (undo-tree-id57067 . -12) (undo-tree-id57068 . -12) (undo-tree-id57069 . -12) (undo-tree-id57070 . -12) (undo-tree-id57071 . -12) (undo-tree-id57072 . -12) (undo-tree-id57073 . -12) (undo-tree-id57074 . -12) (undo-tree-id57075 . -12) (undo-tree-id57076 . -12) (undo-tree-id57077 . -12) (undo-tree-id57078 . -12) (undo-tree-id57079 . -12) (undo-tree-id57080 . -12) (undo-tree-id57081 . -15) (t 25774 62145 875078 763000)) nil (25774 62164 467099 958000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4976) (undo-tree-id57020 . 2) (undo-tree-id57021 . -1) (undo-tree-id57022 . -2)) nil (25774 62164 467055 695000) 0 nil])
([nil nil ((4976 . 4977) (#("s" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 4976)) nil (25774 62164 467050 999000) 0 nil])
([nil nil ((4974 . 6253) (#("- First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)

- Self-attention mechanisms are composed of three stages." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 18 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 18 19 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 19 89 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 89 91 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 91 111 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 111 115 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 115 116 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 116 134 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 134 136 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 136 137 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 137 210 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 210 216 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 216 217 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 217 284 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 284 313 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 313 314 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 314 354 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 354 355 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 355 442 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 442 444 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 444 461 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 461 462 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 462 570 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 570 571 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 571 582 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 582 583 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 583 585 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 585 586 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 586 610 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 610 611 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 611 615 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 615 616 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 616 717 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 717 722 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 722 723 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 723 820 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 820 821 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 821 925 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 925 926 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 926 1035 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1035 1036 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1036 1075 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1075 1076 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1076 1175 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1175 1176 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1176 1203 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1203 1204 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1204 1205 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1205 1206 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1206 1219 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1219 1220 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1220 1221 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1221 1222 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1222 1223 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1223 1224 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1224 1273 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1273 1274 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1274 1275 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1275 1276 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1276 1277 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1277 1278 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1278 1279 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 4974) (undo-tree-id56591 . 55) (undo-tree-id56592 . -1224) (undo-tree-id56593 . -1224) (undo-tree-id56594 . -1224) (undo-tree-id56595 . -1224) (undo-tree-id56596 . 54) (undo-tree-id56597 . -1224) (undo-tree-id56598 . -1224) (undo-tree-id56599 . -1224) (undo-tree-id56600 . -1224) (undo-tree-id56601 . -1224) (undo-tree-id56602 . -1224) (undo-tree-id56603 . -1224) (undo-tree-id56604 . -1224) (undo-tree-id56605 . -1224) (undo-tree-id56606 . -1224) (undo-tree-id56607 . -1224) (undo-tree-id56608 . -1224) (undo-tree-id56609 . -1224) (undo-tree-id56610 . -1224) (undo-tree-id56611 . -1224) (undo-tree-id56612 . -1224) (undo-tree-id56613 . -1224) (undo-tree-id56614 . -1224) (undo-tree-id56615 . -1224) (undo-tree-id56616 . -1224) (undo-tree-id56617 . -1224) (undo-tree-id56618 . -1224) (undo-tree-id56619 . -1224) (undo-tree-id56620 . -1224) (undo-tree-id56621 . -1224) (undo-tree-id56622 . -1224) (undo-tree-id56623 . -1224) (undo-tree-id56624 . -1224) (undo-tree-id56625 . -1224) (undo-tree-id56626 . -1224) (undo-tree-id56627 . -1224) (undo-tree-id56628 . -1224) (undo-tree-id56629 . -1224) (undo-tree-id56630 . -1224) (undo-tree-id56631 . -1279) (undo-tree-id56632 . -1224) (undo-tree-id56633 . -1224) (undo-tree-id56634 . -1224) (undo-tree-id56635 . -1224) (undo-tree-id56636 . -1224) (undo-tree-id56637 . -1224) (undo-tree-id56638 . -1224) (undo-tree-id56639 . -1224) (undo-tree-id56640 . -1224) (undo-tree-id56641 . -1224) (undo-tree-id56642 . -1224) (undo-tree-id56643 . -1224) (undo-tree-id56644 . -1224) (undo-tree-id56645 . -1224) (undo-tree-id56646 . -1224) (undo-tree-id56647 . -1224) (undo-tree-id56648 . -1224) (undo-tree-id56649 . -1224) (undo-tree-id56650 . -1224) (undo-tree-id56651 . -1224) (undo-tree-id56652 . -1224) (undo-tree-id56653 . -1224) (undo-tree-id56654 . -1224) (undo-tree-id56655 . -1224) (undo-tree-id56656 . -1224) (undo-tree-id56657 . -1224) (undo-tree-id56658 . -1224) (undo-tree-id56659 . -1224) (undo-tree-id56660 . -1224) (undo-tree-id56661 . -1224) (undo-tree-id56662 . -1224) (undo-tree-id56663 . -1224) (undo-tree-id56664 . -1224) (undo-tree-id56665 . -1224) (undo-tree-id56666 . -1224) (undo-tree-id56667 . -1224) (undo-tree-id56668 . -1224) (undo-tree-id56669 . -1224) (undo-tree-id56670 . -1224) (undo-tree-id56671 . -1224) (undo-tree-id56672 . -1224) (undo-tree-id56673 . -1224) (undo-tree-id56674 . -1224) (undo-tree-id56675 . -1224) (undo-tree-id56676 . -1224) (undo-tree-id56677 . -1224) (undo-tree-id56678 . -1224) (undo-tree-id56679 . -1224) (undo-tree-id56680 . -1224) (undo-tree-id56681 . -1224) (undo-tree-id56682 . -1224) (undo-tree-id56683 . -1224) (undo-tree-id56684 . -1224) (undo-tree-id56685 . -1224) (undo-tree-id56686 . -1224) (undo-tree-id56687 . -1224) (undo-tree-id56688 . -1224) (undo-tree-id56689 . -1224) (undo-tree-id56690 . -1224) (undo-tree-id56691 . -1224) (undo-tree-id56692 . -1224) (undo-tree-id56693 . -1224) (undo-tree-id56694 . -1224) (undo-tree-id56695 . -1224) (undo-tree-id56696 . -1224) (undo-tree-id56697 . -1224) (undo-tree-id56698 . -1224) (undo-tree-id56699 . -1224) (undo-tree-id56700 . -1224) (undo-tree-id56701 . -1224) (undo-tree-id56702 . -1224) (undo-tree-id56703 . -1224) (undo-tree-id56704 . -1224) (undo-tree-id56705 . -1224) (undo-tree-id56706 . -1224) (undo-tree-id56707 . -1224) (undo-tree-id56708 . -1224) (undo-tree-id56709 . -1224) (undo-tree-id56710 . -1224) (undo-tree-id56711 . -1224) (undo-tree-id56712 . -1224) (undo-tree-id56713 . -1224) (undo-tree-id56714 . -1224) (undo-tree-id56715 . -1224) (undo-tree-id56716 . -1224) (undo-tree-id56717 . -1224) (undo-tree-id56718 . -1224) (undo-tree-id56719 . -1224) (undo-tree-id56720 . -1224) (undo-tree-id56721 . -1224) (undo-tree-id56722 . -1224) (undo-tree-id56723 . -1224) (undo-tree-id56724 . -1224) (undo-tree-id56725 . -1224) (undo-tree-id56726 . -1224) (undo-tree-id56727 . -1224) (undo-tree-id56728 . -1224) (undo-tree-id56729 . -1224) (undo-tree-id56730 . -1224) (undo-tree-id56731 . -1224) (undo-tree-id56732 . -1224) (undo-tree-id56733 . -1224) (undo-tree-id56734 . -1224) (undo-tree-id56735 . -1224) (undo-tree-id56736 . -1224) (undo-tree-id56737 . -1224) (undo-tree-id56738 . -1224) (undo-tree-id56739 . -1224) (undo-tree-id56740 . -1224) (undo-tree-id56741 . -1224) (undo-tree-id56742 . -1224) (undo-tree-id56743 . -1224) (undo-tree-id56744 . -1224) (undo-tree-id56745 . -1224) (undo-tree-id56746 . -1224) (undo-tree-id56747 . -1224) (undo-tree-id56748 . -1224) (undo-tree-id56749 . -1224) (undo-tree-id56750 . -1224) (undo-tree-id56751 . -1224) (undo-tree-id56752 . -1224) (undo-tree-id56753 . -1224) (undo-tree-id56754 . -1224) (undo-tree-id56755 . -1224) (undo-tree-id56756 . -1224) (undo-tree-id56757 . -1224) (undo-tree-id56758 . -1224) (undo-tree-id56759 . -1224) (undo-tree-id56760 . -1224) (undo-tree-id56761 . -1224) (undo-tree-id56762 . -1224) (undo-tree-id56763 . -1224) (undo-tree-id56764 . -1224) (undo-tree-id56765 . -1224) (undo-tree-id56766 . -1224) (undo-tree-id56767 . -1224) (undo-tree-id56768 . -1224) (undo-tree-id56769 . -1224) (undo-tree-id56770 . -1224) (undo-tree-id56771 . -1224) (undo-tree-id56772 . -1224) (undo-tree-id56773 . -1224) (undo-tree-id56774 . -1224) (undo-tree-id56775 . -1224) (undo-tree-id56776 . -1224) (undo-tree-id56777 . -1224) (undo-tree-id56778 . -1224) (undo-tree-id56779 . -1224) (undo-tree-id56780 . -1224) (undo-tree-id56781 . -1224) (undo-tree-id56782 . -1224) (undo-tree-id56783 . -1224) (undo-tree-id56784 . -1224) (undo-tree-id56785 . -1224) (undo-tree-id56786 . -1224) (undo-tree-id56787 . -1224) (undo-tree-id56788 . -1224) (undo-tree-id56789 . -1224) (undo-tree-id56790 . -1224) (undo-tree-id56791 . -1224) (undo-tree-id56792 . -1224) (undo-tree-id56793 . -1224) (undo-tree-id56794 . -1224) (undo-tree-id56795 . -1224) (undo-tree-id56796 . -1224) (undo-tree-id56797 . -1224) (undo-tree-id56798 . -1224) (undo-tree-id56799 . -1224) (undo-tree-id56800 . -1224) (undo-tree-id56801 . -1224) (undo-tree-id56802 . -1224) (undo-tree-id56803 . -1224) (undo-tree-id56804 . -1224) (undo-tree-id56805 . -1224) (undo-tree-id56806 . -1224) (undo-tree-id56807 . -1224) (undo-tree-id56808 . -1224) (undo-tree-id56809 . -1224) (undo-tree-id56810 . -1224) (undo-tree-id56811 . -1224) (undo-tree-id56812 . -1224) (undo-tree-id56813 . -1224) (undo-tree-id56814 . -1224) (undo-tree-id56815 . -1224) (undo-tree-id56816 . -1224) (undo-tree-id56817 . -1224) (undo-tree-id56818 . -1224) (undo-tree-id56819 . -1224) (undo-tree-id56820 . -1224) (undo-tree-id56821 . -1224) (undo-tree-id56822 . -1224) (undo-tree-id56823 . -1224) (undo-tree-id56824 . -1224) (undo-tree-id56825 . -1227) (undo-tree-id56826 . -1227) (undo-tree-id56827 . -1227) (undo-tree-id56828 . -1227) (undo-tree-id56829 . -1227) (undo-tree-id56830 . -1227) (undo-tree-id56831 . -1227) (undo-tree-id56832 . -1227) (undo-tree-id56833 . -1227) (undo-tree-id56834 . -1227) (undo-tree-id56835 . -1227) (undo-tree-id56836 . -1227) (undo-tree-id56837 . -1227) (undo-tree-id56838 . -1227) (undo-tree-id56839 . -1227) (undo-tree-id56840 . -1227) (undo-tree-id56841 . -1228) (undo-tree-id56842 . -1228) (undo-tree-id56843 . -1228) (undo-tree-id56844 . -1228) (undo-tree-id56845 . -1228) (undo-tree-id56846 . -1228) (undo-tree-id56847 . -1228) (undo-tree-id56848 . -1228) (undo-tree-id56849 . -1228) (undo-tree-id56850 . -1228) (undo-tree-id56851 . -1228) (undo-tree-id56852 . -1228) (undo-tree-id56853 . -1228) (undo-tree-id56854 . -1228) (undo-tree-id56855 . -1228) (undo-tree-id56856 . -1228) (undo-tree-id56857 . -1237) (undo-tree-id56858 . -1237) (undo-tree-id56859 . -1237) (undo-tree-id56860 . -1237) (undo-tree-id56861 . -1237) (undo-tree-id56862 . -1237) (undo-tree-id56863 . -1237) (undo-tree-id56864 . -1237) (undo-tree-id56865 . -1237) (undo-tree-id56866 . -1237) (undo-tree-id56867 . -1237) (undo-tree-id56868 . -1237) (undo-tree-id56869 . -1237) (undo-tree-id56870 . -1237) (undo-tree-id56871 . -1237) (undo-tree-id56872 . -1237) (undo-tree-id56873 . -1248) (undo-tree-id56874 . -1248) (undo-tree-id56875 . -1248) (undo-tree-id56876 . -1248) (undo-tree-id56877 . -1248) (undo-tree-id56878 . -1248) (undo-tree-id56879 . -1248) (undo-tree-id56880 . -1248) (undo-tree-id56881 . -1248) (undo-tree-id56882 . -1248) (undo-tree-id56883 . -1248) (undo-tree-id56884 . -1248) (undo-tree-id56885 . -1248) (undo-tree-id56886 . -1248) (undo-tree-id56887 . -1248) (undo-tree-id56888 . -1248) (undo-tree-id56889 . -1252) (undo-tree-id56890 . -1252) (undo-tree-id56891 . -1252) (undo-tree-id56892 . -1252) (undo-tree-id56893 . -1252) (undo-tree-id56894 . -1252) (undo-tree-id56895 . -1252) (undo-tree-id56896 . -1252) (undo-tree-id56897 . -1252) (undo-tree-id56898 . -1252) (undo-tree-id56899 . -1252) (undo-tree-id56900 . -1252) (undo-tree-id56901 . -1252) (undo-tree-id56902 . -1252) (undo-tree-id56903 . -1252) (undo-tree-id56904 . -1252) (undo-tree-id56905 . -1261) (undo-tree-id56906 . -1261) (undo-tree-id56907 . -1261) (undo-tree-id56908 . -1261) (undo-tree-id56909 . -1261) (undo-tree-id56910 . -1261) (undo-tree-id56911 . -1261) (undo-tree-id56912 . -1261) (undo-tree-id56913 . -1261) (undo-tree-id56914 . -1261) (undo-tree-id56915 . -1261) (undo-tree-id56916 . -1261) (undo-tree-id56917 . -1261) (undo-tree-id56918 . -1261) (undo-tree-id56919 . -1261) (undo-tree-id56920 . -1261) (undo-tree-id56921 . -1264) (undo-tree-id56922 . -1264) (undo-tree-id56923 . -1264) (undo-tree-id56924 . -1264) (undo-tree-id56925 . -1264) (undo-tree-id56926 . -1264) (undo-tree-id56927 . -1264) (undo-tree-id56928 . -1264) (undo-tree-id56929 . -1264) (undo-tree-id56930 . -1264) (undo-tree-id56931 . -1264) (undo-tree-id56932 . -1264) (undo-tree-id56933 . -1264) (undo-tree-id56934 . -1264) (undo-tree-id56935 . -1264) (undo-tree-id56936 . -1264) (undo-tree-id56937 . -1270) (undo-tree-id56938 . -1270) (undo-tree-id56939 . -1270) (undo-tree-id56940 . -1270) (undo-tree-id56941 . -1270) (undo-tree-id56942 . -1270) (undo-tree-id56943 . -1270) (undo-tree-id56944 . -1270) (undo-tree-id56945 . -1270) (undo-tree-id56946 . -1270) (undo-tree-id56947 . -1270) (undo-tree-id56948 . -1270) (undo-tree-id56949 . -1270) (undo-tree-id56950 . -1270) (undo-tree-id56951 . -1270) (undo-tree-id56952 . -1270) (undo-tree-id56953 . -1270) (undo-tree-id56954 . -1270) (undo-tree-id56955 . -1270) (undo-tree-id56956 . -1270) (undo-tree-id56957 . -1270) (undo-tree-id56958 . -1277) (undo-tree-id56959 . -1277) (undo-tree-id56960 . -1277) (undo-tree-id56961 . -1277) (undo-tree-id56962 . -1277) (undo-tree-id56963 . -1277) (undo-tree-id56964 . -1277) (undo-tree-id56965 . -1277) (undo-tree-id56966 . -1277) (undo-tree-id56967 . -1277) (undo-tree-id56968 . -1277) (undo-tree-id56969 . -1277) (undo-tree-id56970 . -1277) (undo-tree-id56971 . -1277) (undo-tree-id56972 . -1277) (undo-tree-id56973 . -1277) (undo-tree-id56974 . -1278) (undo-tree-id56975 . -1278) (undo-tree-id56976 . -1278) (undo-tree-id56977 . -1278) (undo-tree-id56978 . -1278) (undo-tree-id56979 . -1278) (undo-tree-id56980 . -1278) (undo-tree-id56981 . -1278) (undo-tree-id56982 . -1278) (undo-tree-id56983 . -1278) (undo-tree-id56984 . -1278) (undo-tree-id56985 . -1278) (undo-tree-id56986 . -1278) (undo-tree-id56987 . -1278) (undo-tree-id56988 . -1278) (undo-tree-id56989 . -1278) (undo-tree-id56990 . -1278) (undo-tree-id56991 . -1278) (undo-tree-id56992 . -1278) (undo-tree-id56993 . -1278) (undo-tree-id56994 . -1278) (undo-tree-id56995 . -1279) (undo-tree-id56996 . -1279) (undo-tree-id56997 . -1279) (undo-tree-id56998 . -1279) (undo-tree-id56999 . -1279) (undo-tree-id57000 . -1279) (undo-tree-id57001 . -1279) (undo-tree-id57002 . -1279) (undo-tree-id57003 . -1279) (undo-tree-id57004 . -1279) (undo-tree-id57005 . -1279) (undo-tree-id57006 . -1279) (undo-tree-id57007 . -1279) (undo-tree-id57008 . -1279) (undo-tree-id57009 . -1279) (undo-tree-id57010 . -1279) (undo-tree-id57011 . -1279) (undo-tree-id57012 . -1279) (undo-tree-id57013 . -1279) (undo-tree-id57014 . -1279) (undo-tree-id57015 . -1279) (undo-tree-id57016 . -1279) (undo-tree-id57017 . -1279) (undo-tree-id57018 . -1279) (undo-tree-id57019 . -1222) (4974 . 6196) (#(" First, we derive importance weights based on the similarity between the current element and all other elements in the sequence. Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 17 18 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 18 88 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 88 90 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 90 110 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 110 114 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 114 115 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 115 133 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 133 135 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 135 136 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 136 209 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 209 215 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 215 216 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 216 283 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 283 312 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 312 313 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 313 353 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 353 354 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 354 441 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 441 443 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 443 460 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 460 461 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 461 569 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 569 570 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 570 581 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 581 582 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 582 584 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 584 585 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 585 609 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 609 610 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 610 614 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 614 615 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 615 716 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 716 721 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 721 722 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 722 819 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 819 820 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 820 924 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 924 925 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 925 1034 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1034 1035 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1035 1074 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1074 1075 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1075 1174 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1174 1175 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1175 1202 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1202 1203 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1203 1204 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1204 1205 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1205 1218 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1218 1219 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 5031)) nil (25774 62164 467024 218000) 0 nil])
([nil nil ((5033 . 6256) (#("- Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)

- First, we derive importance weights based on the similarity between the current element and all other elements in the sequence." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 6 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 6 8 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 8 9 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 9 82 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 82 88 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 88 89 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 89 156 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 156 185 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 185 186 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 186 226 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 226 227 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 227 313 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 313 314 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 314 316 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 316 333 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 333 334 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 334 442 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 442 443 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 443 454 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 454 455 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 455 457 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 457 458 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 458 482 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 482 483 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 483 487 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 487 488 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 488 589 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 589 594 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 594 595 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 595 692 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 692 693 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 693 797 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 797 798 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 798 907 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 907 908 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 908 947 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 947 948 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 948 1047 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1047 1048 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1048 1075 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1075 1076 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1076 1077 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1077 1078 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1078 1091 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1091 1092 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1092 1093 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1093 1094 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1094 1095 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1095 1096 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1096 1112 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1112 1113 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1113 1183 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1183 1185 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1185 1205 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1205 1209 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1209 1210 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1210 1223 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 5033) (undo-tree-id57082 . 127) (undo-tree-id57083 . -1095) (undo-tree-id57084 . -1223) (undo-tree-id57085 . -1095) (undo-tree-id57086 . -1095) (undo-tree-id57087 . -1095) (undo-tree-id57088 . -1095) (undo-tree-id57089 . -1095) (undo-tree-id57090 . -1095) (undo-tree-id57091 . -1095) (undo-tree-id57092 . -1095) (undo-tree-id57093 . -1095) (undo-tree-id57094 . -1095) (undo-tree-id57095 . -1095) (undo-tree-id57096 . -1095) (undo-tree-id57097 . -1095) (undo-tree-id57098 . -1095) (undo-tree-id57099 . -1095) (undo-tree-id57100 . -1095) (undo-tree-id57101 . -1095) (undo-tree-id57102 . -1095) (undo-tree-id57103 . -1095) (undo-tree-id57104 . -1095) (undo-tree-id57105 . -1095) (undo-tree-id57106 . -1095) (undo-tree-id57107 . -1095) (undo-tree-id57108 . -1095) (undo-tree-id57109 . -1095) (undo-tree-id57110 . -1095) (undo-tree-id57111 . -1095) (undo-tree-id57112 . -1095) (undo-tree-id57113 . -1095) (undo-tree-id57114 . -1095) (undo-tree-id57115 . -1095) (undo-tree-id57116 . -1095) (undo-tree-id57117 . -1095) (undo-tree-id57118 . -1095) (undo-tree-id57119 . -1095) (undo-tree-id57120 . -1095) (undo-tree-id57121 . -1095) (undo-tree-id57122 . -1095) (undo-tree-id57123 . -1095) (undo-tree-id57124 . -1095) (undo-tree-id57125 . -1095) (undo-tree-id57126 . -1095) (undo-tree-id57127 . -1095) (undo-tree-id57128 . -1095) (undo-tree-id57129 . -1095) (undo-tree-id57130 . -1095) (undo-tree-id57131 . -1095) (undo-tree-id57132 . -1095) (undo-tree-id57133 . -1095) (undo-tree-id57134 . -1095) (undo-tree-id57135 . -1156) (undo-tree-id57136 . -1156) (undo-tree-id57137 . -1156) (undo-tree-id57138 . -1156) (undo-tree-id57139 . -1156) (undo-tree-id57140 . -1156) (undo-tree-id57141 . -1156) (undo-tree-id57142 . -1156) (undo-tree-id57143 . -1156) (undo-tree-id57144 . -1156) (undo-tree-id57145 . -1156) (undo-tree-id57146 . -1214) (undo-tree-id57147 . -1214) (undo-tree-id57148 . -1214) (undo-tree-id57149 . -1214) (undo-tree-id57150 . -1214) (undo-tree-id57151 . -1214) (undo-tree-id57152 . -1214) (undo-tree-id57153 . -1214) (undo-tree-id57154 . -1214) (undo-tree-id57155 . -1214) (undo-tree-id57156 . -1214) (undo-tree-id57157 . -1223) (undo-tree-id57158 . -1223) (undo-tree-id57159 . -1223) (undo-tree-id57160 . -1223) (undo-tree-id57161 . -1223) (undo-tree-id57162 . -1223) (undo-tree-id57163 . -1223) (undo-tree-id57164 . -1223) (undo-tree-id57165 . -1223) (undo-tree-id57166 . -1223) (undo-tree-id57167 . -1223) (undo-tree-id57168 . -1223) (undo-tree-id57169 . -1223) (undo-tree-id57170 . -1223) (undo-tree-id57171 . -1223) (undo-tree-id57172 . -1223) (undo-tree-id57173 . -1223) (undo-tree-id57174 . -1223) (undo-tree-id57175 . -1223) (undo-tree-id57176 . -1223) (undo-tree-id57177 . -1223) (undo-tree-id57178 . -1223) (undo-tree-id57179 . -1223) (undo-tree-id57180 . -1223) (undo-tree-id57181 . -1223) (undo-tree-id57182 . -1223) (undo-tree-id57183 . -1223) (undo-tree-id57184 . -1223) (undo-tree-id57185 . -1223) (undo-tree-id57186 . -1223) (undo-tree-id57187 . -1223) (undo-tree-id57188 . -1223) (undo-tree-id57189 . -1223) (undo-tree-id57190 . -1223) (undo-tree-id57191 . -1223) (undo-tree-id57192 . -1223) (undo-tree-id57193 . -1223) (undo-tree-id57194 . -1223) (undo-tree-id57195 . -1223) (undo-tree-id57196 . -1223) (undo-tree-id57197 . -1223) (undo-tree-id57198 . -1223) (undo-tree-id57199 . -1223) (undo-tree-id57200 . -1223) (undo-tree-id57201 . -1223) (undo-tree-id57202 . -1223) (undo-tree-id57203 . -1223) (undo-tree-id57204 . -1223) (undo-tree-id57205 . -1223) (undo-tree-id57206 . -1223) (undo-tree-id57207 . -1223) (undo-tree-id57208 . -1223) (undo-tree-id57209 . -1223) (undo-tree-id57210 . -1223) (undo-tree-id57211 . -1223) (undo-tree-id57212 . -1223) (undo-tree-id57213 . -1223) (undo-tree-id57214 . -1223) (undo-tree-id57215 . -1223) (undo-tree-id57216 . -1223) (undo-tree-id57217 . -1223) (undo-tree-id57218 . -1223) (undo-tree-id57219 . -1223) (undo-tree-id57220 . -1223) (undo-tree-id57221 . -1223) (undo-tree-id57222 . -1223) (undo-tree-id57223 . -1223) (undo-tree-id57224 . -1223) (undo-tree-id57225 . -1223) (undo-tree-id57226 . -1223) (undo-tree-id57227 . -1223) (undo-tree-id57228 . -1223) (undo-tree-id57229 . -1223) (undo-tree-id57230 . -1223) (undo-tree-id57231 . -1223) (undo-tree-id57232 . -1223) (undo-tree-id57233 . -1223) (undo-tree-id57234 . -1223) (undo-tree-id57235 . -1223) (undo-tree-id57236 . -1223) (undo-tree-id57237 . -1223) (undo-tree-id57238 . -1223) (undo-tree-id57239 . -1223) (undo-tree-id57240 . -1223) (undo-tree-id57241 . -1223) (undo-tree-id57242 . -1223) (undo-tree-id57243 . -1223) (undo-tree-id57244 . -1223) (undo-tree-id57245 . -1223) (undo-tree-id57246 . -1223) (undo-tree-id57247 . -1223) (undo-tree-id57248 . -1223) (undo-tree-id57249 . -1223) (undo-tree-id57250 . -1223) (undo-tree-id57251 . -1223) (undo-tree-id57252 . -1223) (undo-tree-id57253 . -1223) (undo-tree-id57254 . -1223) (undo-tree-id57255 . -1223) (undo-tree-id57256 . -1223) (undo-tree-id57257 . -1223) (undo-tree-id57258 . -1223) (undo-tree-id57259 . -1223) (undo-tree-id57260 . -1223) (undo-tree-id57261 . -1223) (undo-tree-id57262 . -1223) (undo-tree-id57263 . -1223) (undo-tree-id57264 . -1223) (undo-tree-id57265 . -1223) (undo-tree-id57266 . -1223) (undo-tree-id57267 . -1223) (undo-tree-id57268 . -1223) (undo-tree-id57269 . -1223) (undo-tree-id57270 . -1223) (undo-tree-id57271 . -1223) (undo-tree-id57272 . -1223) (undo-tree-id57273 . -1223) (undo-tree-id57274 . -1223) (undo-tree-id57275 . -1223) (undo-tree-id57276 . -1223) (undo-tree-id57277 . -1223) (undo-tree-id57278 . -1223) (undo-tree-id57279 . -1223) (undo-tree-id57280 . -1223) (undo-tree-id57281 . -1223) (undo-tree-id57282 . -1223) (undo-tree-id57283 . -1223) (undo-tree-id57284 . -1223) (undo-tree-id57285 . -1223) (undo-tree-id57286 . -1223) (undo-tree-id57287 . -1223) (undo-tree-id57288 . -1223) (undo-tree-id57289 . -1223) (undo-tree-id57290 . -1223) (undo-tree-id57291 . -1223) (undo-tree-id57292 . -1223) (undo-tree-id57293 . -1223) (undo-tree-id57294 . -1223) (undo-tree-id57295 . -1223) (undo-tree-id57296 . -1223) (undo-tree-id57297 . -1223) (undo-tree-id57298 . -1223) (undo-tree-id57299 . -1223) (undo-tree-id57300 . -1223) (undo-tree-id57301 . -1223) (undo-tree-id57302 . -1223) (undo-tree-id57303 . -1223) (undo-tree-id57304 . -1223) (undo-tree-id57305 . -1223) (undo-tree-id57306 . -1223) (undo-tree-id57307 . -1223) (undo-tree-id57308 . -1223) (undo-tree-id57309 . -1223) (undo-tree-id57310 . -1223) (undo-tree-id57311 . -1223) (undo-tree-id57312 . -1223) (undo-tree-id57313 . -1223) (undo-tree-id57314 . -1223) (undo-tree-id57315 . -1223) (undo-tree-id57316 . -1223) (undo-tree-id57317 . -1223) (undo-tree-id57318 . -1223) (undo-tree-id57319 . -1223) (undo-tree-id57320 . -1223) (undo-tree-id57321 . -1223) (undo-tree-id57322 . -1223) (undo-tree-id57323 . -1223) (undo-tree-id57324 . -1223) (undo-tree-id57325 . -1223) (undo-tree-id57326 . -1223) (undo-tree-id57327 . -1223) (undo-tree-id57328 . -1223) (undo-tree-id57329 . -1223) (undo-tree-id57330 . -1223) (undo-tree-id57331 . -1223) (undo-tree-id57332 . -1223) (undo-tree-id57333 . -1223) (undo-tree-id57334 . -1223) (undo-tree-id57335 . -1223) (undo-tree-id57336 . -1223) (undo-tree-id57337 . -1223) (undo-tree-id57338 . -1223) (undo-tree-id57339 . -1223) (undo-tree-id57340 . -1223) (undo-tree-id57341 . -1223) (undo-tree-id57342 . -1223) (undo-tree-id57343 . -1223) (undo-tree-id57344 . -1223) (undo-tree-id57345 . -1223) (undo-tree-id57346 . -1223) (undo-tree-id57347 . -1223) (undo-tree-id57348 . -1223) (undo-tree-id57349 . -1214) (undo-tree-id57350 . -1214) (undo-tree-id57351 . -1214) (undo-tree-id57352 . -1214) (undo-tree-id57353 . -1214) (undo-tree-id57354 . -1214) (undo-tree-id57355 . -1214) (undo-tree-id57356 . -1214) (undo-tree-id57357 . -1214) (undo-tree-id57358 . -1214) (undo-tree-id57359 . -1214) (undo-tree-id57360 . -1156) (undo-tree-id57361 . -1156) (undo-tree-id57362 . -1156) (undo-tree-id57363 . -1156) (undo-tree-id57364 . -1156) (undo-tree-id57365 . -1156) (undo-tree-id57366 . -1156) (undo-tree-id57367 . -1156) (undo-tree-id57368 . -1156) (undo-tree-id57369 . -1156) (undo-tree-id57370 . -1156) (undo-tree-id57371 . -1095) (undo-tree-id57372 . -1095) (undo-tree-id57373 . -1095) (undo-tree-id57374 . -1095) (undo-tree-id57375 . -1095) (undo-tree-id57376 . -1095) (undo-tree-id57377 . -1095) (undo-tree-id57378 . -1095) (undo-tree-id57379 . -1095) (undo-tree-id57380 . -1095) (undo-tree-id57381 . -1095) (undo-tree-id57382 . -1095) (undo-tree-id57383 . -1095) (undo-tree-id57384 . -1095) (undo-tree-id57385 . -1095) (undo-tree-id57386 . -1095) (undo-tree-id57387 . -1095) (undo-tree-id57388 . -1095) (undo-tree-id57389 . -1095) (undo-tree-id57390 . -1095) (undo-tree-id57391 . -1095) (undo-tree-id57392 . -1100) (undo-tree-id57393 . -1100) (undo-tree-id57394 . -1100) (undo-tree-id57395 . -1100) (undo-tree-id57396 . -1100) (undo-tree-id57397 . -1100) (undo-tree-id57398 . -1100) (undo-tree-id57399 . -1100) (undo-tree-id57400 . -1100) (undo-tree-id57401 . -1100) (undo-tree-id57402 . -1100) (undo-tree-id57403 . -1100) (undo-tree-id57404 . -1100) (undo-tree-id57405 . -1100) (undo-tree-id57406 . -1100) (undo-tree-id57407 . -1100) (undo-tree-id57408 . -1100) (undo-tree-id57409 . -1100) (undo-tree-id57410 . -1100) (undo-tree-id57411 . -1100) (undo-tree-id57412 . -1100) (undo-tree-id57413 . -1100) (undo-tree-id57414 . -1100) (undo-tree-id57415 . -1100) (undo-tree-id57416 . -1100) (undo-tree-id57417 . -1100) (undo-tree-id57418 . -1100) (undo-tree-id57419 . -1100) (undo-tree-id57420 . -1100) (undo-tree-id57421 . -1100) (undo-tree-id57422 . -1100) (undo-tree-id57423 . -1100) (undo-tree-id57424 . -1100) (undo-tree-id57425 . -1100) (undo-tree-id57426 . -1100) (undo-tree-id57427 . -1100) (undo-tree-id57428 . -1100) (undo-tree-id57429 . -1100) (undo-tree-id57430 . -1100) (undo-tree-id57431 . -1100) (undo-tree-id57432 . -1100) (undo-tree-id57433 . -1100) (undo-tree-id57434 . -1100) (undo-tree-id57435 . -1100) (undo-tree-id57436 . -1100) (undo-tree-id57437 . -1100) (undo-tree-id57438 . -1222) (undo-tree-id57439 . -1222) (undo-tree-id57440 . -1222) (undo-tree-id57441 . -1222) (undo-tree-id57442 . -1222) (undo-tree-id57443 . -1222) (undo-tree-id57444 . -1222) (undo-tree-id57445 . -1222) (undo-tree-id57446 . -1222) (undo-tree-id57447 . -1222) (undo-tree-id57448 . -1222) (undo-tree-id57449 . -1222) (undo-tree-id57450 . -1222) (undo-tree-id57451 . -1222) (undo-tree-id57452 . -1222) (undo-tree-id57453 . -1222) (undo-tree-id57454 . -1223) (undo-tree-id57455 . -1223) (undo-tree-id57456 . -1223) (undo-tree-id57457 . -1223) (undo-tree-id57458 . -1223) (undo-tree-id57459 . -1223) (undo-tree-id57460 . -1223) (undo-tree-id57461 . -1223) (undo-tree-id57462 . -1223) (undo-tree-id57463 . -1223) (undo-tree-id57464 . -1223) (undo-tree-id57465 . -1223) (undo-tree-id57466 . -1223) (undo-tree-id57467 . -1223) (undo-tree-id57468 . -1223) (undo-tree-id57469 . -1223) (undo-tree-id57470 . -1223) (undo-tree-id57471 . -1223) (undo-tree-id57472 . -1223) (undo-tree-id57473 . -1223) (undo-tree-id57474 . -1223) (undo-tree-id57475 . -1223) (undo-tree-id57476 . -1223) (undo-tree-id57477 . -1223) (undo-tree-id57478 . -1094) (5033 . 6127) (#(" Second, we normalize the weights, which usually involves the use of the already famil- iar softmax function. Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 5 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 7 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 8 81 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 81 87 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 87 88 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 88 155 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 155 184 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 184 185 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 185 225 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 225 226 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 226 312 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 312 313 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 313 315 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 315 332 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 332 333 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 333 441 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 441 442 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 442 453 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 453 454 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 454 456 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 456 457 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 457 481 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 481 482 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 482 486 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 486 487 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 487 588 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 588 593 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 593 594 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 594 691 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 691 692 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 692 796 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 796 797 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 797 906 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 906 907 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 907 946 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 946 947 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 947 1046 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1046 1047 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1047 1074 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1074 1075 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1075 1076 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1076 1077 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1077 1090 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1090 1091 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 5162) (undo-tree-id57479 . -49) (undo-tree-id57480 . -49) (undo-tree-id57481 . -49) (undo-tree-id57482 . -49) (undo-tree-id57483 . -49) (undo-tree-id57484 . -49) (undo-tree-id57485 . -49) (undo-tree-id57486 . -49) (undo-tree-id57487 . -49) (undo-tree-id57488 . -49) (undo-tree-id57489 . -49) (undo-tree-id57490 . -49) (undo-tree-id57491 . -49) (undo-tree-id57492 . -110) (undo-tree-id57493 . -110) (undo-tree-id57494 . -110) (undo-tree-id57495 . -110) (undo-tree-id57496 . -110) (undo-tree-id57497 . -110) (undo-tree-id57498 . -110) (undo-tree-id57499 . -110) (undo-tree-id57500 . -110) (undo-tree-id57501 . -110) (undo-tree-id57502 . -110) (undo-tree-id57503 . -110) (undo-tree-id57504 . -110) (undo-tree-id57505 . -110) (undo-tree-id57506 . -110) (undo-tree-id57507 . -110) (undo-tree-id57508 . -162) (undo-tree-id57509 . -162) (undo-tree-id57510 . -162) (undo-tree-id57511 . -162) (undo-tree-id57512 . -162) (undo-tree-id57513 . -162) (undo-tree-id57514 . -162) (undo-tree-id57515 . -162) (undo-tree-id57516 . -162) (undo-tree-id57517 . -162) (undo-tree-id57518 . -162) (undo-tree-id57519 . -219) (undo-tree-id57520 . -219) (undo-tree-id57521 . -219) (undo-tree-id57522 . -219) (undo-tree-id57523 . -219) (undo-tree-id57524 . -219) (undo-tree-id57525 . -219) (undo-tree-id57526 . -219) (undo-tree-id57527 . -219) (undo-tree-id57528 . -219) (undo-tree-id57529 . -219) (undo-tree-id57530 . -283) (undo-tree-id57531 . -283) (undo-tree-id57532 . -283) (undo-tree-id57533 . -283) (undo-tree-id57534 . -283) (undo-tree-id57535 . -283) (undo-tree-id57536 . -283) (undo-tree-id57537 . -283) (undo-tree-id57538 . -283) (undo-tree-id57539 . -283) (undo-tree-id57540 . -283) (undo-tree-id57541 . -350) (undo-tree-id57542 . -350) (undo-tree-id57543 . -350) (undo-tree-id57544 . -350) (undo-tree-id57545 . -350) (undo-tree-id57546 . -350) (undo-tree-id57547 . -350) (undo-tree-id57548 . -350) (undo-tree-id57549 . -350) (undo-tree-id57550 . -350) (undo-tree-id57551 . -350) (undo-tree-id57552 . -403) (undo-tree-id57553 . -403) (undo-tree-id57554 . -403) (undo-tree-id57555 . -403) (undo-tree-id57556 . -403) (undo-tree-id57557 . -403) (undo-tree-id57558 . -403) (undo-tree-id57559 . -403) (undo-tree-id57560 . -403) (undo-tree-id57561 . -403) (undo-tree-id57562 . -403) (undo-tree-id57563 . -468) (undo-tree-id57564 . -468) (undo-tree-id57565 . -468) (undo-tree-id57566 . -468) (undo-tree-id57567 . -468) (undo-tree-id57568 . -468) (undo-tree-id57569 . -468) (undo-tree-id57570 . -468) (undo-tree-id57571 . -468) (undo-tree-id57572 . -468) (undo-tree-id57573 . -468) (undo-tree-id57574 . -468) (undo-tree-id57575 . -468) (undo-tree-id57576 . -468) (undo-tree-id57577 . -468) (undo-tree-id57578 . -468) (undo-tree-id57579 . -468) (undo-tree-id57580 . -468) (undo-tree-id57581 . -468) (undo-tree-id57582 . -468) (undo-tree-id57583 . -468) (undo-tree-id57584 . -403) (undo-tree-id57585 . -403) (undo-tree-id57586 . -403) (undo-tree-id57587 . -403) (undo-tree-id57588 . -403) (undo-tree-id57589 . -403) (undo-tree-id57590 . -403) (undo-tree-id57591 . -403) (undo-tree-id57592 . -403) (undo-tree-id57593 . -403) (undo-tree-id57594 . -403) (undo-tree-id57595 . -403) (undo-tree-id57596 . -403) (undo-tree-id57597 . -403) (undo-tree-id57598 . -403) (undo-tree-id57599 . -403) (undo-tree-id57600 . -403) (undo-tree-id57601 . -403) (undo-tree-id57602 . -403) (undo-tree-id57603 . -403) (undo-tree-id57604 . -403) (undo-tree-id57605 . 741) (undo-tree-id57606 . -351) (undo-tree-id57607 . -350) (undo-tree-id57608 . -350) (undo-tree-id57609 . -350) (undo-tree-id57610 . -350) (undo-tree-id57611 . -350) (undo-tree-id57612 . -350) (undo-tree-id57613 . -350) (undo-tree-id57614 . -350) (undo-tree-id57615 . -350) (undo-tree-id57616 . -350) (undo-tree-id57617 . -350) (undo-tree-id57618 . -283) (undo-tree-id57619 . -283) (undo-tree-id57620 . -283) (undo-tree-id57621 . -283) (undo-tree-id57622 . -283) (undo-tree-id57623 . -283) (undo-tree-id57624 . -283) (undo-tree-id57625 . -283) (undo-tree-id57626 . -283) (undo-tree-id57627 . -283) (undo-tree-id57628 . -283) (undo-tree-id57629 . -219) (undo-tree-id57630 . -219) (undo-tree-id57631 . -219) (undo-tree-id57632 . -219) (undo-tree-id57633 . -219) (undo-tree-id57634 . -219) (undo-tree-id57635 . -219) (undo-tree-id57636 . -219) (undo-tree-id57637 . -219) (undo-tree-id57638 . -219) (undo-tree-id57639 . -219) (undo-tree-id57640 . -162) (undo-tree-id57641 . -162) (undo-tree-id57642 . -162) (undo-tree-id57643 . -162) (undo-tree-id57644 . -162) (undo-tree-id57645 . -162) (undo-tree-id57646 . -162) (undo-tree-id57647 . -162) (undo-tree-id57648 . -162) (undo-tree-id57649 . -162) (undo-tree-id57650 . -162) (undo-tree-id57651 . -110) (undo-tree-id57652 . -110) (undo-tree-id57653 . -110) (undo-tree-id57654 . -110) (undo-tree-id57655 . -110) (undo-tree-id57656 . -110) (undo-tree-id57657 . -110) (undo-tree-id57658 . -110) (undo-tree-id57659 . -110) (undo-tree-id57660 . -110) (undo-tree-id57661 . -110) (undo-tree-id57662 . -49) (undo-tree-id57663 . -49) (undo-tree-id57664 . -49) (undo-tree-id57665 . -49) (undo-tree-id57666 . -49) (undo-tree-id57667 . -49) (undo-tree-id57668 . -49) (undo-tree-id57669 . -49) (undo-tree-id57670 . -49) (undo-tree-id57671 . -49) (undo-tree-id57672 . -49) (t 25774 62164 527255 319000)) nil (25774 62176 149570 912000) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5251) (undo-tree-id57675 . -1) (undo-tree-id57676 . -1) (t 25774 62176 211365 964000)) nil (25774 62183 472582 436000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 5251) (undo-tree-id57673 . -1) (undo-tree-id57674 . -1)) nil (25774 62183 472576 629000) 0 nil])
([nil nil ((5164 . 6257) (#("- Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)

- Second, we normalize the weights, which usually involves the use of the already familiar softmax function." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 47 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 47 76 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 76 77 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 77 117 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 117 118 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 118 204 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 204 205 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 205 207 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 207 224 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 224 225 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 225 260 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 260 333 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 333 334 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 334 345 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 345 346 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 346 348 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 348 349 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 349 373 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 373 374 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 374 378 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 378 379 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 379 392 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 392 393 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 393 480 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 480 485 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 485 486 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 486 583 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 583 584 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 584 688 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 688 689 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 689 798 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 798 799 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 799 838 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 838 839 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 839 938 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 938 939 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 939 966 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 966 967 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 967 968 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 968 969 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 969 982 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 982 983 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 983 984 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 984 985 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 985 986 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 986 987 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 987 991 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 991 993 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 993 994 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 994 1067 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1067 1072 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1072 1093 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 5164) (undo-tree-id57677 . 106) (undo-tree-id57678 . -1072) (undo-tree-id57679 . -1093) (undo-tree-id57680 . -1072) (undo-tree-id57681 . -1072) (undo-tree-id57682 . -1072) (undo-tree-id57683 . -1072) (undo-tree-id57684 . -1072) (undo-tree-id57685 . -1072) (undo-tree-id57686 . -1072) (undo-tree-id57687 . -1072) (undo-tree-id57688 . -1072) (undo-tree-id57689 . -1072) (undo-tree-id57690 . -1072) (undo-tree-id57691 . -1072) (undo-tree-id57692 . -1072) (undo-tree-id57693 . -1072) (undo-tree-id57694 . -1072) (undo-tree-id57695 . -1072) (undo-tree-id57696 . -1072) (undo-tree-id57697 . -1072) (undo-tree-id57698 . -1072) (undo-tree-id57699 . -1072) (undo-tree-id57700 . -1072) (undo-tree-id57701 . -1072) (undo-tree-id57702 . -1072) (undo-tree-id57703 . -1072) (undo-tree-id57704 . -1072) (undo-tree-id57705 . -1072) (undo-tree-id57706 . -1072) (undo-tree-id57707 . -1072) (undo-tree-id57708 . -1072) (undo-tree-id57709 . -1072) (undo-tree-id57710 . -1072) (undo-tree-id57711 . -1072) (undo-tree-id57712 . -1072) (undo-tree-id57713 . -1072) (undo-tree-id57714 . -1072) (undo-tree-id57715 . -1072) (undo-tree-id57716 . -1072) (undo-tree-id57717 . -1072) (undo-tree-id57718 . -1072) (undo-tree-id57719 . -1072) (undo-tree-id57720 . -1072) (undo-tree-id57721 . -1072) (undo-tree-id57722 . -1072) (undo-tree-id57723 . -1072) (undo-tree-id57724 . -1072) (undo-tree-id57725 . -1072) (undo-tree-id57726 . -1072) (undo-tree-id57727 . -1072) (undo-tree-id57728 . -1072) (undo-tree-id57729 . -1072) (undo-tree-id57730 . -1072) (undo-tree-id57731 . -1072) (undo-tree-id57732 . -1072) (undo-tree-id57733 . -1072) (undo-tree-id57734 . -1072) (undo-tree-id57735 . -1072) (undo-tree-id57736 . -1072) (undo-tree-id57737 . -1072) (undo-tree-id57738 . -1072) (undo-tree-id57739 . -1072) (undo-tree-id57740 . -1072) (undo-tree-id57741 . -1072) (undo-tree-id57742 . -1072) (undo-tree-id57743 . -1072) (undo-tree-id57744 . -1072) (undo-tree-id57745 . -1072) (undo-tree-id57746 . -1072) (undo-tree-id57747 . -1072) (undo-tree-id57748 . -1072) (undo-tree-id57749 . -1072) (undo-tree-id57750 . -1072) (undo-tree-id57751 . -1072) (undo-tree-id57752 . -1072) (undo-tree-id57753 . -1072) (undo-tree-id57754 . -1072) (undo-tree-id57755 . -1072) (undo-tree-id57756 . -1072) (undo-tree-id57757 . -1072) (undo-tree-id57758 . -1072) (undo-tree-id57759 . -1072) (undo-tree-id57760 . -1072) (undo-tree-id57761 . -1072) (undo-tree-id57762 . -1072) (undo-tree-id57763 . -1072) (undo-tree-id57764 . -1072) (undo-tree-id57765 . -1072) (undo-tree-id57766 . -1072) (undo-tree-id57767 . -1072) (undo-tree-id57768 . -1072) (undo-tree-id57769 . -1072) (undo-tree-id57770 . -1072) (undo-tree-id57771 . -1072) (undo-tree-id57772 . -1072) (undo-tree-id57773 . -1072) (undo-tree-id57774 . -1072) (undo-tree-id57775 . -1072) (undo-tree-id57776 . -1072) (undo-tree-id57777 . -1072) (undo-tree-id57778 . -1072) (undo-tree-id57779 . -1072) (undo-tree-id57780 . -1092) (undo-tree-id57781 . -1092) (undo-tree-id57782 . -1092) (undo-tree-id57783 . -1092) (undo-tree-id57784 . -1092) (undo-tree-id57785 . -1092) (undo-tree-id57786 . -1092) (undo-tree-id57787 . -1092) (undo-tree-id57788 . -1092) (undo-tree-id57789 . -1092) (undo-tree-id57790 . -1092) (undo-tree-id57791 . -1092) (undo-tree-id57792 . -1092) (undo-tree-id57793 . -1092) (undo-tree-id57794 . -1092) (undo-tree-id57795 . -1092) (undo-tree-id57796 . -1093) (undo-tree-id57797 . -1093) (undo-tree-id57798 . -1093) (undo-tree-id57799 . -1093) (undo-tree-id57800 . -1093) (undo-tree-id57801 . -1093) (undo-tree-id57802 . -1093) (undo-tree-id57803 . -1093) (undo-tree-id57804 . -1093) (undo-tree-id57805 . -1093) (undo-tree-id57806 . -1093) (undo-tree-id57807 . -1093) (undo-tree-id57808 . -1093) (undo-tree-id57809 . -1093) (undo-tree-id57810 . -1093) (undo-tree-id57811 . -1093) (undo-tree-id57812 . -1093) (undo-tree-id57813 . -1093) (undo-tree-id57814 . -1093) (undo-tree-id57815 . -1093) (undo-tree-id57816 . -1093) (undo-tree-id57817 . -1093) (undo-tree-id57818 . -1093) (undo-tree-id57819 . -1093) (undo-tree-id57820 . -985) (5164 . 6149) (#(" Third, we use these weights in combination with the corresponding sequence elements to compute the attention value. More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 46 75 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 75 76 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 76 116 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 116 117 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 117 203 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 203 204 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 204 206 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 206 223 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 223 224 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 224 259 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 259 332 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 332 333 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 333 344 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 344 345 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 345 347 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 347 348 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 348 372 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 372 373 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 373 377 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 377 378 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 378 391 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 391 392 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 392 479 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 479 484 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 484 485 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 485 582 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 582 583 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 583 687 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 687 688 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 688 797 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 797 798 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 798 837 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 837 838 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 838 937 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 937 938 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 938 965 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 965 966 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 966 967 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 967 968 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 968 981 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 981 982 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 5272) (t 25774 62183 535435 337000)) nil (25774 62189 57609 990000) 0 nil])
([nil nil ((5274 . 6260) (#("- More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)

- Third, we use these weights in combination with the corresponding sequence elements to compute the attention value." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 88 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 88 89 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 89 91 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 91 108 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 108 109 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 109 144 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 144 217 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 217 218 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 218 229 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 229 230 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 230 232 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 232 233 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 233 257 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 257 258 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 258 262 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 262 263 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 263 274 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 274 276 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 276 277 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 277 364 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 364 369 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 369 370 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 370 467 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 467 468 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 468 572 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 572 573 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 573 682 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 682 683 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 683 722 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 722 723 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 723 822 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 822 823 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 823 850 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 850 851 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 851 852 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 852 853 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 853 866 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 866 867 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 867 868 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 868 869 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 869 870 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 870 871 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 871 916 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 916 945 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 945 946 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 946 986 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 5274) (undo-tree-id57936 . 115) (undo-tree-id57937 . -870) (undo-tree-id57938 . -986) (undo-tree-id57939 . -870) (undo-tree-id57940 . -870) (undo-tree-id57941 . -870) (undo-tree-id57942 . -870) (undo-tree-id57943 . -870) (undo-tree-id57944 . -870) (undo-tree-id57945 . -870) (undo-tree-id57946 . -870) (undo-tree-id57947 . -870) (undo-tree-id57948 . -870) (undo-tree-id57949 . -870) (undo-tree-id57950 . -870) (undo-tree-id57951 . -870) (undo-tree-id57952 . -870) (undo-tree-id57953 . -870) (undo-tree-id57954 . -870) (undo-tree-id57955 . -870) (undo-tree-id57956 . -870) (undo-tree-id57957 . -870) (undo-tree-id57958 . -870) (undo-tree-id57959 . -870) (undo-tree-id57960 . -870) (undo-tree-id57961 . -870) (undo-tree-id57962 . -870) (undo-tree-id57963 . -870) (undo-tree-id57964 . -870) (undo-tree-id57965 . -870) (undo-tree-id57966 . -870) (undo-tree-id57967 . -870) (undo-tree-id57968 . -871) (undo-tree-id57969 . -871) (undo-tree-id57970 . -871) (undo-tree-id57971 . -871) (undo-tree-id57972 . -871) (undo-tree-id57973 . -871) (undo-tree-id57974 . -871) (undo-tree-id57975 . -871) (undo-tree-id57976 . -871) (undo-tree-id57977 . -871) (undo-tree-id57978 . -871) (undo-tree-id57979 . -871) (undo-tree-id57980 . -871) (undo-tree-id57981 . -871) (undo-tree-id57982 . -871) (undo-tree-id57983 . -871) (undo-tree-id57984 . -871) (undo-tree-id57985 . -871) (undo-tree-id57986 . -871) (undo-tree-id57987 . -871) (undo-tree-id57988 . -871) (undo-tree-id57989 . -871) (undo-tree-id57990 . -871) (undo-tree-id57991 . -871) (undo-tree-id57992 . -871) (undo-tree-id57993 . -871) (undo-tree-id57994 . -871) (undo-tree-id57995 . -871) (undo-tree-id57996 . -871) (undo-tree-id57997 . -871) (undo-tree-id57998 . -871) (undo-tree-id57999 . -871) (undo-tree-id58000 . -871) (undo-tree-id58001 . -871) (undo-tree-id58002 . -871) (undo-tree-id58003 . -871) (undo-tree-id58004 . -871) (undo-tree-id58005 . -871) (undo-tree-id58006 . -871) (undo-tree-id58007 . -871) (undo-tree-id58008 . -871) (undo-tree-id58009 . -871) (undo-tree-id58010 . -871) (undo-tree-id58011 . -871) (undo-tree-id58012 . -871) (undo-tree-id58013 . -871) (undo-tree-id58014 . -871) (undo-tree-id58015 . -871) (undo-tree-id58016 . -871) (undo-tree-id58017 . -871) (undo-tree-id58018 . -871) (undo-tree-id58019 . -985) (undo-tree-id58020 . -985) (undo-tree-id58021 . -985) (undo-tree-id58022 . -985) (undo-tree-id58023 . -985) (undo-tree-id58024 . -985) (undo-tree-id58025 . -985) (undo-tree-id58026 . -985) (undo-tree-id58027 . -985) (undo-tree-id58028 . -985) (undo-tree-id58029 . -985) (undo-tree-id58030 . -985) (undo-tree-id58031 . -985) (undo-tree-id58032 . -985) (undo-tree-id58033 . -985) (undo-tree-id58034 . -985) (undo-tree-id58035 . -986) (undo-tree-id58036 . -986) (undo-tree-id58037 . -986) (undo-tree-id58038 . -986) (undo-tree-id58039 . -986) (undo-tree-id58040 . -986) (undo-tree-id58041 . -986) (undo-tree-id58042 . -986) (undo-tree-id58043 . -986) (undo-tree-id58044 . -986) (undo-tree-id58045 . -986) (undo-tree-id58046 . -986) (undo-tree-id58047 . -986) (undo-tree-id58048 . -986) (undo-tree-id58049 . -986) (undo-tree-id58050 . -986) (undo-tree-id58051 . -986) (undo-tree-id58052 . -986) (undo-tree-id58053 . -986) (undo-tree-id58054 . -869) (5274 . 6143) (#(" More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 ). For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 87 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 87 88 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 88 90 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 90 107 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 107 108 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 108 143 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 143 216 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 216 217 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 217 228 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 228 229 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 229 231 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 231 232 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 232 256 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 256 257 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 257 261 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 261 262 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 262 273 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 273 275 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 275 276 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 276 363 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 363 368 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 368 369 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 369 466 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 466 467 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 467 571 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 571 572 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 572 681 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 681 682 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 682 721 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 721 722 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 722 821 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 821 822 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 822 849 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 849 850 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 850 851 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 851 852 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 852 865 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 865 866 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 5391) (t 25774 62189 119488 237000)) nil (25774 62196 978176 681000) 0 nil])
([nil nil ((5393 . 6263) (#("- For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)

- More formally, the output of self-attention, 𝒛𝒛(𝑖𝑖) , is the weighted sum of all T input sequences, 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 )." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 12 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 12 85 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 85 86 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 86 97 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 97 98 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 98 100 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 100 101 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 101 125 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 125 126 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 126 130 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 130 131 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 131 142 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 142 144 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 144 145 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 145 232 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 232 237 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 237 238 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 238 249 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 249 335 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 335 336 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 336 440 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 440 441 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 441 550 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 550 551 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 551 590 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 590 591 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 591 690 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 690 691 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 691 718 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 718 719 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 719 720 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 720 721 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 721 734 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 734 735 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 735 736 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 736 737 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 737 738 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 738 739 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 739 825 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 825 826 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 826 828 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 828 845 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 845 846 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 846 870 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 5393) (undo-tree-id57821 . 131) (undo-tree-id57822 . -870) (undo-tree-id57823 . -739) (undo-tree-id57824 . -739) (undo-tree-id57825 . -739) (undo-tree-id57826 . -739) (undo-tree-id57827 . -739) (undo-tree-id57828 . -739) (undo-tree-id57829 . -739) (undo-tree-id57830 . -739) (undo-tree-id57831 . -739) (undo-tree-id57832 . -739) (undo-tree-id57833 . -739) (undo-tree-id57834 . -739) (undo-tree-id57835 . -739) (undo-tree-id57836 . -739) (undo-tree-id57837 . -739) (undo-tree-id57838 . -739) (undo-tree-id57839 . -739) (undo-tree-id57840 . -739) (undo-tree-id57841 . -739) (undo-tree-id57842 . -739) (undo-tree-id57843 . -739) (undo-tree-id57844 . -739) (undo-tree-id57845 . -739) (undo-tree-id57846 . -739) (undo-tree-id57847 . -739) (undo-tree-id57848 . -739) (undo-tree-id57849 . -739) (undo-tree-id57850 . -738) (undo-tree-id57851 . -738) (undo-tree-id57852 . -738) (undo-tree-id57853 . -738) (undo-tree-id57854 . -738) (undo-tree-id57855 . -738) (undo-tree-id57856 . -738) (undo-tree-id57857 . -738) (undo-tree-id57858 . -738) (undo-tree-id57859 . -738) (undo-tree-id57860 . -738) (undo-tree-id57861 . -738) (undo-tree-id57862 . -738) (undo-tree-id57863 . -738) (undo-tree-id57864 . -738) (undo-tree-id57865 . -738) (undo-tree-id57866 . -738) (undo-tree-id57867 . -738) (undo-tree-id57868 . -738) (undo-tree-id57869 . -738) (undo-tree-id57870 . -738) (undo-tree-id57871 . -738) (undo-tree-id57872 . -738) (undo-tree-id57873 . -738) (undo-tree-id57874 . -738) (undo-tree-id57875 . -738) (undo-tree-id57876 . -738) (undo-tree-id57877 . -738) (undo-tree-id57878 . -738) (undo-tree-id57879 . -738) (undo-tree-id57880 . -738) (undo-tree-id57881 . -738) (undo-tree-id57882 . -738) (undo-tree-id57883 . -738) (undo-tree-id57884 . -738) (undo-tree-id57885 . -738) (undo-tree-id57886 . -738) (undo-tree-id57887 . -738) (undo-tree-id57888 . -738) (undo-tree-id57889 . -738) (undo-tree-id57890 . -738) (undo-tree-id57891 . -738) (undo-tree-id57892 . -738) (undo-tree-id57893 . -738) (undo-tree-id57894 . -738) (undo-tree-id57895 . -869) (undo-tree-id57896 . -869) (undo-tree-id57897 . -869) (undo-tree-id57898 . -869) (undo-tree-id57899 . -869) (undo-tree-id57900 . -869) (undo-tree-id57901 . -869) (undo-tree-id57902 . -869) (undo-tree-id57903 . -869) (undo-tree-id57904 . -869) (undo-tree-id57905 . -869) (undo-tree-id57906 . -869) (undo-tree-id57907 . -869) (undo-tree-id57908 . -869) (undo-tree-id57909 . -869) (undo-tree-id57910 . -869) (undo-tree-id57911 . -869) (undo-tree-id57912 . -869) (undo-tree-id57913 . -869) (undo-tree-id57914 . -869) (undo-tree-id57915 . -869) (undo-tree-id57916 . -870) (undo-tree-id57917 . -870) (undo-tree-id57918 . -870) (undo-tree-id57919 . -870) (undo-tree-id57920 . -870) (undo-tree-id57921 . -870) (undo-tree-id57922 . -870) (undo-tree-id57923 . -870) (undo-tree-id57924 . -870) (undo-tree-id57925 . -870) (undo-tree-id57926 . -870) (undo-tree-id57927 . -870) (undo-tree-id57928 . -870) (undo-tree-id57929 . -870) (undo-tree-id57930 . -870) (undo-tree-id57931 . -870) (undo-tree-id57932 . -870) (undo-tree-id57933 . -870) (undo-tree-id57934 . -870) (undo-tree-id57935 . -737) (5393 . 6130) (#(" For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights. Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 11 84 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 84 85 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 85 96 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 96 97 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 97 99 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 99 100 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 100 124 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 124 125 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 125 129 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 129 130 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 130 141 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 141 143 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 143 144 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 144 231 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 231 236 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 236 237 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 237 248 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 248 334 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 334 335 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 335 439 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 439 440 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 440 549 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 549 550 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 550 589 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 589 590 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 590 689 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 689 690 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 690 717 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 717 718 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 718 719 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 719 720 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 720 733 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 733 734 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 5526)) nil (25774 62196 977554 860000) 0 nil])
([nil nil ((5528 . 6266) (#("- Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)

- For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, we can think of 𝒛𝒛(𝑖𝑖) as a context-aware embedding vector in input vector 𝒙𝒙(𝑖𝑖) that involves all other input sequence elements weighted by their respective attention weights." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 21 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 21 22 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 22 51 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 51 126 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 126 127 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 127 236 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 236 237 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 237 276 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 276 277 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 277 376 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 376 377 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 377 404 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 404 405 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 405 406 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 406 407 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 407 420 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 420 421 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 421 422 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 422 423 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 423 424 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 424 425 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 425 435 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 435 508 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 508 509 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 509 520 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 520 521 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 521 523 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 523 524 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 524 548 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 548 549 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 549 553 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 553 554 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 554 565 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 565 567 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 567 568 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 568 655 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 655 660 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 660 661 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 661 672 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 672 738 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 5528) (undo-tree-id58457 . 313) (undo-tree-id58458 . -424) (undo-tree-id58459 . -738) (undo-tree-id58460 . -424) (undo-tree-id58461 . -424) (undo-tree-id58462 . -424) (undo-tree-id58463 . -424) (undo-tree-id58464 . -424) (undo-tree-id58465 . -424) (undo-tree-id58466 . -424) (undo-tree-id58467 . -424) (undo-tree-id58468 . -424) (undo-tree-id58469 . -424) (undo-tree-id58470 . -424) (undo-tree-id58471 . -424) (undo-tree-id58472 . -424) (undo-tree-id58473 . -424) (undo-tree-id58474 . -424) (undo-tree-id58475 . -424) (undo-tree-id58476 . -424) (undo-tree-id58477 . -424) (undo-tree-id58478 . -424) (undo-tree-id58479 . -424) (undo-tree-id58480 . -424) (undo-tree-id58481 . -424) (undo-tree-id58482 . -424) (undo-tree-id58483 . -424) (undo-tree-id58484 . -424) (undo-tree-id58485 . -424) (undo-tree-id58486 . -424) (undo-tree-id58487 . -424) (undo-tree-id58488 . -424) (undo-tree-id58489 . -424) (undo-tree-id58490 . -424) (undo-tree-id58491 . -424) (undo-tree-id58492 . -424) (undo-tree-id58493 . -424) (undo-tree-id58494 . -424) (undo-tree-id58495 . -424) (undo-tree-id58496 . -424) (undo-tree-id58497 . -424) (undo-tree-id58498 . -424) (undo-tree-id58499 . -424) (undo-tree-id58500 . -424) (undo-tree-id58501 . -424) (undo-tree-id58502 . -424) (undo-tree-id58503 . -424) (undo-tree-id58504 . -424) (undo-tree-id58505 . -424) (undo-tree-id58506 . -424) (undo-tree-id58507 . -424) (undo-tree-id58508 . -424) (undo-tree-id58509 . -737) (undo-tree-id58510 . -737) (undo-tree-id58511 . -737) (undo-tree-id58512 . -737) (undo-tree-id58513 . -737) (undo-tree-id58514 . -737) (undo-tree-id58515 . -737) (undo-tree-id58516 . -737) (undo-tree-id58517 . -737) (undo-tree-id58518 . -737) (undo-tree-id58519 . -737) (undo-tree-id58520 . -737) (undo-tree-id58521 . -737) (undo-tree-id58522 . -737) (undo-tree-id58523 . -737) (undo-tree-id58524 . -737) (undo-tree-id58525 . -737) (undo-tree-id58526 . -737) (undo-tree-id58527 . -737) (undo-tree-id58528 . -737) (undo-tree-id58529 . -737) (undo-tree-id58530 . -738) (undo-tree-id58531 . -738) (undo-tree-id58532 . -738) (undo-tree-id58533 . -738) (undo-tree-id58534 . -738) (undo-tree-id58535 . -738) (undo-tree-id58536 . -738) (undo-tree-id58537 . -738) (undo-tree-id58538 . -738) (undo-tree-id58539 . -738) (undo-tree-id58540 . -738) (undo-tree-id58541 . -738) (undo-tree-id58542 . -738) (undo-tree-id58543 . -738) (undo-tree-id58544 . -738) (undo-tree-id58545 . -738) (undo-tree-id58546 . -738) (undo-tree-id58547 . -738) (undo-tree-id58548 . -738) (undo-tree-id58549 . -423) (5528 . 5951) (#(" Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇). More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 20 21 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 21 50 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 50 125 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 125 126 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 126 235 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 235 236 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 236 275 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 275 276 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 276 375 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 375 376 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 376 403 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 403 404 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 404 405 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 405 406 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 406 419 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 419 420 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 5843) (t 25774 62197 43563 320000)) nil (25774 62217 758174 48000) 0 nil])
([nil nil ((5845 . 6269) (#("- More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)

- Here, the attention weights, 𝛼𝛼𝑖𝑖𝑖𝑖, are computed based on the similarity between the current input element, 𝒙𝒙(𝑖𝑖), and all other elements in the input sequence, 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇)." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 53 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 53 54 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 54 93 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 93 94 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 94 193 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 193 194 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 194 221 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 221 222 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 222 223 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 223 224 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 224 237 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 237 238 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 238 239 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 239 240 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 240 241 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 241 242 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 242 261 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 261 262 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 262 291 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 291 366 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 366 367 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 367 423 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 423 424 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 5845) (undo-tree-id58150 . 12) (undo-tree-id58151 . -424) (undo-tree-id58152 . -242) (undo-tree-id58153 . -242) (undo-tree-id58154 . -242) (undo-tree-id58155 . -242) (undo-tree-id58156 . -242) (undo-tree-id58157 . -242) (undo-tree-id58158 . -242) (undo-tree-id58159 . -242) (undo-tree-id58160 . -242) (undo-tree-id58161 . -242) (undo-tree-id58162 . -242) (undo-tree-id58163 . -242) (undo-tree-id58164 . -242) (undo-tree-id58165 . -242) (undo-tree-id58166 . -242) (undo-tree-id58167 . -242) (undo-tree-id58168 . -242) (undo-tree-id58169 . -242) (undo-tree-id58170 . -242) (undo-tree-id58171 . -242) (undo-tree-id58172 . -242) (undo-tree-id58173 . -242) (undo-tree-id58174 . -242) (undo-tree-id58175 . -242) (undo-tree-id58176 . -242) (undo-tree-id58177 . -242) (undo-tree-id58178 . -242) (undo-tree-id58179 . -242) (undo-tree-id58180 . -242) (undo-tree-id58181 . -242) (undo-tree-id58182 . -242) (undo-tree-id58183 . -242) (undo-tree-id58184 . -242) (undo-tree-id58185 . -242) (undo-tree-id58186 . -242) (undo-tree-id58187 . -242) (undo-tree-id58188 . -242) (undo-tree-id58189 . -242) (undo-tree-id58190 . -242) (undo-tree-id58191 . -242) (undo-tree-id58192 . -242) (undo-tree-id58193 . -242) (undo-tree-id58194 . -242) (undo-tree-id58195 . -242) (undo-tree-id58196 . -242) (undo-tree-id58197 . -242) (undo-tree-id58198 . -242) (undo-tree-id58199 . -242) (undo-tree-id58200 . -242) (undo-tree-id58201 . -242) (undo-tree-id58202 . -242) (undo-tree-id58203 . -242) (undo-tree-id58204 . -242) (undo-tree-id58205 . -242) (undo-tree-id58206 . -242) (undo-tree-id58207 . -242) (undo-tree-id58208 . -242) (undo-tree-id58209 . -242) (undo-tree-id58210 . -242) (undo-tree-id58211 . -242) (undo-tree-id58212 . -242) (undo-tree-id58213 . -242) (undo-tree-id58214 . -242) (undo-tree-id58215 . -242) (undo-tree-id58216 . -242) (undo-tree-id58217 . -242) (undo-tree-id58218 . -242) (undo-tree-id58219 . -242) (undo-tree-id58220 . -241) (undo-tree-id58221 . -241) (undo-tree-id58222 . -241) (undo-tree-id58223 . -241) (undo-tree-id58224 . -241) (undo-tree-id58225 . -241) (undo-tree-id58226 . -241) (undo-tree-id58227 . -241) (undo-tree-id58228 . -241) (undo-tree-id58229 . -241) (undo-tree-id58230 . -241) (undo-tree-id58231 . -241) (undo-tree-id58232 . -241) (undo-tree-id58233 . -241) (undo-tree-id58234 . -241) (undo-tree-id58235 . -241) (undo-tree-id58236 . -241) (undo-tree-id58237 . -241) (undo-tree-id58238 . -241) (undo-tree-id58239 . -241) (undo-tree-id58240 . -241) (undo-tree-id58241 . -241) (undo-tree-id58242 . -241) (undo-tree-id58243 . -241) (undo-tree-id58244 . -241) (undo-tree-id58245 . -241) (undo-tree-id58246 . -241) (undo-tree-id58247 . -241) (undo-tree-id58248 . -241) (undo-tree-id58249 . -241) (undo-tree-id58250 . -241) (undo-tree-id58251 . -241) (undo-tree-id58252 . -241) (undo-tree-id58253 . -241) (undo-tree-id58254 . -241) (undo-tree-id58255 . -241) (undo-tree-id58256 . -241) (undo-tree-id58257 . -241) (undo-tree-id58258 . -241) (undo-tree-id58259 . -241) (undo-tree-id58260 . -241) (undo-tree-id58261 . -241) (undo-tree-id58262 . -241) (undo-tree-id58263 . -241) (undo-tree-id58264 . -241) (undo-tree-id58265 . -241) (undo-tree-id58266 . -241) (undo-tree-id58267 . -241) (undo-tree-id58268 . -241) (undo-tree-id58269 . -241) (undo-tree-id58270 . -241) (undo-tree-id58271 . -241) (undo-tree-id58272 . -241) (undo-tree-id58273 . -241) (undo-tree-id58274 . -241) (undo-tree-id58275 . -241) (undo-tree-id58276 . -241) (undo-tree-id58277 . -241) (undo-tree-id58278 . -241) (undo-tree-id58279 . -241) (undo-tree-id58280 . -411) (undo-tree-id58281 . -411) (undo-tree-id58282 . -411) (undo-tree-id58283 . -411) (undo-tree-id58284 . -411) (undo-tree-id58285 . -411) (undo-tree-id58286 . -411) (undo-tree-id58287 . -411) (undo-tree-id58288 . -411) (undo-tree-id58289 . -411) (undo-tree-id58290 . -411) (undo-tree-id58291 . -411) (undo-tree-id58292 . -411) (undo-tree-id58293 . -411) (undo-tree-id58294 . -411) (undo-tree-id58295 . -411) (undo-tree-id58296 . -411) (undo-tree-id58297 . -411) (undo-tree-id58298 . -411) (undo-tree-id58299 . -411) (undo-tree-id58300 . -411) (undo-tree-id58301 . -412) (undo-tree-id58302 . -412) (undo-tree-id58303 . -412) (undo-tree-id58304 . -412) (undo-tree-id58305 . -412) (undo-tree-id58306 . -412) (undo-tree-id58307 . -412) (undo-tree-id58308 . -412) (undo-tree-id58309 . -412) (undo-tree-id58310 . -412) (undo-tree-id58311 . -412) (undo-tree-id58312 . -412) (undo-tree-id58313 . -412) (undo-tree-id58314 . -412) (undo-tree-id58315 . -412) (undo-tree-id58316 . -412) (undo-tree-id58317 . -412) (undo-tree-id58318 . -412) (undo-tree-id58319 . -412) (undo-tree-id58320 . -412) (undo-tree-id58321 . -412) (undo-tree-id58322 . -412) (undo-tree-id58323 . -412) (undo-tree-id58324 . -412) (undo-tree-id58325 . -412) (undo-tree-id58326 . -412) (undo-tree-id58327 . -412) (undo-tree-id58328 . -412) (undo-tree-id58329 . -411) (undo-tree-id58330 . -411) (undo-tree-id58331 . -411) (undo-tree-id58332 . -411) (undo-tree-id58333 . -411) (undo-tree-id58334 . -411) (undo-tree-id58335 . -411) (undo-tree-id58336 . -411) (undo-tree-id58337 . -411) (undo-tree-id58338 . -411) (undo-tree-id58339 . -411) (undo-tree-id58340 . -411) (undo-tree-id58341 . -411) (undo-tree-id58342 . -411) (undo-tree-id58343 . -411) (undo-tree-id58344 . -411) (undo-tree-id58345 . -411) (undo-tree-id58346 . -411) (undo-tree-id58347 . -411) (undo-tree-id58348 . -411) (undo-tree-id58349 . -411) (undo-tree-id58350 . -411) (undo-tree-id58351 . -411) (undo-tree-id58352 . -411) (undo-tree-id58353 . -411) (undo-tree-id58354 . -411) (undo-tree-id58355 . -411) (undo-tree-id58356 . -411) (undo-tree-id58357 . -411) (undo-tree-id58358 . -411) (undo-tree-id58359 . -411) (undo-tree-id58360 . -411) (undo-tree-id58361 . -411) (undo-tree-id58362 . -411) (undo-tree-id58363 . -411) (undo-tree-id58364 . -411) (undo-tree-id58365 . -411) (undo-tree-id58366 . -411) (undo-tree-id58367 . -411) (undo-tree-id58368 . -411) (undo-tree-id58369 . -411) (undo-tree-id58370 . -411) (undo-tree-id58371 . -411) (undo-tree-id58372 . -411) (undo-tree-id58373 . -411) (undo-tree-id58374 . -413) (undo-tree-id58375 . -413) (undo-tree-id58376 . -413) (undo-tree-id58377 . -413) (undo-tree-id58378 . -413) (undo-tree-id58379 . -413) (undo-tree-id58380 . -413) (undo-tree-id58381 . -413) (undo-tree-id58382 . -413) (undo-tree-id58383 . -413) (undo-tree-id58384 . -413) (undo-tree-id58385 . -413) (undo-tree-id58386 . -413) (undo-tree-id58387 . -413) (undo-tree-id58388 . -413) (undo-tree-id58389 . -413) (undo-tree-id58390 . -413) (undo-tree-id58391 . -413) (undo-tree-id58392 . -413) (undo-tree-id58393 . -413) (undo-tree-id58394 . -413) (undo-tree-id58395 . -415) (undo-tree-id58396 . -415) (undo-tree-id58397 . -415) (undo-tree-id58398 . -415) (undo-tree-id58399 . -415) (undo-tree-id58400 . -415) (undo-tree-id58401 . -415) (undo-tree-id58402 . -415) (undo-tree-id58403 . -415) (undo-tree-id58404 . -415) (undo-tree-id58405 . -415) (undo-tree-id58406 . -415) (undo-tree-id58407 . -415) (undo-tree-id58408 . -415) (undo-tree-id58409 . -415) (undo-tree-id58410 . -415) (undo-tree-id58411 . -423) (undo-tree-id58412 . -423) (undo-tree-id58413 . -423) (undo-tree-id58414 . -423) (undo-tree-id58415 . -423) (undo-tree-id58416 . -423) (undo-tree-id58417 . -423) (undo-tree-id58418 . -423) (undo-tree-id58419 . -423) (undo-tree-id58420 . -423) (undo-tree-id58421 . -423) (undo-tree-id58422 . -423) (undo-tree-id58423 . -423) (undo-tree-id58424 . -423) (undo-tree-id58425 . -423) (undo-tree-id58426 . -423) (undo-tree-id58427 . -423) (undo-tree-id58428 . -423) (undo-tree-id58429 . -423) (undo-tree-id58430 . -423) (undo-tree-id58431 . -423) (undo-tree-id58432 . -424) (undo-tree-id58433 . -424) (undo-tree-id58434 . -424) (undo-tree-id58435 . -424) (undo-tree-id58436 . -424) (undo-tree-id58437 . -424) (undo-tree-id58438 . -424) (undo-tree-id58439 . -424) (undo-tree-id58440 . -424) (undo-tree-id58441 . -424) (undo-tree-id58442 . -424) (undo-tree-id58443 . -424) (undo-tree-id58444 . -424) (undo-tree-id58445 . -424) (undo-tree-id58446 . -424) (undo-tree-id58447 . -424) (undo-tree-id58448 . -424) (undo-tree-id58449 . -424) (undo-tree-id58450 . -424) (undo-tree-id58451 . -424) (undo-tree-id58452 . -424) (undo-tree-id58453 . -424) (undo-tree-id58454 . -424) (undo-tree-id58455 . -424) (undo-tree-id58456 . -240) (5845 . 6085) (#(" More concretely, this similarity is computed in two steps explained in the next paragraphs. First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 52 53 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 53 92 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 92 93 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 93 192 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 192 193 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 193 220 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 220 221 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 221 222 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 222 223 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 223 236 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 236 237 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 6029)) nil (25774 62217 758104 48000) 0 nil])
([nil nil ((6031 . 6272) (#("- First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)

- More concretely, this similarity is computed in two steps explained in the next paragraphs." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 101 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 101 102 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 102 129 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 129 130 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 130 131 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 131 132 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 132 145 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 145 146 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 146 147 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 147 148 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 148 149 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 149 150 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 150 201 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 201 202 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 202 241 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 6031) (undo-tree-id58055 . 91) (undo-tree-id58056 . -241) (undo-tree-id58057 . -150) (undo-tree-id58058 . -150) (undo-tree-id58059 . -150) (undo-tree-id58060 . -150) (undo-tree-id58061 . -150) (undo-tree-id58062 . -150) (undo-tree-id58063 . -150) (undo-tree-id58064 . -150) (undo-tree-id58065 . -150) (undo-tree-id58066 . -150) (undo-tree-id58067 . -150) (undo-tree-id58068 . -150) (undo-tree-id58069 . -150) (undo-tree-id58070 . -150) (undo-tree-id58071 . -150) (undo-tree-id58072 . -150) (undo-tree-id58073 . -150) (undo-tree-id58074 . -150) (undo-tree-id58075 . -150) (undo-tree-id58076 . -150) (undo-tree-id58077 . -150) (undo-tree-id58078 . -150) (undo-tree-id58079 . -149) (undo-tree-id58080 . -149) (undo-tree-id58081 . -149) (undo-tree-id58082 . -149) (undo-tree-id58083 . -149) (undo-tree-id58084 . -149) (undo-tree-id58085 . -149) (undo-tree-id58086 . -149) (undo-tree-id58087 . -149) (undo-tree-id58088 . -149) (undo-tree-id58089 . -149) (undo-tree-id58090 . -149) (undo-tree-id58091 . -149) (undo-tree-id58092 . -149) (undo-tree-id58093 . -149) (undo-tree-id58094 . -149) (undo-tree-id58095 . -149) (undo-tree-id58096 . -149) (undo-tree-id58097 . -149) (undo-tree-id58098 . -149) (undo-tree-id58099 . -149) (undo-tree-id58100 . -149) (undo-tree-id58101 . -149) (undo-tree-id58102 . -149) (undo-tree-id58103 . -149) (undo-tree-id58104 . -149) (undo-tree-id58105 . -149) (undo-tree-id58106 . -149) (undo-tree-id58107 . -149) (undo-tree-id58108 . -149) (undo-tree-id58109 . -240) (undo-tree-id58110 . -240) (undo-tree-id58111 . -240) (undo-tree-id58112 . -240) (undo-tree-id58113 . -240) (undo-tree-id58114 . -240) (undo-tree-id58115 . -240) (undo-tree-id58116 . -240) (undo-tree-id58117 . -240) (undo-tree-id58118 . -240) (undo-tree-id58119 . -240) (undo-tree-id58120 . -240) (undo-tree-id58121 . -240) (undo-tree-id58122 . -240) (undo-tree-id58123 . -240) (undo-tree-id58124 . -240) (undo-tree-id58125 . -240) (undo-tree-id58126 . -240) (undo-tree-id58127 . -240) (undo-tree-id58128 . -240) (undo-tree-id58129 . -240) (undo-tree-id58130 . -241) (undo-tree-id58131 . -241) (undo-tree-id58132 . -241) (undo-tree-id58133 . -241) (undo-tree-id58134 . -241) (undo-tree-id58135 . -241) (undo-tree-id58136 . -241) (undo-tree-id58137 . -241) (undo-tree-id58138 . -241) (undo-tree-id58139 . -241) (undo-tree-id58140 . -241) (undo-tree-id58141 . -241) (undo-tree-id58142 . -241) (undo-tree-id58143 . -241) (undo-tree-id58144 . -241) (undo-tree-id58145 . -241) (undo-tree-id58146 . -241) (undo-tree-id58147 . -241) (undo-tree-id58148 . -241) (undo-tree-id58149 . -148) (6031 . 6179) (#(" First, we compute the dot product between the current input element, 𝒙𝒙(𝑖𝑖), and another element in the input sequence, 𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 100 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 100 101 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 101 128 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 128 129 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 129 130 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 130 131 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 131 144 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 144 145 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 6124)) nil (25774 62217 757396 995000) 0 nil])
([nil nil ((#("First" 0 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5035) (undo-tree-id58554 . -4) (undo-tree-id58555 . -5) (t 25774 62217 819760 246000)) nil (25774 62255 377136 44000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5035) (undo-tree-id58552 . -1) (undo-tree-id58553 . -2)) nil (25774 62256 182422 673000) 0 nil])
([nil nil ((#("we " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5035) (undo-tree-id58556 . -2) (undo-tree-id58557 . -3)) nil (25774 62268 916413 352000) 0 nil] [nil nil ((#("we " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5035) (undo-tree-id58550 . -2) (undo-tree-id58551 . -3)) ((5035 . 5038)) (25774 62255 654940 597000) 0 nil])
([nil nil ((5035 . 5036) (#("d" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5035)) nil (25774 62268 916401 891000) 0 nil])
([nil nil ((5035 . 5036) (#("d" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5035)) ((5035 . 5036) (#("D" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5035)) (25774 62255 377679 572000) 0 nil])
([nil nil ((5041 . 5042)) nil (25774 62268 916395 200000) 0 nil])
([nil nil ((5041 . 5042)) ((#("s" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5041)) (25774 62255 377115 72000) 0 nil])
([nil nil ((#("we " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5165) (undo-tree-id58576 . -2) (undo-tree-id58577 . -1) (undo-tree-id58578 . -1) (undo-tree-id58579 . -1) (undo-tree-id58580 . -1) (undo-tree-id58581 . -1) (undo-tree-id58582 . -1) (undo-tree-id58583 . -1) (undo-tree-id58584 . -1) (undo-tree-id58585 . -1) (undo-tree-id58586 . -1) (undo-tree-id58587 . -1) (undo-tree-id58588 . -1) (undo-tree-id58589 . -1) (undo-tree-id58590 . -1) (undo-tree-id58591 . -1) (undo-tree-id58592 . -1) (undo-tree-id58593 . -1) (undo-tree-id58594 . -1) (undo-tree-id58595 . -1) (undo-tree-id58596 . -1) (undo-tree-id58597 . -1) (undo-tree-id58598 . -3) (t 25774 62268 980245 574000)) nil (25774 62284 122601 88000) 0 nil])
nil
([nil nil ((#("s" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5041) (undo-tree-id58558 . -1) (undo-tree-id58559 . -1) (undo-tree-id58560 . -1) (undo-tree-id58561 . -1) (undo-tree-id58562 . -1) (undo-tree-id58563 . -1) (undo-tree-id58564 . -1) (undo-tree-id58565 . -1) (undo-tree-id58566 . -1) (undo-tree-id58567 . -1) (undo-tree-id58568 . -1) (undo-tree-id58569 . -1) (undo-tree-id58570 . -1) (undo-tree-id58571 . -1) (undo-tree-id58572 . -1) (undo-tree-id58573 . -1) (undo-tree-id58574 . -1) (undo-tree-id58575 . -1)) nil (25774 62284 122581 32000) 0 nil])
([nil nil ((#(", which usually involves the use of the already familiar softmax function" 0 48 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 48 53 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 53 73 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5185) (undo-tree-id58622 . -72) (undo-tree-id58623 . -72) (undo-tree-id58624 . -72) (undo-tree-id58625 . -72) (undo-tree-id58626 . -73) (undo-tree-id58627 . -72) (undo-tree-id58628 . -6) (undo-tree-id58629 . -6) (undo-tree-id58630 . -6) (undo-tree-id58631 . -6) (undo-tree-id58632 . -6) (undo-tree-id58633 . -6) (undo-tree-id58634 . -6) (undo-tree-id58635 . -6) (undo-tree-id58636 . -6) (undo-tree-id58637 . -6) (undo-tree-id58638 . -6) (undo-tree-id58639 . -6) (undo-tree-id58640 . -6) (undo-tree-id58641 . -6) (undo-tree-id58642 . -6) (undo-tree-id58643 . -6) (undo-tree-id58644 . -6) (undo-tree-id58645 . -6) (undo-tree-id58646 . -6) (undo-tree-id58647 . -6) (undo-tree-id58648 . -6) (undo-tree-id58649 . -14) (undo-tree-id58650 . -14) (undo-tree-id58651 . -14) (undo-tree-id58652 . -14) (undo-tree-id58653 . -14) (undo-tree-id58654 . -14) (undo-tree-id58655 . -14) (undo-tree-id58656 . -14) (undo-tree-id58657 . -14) (undo-tree-id58658 . -14) (undo-tree-id58659 . -14) (undo-tree-id58660 . -14) (undo-tree-id58661 . -14) (undo-tree-id58662 . -14) (undo-tree-id58663 . -14) (undo-tree-id58664 . -14) (undo-tree-id58665 . -14) (undo-tree-id58666 . -14) (undo-tree-id58667 . -14) (undo-tree-id58668 . -14) (undo-tree-id58669 . -14) (undo-tree-id58670 . -23) (undo-tree-id58671 . -23) (undo-tree-id58672 . -23) (undo-tree-id58673 . -23) (undo-tree-id58674 . -23) (undo-tree-id58675 . -23) (undo-tree-id58676 . -23) (undo-tree-id58677 . -23) (undo-tree-id58678 . -23) (undo-tree-id58679 . -23) (undo-tree-id58680 . -23) (undo-tree-id58681 . -23) (undo-tree-id58682 . -23) (undo-tree-id58683 . -23) (undo-tree-id58684 . -23) (undo-tree-id58685 . -23) (undo-tree-id58686 . -23) (undo-tree-id58687 . -23) (undo-tree-id58688 . -23) (undo-tree-id58689 . -23) (undo-tree-id58690 . -23) (undo-tree-id58691 . -23) (undo-tree-id58692 . -23) (undo-tree-id58693 . -23) (undo-tree-id58694 . -23) (undo-tree-id58695 . -23) (undo-tree-id58696 . -27) (undo-tree-id58697 . -27) (undo-tree-id58698 . -27) (undo-tree-id58699 . -27) (undo-tree-id58700 . -27) (undo-tree-id58701 . -27) (undo-tree-id58702 . -27) (undo-tree-id58703 . -27) (undo-tree-id58704 . -27) (undo-tree-id58705 . -27) (undo-tree-id58706 . -27) (undo-tree-id58707 . -27) (undo-tree-id58708 . -27) (undo-tree-id58709 . -27) (undo-tree-id58710 . -27) (undo-tree-id58711 . -27) (undo-tree-id58712 . -27) (undo-tree-id58713 . -27) (undo-tree-id58714 . -27) (undo-tree-id58715 . -27) (undo-tree-id58716 . -27) (undo-tree-id58717 . -31) (undo-tree-id58718 . -31) (undo-tree-id58719 . -31) (undo-tree-id58720 . -31) (undo-tree-id58721 . -31) (undo-tree-id58722 . -31) (undo-tree-id58723 . -31) (undo-tree-id58724 . -31) (undo-tree-id58725 . -31) (undo-tree-id58726 . -31) (undo-tree-id58727 . -31) (undo-tree-id58728 . -31) (undo-tree-id58729 . -31) (undo-tree-id58730 . -31) (undo-tree-id58731 . -31) (undo-tree-id58732 . -31) (undo-tree-id58733 . -31) (undo-tree-id58734 . -31) (undo-tree-id58735 . -31) (undo-tree-id58736 . -31) (undo-tree-id58737 . -31) (undo-tree-id58738 . -34) (undo-tree-id58739 . -34) (undo-tree-id58740 . -34) (undo-tree-id58741 . -34) (undo-tree-id58742 . -34) (undo-tree-id58743 . -34) (undo-tree-id58744 . -34) (undo-tree-id58745 . -34) (undo-tree-id58746 . -34) (undo-tree-id58747 . -34) (undo-tree-id58748 . -34) (undo-tree-id58749 . -34) (undo-tree-id58750 . -34) (undo-tree-id58751 . -34) (undo-tree-id58752 . -34) (undo-tree-id58753 . -34) (undo-tree-id58754 . -34) (undo-tree-id58755 . -34) (undo-tree-id58756 . -34) (undo-tree-id58757 . -34) (undo-tree-id58758 . -34) (undo-tree-id58759 . -38) (undo-tree-id58760 . -38) (undo-tree-id58761 . -38) (undo-tree-id58762 . -38) (undo-tree-id58763 . -38) (undo-tree-id58764 . -38) (undo-tree-id58765 . -38) (undo-tree-id58766 . -38) (undo-tree-id58767 . -38) (undo-tree-id58768 . -38) (undo-tree-id58769 . -38) (undo-tree-id58770 . -38) (undo-tree-id58771 . -38) (undo-tree-id58772 . -38) (undo-tree-id58773 . -38) (undo-tree-id58774 . -38) (undo-tree-id58775 . -38) (undo-tree-id58776 . -38) (undo-tree-id58777 . -38) (undo-tree-id58778 . -38) (undo-tree-id58779 . -38) (undo-tree-id58780 . -46) (undo-tree-id58781 . -46) (undo-tree-id58782 . -46) (undo-tree-id58783 . -46) (undo-tree-id58784 . -46) (undo-tree-id58785 . -46) (undo-tree-id58786 . -46) (undo-tree-id58787 . -46) (undo-tree-id58788 . -46) (undo-tree-id58789 . -46) (undo-tree-id58790 . -46) (undo-tree-id58791 . -46) (undo-tree-id58792 . -46) (undo-tree-id58793 . -46) (undo-tree-id58794 . -46) (undo-tree-id58795 . -46) (undo-tree-id58796 . -46) (undo-tree-id58797 . -46) (undo-tree-id58798 . -46) (undo-tree-id58799 . -46) (undo-tree-id58800 . -46) (undo-tree-id58801 . -55) (undo-tree-id58802 . -55) (undo-tree-id58803 . -55) (undo-tree-id58804 . -55) (undo-tree-id58805 . -55) (undo-tree-id58806 . -55) (undo-tree-id58807 . -55) (undo-tree-id58808 . -55) (undo-tree-id58809 . -55) (undo-tree-id58810 . -55) (undo-tree-id58811 . -55) (undo-tree-id58812 . -55) (undo-tree-id58813 . -55) (undo-tree-id58814 . -55) (undo-tree-id58815 . -55) (undo-tree-id58816 . -55) (undo-tree-id58817 . -55) (undo-tree-id58818 . -55) (undo-tree-id58819 . -55) (undo-tree-id58820 . -55) (undo-tree-id58821 . -55) (undo-tree-id58822 . 16) (undo-tree-id58823 . -64) (undo-tree-id58824 . -63) (undo-tree-id58825 . -63) (undo-tree-id58826 . -63) (undo-tree-id58827 . -63) (undo-tree-id58828 . -63) (undo-tree-id58829 . -63) (undo-tree-id58830 . -63) (undo-tree-id58831 . -63) (undo-tree-id58832 . -63) (undo-tree-id58833 . -63) (undo-tree-id58834 . -63) (undo-tree-id58835 . -63) (undo-tree-id58836 . -63) (undo-tree-id58837 . -63) (undo-tree-id58838 . -63) (undo-tree-id58839 . -63) (undo-tree-id58840 . -63) (undo-tree-id58841 . -63) (undo-tree-id58842 . -63) (undo-tree-id58843 . -63) (undo-tree-id58844 . -63) (undo-tree-id58845 . -72) (undo-tree-id58846 . -72) (undo-tree-id58847 . -72) (undo-tree-id58848 . -72) (undo-tree-id58849 . -72) (undo-tree-id58850 . -72) (undo-tree-id58851 . -72) (undo-tree-id58852 . -72) (undo-tree-id58853 . -72) (undo-tree-id58854 . -72) (undo-tree-id58855 . -72) (undo-tree-id58856 . -72) (undo-tree-id58857 . -72) (undo-tree-id58858 . -72) (undo-tree-id58859 . -72) (undo-tree-id58860 . -72) (undo-tree-id58861 . -72) (undo-tree-id58862 . -72) (undo-tree-id58863 . -72) (undo-tree-id58864 . -72) (undo-tree-id58865 . -72) (undo-tree-id58866 . -73) (undo-tree-id58867 . -73) (undo-tree-id58868 . -73) (undo-tree-id58869 . -73) (undo-tree-id58870 . -73) (undo-tree-id58871 . -73) (undo-tree-id58872 . -73) (undo-tree-id58873 . -73) (undo-tree-id58874 . -73) (undo-tree-id58875 . -73) (undo-tree-id58876 . -73) (undo-tree-id58877 . -73) (undo-tree-id58878 . -73) (undo-tree-id58879 . -73) (undo-tree-id58880 . -73) (undo-tree-id58881 . -73) (undo-tree-id58882 . -73) (undo-tree-id58883 . -73) (undo-tree-id58884 . -73) (undo-tree-id58885 . -73) (undo-tree-id58886 . -73) (undo-tree-id58887 . -73) (undo-tree-id58888 . -73) (undo-tree-id58889 . -73) (undo-tree-id58890 . -73) (undo-tree-id58891 . -73) (undo-tree-id58892 . -72) (undo-tree-id58893 . -72) (undo-tree-id58894 . -72) (undo-tree-id58895 . -72) (undo-tree-id58896 . -72) (undo-tree-id58897 . -72) (undo-tree-id58898 . -72) (undo-tree-id58899 . -72) (undo-tree-id58900 . -72) (undo-tree-id58901 . -72) (undo-tree-id58902 . -72) (undo-tree-id58903 . -72) (undo-tree-id58904 . -72) (undo-tree-id58905 . -72) (undo-tree-id58906 . -72) (undo-tree-id58907 . -72) (undo-tree-id58908 . -72) (undo-tree-id58909 . -72) (undo-tree-id58910 . -72) (undo-tree-id58911 . -72) (undo-tree-id58912 . -72) (undo-tree-id58913 . -72) (undo-tree-id58914 . -73) 5257 (t 25774 62284 188389 948000)) nil (25774 62299 515904 614000) 0 nil])
([nil nil ((#("we " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5197) (undo-tree-id58599 . -2) (undo-tree-id58600 . -3) (undo-tree-id58601 . -3) (undo-tree-id58602 . -3) (undo-tree-id58603 . -3) (undo-tree-id58604 . -3) (undo-tree-id58605 . -3) (undo-tree-id58606 . -3) (undo-tree-id58607 . -3) (undo-tree-id58608 . -3) (undo-tree-id58609 . -3) (undo-tree-id58610 . -3) (undo-tree-id58611 . -3) (undo-tree-id58612 . -3) (undo-tree-id58613 . -3) (undo-tree-id58614 . -3) (undo-tree-id58615 . -3) (undo-tree-id58616 . -3) (undo-tree-id58617 . -3) (undo-tree-id58618 . -3) (undo-tree-id58619 . -3) (undo-tree-id58620 . -3) (undo-tree-id58621 . -3)) nil (25774 62299 513530 687000) 0 nil])
([nil nil ((#("More formally" 0 13 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5306) (undo-tree-id59032 . -12) (undo-tree-id59033 . -13) (undo-tree-id59034 . -13) (undo-tree-id59035 . -13) (undo-tree-id59036 . -13) (undo-tree-id59037 . -13) (undo-tree-id59038 . -13) (undo-tree-id59039 . -13) (undo-tree-id59040 . -13) (undo-tree-id59041 . -13) (undo-tree-id59042 . -13) (undo-tree-id59043 . -13) (undo-tree-id59044 . -13) (undo-tree-id59045 . -13) (undo-tree-id59046 . -13) (undo-tree-id59047 . -13) (undo-tree-id59048 . -13) (undo-tree-id59049 . -13) (undo-tree-id59050 . -13) (undo-tree-id59051 . -13) (undo-tree-id59052 . -13) (undo-tree-id59053 . -13) (undo-tree-id59054 . -13) (undo-tree-id59055 . -13) (undo-tree-id59056 . -13) (undo-tree-id59057 . -13) (undo-tree-id59058 . -13) (undo-tree-id59059 . -13) (t 25774 62299 580536 116000)) nil (25774 62327 171788 105000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5306) (undo-tree-id59030 . -1) (undo-tree-id59031 . -2)) nil (25774 62327 171768 919000) 0 nil])
([nil nil ((5306 . 5307) (#("t" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5306)) nil (25774 62327 171766 772000) 0 nil])
([nil nil ((#(", 𝒛𝒛(𝑖𝑖) ," 0 10 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5334) (undo-tree-id58917 . -9) (undo-tree-id58918 . -9) (undo-tree-id58919 . -9) (undo-tree-id58920 . -9) (undo-tree-id58921 . -10) (undo-tree-id58922 . -9) (undo-tree-id58923 . -3) (undo-tree-id58924 . -3) (undo-tree-id58925 . -3) (undo-tree-id58926 . -3) (undo-tree-id58927 . -3) (undo-tree-id58928 . -3) (undo-tree-id58929 . -3) (undo-tree-id58930 . -3) (undo-tree-id58931 . -3) (undo-tree-id58932 . -3) (undo-tree-id58933 . -3) (undo-tree-id58934 . -3) (undo-tree-id58935 . -3) (undo-tree-id58936 . -3) (undo-tree-id58937 . -3) (undo-tree-id58938 . -3) (undo-tree-id58939 . -3) (undo-tree-id58940 . -3) (undo-tree-id58941 . -3) (undo-tree-id58942 . -3) (undo-tree-id58943 . -3) (undo-tree-id58944 . -4) (undo-tree-id58945 . -4) (undo-tree-id58946 . -4) (undo-tree-id58947 . -4) (undo-tree-id58948 . -4) (undo-tree-id58949 . -4) (undo-tree-id58950 . -4) (undo-tree-id58951 . -4) (undo-tree-id58952 . -4) (undo-tree-id58953 . -4) (undo-tree-id58954 . -4) (undo-tree-id58955 . -4) (undo-tree-id58956 . -4) (undo-tree-id58957 . -4) (undo-tree-id58958 . -4) (undo-tree-id58959 . -4) (undo-tree-id58960 . -4) (undo-tree-id58961 . -4) (undo-tree-id58962 . -4) (undo-tree-id58963 . -4) (undo-tree-id58964 . -4) (undo-tree-id58965 . -6) (undo-tree-id58966 . -6) (undo-tree-id58967 . -6) (undo-tree-id58968 . -6) (undo-tree-id58969 . -6) (undo-tree-id58970 . -6) (undo-tree-id58971 . -6) (undo-tree-id58972 . -6) (undo-tree-id58973 . -6) (undo-tree-id58974 . -6) (undo-tree-id58975 . -6) (undo-tree-id58976 . -6) (undo-tree-id58977 . -6) (undo-tree-id58978 . -6) (undo-tree-id58979 . -6) (undo-tree-id58980 . -6) (undo-tree-id58981 . -6) (undo-tree-id58982 . -6) (undo-tree-id58983 . -6) (undo-tree-id58984 . -6) (undo-tree-id58985 . -6) (undo-tree-id58986 . -7) (undo-tree-id58987 . -7) (undo-tree-id58988 . -7) (undo-tree-id58989 . -7) (undo-tree-id58990 . -7) (undo-tree-id58991 . -7) (undo-tree-id58992 . -7) (undo-tree-id58993 . -7) (undo-tree-id58994 . -7) (undo-tree-id58995 . -7) (undo-tree-id58996 . -7) (undo-tree-id58997 . -7) (undo-tree-id58998 . -7) (undo-tree-id58999 . -7) (undo-tree-id59000 . -7) (undo-tree-id59001 . -7) (undo-tree-id59002 . -7) (undo-tree-id59003 . -7) (undo-tree-id59004 . -7) (undo-tree-id59005 . -7) (undo-tree-id59006 . -7) (undo-tree-id59007 . -9) (undo-tree-id59008 . -9) (undo-tree-id59009 . -9) (undo-tree-id59010 . -9) (undo-tree-id59011 . -9) (undo-tree-id59012 . -9) (undo-tree-id59013 . -9) (undo-tree-id59014 . -9) (undo-tree-id59015 . -9) (undo-tree-id59016 . -9) (undo-tree-id59017 . -9) (undo-tree-id59018 . -9) (undo-tree-id59019 . -9) (undo-tree-id59020 . -9) (undo-tree-id59021 . -9) (undo-tree-id59022 . -9) (undo-tree-id59023 . -9) (undo-tree-id59024 . -9) (undo-tree-id59025 . -9) (undo-tree-id59026 . -9) (undo-tree-id59027 . -9) (undo-tree-id59028 . -9) (undo-tree-id59029 . -10) 5343) nil (25774 62327 171761 666000) 0 nil])
([nil nil ((#(", 𝒙𝒙(𝑗𝑗) (where 𝑗𝑗 𝑗 𝑗𝑗 𝑗 𝑗 𝑗𝑗 )" 0 8 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 8 9 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 9 32 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5379) (undo-tree-id58915 . -31) (undo-tree-id58916 . -32)) nil (25774 62327 171683 5000) 0 nil])
([nil nil ((#("For instance, for the ith input element, the corresponding output value is computed as follows: 𝑇𝑇 𝒛𝒛(𝑖𝑖) = ∑ 𝛼𝛼𝑖𝑖𝑖𝑖 𝒙𝒙(𝑗𝑗) 𝑗𝑗𝑗𝑗 Hence, " 0 10 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 10 83 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 83 84 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 84 95 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 95 96 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 96 98 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 98 99 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 99 123 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 123 124 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 124 128 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 128 129 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 129 136 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5384) (undo-tree-id59206 . -135) (undo-tree-id59207 . -135) (undo-tree-id59208 . -135) (undo-tree-id59209 . -135) (undo-tree-id59210 . -136) (undo-tree-id59211 . -135) (undo-tree-id59212 . -59) (undo-tree-id59213 . -59) (undo-tree-id59214 . -59) (undo-tree-id59215 . -59) (undo-tree-id59216 . -59) (undo-tree-id59217 . -59) (undo-tree-id59218 . -59) (undo-tree-id59219 . -59) (undo-tree-id59220 . -59) (undo-tree-id59221 . -59) (undo-tree-id59222 . -59) (undo-tree-id59223 . -59) (undo-tree-id59224 . -59) (undo-tree-id59225 . -59) (undo-tree-id59226 . -59) (undo-tree-id59227 . -59) (undo-tree-id59228 . -59) (undo-tree-id59229 . -59) (undo-tree-id59230 . -59) (undo-tree-id59231 . -59) (undo-tree-id59232 . -59) (undo-tree-id59233 . -129) (undo-tree-id59234 . -129) (undo-tree-id59235 . -129) (undo-tree-id59236 . -129) (undo-tree-id59237 . -129) (undo-tree-id59238 . -129) (undo-tree-id59239 . -129) (undo-tree-id59240 . -129) (undo-tree-id59241 . -129) (undo-tree-id59242 . -129) (undo-tree-id59243 . -129) (undo-tree-id59244 . -129) (undo-tree-id59245 . -129) (undo-tree-id59246 . -129) (undo-tree-id59247 . -129) (undo-tree-id59248 . -129) (undo-tree-id59249 . -129) (undo-tree-id59250 . -129) (undo-tree-id59251 . -129) (undo-tree-id59252 . -129) (undo-tree-id59253 . -129) (undo-tree-id59254 . -129) (undo-tree-id59255 . -129) (undo-tree-id59256 . -129) (undo-tree-id59257 . -129) (undo-tree-id59258 . -129) (undo-tree-id59259 . -129) (undo-tree-id59260 . -129) (undo-tree-id59261 . -129) (undo-tree-id59262 . -129) (undo-tree-id59263 . -129) (undo-tree-id59264 . -129) (undo-tree-id59265 . -129) (undo-tree-id59266 . -129) (undo-tree-id59267 . -129) (undo-tree-id59268 . -129) (undo-tree-id59269 . -133) (undo-tree-id59270 . -133) (undo-tree-id59271 . -133) (undo-tree-id59272 . -133) (undo-tree-id59273 . -133) (undo-tree-id59274 . -133) (undo-tree-id59275 . -133) (undo-tree-id59276 . -133) (undo-tree-id59277 . -133) (undo-tree-id59278 . -133) (undo-tree-id59279 . -133) (undo-tree-id59280 . -133) (undo-tree-id59281 . -133) (undo-tree-id59282 . -133) (undo-tree-id59283 . -133) (undo-tree-id59284 . -133) (undo-tree-id59285 . -133) (undo-tree-id59286 . -133) (undo-tree-id59287 . -133) (undo-tree-id59288 . -133) (undo-tree-id59289 . -133) (undo-tree-id59290 . -134) (undo-tree-id59291 . -134) (undo-tree-id59292 . -134) (undo-tree-id59293 . -134) (undo-tree-id59294 . -134) (undo-tree-id59295 . -134) (undo-tree-id59296 . -134) (undo-tree-id59297 . -134) (undo-tree-id59298 . -134) (undo-tree-id59299 . -134) (undo-tree-id59300 . -134) (undo-tree-id59301 . -134) (undo-tree-id59302 . -134) (undo-tree-id59303 . -134) (undo-tree-id59304 . -134) (undo-tree-id59305 . -134) (undo-tree-id59306 . -134) (undo-tree-id59307 . -134) (undo-tree-id59308 . -134) (undo-tree-id59309 . -134) (undo-tree-id59310 . -134) (undo-tree-id59311 . -134) (undo-tree-id59312 . -134) (undo-tree-id59313 . -134) (undo-tree-id59314 . -134) (undo-tree-id59315 . -134) (undo-tree-id59316 . -134) (undo-tree-id59317 . -134) (undo-tree-id59318 . -134) (undo-tree-id59319 . -134) (undo-tree-id59320 . -134) (undo-tree-id59321 . -134) (undo-tree-id59322 . -134) (undo-tree-id59323 . -134) (undo-tree-id59324 . -134) (undo-tree-id59325 . -134) (undo-tree-id59326 . -135) (undo-tree-id59327 . -135) (undo-tree-id59328 . -135) (undo-tree-id59329 . -135) (undo-tree-id59330 . -135) (undo-tree-id59331 . -135) (undo-tree-id59332 . -135) (undo-tree-id59333 . -135) (undo-tree-id59334 . -135) (undo-tree-id59335 . -135) (undo-tree-id59336 . -135) (undo-tree-id59337 . -135) (undo-tree-id59338 . -135) (undo-tree-id59339 . -135) (undo-tree-id59340 . -135) (undo-tree-id59341 . -135) (undo-tree-id59342 . -135) (undo-tree-id59343 . -135) (undo-tree-id59344 . -135) (undo-tree-id59345 . -135) (undo-tree-id59346 . -135) (undo-tree-id59347 . -135) (undo-tree-id59348 . -135) (undo-tree-id59349 . -135) (undo-tree-id59350 . -135) (undo-tree-id59351 . -135) (undo-tree-id59352 . -135) (undo-tree-id59353 . -136) 5519 (t 25774 62327 236798 858000)) nil (25774 62382 323090 296000) 0 nil])
([nil nil ((5384 . 5385) (#("w" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5384)) nil (25774 62382 322948 757000) 0 nil])
([nil nil ((#("We " 0 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5384) (undo-tree-id59203 . -2) (undo-tree-id59204 . 2) (undo-tree-id59205 . -3)) nil (25774 62382 322947 607000) 0 nil])
([nil nil ((#("can " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5384) (undo-tree-id59200 . -3) (undo-tree-id59201 . 4) (undo-tree-id59202 . -4)) nil (25774 62382 322943 23000) 0 nil])
([nil nil ((5384 . 5385) (#("t" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5384)) nil (25774 62382 322939 888000) 0 nil])
([nil nil ((#("𝒛𝒛" 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5393) (undo-tree-id59198 . -1) (undo-tree-id59199 . -2)) nil (25774 62382 322938 749000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5393) (undo-tree-id59195 . 1) (undo-tree-id59196 . -1) (undo-tree-id59197 . -1)) nil (25774 62382 322936 300000) 0 nil])
([nil nil ((#("𝑖𝑖" 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5393) (undo-tree-id59193 . -1) (undo-tree-id59194 . -2)) nil (25774 62382 322933 197000) 0 nil])
([nil nil ((#(") " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5393) (undo-tree-id59189 . -1) (undo-tree-id59190 . 2) (undo-tree-id59191 . -1) (undo-tree-id59192 . -2)) nil (25774 62382 322930 583000) 0 nil])
([nil nil ((5395 . 5397) (5393 . 5395)) nil (25774 62382 322926 79000) 0 nil])
([nil nil ((5449 . 5452) (#("𝒙𝒙(𝑖𝑖)" 0 6 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5449) (undo-tree-id59060 . -5) (undo-tree-id59061 . -5) (undo-tree-id59062 . -5) (undo-tree-id59063 . -5) (undo-tree-id59064 . -1) (undo-tree-id59065 . -1) (undo-tree-id59066 . -1) (undo-tree-id59067 . -1) (undo-tree-id59068 . -1) (undo-tree-id59069 . -1) (undo-tree-id59070 . -1) (undo-tree-id59071 . -1) (undo-tree-id59072 . -1) (undo-tree-id59073 . -1) (undo-tree-id59074 . -1) (undo-tree-id59075 . -1) (undo-tree-id59076 . -1) (undo-tree-id59077 . -1) (undo-tree-id59078 . -1) (undo-tree-id59079 . -1) (undo-tree-id59080 . -1) (undo-tree-id59081 . -1) (undo-tree-id59082 . -1) (undo-tree-id59083 . -1) (undo-tree-id59084 . -1) (undo-tree-id59085 . -1) (undo-tree-id59086 . -1) (undo-tree-id59087 . -1) (undo-tree-id59088 . -1) (undo-tree-id59089 . -1) (undo-tree-id59090 . -6) (undo-tree-id59091 . -5) (undo-tree-id59092 . -1) (undo-tree-id59093 . -1) (undo-tree-id59094 . -1) (undo-tree-id59095 . -1) (undo-tree-id59096 . -1) (undo-tree-id59097 . -1) (undo-tree-id59098 . -1) (undo-tree-id59099 . -1) (undo-tree-id59100 . -1) (undo-tree-id59101 . -1) (undo-tree-id59102 . -1) (undo-tree-id59103 . -1) (undo-tree-id59104 . -1) (undo-tree-id59105 . -1) (undo-tree-id59106 . -1) (undo-tree-id59107 . -1) (undo-tree-id59108 . -1) (undo-tree-id59109 . -1) (undo-tree-id59110 . -1) (undo-tree-id59111 . -1) (undo-tree-id59112 . -1) (undo-tree-id59113 . -1) (undo-tree-id59114 . -1) (undo-tree-id59115 . -1) (undo-tree-id59116 . -1) (undo-tree-id59117 . -1) (undo-tree-id59118 . -2) (undo-tree-id59119 . -2) (undo-tree-id59120 . -2) (undo-tree-id59121 . -2) (undo-tree-id59122 . -2) (undo-tree-id59123 . -2) (undo-tree-id59124 . -2) (undo-tree-id59125 . -2) (undo-tree-id59126 . -2) (undo-tree-id59127 . -2) (undo-tree-id59128 . -2) (undo-tree-id59129 . -2) (undo-tree-id59130 . -2) (undo-tree-id59131 . -2) (undo-tree-id59132 . -2) (undo-tree-id59133 . -2) (undo-tree-id59134 . -2) (undo-tree-id59135 . -2) (undo-tree-id59136 . -2) (undo-tree-id59137 . -2) (undo-tree-id59138 . -2) (undo-tree-id59139 . -4) (undo-tree-id59140 . -4) (undo-tree-id59141 . -4) (undo-tree-id59142 . -4) (undo-tree-id59143 . -4) (undo-tree-id59144 . -4) (undo-tree-id59145 . -4) (undo-tree-id59146 . -4) (undo-tree-id59147 . -4) (undo-tree-id59148 . -4) (undo-tree-id59149 . -4) (undo-tree-id59150 . -4) (undo-tree-id59151 . -4) (undo-tree-id59152 . -4) (undo-tree-id59153 . -4) (undo-tree-id59154 . -4) (undo-tree-id59155 . -4) (undo-tree-id59156 . -4) (undo-tree-id59157 . -4) (undo-tree-id59158 . -4) (undo-tree-id59159 . -4) (undo-tree-id59160 . -5) (undo-tree-id59161 . -5) (undo-tree-id59162 . -5) (undo-tree-id59163 . -5) (undo-tree-id59164 . -5) (undo-tree-id59165 . -5) (undo-tree-id59166 . -5) (undo-tree-id59167 . -5) (undo-tree-id59168 . -5) (undo-tree-id59169 . -5) (undo-tree-id59170 . -5) (undo-tree-id59171 . -5) (undo-tree-id59172 . -5) (undo-tree-id59173 . -5) (undo-tree-id59174 . -5) (undo-tree-id59175 . 1) (undo-tree-id59176 . -6) (undo-tree-id59177 . 4) (undo-tree-id59178 . -3) (undo-tree-id59179 . -5) (undo-tree-id59180 . -5) (undo-tree-id59181 . -5) (undo-tree-id59182 . -5) (undo-tree-id59183 . -5) (undo-tree-id59184 . -5) (undo-tree-id59185 . -5) (undo-tree-id59186 . -6) (undo-tree-id59187 . -6) (undo-tree-id59188 . -6) 5454) nil (25774 62382 322914 223000) 0 nil])
([nil nil ((#("Here" 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5552) (undo-tree-id59799 . -3) (undo-tree-id59800 . -4) (t 25774 62382 389323 238000)) nil (25774 62418 281743 281000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5552) (undo-tree-id59796 . -1) (undo-tree-id59797 . 1) (undo-tree-id59798 . -2)) nil (25774 62418 281740 550000) 0 nil])
([nil nil ((5552 . 5553) (#("t" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5552)) nil (25774 62418 281737 619000) 0 nil])
([nil nil ((#(", 𝛼𝛼𝑖𝑖𝑖𝑖," 0 9 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5573) (undo-tree-id59741 . -8) (undo-tree-id59742 . -8) (undo-tree-id59743 . -8) (undo-tree-id59744 . -8) (undo-tree-id59745 . -9) (undo-tree-id59746 . -8) (undo-tree-id59747 . -7) (undo-tree-id59748 . -7) (undo-tree-id59749 . -7) (undo-tree-id59750 . -7) (undo-tree-id59751 . -7) (undo-tree-id59752 . -7) (undo-tree-id59753 . -7) (undo-tree-id59754 . -7) (undo-tree-id59755 . -7) (undo-tree-id59756 . -7) (undo-tree-id59757 . -7) (undo-tree-id59758 . -7) (undo-tree-id59759 . -7) (undo-tree-id59760 . -7) (undo-tree-id59761 . -7) (undo-tree-id59762 . -7) (undo-tree-id59763 . -7) (undo-tree-id59764 . -7) (undo-tree-id59765 . -7) (undo-tree-id59766 . -7) (undo-tree-id59767 . -7) (undo-tree-id59768 . -8) (undo-tree-id59769 . -8) (undo-tree-id59770 . -8) (undo-tree-id59771 . -8) (undo-tree-id59772 . -8) (undo-tree-id59773 . -8) (undo-tree-id59774 . -8) (undo-tree-id59775 . -8) (undo-tree-id59776 . -8) (undo-tree-id59777 . -8) (undo-tree-id59778 . -8) (undo-tree-id59779 . -8) (undo-tree-id59780 . -8) (undo-tree-id59781 . -8) (undo-tree-id59782 . -8) (undo-tree-id59783 . -8) (undo-tree-id59784 . -8) (undo-tree-id59785 . -8) (undo-tree-id59786 . -8) (undo-tree-id59787 . -8) (undo-tree-id59788 . -8) (undo-tree-id59789 . -8) (undo-tree-id59790 . -8) (undo-tree-id59791 . -8) (undo-tree-id59792 . -8) (undo-tree-id59793 . -8) (undo-tree-id59794 . -8) (undo-tree-id59795 . -9) 5581) nil (25774 62418 281734 927000) 0 nil])
([nil nil ((#(", 𝒙𝒙(𝑖𝑖)," 0 9 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5644) (undo-tree-id59639 . -8) (undo-tree-id59640 . -8) (undo-tree-id59641 . -8) (undo-tree-id59642 . -8) (undo-tree-id59643 . -9) (undo-tree-id59644 . -8) (undo-tree-id59645 . -3) (undo-tree-id59646 . -3) (undo-tree-id59647 . -3) (undo-tree-id59648 . -3) (undo-tree-id59649 . -3) (undo-tree-id59650 . -3) (undo-tree-id59651 . -3) (undo-tree-id59652 . -3) (undo-tree-id59653 . -3) (undo-tree-id59654 . -3) (undo-tree-id59655 . -3) (undo-tree-id59656 . -3) (undo-tree-id59657 . -3) (undo-tree-id59658 . -3) (undo-tree-id59659 . -3) (undo-tree-id59660 . -3) (undo-tree-id59661 . -3) (undo-tree-id59662 . -3) (undo-tree-id59663 . -3) (undo-tree-id59664 . -3) (undo-tree-id59665 . -3) (undo-tree-id59666 . -4) (undo-tree-id59667 . -4) (undo-tree-id59668 . -4) (undo-tree-id59669 . -4) (undo-tree-id59670 . -4) (undo-tree-id59671 . -4) (undo-tree-id59672 . -4) (undo-tree-id59673 . -4) (undo-tree-id59674 . -4) (undo-tree-id59675 . -4) (undo-tree-id59676 . -4) (undo-tree-id59677 . -4) (undo-tree-id59678 . -4) (undo-tree-id59679 . -4) (undo-tree-id59680 . -4) (undo-tree-id59681 . -4) (undo-tree-id59682 . -4) (undo-tree-id59683 . -4) (undo-tree-id59684 . -4) (undo-tree-id59685 . -4) (undo-tree-id59686 . -4) (undo-tree-id59687 . -6) (undo-tree-id59688 . -6) (undo-tree-id59689 . -6) (undo-tree-id59690 . -6) (undo-tree-id59691 . -6) (undo-tree-id59692 . -6) (undo-tree-id59693 . -6) (undo-tree-id59694 . -6) (undo-tree-id59695 . -6) (undo-tree-id59696 . -6) (undo-tree-id59697 . -6) (undo-tree-id59698 . -6) (undo-tree-id59699 . -6) (undo-tree-id59700 . -6) (undo-tree-id59701 . -6) (undo-tree-id59702 . -6) (undo-tree-id59703 . -6) (undo-tree-id59704 . -6) (undo-tree-id59705 . -6) (undo-tree-id59706 . -6) (undo-tree-id59707 . -6) (undo-tree-id59708 . -8) (undo-tree-id59709 . -8) (undo-tree-id59710 . -8) (undo-tree-id59711 . -8) (undo-tree-id59712 . -8) (undo-tree-id59713 . -8) (undo-tree-id59714 . -8) (undo-tree-id59715 . -8) (undo-tree-id59716 . -8) (undo-tree-id59717 . -8) (undo-tree-id59718 . -8) (undo-tree-id59719 . -8) (undo-tree-id59720 . -8) (undo-tree-id59721 . -8) (undo-tree-id59722 . -8) (undo-tree-id59723 . -8) (undo-tree-id59724 . -8) (undo-tree-id59725 . -8) (undo-tree-id59726 . -8) (undo-tree-id59727 . -8) (undo-tree-id59728 . -8) (undo-tree-id59729 . -8) (undo-tree-id59730 . -8) (undo-tree-id59731 . -8) (undo-tree-id59732 . -8) (undo-tree-id59733 . -8) (undo-tree-id59734 . -8) (undo-tree-id59735 . -8) (undo-tree-id59736 . -8) (undo-tree-id59737 . -8) (undo-tree-id59738 . -8) (undo-tree-id59739 . -8) (undo-tree-id59740 . -9) 5652) nil (25774 62418 281693 900000) 0 nil])
([nil nil ((#(", 𝒙𝒙(1) . . . 𝒙𝒙(𝑇𝑇)." 0 20 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 20 21 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5689) (undo-tree-id59354 . -20) (undo-tree-id59355 . -20) (undo-tree-id59356 . -20) (undo-tree-id59357 . -20) (undo-tree-id59358 . -21) (undo-tree-id59359 . -20) (undo-tree-id59360 . -3) (undo-tree-id59361 . -3) (undo-tree-id59362 . -3) (undo-tree-id59363 . -3) (undo-tree-id59364 . -3) (undo-tree-id59365 . -3) (undo-tree-id59366 . -3) (undo-tree-id59367 . -3) (undo-tree-id59368 . -3) (undo-tree-id59369 . -3) (undo-tree-id59370 . -3) (undo-tree-id59371 . -3) (undo-tree-id59372 . -3) (undo-tree-id59373 . -3) (undo-tree-id59374 . -3) (undo-tree-id59375 . -3) (undo-tree-id59376 . -3) (undo-tree-id59377 . -3) (undo-tree-id59378 . -3) (undo-tree-id59379 . -3) (undo-tree-id59380 . -3) (undo-tree-id59381 . -4) (undo-tree-id59382 . -4) (undo-tree-id59383 . -4) (undo-tree-id59384 . -4) (undo-tree-id59385 . -4) (undo-tree-id59386 . -4) (undo-tree-id59387 . -4) (undo-tree-id59388 . -4) (undo-tree-id59389 . -4) (undo-tree-id59390 . -4) (undo-tree-id59391 . -4) (undo-tree-id59392 . -4) (undo-tree-id59393 . -4) (undo-tree-id59394 . -4) (undo-tree-id59395 . -4) (undo-tree-id59396 . -4) (undo-tree-id59397 . -4) (undo-tree-id59398 . -4) (undo-tree-id59399 . -4) (undo-tree-id59400 . -4) (undo-tree-id59401 . -4) (undo-tree-id59402 . -5) (undo-tree-id59403 . -5) (undo-tree-id59404 . -5) (undo-tree-id59405 . -5) (undo-tree-id59406 . -5) (undo-tree-id59407 . -5) (undo-tree-id59408 . -5) (undo-tree-id59409 . -5) (undo-tree-id59410 . -5) (undo-tree-id59411 . -5) (undo-tree-id59412 . -5) (undo-tree-id59413 . -5) (undo-tree-id59414 . -5) (undo-tree-id59415 . -5) (undo-tree-id59416 . -5) (undo-tree-id59417 . -5) (undo-tree-id59418 . -5) (undo-tree-id59419 . -5) (undo-tree-id59420 . -5) (undo-tree-id59421 . -5) (undo-tree-id59422 . -5) (undo-tree-id59423 . -6) (undo-tree-id59424 . -6) (undo-tree-id59425 . -6) (undo-tree-id59426 . -6) (undo-tree-id59427 . -6) (undo-tree-id59428 . -6) (undo-tree-id59429 . -6) (undo-tree-id59430 . -6) (undo-tree-id59431 . -6) (undo-tree-id59432 . -6) (undo-tree-id59433 . -6) (undo-tree-id59434 . -6) (undo-tree-id59435 . -6) (undo-tree-id59436 . -6) (undo-tree-id59437 . -6) (undo-tree-id59438 . -6) (undo-tree-id59439 . -6) (undo-tree-id59440 . -6) (undo-tree-id59441 . -6) (undo-tree-id59442 . -6) (undo-tree-id59443 . -6) (undo-tree-id59444 . -6) (undo-tree-id59445 . -6) (undo-tree-id59446 . -6) (undo-tree-id59447 . -6) (undo-tree-id59448 . -6) (undo-tree-id59449 . -6) (undo-tree-id59450 . -6) (undo-tree-id59451 . -6) (undo-tree-id59452 . -6) (undo-tree-id59453 . -6) (undo-tree-id59454 . -8) (undo-tree-id59455 . -8) (undo-tree-id59456 . -8) (undo-tree-id59457 . -8) (undo-tree-id59458 . -8) (undo-tree-id59459 . -8) (undo-tree-id59460 . -8) (undo-tree-id59461 . -8) (undo-tree-id59462 . -8) (undo-tree-id59463 . -8) (undo-tree-id59464 . -8) (undo-tree-id59465 . -8) (undo-tree-id59466 . -8) (undo-tree-id59467 . -8) (undo-tree-id59468 . -8) (undo-tree-id59469 . -8) (undo-tree-id59470 . -8) (undo-tree-id59471 . -8) (undo-tree-id59472 . -8) (undo-tree-id59473 . -8) (undo-tree-id59474 . -8) (undo-tree-id59475 . -10) (undo-tree-id59476 . -10) (undo-tree-id59477 . -10) (undo-tree-id59478 . -10) (undo-tree-id59479 . -10) (undo-tree-id59480 . -10) (undo-tree-id59481 . -10) (undo-tree-id59482 . -10) (undo-tree-id59483 . -10) (undo-tree-id59484 . -10) (undo-tree-id59485 . -10) (undo-tree-id59486 . -10) (undo-tree-id59487 . -10) (undo-tree-id59488 . -10) (undo-tree-id59489 . -10) (undo-tree-id59490 . -10) (undo-tree-id59491 . -10) (undo-tree-id59492 . -10) (undo-tree-id59493 . -10) (undo-tree-id59494 . -10) (undo-tree-id59495 . -10) (undo-tree-id59496 . -12) (undo-tree-id59497 . -12) (undo-tree-id59498 . -12) (undo-tree-id59499 . -12) (undo-tree-id59500 . -12) (undo-tree-id59501 . -12) (undo-tree-id59502 . -12) (undo-tree-id59503 . -12) (undo-tree-id59504 . -12) (undo-tree-id59505 . -12) (undo-tree-id59506 . -12) (undo-tree-id59507 . -12) (undo-tree-id59508 . -12) (undo-tree-id59509 . -12) (undo-tree-id59510 . -12) (undo-tree-id59511 . -12) (undo-tree-id59512 . -12) (undo-tree-id59513 . -12) (undo-tree-id59514 . -12) (undo-tree-id59515 . -12) (undo-tree-id59516 . -12) (undo-tree-id59517 . -15) (undo-tree-id59518 . -15) (undo-tree-id59519 . -15) (undo-tree-id59520 . -15) (undo-tree-id59521 . -15) (undo-tree-id59522 . -15) (undo-tree-id59523 . -15) (undo-tree-id59524 . -15) (undo-tree-id59525 . -15) (undo-tree-id59526 . -15) (undo-tree-id59527 . -15) (undo-tree-id59528 . -15) (undo-tree-id59529 . -15) (undo-tree-id59530 . -15) (undo-tree-id59531 . -15) (undo-tree-id59532 . -15) (undo-tree-id59533 . -15) (undo-tree-id59534 . -15) (undo-tree-id59535 . -15) (undo-tree-id59536 . -15) (undo-tree-id59537 . -15) (undo-tree-id59538 . -16) (undo-tree-id59539 . -16) (undo-tree-id59540 . -16) (undo-tree-id59541 . -16) (undo-tree-id59542 . -16) (undo-tree-id59543 . -16) (undo-tree-id59544 . -16) (undo-tree-id59545 . -16) (undo-tree-id59546 . -16) (undo-tree-id59547 . -16) (undo-tree-id59548 . -16) (undo-tree-id59549 . -16) (undo-tree-id59550 . -16) (undo-tree-id59551 . -16) (undo-tree-id59552 . -16) (undo-tree-id59553 . -16) (undo-tree-id59554 . -16) (undo-tree-id59555 . -16) (undo-tree-id59556 . -16) (undo-tree-id59557 . -16) (undo-tree-id59558 . -16) (undo-tree-id59559 . -16) (undo-tree-id59560 . -16) (undo-tree-id59561 . -16) (undo-tree-id59562 . -16) (undo-tree-id59563 . -16) (undo-tree-id59564 . -18) (undo-tree-id59565 . -18) (undo-tree-id59566 . -18) (undo-tree-id59567 . -18) (undo-tree-id59568 . -18) (undo-tree-id59569 . -18) (undo-tree-id59570 . -18) (undo-tree-id59571 . -18) (undo-tree-id59572 . -18) (undo-tree-id59573 . -18) (undo-tree-id59574 . -18) (undo-tree-id59575 . -18) (undo-tree-id59576 . -18) (undo-tree-id59577 . -18) (undo-tree-id59578 . -18) (undo-tree-id59579 . -18) (undo-tree-id59580 . -18) (undo-tree-id59581 . -18) (undo-tree-id59582 . -18) (undo-tree-id59583 . -18) (undo-tree-id59584 . -18) (undo-tree-id59585 . -18) (undo-tree-id59586 . -18) (undo-tree-id59587 . -18) (undo-tree-id59588 . -18) (undo-tree-id59589 . -18) (undo-tree-id59590 . -18) (undo-tree-id59591 . -18) (undo-tree-id59592 . -18) (undo-tree-id59593 . -18) (undo-tree-id59594 . -18) (undo-tree-id59595 . -19) (undo-tree-id59596 . -19) (undo-tree-id59597 . -19) (undo-tree-id59598 . -19) (undo-tree-id59599 . -19) (undo-tree-id59600 . -19) (undo-tree-id59601 . -19) (undo-tree-id59602 . -19) (undo-tree-id59603 . -19) (undo-tree-id59604 . -19) (undo-tree-id59605 . -19) (undo-tree-id59606 . -19) (undo-tree-id59607 . -19) (undo-tree-id59608 . -19) (undo-tree-id59609 . -19) (undo-tree-id59610 . -19) (undo-tree-id59611 . -19) (undo-tree-id59612 . -19) (undo-tree-id59613 . -19) (undo-tree-id59614 . -19) (undo-tree-id59615 . -19) (undo-tree-id59616 . -20) (undo-tree-id59617 . -20) (undo-tree-id59618 . -20) (undo-tree-id59619 . -20) (undo-tree-id59620 . -20) (undo-tree-id59621 . -20) (undo-tree-id59622 . -20) (undo-tree-id59623 . -20) (undo-tree-id59624 . -20) (undo-tree-id59625 . -20) (undo-tree-id59626 . -20) (undo-tree-id59627 . -20) (undo-tree-id59628 . -20) (undo-tree-id59629 . -20) (undo-tree-id59630 . -20) (undo-tree-id59631 . -20) (undo-tree-id59632 . -20) (undo-tree-id59633 . -20) (undo-tree-id59634 . -20) (undo-tree-id59635 . -20) (undo-tree-id59636 . -20) (undo-tree-id59637 . -20) (undo-tree-id59638 . -21) 5709) nil (25774 62418 281544 489000) 0 nil])
([nil nil ((5689 . 5690)) nil (25774 62418 278380 143000) 0 nil])
([nil nil ((#("More concretely" 0 15 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5694) (undo-tree-id60047 . -14) (undo-tree-id60048 . -15) (t 25774 62418 341665 325000)) nil (25774 62433 991016 481000) 0 nil])
([nil nil ((#(", " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5694) (undo-tree-id60045 . -1) (undo-tree-id60046 . -2)) nil (25774 62433 991014 350000) 0 nil])
([nil nil ((5694 . 5695) (#("t" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5694)) nil (25774 62433 991012 436000) 0 nil])
([nil nil ((5694 . 5695) (#("T" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5694)) nil (25774 62442 620375 967000) 0 nil])
([nil nil ((#("explained" 0 9 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5735) (undo-tree-id60142 . -8) (undo-tree-id60143 . -1) (undo-tree-id60144 . -1) (undo-tree-id60145 . -1) (undo-tree-id60146 . -1) (undo-tree-id60147 . -1) (undo-tree-id60148 . -1) (undo-tree-id60149 . -1) (undo-tree-id60150 . -1) (undo-tree-id60151 . -1) (undo-tree-id60152 . -1) (undo-tree-id60153 . -1) (undo-tree-id60154 . -1) (undo-tree-id60155 . -1) (undo-tree-id60156 . -1) (undo-tree-id60157 . -1) (undo-tree-id60158 . -1) (undo-tree-id60159 . -1) (undo-tree-id60160 . -1) (undo-tree-id60161 . -1) (undo-tree-id60162 . -1) (undo-tree-id60163 . -1) (undo-tree-id60164 . -1) (undo-tree-id60165 . -1) (undo-tree-id60166 . -1) (undo-tree-id60167 . -1) (undo-tree-id60168 . -1) (undo-tree-id60169 . -1) (undo-tree-id60170 . -1) (undo-tree-id60171 . -1) (undo-tree-id60172 . -1) (undo-tree-id60173 . -1) (undo-tree-id60174 . -1) (undo-tree-id60175 . -1) (undo-tree-id60176 . -1) (undo-tree-id60177 . -1) (undo-tree-id60178 . -1) (undo-tree-id60179 . -1) (undo-tree-id60180 . -1) (undo-tree-id60181 . -1) (undo-tree-id60182 . -1) (undo-tree-id60183 . -1) (undo-tree-id60184 . -1) (undo-tree-id60185 . -1) (undo-tree-id60186 . -1) (undo-tree-id60187 . -1) (undo-tree-id60188 . -1) (undo-tree-id60189 . -1) (undo-tree-id60190 . -1) (undo-tree-id60191 . -1) (undo-tree-id60192 . -1) (undo-tree-id60193 . -9) 5736) nil (25774 62452 703943 934000) 0 nil] [nil nil ((5694 . 5695) (#("T" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5694)) ((5694 . 5695) (#("w" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 5694) (undo-tree-id60054 . 1)) (25774 62442 409391 184000) 0 nil])
([nil nil ((#(" in the next paragraphs." 0 24 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5735) (undo-tree-id60139 . -23) (undo-tree-id60140 . -24) (undo-tree-id60141 . -24)) nil (25774 62452 703831 846000) 0 nil])
([nil nil ((#("whis " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 5 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5694) (undo-tree-id60049 . -4) (undo-tree-id60050 . 4) (undo-tree-id60051 . 5) (undo-tree-id60052 . -4) (undo-tree-id60053 . -5)) ((5694 . 5699)) (25774 62442 409092 275000) 0 nil] [nil nil ((#("- whis similarity is computed in two steps explained in the next paragraphs.
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 36 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 36 37 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 37 76 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 76 77 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 5692) (undo-tree-id59801 . -76) (undo-tree-id59802 . -2) (undo-tree-id59803 . -2) (undo-tree-id59804 . 74) (undo-tree-id59805 . -2) (undo-tree-id59806 . -2) (undo-tree-id59807 . -2) (undo-tree-id59808 . -2) (undo-tree-id59809 . -2) (undo-tree-id59810 . -2) (undo-tree-id59811 . -2) (undo-tree-id59812 . -2) (undo-tree-id59813 . -2) (undo-tree-id59814 . -2) (undo-tree-id59815 . -2) (undo-tree-id59816 . -2) (undo-tree-id59817 . -2) (undo-tree-id59818 . -2) (undo-tree-id59819 . -2) (undo-tree-id59820 . -2) (undo-tree-id59821 . -2) (undo-tree-id59822 . -2) (undo-tree-id59823 . -2) (undo-tree-id59824 . -2) (undo-tree-id59825 . -2) (undo-tree-id59826 . -2) (undo-tree-id59827 . -2) (undo-tree-id59828 . -2) (undo-tree-id59829 . -2) (undo-tree-id59830 . -2) (undo-tree-id59831 . -2) (undo-tree-id59832 . -2) (undo-tree-id59833 . -2) (undo-tree-id59834 . -2) (undo-tree-id59835 . -2) (undo-tree-id59836 . -2) (undo-tree-id59837 . -2) (undo-tree-id59838 . -2) (undo-tree-id59839 . -2) (undo-tree-id59840 . -2) (undo-tree-id59841 . -2) (undo-tree-id59842 . -2) (undo-tree-id59843 . -2) (undo-tree-id59844 . -2) (undo-tree-id59845 . -2) (undo-tree-id59846 . -2) (undo-tree-id59847 . -2) (undo-tree-id59848 . -2) (undo-tree-id59849 . -2) (undo-tree-id59850 . -2) (undo-tree-id59851 . -2) (undo-tree-id59852 . -2) (undo-tree-id59853 . -2) (undo-tree-id59854 . -2) (undo-tree-id59855 . -2) (undo-tree-id59856 . -2) (undo-tree-id59857 . -2) (undo-tree-id59858 . -2) (undo-tree-id59859 . -2) (undo-tree-id59860 . -2) (undo-tree-id59861 . -2) (undo-tree-id59862 . -2) (undo-tree-id59863 . -2) (undo-tree-id59864 . -2) (undo-tree-id59865 . -2) (undo-tree-id59866 . -2) (undo-tree-id59867 . -2) (undo-tree-id59868 . -2) (undo-tree-id59869 . -2) (undo-tree-id59870 . -2) (undo-tree-id59871 . -2) (undo-tree-id59872 . -2) (undo-tree-id59873 . -2) (undo-tree-id59874 . -2) (undo-tree-id59875 . -2) (undo-tree-id59876 . -2) (undo-tree-id59877 . -2) (undo-tree-id59878 . -2) (undo-tree-id59879 . -2) (undo-tree-id59880 . -2) (undo-tree-id59881 . -2) (undo-tree-id59882 . -2) (undo-tree-id59883 . -2) (undo-tree-id59884 . -2) (undo-tree-id59885 . -2) (undo-tree-id59886 . -2) (undo-tree-id59887 . -2) (undo-tree-id59888 . -2) (undo-tree-id59889 . -2) (undo-tree-id59890 . -2) (undo-tree-id59891 . -2) (undo-tree-id59892 . -2) (undo-tree-id59893 . -2) (undo-tree-id59894 . -2) (undo-tree-id59895 . -2) (undo-tree-id59896 . -2) (undo-tree-id59897 . -2) (undo-tree-id59898 . -2) (undo-tree-id59899 . -2) (undo-tree-id59900 . -2) (undo-tree-id59901 . -2) (undo-tree-id59902 . -2) (undo-tree-id59903 . -2) (undo-tree-id59904 . -2) (undo-tree-id59905 . -2) (undo-tree-id59906 . -2) (undo-tree-id59907 . -2) (undo-tree-id59908 . -2) (undo-tree-id59909 . -2) (undo-tree-id59910 . -2) (undo-tree-id59911 . -2) (undo-tree-id59912 . -2) (undo-tree-id59913 . -2) (undo-tree-id59914 . -2) (undo-tree-id59915 . -2) (undo-tree-id59916 . -2) (undo-tree-id59917 . -2) (undo-tree-id59918 . -2) (undo-tree-id59919 . -2) (undo-tree-id59920 . -2) (undo-tree-id59921 . -2) (undo-tree-id59922 . -2) (undo-tree-id59923 . -2) (undo-tree-id59924 . -2) (undo-tree-id59925 . -2) (undo-tree-id59926 . -2) (undo-tree-id59927 . -2) (undo-tree-id59928 . -2) (undo-tree-id59929 . -2) (undo-tree-id59930 . -2) (undo-tree-id59931 . -2) (undo-tree-id59932 . -2) (undo-tree-id59933 . -2) (undo-tree-id59934 . -2) (undo-tree-id59935 . -2) (undo-tree-id59936 . -2) (undo-tree-id59937 . -2) (undo-tree-id59938 . -2) (undo-tree-id59939 . -2) (undo-tree-id59940 . -2) (undo-tree-id59941 . -2) (undo-tree-id59942 . -2) (undo-tree-id59943 . -2) (undo-tree-id59944 . -2) (undo-tree-id59945 . -2) (undo-tree-id59946 . -2) (undo-tree-id59947 . -2) (undo-tree-id59948 . -2) (undo-tree-id59949 . -2) (undo-tree-id59950 . -2) (undo-tree-id59951 . -2) (undo-tree-id59952 . -2) (undo-tree-id59953 . -2) (undo-tree-id59954 . -2) (undo-tree-id59955 . -2) (undo-tree-id59956 . -2) (undo-tree-id59957 . -2) (undo-tree-id59958 . -2) (undo-tree-id59959 . -2) (undo-tree-id59960 . -2) (undo-tree-id59961 . -2) (undo-tree-id59962 . -2) (undo-tree-id59963 . -2) (undo-tree-id59964 . -2) (undo-tree-id59965 . -2) (undo-tree-id59966 . -2) (undo-tree-id59967 . -2) (undo-tree-id59968 . -2) (undo-tree-id59969 . -2) (undo-tree-id59970 . -2) (undo-tree-id59971 . -2) (undo-tree-id59972 . -2) (undo-tree-id59973 . -2) (undo-tree-id59974 . -2) (undo-tree-id59975 . -2) (undo-tree-id59976 . -2) (undo-tree-id59977 . -2) (undo-tree-id59978 . -2) (undo-tree-id59979 . -2) (undo-tree-id59980 . -2) (undo-tree-id59981 . -2) (undo-tree-id59982 . -2) (undo-tree-id59983 . -2) (undo-tree-id59984 . -2) (undo-tree-id59985 . -2) (undo-tree-id59986 . -2) (undo-tree-id59987 . -2) (undo-tree-id59988 . -2) (undo-tree-id59989 . -2) (undo-tree-id59990 . -2) (undo-tree-id59991 . -2) (undo-tree-id59992 . -2) (undo-tree-id59993 . 75) (undo-tree-id59994 . -6) (undo-tree-id59995 . -2) (undo-tree-id59996 . -2) (undo-tree-id59997 . -2) (undo-tree-id59998 . -2) (undo-tree-id59999 . -2) (undo-tree-id60000 . -2) (undo-tree-id60001 . -2) (undo-tree-id60002 . -2) (undo-tree-id60003 . -2) (undo-tree-id60004 . -2) (undo-tree-id60005 . -2) (undo-tree-id60006 . -2) (undo-tree-id60007 . -2) (undo-tree-id60008 . -2) (undo-tree-id60009 . -2) (undo-tree-id60010 . -2) (undo-tree-id60011 . -2) (undo-tree-id60012 . -2) (undo-tree-id60013 . -2) (undo-tree-id60014 . -2) (undo-tree-id60015 . -2) (undo-tree-id60016 . -77) (undo-tree-id60017 . -77) (undo-tree-id60018 . -77) (undo-tree-id60019 . -77) (undo-tree-id60020 . -77) (undo-tree-id60021 . -77) (undo-tree-id60022 . -77) (undo-tree-id60023 . -77) (undo-tree-id60024 . -77) (undo-tree-id60025 . -77) (undo-tree-id60026 . -77) (undo-tree-id60027 . -65) (undo-tree-id60028 . -65) (undo-tree-id60029 . -65) (undo-tree-id60030 . -65) (undo-tree-id60031 . -65) (undo-tree-id60032 . -65) (undo-tree-id60033 . -65) (undo-tree-id60034 . -65) (undo-tree-id60035 . -65) (undo-tree-id60036 . -65) (undo-tree-id60037 . -65) (undo-tree-id60038 . -65) (undo-tree-id60039 . -65) (undo-tree-id60040 . -65) (undo-tree-id60041 . -65) (undo-tree-id60042 . -65) (undo-tree-id60043 . -77)) ((5692 . 5769)) (25774 62433 990994 472000) 0 nil])
([nil nil ((5734 . 5735) (#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -5734) (undo-tree-id60055 . -1) (undo-tree-id60056 . -1) (undo-tree-id60057 . -1) (undo-tree-id60058 . -1) (undo-tree-id60059 . -1) (undo-tree-id60060 . -1) (undo-tree-id60061 . -1) (undo-tree-id60062 . -1) (undo-tree-id60063 . -1) (undo-tree-id60064 . -1) (undo-tree-id60065 . -1) (undo-tree-id60066 . -1) (undo-tree-id60067 . -1) (undo-tree-id60068 . -1) (undo-tree-id60069 . -1) (undo-tree-id60070 . -1) (undo-tree-id60071 . -1) (undo-tree-id60072 . -1) (undo-tree-id60073 . -1) (undo-tree-id60074 . -1) (undo-tree-id60075 . -1) (undo-tree-id60076 . -1) (undo-tree-id60077 . -1) (undo-tree-id60078 . -1) (undo-tree-id60079 . -1) (undo-tree-id60080 . -1) (undo-tree-id60081 . -1) (undo-tree-id60082 . -1) (undo-tree-id60083 . -1) (undo-tree-id60084 . -1) (undo-tree-id60085 . -1) (undo-tree-id60086 . -1) (undo-tree-id60087 . -1) (undo-tree-id60088 . -1) (undo-tree-id60089 . -1) (undo-tree-id60090 . -1) (undo-tree-id60091 . -1) (undo-tree-id60092 . -1) (undo-tree-id60093 . -1) (undo-tree-id60094 . -1) (undo-tree-id60095 . -1) (undo-tree-id60096 . -1) (undo-tree-id60097 . -1) (undo-tree-id60098 . -1) (undo-tree-id60099 . -1) (undo-tree-id60100 . -1) (undo-tree-id60101 . -1) (undo-tree-id60102 . -1) (undo-tree-id60103 . -1) (undo-tree-id60104 . -1) (undo-tree-id60105 . -1) (undo-tree-id60106 . -1) (undo-tree-id60107 . -1) (undo-tree-id60108 . -1) (undo-tree-id60109 . -1) (undo-tree-id60110 . -1) (undo-tree-id60111 . -1) (undo-tree-id60112 . -1) (undo-tree-id60113 . -1) (undo-tree-id60114 . -1) (undo-tree-id60115 . -1) (undo-tree-id60116 . -1) (undo-tree-id60117 . -1) (undo-tree-id60118 . -1) (undo-tree-id60119 . -1) (undo-tree-id60120 . -1) (undo-tree-id60121 . -1) (undo-tree-id60122 . -1) (undo-tree-id60123 . -1) (undo-tree-id60124 . -1) (undo-tree-id60125 . -1) (undo-tree-id60126 . -1) (undo-tree-id60127 . -1) (undo-tree-id60128 . -1) (undo-tree-id60129 . -1) (undo-tree-id60130 . -1) (undo-tree-id60131 . -1) (undo-tree-id60132 . -1) (undo-tree-id60133 . -1) (undo-tree-id60134 . -1) (undo-tree-id60135 . -1) (undo-tree-id60136 . -1) (undo-tree-id60137 . -1) (undo-tree-id60138 . -1) 5735) nil (25774 62452 703821 435000) 0 nil])
nil
nil
([nil nil ((#("𝒙𝒙(𝑖𝑖)," 0 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5808) (undo-tree-id62425 . -6) (undo-tree-id62426 . -6) (undo-tree-id62427 . -6) (undo-tree-id62428 . -6) (undo-tree-id62429 . -7) (undo-tree-id62430 . -6) (undo-tree-id62431 . -1) (undo-tree-id62432 . -1) (undo-tree-id62433 . -1) (undo-tree-id62434 . -1) (undo-tree-id62435 . -1) (undo-tree-id62436 . -1) (undo-tree-id62437 . -1) (undo-tree-id62438 . -1) (undo-tree-id62439 . -1) (undo-tree-id62440 . -1) (undo-tree-id62441 . -1) (undo-tree-id62442 . -1) (undo-tree-id62443 . -1) (undo-tree-id62444 . -1) (undo-tree-id62445 . -1) (undo-tree-id62446 . -1) (undo-tree-id62447 . -1) (undo-tree-id62448 . -1) (undo-tree-id62449 . -1) (undo-tree-id62450 . -1) (undo-tree-id62451 . -1) (undo-tree-id62452 . -2) (undo-tree-id62453 . -2) (undo-tree-id62454 . -2) (undo-tree-id62455 . -2) (undo-tree-id62456 . -2) (undo-tree-id62457 . -2) (undo-tree-id62458 . -2) (undo-tree-id62459 . -2) (undo-tree-id62460 . -2) (undo-tree-id62461 . -2) (undo-tree-id62462 . -2) (undo-tree-id62463 . -2) (undo-tree-id62464 . -2) (undo-tree-id62465 . -2) (undo-tree-id62466 . -2) (undo-tree-id62467 . -2) (undo-tree-id62468 . -2) (undo-tree-id62469 . -2) (undo-tree-id62470 . -2) (undo-tree-id62471 . -2) (undo-tree-id62472 . -2) (undo-tree-id62473 . -2) (undo-tree-id62474 . -2) (undo-tree-id62475 . -2) (undo-tree-id62476 . -2) (undo-tree-id62477 . -2) (undo-tree-id62478 . -4) (undo-tree-id62479 . -4) (undo-tree-id62480 . -4) (undo-tree-id62481 . -4) (undo-tree-id62482 . -4) (undo-tree-id62483 . -4) (undo-tree-id62484 . -4) (undo-tree-id62485 . -4) (undo-tree-id62486 . -4) (undo-tree-id62487 . -4) (undo-tree-id62488 . -4) (undo-tree-id62489 . -4) (undo-tree-id62490 . -4) (undo-tree-id62491 . -4) (undo-tree-id62492 . -4) (undo-tree-id62493 . -4) (undo-tree-id62494 . -4) (undo-tree-id62495 . -4) (undo-tree-id62496 . -4) (undo-tree-id62497 . -4) (undo-tree-id62498 . -4) (undo-tree-id62499 . -6) (undo-tree-id62500 . -6) (undo-tree-id62501 . -6) (undo-tree-id62502 . -6) (undo-tree-id62503 . -6) (undo-tree-id62504 . -6) (undo-tree-id62505 . -6) (undo-tree-id62506 . -6) (undo-tree-id62507 . -6) (undo-tree-id62508 . -6) (undo-tree-id62509 . -6) (undo-tree-id62510 . -6) (undo-tree-id62511 . -6) (undo-tree-id62512 . -6) (undo-tree-id62513 . -6) (undo-tree-id62514 . -6) (undo-tree-id62515 . -6) (undo-tree-id62516 . -6) (undo-tree-id62517 . -6) (undo-tree-id62518 . -6) (undo-tree-id62519 . -6) (undo-tree-id62520 . -6) (undo-tree-id62521 . -6) (undo-tree-id62522 . -6) (undo-tree-id62523 . -6) (undo-tree-id62524 . -6) (undo-tree-id62525 . -6) (undo-tree-id62526 . -6) (undo-tree-id62527 . -6) (undo-tree-id62528 . -6) (undo-tree-id62529 . -6) (undo-tree-id62530 . -6) (undo-tree-id62531 . -6) (undo-tree-id62532 . -6) (undo-tree-id62533 . -6) (undo-tree-id62534 . -6) (undo-tree-id62535 . -6) (undo-tree-id62536 . -6) (undo-tree-id62537 . -6) (undo-tree-id62538 . -6) (undo-tree-id62539 . -6) (undo-tree-id62540 . -6) (undo-tree-id62541 . -6) (undo-tree-id62542 . -6) (undo-tree-id62543 . -6) (undo-tree-id62544 . -6) (undo-tree-id62545 . -6) (undo-tree-id62546 . -7) 5814 (t 25774 62452 769993 79000)) nil (25774 62484 86846 588000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5807) (undo-tree-id62238 . -1) (undo-tree-id62239 . -1) (undo-tree-id62240 . -1) (undo-tree-id62241 . -1) (undo-tree-id62242 . -1) (undo-tree-id62243 . -1) (undo-tree-id62244 . -1) (undo-tree-id62245 . -1) (undo-tree-id62246 . -1) (undo-tree-id62247 . -1) (undo-tree-id62248 . -1) (undo-tree-id62249 . -1) (undo-tree-id62250 . -1) (undo-tree-id62251 . -1) (undo-tree-id62252 . -1) (undo-tree-id62253 . -1) (undo-tree-id62254 . -1) (undo-tree-id62255 . -1) (undo-tree-id62256 . -1) (undo-tree-id62257 . -1) (undo-tree-id62258 . -1) (undo-tree-id62259 . -1) (undo-tree-id62260 . -1) (undo-tree-id62261 . -1) (undo-tree-id62262 . -1) (undo-tree-id62263 . -1) (undo-tree-id62264 . -1) (undo-tree-id62265 . -1) (undo-tree-id62266 . -1) (undo-tree-id62267 . -1) (undo-tree-id62268 . -1) (undo-tree-id62269 . -1) (undo-tree-id62270 . -1) (undo-tree-id62271 . -1) (undo-tree-id62272 . -1) (undo-tree-id62273 . -1) (undo-tree-id62274 . -1) (undo-tree-id62275 . -1) (undo-tree-id62276 . -1) (undo-tree-id62277 . -1) (undo-tree-id62278 . -1) (undo-tree-id62279 . -1) (undo-tree-id62280 . -1) (undo-tree-id62281 . -1) (undo-tree-id62282 . -1) (undo-tree-id62283 . -1) (undo-tree-id62284 . -1) (undo-tree-id62285 . -1) (undo-tree-id62286 . -1) (undo-tree-id62287 . -1) (undo-tree-id62288 . -1) (undo-tree-id62289 . -1) (undo-tree-id62290 . -1) (undo-tree-id62291 . -1) (undo-tree-id62292 . -1) (undo-tree-id62293 . -1) (undo-tree-id62294 . -1) (undo-tree-id62295 . -1) (undo-tree-id62296 . -1) (undo-tree-id62297 . -1) (undo-tree-id62298 . -1) (undo-tree-id62299 . -1) (undo-tree-id62300 . -1) (undo-tree-id62301 . -1) (undo-tree-id62302 . -1) (undo-tree-id62303 . -1) (undo-tree-id62304 . -1) (undo-tree-id62305 . -1) (undo-tree-id62306 . -1) (undo-tree-id62307 . -1) (undo-tree-id62308 . -1) (undo-tree-id62309 . -1) (undo-tree-id62310 . -1) (undo-tree-id62311 . -1) (undo-tree-id62312 . -1) (undo-tree-id62313 . -1) (undo-tree-id62314 . -1) (undo-tree-id62315 . -1) (undo-tree-id62316 . -1) (undo-tree-id62317 . -1) (undo-tree-id62318 . -1) (undo-tree-id62319 . -1) (undo-tree-id62320 . -1) (undo-tree-id62321 . -1) (undo-tree-id62322 . -1) (undo-tree-id62323 . -1) (undo-tree-id62324 . -1) (undo-tree-id62325 . -1) (undo-tree-id62326 . -1) (undo-tree-id62327 . -1) (undo-tree-id62328 . -1) (undo-tree-id62329 . -1) (undo-tree-id62330 . -1) (undo-tree-id62331 . -1) (undo-tree-id62332 . -1) (undo-tree-id62333 . -1) (undo-tree-id62334 . -1) (undo-tree-id62335 . -1) (undo-tree-id62336 . -1) (undo-tree-id62337 . -1) (undo-tree-id62338 . -1) (undo-tree-id62339 . -1) (undo-tree-id62340 . -1) (undo-tree-id62341 . -1) (undo-tree-id62342 . -1) (undo-tree-id62343 . -1) (undo-tree-id62344 . -1) (undo-tree-id62345 . -1) (undo-tree-id62346 . -1) (undo-tree-id62347 . -1) (undo-tree-id62348 . -1) (undo-tree-id62349 . -1) (undo-tree-id62350 . -1) (undo-tree-id62351 . -1) (undo-tree-id62352 . -1) (undo-tree-id62353 . -1) (undo-tree-id62354 . -1) (undo-tree-id62355 . -1) (undo-tree-id62356 . -1) (undo-tree-id62357 . -1) (undo-tree-id62358 . -1) (undo-tree-id62359 . -1) (undo-tree-id62360 . -1) (undo-tree-id62361 . -1) (undo-tree-id62362 . -1) (undo-tree-id62363 . -1) (undo-tree-id62364 . -1) (undo-tree-id62365 . -1) (undo-tree-id62366 . -1) (undo-tree-id62367 . -1) (undo-tree-id62368 . -1) (undo-tree-id62369 . -1) (undo-tree-id62370 . -1) (undo-tree-id62371 . -1) (undo-tree-id62372 . -1) (undo-tree-id62373 . -1) (undo-tree-id62374 . -1) (undo-tree-id62375 . -1) (undo-tree-id62376 . -1) (undo-tree-id62377 . -1) (undo-tree-id62378 . -1) (undo-tree-id62379 . -1) (undo-tree-id62380 . -1) (undo-tree-id62381 . -1) (undo-tree-id62382 . -1) (undo-tree-id62383 . -1) (undo-tree-id62384 . -1) (undo-tree-id62385 . -1) (undo-tree-id62386 . -1) (undo-tree-id62387 . -1) (undo-tree-id62388 . -1) (undo-tree-id62389 . -1) (undo-tree-id62390 . -1) (undo-tree-id62391 . -1) (undo-tree-id62392 . -1) (undo-tree-id62393 . -1) (undo-tree-id62394 . -1) (undo-tree-id62395 . -1) (undo-tree-id62396 . -1) (undo-tree-id62397 . -1) (undo-tree-id62398 . -1) (undo-tree-id62399 . -1) (undo-tree-id62400 . -1) (undo-tree-id62401 . -1) (undo-tree-id62402 . -1) (undo-tree-id62403 . -1) (undo-tree-id62404 . -1) (undo-tree-id62405 . -1) (undo-tree-id62406 . -1) (undo-tree-id62407 . -1) (undo-tree-id62408 . -1) (undo-tree-id62409 . -1) (undo-tree-id62410 . -1) (undo-tree-id62411 . -1) (undo-tree-id62412 . -1) (undo-tree-id62413 . -1) (undo-tree-id62414 . -1) (undo-tree-id62415 . -1) (undo-tree-id62416 . -1) (undo-tree-id62417 . -1) (undo-tree-id62418 . -1) (undo-tree-id62419 . -1) (undo-tree-id62420 . -1) (undo-tree-id62421 . -1) (undo-tree-id62422 . -1) (undo-tree-id62423 . -1) (undo-tree-id62424 . -1)) nil (25774 62484 86774 480000) 0 nil])
([nil nil ((#("𝒙𝒙(𝑗𝑗): ⊤ ω𝑖𝑖𝑖𝑖 = 𝒙𝒙(𝑖𝑖)" 0 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 7 8 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 8 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 9 10 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 10 23 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 23 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 5851) (undo-tree-id61918 . -23) (undo-tree-id61919 . -23) (undo-tree-id61920 . -23) (undo-tree-id61921 . -23) (undo-tree-id61922 . -1) (undo-tree-id61923 . -1) (undo-tree-id61924 . -1) (undo-tree-id61925 . -1) (undo-tree-id61926 . -1) (undo-tree-id61927 . -1) (undo-tree-id61928 . -1) (undo-tree-id61929 . -1) (undo-tree-id61930 . -1) (undo-tree-id61931 . -1) (undo-tree-id61932 . -1) (undo-tree-id61933 . -1) (undo-tree-id61934 . -1) (undo-tree-id61935 . -1) (undo-tree-id61936 . -1) (undo-tree-id61937 . -1) (undo-tree-id61938 . -1) (undo-tree-id61939 . -1) (undo-tree-id61940 . -1) (undo-tree-id61941 . -1) (undo-tree-id61942 . -1) (undo-tree-id61943 . -24) (undo-tree-id61944 . -23) (undo-tree-id61945 . -1) (undo-tree-id61946 . -1) (undo-tree-id61947 . -1) (undo-tree-id61948 . -1) (undo-tree-id61949 . -1) (undo-tree-id61950 . -1) (undo-tree-id61951 . -1) (undo-tree-id61952 . -1) (undo-tree-id61953 . -1) (undo-tree-id61954 . -1) (undo-tree-id61955 . -1) (undo-tree-id61956 . -1) (undo-tree-id61957 . -1) (undo-tree-id61958 . -1) (undo-tree-id61959 . -1) (undo-tree-id61960 . -1) (undo-tree-id61961 . -1) (undo-tree-id61962 . -1) (undo-tree-id61963 . -1) (undo-tree-id61964 . -1) (undo-tree-id61965 . -1) (undo-tree-id61966 . -2) (undo-tree-id61967 . -2) (undo-tree-id61968 . -2) (undo-tree-id61969 . -2) (undo-tree-id61970 . -2) (undo-tree-id61971 . -2) (undo-tree-id61972 . -2) (undo-tree-id61973 . -2) (undo-tree-id61974 . -2) (undo-tree-id61975 . -2) (undo-tree-id61976 . -2) (undo-tree-id61977 . -2) (undo-tree-id61978 . -2) (undo-tree-id61979 . -2) (undo-tree-id61980 . -2) (undo-tree-id61981 . -2) (undo-tree-id61982 . -2) (undo-tree-id61983 . -2) (undo-tree-id61984 . -2) (undo-tree-id61985 . -2) (undo-tree-id61986 . -2) (undo-tree-id61987 . -4) (undo-tree-id61988 . -4) (undo-tree-id61989 . -4) (undo-tree-id61990 . -4) (undo-tree-id61991 . -4) (undo-tree-id61992 . -4) (undo-tree-id61993 . -4) (undo-tree-id61994 . -4) (undo-tree-id61995 . -4) (undo-tree-id61996 . -4) (undo-tree-id61997 . -4) (undo-tree-id61998 . -4) (undo-tree-id61999 . -4) (undo-tree-id62000 . -4) (undo-tree-id62001 . -4) (undo-tree-id62002 . -4) (undo-tree-id62003 . -4) (undo-tree-id62004 . -4) (undo-tree-id62005 . -4) (undo-tree-id62006 . -4) (undo-tree-id62007 . -4) (undo-tree-id62008 . -6) (undo-tree-id62009 . -6) (undo-tree-id62010 . -6) (undo-tree-id62011 . -6) (undo-tree-id62012 . -6) (undo-tree-id62013 . -6) (undo-tree-id62014 . -6) (undo-tree-id62015 . -6) (undo-tree-id62016 . -6) (undo-tree-id62017 . -6) (undo-tree-id62018 . -6) (undo-tree-id62019 . -6) (undo-tree-id62020 . -6) (undo-tree-id62021 . -6) (undo-tree-id62022 . -6) (undo-tree-id62023 . -6) (undo-tree-id62024 . -6) (undo-tree-id62025 . -6) (undo-tree-id62026 . -6) (undo-tree-id62027 . -6) (undo-tree-id62028 . -6) (undo-tree-id62029 . -8) (undo-tree-id62030 . -8) (undo-tree-id62031 . -8) (undo-tree-id62032 . -8) (undo-tree-id62033 . -8) (undo-tree-id62034 . -8) (undo-tree-id62035 . -8) (undo-tree-id62036 . -8) (undo-tree-id62037 . -8) (undo-tree-id62038 . -8) (undo-tree-id62039 . -8) (undo-tree-id62040 . -8) (undo-tree-id62041 . -8) (undo-tree-id62042 . -8) (undo-tree-id62043 . -8) (undo-tree-id62044 . -8) (undo-tree-id62045 . -8) (undo-tree-id62046 . -8) (undo-tree-id62047 . -8) (undo-tree-id62048 . -8) (undo-tree-id62049 . -8) (undo-tree-id62050 . -10) (undo-tree-id62051 . -10) (undo-tree-id62052 . -10) (undo-tree-id62053 . -10) (undo-tree-id62054 . -10) (undo-tree-id62055 . -10) (undo-tree-id62056 . -10) (undo-tree-id62057 . -10) (undo-tree-id62058 . -10) (undo-tree-id62059 . -10) (undo-tree-id62060 . -10) (undo-tree-id62061 . -10) (undo-tree-id62062 . -10) (undo-tree-id62063 . -10) (undo-tree-id62064 . -10) (undo-tree-id62065 . -10) (undo-tree-id62066 . -10) (undo-tree-id62067 . -10) (undo-tree-id62068 . -10) (undo-tree-id62069 . -10) (undo-tree-id62070 . -10) (undo-tree-id62071 . -10) (undo-tree-id62072 . -10) (undo-tree-id62073 . -10) (undo-tree-id62074 . -10) (undo-tree-id62075 . -10) (undo-tree-id62076 . -10) (undo-tree-id62077 . -10) (undo-tree-id62078 . -10) (undo-tree-id62079 . -10) (undo-tree-id62080 . -10) (undo-tree-id62081 . -10) (undo-tree-id62082 . -10) (undo-tree-id62083 . -10) (undo-tree-id62084 . -10) (undo-tree-id62085 . -10) (undo-tree-id62086 . -14) (undo-tree-id62087 . -14) (undo-tree-id62088 . -14) (undo-tree-id62089 . -14) (undo-tree-id62090 . -14) (undo-tree-id62091 . -14) (undo-tree-id62092 . -14) (undo-tree-id62093 . -14) (undo-tree-id62094 . -14) (undo-tree-id62095 . -14) (undo-tree-id62096 . -14) (undo-tree-id62097 . -14) (undo-tree-id62098 . -14) (undo-tree-id62099 . -14) (undo-tree-id62100 . -14) (undo-tree-id62101 . -14) (undo-tree-id62102 . -14) (undo-tree-id62103 . -14) (undo-tree-id62104 . -14) (undo-tree-id62105 . -14) (undo-tree-id62106 . -14) (undo-tree-id62107 . -14) (undo-tree-id62108 . -14) (undo-tree-id62109 . -14) (undo-tree-id62110 . -14) (undo-tree-id62111 . -14) (undo-tree-id62112 . -14) (undo-tree-id62113 . -14) (undo-tree-id62114 . -14) (undo-tree-id62115 . -14) (undo-tree-id62116 . -14) (undo-tree-id62117 . -14) (undo-tree-id62118 . -14) (undo-tree-id62119 . -14) (undo-tree-id62120 . -14) (undo-tree-id62121 . -14) (undo-tree-id62122 . -16) (undo-tree-id62123 . -16) (undo-tree-id62124 . -16) (undo-tree-id62125 . -16) (undo-tree-id62126 . -16) (undo-tree-id62127 . -16) (undo-tree-id62128 . -16) (undo-tree-id62129 . -16) (undo-tree-id62130 . -16) (undo-tree-id62131 . -16) (undo-tree-id62132 . -16) (undo-tree-id62133 . -16) (undo-tree-id62134 . -16) (undo-tree-id62135 . -16) (undo-tree-id62136 . -16) (undo-tree-id62137 . -16) (undo-tree-id62138 . -16) (undo-tree-id62139 . -16) (undo-tree-id62140 . -16) (undo-tree-id62141 . -16) (undo-tree-id62142 . -16) (undo-tree-id62143 . -19) (undo-tree-id62144 . -19) (undo-tree-id62145 . -19) (undo-tree-id62146 . -19) (undo-tree-id62147 . -19) (undo-tree-id62148 . -19) (undo-tree-id62149 . -19) (undo-tree-id62150 . -19) (undo-tree-id62151 . -19) (undo-tree-id62152 . -19) (undo-tree-id62153 . -19) (undo-tree-id62154 . -19) (undo-tree-id62155 . -19) (undo-tree-id62156 . -19) (undo-tree-id62157 . -19) (undo-tree-id62158 . -19) (undo-tree-id62159 . -19) (undo-tree-id62160 . -19) (undo-tree-id62161 . -19) (undo-tree-id62162 . -19) (undo-tree-id62163 . -19) (undo-tree-id62164 . -20) (undo-tree-id62165 . -20) (undo-tree-id62166 . -20) (undo-tree-id62167 . -20) (undo-tree-id62168 . -20) (undo-tree-id62169 . -20) (undo-tree-id62170 . -20) (undo-tree-id62171 . -20) (undo-tree-id62172 . -20) (undo-tree-id62173 . -20) (undo-tree-id62174 . -20) (undo-tree-id62175 . -20) (undo-tree-id62176 . -20) (undo-tree-id62177 . -20) (undo-tree-id62178 . -20) (undo-tree-id62179 . -20) (undo-tree-id62180 . -20) (undo-tree-id62181 . -20) (undo-tree-id62182 . -20) (undo-tree-id62183 . -20) (undo-tree-id62184 . -20) (undo-tree-id62185 . -22) (undo-tree-id62186 . -22) (undo-tree-id62187 . -22) (undo-tree-id62188 . -22) (undo-tree-id62189 . -22) (undo-tree-id62190 . -22) (undo-tree-id62191 . -22) (undo-tree-id62192 . -22) (undo-tree-id62193 . -22) (undo-tree-id62194 . -22) (undo-tree-id62195 . -22) (undo-tree-id62196 . -22) (undo-tree-id62197 . -22) (undo-tree-id62198 . -22) (undo-tree-id62199 . -22) (undo-tree-id62200 . -22) (undo-tree-id62201 . -22) (undo-tree-id62202 . -22) (undo-tree-id62203 . -22) (undo-tree-id62204 . -22) (undo-tree-id62205 . -22) (undo-tree-id62206 . -22) (undo-tree-id62207 . -22) (undo-tree-id62208 . -22) (undo-tree-id62209 . -22) (undo-tree-id62210 . -22) (undo-tree-id62211 . -23) (undo-tree-id62212 . -23) (undo-tree-id62213 . -23) (undo-tree-id62214 . -23) (undo-tree-id62215 . -23) (undo-tree-id62216 . -23) (undo-tree-id62217 . -23) (undo-tree-id62218 . -23) (undo-tree-id62219 . -23) (undo-tree-id62220 . -23) (undo-tree-id62221 . -23) (undo-tree-id62222 . -23) (undo-tree-id62223 . -23) (undo-tree-id62224 . -23) (undo-tree-id62225 . -23) (undo-tree-id62226 . 1) (undo-tree-id62227 . -24) (undo-tree-id62228 . 4) (undo-tree-id62229 . -21) (undo-tree-id62230 . -23) (undo-tree-id62231 . -23) (undo-tree-id62232 . -23) (undo-tree-id62233 . -23) (undo-tree-id62234 . -23) (undo-tree-id62235 . -23) (undo-tree-id62236 . -23) (undo-tree-id62237 . -24) 5874) nil (25774 62484 86656 279000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5850) (undo-tree-id61559 . -1) (undo-tree-id61560 . -1) (undo-tree-id61561 . -1) (undo-tree-id61562 . -1) (undo-tree-id61563 . -1) (undo-tree-id61564 . -1) (undo-tree-id61565 . -1) (undo-tree-id61566 . -1) (undo-tree-id61567 . -1) (undo-tree-id61568 . -1) (undo-tree-id61569 . -1) (undo-tree-id61570 . -1) (undo-tree-id61571 . -1) (undo-tree-id61572 . -1) (undo-tree-id61573 . -1) (undo-tree-id61574 . -1) (undo-tree-id61575 . -1) (undo-tree-id61576 . -1) (undo-tree-id61577 . -1) (undo-tree-id61578 . -1) (undo-tree-id61579 . -1) (undo-tree-id61580 . -1) (undo-tree-id61581 . -1) (undo-tree-id61582 . -1) (undo-tree-id61583 . -1) (undo-tree-id61584 . -1) (undo-tree-id61585 . -1) (undo-tree-id61586 . -1) (undo-tree-id61587 . -1) (undo-tree-id61588 . -1) (undo-tree-id61589 . -1) (undo-tree-id61590 . -1) (undo-tree-id61591 . -1) (undo-tree-id61592 . -1) (undo-tree-id61593 . -1) (undo-tree-id61594 . -1) (undo-tree-id61595 . -1) (undo-tree-id61596 . -1) (undo-tree-id61597 . -1) (undo-tree-id61598 . -1) (undo-tree-id61599 . -1) (undo-tree-id61600 . -1) (undo-tree-id61601 . -1) (undo-tree-id61602 . -1) (undo-tree-id61603 . -1) (undo-tree-id61604 . -1) (undo-tree-id61605 . -1) (undo-tree-id61606 . -1) (undo-tree-id61607 . -1) (undo-tree-id61608 . -1) (undo-tree-id61609 . -1) (undo-tree-id61610 . -1) (undo-tree-id61611 . -1) (undo-tree-id61612 . -1) (undo-tree-id61613 . -1) (undo-tree-id61614 . -1) (undo-tree-id61615 . -1) (undo-tree-id61616 . -1) (undo-tree-id61617 . -1) (undo-tree-id61618 . -1) (undo-tree-id61619 . -1) (undo-tree-id61620 . -1) (undo-tree-id61621 . -1) (undo-tree-id61622 . -1) (undo-tree-id61623 . -1) (undo-tree-id61624 . -1) (undo-tree-id61625 . -1) (undo-tree-id61626 . -1) (undo-tree-id61627 . -1) (undo-tree-id61628 . -1) (undo-tree-id61629 . -1) (undo-tree-id61630 . -1) (undo-tree-id61631 . -1) (undo-tree-id61632 . -1) (undo-tree-id61633 . -1) (undo-tree-id61634 . -1) (undo-tree-id61635 . -1) (undo-tree-id61636 . -1) (undo-tree-id61637 . -1) (undo-tree-id61638 . -1) (undo-tree-id61639 . -1) (undo-tree-id61640 . -1) (undo-tree-id61641 . -1) (undo-tree-id61642 . -1) (undo-tree-id61643 . -1) (undo-tree-id61644 . -1) (undo-tree-id61645 . -1) (undo-tree-id61646 . -1) (undo-tree-id61647 . -1) (undo-tree-id61648 . -1) (undo-tree-id61649 . -1) (undo-tree-id61650 . -1) (undo-tree-id61651 . -1) (undo-tree-id61652 . -1) (undo-tree-id61653 . -1) (undo-tree-id61654 . -1) (undo-tree-id61655 . -1) (undo-tree-id61656 . -1) (undo-tree-id61657 . -1) (undo-tree-id61658 . -1) (undo-tree-id61659 . -1) (undo-tree-id61660 . -1) (undo-tree-id61661 . -1) (undo-tree-id61662 . -1) (undo-tree-id61663 . -1) (undo-tree-id61664 . -1) (undo-tree-id61665 . -1) (undo-tree-id61666 . -1) (undo-tree-id61667 . -1) (undo-tree-id61668 . -1) (undo-tree-id61669 . -1) (undo-tree-id61670 . -1) (undo-tree-id61671 . -1) (undo-tree-id61672 . -1) (undo-tree-id61673 . -1) (undo-tree-id61674 . -1) (undo-tree-id61675 . -1) (undo-tree-id61676 . -1) (undo-tree-id61677 . -1) (undo-tree-id61678 . -1) (undo-tree-id61679 . -1) (undo-tree-id61680 . -1) (undo-tree-id61681 . -1) (undo-tree-id61682 . -1) (undo-tree-id61683 . -1) (undo-tree-id61684 . -1) (undo-tree-id61685 . -1) (undo-tree-id61686 . -1) (undo-tree-id61687 . -1) (undo-tree-id61688 . -1) (undo-tree-id61689 . -1) (undo-tree-id61690 . -1) (undo-tree-id61691 . -1) (undo-tree-id61692 . -1) (undo-tree-id61693 . -1) (undo-tree-id61694 . -1) (undo-tree-id61695 . -1) (undo-tree-id61696 . -1) (undo-tree-id61697 . -1) (undo-tree-id61698 . -1) (undo-tree-id61699 . -1) (undo-tree-id61700 . -1) (undo-tree-id61701 . -1) (undo-tree-id61702 . -1) (undo-tree-id61703 . -1) (undo-tree-id61704 . -1) (undo-tree-id61705 . -1) (undo-tree-id61706 . -1) (undo-tree-id61707 . -1) (undo-tree-id61708 . -1) (undo-tree-id61709 . -1) (undo-tree-id61710 . -1) (undo-tree-id61711 . -1) (undo-tree-id61712 . -1) (undo-tree-id61713 . -1) (undo-tree-id61714 . -1) (undo-tree-id61715 . -1) (undo-tree-id61716 . -1) (undo-tree-id61717 . -1) (undo-tree-id61718 . -1) (undo-tree-id61719 . -1) (undo-tree-id61720 . -1) (undo-tree-id61721 . -1) (undo-tree-id61722 . -1) (undo-tree-id61723 . -1) (undo-tree-id61724 . -1) (undo-tree-id61725 . -1) (undo-tree-id61726 . -1) (undo-tree-id61727 . -1) (undo-tree-id61728 . -1) (undo-tree-id61729 . -1) (undo-tree-id61730 . -1) (undo-tree-id61731 . -1) (undo-tree-id61732 . -1) (undo-tree-id61733 . -1) (undo-tree-id61734 . -1) (undo-tree-id61735 . -1) (undo-tree-id61736 . -1) (undo-tree-id61737 . -1) (undo-tree-id61738 . -1) (undo-tree-id61739 . -1) (undo-tree-id61740 . -1) (undo-tree-id61741 . -1) (undo-tree-id61742 . -1) (undo-tree-id61743 . -1) (undo-tree-id61744 . -1) (undo-tree-id61745 . -1) (undo-tree-id61746 . -1) (undo-tree-id61747 . -1) (undo-tree-id61748 . -1) (undo-tree-id61749 . -1) (undo-tree-id61750 . -1) (undo-tree-id61751 . -1) (undo-tree-id61752 . -1) (undo-tree-id61753 . -1) (undo-tree-id61754 . -1) (undo-tree-id61755 . -1) (undo-tree-id61756 . -1) (undo-tree-id61757 . -1) (undo-tree-id61758 . -1) (undo-tree-id61759 . -1) (undo-tree-id61760 . -1) (undo-tree-id61761 . -1) (undo-tree-id61762 . -1) (undo-tree-id61763 . -1) (undo-tree-id61764 . -1) (undo-tree-id61765 . -1) (undo-tree-id61766 . -1) (undo-tree-id61767 . -1) (undo-tree-id61768 . -1) (undo-tree-id61769 . -1) (undo-tree-id61770 . -1) (undo-tree-id61771 . -1) (undo-tree-id61772 . -1) (undo-tree-id61773 . -1) (undo-tree-id61774 . -1) (undo-tree-id61775 . -1) (undo-tree-id61776 . -1) (undo-tree-id61777 . -1) (undo-tree-id61778 . -1) (undo-tree-id61779 . -1) (undo-tree-id61780 . -1) (undo-tree-id61781 . -1) (undo-tree-id61782 . -1) (undo-tree-id61783 . -1) (undo-tree-id61784 . -1) (undo-tree-id61785 . -1) (undo-tree-id61786 . -1) (undo-tree-id61787 . -1) (undo-tree-id61788 . -1) (undo-tree-id61789 . -1) (undo-tree-id61790 . -1) (undo-tree-id61791 . -1) (undo-tree-id61792 . -1) (undo-tree-id61793 . -1) (undo-tree-id61794 . -1) (undo-tree-id61795 . -1) (undo-tree-id61796 . -1) (undo-tree-id61797 . -1) (undo-tree-id61798 . -1) (undo-tree-id61799 . -1) (undo-tree-id61800 . -1) (undo-tree-id61801 . -1) (undo-tree-id61802 . -1) (undo-tree-id61803 . -1) (undo-tree-id61804 . -1) (undo-tree-id61805 . -1) (undo-tree-id61806 . -1) (undo-tree-id61807 . -1) (undo-tree-id61808 . -1) (undo-tree-id61809 . -1) (undo-tree-id61810 . -1) (undo-tree-id61811 . -1) (undo-tree-id61812 . -1) (undo-tree-id61813 . -1) (undo-tree-id61814 . -1) (undo-tree-id61815 . -1) (undo-tree-id61816 . -1) (undo-tree-id61817 . -1) (undo-tree-id61818 . -1) (undo-tree-id61819 . -1) (undo-tree-id61820 . -1) (undo-tree-id61821 . -1) (undo-tree-id61822 . -1) (undo-tree-id61823 . -1) (undo-tree-id61824 . -1) (undo-tree-id61825 . -1) (undo-tree-id61826 . -1) (undo-tree-id61827 . -1) (undo-tree-id61828 . -1) (undo-tree-id61829 . -1) (undo-tree-id61830 . -1) (undo-tree-id61831 . -1) (undo-tree-id61832 . -1) (undo-tree-id61833 . -1) (undo-tree-id61834 . -1) (undo-tree-id61835 . -1) (undo-tree-id61836 . -1) (undo-tree-id61837 . -1) (undo-tree-id61838 . -1) (undo-tree-id61839 . -1) (undo-tree-id61840 . -1) (undo-tree-id61841 . -1) (undo-tree-id61842 . -1) (undo-tree-id61843 . -1) (undo-tree-id61844 . -1) (undo-tree-id61845 . -1) (undo-tree-id61846 . -1) (undo-tree-id61847 . -1) (undo-tree-id61848 . -1) (undo-tree-id61849 . -1) (undo-tree-id61850 . -1) (undo-tree-id61851 . -1) (undo-tree-id61852 . -1) (undo-tree-id61853 . -1) (undo-tree-id61854 . -1) (undo-tree-id61855 . -1) (undo-tree-id61856 . -1) (undo-tree-id61857 . -1) (undo-tree-id61858 . -1) (undo-tree-id61859 . -1) (undo-tree-id61860 . -1) (undo-tree-id61861 . -1) (undo-tree-id61862 . -1) (undo-tree-id61863 . -1) (undo-tree-id61864 . -1) (undo-tree-id61865 . -1) (undo-tree-id61866 . -1) (undo-tree-id61867 . -1) (undo-tree-id61868 . -1) (undo-tree-id61869 . -1) (undo-tree-id61870 . -1) (undo-tree-id61871 . -1) (undo-tree-id61872 . -1) (undo-tree-id61873 . -1) (undo-tree-id61874 . -1) (undo-tree-id61875 . -1) (undo-tree-id61876 . -1) (undo-tree-id61877 . -1) (undo-tree-id61878 . -1) (undo-tree-id61879 . -1) (undo-tree-id61880 . -1) (undo-tree-id61881 . -1) (undo-tree-id61882 . -1) (undo-tree-id61883 . -1) (undo-tree-id61884 . -1) (undo-tree-id61885 . -1) (undo-tree-id61886 . -1) (undo-tree-id61887 . -1) (undo-tree-id61888 . -1) (undo-tree-id61889 . -1) (undo-tree-id61890 . -1) (undo-tree-id61891 . -1) (undo-tree-id61892 . -1) (undo-tree-id61893 . -1) (undo-tree-id61894 . -1) (undo-tree-id61895 . -1) (undo-tree-id61896 . -1) (undo-tree-id61897 . -1) (undo-tree-id61898 . -1) (undo-tree-id61899 . -1) (undo-tree-id61900 . -1) (undo-tree-id61901 . -1) (undo-tree-id61902 . -1) (undo-tree-id61903 . -1) (undo-tree-id61904 . -1) (undo-tree-id61905 . -1) (undo-tree-id61906 . -1) (undo-tree-id61907 . -1) (undo-tree-id61908 . -1) (undo-tree-id61909 . -1) (undo-tree-id61910 . -1) (undo-tree-id61911 . -1) (undo-tree-id61912 . -1) (undo-tree-id61913 . -1) (undo-tree-id61914 . -1) (undo-tree-id61915 . -1) (undo-tree-id61916 . -1) (undo-tree-id61917 . -1)) nil (25774 62484 86472 213000) 0 nil])
([nil nil ((5849 . 5850) (#("," 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5849) (undo-tree-id61175 . -1) (undo-tree-id61176 . -1) (undo-tree-id61177 . -1) (undo-tree-id61178 . -1) (undo-tree-id61179 . -1) (undo-tree-id61180 . -1) (undo-tree-id61181 . -1) (undo-tree-id61182 . -1) (undo-tree-id61183 . -1) (undo-tree-id61184 . -1) (undo-tree-id61185 . -1) (undo-tree-id61186 . -1) (undo-tree-id61187 . -1) (undo-tree-id61188 . -1) (undo-tree-id61189 . -1) (undo-tree-id61190 . -1) (undo-tree-id61191 . -1) (undo-tree-id61192 . -1) (undo-tree-id61193 . -1) (undo-tree-id61194 . -1) (undo-tree-id61195 . -1) (undo-tree-id61196 . -1) (undo-tree-id61197 . -1) (undo-tree-id61198 . -1) (undo-tree-id61199 . -1) (undo-tree-id61200 . -1) (undo-tree-id61201 . -1) (undo-tree-id61202 . -1) (undo-tree-id61203 . -1) (undo-tree-id61204 . -1) (undo-tree-id61205 . -1) (undo-tree-id61206 . -1) (undo-tree-id61207 . -1) (undo-tree-id61208 . -1) (undo-tree-id61209 . -1) (undo-tree-id61210 . -1) (undo-tree-id61211 . -1) (undo-tree-id61212 . -1) (undo-tree-id61213 . -1) (undo-tree-id61214 . -1) (undo-tree-id61215 . -1) (undo-tree-id61216 . -1) (undo-tree-id61217 . -1) (undo-tree-id61218 . -1) (undo-tree-id61219 . -1) (undo-tree-id61220 . -1) (undo-tree-id61221 . -1) (undo-tree-id61222 . -1) (undo-tree-id61223 . -1) (undo-tree-id61224 . -1) (undo-tree-id61225 . -1) (undo-tree-id61226 . -1) (undo-tree-id61227 . -1) (undo-tree-id61228 . -1) (undo-tree-id61229 . -1) (undo-tree-id61230 . -1) (undo-tree-id61231 . -1) (undo-tree-id61232 . -1) (undo-tree-id61233 . -1) (undo-tree-id61234 . -1) (undo-tree-id61235 . -1) (undo-tree-id61236 . -1) (undo-tree-id61237 . -1) (undo-tree-id61238 . -1) (undo-tree-id61239 . -1) (undo-tree-id61240 . -1) (undo-tree-id61241 . -1) (undo-tree-id61242 . -1) (undo-tree-id61243 . -1) (undo-tree-id61244 . -1) (undo-tree-id61245 . -1) (undo-tree-id61246 . -1) (undo-tree-id61247 . -1) (undo-tree-id61248 . -1) (undo-tree-id61249 . -1) (undo-tree-id61250 . -1) (undo-tree-id61251 . -1) (undo-tree-id61252 . -1) (undo-tree-id61253 . -1) (undo-tree-id61254 . -1) (undo-tree-id61255 . -1) (undo-tree-id61256 . -1) (undo-tree-id61257 . -1) (undo-tree-id61258 . -1) (undo-tree-id61259 . -1) (undo-tree-id61260 . -1) (undo-tree-id61261 . -1) (undo-tree-id61262 . -1) (undo-tree-id61263 . -1) (undo-tree-id61264 . -1) (undo-tree-id61265 . -1) (undo-tree-id61266 . -1) (undo-tree-id61267 . -1) (undo-tree-id61268 . -1) (undo-tree-id61269 . -1) (undo-tree-id61270 . -1) (undo-tree-id61271 . -1) (undo-tree-id61272 . -1) (undo-tree-id61273 . -1) (undo-tree-id61274 . -1) (undo-tree-id61275 . -1) (undo-tree-id61276 . -1) (undo-tree-id61277 . -1) (undo-tree-id61278 . -1) (undo-tree-id61279 . -1) (undo-tree-id61280 . -1) (undo-tree-id61281 . -1) (undo-tree-id61282 . -1) (undo-tree-id61283 . -1) (undo-tree-id61284 . -1) (undo-tree-id61285 . -1) (undo-tree-id61286 . -1) (undo-tree-id61287 . -1) (undo-tree-id61288 . -1) (undo-tree-id61289 . -1) (undo-tree-id61290 . -1) (undo-tree-id61291 . -1) (undo-tree-id61292 . -1) (undo-tree-id61293 . -1) (undo-tree-id61294 . -1) (undo-tree-id61295 . -1) (undo-tree-id61296 . -1) (undo-tree-id61297 . -1) (undo-tree-id61298 . -1) (undo-tree-id61299 . -1) (undo-tree-id61300 . -1) (undo-tree-id61301 . -1) (undo-tree-id61302 . -1) (undo-tree-id61303 . -1) (undo-tree-id61304 . -1) (undo-tree-id61305 . -1) (undo-tree-id61306 . -1) (undo-tree-id61307 . -1) (undo-tree-id61308 . -1) (undo-tree-id61309 . -1) (undo-tree-id61310 . -1) (undo-tree-id61311 . -1) (undo-tree-id61312 . -1) (undo-tree-id61313 . -1) (undo-tree-id61314 . -1) (undo-tree-id61315 . -1) (undo-tree-id61316 . -1) (undo-tree-id61317 . -1) (undo-tree-id61318 . -1) (undo-tree-id61319 . -1) (undo-tree-id61320 . -1) (undo-tree-id61321 . -1) (undo-tree-id61322 . -1) (undo-tree-id61323 . -1) (undo-tree-id61324 . -1) (undo-tree-id61325 . -1) (undo-tree-id61326 . -1) (undo-tree-id61327 . -1) (undo-tree-id61328 . -1) (undo-tree-id61329 . -1) (undo-tree-id61330 . -1) (undo-tree-id61331 . -1) (undo-tree-id61332 . -1) (undo-tree-id61333 . -1) (undo-tree-id61334 . -1) (undo-tree-id61335 . -1) (undo-tree-id61336 . -1) (undo-tree-id61337 . -1) (undo-tree-id61338 . -1) (undo-tree-id61339 . -1) (undo-tree-id61340 . -1) (undo-tree-id61341 . -1) (undo-tree-id61342 . -1) (undo-tree-id61343 . -1) (undo-tree-id61344 . -1) (undo-tree-id61345 . -1) (undo-tree-id61346 . -1) (undo-tree-id61347 . -1) (undo-tree-id61348 . -1) (undo-tree-id61349 . -1) (undo-tree-id61350 . -1) (undo-tree-id61351 . -1) (undo-tree-id61352 . -1) (undo-tree-id61353 . -1) (undo-tree-id61354 . -1) (undo-tree-id61355 . -1) (undo-tree-id61356 . -1) (undo-tree-id61357 . -1) (undo-tree-id61358 . -1) (undo-tree-id61359 . -1) (undo-tree-id61360 . -1) (undo-tree-id61361 . -1) (undo-tree-id61362 . -1) (undo-tree-id61363 . -1) (undo-tree-id61364 . -1) (undo-tree-id61365 . -1) (undo-tree-id61366 . -1) (undo-tree-id61367 . -1) (undo-tree-id61368 . -1) (undo-tree-id61369 . -1) (undo-tree-id61370 . -1) (undo-tree-id61371 . -1) (undo-tree-id61372 . -1) (undo-tree-id61373 . -1) (undo-tree-id61374 . -1) (undo-tree-id61375 . -1) (undo-tree-id61376 . -1) (undo-tree-id61377 . -1) (undo-tree-id61378 . -1) (undo-tree-id61379 . -1) (undo-tree-id61380 . -1) (undo-tree-id61381 . -1) (undo-tree-id61382 . -1) (undo-tree-id61383 . -1) (undo-tree-id61384 . -1) (undo-tree-id61385 . -1) (undo-tree-id61386 . -1) (undo-tree-id61387 . -1) (undo-tree-id61388 . -1) (undo-tree-id61389 . -1) (undo-tree-id61390 . -1) (undo-tree-id61391 . -1) (undo-tree-id61392 . -1) (undo-tree-id61393 . -1) (undo-tree-id61394 . -1) (undo-tree-id61395 . -1) (undo-tree-id61396 . -1) (undo-tree-id61397 . -1) (undo-tree-id61398 . -1) (undo-tree-id61399 . -1) (undo-tree-id61400 . -1) (undo-tree-id61401 . -1) (undo-tree-id61402 . -1) (undo-tree-id61403 . -1) (undo-tree-id61404 . -1) (undo-tree-id61405 . -1) (undo-tree-id61406 . -1) (undo-tree-id61407 . -1) (undo-tree-id61408 . -1) (undo-tree-id61409 . -1) (undo-tree-id61410 . -1) (undo-tree-id61411 . -1) (undo-tree-id61412 . -1) (undo-tree-id61413 . -1) (undo-tree-id61414 . -1) (undo-tree-id61415 . -1) (undo-tree-id61416 . -1) (undo-tree-id61417 . -1) (undo-tree-id61418 . -1) (undo-tree-id61419 . -1) (undo-tree-id61420 . -1) (undo-tree-id61421 . -1) (undo-tree-id61422 . -1) (undo-tree-id61423 . -1) (undo-tree-id61424 . -1) (undo-tree-id61425 . -1) (undo-tree-id61426 . -1) (undo-tree-id61427 . -1) (undo-tree-id61428 . -1) (undo-tree-id61429 . -1) (undo-tree-id61430 . -1) (undo-tree-id61431 . -1) (undo-tree-id61432 . -1) (undo-tree-id61433 . -1) (undo-tree-id61434 . -1) (undo-tree-id61435 . -1) (undo-tree-id61436 . -1) (undo-tree-id61437 . -1) (undo-tree-id61438 . -1) (undo-tree-id61439 . -1) (undo-tree-id61440 . -1) (undo-tree-id61441 . -1) (undo-tree-id61442 . -1) (undo-tree-id61443 . -1) (undo-tree-id61444 . -1) (undo-tree-id61445 . -1) (undo-tree-id61446 . -1) (undo-tree-id61447 . -1) (undo-tree-id61448 . -1) (undo-tree-id61449 . -1) (undo-tree-id61450 . -1) (undo-tree-id61451 . -1) (undo-tree-id61452 . -1) (undo-tree-id61453 . -1) (undo-tree-id61454 . -1) (undo-tree-id61455 . -1) (undo-tree-id61456 . -1) (undo-tree-id61457 . -1) (undo-tree-id61458 . -1) (undo-tree-id61459 . -1) (undo-tree-id61460 . -1) (undo-tree-id61461 . -1) (undo-tree-id61462 . -1) (undo-tree-id61463 . -1) (undo-tree-id61464 . -1) (undo-tree-id61465 . -1) (undo-tree-id61466 . -1) (undo-tree-id61467 . -1) (undo-tree-id61468 . -1) (undo-tree-id61469 . -1) (undo-tree-id61470 . -1) (undo-tree-id61471 . -1) (undo-tree-id61472 . -1) (undo-tree-id61473 . -1) (undo-tree-id61474 . -1) (undo-tree-id61475 . -1) (undo-tree-id61476 . -1) (undo-tree-id61477 . -1) (undo-tree-id61478 . -1) (undo-tree-id61479 . -1) (undo-tree-id61480 . -1) (undo-tree-id61481 . -1) (undo-tree-id61482 . -1) (undo-tree-id61483 . -1) (undo-tree-id61484 . -1) (undo-tree-id61485 . -1) (undo-tree-id61486 . -1) (undo-tree-id61487 . -1) (undo-tree-id61488 . -1) (undo-tree-id61489 . -1) (undo-tree-id61490 . -1) (undo-tree-id61491 . -1) (undo-tree-id61492 . -1) (undo-tree-id61493 . -1) (undo-tree-id61494 . -1) (undo-tree-id61495 . -1) (undo-tree-id61496 . -1) (undo-tree-id61497 . -1) (undo-tree-id61498 . -1) (undo-tree-id61499 . -1) (undo-tree-id61500 . -1) (undo-tree-id61501 . -1) (undo-tree-id61502 . -1) (undo-tree-id61503 . -1) (undo-tree-id61504 . -1) (undo-tree-id61505 . -1) (undo-tree-id61506 . -1) (undo-tree-id61507 . -1) (undo-tree-id61508 . -1) (undo-tree-id61509 . -1) (undo-tree-id61510 . -1) (undo-tree-id61511 . -1) (undo-tree-id61512 . -1) (undo-tree-id61513 . -1) (undo-tree-id61514 . -1) (undo-tree-id61515 . -1) (undo-tree-id61516 . -1) (undo-tree-id61517 . -1) (undo-tree-id61518 . -1) (undo-tree-id61519 . -1) (undo-tree-id61520 . -1) (undo-tree-id61521 . -1) (undo-tree-id61522 . -1) (undo-tree-id61523 . -1) (undo-tree-id61524 . -1) (undo-tree-id61525 . -1) (undo-tree-id61526 . -1) (undo-tree-id61527 . -1) (undo-tree-id61528 . -1) (undo-tree-id61529 . -1) (undo-tree-id61530 . -1) (undo-tree-id61531 . -1) (undo-tree-id61532 . -1) (undo-tree-id61533 . -1) (undo-tree-id61534 . -1) (undo-tree-id61535 . -1) (undo-tree-id61536 . -1) (undo-tree-id61537 . -1) (undo-tree-id61538 . -1) (undo-tree-id61539 . -1) (undo-tree-id61540 . -1) (undo-tree-id61541 . -1) (undo-tree-id61542 . -1) (undo-tree-id61543 . -1) (undo-tree-id61544 . -1) (undo-tree-id61545 . -1) (undo-tree-id61546 . -1) (undo-tree-id61547 . -1) (undo-tree-id61548 . -1) (undo-tree-id61549 . -1) (undo-tree-id61550 . -1) (undo-tree-id61551 . -1) (undo-tree-id61552 . -1) (undo-tree-id61553 . -1) (undo-tree-id61554 . -1) (undo-tree-id61555 . -1) (undo-tree-id61556 . -1) (undo-tree-id61557 . -1) (undo-tree-id61558 . -1)) nil (25774 62484 86262 598000) 0 nil])
([nil nil ((5737 . 5854) (#("- 

- First, we compute the dot product between the current input element, and another element in the input sequence." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 4 5 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 5 6 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 6 97 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 97 98 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 98 116 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 116 117 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 5737) (undo-tree-id60194 . -116) (undo-tree-id60195 . -116) (undo-tree-id60196 . -116) (undo-tree-id60197 . -116) (undo-tree-id60198 . -116) (undo-tree-id60199 . -116) (undo-tree-id60200 . -117) (undo-tree-id60201 . -6) (undo-tree-id60202 . -6) (undo-tree-id60203 . -6) (undo-tree-id60204 . -6) (undo-tree-id60205 . -6) (undo-tree-id60206 . -6) (undo-tree-id60207 . -6) (undo-tree-id60208 . -6) (undo-tree-id60209 . -6) (undo-tree-id60210 . -6) (undo-tree-id60211 . -6) (undo-tree-id60212 . -6) (undo-tree-id60213 . -6) (undo-tree-id60214 . -6) (undo-tree-id60215 . -6) (undo-tree-id60216 . -6) (undo-tree-id60217 . -11) (undo-tree-id60218 . -11) (undo-tree-id60219 . -11) (undo-tree-id60220 . -11) (undo-tree-id60221 . -11) (undo-tree-id60222 . -11) (undo-tree-id60223 . -11) (undo-tree-id60224 . -11) (undo-tree-id60225 . -11) (undo-tree-id60226 . -11) (undo-tree-id60227 . -11) (undo-tree-id60228 . -11) (undo-tree-id60229 . -11) (undo-tree-id60230 . -11) (undo-tree-id60231 . -11) (undo-tree-id60232 . -11) (undo-tree-id60233 . -14) (undo-tree-id60234 . -14) (undo-tree-id60235 . -14) (undo-tree-id60236 . -14) (undo-tree-id60237 . -14) (undo-tree-id60238 . -14) (undo-tree-id60239 . -14) (undo-tree-id60240 . -14) (undo-tree-id60241 . -14) (undo-tree-id60242 . -14) (undo-tree-id60243 . -14) (undo-tree-id60244 . -14) (undo-tree-id60245 . -14) (undo-tree-id60246 . -14) (undo-tree-id60247 . -14) (undo-tree-id60248 . -14) (undo-tree-id60249 . -14) (undo-tree-id60250 . -14) (undo-tree-id60251 . -14) (undo-tree-id60252 . -14) (undo-tree-id60253 . -14) (undo-tree-id60254 . -14) (undo-tree-id60255 . -14) (undo-tree-id60256 . -14) (undo-tree-id60257 . -14) (undo-tree-id60258 . -14) (undo-tree-id60259 . -14) (undo-tree-id60260 . -14) (undo-tree-id60261 . -14) (undo-tree-id60262 . -14) (undo-tree-id60263 . -14) (undo-tree-id60264 . -14) (undo-tree-id60265 . -14) (undo-tree-id60266 . -14) (undo-tree-id60267 . -14) (undo-tree-id60268 . -14) (undo-tree-id60269 . -14) (undo-tree-id60270 . -14) (undo-tree-id60271 . -14) (undo-tree-id60272 . -14) (undo-tree-id60273 . -14) (undo-tree-id60274 . -74) (undo-tree-id60275 . -74) (undo-tree-id60276 . -74) (undo-tree-id60277 . -74) (undo-tree-id60278 . -74) (undo-tree-id60279 . -74) (undo-tree-id60280 . -74) (undo-tree-id60281 . -74) (undo-tree-id60282 . -74) (undo-tree-id60283 . -74) (undo-tree-id60284 . -74) (undo-tree-id60285 . -74) (undo-tree-id60286 . -74) (undo-tree-id60287 . -74) (undo-tree-id60288 . -74) (undo-tree-id60289 . -74) (undo-tree-id60290 . -73) (undo-tree-id60291 . -73) (undo-tree-id60292 . -73) (undo-tree-id60293 . -73) (undo-tree-id60294 . -73) (undo-tree-id60295 . -73) (undo-tree-id60296 . -73) (undo-tree-id60297 . -73) (undo-tree-id60298 . -73) (undo-tree-id60299 . -73) (undo-tree-id60300 . -73) (undo-tree-id60301 . -73) (undo-tree-id60302 . -73) (undo-tree-id60303 . -73) (undo-tree-id60304 . -73) (undo-tree-id60305 . -73) (undo-tree-id60306 . -73) (undo-tree-id60307 . -73) (undo-tree-id60308 . -73) (undo-tree-id60309 . -73) (undo-tree-id60310 . -73) (undo-tree-id60311 . -73) (undo-tree-id60312 . -73) (undo-tree-id60313 . -73) (undo-tree-id60314 . -73) (undo-tree-id60315 . -73) (undo-tree-id60316 . -74) (undo-tree-id60317 . -74) (undo-tree-id60318 . -74) (undo-tree-id60319 . -74) (undo-tree-id60320 . -74) (undo-tree-id60321 . -74) (undo-tree-id60322 . -74) (undo-tree-id60323 . -74) (undo-tree-id60324 . -74) (undo-tree-id60325 . -74) (undo-tree-id60326 . -74) (undo-tree-id60327 . -74) (undo-tree-id60328 . -74) (undo-tree-id60329 . -74) (undo-tree-id60330 . -74) (undo-tree-id60331 . -74) (undo-tree-id60332 . -74) (undo-tree-id60333 . -74) (undo-tree-id60334 . -74) (undo-tree-id60335 . -74) (undo-tree-id60336 . -74) (undo-tree-id60337 . -74) (undo-tree-id60338 . -74) (undo-tree-id60339 . -74) (undo-tree-id60340 . -74) (undo-tree-id60341 . -74) (undo-tree-id60342 . -74) (undo-tree-id60343 . -74) (undo-tree-id60344 . -74) (undo-tree-id60345 . -74) (undo-tree-id60346 . -74) (undo-tree-id60347 . -74) (undo-tree-id60348 . -74) (undo-tree-id60349 . -74) (undo-tree-id60350 . -74) (undo-tree-id60351 . -74) (undo-tree-id60352 . -74) (undo-tree-id60353 . -74) (undo-tree-id60354 . -74) (undo-tree-id60355 . -74) (undo-tree-id60356 . -74) (undo-tree-id60357 . -74) (undo-tree-id60358 . -74) (undo-tree-id60359 . -74) (undo-tree-id60360 . -74) (undo-tree-id60361 . -74) (undo-tree-id60362 . -74) (undo-tree-id60363 . -74) (undo-tree-id60364 . -74) (undo-tree-id60365 . -74) (undo-tree-id60366 . -74) (undo-tree-id60367 . -74) (undo-tree-id60368 . -74) (undo-tree-id60369 . -74) (undo-tree-id60370 . -74) (undo-tree-id60371 . -74) (undo-tree-id60372 . -74) (undo-tree-id60373 . -74) (undo-tree-id60374 . -74) (undo-tree-id60375 . -74) (undo-tree-id60376 . -74) (undo-tree-id60377 . -74) (undo-tree-id60378 . -74) (undo-tree-id60379 . -74) (undo-tree-id60380 . -74) (undo-tree-id60381 . -74) (undo-tree-id60382 . -74) (undo-tree-id60383 . -74) (undo-tree-id60384 . -74) (undo-tree-id60385 . -74) (undo-tree-id60386 . -74) (undo-tree-id60387 . -74) (undo-tree-id60388 . -74) (undo-tree-id60389 . -74) (undo-tree-id60390 . -74) (undo-tree-id60391 . -74) (undo-tree-id60392 . -74) (undo-tree-id60393 . -74) (undo-tree-id60394 . -74) (undo-tree-id60395 . -74) (undo-tree-id60396 . -74) (undo-tree-id60397 . -74) (undo-tree-id60398 . -74) (undo-tree-id60399 . -74) (undo-tree-id60400 . -74) (undo-tree-id60401 . -74) (undo-tree-id60402 . -74) (undo-tree-id60403 . -74) (undo-tree-id60404 . -74) (undo-tree-id60405 . -74) (undo-tree-id60406 . -74) (undo-tree-id60407 . -74) (undo-tree-id60408 . -74) (undo-tree-id60409 . -74) (undo-tree-id60410 . -74) (undo-tree-id60411 . -74) (undo-tree-id60412 . -74) (undo-tree-id60413 . -74) (undo-tree-id60414 . -74) (undo-tree-id60415 . -74) (undo-tree-id60416 . -74) (undo-tree-id60417 . -74) (undo-tree-id60418 . -74) (undo-tree-id60419 . -74) (undo-tree-id60420 . -74) (undo-tree-id60421 . -74) (undo-tree-id60422 . -74) (undo-tree-id60423 . -74) (undo-tree-id60424 . -74) (undo-tree-id60425 . -74) (undo-tree-id60426 . -74) (undo-tree-id60427 . -74) (undo-tree-id60428 . -74) (undo-tree-id60429 . -74) (undo-tree-id60430 . -74) (undo-tree-id60431 . -74) (undo-tree-id60432 . -74) (undo-tree-id60433 . -74) (undo-tree-id60434 . -74) (undo-tree-id60435 . -74) (undo-tree-id60436 . -74) (undo-tree-id60437 . -74) (undo-tree-id60438 . -74) (undo-tree-id60439 . -74) (undo-tree-id60440 . -74) (undo-tree-id60441 . -74) (undo-tree-id60442 . -74) (undo-tree-id60443 . -74) (undo-tree-id60444 . -74) (undo-tree-id60445 . -74) (undo-tree-id60446 . -74) (undo-tree-id60447 . -74) (undo-tree-id60448 . -74) (undo-tree-id60449 . -74) (undo-tree-id60450 . -74) (undo-tree-id60451 . -74) (undo-tree-id60452 . -74) (undo-tree-id60453 . -74) (undo-tree-id60454 . -74) (undo-tree-id60455 . -74) (undo-tree-id60456 . -74) (undo-tree-id60457 . -74) (undo-tree-id60458 . -74) (undo-tree-id60459 . -74) (undo-tree-id60460 . -74) (undo-tree-id60461 . -74) (undo-tree-id60462 . -74) (undo-tree-id60463 . -74) (undo-tree-id60464 . -74) (undo-tree-id60465 . -74) (undo-tree-id60466 . -74) (undo-tree-id60467 . -74) (undo-tree-id60468 . -74) (undo-tree-id60469 . -74) (undo-tree-id60470 . -74) (undo-tree-id60471 . -74) (undo-tree-id60472 . -74) (undo-tree-id60473 . -74) (undo-tree-id60474 . -74) (undo-tree-id60475 . -74) (undo-tree-id60476 . -74) (undo-tree-id60477 . -74) (undo-tree-id60478 . -74) (undo-tree-id60479 . -74) (undo-tree-id60480 . -74) (undo-tree-id60481 . -74) (undo-tree-id60482 . -74) (undo-tree-id60483 . -74) (undo-tree-id60484 . -74) (undo-tree-id60485 . -74) (undo-tree-id60486 . -74) (undo-tree-id60487 . -74) (undo-tree-id60488 . -74) (undo-tree-id60489 . -74) (undo-tree-id60490 . -74) (undo-tree-id60491 . -74) (undo-tree-id60492 . -74) (undo-tree-id60493 . -74) (undo-tree-id60494 . -74) (undo-tree-id60495 . -74) (undo-tree-id60496 . -74) (undo-tree-id60497 . -74) (undo-tree-id60498 . -74) (undo-tree-id60499 . -74) (undo-tree-id60500 . -74) (undo-tree-id60501 . -74) (undo-tree-id60502 . -74) (undo-tree-id60503 . -74) (undo-tree-id60504 . -74) (undo-tree-id60505 . -74) (undo-tree-id60506 . -74) (undo-tree-id60507 . -74) (undo-tree-id60508 . -74) (undo-tree-id60509 . -74) (undo-tree-id60510 . -74) (undo-tree-id60511 . -74) (undo-tree-id60512 . -74) (undo-tree-id60513 . -73) (undo-tree-id60514 . -73) (undo-tree-id60515 . -73) (undo-tree-id60516 . -73) (undo-tree-id60517 . -73) (undo-tree-id60518 . -73) (undo-tree-id60519 . -73) (undo-tree-id60520 . -73) (undo-tree-id60521 . -73) (undo-tree-id60522 . -73) (undo-tree-id60523 . -73) (undo-tree-id60524 . -73) (undo-tree-id60525 . -73) (undo-tree-id60526 . -73) (undo-tree-id60527 . -73) (undo-tree-id60528 . -73) (undo-tree-id60529 . -73) (undo-tree-id60530 . -73) (undo-tree-id60531 . -73) (undo-tree-id60532 . -73) (undo-tree-id60533 . -73) (undo-tree-id60534 . -73) (undo-tree-id60535 . -73) (undo-tree-id60536 . -73) (undo-tree-id60537 . -73) (undo-tree-id60538 . -73) (undo-tree-id60539 . -74) (undo-tree-id60540 . -74) (undo-tree-id60541 . -74) (undo-tree-id60542 . -74) (undo-tree-id60543 . -74) (undo-tree-id60544 . -74) (undo-tree-id60545 . -74) (undo-tree-id60546 . -74) (undo-tree-id60547 . -74) (undo-tree-id60548 . -74) (undo-tree-id60549 . -74) (undo-tree-id60550 . -74) (undo-tree-id60551 . -74) (undo-tree-id60552 . -74) (undo-tree-id60553 . -74) (undo-tree-id60554 . -74) (undo-tree-id60555 . -74) (undo-tree-id60556 . -74) (undo-tree-id60557 . -74) (undo-tree-id60558 . -74) (undo-tree-id60559 . -74) (undo-tree-id60560 . -74) (undo-tree-id60561 . -74) (undo-tree-id60562 . -74) (undo-tree-id60563 . -74) (undo-tree-id60564 . -74) (undo-tree-id60565 . -74) (undo-tree-id60566 . -74) (undo-tree-id60567 . -74) (undo-tree-id60568 . -74) (undo-tree-id60569 . -74) (undo-tree-id60570 . -74) (undo-tree-id60571 . -74) (undo-tree-id60572 . -77) (undo-tree-id60573 . -77) (undo-tree-id60574 . -77) (undo-tree-id60575 . -77) (undo-tree-id60576 . -77) (undo-tree-id60577 . -77) (undo-tree-id60578 . -77) (undo-tree-id60579 . -77) (undo-tree-id60580 . -77) (undo-tree-id60581 . -77) (undo-tree-id60582 . -77) (undo-tree-id60583 . -77) (undo-tree-id60584 . -77) (undo-tree-id60585 . -77) (undo-tree-id60586 . -77) (undo-tree-id60587 . -77) (undo-tree-id60588 . -85) (undo-tree-id60589 . -85) (undo-tree-id60590 . -85) (undo-tree-id60591 . -85) (undo-tree-id60592 . -85) (undo-tree-id60593 . -85) (undo-tree-id60594 . -85) (undo-tree-id60595 . -85) (undo-tree-id60596 . -85) (undo-tree-id60597 . -85) (undo-tree-id60598 . -85) (undo-tree-id60599 . -85) (undo-tree-id60600 . -85) (undo-tree-id60601 . -85) (undo-tree-id60602 . -85) (undo-tree-id60603 . -85) (undo-tree-id60604 . -93) (undo-tree-id60605 . -93) (undo-tree-id60606 . -93) (undo-tree-id60607 . -93) (undo-tree-id60608 . -93) (undo-tree-id60609 . -93) (undo-tree-id60610 . -93) (undo-tree-id60611 . -93) (undo-tree-id60612 . -93) (undo-tree-id60613 . -93) (undo-tree-id60614 . -93) (undo-tree-id60615 . -93) (undo-tree-id60616 . -93) (undo-tree-id60617 . -93) (undo-tree-id60618 . -93) (undo-tree-id60619 . -93) (undo-tree-id60620 . -96) (undo-tree-id60621 . -96) (undo-tree-id60622 . -96) (undo-tree-id60623 . -96) (undo-tree-id60624 . -96) (undo-tree-id60625 . -96) (undo-tree-id60626 . -96) (undo-tree-id60627 . -96) (undo-tree-id60628 . -96) (undo-tree-id60629 . -96) (undo-tree-id60630 . -96) (undo-tree-id60631 . -96) (undo-tree-id60632 . -96) (undo-tree-id60633 . -96) (undo-tree-id60634 . -96) (undo-tree-id60635 . -96) (undo-tree-id60636 . -96) (undo-tree-id60637 . -96) (undo-tree-id60638 . -96) (undo-tree-id60639 . -96) (undo-tree-id60640 . -96) (undo-tree-id60641 . -100) (undo-tree-id60642 . -100) (undo-tree-id60643 . -100) (undo-tree-id60644 . -100) (undo-tree-id60645 . -100) (undo-tree-id60646 . -100) (undo-tree-id60647 . -100) (undo-tree-id60648 . -100) (undo-tree-id60649 . -100) (undo-tree-id60650 . -100) (undo-tree-id60651 . -100) (undo-tree-id60652 . -100) (undo-tree-id60653 . -100) (undo-tree-id60654 . -100) (undo-tree-id60655 . -100) (undo-tree-id60656 . -100) (undo-tree-id60657 . -100) (undo-tree-id60658 . -100) (undo-tree-id60659 . -100) (undo-tree-id60660 . -100) (undo-tree-id60661 . -100) (undo-tree-id60662 . -106) (undo-tree-id60663 . -106) (undo-tree-id60664 . -106) (undo-tree-id60665 . -106) (undo-tree-id60666 . -106) (undo-tree-id60667 . -106) (undo-tree-id60668 . -106) (undo-tree-id60669 . -106) (undo-tree-id60670 . -106) (undo-tree-id60671 . -106) (undo-tree-id60672 . -106) (undo-tree-id60673 . -106) (undo-tree-id60674 . -106) (undo-tree-id60675 . -106) (undo-tree-id60676 . -106) (undo-tree-id60677 . -106) (undo-tree-id60678 . -115) (undo-tree-id60679 . -115) (undo-tree-id60680 . -115) (undo-tree-id60681 . -115) (undo-tree-id60682 . -115) (undo-tree-id60683 . -115) (undo-tree-id60684 . -115) (undo-tree-id60685 . -115) (undo-tree-id60686 . -115) (undo-tree-id60687 . -115) (undo-tree-id60688 . -115) (undo-tree-id60689 . -115) (undo-tree-id60690 . -115) (undo-tree-id60691 . -115) (undo-tree-id60692 . -115) (undo-tree-id60693 . -115) (undo-tree-id60694 . -116) (undo-tree-id60695 . -116) (undo-tree-id60696 . -116) (undo-tree-id60697 . -116) (undo-tree-id60698 . -116) (undo-tree-id60699 . -116) (undo-tree-id60700 . -116) (undo-tree-id60701 . -116) (undo-tree-id60702 . -116) (undo-tree-id60703 . -116) (undo-tree-id60704 . -116) (undo-tree-id60705 . -116) (undo-tree-id60706 . -116) (undo-tree-id60707 . -116) (undo-tree-id60708 . -116) (undo-tree-id60709 . -116) (undo-tree-id60710 . -116) (undo-tree-id60711 . -116) (undo-tree-id60712 . -116) (undo-tree-id60713 . -116) (undo-tree-id60714 . -116) (undo-tree-id60715 . -116) (undo-tree-id60716 . -116) (undo-tree-id60717 . -116) (undo-tree-id60718 . -116) (undo-tree-id60719 . -116) (undo-tree-id60720 . -116) (undo-tree-id60721 . -116) (undo-tree-id60722 . -116) (undo-tree-id60723 . -116) (undo-tree-id60724 . -116) (undo-tree-id60725 . -116) (undo-tree-id60726 . -116) (undo-tree-id60727 . -116) (undo-tree-id60728 . -116) (undo-tree-id60729 . -116) (undo-tree-id60730 . -116) (undo-tree-id60731 . -116) (undo-tree-id60732 . -116) (undo-tree-id60733 . -116) (undo-tree-id60734 . -116) (undo-tree-id60735 . -116) (undo-tree-id60736 . -116) (undo-tree-id60737 . -116) (undo-tree-id60738 . -116) (undo-tree-id60739 . -116) (undo-tree-id60740 . -116) (undo-tree-id60741 . -116) (undo-tree-id60742 . -116) (undo-tree-id60743 . -116) (undo-tree-id60744 . -116) (undo-tree-id60745 . -116) (undo-tree-id60746 . -116) (undo-tree-id60747 . -116) (undo-tree-id60748 . -116) (undo-tree-id60749 . -116) (undo-tree-id60750 . -116) (undo-tree-id60751 . -116) (undo-tree-id60752 . -116) (undo-tree-id60753 . -116) (undo-tree-id60754 . -116) (undo-tree-id60755 . -116) (undo-tree-id60756 . -116) (undo-tree-id60757 . -116) (undo-tree-id60758 . -116) (undo-tree-id60759 . -116) (undo-tree-id60760 . -116) (undo-tree-id60761 . -116) (undo-tree-id60762 . -116) (undo-tree-id60763 . -116) (undo-tree-id60764 . -116) (undo-tree-id60765 . -116) (undo-tree-id60766 . -116) (undo-tree-id60767 . -116) (undo-tree-id60768 . -116) (undo-tree-id60769 . -116) (undo-tree-id60770 . -116) (undo-tree-id60771 . -116) (undo-tree-id60772 . -116) (undo-tree-id60773 . -116) (undo-tree-id60774 . -116) (undo-tree-id60775 . -116) (undo-tree-id60776 . -116) (undo-tree-id60777 . -116) (undo-tree-id60778 . -116) (undo-tree-id60779 . -116) (undo-tree-id60780 . -116) (undo-tree-id60781 . -116) (undo-tree-id60782 . -116) (undo-tree-id60783 . -116) (undo-tree-id60784 . -116) (undo-tree-id60785 . -116) (undo-tree-id60786 . -116) (undo-tree-id60787 . -116) (undo-tree-id60788 . -116) (undo-tree-id60789 . -116) (undo-tree-id60790 . -116) (undo-tree-id60791 . -116) (undo-tree-id60792 . -116) (undo-tree-id60793 . -116) (undo-tree-id60794 . -116) (undo-tree-id60795 . -116) (undo-tree-id60796 . -116) (undo-tree-id60797 . -116) (undo-tree-id60798 . -116) (undo-tree-id60799 . -116) (undo-tree-id60800 . -116) (undo-tree-id60801 . -116) (undo-tree-id60802 . -116) (undo-tree-id60803 . -116) (undo-tree-id60804 . -116) (undo-tree-id60805 . -116) (undo-tree-id60806 . -116) (undo-tree-id60807 . -116) (undo-tree-id60808 . -116) (undo-tree-id60809 . -116) (undo-tree-id60810 . -116) (undo-tree-id60811 . -116) (undo-tree-id60812 . -116) (undo-tree-id60813 . -116) (undo-tree-id60814 . -116) (undo-tree-id60815 . -116) (undo-tree-id60816 . -116) (undo-tree-id60817 . -116) (undo-tree-id60818 . -116) (undo-tree-id60819 . -116) (undo-tree-id60820 . -116) (undo-tree-id60821 . -116) (undo-tree-id60822 . -116) (undo-tree-id60823 . -116) (undo-tree-id60824 . -116) (undo-tree-id60825 . -116) (undo-tree-id60826 . -116) (undo-tree-id60827 . -116) (undo-tree-id60828 . -116) (undo-tree-id60829 . -116) (undo-tree-id60830 . -116) (undo-tree-id60831 . -116) (undo-tree-id60832 . -116) (undo-tree-id60833 . -116) (undo-tree-id60834 . -116) (undo-tree-id60835 . -116) (undo-tree-id60836 . -116) (undo-tree-id60837 . -116) (undo-tree-id60838 . -116) (undo-tree-id60839 . -116) (undo-tree-id60840 . -116) (undo-tree-id60841 . -116) (undo-tree-id60842 . -116) (undo-tree-id60843 . -116) (undo-tree-id60844 . -116) (undo-tree-id60845 . -116) (undo-tree-id60846 . -116) (undo-tree-id60847 . -116) (undo-tree-id60848 . -116) (undo-tree-id60849 . -116) (undo-tree-id60850 . -116) (undo-tree-id60851 . -116) (undo-tree-id60852 . -116) (undo-tree-id60853 . -116) (undo-tree-id60854 . -116) (undo-tree-id60855 . -116) (undo-tree-id60856 . -116) (undo-tree-id60857 . -116) (undo-tree-id60858 . -116) (undo-tree-id60859 . -116) (undo-tree-id60860 . -116) (undo-tree-id60861 . -116) (undo-tree-id60862 . -116) (undo-tree-id60863 . -116) (undo-tree-id60864 . -116) (undo-tree-id60865 . -116) (undo-tree-id60866 . -116) (undo-tree-id60867 . -116) (undo-tree-id60868 . -116) (undo-tree-id60869 . -116) (undo-tree-id60870 . -116) (undo-tree-id60871 . -116) (undo-tree-id60872 . -116) (undo-tree-id60873 . -116) (undo-tree-id60874 . -116) (undo-tree-id60875 . -116) (undo-tree-id60876 . -116) (undo-tree-id60877 . -116) (undo-tree-id60878 . -116) (undo-tree-id60879 . -116) (undo-tree-id60880 . -116) (undo-tree-id60881 . -116) (undo-tree-id60882 . -116) (undo-tree-id60883 . -116) (undo-tree-id60884 . -116) (undo-tree-id60885 . -116) (undo-tree-id60886 . -116) (undo-tree-id60887 . -116) (undo-tree-id60888 . -116) (undo-tree-id60889 . -116) (undo-tree-id60890 . -116) (undo-tree-id60891 . -116) (undo-tree-id60892 . -116) (undo-tree-id60893 . -116) (undo-tree-id60894 . -116) (undo-tree-id60895 . -116) (undo-tree-id60896 . -116) (undo-tree-id60897 . -116) (undo-tree-id60898 . -116) (undo-tree-id60899 . -116) (undo-tree-id60900 . -116) (undo-tree-id60901 . -116) (undo-tree-id60902 . -116) (undo-tree-id60903 . -116) (undo-tree-id60904 . -116) (undo-tree-id60905 . -116) (undo-tree-id60906 . -116) (undo-tree-id60907 . -116) (undo-tree-id60908 . -116) (undo-tree-id60909 . -116) (undo-tree-id60910 . -116) (undo-tree-id60911 . -116) (undo-tree-id60912 . -116) (undo-tree-id60913 . -116) (undo-tree-id60914 . -116) (undo-tree-id60915 . -116) (undo-tree-id60916 . -116) (undo-tree-id60917 . -116) (undo-tree-id60918 . -116) (undo-tree-id60919 . -116) (undo-tree-id60920 . -116) (undo-tree-id60921 . -116) (undo-tree-id60922 . -116) (undo-tree-id60923 . -116) (undo-tree-id60924 . -116) (undo-tree-id60925 . -116) (undo-tree-id60926 . -116) (undo-tree-id60927 . -116) (undo-tree-id60928 . -116) (undo-tree-id60929 . -116) (undo-tree-id60930 . -116) (undo-tree-id60931 . -116) (undo-tree-id60932 . -116) (undo-tree-id60933 . -116) (undo-tree-id60934 . -116) (undo-tree-id60935 . -116) (undo-tree-id60936 . -116) (undo-tree-id60937 . -116) (undo-tree-id60938 . -116) (undo-tree-id60939 . -116) (undo-tree-id60940 . -116) (undo-tree-id60941 . -116) (undo-tree-id60942 . -116) (undo-tree-id60943 . -116) (undo-tree-id60944 . -116) (undo-tree-id60945 . -116) (undo-tree-id60946 . -116) (undo-tree-id60947 . -116) (undo-tree-id60948 . -116) (undo-tree-id60949 . -116) (undo-tree-id60950 . -116) (undo-tree-id60951 . -116) (undo-tree-id60952 . -116) (undo-tree-id60953 . -116) (undo-tree-id60954 . -116) (undo-tree-id60955 . -116) (undo-tree-id60956 . -116) (undo-tree-id60957 . -116) (undo-tree-id60958 . -116) (undo-tree-id60959 . -116) (undo-tree-id60960 . -116) (undo-tree-id60961 . -116) (undo-tree-id60962 . -116) (undo-tree-id60963 . -116) (undo-tree-id60964 . -116) (undo-tree-id60965 . -116) (undo-tree-id60966 . -116) (undo-tree-id60967 . -116) (undo-tree-id60968 . -116) (undo-tree-id60969 . -116) (undo-tree-id60970 . -116) (undo-tree-id60971 . -116) (undo-tree-id60972 . -116) (undo-tree-id60973 . -116) (undo-tree-id60974 . -116) (undo-tree-id60975 . -116) (undo-tree-id60976 . -116) (undo-tree-id60977 . -116) (undo-tree-id60978 . -116) (undo-tree-id60979 . -116) (undo-tree-id60980 . -116) (undo-tree-id60981 . -116) (undo-tree-id60982 . -116) (undo-tree-id60983 . -116) (undo-tree-id60984 . -116) (undo-tree-id60985 . -116) (undo-tree-id60986 . -116) (undo-tree-id60987 . -116) (undo-tree-id60988 . -116) (undo-tree-id60989 . -116) (undo-tree-id60990 . -116) (undo-tree-id60991 . -116) (undo-tree-id60992 . -116) (undo-tree-id60993 . -116) (undo-tree-id60994 . -116) (undo-tree-id60995 . -116) (undo-tree-id60996 . -116) (undo-tree-id60997 . -116) (undo-tree-id60998 . -116) (undo-tree-id60999 . -116) (undo-tree-id61000 . -116) (undo-tree-id61001 . -116) (undo-tree-id61002 . -116) (undo-tree-id61003 . -116) (undo-tree-id61004 . -116) (undo-tree-id61005 . -116) (undo-tree-id61006 . -116) (undo-tree-id61007 . -116) (undo-tree-id61008 . -116) (undo-tree-id61009 . -116) (undo-tree-id61010 . -116) (undo-tree-id61011 . -116) (undo-tree-id61012 . -116) (undo-tree-id61013 . -116) (undo-tree-id61014 . -116) (undo-tree-id61015 . -116) (undo-tree-id61016 . -116) (undo-tree-id61017 . -116) (undo-tree-id61018 . -116) (undo-tree-id61019 . -116) (undo-tree-id61020 . -116) (undo-tree-id61021 . -116) (undo-tree-id61022 . -116) (undo-tree-id61023 . -116) (undo-tree-id61024 . -116) (undo-tree-id61025 . -116) (undo-tree-id61026 . -116) (undo-tree-id61027 . -116) (undo-tree-id61028 . -116) (undo-tree-id61029 . -116) (undo-tree-id61030 . -116) (undo-tree-id61031 . -116) (undo-tree-id61032 . -116) (undo-tree-id61033 . -116) (undo-tree-id61034 . -116) (undo-tree-id61035 . -116) (undo-tree-id61036 . -116) (undo-tree-id61037 . -116) (undo-tree-id61038 . -116) (undo-tree-id61039 . -116) (undo-tree-id61040 . -116) (undo-tree-id61041 . -116) (undo-tree-id61042 . -116) (undo-tree-id61043 . -116) (undo-tree-id61044 . -116) (undo-tree-id61045 . -116) (undo-tree-id61046 . -116) (undo-tree-id61047 . -116) (undo-tree-id61048 . -116) (undo-tree-id61049 . -116) (undo-tree-id61050 . -116) (undo-tree-id61051 . -116) (undo-tree-id61052 . -116) (undo-tree-id61053 . -116) (undo-tree-id61054 . -116) (undo-tree-id61055 . -116) (undo-tree-id61056 . -116) (undo-tree-id61057 . -116) (undo-tree-id61058 . -116) (undo-tree-id61059 . -116) (undo-tree-id61060 . -116) (undo-tree-id61061 . -116) (undo-tree-id61062 . -116) (undo-tree-id61063 . -116) (undo-tree-id61064 . -116) (undo-tree-id61065 . -116) (undo-tree-id61066 . -116) (undo-tree-id61067 . -116) (undo-tree-id61068 . -116) (undo-tree-id61069 . -116) (undo-tree-id61070 . -116) (undo-tree-id61071 . -116) (undo-tree-id61072 . -116) (undo-tree-id61073 . -116) (undo-tree-id61074 . -116) (undo-tree-id61075 . -116) (undo-tree-id61076 . -116) (undo-tree-id61077 . -116) (undo-tree-id61078 . -116) (undo-tree-id61079 . -116) (undo-tree-id61080 . -116) (undo-tree-id61081 . -116) (undo-tree-id61082 . -116) (undo-tree-id61083 . -116) (undo-tree-id61084 . -116) (undo-tree-id61085 . -116) (undo-tree-id61086 . -116) (undo-tree-id61087 . -116) (undo-tree-id61088 . -116) (undo-tree-id61089 . -116) (undo-tree-id61090 . -116) (undo-tree-id61091 . -116) (undo-tree-id61092 . -116) (undo-tree-id61093 . -116) (undo-tree-id61094 . -116) (undo-tree-id61095 . -116) (undo-tree-id61096 . -116) (undo-tree-id61097 . -116) (undo-tree-id61098 . -116) (undo-tree-id61099 . -116) (undo-tree-id61100 . -116) (undo-tree-id61101 . -116) (undo-tree-id61102 . -116) (undo-tree-id61103 . -116) (undo-tree-id61104 . -116) (undo-tree-id61105 . -116) (undo-tree-id61106 . -116) (undo-tree-id61107 . -116) (undo-tree-id61108 . -116) (undo-tree-id61109 . -116) (undo-tree-id61110 . -116) (undo-tree-id61111 . -116) (undo-tree-id61112 . -116) (undo-tree-id61113 . -116) (undo-tree-id61114 . -116) (undo-tree-id61115 . -116) (undo-tree-id61116 . -116) (undo-tree-id61117 . -116) (undo-tree-id61118 . -116) (undo-tree-id61119 . -116) (undo-tree-id61120 . -116) (undo-tree-id61121 . -116) (undo-tree-id61122 . -116) (undo-tree-id61123 . -116) (undo-tree-id61124 . -116) (undo-tree-id61125 . -116) (undo-tree-id61126 . -116) (undo-tree-id61127 . -116) (undo-tree-id61128 . -116) (undo-tree-id61129 . -116) (undo-tree-id61130 . -116) (undo-tree-id61131 . -116) (undo-tree-id61132 . -116) (undo-tree-id61133 . -116) (undo-tree-id61134 . -116) (undo-tree-id61135 . -116) (undo-tree-id61136 . -116) (undo-tree-id61137 . -116) (undo-tree-id61138 . -116) (undo-tree-id61139 . -116) (undo-tree-id61140 . -116) (undo-tree-id61141 . -116) (undo-tree-id61142 . -116) (undo-tree-id61143 . -116) (undo-tree-id61144 . -116) (undo-tree-id61145 . -116) (undo-tree-id61146 . -116) (undo-tree-id61147 . -116) (undo-tree-id61148 . -116) (undo-tree-id61149 . -116) (undo-tree-id61150 . -117) (undo-tree-id61151 . -117) (undo-tree-id61152 . -117) (undo-tree-id61153 . -117) (undo-tree-id61154 . -117) (undo-tree-id61155 . -117) (undo-tree-id61156 . -117) (undo-tree-id61157 . -117) (undo-tree-id61158 . -117) (undo-tree-id61159 . -117) (undo-tree-id61160 . -117) (undo-tree-id61161 . -117) (undo-tree-id61162 . -117) (undo-tree-id61163 . -117) (undo-tree-id61164 . -117) (undo-tree-id61165 . -117) (undo-tree-id61166 . -117) (undo-tree-id61167 . -117) (undo-tree-id61168 . -117) (undo-tree-id61169 . -117) (undo-tree-id61170 . -117) (undo-tree-id61171 . -117) (undo-tree-id61172 . -117) (undo-tree-id61173 . -117) (undo-tree-id61174 . -4) (5737 . 5741) 5850) nil (25774 62484 85942 642000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6253 . 6254) (nil fontified nil 6172 . 6254) (nil fontified nil 6069 . 6172) (nil fontified nil 5966 . 6069) (nil fontified nil 5855 . 5966) (5855 . 6254) (t 25774 62484 154292 3000)) nil (25774 62503 388064 751000) 0 nil])
([nil nil ((6170 . 6171) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -6170) (undo-tree-id62547 . -1) (6067 . 6068) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -6067) (undo-tree-id62548 . -1) (5964 . 5965) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -5964) (undo-tree-id62549 . -1) (5853 . 5854) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5853) (undo-tree-id62550 . -1) (undo-tree-id62551 . -1) (undo-tree-id62552 . -1) (undo-tree-id62553 . -1) (undo-tree-id62554 . -1) (undo-tree-id62555 . -1) (undo-tree-id62556 . -1) (undo-tree-id62557 . -1) (undo-tree-id62558 . -1) (undo-tree-id62559 . -1) (undo-tree-id62560 . -1) (undo-tree-id62561 . -1) (undo-tree-id62562 . -1) (undo-tree-id62563 . -1) (undo-tree-id62564 . -1) (undo-tree-id62565 . -1) (undo-tree-id62566 . -1) (undo-tree-id62567 . -1) (undo-tree-id62568 . -1) (undo-tree-id62569 . -1) (undo-tree-id62570 . -1) (undo-tree-id62571 . -1) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -5854) (undo-tree-id62572 . 1) (undo-tree-id62573 . -1) (undo-tree-id62574 . 1) (undo-tree-id62575 . -1) (undo-tree-id62576 . -1) (undo-tree-id62577 . -1) (undo-tree-id62578 . -1) (undo-tree-id62579 . -1) (undo-tree-id62580 . -1) (undo-tree-id62581 . -1) (undo-tree-id62582 . -1) (undo-tree-id62583 . -1) (undo-tree-id62584 . -1) (undo-tree-id62585 . -1) (undo-tree-id62586 . -1) (undo-tree-id62587 . -1) (undo-tree-id62588 . -1) (undo-tree-id62589 . -1) (undo-tree-id62590 . -1) (undo-tree-id62591 . -1) (undo-tree-id62592 . -1) (undo-tree-id62593 . -1) (undo-tree-id62594 . -1) 5853) nil (25774 62503 388059 555000) 0 nil])
([nil nil ((6253 . 6254)) nil (25774 62503 388011 103000) 0 nil])
([nil nil ((#("Before we normalize the ω𝑖𝑖𝑖𝑖 values to obtain the attention weights, a 𝑖𝑖𝑖𝑖 , let’s illustrate how we compute the ω𝑖𝑖𝑖𝑖 values with a code example" 0 110 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 110 111 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 111 147 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5854) (undo-tree-id62639 . 147) (undo-tree-id62640 . -146) (undo-tree-id62641 . 147) (undo-tree-id62642 . -147) (t 25774 62503 454475 893000)) nil (25774 62547 518850 475000) 0 nil])
([nil nil ((#(". H" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5854) (undo-tree-id62635 . 3) (undo-tree-id62636 . -2) (undo-tree-id62637 . 3) (undo-tree-id62638 . -3)) nil (25774 62547 518798 330000) 0 nil])
([nil nil ((#("er" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5854) (undo-tree-id62631 . 2) (undo-tree-id62632 . -1) (undo-tree-id62633 . 2) (undo-tree-id62634 . -2)) nil (25774 62547 518793 917000) 0 nil])
([nil nil ((#("e, l" 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5854) (undo-tree-id62627 . 4) (undo-tree-id62628 . -3) (undo-tree-id62629 . 4) (undo-tree-id62630 . -4)) nil (25774 62547 518789 187000) 0 nil])
([nil nil ((#("et’s assum" 0 10 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5854) (undo-tree-id62621 . 10) (undo-tree-id62622 . -9) (undo-tree-id62623 . 10) (undo-tree-id62624 . 10) (undo-tree-id62625 . -2) (undo-tree-id62626 . -10)) nil (25774 62547 518783 739000) 0 nil])
([nil nil ((#("e w" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5854) (undo-tree-id62617 . 3) (undo-tree-id62618 . -2) (undo-tree-id62619 . 3) (undo-tree-id62620 . -3)) nil (25774 62547 518779 172000) 0 nil])
([nil nil ((#("e hav" 0 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5854) (undo-tree-id62613 . 5) (undo-tree-id62614 . -4) (undo-tree-id62615 . 5) (undo-tree-id62616 . -5)) nil (25774 62547 518775 435000) 0 nil])
([nil nil ((#("e an input s" 0 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5854) (undo-tree-id62609 . 12) (undo-tree-id62610 . -11) (undo-tree-id62611 . 12) (undo-tree-id62612 . -12)) nil (25774 62547 518771 732000) 0 nil])
([nil nil ((#("ent" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5854) (undo-tree-id62604 . 3) (undo-tree-id62605 . -2) (undo-tree-id62606 . 3) (undo-tree-id62607 . 3) (undo-tree-id62608 . -3)) nil (25774 62547 518767 673000) 0 nil])
([nil nil ((#("enc" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5854) (undo-tree-id62599 . 3) (undo-tree-id62600 . -2) (undo-tree-id62601 . 3) (undo-tree-id62602 . 3) (undo-tree-id62603 . -3)) nil (25774 62547 520256 196000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5854) (undo-tree-id62712 . 1) (undo-tree-id62713 . 1)) nil (25774 64047 850378 530000) 0 nil] [nil nil ((#("e “can you h" 0 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5854) (undo-tree-id62595 . 12) (undo-tree-id62596 . -11) (undo-tree-id62597 . 12) (undo-tree-id62598 . -12)) ((5854 . 5866)) (25774 62547 518752 288000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5854) (undo-tree-id62710 . 1) (undo-tree-id62711 . 1)) nil (25774 64047 850376 509000) 0 nil])
nil
([nil nil ((#("that has already been mapped to an integer representation via a dictionary as explained in Chapter 15, Modeling Sequential Data Using Recurrent Neural Networks:
" 0 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 77 78 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 78 159 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 159 160 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 160 161 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 5899) (undo-tree-id62704 . -160) (undo-tree-id62705 . -160) (undo-tree-id62706 . -160) (undo-tree-id62707 . -159) (undo-tree-id62708 . -103) (undo-tree-id62709 . -160) 6059) nil (25774 64047 850374 253000) 0 nil])
([nil nil ((#("
- “can you help me to translate this sentence” " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 2 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 13 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 22 23 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 23 48 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5851) (undo-tree-id62690 . 45) (undo-tree-id62691 . -1) (undo-tree-id62692 . -47) (undo-tree-id62693 . -48) (undo-tree-id62694 . -48) (undo-tree-id62695 . -48) (undo-tree-id62696 . -48) (undo-tree-id62697 . -2) (undo-tree-id62698 . -2) (undo-tree-id62699 . -48) (undo-tree-id62700 . -48) (undo-tree-id62701 . -22) (undo-tree-id62702 . -3) (undo-tree-id62703 . -47) 5898) nil (25774 64047 850367 967000) 0 nil])
([nil nil ((5851 . 5854)) nil (25774 64047 850357 523000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6823 . 6824) (nil fontified nil 6714 . 6824) (nil fontified nil 6614 . 6714) (nil fontified nil 6518 . 6614) (nil fontified nil 6418 . 6518) (nil fontified nil 6318 . 6418) (nil fontified nil 6221 . 6318) (nil fontified nil 6122 . 6221) (nil fontified nil 6027 . 6122) (nil fontified nil 5928 . 6027) (nil fontified nil 5918 . 5928) (nil fontified nil 5854 . 5918) (5854 . 6824) 5853) nil (25774 64047 850356 468000) 0 nil])
([nil nil ((6317 . 6318) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6317) (undo-tree-id62685 . -1) (6220 . 6221) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6220) (undo-tree-id62686 . -1) (6121 . 6122) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6121) (undo-tree-id62687 . -1) (6026 . 6027) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6026) (undo-tree-id62688 . -1) (5927 . 5928) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5927) (undo-tree-id62689 . -1) 5918) nil (25774 64047 850352 864000) 0 nil])
([nil nil ((6713 . 6714) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6713) (undo-tree-id62681 . -1) (6613 . 6614) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6613) (undo-tree-id62682 . -1) (6517 . 6518) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6517) (undo-tree-id62683 . -1) (6417 . 6418) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6417) (undo-tree-id62684 . -1) 6317) nil (25774 64047 850345 112000) 0 nil])
([nil nil ((5928 . 5929)) nil (25774 64047 850339 798000) 0 nil])
([nil nil ((5917 . 5918) (#("
" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t)) . -5917) (undo-tree-id62643 . -1) (undo-tree-id62644 . -1) (undo-tree-id62645 . -1) (undo-tree-id62646 . -1) (undo-tree-id62647 . -1) (undo-tree-id62648 . -1) (undo-tree-id62649 . -1) (undo-tree-id62650 . -1) (undo-tree-id62651 . -1) (undo-tree-id62652 . -1) (undo-tree-id62653 . -1) (undo-tree-id62654 . -1) (undo-tree-id62655 . -1) (undo-tree-id62656 . -1) (undo-tree-id62657 . -1) (undo-tree-id62658 . -1) (undo-tree-id62659 . -1) (undo-tree-id62660 . -1) (undo-tree-id62661 . -1) (undo-tree-id62662 . -1) (undo-tree-id62663 . -1) (undo-tree-id62664 . -1) (undo-tree-id62665 . -1) (undo-tree-id62666 . -1) (undo-tree-id62667 . -1) (undo-tree-id62668 . -1) (undo-tree-id62669 . -1) (undo-tree-id62670 . -1) (undo-tree-id62671 . -1) (undo-tree-id62672 . -1) (undo-tree-id62673 . -1) (undo-tree-id62674 . -1) (undo-tree-id62675 . -1) (undo-tree-id62676 . -1) (undo-tree-id62677 . -1) (undo-tree-id62678 . -1) (undo-tree-id62679 . -1) (undo-tree-id62680 . -1) 5854) nil (25774 64047 850336 470000) 0 nil])
([nil nil ((6825 . 6826)) nil (25774 64047 850295 844000) 0 nil])
([nil nil ((#("Now that you have been introduced to the basic concept behind self-attention" 0 76 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . 5929) (undo-tree-id62717 . 76) (undo-tree-id62718 . -75) (undo-tree-id62719 . -4) (undo-tree-id62720 . -4) (undo-tree-id62721 . -4) (undo-tree-id62722 . -4) (undo-tree-id62723 . -4) (undo-tree-id62724 . -4) (undo-tree-id62725 . -4) (undo-tree-id62726 . -4) (undo-tree-id62727 . -4) (undo-tree-id62728 . -4) (undo-tree-id62729 . -4) (undo-tree-id62730 . -4) (undo-tree-id62731 . -4) (undo-tree-id62732 . -4) (undo-tree-id62733 . -4) (undo-tree-id62734 . -4) (undo-tree-id62735 . -4) (undo-tree-id62736 . -4) (undo-tree-id62737 . -4) (undo-tree-id62738 . -4) (undo-tree-id62739 . -4) (undo-tree-id62740 . -4) (undo-tree-id62741 . -4) (undo-tree-id62742 . -4) (undo-tree-id62743 . -4) (undo-tree-id62744 . -4) (undo-tree-id62745 . -4) (undo-tree-id62746 . -4) (undo-tree-id62747 . -4) (undo-tree-id62748 . -4) (undo-tree-id62749 . -4) (undo-tree-id62750 . -4) (undo-tree-id62751 . -4) (undo-tree-id62752 . -4) (undo-tree-id62753 . -4) (undo-tree-id62754 . -4) (undo-tree-id62755 . -4) (undo-tree-id62756 . -4) (undo-tree-id62757 . -4) (undo-tree-id62758 . -4) (undo-tree-id62759 . -4) (undo-tree-id62760 . -4) (undo-tree-id62761 . -4) (undo-tree-id62762 . -4) (undo-tree-id62763 . -4) (undo-tree-id62764 . -4) (undo-tree-id62765 . -4) (undo-tree-id62766 . -4) (undo-tree-id62767 . -4) (undo-tree-id62768 . -4) (undo-tree-id62769 . -76) (t 25774 64047 922343 241000)) nil (25774 64076 690678 0) 0 nil])
([nil nil ((5929 . 5931)) nil (25774 64105 808816 906000) 0 nil] [nil nil ((#(", this subsection sum" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t) 1 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . 5929) (undo-tree-id62714 . 21) (undo-tree-id62715 . -20) (undo-tree-id62716 . -21)) ((5929 . 5950)) (25774 64076 690167 879000) 0 nil])
([nil nil ((#(", this subsection sum- marizes the more advanced self-attention mechanism called " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 21 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 22 23 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 23 81 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5931) (undo-tree-id63859 . 81) (undo-tree-id63860 . -80) (undo-tree-id63861 . -80) (undo-tree-id63862 . -80) (undo-tree-id63863 . -80) (undo-tree-id63864 . -2) (undo-tree-id63865 . -2) (undo-tree-id63866 . -2) (undo-tree-id63867 . -2) (undo-tree-id63868 . -2) (undo-tree-id63869 . -2) (undo-tree-id63870 . -2) (undo-tree-id63871 . -2) (undo-tree-id63872 . -2) (undo-tree-id63873 . -2) (undo-tree-id63874 . -2) (undo-tree-id63875 . -2) (undo-tree-id63876 . -2) (undo-tree-id63877 . -2) (undo-tree-id63878 . -2) (undo-tree-id63879 . -2) (undo-tree-id63880 . -2) (undo-tree-id63881 . -2) (undo-tree-id63882 . -2) (undo-tree-id63883 . -2) (undo-tree-id63884 . -2) (undo-tree-id63885 . -2) (undo-tree-id63886 . -2) (undo-tree-id63887 . -2) (undo-tree-id63888 . -2) (undo-tree-id63889 . -2) (undo-tree-id63890 . -81) (undo-tree-id63891 . -80) (undo-tree-id63892 . -49) (undo-tree-id63893 . -49) (undo-tree-id63894 . -49) (undo-tree-id63895 . -49) (undo-tree-id63896 . -49) (undo-tree-id63897 . -49) (undo-tree-id63898 . -49) (undo-tree-id63899 . -49) (undo-tree-id63900 . -49) (undo-tree-id63901 . -49) (undo-tree-id63902 . -49) (undo-tree-id63903 . -49) (undo-tree-id63904 . -49) (undo-tree-id63905 . -49) (undo-tree-id63906 . -49) (undo-tree-id63907 . -49) (undo-tree-id63908 . -49) (undo-tree-id63909 . -49) (undo-tree-id63910 . -49) (undo-tree-id63911 . -49) (undo-tree-id63912 . -49) (undo-tree-id63913 . -49) (undo-tree-id63914 . -49) (undo-tree-id63915 . -49) (undo-tree-id63916 . -49) (undo-tree-id63917 . -49) (undo-tree-id63918 . -52) (undo-tree-id63919 . -52) (undo-tree-id63920 . -52) (undo-tree-id63921 . -52) (undo-tree-id63922 . -52) (undo-tree-id63923 . -52) (undo-tree-id63924 . -52) (undo-tree-id63925 . -52) (undo-tree-id63926 . -52) (undo-tree-id63927 . -52) (undo-tree-id63928 . -52) (undo-tree-id63929 . -52) (undo-tree-id63930 . -52) (undo-tree-id63931 . -52) (undo-tree-id63932 . -52) (undo-tree-id63933 . -52) (undo-tree-id63934 . -52) (undo-tree-id63935 . -52) (undo-tree-id63936 . -52) (undo-tree-id63937 . -52) (undo-tree-id63938 . -52) (undo-tree-id63939 . -53) (undo-tree-id63940 . -53) (undo-tree-id63941 . -53) (undo-tree-id63942 . -53) (undo-tree-id63943 . -53) (undo-tree-id63944 . -53) (undo-tree-id63945 . -53) (undo-tree-id63946 . -53) (undo-tree-id63947 . -53) (undo-tree-id63948 . -53) (undo-tree-id63949 . -53) (undo-tree-id63950 . -53) (undo-tree-id63951 . -53) (undo-tree-id63952 . -53) (undo-tree-id63953 . -53) (undo-tree-id63954 . -53) (undo-tree-id63955 . -53) (undo-tree-id63956 . -53) (undo-tree-id63957 . -53) (undo-tree-id63958 . -53) (undo-tree-id63959 . -53) (undo-tree-id63960 . -62) (undo-tree-id63961 . -62) (undo-tree-id63962 . -62) (undo-tree-id63963 . -62) (undo-tree-id63964 . -62) (undo-tree-id63965 . -62) (undo-tree-id63966 . -62) (undo-tree-id63967 . -62) (undo-tree-id63968 . -62) (undo-tree-id63969 . -62) (undo-tree-id63970 . -62) (undo-tree-id63971 . -62) (undo-tree-id63972 . -62) (undo-tree-id63973 . -62) (undo-tree-id63974 . -62) (undo-tree-id63975 . -62) (undo-tree-id63976 . -62) (undo-tree-id63977 . -62) (undo-tree-id63978 . -62) (undo-tree-id63979 . -62) (undo-tree-id63980 . -62) (undo-tree-id63981 . -72) (undo-tree-id63982 . -72) (undo-tree-id63983 . -72) (undo-tree-id63984 . -72) (undo-tree-id63985 . -72) (undo-tree-id63986 . -72) (undo-tree-id63987 . -72) (undo-tree-id63988 . -72) (undo-tree-id63989 . -72) (undo-tree-id63990 . -72) (undo-tree-id63991 . -72) (undo-tree-id63992 . -72) (undo-tree-id63993 . -72) (undo-tree-id63994 . -72) (undo-tree-id63995 . -72) (undo-tree-id63996 . -72) (undo-tree-id63997 . -72) (undo-tree-id63998 . -72) (undo-tree-id63999 . -72) (undo-tree-id64000 . -72) (undo-tree-id64001 . -72) (undo-tree-id64002 . -79) (undo-tree-id64003 . -79) (undo-tree-id64004 . -79) (undo-tree-id64005 . -79) (undo-tree-id64006 . -79) (undo-tree-id64007 . -79) (undo-tree-id64008 . -79) (undo-tree-id64009 . -79) (undo-tree-id64010 . -79) (undo-tree-id64011 . -79) (undo-tree-id64012 . -79) (undo-tree-id64013 . -79) (undo-tree-id64014 . -79) (undo-tree-id64015 . -79) (undo-tree-id64016 . -79) (undo-tree-id64017 . -79) (undo-tree-id64018 . -79) (undo-tree-id64019 . -79) (undo-tree-id64020 . -79) (undo-tree-id64021 . -79) (undo-tree-id64022 . -79) (undo-tree-id64023 . -79) (undo-tree-id64024 . -79) (undo-tree-id64025 . -79) (undo-tree-id64026 . -79) (undo-tree-id64027 . -79) (undo-tree-id64028 . -80) (undo-tree-id64029 . -80) (undo-tree-id64030 . -80) (undo-tree-id64031 . -80) (undo-tree-id64032 . -80) (undo-tree-id64033 . -80) (undo-tree-id64034 . -80) (undo-tree-id64035 . -80) (undo-tree-id64036 . -80) (undo-tree-id64037 . -80) (undo-tree-id64038 . -80) (undo-tree-id64039 . -80) (undo-tree-id64040 . -80) (undo-tree-id64041 . -80) (undo-tree-id64042 . -80) (undo-tree-id64043 . -80) (undo-tree-id64044 . -80) (undo-tree-id64045 . -80) (undo-tree-id64046 . -80) (undo-tree-id64047 . -80) (undo-tree-id64048 . -80) (undo-tree-id64049 . -80) (undo-tree-id64050 . -80) (undo-tree-id64051 . -80) (undo-tree-id64052 . -80) (undo-tree-id64053 . -80) (undo-tree-id64054 . -80) (undo-tree-id64055 . -81) 6011) nil (25774 64105 808810 414000) 0 nil])
nil
([nil nil ((5931 . 5932) (#("s" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5931)) nil (25774 64105 808696 777000) 0 nil])
([nil nil ((5929 . 6672) (#("- that is used in the transformer architecture. Note that in the previous subsection, we did not involve any learnable parameters when computing the outputs. In other words, using the previously introduced basic self-attention mechanism, the transformer model is rather limited regarding how it can update or change the attention values during model optimization for a given sequence. To make the self-at- tention mechanism more flexible and amenable to model optimization, we will introduce three ad- ditional weight matrices that can be fit as model parameters during model training. We denote these three weight matrices as 𝑼𝑼𝑞𝑞, 𝑼𝑼𝑘𝑘, and 𝑼𝑼𝑣𝑣 . They are used to project the inputs into query, key, and value
- Scaled dot-product attention" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 9 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 9 10 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 10 108 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 108 109 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 109 205 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 205 206 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 206 241 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 241 305 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 305 306 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 306 316 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 316 390 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 390 391 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 391 392 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 392 405 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 405 406 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 406 471 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 471 501 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 501 502 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 502 601 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 601 602 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 602 711 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 711 712 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 712 713 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 713 714 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 714 715 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 715 743 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 5929) (undo-tree-id63236 . 28) (undo-tree-id63237 . -715) (undo-tree-id63238 . -715) (undo-tree-id63239 . -715) (undo-tree-id63240 . -715) (undo-tree-id63241 . 27) (undo-tree-id63242 . -715) (undo-tree-id63243 . -715) (undo-tree-id63244 . -743) (undo-tree-id63245 . -743) (undo-tree-id63246 . -743) (undo-tree-id63247 . -743) (undo-tree-id63248 . -715) (undo-tree-id63249 . -715) (undo-tree-id63250 . -715) (undo-tree-id63251 . -715) (undo-tree-id63252 . -715) (undo-tree-id63253 . -715) (undo-tree-id63254 . -715) (undo-tree-id63255 . -715) (undo-tree-id63256 . -715) (undo-tree-id63257 . -715) (undo-tree-id63258 . -715) (undo-tree-id63259 . -715) (undo-tree-id63260 . -715) (undo-tree-id63261 . -715) (undo-tree-id63262 . -715) (undo-tree-id63263 . -715) (undo-tree-id63264 . -715) (undo-tree-id63265 . -715) (undo-tree-id63266 . -715) (undo-tree-id63267 . -715) (undo-tree-id63268 . -715) (undo-tree-id63269 . -715) (undo-tree-id63270 . -715) (undo-tree-id63271 . -715) (undo-tree-id63272 . -715) (undo-tree-id63273 . -715) (undo-tree-id63274 . -714) (undo-tree-id63275 . -714) (undo-tree-id63276 . -714) (undo-tree-id63277 . -714) (undo-tree-id63278 . -714) (undo-tree-id63279 . -714) (undo-tree-id63280 . -714) (undo-tree-id63281 . -714) (undo-tree-id63282 . -714) (undo-tree-id63283 . -714) (undo-tree-id63284 . -714) (undo-tree-id63285 . -715) (undo-tree-id63286 . -715) (undo-tree-id63287 . -715) (undo-tree-id63288 . -715) (undo-tree-id63289 . -715) (undo-tree-id63290 . -715) (undo-tree-id63291 . -715) (undo-tree-id63292 . -715) (undo-tree-id63293 . -715) (undo-tree-id63294 . -715) (undo-tree-id63295 . -715) (undo-tree-id63296 . -715) (undo-tree-id63297 . -715) (undo-tree-id63298 . -715) (undo-tree-id63299 . -715) (undo-tree-id63300 . -715) (undo-tree-id63301 . -714) (undo-tree-id63302 . -714) (undo-tree-id63303 . -714) (undo-tree-id63304 . -714) (undo-tree-id63305 . -714) (undo-tree-id63306 . -714) (undo-tree-id63307 . -714) (undo-tree-id63308 . -714) (undo-tree-id63309 . -714) (undo-tree-id63310 . -714) (undo-tree-id63311 . -714) (undo-tree-id63312 . -714) (undo-tree-id63313 . -714) (undo-tree-id63314 . -714) (undo-tree-id63315 . -714) (undo-tree-id63316 . -714) (undo-tree-id63317 . -714) (undo-tree-id63318 . -714) (undo-tree-id63319 . -714) (undo-tree-id63320 . -714) (undo-tree-id63321 . -714) (undo-tree-id63322 . -714) (undo-tree-id63323 . -714) (undo-tree-id63324 . -714) (undo-tree-id63325 . -714) (undo-tree-id63326 . -715) (undo-tree-id63327 . -715) (undo-tree-id63328 . -715) (undo-tree-id63329 . -715) (undo-tree-id63330 . -715) (undo-tree-id63331 . -715) (undo-tree-id63332 . -715) (undo-tree-id63333 . -715) (undo-tree-id63334 . -715) (undo-tree-id63335 . -715) (undo-tree-id63336 . -715) (undo-tree-id63337 . -715) (undo-tree-id63338 . -715) (undo-tree-id63339 . -715) (undo-tree-id63340 . -715) (undo-tree-id63341 . -715) (undo-tree-id63342 . -715) (undo-tree-id63343 . -715) (undo-tree-id63344 . -715) (undo-tree-id63345 . -715) (undo-tree-id63346 . -715) (undo-tree-id63347 . -715) (undo-tree-id63348 . -715) (undo-tree-id63349 . -715) (undo-tree-id63350 . -715) (undo-tree-id63351 . -715) (undo-tree-id63352 . -715) (undo-tree-id63353 . -715) (undo-tree-id63354 . -715) (undo-tree-id63355 . -715) (undo-tree-id63356 . -715) (undo-tree-id63357 . -715) (undo-tree-id63358 . -715) (undo-tree-id63359 . -715) (undo-tree-id63360 . -715) (undo-tree-id63361 . -715) (undo-tree-id63362 . -715) (undo-tree-id63363 . -715) (undo-tree-id63364 . -715) (undo-tree-id63365 . -715) (undo-tree-id63366 . -715) (undo-tree-id63367 . -715) (undo-tree-id63368 . -715) (undo-tree-id63369 . -715) (undo-tree-id63370 . -715) (undo-tree-id63371 . -715) (undo-tree-id63372 . -715) (undo-tree-id63373 . -715) (undo-tree-id63374 . -715) (undo-tree-id63375 . -715) (undo-tree-id63376 . -715) (undo-tree-id63377 . -715) (undo-tree-id63378 . -715) (undo-tree-id63379 . -715) (undo-tree-id63380 . -715) (undo-tree-id63381 . -715) (undo-tree-id63382 . -715) (undo-tree-id63383 . -715) (undo-tree-id63384 . -715) (undo-tree-id63385 . -715) (undo-tree-id63386 . -715) (undo-tree-id63387 . -715) (undo-tree-id63388 . -715) (undo-tree-id63389 . -715) (undo-tree-id63390 . -715) (undo-tree-id63391 . -715) (undo-tree-id63392 . -715) (undo-tree-id63393 . -715) (undo-tree-id63394 . -715) (undo-tree-id63395 . -715) (undo-tree-id63396 . -715) (undo-tree-id63397 . -715) (undo-tree-id63398 . -715) (undo-tree-id63399 . -715) (undo-tree-id63400 . -715) (undo-tree-id63401 . -715) (undo-tree-id63402 . -715) (undo-tree-id63403 . -715) (undo-tree-id63404 . -715) (undo-tree-id63405 . -715) (undo-tree-id63406 . -715) (undo-tree-id63407 . -715) (undo-tree-id63408 . -715) (undo-tree-id63409 . -715) (undo-tree-id63410 . -715) (undo-tree-id63411 . -715) (undo-tree-id63412 . -715) (undo-tree-id63413 . -715) (undo-tree-id63414 . -715) (undo-tree-id63415 . -715) (undo-tree-id63416 . -715) (undo-tree-id63417 . -715) (undo-tree-id63418 . -715) (undo-tree-id63419 . -715) (undo-tree-id63420 . -715) (undo-tree-id63421 . -715) (undo-tree-id63422 . -715) (undo-tree-id63423 . -715) (undo-tree-id63424 . -715) (undo-tree-id63425 . -715) (undo-tree-id63426 . -715) (undo-tree-id63427 . -715) (undo-tree-id63428 . -715) (undo-tree-id63429 . -715) (undo-tree-id63430 . -715) (undo-tree-id63431 . -715) (undo-tree-id63432 . -715) (undo-tree-id63433 . -715) (undo-tree-id63434 . -715) (undo-tree-id63435 . -715) (undo-tree-id63436 . -715) (undo-tree-id63437 . -715) (undo-tree-id63438 . -715) (undo-tree-id63439 . -715) (undo-tree-id63440 . -715) (undo-tree-id63441 . -715) (undo-tree-id63442 . -715) (undo-tree-id63443 . -715) (undo-tree-id63444 . -715) (undo-tree-id63445 . -715) (undo-tree-id63446 . -715) (undo-tree-id63447 . -715) (undo-tree-id63448 . -715) (undo-tree-id63449 . -715) (undo-tree-id63450 . -715) (undo-tree-id63451 . -715) (undo-tree-id63452 . -715) (undo-tree-id63453 . -715) (undo-tree-id63454 . -715) (undo-tree-id63455 . -715) (undo-tree-id63456 . -715) (undo-tree-id63457 . -715) (undo-tree-id63458 . -715) (undo-tree-id63459 . -715) (undo-tree-id63460 . -715) (undo-tree-id63461 . -715) (undo-tree-id63462 . -715) (undo-tree-id63463 . -715) (undo-tree-id63464 . -715) (undo-tree-id63465 . -715) (undo-tree-id63466 . -715) (undo-tree-id63467 . -715) (undo-tree-id63468 . -715) (undo-tree-id63469 . -715) (undo-tree-id63470 . -715) (undo-tree-id63471 . -715) (undo-tree-id63472 . -715) (undo-tree-id63473 . -715) (undo-tree-id63474 . -715) (undo-tree-id63475 . -715) (undo-tree-id63476 . -715) (undo-tree-id63477 . -715) (undo-tree-id63478 . -715) (undo-tree-id63479 . -715) (undo-tree-id63480 . -715) (undo-tree-id63481 . -715) (undo-tree-id63482 . -715) (undo-tree-id63483 . -715) (undo-tree-id63484 . -715) (undo-tree-id63485 . -715) (undo-tree-id63486 . -715) (undo-tree-id63487 . -715) (undo-tree-id63488 . -715) (undo-tree-id63489 . -715) (undo-tree-id63490 . -715) (undo-tree-id63491 . -715) (undo-tree-id63492 . -715) (undo-tree-id63493 . -715) (undo-tree-id63494 . -715) (undo-tree-id63495 . -715) (undo-tree-id63496 . -715) (undo-tree-id63497 . -715) (undo-tree-id63498 . -715) (undo-tree-id63499 . -715) (undo-tree-id63500 . -715) (undo-tree-id63501 . -715) (undo-tree-id63502 . -715) (undo-tree-id63503 . -715) (undo-tree-id63504 . -715) (undo-tree-id63505 . -715) (undo-tree-id63506 . -715) (undo-tree-id63507 . -715) (undo-tree-id63508 . -715) (undo-tree-id63509 . -715) (undo-tree-id63510 . -715) (undo-tree-id63511 . -715) (undo-tree-id63512 . -715) (undo-tree-id63513 . -715) (undo-tree-id63514 . -715) (undo-tree-id63515 . -715) (undo-tree-id63516 . -715) (undo-tree-id63517 . -715) (undo-tree-id63518 . -715) (undo-tree-id63519 . -715) (undo-tree-id63520 . -715) (undo-tree-id63521 . -715) (undo-tree-id63522 . -715) (undo-tree-id63523 . -715) (undo-tree-id63524 . -715) (undo-tree-id63525 . -715) (undo-tree-id63526 . -715) (undo-tree-id63527 . -715) (undo-tree-id63528 . -715) (undo-tree-id63529 . -715) (undo-tree-id63530 . -715) (undo-tree-id63531 . -715) (undo-tree-id63532 . -715) (undo-tree-id63533 . -715) (undo-tree-id63534 . -715) (undo-tree-id63535 . -715) (undo-tree-id63536 . -715) (undo-tree-id63537 . -715) (undo-tree-id63538 . -715) (undo-tree-id63539 . -715) (undo-tree-id63540 . -715) (undo-tree-id63541 . -715) (undo-tree-id63542 . -715) (undo-tree-id63543 . -715) (undo-tree-id63544 . -715) (undo-tree-id63545 . -715) (undo-tree-id63546 . -715) (undo-tree-id63547 . -715) (undo-tree-id63548 . -715) (undo-tree-id63549 . -715) (undo-tree-id63550 . -715) (undo-tree-id63551 . -715) (undo-tree-id63552 . -715) (undo-tree-id63553 . -715) (undo-tree-id63554 . -715) (undo-tree-id63555 . -715) (undo-tree-id63556 . -715) (undo-tree-id63557 . -715) (undo-tree-id63558 . -715) (undo-tree-id63559 . -715) (undo-tree-id63560 . -715) (undo-tree-id63561 . -715) (undo-tree-id63562 . -715) (undo-tree-id63563 . -715) (undo-tree-id63564 . -715) (undo-tree-id63565 . -715) (undo-tree-id63566 . -715) (undo-tree-id63567 . -715) (undo-tree-id63568 . -715) (undo-tree-id63569 . -715) (undo-tree-id63570 . -715) (undo-tree-id63571 . -715) (undo-tree-id63572 . -715) (undo-tree-id63573 . -715) (undo-tree-id63574 . -715) (undo-tree-id63575 . -715) (undo-tree-id63576 . -715) (undo-tree-id63577 . -715) (undo-tree-id63578 . -715) (undo-tree-id63579 . -715) (undo-tree-id63580 . -715) (undo-tree-id63581 . -715) (undo-tree-id63582 . -715) (undo-tree-id63583 . -715) (undo-tree-id63584 . -715) (undo-tree-id63585 . -715) (undo-tree-id63586 . -715) (undo-tree-id63587 . -715) (undo-tree-id63588 . -715) (undo-tree-id63589 . -715) (undo-tree-id63590 . -715) (undo-tree-id63591 . -715) (undo-tree-id63592 . -715) (undo-tree-id63593 . -715) (undo-tree-id63594 . -715) (undo-tree-id63595 . -715) (undo-tree-id63596 . -715) (undo-tree-id63597 . -715) (undo-tree-id63598 . -715) (undo-tree-id63599 . -715) (undo-tree-id63600 . -715) (undo-tree-id63601 . -715) (undo-tree-id63602 . -715) (undo-tree-id63603 . -715) (undo-tree-id63604 . -715) (undo-tree-id63605 . -715) (undo-tree-id63606 . -720) (undo-tree-id63607 . -720) (undo-tree-id63608 . -720) (undo-tree-id63609 . -720) (undo-tree-id63610 . -720) (undo-tree-id63611 . -720) (undo-tree-id63612 . -720) (undo-tree-id63613 . -720) (undo-tree-id63614 . -720) (undo-tree-id63615 . -720) (undo-tree-id63616 . -720) (undo-tree-id63617 . -720) (undo-tree-id63618 . -720) (undo-tree-id63619 . -720) (undo-tree-id63620 . -720) (undo-tree-id63621 . -720) (undo-tree-id63622 . -724) (undo-tree-id63623 . -724) (undo-tree-id63624 . -724) (undo-tree-id63625 . -724) (undo-tree-id63626 . -724) (undo-tree-id63627 . -724) (undo-tree-id63628 . -724) (undo-tree-id63629 . -724) (undo-tree-id63630 . -724) (undo-tree-id63631 . -724) (undo-tree-id63632 . -724) (undo-tree-id63633 . -724) (undo-tree-id63634 . -724) (undo-tree-id63635 . -724) (undo-tree-id63636 . -724) (undo-tree-id63637 . -724) (undo-tree-id63638 . -725) (undo-tree-id63639 . -725) (undo-tree-id63640 . -725) (undo-tree-id63641 . -725) (undo-tree-id63642 . -725) (undo-tree-id63643 . -725) (undo-tree-id63644 . -725) (undo-tree-id63645 . -725) (undo-tree-id63646 . -725) (undo-tree-id63647 . -725) (undo-tree-id63648 . -725) (undo-tree-id63649 . -725) (undo-tree-id63650 . -725) (undo-tree-id63651 . -725) (undo-tree-id63652 . -725) (undo-tree-id63653 . -725) (undo-tree-id63654 . -725) (undo-tree-id63655 . -725) (undo-tree-id63656 . -725) (undo-tree-id63657 . -725) (undo-tree-id63658 . -725) (undo-tree-id63659 . -725) (undo-tree-id63660 . -725) (undo-tree-id63661 . -725) (undo-tree-id63662 . -725) (undo-tree-id63663 . -725) (undo-tree-id63664 . -732) (undo-tree-id63665 . -732) (undo-tree-id63666 . -732) (undo-tree-id63667 . -732) (undo-tree-id63668 . -732) (undo-tree-id63669 . -732) (undo-tree-id63670 . -732) (undo-tree-id63671 . -732) (undo-tree-id63672 . -732) (undo-tree-id63673 . -732) (undo-tree-id63674 . -732) (undo-tree-id63675 . -732) (undo-tree-id63676 . -732) (undo-tree-id63677 . -732) (undo-tree-id63678 . -732) (undo-tree-id63679 . -732) (undo-tree-id63680 . -742) (undo-tree-id63681 . -742) (undo-tree-id63682 . -742) (undo-tree-id63683 . -742) (undo-tree-id63684 . -742) (undo-tree-id63685 . -742) (undo-tree-id63686 . -742) (undo-tree-id63687 . -742) (undo-tree-id63688 . -742) (undo-tree-id63689 . -742) (undo-tree-id63690 . -742) (undo-tree-id63691 . -742) (undo-tree-id63692 . -742) (undo-tree-id63693 . -742) (undo-tree-id63694 . -742) (undo-tree-id63695 . -742) (undo-tree-id63696 . -742) (undo-tree-id63697 . -742) (undo-tree-id63698 . -742) (undo-tree-id63699 . -742) (undo-tree-id63700 . -742) (undo-tree-id63701 . -743) (undo-tree-id63702 . -743) (undo-tree-id63703 . -743) (undo-tree-id63704 . -743) (undo-tree-id63705 . -743) (undo-tree-id63706 . -743) (undo-tree-id63707 . -743) (undo-tree-id63708 . -743) (undo-tree-id63709 . -743) (undo-tree-id63710 . -743) (undo-tree-id63711 . -743) (undo-tree-id63712 . -743) (undo-tree-id63713 . -743) (undo-tree-id63714 . -743) (undo-tree-id63715 . -743) (undo-tree-id63716 . -743) (undo-tree-id63717 . -743) (undo-tree-id63718 . -743) (undo-tree-id63719 . -743) (undo-tree-id63720 . -743) (undo-tree-id63721 . -743) (undo-tree-id63722 . -743) (undo-tree-id63723 . -743) (undo-tree-id63724 . -743) (undo-tree-id63725 . -743) (undo-tree-id63726 . -743) (undo-tree-id63727 . -743) (undo-tree-id63728 . -743) (undo-tree-id63729 . -743) (undo-tree-id63730 . -743) (undo-tree-id63731 . -743) (undo-tree-id63732 . -743) (undo-tree-id63733 . -743) (undo-tree-id63734 . -743) (undo-tree-id63735 . -743) (undo-tree-id63736 . -743) (undo-tree-id63737 . -743) (undo-tree-id63738 . -743) (undo-tree-id63739 . -743) (undo-tree-id63740 . -743) (undo-tree-id63741 . -743) (undo-tree-id63742 . -743) (undo-tree-id63743 . -743) (undo-tree-id63744 . -743) (undo-tree-id63745 . -743) (undo-tree-id63746 . -743) (undo-tree-id63747 . -743) (undo-tree-id63748 . -743) (undo-tree-id63749 . -743) (undo-tree-id63750 . -743) (undo-tree-id63751 . -743) (undo-tree-id63752 . -743) (undo-tree-id63753 . -743) (undo-tree-id63754 . -743) (undo-tree-id63755 . -743) (undo-tree-id63756 . -743) (undo-tree-id63757 . -743) (undo-tree-id63758 . -743) (undo-tree-id63759 . -743) (undo-tree-id63760 . -743) (undo-tree-id63761 . -743) (undo-tree-id63762 . -743) (undo-tree-id63763 . -743) (undo-tree-id63764 . -743) (undo-tree-id63765 . -743) (undo-tree-id63766 . -743) (undo-tree-id63767 . -743) (undo-tree-id63768 . -743) (undo-tree-id63769 . -743) (undo-tree-id63770 . -743) (undo-tree-id63771 . -743) (undo-tree-id63772 . -743) (undo-tree-id63773 . -743) (undo-tree-id63774 . -743) (undo-tree-id63775 . -743) (undo-tree-id63776 . -743) (undo-tree-id63777 . -743) (undo-tree-id63778 . -743) (undo-tree-id63779 . -743) (undo-tree-id63780 . -743) (undo-tree-id63781 . -743) (undo-tree-id63782 . -743) (undo-tree-id63783 . -743) (undo-tree-id63784 . -743) (undo-tree-id63785 . -743) (undo-tree-id63786 . -743) (undo-tree-id63787 . -743) (undo-tree-id63788 . -743) (undo-tree-id63789 . -743) (undo-tree-id63790 . -743) (undo-tree-id63791 . -743) (undo-tree-id63792 . -743) (undo-tree-id63793 . -743) (undo-tree-id63794 . -743) (undo-tree-id63795 . -743) (undo-tree-id63796 . -743) (undo-tree-id63797 . -743) (undo-tree-id63798 . -743) (undo-tree-id63799 . -743) (undo-tree-id63800 . -743) (undo-tree-id63801 . -743) (undo-tree-id63802 . -743) (undo-tree-id63803 . -713) (5929 . 6642) (#(" that is used in the transformer architecture. Note that in the previous subsection, we did not involve any learnable parameters when computing the outputs. In other words, using the previously introduced basic self-attention mechanism, the transformer model is rather limited regarding how it can update or change the attention values during model optimization for a given sequence. To make the self-at- tention mechanism more flexible and amenable to model optimization, we will introduce three ad- ditional weight matrices that can be fit as model parameters during model training. We denote these three weight matrices as 𝑼𝑼𝑞𝑞, 𝑼𝑼𝑘𝑘, and 𝑼𝑼𝑣𝑣 . They are used to project the inputs into query, key, and value" 0 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 8 9 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 9 107 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 107 108 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 108 204 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 204 205 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 205 240 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 240 304 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 304 305 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 305 315 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 315 389 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 389 390 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 390 391 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 391 404 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 404 405 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 405 470 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 470 500 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 500 501 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 501 600 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 600 601 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 601 710 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 710 711 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 5959) (undo-tree-id63804 . -710) (undo-tree-id63805 . -500) (undo-tree-id63806 . -600) (undo-tree-id63807 . -4) (undo-tree-id63808 . -4) (undo-tree-id63809 . -4) (undo-tree-id63810 . -4) (undo-tree-id63811 . -4) (undo-tree-id63812 . -4) (undo-tree-id63813 . -4) (undo-tree-id63814 . -4) (undo-tree-id63815 . -4) (undo-tree-id63816 . -4) (undo-tree-id63817 . -4) (undo-tree-id63818 . -4) (undo-tree-id63819 . -4) (undo-tree-id63820 . -4) (undo-tree-id63821 . -4) (undo-tree-id63822 . -4) (undo-tree-id63823 . -4) (undo-tree-id63824 . -4) (undo-tree-id63825 . -4) (undo-tree-id63826 . -4) (undo-tree-id63827 . -4) (undo-tree-id63828 . -1) (undo-tree-id63829 . -1) (undo-tree-id63830 . -1) (undo-tree-id63831 . -1) (undo-tree-id63832 . -1) (undo-tree-id63833 . -1) (undo-tree-id63834 . -1) (undo-tree-id63835 . -1) (undo-tree-id63836 . -1) (undo-tree-id63837 . -1) (undo-tree-id63838 . -1) (undo-tree-id63839 . -1) (undo-tree-id63840 . -1) (undo-tree-id63841 . -1) (undo-tree-id63842 . -1) (undo-tree-id63843 . -1) (undo-tree-id63844 . -1) (undo-tree-id63845 . -1) (undo-tree-id63846 . -1) (undo-tree-id63847 . -1) (undo-tree-id63848 . -1) (undo-tree-id63849 . -1) (undo-tree-id63850 . -1) (undo-tree-id63851 . -1) (undo-tree-id63852 . -1) (undo-tree-id63853 . -1) (undo-tree-id63854 . -1) (undo-tree-id63855 . -1) (undo-tree-id63856 . -1) (undo-tree-id63857 . -1) (undo-tree-id63858 . -1)) nil (25774 64105 808677 862000) 0 nil])
([nil nil ((5928 . 5929) 5855) nil (25774 64105 808290 640000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -5961) (undo-tree-id63226 . -2) (undo-tree-id63227 . -2) (undo-tree-id63228 . -2) (undo-tree-id63229 . -2) (undo-tree-id63230 . -2) (undo-tree-id63231 . -2) (undo-tree-id63232 . -2) (undo-tree-id63233 . -2) (undo-tree-id63234 . -2) (undo-tree-id63235 . -2) 5963 (5960 . 5963) 5930) nil (25774 64105 808289 168000) 0 nil])
([nil nil ((#("that is " 0 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 7 8 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 5964) (undo-tree-id63150 . -7) (undo-tree-id63151 . -7) (undo-tree-id63152 . -7) (undo-tree-id63153 . -7) (undo-tree-id63154 . -8) (undo-tree-id63155 . -7) (undo-tree-id63156 . -3) (undo-tree-id63157 . -3) (undo-tree-id63158 . -3) (undo-tree-id63159 . -3) (undo-tree-id63160 . -3) (undo-tree-id63161 . -3) (undo-tree-id63162 . -3) (undo-tree-id63163 . -3) (undo-tree-id63164 . -3) (undo-tree-id63165 . -3) (undo-tree-id63166 . -3) (undo-tree-id63167 . -3) (undo-tree-id63168 . -3) (undo-tree-id63169 . -3) (undo-tree-id63170 . -3) (undo-tree-id63171 . -3) (undo-tree-id63172 . -3) (undo-tree-id63173 . -3) (undo-tree-id63174 . -3) (undo-tree-id63175 . -3) (undo-tree-id63176 . -3) (undo-tree-id63177 . -6) (undo-tree-id63178 . -6) (undo-tree-id63179 . -6) (undo-tree-id63180 . -6) (undo-tree-id63181 . -6) (undo-tree-id63182 . -6) (undo-tree-id63183 . -6) (undo-tree-id63184 . -6) (undo-tree-id63185 . -6) (undo-tree-id63186 . -6) (undo-tree-id63187 . -6) (undo-tree-id63188 . -6) (undo-tree-id63189 . -6) (undo-tree-id63190 . -6) (undo-tree-id63191 . -6) (undo-tree-id63192 . -6) (undo-tree-id63193 . -6) (undo-tree-id63194 . -6) (undo-tree-id63195 . -6) (undo-tree-id63196 . -6) (undo-tree-id63197 . -6) (undo-tree-id63198 . -6) (undo-tree-id63199 . -6) (undo-tree-id63200 . -6) (undo-tree-id63201 . -6) (undo-tree-id63202 . -6) (undo-tree-id63203 . -7) (undo-tree-id63204 . -7) (undo-tree-id63205 . -7) (undo-tree-id63206 . -7) (undo-tree-id63207 . -7) (undo-tree-id63208 . -7) (undo-tree-id63209 . -7) (undo-tree-id63210 . -7) (undo-tree-id63211 . -7) (undo-tree-id63212 . -7) (undo-tree-id63213 . -7) (undo-tree-id63214 . -7) (undo-tree-id63215 . -7) (undo-tree-id63216 . -7) (undo-tree-id63217 . -7) (undo-tree-id63218 . -7) (undo-tree-id63219 . -7) (undo-tree-id63220 . -7) (undo-tree-id63221 . -7) (undo-tree-id63222 . -7) (undo-tree-id63223 . -7) (undo-tree-id63224 . -7) (undo-tree-id63225 . -8) 5971) nil (25774 64105 808278 319000) 0 nil])
([nil nil ((5964 . 5965) (#("u" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 5964)) nil (25774 64105 808224 919000) 0 nil])
([nil nil ((5962 . 6668) (#("- Note that in the previous subsection, we did not involve any learnable parameters when computing the outputs. In other words, using the previously introduced basic self-attention mechanism, the transformer model is rather limited regarding how it can update or change the attention values during model optimization for a given sequence. To make the self-at- tention mechanism more flexible and amenable to model optimization, we will introduce three ad- ditional weight matrices that can be fit as model parameters during model training. We denote these three weight matrices as 𝑼𝑼𝑞𝑞, 𝑼𝑼𝑘𝑘, and 𝑼𝑼𝑣𝑣 . They are used to project the inputs into query, key, and value

- Used in the transformer architecture" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 62 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 62 63 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 63 159 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 159 160 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 160 195 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 195 259 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 259 260 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 260 270 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 270 344 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 344 345 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 345 346 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 346 359 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 359 360 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 360 423 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 423 425 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 425 455 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 455 456 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 456 462 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 462 463 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 463 555 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 555 556 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 556 665 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 665 666 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 666 667 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 667 668 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 668 669 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 669 670 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 670 706 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 5962) (undo-tree-id62770 . -706) (undo-tree-id62771 . -706) (undo-tree-id62772 . -670) (undo-tree-id62773 . -670) (undo-tree-id62774 . 35) (undo-tree-id62775 . -670) (undo-tree-id62776 . -670) (undo-tree-id62777 . -706) (undo-tree-id62778 . -670) (undo-tree-id62779 . -670) (undo-tree-id62780 . -670) (undo-tree-id62781 . -670) (undo-tree-id62782 . -670) (undo-tree-id62783 . -670) (undo-tree-id62784 . -670) (undo-tree-id62785 . -670) (undo-tree-id62786 . -670) (undo-tree-id62787 . -670) (undo-tree-id62788 . -670) (undo-tree-id62789 . -670) (undo-tree-id62790 . -670) (undo-tree-id62791 . -670) (undo-tree-id62792 . -670) (undo-tree-id62793 . -670) (undo-tree-id62794 . -670) (undo-tree-id62795 . -670) (undo-tree-id62796 . -670) (undo-tree-id62797 . -670) (undo-tree-id62798 . -670) (undo-tree-id62799 . -670) (undo-tree-id62800 . -669) (undo-tree-id62801 . -669) (undo-tree-id62802 . -669) (undo-tree-id62803 . -669) (undo-tree-id62804 . -669) (undo-tree-id62805 . -669) (undo-tree-id62806 . -669) (undo-tree-id62807 . -669) (undo-tree-id62808 . -669) (undo-tree-id62809 . -669) (undo-tree-id62810 . -669) (undo-tree-id62811 . -669) (undo-tree-id62812 . -669) (undo-tree-id62813 . -669) (undo-tree-id62814 . -669) (undo-tree-id62815 . -669) (undo-tree-id62816 . -669) (undo-tree-id62817 . -669) (undo-tree-id62818 . -669) (undo-tree-id62819 . -669) (undo-tree-id62820 . -669) (undo-tree-id62821 . -669) (undo-tree-id62822 . -669) (undo-tree-id62823 . -669) (undo-tree-id62824 . -669) (undo-tree-id62825 . -669) (undo-tree-id62826 . -669) (undo-tree-id62827 . -669) (undo-tree-id62828 . -669) (undo-tree-id62829 . -669) (undo-tree-id62830 . -669) (undo-tree-id62831 . -669) (undo-tree-id62832 . -669) (undo-tree-id62833 . -669) (undo-tree-id62834 . -669) (undo-tree-id62835 . -670) (undo-tree-id62836 . -670) (undo-tree-id62837 . -670) (undo-tree-id62838 . -670) (undo-tree-id62839 . -670) (undo-tree-id62840 . -670) (undo-tree-id62841 . -670) (undo-tree-id62842 . -670) (undo-tree-id62843 . -670) (undo-tree-id62844 . -670) (undo-tree-id62845 . -670) (undo-tree-id62846 . -670) (undo-tree-id62847 . -670) (undo-tree-id62848 . -670) (undo-tree-id62849 . -670) (undo-tree-id62850 . -670) (undo-tree-id62851 . -670) (undo-tree-id62852 . -670) (undo-tree-id62853 . -670) (undo-tree-id62854 . -670) (undo-tree-id62855 . -670) (undo-tree-id62856 . -670) (undo-tree-id62857 . -670) (undo-tree-id62858 . -670) (undo-tree-id62859 . -670) (undo-tree-id62860 . -670) (undo-tree-id62861 . -670) (undo-tree-id62862 . -670) (undo-tree-id62863 . -670) (undo-tree-id62864 . -670) (undo-tree-id62865 . -670) (undo-tree-id62866 . -670) (undo-tree-id62867 . -670) (undo-tree-id62868 . -670) (undo-tree-id62869 . -670) (undo-tree-id62870 . -670) (undo-tree-id62871 . -670) (undo-tree-id62872 . -670) (undo-tree-id62873 . -670) (undo-tree-id62874 . -670) (undo-tree-id62875 . -670) (undo-tree-id62876 . -670) (undo-tree-id62877 . -670) (undo-tree-id62878 . -670) (undo-tree-id62879 . -670) (undo-tree-id62880 . -670) (undo-tree-id62881 . -670) (undo-tree-id62882 . -670) (undo-tree-id62883 . -670) (undo-tree-id62884 . -670) (undo-tree-id62885 . -670) (undo-tree-id62886 . -670) (undo-tree-id62887 . -670) (undo-tree-id62888 . -670) (undo-tree-id62889 . -670) (undo-tree-id62890 . -670) (undo-tree-id62891 . -670) (undo-tree-id62892 . -670) (undo-tree-id62893 . -670) (undo-tree-id62894 . -670) (undo-tree-id62895 . -670) (undo-tree-id62896 . -670) (undo-tree-id62897 . -670) (undo-tree-id62898 . -670) (undo-tree-id62899 . -670) (undo-tree-id62900 . -670) (undo-tree-id62901 . -670) (undo-tree-id62902 . -670) (undo-tree-id62903 . -670) (undo-tree-id62904 . -670) (undo-tree-id62905 . -670) (undo-tree-id62906 . -670) (undo-tree-id62907 . -670) (undo-tree-id62908 . -670) (undo-tree-id62909 . -670) (undo-tree-id62910 . -670) (undo-tree-id62911 . -670) (undo-tree-id62912 . -670) (undo-tree-id62913 . -670) (undo-tree-id62914 . -670) (undo-tree-id62915 . -670) (undo-tree-id62916 . -670) (undo-tree-id62917 . -670) (undo-tree-id62918 . -670) (undo-tree-id62919 . -670) (undo-tree-id62920 . -670) (undo-tree-id62921 . -670) (undo-tree-id62922 . -670) (undo-tree-id62923 . -670) (undo-tree-id62924 . -670) (undo-tree-id62925 . -670) (undo-tree-id62926 . -670) (undo-tree-id62927 . -670) (undo-tree-id62928 . -670) (undo-tree-id62929 . -670) (undo-tree-id62930 . -670) (undo-tree-id62931 . -670) (undo-tree-id62932 . -670) (undo-tree-id62933 . -670) (undo-tree-id62934 . -670) (undo-tree-id62935 . -670) (undo-tree-id62936 . -670) (undo-tree-id62937 . -670) (undo-tree-id62938 . -670) (undo-tree-id62939 . -670) (undo-tree-id62940 . -670) (undo-tree-id62941 . -670) (undo-tree-id62942 . -670) (undo-tree-id62943 . -670) (undo-tree-id62944 . -670) (undo-tree-id62945 . -670) (undo-tree-id62946 . -670) (undo-tree-id62947 . -670) (undo-tree-id62948 . -670) (undo-tree-id62949 . -670) (undo-tree-id62950 . -670) (undo-tree-id62951 . -670) (undo-tree-id62952 . -670) (undo-tree-id62953 . -670) (undo-tree-id62954 . -670) (undo-tree-id62955 . -670) (undo-tree-id62956 . -670) (undo-tree-id62957 . -670) (undo-tree-id62958 . -670) (undo-tree-id62959 . -670) (undo-tree-id62960 . -670) (undo-tree-id62961 . -670) (undo-tree-id62962 . -670) (undo-tree-id62963 . -670) (undo-tree-id62964 . -670) (undo-tree-id62965 . -670) (undo-tree-id62966 . -670) (undo-tree-id62967 . -670) (undo-tree-id62968 . -670) (undo-tree-id62969 . -670) (undo-tree-id62970 . -670) (undo-tree-id62971 . -670) (undo-tree-id62972 . -670) (undo-tree-id62973 . -670) (undo-tree-id62974 . -670) (undo-tree-id62975 . -670) (undo-tree-id62976 . -670) (undo-tree-id62977 . -670) (undo-tree-id62978 . -670) (undo-tree-id62979 . -670) (undo-tree-id62980 . -670) (undo-tree-id62981 . -670) (undo-tree-id62982 . -670) (undo-tree-id62983 . -670) (undo-tree-id62984 . -670) (undo-tree-id62985 . -670) (undo-tree-id62986 . -670) (undo-tree-id62987 . -670) (undo-tree-id62988 . -670) (undo-tree-id62989 . -670) (undo-tree-id62990 . -670) (undo-tree-id62991 . -670) (undo-tree-id62992 . -670) (undo-tree-id62993 . -670) (undo-tree-id62994 . -670) (undo-tree-id62995 . -670) (undo-tree-id62996 . -670) (undo-tree-id62997 . -670) (undo-tree-id62998 . -670) (undo-tree-id62999 . -670) (undo-tree-id63000 . -670) (undo-tree-id63001 . -670) (undo-tree-id63002 . -670) (undo-tree-id63003 . -670) (undo-tree-id63004 . -670) (undo-tree-id63005 . -670) (undo-tree-id63006 . -673) (undo-tree-id63007 . -673) (undo-tree-id63008 . -673) (undo-tree-id63009 . -673) (undo-tree-id63010 . -673) (undo-tree-id63011 . -673) (undo-tree-id63012 . -673) (undo-tree-id63013 . -673) (undo-tree-id63014 . -673) (undo-tree-id63015 . -673) (undo-tree-id63016 . -673) (undo-tree-id63017 . -673) (undo-tree-id63018 . -673) (undo-tree-id63019 . -673) (undo-tree-id63020 . -673) (undo-tree-id63021 . -673) (undo-tree-id63022 . -676) (undo-tree-id63023 . -676) (undo-tree-id63024 . -676) (undo-tree-id63025 . -676) (undo-tree-id63026 . -676) (undo-tree-id63027 . -676) (undo-tree-id63028 . -676) (undo-tree-id63029 . -676) (undo-tree-id63030 . -676) (undo-tree-id63031 . -676) (undo-tree-id63032 . -676) (undo-tree-id63033 . -676) (undo-tree-id63034 . -676) (undo-tree-id63035 . -676) (undo-tree-id63036 . -676) (undo-tree-id63037 . -676) (undo-tree-id63038 . -676) (undo-tree-id63039 . -676) (undo-tree-id63040 . -676) (undo-tree-id63041 . -676) (undo-tree-id63042 . -676) (undo-tree-id63043 . -676) (undo-tree-id63044 . -676) (undo-tree-id63045 . -676) (undo-tree-id63046 . -676) (undo-tree-id63047 . -676) (undo-tree-id63048 . -680) (undo-tree-id63049 . -680) (undo-tree-id63050 . -680) (undo-tree-id63051 . -680) (undo-tree-id63052 . -680) (undo-tree-id63053 . -680) (undo-tree-id63054 . -680) (undo-tree-id63055 . -680) (undo-tree-id63056 . -680) (undo-tree-id63057 . -680) (undo-tree-id63058 . -680) (undo-tree-id63059 . -680) (undo-tree-id63060 . -680) (undo-tree-id63061 . -680) (undo-tree-id63062 . -680) (undo-tree-id63063 . -680) (undo-tree-id63064 . -692) (undo-tree-id63065 . -692) (undo-tree-id63066 . -692) (undo-tree-id63067 . -692) (undo-tree-id63068 . -692) (undo-tree-id63069 . -692) (undo-tree-id63070 . -692) (undo-tree-id63071 . -692) (undo-tree-id63072 . -692) (undo-tree-id63073 . -692) (undo-tree-id63074 . -692) (undo-tree-id63075 . -692) (undo-tree-id63076 . -692) (undo-tree-id63077 . -692) (undo-tree-id63078 . -692) (undo-tree-id63079 . -692) (undo-tree-id63080 . -705) (undo-tree-id63081 . -705) (undo-tree-id63082 . -705) (undo-tree-id63083 . -705) (undo-tree-id63084 . -705) (undo-tree-id63085 . -705) (undo-tree-id63086 . -705) (undo-tree-id63087 . -705) (undo-tree-id63088 . -705) (undo-tree-id63089 . -705) (undo-tree-id63090 . -705) (undo-tree-id63091 . -705) (undo-tree-id63092 . -705) (undo-tree-id63093 . -705) (undo-tree-id63094 . -705) (undo-tree-id63095 . -705) (undo-tree-id63096 . -705) (undo-tree-id63097 . -705) (undo-tree-id63098 . -705) (undo-tree-id63099 . -705) (undo-tree-id63100 . -705) (undo-tree-id63101 . -706) (undo-tree-id63102 . -706) (undo-tree-id63103 . -706) (undo-tree-id63104 . -706) (undo-tree-id63105 . -706) (undo-tree-id63106 . -706) (undo-tree-id63107 . -706) (undo-tree-id63108 . -706) (undo-tree-id63109 . -706) (undo-tree-id63110 . -706) (undo-tree-id63111 . -706) (undo-tree-id63112 . -706) (undo-tree-id63113 . -706) (undo-tree-id63114 . -706) (undo-tree-id63115 . -706) (undo-tree-id63116 . -706) (undo-tree-id63117 . -706) (undo-tree-id63118 . -706) (undo-tree-id63119 . -706) (undo-tree-id63120 . -706) (undo-tree-id63121 . -706) (undo-tree-id63122 . -706) (undo-tree-id63123 . -706) (undo-tree-id63124 . -706) (undo-tree-id63125 . -706) (undo-tree-id63126 . -706) (undo-tree-id63127 . -706) (undo-tree-id63128 . -706) (undo-tree-id63129 . -706) (undo-tree-id63130 . -706) (undo-tree-id63131 . -706) (undo-tree-id63132 . -706) (undo-tree-id63133 . -706) (undo-tree-id63134 . -706) (undo-tree-id63135 . -706) (undo-tree-id63136 . -706) (undo-tree-id63137 . -706) (undo-tree-id63138 . -706) (undo-tree-id63139 . -706) (undo-tree-id63140 . -706) (undo-tree-id63141 . -706) (undo-tree-id63142 . -706) (undo-tree-id63143 . -706) (undo-tree-id63144 . -706) (undo-tree-id63145 . -706) (undo-tree-id63146 . -668) (5962 . 6630) (#(" Note that in the previous subsection, we did not involve any learnable parameters when computing the outputs. In other words, using the previously introduced basic self-attention mechanism, the transformer model is rather limited regarding how it can update or change the attention values during model optimization for a given sequence. To make the self-at- tention mechanism more flexible and amenable to model optimization, we will introduce three ad- ditional weight matrices that can be fit as model parameters during model training. We denote these three weight matrices as 𝑼𝑼𝑞𝑞, 𝑼𝑼𝑘𝑘, and 𝑼𝑼𝑣𝑣 . They are used to project the inputs into query, key, and value" 0 61 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 61 62 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 62 158 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 158 159 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 159 194 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 194 258 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 258 259 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 259 269 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 269 343 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 343 344 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 344 345 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 345 358 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 358 359 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 359 422 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 422 424 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 424 454 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 454 455 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 455 461 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 461 462 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 462 554 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 554 555 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 555 664 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 664 665 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 6000) (#("." 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6000) (undo-tree-id63147 . -1) (undo-tree-id63148 . -1) (undo-tree-id63149 . -1)) nil (25774 64105 808206 584000) 0 nil])
([nil nil ((#("Note that in the previous subsection, we did not involve any learnable parameters when computing the outputs" 0 60 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 60 61 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 61 108 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6004) (undo-tree-id64071 . 108) (undo-tree-id64072 . -107) (undo-tree-id64073 . -108) (t 25774 64105 875303 727000)) nil (25774 64131 390661 383000) 0 nil])
([nil nil ((#(". " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6004) (undo-tree-id64068 . 2) (undo-tree-id64069 . -1) (undo-tree-id64070 . -2)) nil (25774 64131 390657 865000) 0 nil])
([nil nil ((#("In other words" 0 14 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6004) (undo-tree-id64065 . 14) (undo-tree-id64066 . -13) (undo-tree-id64067 . -14)) nil (25774 64131 390654 936000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6004) (undo-tree-id64062 . 2) (undo-tree-id64063 . -1) (undo-tree-id64064 . -2)) nil (25774 64131 390651 462000) 0 nil])
([nil nil ((#("using the previously introduced basic self-attention mechanism, the transformer model is rather limited regarding how it can update or change the attention values during model optimization for a given sequence" 0 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 31 32 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 32 67 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 67 131 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 131 132 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 132 142 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 142 209 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6004) (undo-tree-id64059 . 209) (undo-tree-id64060 . -208) (undo-tree-id64061 . -209)) nil (25774 64131 390647 610000) 0 nil])
([nil nil ((#(". " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6004) (undo-tree-id64056 . 2) (undo-tree-id64057 . -1) (undo-tree-id64058 . -2)) nil (25774 64131 390641 658000) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6023) (undo-tree-id67466 . -1) (undo-tree-id67467 . -1) (t 25774 64131 459724 357000)) nil (25774 64207 424476 354000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6023) (undo-tree-id67464 . -1) (undo-tree-id67465 . -1)) nil (25774 64207 424474 276000) 0 nil])
([nil nil ((#("mechanism" 0 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6031) (undo-tree-id67388 . -8) (undo-tree-id67389 . -8) (undo-tree-id67390 . -8) (undo-tree-id67391 . -8) (undo-tree-id67392 . -8) (undo-tree-id67393 . -8) (undo-tree-id67394 . -8) (undo-tree-id67395 . -8) (undo-tree-id67396 . -8) (undo-tree-id67397 . -8) (undo-tree-id67398 . -8) (undo-tree-id67399 . -8) (undo-tree-id67400 . -8) (undo-tree-id67401 . -8) (undo-tree-id67402 . -8) (undo-tree-id67403 . -8) (undo-tree-id67404 . -8) (undo-tree-id67405 . -8) (undo-tree-id67406 . -8) (undo-tree-id67407 . -8) (undo-tree-id67408 . -2) (undo-tree-id67409 . -2) (undo-tree-id67410 . -2) (undo-tree-id67411 . -2) (undo-tree-id67412 . -2) (undo-tree-id67413 . -2) (undo-tree-id67414 . -2) (undo-tree-id67415 . -2) (undo-tree-id67416 . -2) (undo-tree-id67417 . -2) (undo-tree-id67418 . -2) (undo-tree-id67419 . -2) (undo-tree-id67420 . -2) (undo-tree-id67421 . -2) (undo-tree-id67422 . -2) (undo-tree-id67423 . -2) (undo-tree-id67424 . -9) (undo-tree-id67425 . -8) (undo-tree-id67426 . -8) (undo-tree-id67427 . -8) (undo-tree-id67428 . -8) (undo-tree-id67429 . -8) (undo-tree-id67430 . -8) (undo-tree-id67431 . -8) (undo-tree-id67432 . -8) (undo-tree-id67433 . -8) (undo-tree-id67434 . -8) (undo-tree-id67435 . -8) (undo-tree-id67436 . -8) (undo-tree-id67437 . -8) (undo-tree-id67438 . -8) (undo-tree-id67439 . -8) (undo-tree-id67440 . -8) (undo-tree-id67441 . -8) (undo-tree-id67442 . -8) (undo-tree-id67443 . -8) (undo-tree-id67444 . -8) (undo-tree-id67445 . -8) (undo-tree-id67446 . -8) (undo-tree-id67447 . -8) (undo-tree-id67448 . -8) (undo-tree-id67449 . -8) (undo-tree-id67450 . -8) (undo-tree-id67451 . -8) (undo-tree-id67452 . -8) (undo-tree-id67453 . -8) (undo-tree-id67454 . -8) (undo-tree-id67455 . -8) (undo-tree-id67456 . -8) (undo-tree-id67457 . -8) (undo-tree-id67458 . -8) (undo-tree-id67459 . -8) (undo-tree-id67460 . -8) (undo-tree-id67461 . -8) (undo-tree-id67462 . -8) (undo-tree-id67463 . -9) 6039) nil (25774 64207 424470 93000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6031) (undo-tree-id67364 . 1) (undo-tree-id67365 . -1) (undo-tree-id67366 . -1) (undo-tree-id67367 . -1) (undo-tree-id67368 . -1) (undo-tree-id67369 . -1) (undo-tree-id67370 . -1) (undo-tree-id67371 . -1) (undo-tree-id67372 . -1) (undo-tree-id67373 . -1) (undo-tree-id67374 . -1) (undo-tree-id67375 . -1) (undo-tree-id67376 . -1) (undo-tree-id67377 . -1) (undo-tree-id67378 . -1) (undo-tree-id67379 . -1) (undo-tree-id67380 . -1) (undo-tree-id67381 . -1) (undo-tree-id67382 . -1) (undo-tree-id67383 . -1) (undo-tree-id67384 . -1) (undo-tree-id67385 . -1) (undo-tree-id67386 . -1) (undo-tree-id67387 . -1)) nil (25774 64207 424424 589000) 0 nil])
([nil nil ((6044 . 6045)) nil (25774 64207 424410 530000) 0 nil])
([nil nil ((#("and amenable to model optimization" 0 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 31 33 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 33 34 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6046) (undo-tree-id67052 . -33) (undo-tree-id67053 . -33) (undo-tree-id67054 . -33) (undo-tree-id67055 . -33) (undo-tree-id67056 . -2) (undo-tree-id67057 . -2) (undo-tree-id67058 . -2) (undo-tree-id67059 . -2) (undo-tree-id67060 . -2) (undo-tree-id67061 . -2) (undo-tree-id67062 . -2) (undo-tree-id67063 . -2) (undo-tree-id67064 . -2) (undo-tree-id67065 . -2) (undo-tree-id67066 . -2) (undo-tree-id67067 . -2) (undo-tree-id67068 . -2) (undo-tree-id67069 . -2) (undo-tree-id67070 . -2) (undo-tree-id67071 . -2) (undo-tree-id67072 . -2) (undo-tree-id67073 . -2) (undo-tree-id67074 . -2) (undo-tree-id67075 . -2) (undo-tree-id67076 . -2) (undo-tree-id67077 . -11) (undo-tree-id67078 . -11) (undo-tree-id67079 . -11) (undo-tree-id67080 . -11) (undo-tree-id67081 . -11) (undo-tree-id67082 . -11) (undo-tree-id67083 . -11) (undo-tree-id67084 . -11) (undo-tree-id67085 . -11) (undo-tree-id67086 . -11) (undo-tree-id67087 . -11) (undo-tree-id67088 . -11) (undo-tree-id67089 . -11) (undo-tree-id67090 . -11) (undo-tree-id67091 . -11) (undo-tree-id67092 . -11) (undo-tree-id67093 . -11) (undo-tree-id67094 . -11) (undo-tree-id67095 . -11) (undo-tree-id67096 . -11) (undo-tree-id67097 . -11) (undo-tree-id67098 . -14) (undo-tree-id67099 . -14) (undo-tree-id67100 . -14) (undo-tree-id67101 . -14) (undo-tree-id67102 . -14) (undo-tree-id67103 . -14) (undo-tree-id67104 . -14) (undo-tree-id67105 . -14) (undo-tree-id67106 . -14) (undo-tree-id67107 . -14) (undo-tree-id67108 . -14) (undo-tree-id67109 . -14) (undo-tree-id67110 . -14) (undo-tree-id67111 . -14) (undo-tree-id67112 . -14) (undo-tree-id67113 . -14) (undo-tree-id67114 . -20) (undo-tree-id67115 . -20) (undo-tree-id67116 . -20) (undo-tree-id67117 . -20) (undo-tree-id67118 . -20) (undo-tree-id67119 . -20) (undo-tree-id67120 . -20) (undo-tree-id67121 . -20) (undo-tree-id67122 . -20) (undo-tree-id67123 . -20) (undo-tree-id67124 . -20) (undo-tree-id67125 . -20) (undo-tree-id67126 . -20) (undo-tree-id67127 . -20) (undo-tree-id67128 . -20) (undo-tree-id67129 . -20) (undo-tree-id67130 . -33) (undo-tree-id67131 . -33) (undo-tree-id67132 . -33) (undo-tree-id67133 . -33) (undo-tree-id67134 . -33) (undo-tree-id67135 . -33) (undo-tree-id67136 . -33) (undo-tree-id67137 . -33) (undo-tree-id67138 . -33) (undo-tree-id67139 . -33) (undo-tree-id67140 . -33) (undo-tree-id67141 . -33) (undo-tree-id67142 . -33) (undo-tree-id67143 . -33) (undo-tree-id67144 . -33) (undo-tree-id67145 . -33) (undo-tree-id67146 . -33) (undo-tree-id67147 . -33) (undo-tree-id67148 . -33) (undo-tree-id67149 . -33) (undo-tree-id67150 . -33) (undo-tree-id67151 . -33) (undo-tree-id67152 . -33) (undo-tree-id67153 . -33) (undo-tree-id67154 . -33) (undo-tree-id67155 . -33) (undo-tree-id67156 . -33) (undo-tree-id67157 . -33) (undo-tree-id67158 . -33) (undo-tree-id67159 . -33) (undo-tree-id67160 . -33) (undo-tree-id67161 . -2) (undo-tree-id67162 . -2) (undo-tree-id67163 . -2) (undo-tree-id67164 . -2) (undo-tree-id67165 . -2) (undo-tree-id67166 . -2) (undo-tree-id67167 . -2) (undo-tree-id67168 . -2) (undo-tree-id67169 . -2) (undo-tree-id67170 . -2) (undo-tree-id67171 . -2) (undo-tree-id67172 . -2) (undo-tree-id67173 . -2) (undo-tree-id67174 . -2) (undo-tree-id67175 . -2) (undo-tree-id67176 . -2) (undo-tree-id67177 . -2) (undo-tree-id67178 . -2) (undo-tree-id67179 . -2) (undo-tree-id67180 . -2) (undo-tree-id67181 . -2) (undo-tree-id67182 . -2) (undo-tree-id67183 . -2) (undo-tree-id67184 . -2) (undo-tree-id67185 . -2) (undo-tree-id67186 . -2) (undo-tree-id67187 . -2) (undo-tree-id67188 . -2) (undo-tree-id67189 . -2) (undo-tree-id67190 . -2) (undo-tree-id67191 . -2) (undo-tree-id67192 . -4) (undo-tree-id67193 . -4) (undo-tree-id67194 . -4) (undo-tree-id67195 . -4) (undo-tree-id67196 . -4) (undo-tree-id67197 . -4) (undo-tree-id67198 . -4) (undo-tree-id67199 . -4) (undo-tree-id67200 . -4) (undo-tree-id67201 . -4) (undo-tree-id67202 . -4) (undo-tree-id67203 . -4) (undo-tree-id67204 . -4) (undo-tree-id67205 . -4) (undo-tree-id67206 . -4) (undo-tree-id67207 . -4) (undo-tree-id67208 . -34) (undo-tree-id67209 . -33) (undo-tree-id67210 . -2) (undo-tree-id67211 . -2) (undo-tree-id67212 . -2) (undo-tree-id67213 . -2) (undo-tree-id67214 . -2) (undo-tree-id67215 . -2) (undo-tree-id67216 . -2) (undo-tree-id67217 . -2) (undo-tree-id67218 . -2) (undo-tree-id67219 . -2) (undo-tree-id67220 . -2) (undo-tree-id67221 . -2) (undo-tree-id67222 . -2) (undo-tree-id67223 . -2) (undo-tree-id67224 . -2) (undo-tree-id67225 . -2) (undo-tree-id67226 . -2) (undo-tree-id67227 . -2) (undo-tree-id67228 . -2) (undo-tree-id67229 . -2) (undo-tree-id67230 . -2) (undo-tree-id67231 . -11) (undo-tree-id67232 . -11) (undo-tree-id67233 . -11) (undo-tree-id67234 . -11) (undo-tree-id67235 . -11) (undo-tree-id67236 . -11) (undo-tree-id67237 . -11) (undo-tree-id67238 . -11) (undo-tree-id67239 . -11) (undo-tree-id67240 . -11) (undo-tree-id67241 . -11) (undo-tree-id67242 . -11) (undo-tree-id67243 . -11) (undo-tree-id67244 . -11) (undo-tree-id67245 . -11) (undo-tree-id67246 . -11) (undo-tree-id67247 . -11) (undo-tree-id67248 . -11) (undo-tree-id67249 . -11) (undo-tree-id67250 . -11) (undo-tree-id67251 . -11) (undo-tree-id67252 . -14) (undo-tree-id67253 . -14) (undo-tree-id67254 . -14) (undo-tree-id67255 . -14) (undo-tree-id67256 . -14) (undo-tree-id67257 . -14) (undo-tree-id67258 . -14) (undo-tree-id67259 . -14) (undo-tree-id67260 . -14) (undo-tree-id67261 . -14) (undo-tree-id67262 . -14) (undo-tree-id67263 . -14) (undo-tree-id67264 . -14) (undo-tree-id67265 . -14) (undo-tree-id67266 . -14) (undo-tree-id67267 . -14) (undo-tree-id67268 . -14) (undo-tree-id67269 . -14) (undo-tree-id67270 . -14) (undo-tree-id67271 . -14) (undo-tree-id67272 . -14) (undo-tree-id67273 . -20) (undo-tree-id67274 . -20) (undo-tree-id67275 . -20) (undo-tree-id67276 . -20) (undo-tree-id67277 . -20) (undo-tree-id67278 . -20) (undo-tree-id67279 . -20) (undo-tree-id67280 . -20) (undo-tree-id67281 . -20) (undo-tree-id67282 . -20) (undo-tree-id67283 . -20) (undo-tree-id67284 . -20) (undo-tree-id67285 . -20) (undo-tree-id67286 . -20) (undo-tree-id67287 . -20) (undo-tree-id67288 . -20) (undo-tree-id67289 . -20) (undo-tree-id67290 . -20) (undo-tree-id67291 . -20) (undo-tree-id67292 . -20) (undo-tree-id67293 . -20) (undo-tree-id67294 . -33) (undo-tree-id67295 . -33) (undo-tree-id67296 . -33) (undo-tree-id67297 . -33) (undo-tree-id67298 . -33) (undo-tree-id67299 . -33) (undo-tree-id67300 . -33) (undo-tree-id67301 . -33) (undo-tree-id67302 . -33) (undo-tree-id67303 . -33) (undo-tree-id67304 . -33) (undo-tree-id67305 . -33) (undo-tree-id67306 . -33) (undo-tree-id67307 . -33) (undo-tree-id67308 . -33) (undo-tree-id67309 . -33) (undo-tree-id67310 . -33) (undo-tree-id67311 . -33) (undo-tree-id67312 . -33) (undo-tree-id67313 . -33) (undo-tree-id67314 . -33) (undo-tree-id67315 . -34) (undo-tree-id67316 . -34) (undo-tree-id67317 . -34) (undo-tree-id67318 . -34) (undo-tree-id67319 . -34) (undo-tree-id67320 . -34) (undo-tree-id67321 . -34) (undo-tree-id67322 . -34) (undo-tree-id67323 . -34) (undo-tree-id67324 . -34) (undo-tree-id67325 . -34) (undo-tree-id67326 . -34) (undo-tree-id67327 . -34) (undo-tree-id67328 . -34) (undo-tree-id67329 . -34) (undo-tree-id67330 . -34) (undo-tree-id67331 . -34) (undo-tree-id67332 . -34) (undo-tree-id67333 . -34) (undo-tree-id67334 . -34) (undo-tree-id67335 . -34) (undo-tree-id67336 . -34) (undo-tree-id67337 . -34) (undo-tree-id67338 . -34) (undo-tree-id67339 . -34) (undo-tree-id67340 . -34) (undo-tree-id67341 . -33) (undo-tree-id67342 . -33) (undo-tree-id67343 . -33) (undo-tree-id67344 . -33) (undo-tree-id67345 . -33) (undo-tree-id67346 . -33) (undo-tree-id67347 . -33) (undo-tree-id67348 . -33) (undo-tree-id67349 . -33) (undo-tree-id67350 . -33) (undo-tree-id67351 . -33) (undo-tree-id67352 . -33) (undo-tree-id67353 . -33) (undo-tree-id67354 . -33) (undo-tree-id67355 . -33) (undo-tree-id67356 . -33) (undo-tree-id67357 . -33) (undo-tree-id67358 . -33) (undo-tree-id67359 . -33) (undo-tree-id67360 . -33) (undo-tree-id67361 . -33) (undo-tree-id67362 . -33) (undo-tree-id67363 . -34) 6079) nil (25774 64207 424400 657000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6046) (undo-tree-id67049 . 1) (undo-tree-id67050 . -1) (undo-tree-id67051 . -1)) nil (25774 64207 424217 603000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6046) (undo-tree-id67046 . 1) (undo-tree-id67047 . -1) (undo-tree-id67048 . -1)) nil (25774 64207 424215 155000) 0 nil])
([nil nil ((#("w" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6046) (undo-tree-id67043 . 1) (undo-tree-id67044 . -1) (undo-tree-id67045 . -1)) nil (25774 64207 424212 949000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6046) (undo-tree-id67040 . 1) (undo-tree-id67041 . -1) (undo-tree-id67042 . -1)) nil (25774 64207 424210 486000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6046) (undo-tree-id67037 . 1) (undo-tree-id67038 . -1) (undo-tree-id67039 . -1)) nil (25774 64207 424208 41000) 0 nil])
([nil nil ((#("w" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6046) (undo-tree-id67034 . 1) (undo-tree-id67035 . -1) (undo-tree-id67036 . -1)) nil (25774 64207 424205 422000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6046) (undo-tree-id67031 . 1) (undo-tree-id67032 . -1) (undo-tree-id67033 . -1)) nil (25774 64207 424201 863000) 0 nil])
([nil nil ((#("l" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6046) (undo-tree-id67028 . 1) (undo-tree-id67029 . -1) (undo-tree-id67030 . -1)) nil (25774 64207 424198 844000) 0 nil])
([nil nil ((#("l" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6046) (undo-tree-id67025 . 1) (undo-tree-id67026 . -1) (undo-tree-id67027 . -1)) nil (25774 64207 424196 363000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6046) (undo-tree-id67022 . 1) (undo-tree-id67023 . -1) (undo-tree-id67024 . -1)) nil (25774 64207 424193 894000) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6064) (undo-tree-id67020 . -1) (undo-tree-id67021 . -1)) nil (25774 64207 424191 103000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6064) (undo-tree-id67018 . -1) (undo-tree-id67019 . -1)) nil (25774 64207 424189 138000) 0 nil])
([nil nil ((6088 . 6089)) nil (25774 64207 424187 330000) 0 nil])
([nil nil ((#("that can be fit as model parameters during model training." 0 58 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6090) (undo-tree-id66764 . -57) (undo-tree-id66765 . -57) (undo-tree-id66766 . -57) (undo-tree-id66767 . -57) (undo-tree-id66768 . -58) (undo-tree-id66769 . -57) (undo-tree-id66770 . -3) (undo-tree-id66771 . -3) (undo-tree-id66772 . -3) (undo-tree-id66773 . -3) (undo-tree-id66774 . -3) (undo-tree-id66775 . -3) (undo-tree-id66776 . -3) (undo-tree-id66777 . -3) (undo-tree-id66778 . -3) (undo-tree-id66779 . -3) (undo-tree-id66780 . -3) (undo-tree-id66781 . -3) (undo-tree-id66782 . -3) (undo-tree-id66783 . -3) (undo-tree-id66784 . -3) (undo-tree-id66785 . -3) (undo-tree-id66786 . -3) (undo-tree-id66787 . -3) (undo-tree-id66788 . -3) (undo-tree-id66789 . -3) (undo-tree-id66790 . -3) (undo-tree-id66791 . -3) (undo-tree-id66792 . -3) (undo-tree-id66793 . -3) (undo-tree-id66794 . -3) (undo-tree-id66795 . -3) (undo-tree-id66796 . -7) (undo-tree-id66797 . -7) (undo-tree-id66798 . -7) (undo-tree-id66799 . -7) (undo-tree-id66800 . -7) (undo-tree-id66801 . -7) (undo-tree-id66802 . -7) (undo-tree-id66803 . -7) (undo-tree-id66804 . -7) (undo-tree-id66805 . -7) (undo-tree-id66806 . -7) (undo-tree-id66807 . -7) (undo-tree-id66808 . -7) (undo-tree-id66809 . -7) (undo-tree-id66810 . -7) (undo-tree-id66811 . -7) (undo-tree-id66812 . -7) (undo-tree-id66813 . -7) (undo-tree-id66814 . -7) (undo-tree-id66815 . -7) (undo-tree-id66816 . -7) (undo-tree-id66817 . -10) (undo-tree-id66818 . -10) (undo-tree-id66819 . -10) (undo-tree-id66820 . -10) (undo-tree-id66821 . -10) (undo-tree-id66822 . -10) (undo-tree-id66823 . -10) (undo-tree-id66824 . -10) (undo-tree-id66825 . -10) (undo-tree-id66826 . -10) (undo-tree-id66827 . -10) (undo-tree-id66828 . -10) (undo-tree-id66829 . -10) (undo-tree-id66830 . -10) (undo-tree-id66831 . -10) (undo-tree-id66832 . -10) (undo-tree-id66833 . -10) (undo-tree-id66834 . -10) (undo-tree-id66835 . -10) (undo-tree-id66836 . -10) (undo-tree-id66837 . -10) (undo-tree-id66838 . -14) (undo-tree-id66839 . -14) (undo-tree-id66840 . -14) (undo-tree-id66841 . -14) (undo-tree-id66842 . -14) (undo-tree-id66843 . -14) (undo-tree-id66844 . -14) (undo-tree-id66845 . -14) (undo-tree-id66846 . -14) (undo-tree-id66847 . -14) (undo-tree-id66848 . -14) (undo-tree-id66849 . -14) (undo-tree-id66850 . -14) (undo-tree-id66851 . -14) (undo-tree-id66852 . -14) (undo-tree-id66853 . -14) (undo-tree-id66854 . -14) (undo-tree-id66855 . -14) (undo-tree-id66856 . -14) (undo-tree-id66857 . -14) (undo-tree-id66858 . -14) (undo-tree-id66859 . -17) (undo-tree-id66860 . -17) (undo-tree-id66861 . -17) (undo-tree-id66862 . -17) (undo-tree-id66863 . -17) (undo-tree-id66864 . -17) (undo-tree-id66865 . -17) (undo-tree-id66866 . -17) (undo-tree-id66867 . -17) (undo-tree-id66868 . -17) (undo-tree-id66869 . -17) (undo-tree-id66870 . -17) (undo-tree-id66871 . -17) (undo-tree-id66872 . -17) (undo-tree-id66873 . -17) (undo-tree-id66874 . -17) (undo-tree-id66875 . -17) (undo-tree-id66876 . -17) (undo-tree-id66877 . -17) (undo-tree-id66878 . -17) (undo-tree-id66879 . -17) (undo-tree-id66880 . -23) (undo-tree-id66881 . -23) (undo-tree-id66882 . -23) (undo-tree-id66883 . -23) (undo-tree-id66884 . -23) (undo-tree-id66885 . -23) (undo-tree-id66886 . -23) (undo-tree-id66887 . -23) (undo-tree-id66888 . -23) (undo-tree-id66889 . -23) (undo-tree-id66890 . -23) (undo-tree-id66891 . -23) (undo-tree-id66892 . -23) (undo-tree-id66893 . -23) (undo-tree-id66894 . -23) (undo-tree-id66895 . -23) (undo-tree-id66896 . -23) (undo-tree-id66897 . -23) (undo-tree-id66898 . -23) (undo-tree-id66899 . -23) (undo-tree-id66900 . -23) (undo-tree-id66901 . -34) (undo-tree-id66902 . -34) (undo-tree-id66903 . -34) (undo-tree-id66904 . -34) (undo-tree-id66905 . -34) (undo-tree-id66906 . -34) (undo-tree-id66907 . -34) (undo-tree-id66908 . -34) (undo-tree-id66909 . -34) (undo-tree-id66910 . -34) (undo-tree-id66911 . -34) (undo-tree-id66912 . -34) (undo-tree-id66913 . -34) (undo-tree-id66914 . -34) (undo-tree-id66915 . -34) (undo-tree-id66916 . -34) (undo-tree-id66917 . -34) (undo-tree-id66918 . -34) (undo-tree-id66919 . -34) (undo-tree-id66920 . -34) (undo-tree-id66921 . -34) (undo-tree-id66922 . -41) (undo-tree-id66923 . -41) (undo-tree-id66924 . -41) (undo-tree-id66925 . -41) (undo-tree-id66926 . -41) (undo-tree-id66927 . -41) (undo-tree-id66928 . -41) (undo-tree-id66929 . -41) (undo-tree-id66930 . -41) (undo-tree-id66931 . -41) (undo-tree-id66932 . -41) (undo-tree-id66933 . -41) (undo-tree-id66934 . -41) (undo-tree-id66935 . -41) (undo-tree-id66936 . -41) (undo-tree-id66937 . -41) (undo-tree-id66938 . -41) (undo-tree-id66939 . -41) (undo-tree-id66940 . -41) (undo-tree-id66941 . -41) (undo-tree-id66942 . -41) (undo-tree-id66943 . -47) (undo-tree-id66944 . -47) (undo-tree-id66945 . -47) (undo-tree-id66946 . -47) (undo-tree-id66947 . -47) (undo-tree-id66948 . -47) (undo-tree-id66949 . -47) (undo-tree-id66950 . -47) (undo-tree-id66951 . -47) (undo-tree-id66952 . -47) (undo-tree-id66953 . -47) (undo-tree-id66954 . -47) (undo-tree-id66955 . -47) (undo-tree-id66956 . -47) (undo-tree-id66957 . -47) (undo-tree-id66958 . -47) (undo-tree-id66959 . -47) (undo-tree-id66960 . -47) (undo-tree-id66961 . -47) (undo-tree-id66962 . -47) (undo-tree-id66963 . -47) (undo-tree-id66964 . -56) (undo-tree-id66965 . -56) (undo-tree-id66966 . -56) (undo-tree-id66967 . -56) (undo-tree-id66968 . -56) (undo-tree-id66969 . -56) (undo-tree-id66970 . -56) (undo-tree-id66971 . -56) (undo-tree-id66972 . -56) (undo-tree-id66973 . -56) (undo-tree-id66974 . -56) (undo-tree-id66975 . -56) (undo-tree-id66976 . -56) (undo-tree-id66977 . -56) (undo-tree-id66978 . -56) (undo-tree-id66979 . -56) (undo-tree-id66980 . -56) (undo-tree-id66981 . -56) (undo-tree-id66982 . -56) (undo-tree-id66983 . -56) (undo-tree-id66984 . -56) (undo-tree-id66985 . -57) (undo-tree-id66986 . -57) (undo-tree-id66987 . -57) (undo-tree-id66988 . -57) (undo-tree-id66989 . -57) (undo-tree-id66990 . -57) (undo-tree-id66991 . -57) (undo-tree-id66992 . -57) (undo-tree-id66993 . -57) (undo-tree-id66994 . -57) (undo-tree-id66995 . -57) (undo-tree-id66996 . -57) (undo-tree-id66997 . -57) (undo-tree-id66998 . -57) (undo-tree-id66999 . -57) (undo-tree-id67000 . -57) (undo-tree-id67001 . -57) (undo-tree-id67002 . -57) (undo-tree-id67003 . -57) (undo-tree-id67004 . -57) (undo-tree-id67005 . -57) (undo-tree-id67006 . -57) (undo-tree-id67007 . -57) (undo-tree-id67008 . -57) (undo-tree-id67009 . -57) (undo-tree-id67010 . -57) (undo-tree-id67011 . -57) (undo-tree-id67012 . -57) (undo-tree-id67013 . -57) (undo-tree-id67014 . -57) (undo-tree-id67015 . -57) (undo-tree-id67016 . -57) (undo-tree-id67017 . -58) 6147) nil (25774 64207 424179 182000) 0 nil])
([nil nil ((6088 . 6089) (#("," 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6088) (undo-tree-id66730 . -1) (undo-tree-id66731 . -1) (undo-tree-id66732 . -1) (undo-tree-id66733 . -1) (undo-tree-id66734 . -1) (undo-tree-id66735 . -1) (undo-tree-id66736 . -1) (undo-tree-id66737 . -1) (undo-tree-id66738 . -1) (undo-tree-id66739 . -1) (undo-tree-id66740 . -1) (undo-tree-id66741 . -1) (undo-tree-id66742 . -1) (undo-tree-id66743 . -1) (undo-tree-id66744 . -1) (undo-tree-id66745 . -1) (undo-tree-id66746 . -1) (undo-tree-id66747 . -1) (undo-tree-id66748 . -1) (undo-tree-id66749 . -1) (undo-tree-id66750 . -1) (undo-tree-id66751 . -1) (undo-tree-id66752 . -1) (undo-tree-id66753 . -1) (undo-tree-id66754 . -1) (undo-tree-id66755 . -1) (undo-tree-id66756 . -1) (undo-tree-id66757 . -1) (undo-tree-id66758 . -1) (undo-tree-id66759 . -1) (undo-tree-id66760 . -1) (undo-tree-id66761 . -1) (undo-tree-id66762 . -1) (undo-tree-id66763 . -1)) nil (25774 64207 424037 306000) 0 nil])
([nil nil ((6002 . 6219) (#("- We denote these three weight matrices as 𝑼𝑼𝑞𝑞, 𝑼𝑼𝑘𝑘, and 𝑼𝑼𝑣𝑣 . They are used to project the inputs into query, key, and value

- To make the self-attention more flexible, introduce three additional weight matrices." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 17 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 17 18 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 18 70 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 70 72 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 72 86 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 86 88 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 88 127 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 127 128 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 128 129 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 129 130 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 130 131 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 131 132 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 132 137 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 137 138 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 138 139 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 139 151 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 151 174 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 174 192 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 192 196 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 196 198 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 198 199 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 199 216 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 216 217 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6002) (undo-tree-id64489 . -216) (undo-tree-id64490 . -216) (undo-tree-id64491 . -217) (undo-tree-id64492 . -217) (undo-tree-id64493 . -217) (undo-tree-id64494 . -217) (undo-tree-id64495 . -132) (undo-tree-id64496 . -217) (undo-tree-id64497 . -132) (undo-tree-id64498 . -132) (undo-tree-id64499 . -132) (undo-tree-id64500 . -132) (undo-tree-id64501 . -132) (undo-tree-id64502 . -132) (undo-tree-id64503 . -132) (undo-tree-id64504 . -132) (undo-tree-id64505 . -132) (undo-tree-id64506 . -132) (undo-tree-id64507 . -132) (undo-tree-id64508 . -132) (undo-tree-id64509 . -132) (undo-tree-id64510 . -132) (undo-tree-id64511 . -132) (undo-tree-id64512 . -132) (undo-tree-id64513 . -132) (undo-tree-id64514 . -132) (undo-tree-id64515 . -132) (undo-tree-id64516 . -132) (undo-tree-id64517 . -132) (undo-tree-id64518 . -132) (undo-tree-id64519 . -132) (undo-tree-id64520 . -132) (undo-tree-id64521 . -132) (undo-tree-id64522 . -132) (undo-tree-id64523 . -132) (undo-tree-id64524 . -132) (undo-tree-id64525 . -132) (undo-tree-id64526 . -133) (undo-tree-id64527 . -133) (undo-tree-id64528 . -133) (undo-tree-id64529 . -133) (undo-tree-id64530 . -133) (undo-tree-id64531 . -133) (undo-tree-id64532 . -133) (undo-tree-id64533 . -133) (undo-tree-id64534 . -133) (undo-tree-id64535 . -133) (undo-tree-id64536 . -133) (undo-tree-id64537 . -133) (undo-tree-id64538 . -133) (undo-tree-id64539 . -133) (undo-tree-id64540 . -133) (undo-tree-id64541 . -133) (undo-tree-id64542 . -138) (undo-tree-id64543 . -138) (undo-tree-id64544 . -138) (undo-tree-id64545 . -138) (undo-tree-id64546 . -138) (undo-tree-id64547 . -138) (undo-tree-id64548 . -138) (undo-tree-id64549 . -138) (undo-tree-id64550 . -138) (undo-tree-id64551 . -138) (undo-tree-id64552 . -138) (undo-tree-id64553 . -138) (undo-tree-id64554 . -138) (undo-tree-id64555 . -138) (undo-tree-id64556 . -138) (undo-tree-id64557 . -138) (undo-tree-id64558 . -142) (undo-tree-id64559 . -142) (undo-tree-id64560 . -142) (undo-tree-id64561 . -142) (undo-tree-id64562 . -142) (undo-tree-id64563 . -142) (undo-tree-id64564 . -142) (undo-tree-id64565 . -142) (undo-tree-id64566 . -142) (undo-tree-id64567 . -142) (undo-tree-id64568 . -142) (undo-tree-id64569 . -142) (undo-tree-id64570 . -142) (undo-tree-id64571 . -142) (undo-tree-id64572 . -142) (undo-tree-id64573 . -142) (undo-tree-id64574 . -147) (undo-tree-id64575 . -147) (undo-tree-id64576 . -147) (undo-tree-id64577 . -147) (undo-tree-id64578 . -147) (undo-tree-id64579 . -147) (undo-tree-id64580 . -147) (undo-tree-id64581 . -147) (undo-tree-id64582 . -147) (undo-tree-id64583 . -147) (undo-tree-id64584 . -147) (undo-tree-id64585 . -147) (undo-tree-id64586 . -147) (undo-tree-id64587 . -147) (undo-tree-id64588 . -147) (undo-tree-id64589 . -147) (undo-tree-id64590 . -148) (undo-tree-id64591 . -148) (undo-tree-id64592 . -148) (undo-tree-id64593 . -148) (undo-tree-id64594 . -148) (undo-tree-id64595 . -148) (undo-tree-id64596 . -148) (undo-tree-id64597 . -148) (undo-tree-id64598 . -148) (undo-tree-id64599 . -148) (undo-tree-id64600 . -148) (undo-tree-id64601 . -148) (undo-tree-id64602 . -148) (undo-tree-id64603 . -148) (undo-tree-id64604 . -148) (undo-tree-id64605 . -148) (undo-tree-id64606 . -150) (undo-tree-id64607 . -150) (undo-tree-id64608 . -150) (undo-tree-id64609 . -150) (undo-tree-id64610 . -150) (undo-tree-id64611 . -150) (undo-tree-id64612 . -150) (undo-tree-id64613 . -150) (undo-tree-id64614 . -150) (undo-tree-id64615 . -150) (undo-tree-id64616 . -150) (undo-tree-id64617 . -150) (undo-tree-id64618 . -150) (undo-tree-id64619 . -150) (undo-tree-id64620 . -150) (undo-tree-id64621 . -150) (undo-tree-id64622 . -151) (undo-tree-id64623 . -151) (undo-tree-id64624 . -151) (undo-tree-id64625 . -151) (undo-tree-id64626 . -151) (undo-tree-id64627 . -151) (undo-tree-id64628 . -151) (undo-tree-id64629 . -151) (undo-tree-id64630 . -151) (undo-tree-id64631 . -151) (undo-tree-id64632 . -151) (undo-tree-id64633 . -151) (undo-tree-id64634 . -151) (undo-tree-id64635 . -151) (undo-tree-id64636 . -151) (undo-tree-id64637 . -151) (undo-tree-id64638 . -151) (undo-tree-id64639 . -151) (undo-tree-id64640 . -151) (undo-tree-id64641 . -151) (undo-tree-id64642 . -151) (undo-tree-id64643 . -151) (undo-tree-id64644 . -151) (undo-tree-id64645 . -151) (undo-tree-id64646 . -151) (undo-tree-id64647 . -151) (undo-tree-id64648 . -151) (undo-tree-id64649 . -151) (undo-tree-id64650 . -151) (undo-tree-id64651 . -151) (undo-tree-id64652 . -151) (undo-tree-id64653 . -151) (undo-tree-id64654 . -151) (undo-tree-id64655 . -151) (undo-tree-id64656 . -151) (undo-tree-id64657 . -151) (undo-tree-id64658 . -151) (undo-tree-id64659 . -151) (undo-tree-id64660 . -151) (undo-tree-id64661 . -151) (undo-tree-id64662 . -151) (undo-tree-id64663 . -151) (undo-tree-id64664 . -151) (undo-tree-id64665 . -151) (undo-tree-id64666 . -151) (undo-tree-id64667 . -151) (undo-tree-id64668 . -151) (undo-tree-id64669 . -151) (undo-tree-id64670 . -151) (undo-tree-id64671 . -151) (undo-tree-id64672 . -151) (undo-tree-id64673 . -151) (undo-tree-id64674 . -151) (undo-tree-id64675 . -151) (undo-tree-id64676 . -151) (undo-tree-id64677 . -151) (undo-tree-id64678 . -151) (undo-tree-id64679 . -151) (undo-tree-id64680 . -151) (undo-tree-id64681 . -151) (undo-tree-id64682 . -151) (undo-tree-id64683 . -151) (undo-tree-id64684 . -151) (undo-tree-id64685 . -151) (undo-tree-id64686 . -151) (undo-tree-id64687 . -157) (undo-tree-id64688 . -157) (undo-tree-id64689 . -157) (undo-tree-id64690 . -157) (undo-tree-id64691 . -157) (undo-tree-id64692 . -157) (undo-tree-id64693 . -157) (undo-tree-id64694 . -157) (undo-tree-id64695 . -157) (undo-tree-id64696 . -157) (undo-tree-id64697 . -157) (undo-tree-id64698 . -157) (undo-tree-id64699 . -157) (undo-tree-id64700 . -157) (undo-tree-id64701 . -157) (undo-tree-id64702 . -157) (undo-tree-id64703 . -159) (undo-tree-id64704 . -159) (undo-tree-id64705 . -159) (undo-tree-id64706 . -159) (undo-tree-id64707 . -159) (undo-tree-id64708 . -159) (undo-tree-id64709 . -159) (undo-tree-id64710 . -159) (undo-tree-id64711 . -159) (undo-tree-id64712 . -159) (undo-tree-id64713 . -159) (undo-tree-id64714 . -159) (undo-tree-id64715 . -159) (undo-tree-id64716 . -159) (undo-tree-id64717 . -159) (undo-tree-id64718 . -159) (undo-tree-id64719 . -162) (undo-tree-id64720 . -162) (undo-tree-id64721 . -162) (undo-tree-id64722 . -162) (undo-tree-id64723 . -162) (undo-tree-id64724 . -162) (undo-tree-id64725 . -162) (undo-tree-id64726 . -162) (undo-tree-id64727 . -162) (undo-tree-id64728 . -162) (undo-tree-id64729 . -162) (undo-tree-id64730 . -162) (undo-tree-id64731 . -162) (undo-tree-id64732 . -162) (undo-tree-id64733 . -162) (undo-tree-id64734 . -162) (undo-tree-id64735 . -171) (undo-tree-id64736 . -171) (undo-tree-id64737 . -171) (undo-tree-id64738 . -171) (undo-tree-id64739 . -171) (undo-tree-id64740 . -171) (undo-tree-id64741 . -171) (undo-tree-id64742 . -171) (undo-tree-id64743 . -171) (undo-tree-id64744 . -171) (undo-tree-id64745 . -171) (undo-tree-id64746 . -171) (undo-tree-id64747 . -171) (undo-tree-id64748 . -171) (undo-tree-id64749 . -171) (undo-tree-id64750 . -171) (undo-tree-id64751 . -174) (undo-tree-id64752 . -174) (undo-tree-id64753 . -174) (undo-tree-id64754 . -174) (undo-tree-id64755 . -174) (undo-tree-id64756 . -174) (undo-tree-id64757 . -174) (undo-tree-id64758 . -174) (undo-tree-id64759 . -174) (undo-tree-id64760 . -174) (undo-tree-id64761 . -174) (undo-tree-id64762 . -174) (undo-tree-id64763 . -174) (undo-tree-id64764 . -174) (undo-tree-id64765 . -174) (undo-tree-id64766 . -174) (undo-tree-id64767 . -174) (undo-tree-id64768 . -174) (undo-tree-id64769 . -174) (undo-tree-id64770 . -174) (undo-tree-id64771 . -174) (undo-tree-id64772 . -174) (undo-tree-id64773 . -174) (undo-tree-id64774 . -174) (undo-tree-id64775 . -174) (undo-tree-id64776 . -174) (undo-tree-id64777 . -174) (undo-tree-id64778 . -174) (undo-tree-id64779 . -174) (undo-tree-id64780 . -174) (undo-tree-id64781 . -174) (undo-tree-id64782 . -174) (undo-tree-id64783 . -174) (undo-tree-id64784 . -174) (undo-tree-id64785 . -174) (undo-tree-id64786 . -174) (undo-tree-id64787 . -174) (undo-tree-id64788 . -174) (undo-tree-id64789 . -174) (undo-tree-id64790 . -174) (undo-tree-id64791 . -174) (undo-tree-id64792 . -174) (undo-tree-id64793 . -174) (undo-tree-id64794 . -174) (undo-tree-id64795 . -174) (undo-tree-id64796 . -174) (undo-tree-id64797 . -174) (undo-tree-id64798 . -174) (undo-tree-id64799 . -174) (undo-tree-id64800 . -174) (undo-tree-id64801 . -174) (undo-tree-id64802 . -174) (undo-tree-id64803 . -174) (undo-tree-id64804 . -174) (undo-tree-id64805 . -174) (undo-tree-id64806 . -174) (undo-tree-id64807 . -174) (undo-tree-id64808 . -174) (undo-tree-id64809 . -174) (undo-tree-id64810 . -174) (undo-tree-id64811 . -174) (undo-tree-id64812 . -174) (undo-tree-id64813 . -174) (undo-tree-id64814 . -174) (undo-tree-id64815 . -174) (undo-tree-id64816 . -174) (undo-tree-id64817 . -174) (undo-tree-id64818 . -174) (undo-tree-id64819 . -174) (undo-tree-id64820 . -174) (undo-tree-id64821 . -174) (undo-tree-id64822 . -174) (undo-tree-id64823 . -174) (undo-tree-id64824 . -174) (undo-tree-id64825 . -174) (undo-tree-id64826 . -174) (undo-tree-id64827 . -174) (undo-tree-id64828 . -174) (undo-tree-id64829 . -174) (undo-tree-id64830 . -174) (undo-tree-id64831 . -174) (undo-tree-id64832 . -174) (undo-tree-id64833 . -174) (undo-tree-id64834 . -174) (undo-tree-id64835 . -174) (undo-tree-id64836 . -174) (undo-tree-id64837 . -174) (undo-tree-id64838 . -174) (undo-tree-id64839 . -174) (undo-tree-id64840 . -174) (undo-tree-id64841 . -174) (undo-tree-id64842 . -174) (undo-tree-id64843 . -174) (undo-tree-id64844 . -174) (undo-tree-id64845 . -174) (undo-tree-id64846 . -174) (undo-tree-id64847 . -174) (undo-tree-id64848 . -174) (undo-tree-id64849 . -174) (undo-tree-id64850 . -174) (undo-tree-id64851 . -174) (undo-tree-id64852 . -174) (undo-tree-id64853 . -174) (undo-tree-id64854 . -174) (undo-tree-id64855 . -174) (undo-tree-id64856 . -159) (undo-tree-id64857 . -159) (undo-tree-id64858 . -159) (undo-tree-id64859 . -159) (undo-tree-id64860 . -159) (undo-tree-id64861 . -159) (undo-tree-id64862 . -159) (undo-tree-id64863 . -159) (undo-tree-id64864 . -159) (undo-tree-id64865 . -159) (undo-tree-id64866 . -159) (undo-tree-id64867 . -159) (undo-tree-id64868 . -159) (undo-tree-id64869 . -159) (undo-tree-id64870 . -159) (undo-tree-id64871 . -159) (undo-tree-id64872 . -132) (undo-tree-id64873 . -132) (undo-tree-id64874 . -132) (undo-tree-id64875 . -132) (undo-tree-id64876 . -132) (undo-tree-id64877 . -132) (undo-tree-id64878 . -132) (undo-tree-id64879 . -132) (undo-tree-id64880 . -132) (undo-tree-id64881 . -132) (undo-tree-id64882 . -132) (undo-tree-id64883 . -132) (undo-tree-id64884 . -132) (undo-tree-id64885 . -132) (undo-tree-id64886 . -132) (undo-tree-id64887 . -132) (undo-tree-id64888 . -132) (undo-tree-id64889 . -132) (undo-tree-id64890 . -132) (undo-tree-id64891 . -132) (undo-tree-id64892 . -132) (undo-tree-id64893 . -132) (undo-tree-id64894 . -132) (undo-tree-id64895 . -132) (undo-tree-id64896 . -132) (undo-tree-id64897 . -132) (undo-tree-id64898 . -135) (undo-tree-id64899 . -135) (undo-tree-id64900 . -135) (undo-tree-id64901 . -135) (undo-tree-id64902 . -135) (undo-tree-id64903 . -135) (undo-tree-id64904 . -135) (undo-tree-id64905 . -135) (undo-tree-id64906 . -135) (undo-tree-id64907 . -135) (undo-tree-id64908 . -135) (undo-tree-id64909 . -135) (undo-tree-id64910 . -135) (undo-tree-id64911 . -135) (undo-tree-id64912 . -135) (undo-tree-id64913 . -135) (undo-tree-id64914 . -140) (undo-tree-id64915 . -140) (undo-tree-id64916 . -140) (undo-tree-id64917 . -140) (undo-tree-id64918 . -140) (undo-tree-id64919 . -140) (undo-tree-id64920 . -140) (undo-tree-id64921 . -140) (undo-tree-id64922 . -140) (undo-tree-id64923 . -140) (undo-tree-id64924 . -140) (undo-tree-id64925 . -140) (undo-tree-id64926 . -140) (undo-tree-id64927 . -140) (undo-tree-id64928 . -140) (undo-tree-id64929 . -140) (undo-tree-id64930 . -144) (undo-tree-id64931 . -144) (undo-tree-id64932 . -144) (undo-tree-id64933 . -144) (undo-tree-id64934 . -144) (undo-tree-id64935 . -144) (undo-tree-id64936 . -144) (undo-tree-id64937 . -144) (undo-tree-id64938 . -144) (undo-tree-id64939 . -144) (undo-tree-id64940 . -144) (undo-tree-id64941 . -144) (undo-tree-id64942 . -144) (undo-tree-id64943 . -144) (undo-tree-id64944 . -144) (undo-tree-id64945 . -144) (undo-tree-id64946 . -144) (undo-tree-id64947 . -144) (undo-tree-id64948 . -144) (undo-tree-id64949 . -144) (undo-tree-id64950 . -144) (undo-tree-id64951 . -148) (undo-tree-id64952 . -148) (undo-tree-id64953 . -148) (undo-tree-id64954 . -148) (undo-tree-id64955 . -148) (undo-tree-id64956 . -148) (undo-tree-id64957 . -148) (undo-tree-id64958 . -148) (undo-tree-id64959 . -148) (undo-tree-id64960 . -148) (undo-tree-id64961 . -148) (undo-tree-id64962 . -148) (undo-tree-id64963 . -148) (undo-tree-id64964 . -148) (undo-tree-id64965 . -148) (undo-tree-id64966 . -148) (undo-tree-id64967 . -149) (undo-tree-id64968 . -149) (undo-tree-id64969 . -149) (undo-tree-id64970 . -149) (undo-tree-id64971 . -149) (undo-tree-id64972 . -149) (undo-tree-id64973 . -149) (undo-tree-id64974 . -149) (undo-tree-id64975 . -149) (undo-tree-id64976 . -149) (undo-tree-id64977 . -149) (undo-tree-id64978 . -149) (undo-tree-id64979 . -149) (undo-tree-id64980 . -149) (undo-tree-id64981 . -149) (undo-tree-id64982 . -149) (undo-tree-id64983 . -159) (undo-tree-id64984 . -159) (undo-tree-id64985 . -159) (undo-tree-id64986 . -159) (undo-tree-id64987 . -159) (undo-tree-id64988 . -159) (undo-tree-id64989 . -159) (undo-tree-id64990 . -159) (undo-tree-id64991 . -159) (undo-tree-id64992 . -159) (undo-tree-id64993 . -159) (undo-tree-id64994 . -159) (undo-tree-id64995 . -159) (undo-tree-id64996 . -159) (undo-tree-id64997 . -159) (undo-tree-id64998 . -159) (undo-tree-id64999 . -159) (undo-tree-id65000 . -159) (undo-tree-id65001 . -159) (undo-tree-id65002 . -159) (undo-tree-id65003 . -159) (undo-tree-id65004 . -159) (undo-tree-id65005 . -159) (undo-tree-id65006 . -159) (undo-tree-id65007 . -159) (undo-tree-id65008 . -159) (undo-tree-id65009 . -159) (undo-tree-id65010 . -159) (undo-tree-id65011 . -159) (undo-tree-id65012 . -159) (undo-tree-id65013 . -159) (undo-tree-id65014 . -159) (undo-tree-id65015 . -159) (undo-tree-id65016 . -159) (undo-tree-id65017 . -159) (undo-tree-id65018 . -159) (undo-tree-id65019 . -159) (undo-tree-id65020 . -159) (undo-tree-id65021 . -159) (undo-tree-id65022 . -159) (undo-tree-id65023 . -159) (undo-tree-id65024 . -159) (undo-tree-id65025 . -159) (undo-tree-id65026 . -159) (undo-tree-id65027 . -159) (undo-tree-id65028 . -159) (undo-tree-id65029 . -159) (undo-tree-id65030 . -159) (undo-tree-id65031 . -159) (undo-tree-id65032 . -159) (undo-tree-id65033 . -159) (undo-tree-id65034 . -159) (undo-tree-id65035 . -159) (undo-tree-id65036 . -159) (undo-tree-id65037 . -159) (undo-tree-id65038 . -159) (undo-tree-id65039 . -159) (undo-tree-id65040 . -159) (undo-tree-id65041 . -159) (undo-tree-id65042 . -159) (undo-tree-id65043 . -159) (undo-tree-id65044 . -159) (undo-tree-id65045 . -159) (undo-tree-id65046 . -159) (undo-tree-id65047 . -159) (undo-tree-id65048 . -159) (undo-tree-id65049 . -159) (undo-tree-id65050 . -159) (undo-tree-id65051 . -159) (undo-tree-id65052 . -159) (undo-tree-id65053 . -159) (undo-tree-id65054 . -159) (undo-tree-id65055 . -159) (undo-tree-id65056 . -159) (undo-tree-id65057 . -159) (undo-tree-id65058 . -159) (undo-tree-id65059 . -159) (undo-tree-id65060 . -159) (undo-tree-id65061 . -159) (undo-tree-id65062 . -159) (undo-tree-id65063 . -159) (undo-tree-id65064 . -159) (undo-tree-id65065 . -159) (undo-tree-id65066 . -159) (undo-tree-id65067 . -159) (undo-tree-id65068 . -159) (undo-tree-id65069 . -159) (undo-tree-id65070 . -159) (undo-tree-id65071 . -159) (undo-tree-id65072 . -159) (undo-tree-id65073 . -159) (undo-tree-id65074 . -159) (undo-tree-id65075 . -159) (undo-tree-id65076 . -159) (undo-tree-id65077 . -159) (undo-tree-id65078 . -159) (undo-tree-id65079 . -159) (undo-tree-id65080 . -159) (undo-tree-id65081 . -159) (undo-tree-id65082 . -159) (undo-tree-id65083 . -159) (undo-tree-id65084 . -159) (undo-tree-id65085 . -159) (undo-tree-id65086 . -159) (undo-tree-id65087 . -159) (undo-tree-id65088 . -159) (undo-tree-id65089 . -159) (undo-tree-id65090 . -159) (undo-tree-id65091 . -159) (undo-tree-id65092 . -159) (undo-tree-id65093 . -159) (undo-tree-id65094 . -159) (undo-tree-id65095 . -159) (undo-tree-id65096 . -159) (undo-tree-id65097 . -159) (undo-tree-id65098 . -159) (undo-tree-id65099 . -159) (undo-tree-id65100 . -159) (undo-tree-id65101 . -159) (undo-tree-id65102 . -159) (undo-tree-id65103 . -159) (undo-tree-id65104 . -159) (undo-tree-id65105 . -159) (undo-tree-id65106 . -159) (undo-tree-id65107 . -159) (undo-tree-id65108 . -159) (undo-tree-id65109 . -159) (undo-tree-id65110 . -159) (undo-tree-id65111 . -159) (undo-tree-id65112 . -159) (undo-tree-id65113 . -159) (undo-tree-id65114 . -159) (undo-tree-id65115 . -159) (undo-tree-id65116 . -159) (undo-tree-id65117 . -159) (undo-tree-id65118 . -159) (undo-tree-id65119 . -159) (undo-tree-id65120 . -159) (undo-tree-id65121 . -159) (undo-tree-id65122 . -159) (undo-tree-id65123 . -159) (undo-tree-id65124 . -159) (undo-tree-id65125 . -159) (undo-tree-id65126 . -159) (undo-tree-id65127 . -159) (undo-tree-id65128 . -159) (undo-tree-id65129 . -159) (undo-tree-id65130 . -159) (undo-tree-id65131 . -159) (undo-tree-id65132 . -159) (undo-tree-id65133 . -159) (undo-tree-id65134 . -159) (undo-tree-id65135 . -159) (undo-tree-id65136 . -159) (undo-tree-id65137 . -159) (undo-tree-id65138 . -159) (undo-tree-id65139 . -159) (undo-tree-id65140 . -159) (undo-tree-id65141 . -159) (undo-tree-id65142 . -159) (undo-tree-id65143 . -159) (undo-tree-id65144 . -159) (undo-tree-id65145 . -162) (undo-tree-id65146 . -162) (undo-tree-id65147 . -162) (undo-tree-id65148 . -162) (undo-tree-id65149 . -162) (undo-tree-id65150 . -162) (undo-tree-id65151 . -162) (undo-tree-id65152 . -162) (undo-tree-id65153 . -162) (undo-tree-id65154 . -162) (undo-tree-id65155 . -162) (undo-tree-id65156 . -162) (undo-tree-id65157 . -162) (undo-tree-id65158 . -162) (undo-tree-id65159 . -162) (undo-tree-id65160 . -162) (undo-tree-id65161 . -171) (undo-tree-id65162 . -171) (undo-tree-id65163 . -171) (undo-tree-id65164 . -171) (undo-tree-id65165 . -171) (undo-tree-id65166 . -171) (undo-tree-id65167 . -171) (undo-tree-id65168 . -171) (undo-tree-id65169 . -171) (undo-tree-id65170 . -171) (undo-tree-id65171 . -171) (undo-tree-id65172 . -171) (undo-tree-id65173 . -171) (undo-tree-id65174 . -171) (undo-tree-id65175 . -171) (undo-tree-id65176 . -171) (undo-tree-id65177 . -174) (undo-tree-id65178 . -174) (undo-tree-id65179 . -174) (undo-tree-id65180 . -174) (undo-tree-id65181 . -174) (undo-tree-id65182 . -174) (undo-tree-id65183 . -174) (undo-tree-id65184 . -174) (undo-tree-id65185 . -174) (undo-tree-id65186 . -174) (undo-tree-id65187 . -174) (undo-tree-id65188 . -174) (undo-tree-id65189 . -174) (undo-tree-id65190 . -174) (undo-tree-id65191 . -174) (undo-tree-id65192 . -174) (undo-tree-id65193 . -174) (undo-tree-id65194 . -174) (undo-tree-id65195 . -174) (undo-tree-id65196 . -174) (undo-tree-id65197 . -174) (undo-tree-id65198 . -174) (undo-tree-id65199 . -174) (undo-tree-id65200 . -174) (undo-tree-id65201 . -174) (undo-tree-id65202 . -174) (undo-tree-id65203 . -174) (undo-tree-id65204 . -174) (undo-tree-id65205 . -174) (undo-tree-id65206 . -174) (undo-tree-id65207 . -174) (undo-tree-id65208 . -174) (undo-tree-id65209 . -174) (undo-tree-id65210 . -174) (undo-tree-id65211 . -174) (undo-tree-id65212 . -174) (undo-tree-id65213 . -174) (undo-tree-id65214 . -174) (undo-tree-id65215 . -174) (undo-tree-id65216 . -174) (undo-tree-id65217 . -174) (undo-tree-id65218 . -174) (undo-tree-id65219 . -174) (undo-tree-id65220 . -174) (undo-tree-id65221 . -174) (undo-tree-id65222 . -174) (undo-tree-id65223 . -174) (undo-tree-id65224 . -174) (undo-tree-id65225 . -174) (undo-tree-id65226 . -174) (undo-tree-id65227 . -174) (undo-tree-id65228 . -174) (undo-tree-id65229 . -174) (undo-tree-id65230 . -174) (undo-tree-id65231 . -174) (undo-tree-id65232 . -174) (undo-tree-id65233 . -174) (undo-tree-id65234 . -174) (undo-tree-id65235 . -174) (undo-tree-id65236 . -174) (undo-tree-id65237 . -174) (undo-tree-id65238 . -174) (undo-tree-id65239 . -174) (undo-tree-id65240 . -164) (undo-tree-id65241 . -164) (undo-tree-id65242 . -164) (undo-tree-id65243 . -164) (undo-tree-id65244 . -164) (undo-tree-id65245 . -164) (undo-tree-id65246 . -164) (undo-tree-id65247 . -164) (undo-tree-id65248 . -164) (undo-tree-id65249 . -164) (undo-tree-id65250 . -164) (undo-tree-id65251 . -164) (undo-tree-id65252 . -164) (undo-tree-id65253 . -164) (undo-tree-id65254 . -164) (undo-tree-id65255 . -164) (undo-tree-id65256 . -164) (undo-tree-id65257 . -164) (undo-tree-id65258 . -164) (undo-tree-id65259 . -164) (undo-tree-id65260 . -164) (undo-tree-id65261 . -174) (undo-tree-id65262 . -174) (undo-tree-id65263 . -174) (undo-tree-id65264 . -174) (undo-tree-id65265 . -174) (undo-tree-id65266 . -174) (undo-tree-id65267 . -174) (undo-tree-id65268 . -174) (undo-tree-id65269 . -174) (undo-tree-id65270 . -174) (undo-tree-id65271 . -174) (undo-tree-id65272 . -174) (undo-tree-id65273 . -174) (undo-tree-id65274 . -174) (undo-tree-id65275 . -174) (undo-tree-id65276 . -174) (undo-tree-id65277 . -174) (undo-tree-id65278 . -174) (undo-tree-id65279 . -174) (undo-tree-id65280 . -174) (undo-tree-id65281 . -174) (undo-tree-id65282 . -174) (undo-tree-id65283 . -174) (undo-tree-id65284 . -172) (undo-tree-id65285 . -172) (undo-tree-id65286 . -172) (undo-tree-id65287 . -172) (undo-tree-id65288 . -172) (undo-tree-id65289 . -172) (undo-tree-id65290 . -172) (undo-tree-id65291 . -172) (undo-tree-id65292 . -172) (undo-tree-id65293 . -172) (undo-tree-id65294 . -172) (undo-tree-id65295 . -172) (undo-tree-id65296 . -172) (undo-tree-id65297 . -172) (undo-tree-id65298 . -172) (undo-tree-id65299 . -172) (undo-tree-id65300 . -172) (undo-tree-id65301 . -172) (undo-tree-id65302 . -172) (undo-tree-id65303 . -172) (undo-tree-id65304 . -172) (undo-tree-id65305 . -172) (undo-tree-id65306 . -172) (undo-tree-id65307 . -172) (undo-tree-id65308 . -172) (undo-tree-id65309 . -172) (undo-tree-id65310 . -172) (undo-tree-id65311 . -172) (undo-tree-id65312 . -172) (undo-tree-id65313 . -172) (undo-tree-id65314 . -172) (undo-tree-id65315 . -172) (undo-tree-id65316 . -172) (undo-tree-id65317 . -172) (undo-tree-id65318 . -172) (undo-tree-id65319 . -172) (undo-tree-id65320 . -172) (undo-tree-id65321 . -172) (undo-tree-id65322 . -172) (undo-tree-id65323 . -173) (undo-tree-id65324 . -173) (undo-tree-id65325 . -173) (undo-tree-id65326 . -173) (undo-tree-id65327 . -173) (undo-tree-id65328 . -173) (undo-tree-id65329 . -173) (undo-tree-id65330 . -173) (undo-tree-id65331 . -173) (undo-tree-id65332 . -173) (undo-tree-id65333 . -173) (undo-tree-id65334 . -173) (undo-tree-id65335 . -173) (undo-tree-id65336 . -173) (undo-tree-id65337 . -173) (undo-tree-id65338 . -173) (undo-tree-id65339 . -173) (undo-tree-id65340 . -173) (undo-tree-id65341 . -173) (undo-tree-id65342 . -173) (undo-tree-id65343 . -173) (undo-tree-id65344 . -173) (undo-tree-id65345 . -173) (undo-tree-id65346 . -173) (undo-tree-id65347 . -173) (undo-tree-id65348 . -173) (undo-tree-id65349 . -173) (undo-tree-id65350 . -172) (undo-tree-id65351 . -172) (undo-tree-id65352 . -172) (undo-tree-id65353 . -172) (undo-tree-id65354 . -172) (undo-tree-id65355 . -172) (undo-tree-id65356 . -172) (undo-tree-id65357 . -172) (undo-tree-id65358 . -172) (undo-tree-id65359 . -172) (undo-tree-id65360 . -172) (undo-tree-id65361 . -172) (undo-tree-id65362 . -172) (undo-tree-id65363 . -172) (undo-tree-id65364 . -172) (undo-tree-id65365 . -172) (undo-tree-id65366 . -172) (undo-tree-id65367 . -172) (undo-tree-id65368 . -172) (undo-tree-id65369 . -172) (undo-tree-id65370 . -172) (undo-tree-id65371 . -172) (undo-tree-id65372 . -172) (undo-tree-id65373 . -172) (undo-tree-id65374 . -172) (undo-tree-id65375 . -174) (undo-tree-id65376 . -174) (undo-tree-id65377 . -174) (undo-tree-id65378 . -174) (undo-tree-id65379 . -174) (undo-tree-id65380 . -174) (undo-tree-id65381 . -174) (undo-tree-id65382 . -174) (undo-tree-id65383 . -174) (undo-tree-id65384 . -174) (undo-tree-id65385 . -174) (undo-tree-id65386 . -174) (undo-tree-id65387 . -174) (undo-tree-id65388 . -174) (undo-tree-id65389 . -174) (undo-tree-id65390 . -174) (undo-tree-id65391 . -174) (undo-tree-id65392 . -174) (undo-tree-id65393 . -174) (undo-tree-id65394 . -174) (undo-tree-id65395 . -174) (undo-tree-id65396 . -174) (undo-tree-id65397 . -174) (undo-tree-id65398 . -174) (undo-tree-id65399 . -174) (undo-tree-id65400 . -174) (undo-tree-id65401 . -174) (undo-tree-id65402 . -174) (undo-tree-id65403 . -174) (undo-tree-id65404 . -174) (undo-tree-id65405 . -174) (undo-tree-id65406 . -174) (undo-tree-id65407 . -174) (undo-tree-id65408 . -174) (undo-tree-id65409 . -174) (undo-tree-id65410 . -174) (undo-tree-id65411 . -174) (undo-tree-id65412 . -174) (undo-tree-id65413 . -174) (undo-tree-id65414 . -174) (undo-tree-id65415 . -174) (undo-tree-id65416 . -174) (undo-tree-id65417 . -174) (undo-tree-id65418 . -174) (undo-tree-id65419 . -174) (undo-tree-id65420 . -174) (undo-tree-id65421 . -174) (undo-tree-id65422 . -174) (undo-tree-id65423 . -174) (undo-tree-id65424 . -174) (undo-tree-id65425 . -174) (undo-tree-id65426 . -174) (undo-tree-id65427 . -174) (undo-tree-id65428 . -174) (undo-tree-id65429 . -174) (undo-tree-id65430 . -174) (undo-tree-id65431 . -174) (undo-tree-id65432 . -174) (undo-tree-id65433 . -174) (undo-tree-id65434 . -174) (undo-tree-id65435 . -174) (undo-tree-id65436 . -174) (undo-tree-id65437 . -174) (undo-tree-id65438 . -174) (undo-tree-id65439 . -174) (undo-tree-id65440 . -174) (undo-tree-id65441 . -174) (undo-tree-id65442 . -174) (undo-tree-id65443 . -174) (undo-tree-id65444 . -174) (undo-tree-id65445 . -174) (undo-tree-id65446 . -174) (undo-tree-id65447 . -174) (undo-tree-id65448 . -174) (undo-tree-id65449 . -174) (undo-tree-id65450 . -174) (undo-tree-id65451 . -174) (undo-tree-id65452 . -174) (undo-tree-id65453 . -174) (undo-tree-id65454 . -174) (undo-tree-id65455 . -174) (undo-tree-id65456 . -174) (undo-tree-id65457 . -174) (undo-tree-id65458 . -174) (undo-tree-id65459 . -174) (undo-tree-id65460 . -174) (undo-tree-id65461 . -174) (undo-tree-id65462 . -174) (undo-tree-id65463 . -174) (undo-tree-id65464 . -174) (undo-tree-id65465 . -174) (undo-tree-id65466 . -174) (undo-tree-id65467 . -174) (undo-tree-id65468 . -174) (undo-tree-id65469 . -174) (undo-tree-id65470 . -174) (undo-tree-id65471 . -174) (undo-tree-id65472 . -174) (undo-tree-id65473 . -174) (undo-tree-id65474 . -174) (undo-tree-id65475 . -174) (undo-tree-id65476 . -174) (undo-tree-id65477 . -174) (undo-tree-id65478 . -174) (undo-tree-id65479 . -174) (undo-tree-id65480 . -174) (undo-tree-id65481 . -174) (undo-tree-id65482 . -174) (undo-tree-id65483 . -174) (undo-tree-id65484 . -174) (undo-tree-id65485 . -174) (undo-tree-id65486 . -174) (undo-tree-id65487 . -174) (undo-tree-id65488 . -174) (undo-tree-id65489 . -174) (undo-tree-id65490 . -174) (undo-tree-id65491 . -174) (undo-tree-id65492 . -174) (undo-tree-id65493 . -174) (undo-tree-id65494 . -174) (undo-tree-id65495 . -174) (undo-tree-id65496 . -174) (undo-tree-id65497 . -174) (undo-tree-id65498 . -174) (undo-tree-id65499 . -174) (undo-tree-id65500 . -174) (undo-tree-id65501 . -174) (undo-tree-id65502 . -174) (undo-tree-id65503 . -174) (undo-tree-id65504 . -174) (undo-tree-id65505 . -174) (undo-tree-id65506 . -174) (undo-tree-id65507 . -174) (undo-tree-id65508 . -174) (undo-tree-id65509 . -174) (undo-tree-id65510 . -174) (undo-tree-id65511 . -174) (undo-tree-id65512 . -174) (undo-tree-id65513 . -174) (undo-tree-id65514 . -174) (undo-tree-id65515 . -174) (undo-tree-id65516 . -174) (undo-tree-id65517 . -174) (undo-tree-id65518 . -174) (undo-tree-id65519 . -174) (undo-tree-id65520 . -174) (undo-tree-id65521 . -174) (undo-tree-id65522 . -174) (undo-tree-id65523 . -174) (undo-tree-id65524 . -174) (undo-tree-id65525 . -174) (undo-tree-id65526 . -174) (undo-tree-id65527 . -174) (undo-tree-id65528 . -174) (undo-tree-id65529 . -174) (undo-tree-id65530 . -174) (undo-tree-id65531 . -174) (undo-tree-id65532 . -174) (undo-tree-id65533 . -174) (undo-tree-id65534 . -174) (undo-tree-id65535 . -174) (undo-tree-id65536 . -174) (undo-tree-id65537 . -174) (undo-tree-id65538 . -174) (undo-tree-id65539 . -174) (undo-tree-id65540 . -174) (undo-tree-id65541 . -174) (undo-tree-id65542 . -174) (undo-tree-id65543 . -174) (undo-tree-id65544 . -174) (undo-tree-id65545 . -174) (undo-tree-id65546 . -174) (undo-tree-id65547 . -174) (undo-tree-id65548 . -174) (undo-tree-id65549 . -174) (undo-tree-id65550 . -174) (undo-tree-id65551 . -174) (undo-tree-id65552 . -174) (undo-tree-id65553 . -174) (undo-tree-id65554 . -174) (undo-tree-id65555 . -174) (undo-tree-id65556 . -174) (undo-tree-id65557 . -174) (undo-tree-id65558 . -174) (undo-tree-id65559 . -174) (undo-tree-id65560 . -174) (undo-tree-id65561 . -174) (undo-tree-id65562 . -174) (undo-tree-id65563 . -174) (undo-tree-id65564 . -174) (undo-tree-id65565 . -174) (undo-tree-id65566 . -174) (undo-tree-id65567 . -174) (undo-tree-id65568 . -174) (undo-tree-id65569 . -174) (undo-tree-id65570 . -174) (undo-tree-id65571 . -174) (undo-tree-id65572 . -174) (undo-tree-id65573 . -174) (undo-tree-id65574 . -174) (undo-tree-id65575 . -174) (undo-tree-id65576 . -174) (undo-tree-id65577 . -174) (undo-tree-id65578 . -174) (undo-tree-id65579 . -174) (undo-tree-id65580 . -174) (undo-tree-id65581 . -174) (undo-tree-id65582 . -174) (undo-tree-id65583 . -174) (undo-tree-id65584 . -174) (undo-tree-id65585 . -174) (undo-tree-id65586 . -174) (undo-tree-id65587 . -174) (undo-tree-id65588 . -174) (undo-tree-id65589 . -174) (undo-tree-id65590 . -174) (undo-tree-id65591 . -174) (undo-tree-id65592 . -174) (undo-tree-id65593 . -174) (undo-tree-id65594 . -174) (undo-tree-id65595 . -174) (undo-tree-id65596 . -174) (undo-tree-id65597 . -174) (undo-tree-id65598 . -174) (undo-tree-id65599 . -174) (undo-tree-id65600 . -174) (undo-tree-id65601 . -174) (undo-tree-id65602 . -174) (undo-tree-id65603 . -174) (undo-tree-id65604 . -174) (undo-tree-id65605 . -174) (undo-tree-id65606 . -174) (undo-tree-id65607 . -174) (undo-tree-id65608 . -174) (undo-tree-id65609 . -174) (undo-tree-id65610 . -174) (undo-tree-id65611 . -174) (undo-tree-id65612 . -174) (undo-tree-id65613 . -174) (undo-tree-id65614 . -174) (undo-tree-id65615 . -174) (undo-tree-id65616 . -174) (undo-tree-id65617 . -174) (undo-tree-id65618 . -174) (undo-tree-id65619 . -174) (undo-tree-id65620 . -174) (undo-tree-id65621 . -174) (undo-tree-id65622 . -174) (undo-tree-id65623 . -174) (undo-tree-id65624 . -174) (undo-tree-id65625 . -174) (undo-tree-id65626 . -174) (undo-tree-id65627 . -174) (undo-tree-id65628 . -174) (undo-tree-id65629 . -174) (undo-tree-id65630 . -174) (undo-tree-id65631 . -174) (undo-tree-id65632 . -174) (undo-tree-id65633 . -174) (undo-tree-id65634 . -174) (undo-tree-id65635 . -174) (undo-tree-id65636 . -174) (undo-tree-id65637 . -174) (undo-tree-id65638 . -174) (undo-tree-id65639 . -174) (undo-tree-id65640 . -174) (undo-tree-id65641 . -174) (undo-tree-id65642 . -174) (undo-tree-id65643 . -174) (undo-tree-id65644 . -174) (undo-tree-id65645 . -174) (undo-tree-id65646 . -174) (undo-tree-id65647 . -174) (undo-tree-id65648 . -174) (undo-tree-id65649 . -174) (undo-tree-id65650 . -174) (undo-tree-id65651 . -174) (undo-tree-id65652 . -174) (undo-tree-id65653 . -174) (undo-tree-id65654 . -174) (undo-tree-id65655 . -174) (undo-tree-id65656 . -174) (undo-tree-id65657 . -174) (undo-tree-id65658 . -174) (undo-tree-id65659 . -174) (undo-tree-id65660 . -174) (undo-tree-id65661 . -174) (undo-tree-id65662 . -174) (undo-tree-id65663 . -174) (undo-tree-id65664 . -174) (undo-tree-id65665 . -174) (undo-tree-id65666 . -174) (undo-tree-id65667 . -174) (undo-tree-id65668 . -174) (undo-tree-id65669 . -174) (undo-tree-id65670 . -174) (undo-tree-id65671 . -174) (undo-tree-id65672 . -174) (undo-tree-id65673 . -174) (undo-tree-id65674 . -174) (undo-tree-id65675 . -174) (undo-tree-id65676 . -174) (undo-tree-id65677 . -174) (undo-tree-id65678 . -174) (undo-tree-id65679 . -174) (undo-tree-id65680 . -174) (undo-tree-id65681 . -174) (undo-tree-id65682 . -174) (undo-tree-id65683 . -174) (undo-tree-id65684 . -174) (undo-tree-id65685 . -174) (undo-tree-id65686 . -174) (undo-tree-id65687 . -174) (undo-tree-id65688 . -174) (undo-tree-id65689 . -174) (undo-tree-id65690 . -174) (undo-tree-id65691 . -174) (undo-tree-id65692 . -174) (undo-tree-id65693 . -174) (undo-tree-id65694 . -174) (undo-tree-id65695 . -174) (undo-tree-id65696 . -174) (undo-tree-id65697 . -174) (undo-tree-id65698 . -174) (undo-tree-id65699 . -174) (undo-tree-id65700 . -174) (undo-tree-id65701 . -174) (undo-tree-id65702 . -174) (undo-tree-id65703 . -174) (undo-tree-id65704 . -174) (undo-tree-id65705 . -174) (undo-tree-id65706 . -174) (undo-tree-id65707 . -174) (undo-tree-id65708 . -174) (undo-tree-id65709 . -174) (undo-tree-id65710 . -174) (undo-tree-id65711 . -174) (undo-tree-id65712 . -174) (undo-tree-id65713 . -174) (undo-tree-id65714 . -174) (undo-tree-id65715 . -174) (undo-tree-id65716 . -174) (undo-tree-id65717 . -174) (undo-tree-id65718 . -174) (undo-tree-id65719 . -174) (undo-tree-id65720 . -174) (undo-tree-id65721 . -174) (undo-tree-id65722 . -174) (undo-tree-id65723 . -174) (undo-tree-id65724 . -174) (undo-tree-id65725 . -174) (undo-tree-id65726 . -174) (undo-tree-id65727 . -174) (undo-tree-id65728 . -174) (undo-tree-id65729 . -174) (undo-tree-id65730 . -174) (undo-tree-id65731 . -174) (undo-tree-id65732 . -174) (undo-tree-id65733 . -174) (undo-tree-id65734 . -174) (undo-tree-id65735 . -174) (undo-tree-id65736 . -174) (undo-tree-id65737 . -174) (undo-tree-id65738 . -174) (undo-tree-id65739 . -174) (undo-tree-id65740 . -174) (undo-tree-id65741 . -174) (undo-tree-id65742 . -174) (undo-tree-id65743 . -174) (undo-tree-id65744 . -174) (undo-tree-id65745 . -174) (undo-tree-id65746 . -174) (undo-tree-id65747 . -174) (undo-tree-id65748 . -174) (undo-tree-id65749 . -174) (undo-tree-id65750 . -174) (undo-tree-id65751 . -174) (undo-tree-id65752 . -174) (undo-tree-id65753 . -174) (undo-tree-id65754 . -174) (undo-tree-id65755 . -174) (undo-tree-id65756 . -174) (undo-tree-id65757 . -174) (undo-tree-id65758 . -174) (undo-tree-id65759 . -174) (undo-tree-id65760 . -174) (undo-tree-id65761 . -174) (undo-tree-id65762 . -174) (undo-tree-id65763 . -174) (undo-tree-id65764 . -174) (undo-tree-id65765 . -174) (undo-tree-id65766 . -174) (undo-tree-id65767 . -174) (undo-tree-id65768 . -174) (undo-tree-id65769 . -174) (undo-tree-id65770 . -174) (undo-tree-id65771 . -174) (undo-tree-id65772 . -174) (undo-tree-id65773 . -174) (undo-tree-id65774 . -174) (undo-tree-id65775 . -174) (undo-tree-id65776 . -174) (undo-tree-id65777 . -174) (undo-tree-id65778 . -174) (undo-tree-id65779 . -182) (undo-tree-id65780 . -182) (undo-tree-id65781 . -182) (undo-tree-id65782 . -182) (undo-tree-id65783 . -182) (undo-tree-id65784 . -182) (undo-tree-id65785 . -182) (undo-tree-id65786 . -182) (undo-tree-id65787 . -182) (undo-tree-id65788 . -182) (undo-tree-id65789 . -182) (undo-tree-id65790 . -182) (undo-tree-id65791 . -182) (undo-tree-id65792 . -182) (undo-tree-id65793 . -182) (undo-tree-id65794 . -182) (undo-tree-id65795 . -182) (undo-tree-id65796 . -182) (undo-tree-id65797 . -182) (undo-tree-id65798 . -182) (undo-tree-id65799 . -182) (undo-tree-id65800 . -188) (undo-tree-id65801 . -188) (undo-tree-id65802 . -188) (undo-tree-id65803 . -188) (undo-tree-id65804 . -188) (undo-tree-id65805 . -188) (undo-tree-id65806 . -188) (undo-tree-id65807 . -188) (undo-tree-id65808 . -188) (undo-tree-id65809 . -188) (undo-tree-id65810 . -188) (undo-tree-id65811 . -188) (undo-tree-id65812 . -188) (undo-tree-id65813 . -188) (undo-tree-id65814 . -188) (undo-tree-id65815 . -188) (undo-tree-id65816 . -191) (undo-tree-id65817 . -191) (undo-tree-id65818 . -191) (undo-tree-id65819 . -191) (undo-tree-id65820 . -191) (undo-tree-id65821 . -191) (undo-tree-id65822 . -191) (undo-tree-id65823 . -191) (undo-tree-id65824 . -191) (undo-tree-id65825 . -191) (undo-tree-id65826 . -191) (undo-tree-id65827 . -191) (undo-tree-id65828 . -191) (undo-tree-id65829 . -191) (undo-tree-id65830 . -191) (undo-tree-id65831 . -191) (undo-tree-id65832 . -191) (undo-tree-id65833 . -191) (undo-tree-id65834 . -191) (undo-tree-id65835 . -191) (undo-tree-id65836 . -191) (undo-tree-id65837 . -192) (undo-tree-id65838 . -192) (undo-tree-id65839 . -192) (undo-tree-id65840 . -192) (undo-tree-id65841 . -192) (undo-tree-id65842 . -192) (undo-tree-id65843 . -192) (undo-tree-id65844 . -192) (undo-tree-id65845 . -192) (undo-tree-id65846 . -192) (undo-tree-id65847 . -192) (undo-tree-id65848 . -192) (undo-tree-id65849 . -192) (undo-tree-id65850 . -192) (undo-tree-id65851 . -192) (undo-tree-id65852 . -192) (undo-tree-id65853 . -192) (undo-tree-id65854 . -192) (undo-tree-id65855 . -192) (undo-tree-id65856 . -192) (undo-tree-id65857 . -192) (undo-tree-id65858 . -192) (undo-tree-id65859 . -192) (undo-tree-id65860 . -192) (undo-tree-id65861 . -192) (undo-tree-id65862 . -192) (undo-tree-id65863 . -192) (undo-tree-id65864 . -192) (undo-tree-id65865 . -192) (undo-tree-id65866 . -192) (undo-tree-id65867 . -192) (undo-tree-id65868 . -192) (undo-tree-id65869 . -192) (undo-tree-id65870 . -192) (undo-tree-id65871 . -192) (undo-tree-id65872 . -192) (undo-tree-id65873 . -192) (undo-tree-id65874 . -192) (undo-tree-id65875 . -192) (undo-tree-id65876 . -192) (undo-tree-id65877 . -192) (undo-tree-id65878 . -192) (undo-tree-id65879 . -192) (undo-tree-id65880 . -192) (undo-tree-id65881 . -192) (undo-tree-id65882 . -192) (undo-tree-id65883 . -192) (undo-tree-id65884 . -192) (undo-tree-id65885 . -192) (undo-tree-id65886 . -192) (undo-tree-id65887 . -192) (undo-tree-id65888 . -192) (undo-tree-id65889 . -192) (undo-tree-id65890 . -192) (undo-tree-id65891 . -192) (undo-tree-id65892 . -199) (undo-tree-id65893 . -199) (undo-tree-id65894 . -199) (undo-tree-id65895 . -199) (undo-tree-id65896 . -199) (undo-tree-id65897 . -199) (undo-tree-id65898 . -199) (undo-tree-id65899 . -199) (undo-tree-id65900 . -199) (undo-tree-id65901 . -199) (undo-tree-id65902 . -199) (undo-tree-id65903 . -199) (undo-tree-id65904 . -199) (undo-tree-id65905 . -199) (undo-tree-id65906 . -199) (undo-tree-id65907 . -199) (undo-tree-id65908 . -206) (undo-tree-id65909 . -206) (undo-tree-id65910 . -206) (undo-tree-id65911 . -206) (undo-tree-id65912 . -206) (undo-tree-id65913 . -206) (undo-tree-id65914 . -206) (undo-tree-id65915 . -206) (undo-tree-id65916 . -206) (undo-tree-id65917 . -206) (undo-tree-id65918 . -206) (undo-tree-id65919 . -206) (undo-tree-id65920 . -206) (undo-tree-id65921 . -206) (undo-tree-id65922 . -206) (undo-tree-id65923 . -206) (undo-tree-id65924 . -215) (undo-tree-id65925 . -215) (undo-tree-id65926 . -215) (undo-tree-id65927 . -215) (undo-tree-id65928 . -215) (undo-tree-id65929 . -215) (undo-tree-id65930 . -215) (undo-tree-id65931 . -215) (undo-tree-id65932 . -215) (undo-tree-id65933 . -215) (undo-tree-id65934 . -215) (undo-tree-id65935 . -215) (undo-tree-id65936 . -215) (undo-tree-id65937 . -215) (undo-tree-id65938 . -215) (undo-tree-id65939 . -215) (undo-tree-id65940 . -215) (undo-tree-id65941 . -215) (undo-tree-id65942 . -215) (undo-tree-id65943 . -215) (undo-tree-id65944 . -215) (undo-tree-id65945 . -215) (undo-tree-id65946 . -215) (undo-tree-id65947 . -215) (undo-tree-id65948 . -215) (undo-tree-id65949 . -215) (undo-tree-id65950 . -216) (undo-tree-id65951 . -216) (undo-tree-id65952 . -216) (undo-tree-id65953 . -216) (undo-tree-id65954 . -216) (undo-tree-id65955 . -216) (undo-tree-id65956 . -216) (undo-tree-id65957 . -216) (undo-tree-id65958 . -216) (undo-tree-id65959 . -216) (undo-tree-id65960 . -216) (undo-tree-id65961 . -216) (undo-tree-id65962 . -216) (undo-tree-id65963 . -216) (undo-tree-id65964 . -216) (undo-tree-id65965 . -216) (undo-tree-id65966 . -216) (undo-tree-id65967 . -216) (undo-tree-id65968 . -216) (undo-tree-id65969 . -216) (undo-tree-id65970 . -216) (undo-tree-id65971 . -216) (undo-tree-id65972 . -216) (undo-tree-id65973 . -216) (undo-tree-id65974 . -216) (undo-tree-id65975 . -216) (undo-tree-id65976 . -216) (undo-tree-id65977 . -216) (undo-tree-id65978 . -216) (undo-tree-id65979 . -216) (undo-tree-id65980 . -216) (undo-tree-id65981 . -216) (undo-tree-id65982 . -216) (undo-tree-id65983 . -216) (undo-tree-id65984 . -216) (undo-tree-id65985 . -216) (undo-tree-id65986 . -216) (undo-tree-id65987 . -216) (undo-tree-id65988 . -216) (undo-tree-id65989 . -216) (undo-tree-id65990 . -216) (undo-tree-id65991 . -216) (undo-tree-id65992 . -216) (undo-tree-id65993 . -216) (undo-tree-id65994 . -216) (undo-tree-id65995 . -216) (undo-tree-id65996 . -216) (undo-tree-id65997 . -216) (undo-tree-id65998 . -216) (undo-tree-id65999 . -216) (undo-tree-id66000 . -216) (undo-tree-id66001 . -216) (undo-tree-id66002 . -216) (undo-tree-id66003 . -216) (undo-tree-id66004 . -216) (undo-tree-id66005 . -216) (undo-tree-id66006 . -216) (undo-tree-id66007 . -216) (undo-tree-id66008 . -216) (undo-tree-id66009 . -216) (undo-tree-id66010 . -216) (undo-tree-id66011 . -216) (undo-tree-id66012 . -216) (undo-tree-id66013 . -216) (undo-tree-id66014 . -216) (undo-tree-id66015 . -216) (undo-tree-id66016 . -216) (undo-tree-id66017 . -216) (undo-tree-id66018 . -216) (undo-tree-id66019 . -216) (undo-tree-id66020 . -217) (undo-tree-id66021 . -217) (undo-tree-id66022 . -217) (undo-tree-id66023 . -217) (undo-tree-id66024 . -217) (undo-tree-id66025 . -217) (undo-tree-id66026 . -217) (undo-tree-id66027 . -217) (undo-tree-id66028 . -217) (undo-tree-id66029 . -217) (undo-tree-id66030 . -217) (undo-tree-id66031 . -217) (undo-tree-id66032 . -217) (undo-tree-id66033 . -217) (undo-tree-id66034 . -217) (undo-tree-id66035 . -217) (undo-tree-id66036 . -217) (undo-tree-id66037 . -217) (undo-tree-id66038 . -217) (undo-tree-id66039 . -217) (undo-tree-id66040 . -217) (undo-tree-id66041 . -217) (undo-tree-id66042 . -217) (undo-tree-id66043 . -217) (undo-tree-id66044 . -217) (undo-tree-id66045 . -217) (undo-tree-id66046 . -217) (undo-tree-id66047 . -217) (undo-tree-id66048 . -217) (undo-tree-id66049 . -217) (undo-tree-id66050 . -217) (undo-tree-id66051 . -217) (undo-tree-id66052 . -217) (undo-tree-id66053 . -217) (undo-tree-id66054 . -217) (undo-tree-id66055 . -217) (undo-tree-id66056 . -217) (undo-tree-id66057 . -217) (undo-tree-id66058 . -217) (undo-tree-id66059 . -217) (undo-tree-id66060 . -217) (undo-tree-id66061 . -217) (undo-tree-id66062 . -217) (undo-tree-id66063 . -217) (undo-tree-id66064 . -217) (undo-tree-id66065 . -217) (undo-tree-id66066 . -217) (undo-tree-id66067 . -217) (undo-tree-id66068 . -217) (undo-tree-id66069 . -217) (undo-tree-id66070 . -217) (undo-tree-id66071 . -217) (undo-tree-id66072 . -217) (undo-tree-id66073 . -217) (undo-tree-id66074 . -217) (undo-tree-id66075 . -217) (undo-tree-id66076 . -217) (undo-tree-id66077 . -217) (undo-tree-id66078 . -217) (undo-tree-id66079 . -217) (undo-tree-id66080 . -217) (undo-tree-id66081 . -217) (undo-tree-id66082 . -217) (undo-tree-id66083 . -217) (undo-tree-id66084 . -217) (undo-tree-id66085 . -217) (undo-tree-id66086 . -217) (undo-tree-id66087 . -217) (undo-tree-id66088 . -217) (undo-tree-id66089 . -217) (undo-tree-id66090 . -217) (undo-tree-id66091 . -217) (undo-tree-id66092 . -217) (undo-tree-id66093 . -217) (undo-tree-id66094 . -217) (undo-tree-id66095 . -217) (undo-tree-id66096 . -217) (undo-tree-id66097 . -217) (undo-tree-id66098 . -217) (undo-tree-id66099 . -217) (undo-tree-id66100 . -217) (undo-tree-id66101 . -217) (undo-tree-id66102 . -217) (undo-tree-id66103 . -217) (undo-tree-id66104 . -217) (undo-tree-id66105 . -217) (undo-tree-id66106 . -217) (undo-tree-id66107 . -217) (undo-tree-id66108 . -217) (undo-tree-id66109 . -217) (undo-tree-id66110 . -217) (undo-tree-id66111 . -217) (undo-tree-id66112 . -217) (undo-tree-id66113 . -217) (undo-tree-id66114 . -217) (undo-tree-id66115 . -217) (undo-tree-id66116 . -217) (undo-tree-id66117 . -217) (undo-tree-id66118 . -217) (undo-tree-id66119 . -217) (undo-tree-id66120 . -217) (undo-tree-id66121 . -217) (undo-tree-id66122 . -217) (undo-tree-id66123 . -217) (undo-tree-id66124 . -217) (undo-tree-id66125 . -217) (undo-tree-id66126 . -217) (undo-tree-id66127 . -217) (undo-tree-id66128 . -217) (undo-tree-id66129 . -217) (undo-tree-id66130 . -217) (undo-tree-id66131 . -217) (undo-tree-id66132 . -217) (undo-tree-id66133 . -217) (undo-tree-id66134 . -217) (undo-tree-id66135 . -217) (undo-tree-id66136 . -217) (undo-tree-id66137 . -217) (undo-tree-id66138 . -217) (undo-tree-id66139 . -217) (undo-tree-id66140 . -217) (undo-tree-id66141 . -217) (undo-tree-id66142 . -217) (undo-tree-id66143 . -217) (undo-tree-id66144 . -217) (undo-tree-id66145 . -217) (undo-tree-id66146 . -217) (undo-tree-id66147 . -217) (undo-tree-id66148 . -217) (undo-tree-id66149 . -217) (undo-tree-id66150 . -217) (undo-tree-id66151 . -217) (undo-tree-id66152 . -217) (undo-tree-id66153 . -217) (undo-tree-id66154 . -217) (undo-tree-id66155 . -217) (undo-tree-id66156 . -217) (undo-tree-id66157 . -217) (undo-tree-id66158 . -217) (undo-tree-id66159 . -217) (undo-tree-id66160 . -217) (undo-tree-id66161 . -217) (undo-tree-id66162 . -217) (undo-tree-id66163 . -217) (undo-tree-id66164 . -217) (undo-tree-id66165 . -217) (undo-tree-id66166 . -217) (undo-tree-id66167 . -217) (undo-tree-id66168 . -217) (undo-tree-id66169 . -217) (undo-tree-id66170 . -217) (undo-tree-id66171 . -217) (undo-tree-id66172 . -217) (undo-tree-id66173 . -217) (undo-tree-id66174 . -217) (undo-tree-id66175 . -217) (undo-tree-id66176 . -217) (undo-tree-id66177 . -217) (undo-tree-id66178 . -217) (undo-tree-id66179 . -217) (undo-tree-id66180 . -217) (undo-tree-id66181 . -217) (undo-tree-id66182 . -217) (undo-tree-id66183 . -217) (undo-tree-id66184 . -217) (undo-tree-id66185 . -217) (undo-tree-id66186 . -217) (undo-tree-id66187 . -217) (undo-tree-id66188 . -217) (undo-tree-id66189 . -217) (undo-tree-id66190 . -217) (undo-tree-id66191 . -217) (undo-tree-id66192 . -217) (undo-tree-id66193 . -217) (undo-tree-id66194 . -217) (undo-tree-id66195 . -217) (undo-tree-id66196 . -217) (undo-tree-id66197 . -217) (undo-tree-id66198 . -217) (undo-tree-id66199 . -217) (undo-tree-id66200 . -217) (undo-tree-id66201 . -217) (undo-tree-id66202 . -217) (undo-tree-id66203 . -217) (undo-tree-id66204 . -217) (undo-tree-id66205 . -217) (undo-tree-id66206 . -217) (undo-tree-id66207 . -217) (undo-tree-id66208 . -217) (undo-tree-id66209 . -217) (undo-tree-id66210 . -217) (undo-tree-id66211 . -217) (undo-tree-id66212 . -217) (undo-tree-id66213 . -217) (undo-tree-id66214 . -217) (undo-tree-id66215 . -217) (undo-tree-id66216 . -217) (undo-tree-id66217 . -217) (undo-tree-id66218 . -217) (undo-tree-id66219 . -217) (undo-tree-id66220 . -217) (undo-tree-id66221 . -217) (undo-tree-id66222 . -217) (undo-tree-id66223 . -217) (undo-tree-id66224 . -217) (undo-tree-id66225 . -217) (undo-tree-id66226 . -217) (undo-tree-id66227 . -217) (undo-tree-id66228 . -217) (undo-tree-id66229 . -217) (undo-tree-id66230 . -217) (undo-tree-id66231 . -217) (undo-tree-id66232 . -217) (undo-tree-id66233 . -217) (undo-tree-id66234 . -217) (undo-tree-id66235 . -217) (undo-tree-id66236 . -217) (undo-tree-id66237 . -217) (undo-tree-id66238 . -217) (undo-tree-id66239 . -217) (undo-tree-id66240 . -217) (undo-tree-id66241 . -217) (undo-tree-id66242 . -217) (undo-tree-id66243 . -217) (undo-tree-id66244 . -217) (undo-tree-id66245 . -217) (undo-tree-id66246 . -217) (undo-tree-id66247 . -217) (undo-tree-id66248 . -217) (undo-tree-id66249 . -217) (undo-tree-id66250 . -217) (undo-tree-id66251 . -217) (undo-tree-id66252 . -217) (undo-tree-id66253 . -217) (undo-tree-id66254 . -217) (undo-tree-id66255 . -217) (undo-tree-id66256 . -217) (undo-tree-id66257 . -217) (undo-tree-id66258 . -217) (undo-tree-id66259 . -217) (undo-tree-id66260 . -217) (undo-tree-id66261 . -217) (undo-tree-id66262 . -217) (undo-tree-id66263 . -217) (undo-tree-id66264 . -217) (undo-tree-id66265 . -217) (undo-tree-id66266 . -217) (undo-tree-id66267 . -217) (undo-tree-id66268 . -217) (undo-tree-id66269 . -217) (undo-tree-id66270 . -217) (undo-tree-id66271 . -217) (undo-tree-id66272 . -217) (undo-tree-id66273 . -217) (undo-tree-id66274 . -217) (undo-tree-id66275 . -217) (undo-tree-id66276 . -217) (undo-tree-id66277 . -217) (undo-tree-id66278 . -217) (undo-tree-id66279 . -217) (undo-tree-id66280 . -217) (undo-tree-id66281 . -217) (undo-tree-id66282 . -217) (undo-tree-id66283 . -217) (undo-tree-id66284 . -217) (undo-tree-id66285 . -217) (undo-tree-id66286 . -217) (undo-tree-id66287 . -217) (undo-tree-id66288 . -217) (undo-tree-id66289 . -217) (undo-tree-id66290 . -217) (undo-tree-id66291 . -217) (undo-tree-id66292 . -217) (undo-tree-id66293 . -217) (undo-tree-id66294 . -217) (undo-tree-id66295 . -217) (undo-tree-id66296 . -217) (undo-tree-id66297 . -217) (undo-tree-id66298 . -217) (undo-tree-id66299 . -217) (undo-tree-id66300 . -217) (undo-tree-id66301 . -217) (undo-tree-id66302 . -217) (undo-tree-id66303 . -217) (undo-tree-id66304 . -217) (undo-tree-id66305 . -217) (undo-tree-id66306 . -217) (undo-tree-id66307 . -217) (undo-tree-id66308 . -217) (undo-tree-id66309 . -217) (undo-tree-id66310 . -217) (undo-tree-id66311 . -217) (undo-tree-id66312 . -217) (undo-tree-id66313 . -217) (undo-tree-id66314 . -217) (undo-tree-id66315 . -217) (undo-tree-id66316 . -217) (undo-tree-id66317 . -217) (undo-tree-id66318 . -217) (undo-tree-id66319 . -217) (undo-tree-id66320 . -217) (undo-tree-id66321 . -217) (undo-tree-id66322 . -217) (undo-tree-id66323 . -216) (undo-tree-id66324 . -216) (undo-tree-id66325 . -216) (undo-tree-id66326 . -216) (undo-tree-id66327 . -216) (undo-tree-id66328 . -216) (undo-tree-id66329 . -216) (undo-tree-id66330 . -216) (undo-tree-id66331 . -216) (undo-tree-id66332 . -216) (undo-tree-id66333 . -216) (undo-tree-id66334 . -216) (undo-tree-id66335 . -216) (undo-tree-id66336 . -216) (undo-tree-id66337 . -216) (undo-tree-id66338 . -216) (undo-tree-id66339 . -216) (undo-tree-id66340 . -216) (undo-tree-id66341 . -216) (undo-tree-id66342 . -216) (undo-tree-id66343 . -216) (undo-tree-id66344 . -216) (undo-tree-id66345 . -216) (undo-tree-id66346 . -216) (undo-tree-id66347 . -216) (undo-tree-id66348 . -216) (undo-tree-id66349 . -216) (undo-tree-id66350 . -216) (undo-tree-id66351 . -216) (undo-tree-id66352 . -216) (undo-tree-id66353 . -216) (undo-tree-id66354 . -216) (undo-tree-id66355 . -216) (undo-tree-id66356 . -216) (undo-tree-id66357 . -216) (undo-tree-id66358 . -216) (undo-tree-id66359 . -216) (undo-tree-id66360 . -216) (undo-tree-id66361 . -216) (undo-tree-id66362 . -216) (undo-tree-id66363 . -216) (undo-tree-id66364 . -216) (undo-tree-id66365 . -216) (undo-tree-id66366 . -216) (undo-tree-id66367 . -216) (undo-tree-id66368 . -216) (undo-tree-id66369 . -216) (undo-tree-id66370 . -216) (undo-tree-id66371 . -216) (undo-tree-id66372 . -216) (undo-tree-id66373 . -216) (undo-tree-id66374 . -216) (undo-tree-id66375 . -216) (undo-tree-id66376 . -216) (undo-tree-id66377 . -216) (undo-tree-id66378 . -216) (undo-tree-id66379 . -216) (undo-tree-id66380 . -216) (undo-tree-id66381 . -216) (undo-tree-id66382 . -216) (undo-tree-id66383 . -216) (undo-tree-id66384 . -216) (undo-tree-id66385 . -216) (undo-tree-id66386 . -216) (undo-tree-id66387 . -216) (undo-tree-id66388 . -216) (undo-tree-id66389 . -216) (undo-tree-id66390 . -216) (undo-tree-id66391 . -216) (undo-tree-id66392 . -216) (undo-tree-id66393 . -216) (undo-tree-id66394 . -216) (undo-tree-id66395 . -216) (undo-tree-id66396 . -217) (undo-tree-id66397 . -217) (undo-tree-id66398 . -217) (undo-tree-id66399 . -217) (undo-tree-id66400 . -217) (undo-tree-id66401 . -217) (undo-tree-id66402 . -217) (undo-tree-id66403 . -217) (undo-tree-id66404 . -217) (undo-tree-id66405 . -217) (undo-tree-id66406 . -217) (undo-tree-id66407 . -217) (undo-tree-id66408 . -217) (undo-tree-id66409 . -217) (undo-tree-id66410 . -217) (undo-tree-id66411 . -217) (undo-tree-id66412 . -217) (undo-tree-id66413 . -217) (undo-tree-id66414 . -217) (undo-tree-id66415 . -217) (undo-tree-id66416 . -217) (undo-tree-id66417 . -217) (undo-tree-id66418 . -217) (undo-tree-id66419 . -217) (undo-tree-id66420 . -130) (6002 . 6132) (#("  We denote these three weight matrices as 𝑼𝑼𝑞𝑞, 𝑼𝑼𝑘𝑘, and 𝑼𝑼𝑣𝑣 . They are used to project the inputs into query, key, and value" 0 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 17 18 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 18 70 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 70 72 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 72 86 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 86 88 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 88 127 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 127 128 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 6089) (undo-tree-id66421 . 128) (undo-tree-id66422 . -1) (undo-tree-id66423 . -1) (undo-tree-id66424 . 127) (undo-tree-id66425 . -1) (undo-tree-id66426 . -1) (undo-tree-id66427 . -1) (undo-tree-id66428 . -1) (undo-tree-id66429 . -1) (undo-tree-id66430 . -1) (undo-tree-id66431 . -1) (undo-tree-id66432 . -1) (undo-tree-id66433 . -1) (undo-tree-id66434 . -1) (undo-tree-id66435 . -1) (undo-tree-id66436 . -1) (undo-tree-id66437 . -1) (undo-tree-id66438 . -1) (undo-tree-id66439 . -1) (undo-tree-id66440 . -1) (undo-tree-id66441 . -1) (undo-tree-id66442 . -1) (undo-tree-id66443 . -1) (undo-tree-id66444 . -1) (undo-tree-id66445 . -1) (undo-tree-id66446 . -1) (undo-tree-id66447 . -1) (undo-tree-id66448 . -1) (undo-tree-id66449 . -1) (undo-tree-id66450 . -1) (undo-tree-id66451 . -1) (undo-tree-id66452 . -1) (undo-tree-id66453 . -1) (undo-tree-id66454 . -1) (undo-tree-id66455 . -1) (undo-tree-id66456 . -1) (undo-tree-id66457 . -1) (undo-tree-id66458 . -1) (undo-tree-id66459 . -1) (undo-tree-id66460 . -1) (undo-tree-id66461 . -1) (undo-tree-id66462 . -1) (undo-tree-id66463 . -1) (undo-tree-id66464 . -1) (undo-tree-id66465 . -1) (undo-tree-id66466 . -1) (undo-tree-id66467 . -1) (undo-tree-id66468 . -1) (undo-tree-id66469 . -1) (undo-tree-id66470 . -1) (undo-tree-id66471 . -1) (undo-tree-id66472 . -1) (undo-tree-id66473 . -1) (undo-tree-id66474 . -1) (undo-tree-id66475 . -1) (undo-tree-id66476 . -1) (undo-tree-id66477 . -1) (undo-tree-id66478 . -1) (undo-tree-id66479 . -1) (undo-tree-id66480 . -1) (undo-tree-id66481 . -1) (undo-tree-id66482 . -1) (undo-tree-id66483 . -1) (undo-tree-id66484 . -1) (undo-tree-id66485 . -1) (undo-tree-id66486 . -1) (undo-tree-id66487 . -1) (undo-tree-id66488 . -1) (undo-tree-id66489 . -1) (undo-tree-id66490 . -1) (undo-tree-id66491 . -1) (undo-tree-id66492 . -1) (undo-tree-id66493 . -1) (undo-tree-id66494 . -1) (undo-tree-id66495 . -1) (undo-tree-id66496 . -1) (undo-tree-id66497 . -1) (undo-tree-id66498 . -1) (undo-tree-id66499 . -1) (undo-tree-id66500 . -1) (undo-tree-id66501 . -1) (undo-tree-id66502 . -1) (undo-tree-id66503 . -1) (undo-tree-id66504 . -1) (undo-tree-id66505 . -1) (undo-tree-id66506 . -1) (undo-tree-id66507 . -1) (undo-tree-id66508 . -1) (undo-tree-id66509 . -1) (undo-tree-id66510 . -1) (undo-tree-id66511 . -1) (undo-tree-id66512 . -1) (undo-tree-id66513 . -1) (undo-tree-id66514 . -1) (undo-tree-id66515 . -1) (undo-tree-id66516 . -1) (undo-tree-id66517 . -1) (undo-tree-id66518 . -1) (undo-tree-id66519 . -1) (undo-tree-id66520 . -1) (undo-tree-id66521 . -1) (undo-tree-id66522 . -1) (undo-tree-id66523 . -1) (undo-tree-id66524 . -1) (undo-tree-id66525 . -1) (undo-tree-id66526 . -1) (undo-tree-id66527 . -1) (undo-tree-id66528 . -1) (undo-tree-id66529 . -1) (undo-tree-id66530 . -1) (undo-tree-id66531 . -1) (undo-tree-id66532 . -1) (undo-tree-id66533 . -1) (undo-tree-id66534 . -1) (undo-tree-id66535 . -1) (undo-tree-id66536 . -1) (undo-tree-id66537 . -1) (undo-tree-id66538 . -1) (undo-tree-id66539 . -1) (undo-tree-id66540 . -1) (undo-tree-id66541 . -1) (undo-tree-id66542 . -1) (undo-tree-id66543 . -1) (undo-tree-id66544 . -1) (undo-tree-id66545 . -1) (undo-tree-id66546 . -1) (undo-tree-id66547 . -1) (undo-tree-id66548 . -1) (undo-tree-id66549 . -1) (undo-tree-id66550 . -1) (undo-tree-id66551 . -1) (undo-tree-id66552 . -1) (undo-tree-id66553 . -1) (undo-tree-id66554 . -1) (undo-tree-id66555 . -1) (undo-tree-id66556 . -1) (undo-tree-id66557 . -1) (undo-tree-id66558 . -1) (undo-tree-id66559 . -1) (undo-tree-id66560 . -1) (undo-tree-id66561 . -1) (undo-tree-id66562 . -1) (undo-tree-id66563 . -1) (undo-tree-id66564 . -1) (undo-tree-id66565 . -1) (undo-tree-id66566 . -1) (undo-tree-id66567 . -1) (undo-tree-id66568 . -1) (undo-tree-id66569 . -1) (undo-tree-id66570 . -1) (undo-tree-id66571 . -1) (undo-tree-id66572 . -1) (undo-tree-id66573 . -1) (undo-tree-id66574 . -1) (undo-tree-id66575 . -1) (undo-tree-id66576 . -1) (undo-tree-id66577 . -1) (undo-tree-id66578 . -1) (undo-tree-id66579 . -1) (undo-tree-id66580 . -1) (undo-tree-id66581 . -1) (undo-tree-id66582 . -1) (undo-tree-id66583 . -1) (undo-tree-id66584 . -1) (undo-tree-id66585 . -1) (undo-tree-id66586 . -1) (undo-tree-id66587 . -1) (undo-tree-id66588 . -1) (undo-tree-id66589 . -1) (undo-tree-id66590 . -1) (undo-tree-id66591 . -1) (undo-tree-id66592 . -1) (undo-tree-id66593 . -1) (undo-tree-id66594 . -1) (undo-tree-id66595 . -1) (undo-tree-id66596 . -1) (undo-tree-id66597 . -1) (undo-tree-id66598 . -1) (undo-tree-id66599 . -1) (undo-tree-id66600 . -1) (undo-tree-id66601 . -1) (undo-tree-id66602 . -1) (undo-tree-id66603 . -1) (undo-tree-id66604 . -1) (undo-tree-id66605 . -1) (undo-tree-id66606 . -1) (undo-tree-id66607 . -1) (undo-tree-id66608 . -1) (undo-tree-id66609 . -1) (undo-tree-id66610 . -1) (undo-tree-id66611 . -1) (undo-tree-id66612 . -1) (undo-tree-id66613 . -1) (undo-tree-id66614 . -1) (undo-tree-id66615 . -1) (undo-tree-id66616 . -1) (undo-tree-id66617 . -1) (undo-tree-id66618 . -1) (undo-tree-id66619 . -1) (undo-tree-id66620 . -1) (undo-tree-id66621 . -1) (undo-tree-id66622 . -1) (undo-tree-id66623 . -1) (undo-tree-id66624 . -1) (undo-tree-id66625 . -1) (undo-tree-id66626 . -1) (undo-tree-id66627 . -1) (undo-tree-id66628 . -1) (undo-tree-id66629 . -1) (undo-tree-id66630 . -1) (undo-tree-id66631 . -1) (undo-tree-id66632 . -1) (undo-tree-id66633 . -1) (undo-tree-id66634 . -1) (undo-tree-id66635 . -1) (undo-tree-id66636 . -1) (undo-tree-id66637 . -1) (undo-tree-id66638 . -1) (undo-tree-id66639 . -1) (undo-tree-id66640 . -1) (undo-tree-id66641 . -1) (undo-tree-id66642 . -1) (undo-tree-id66643 . -1) (undo-tree-id66644 . -1) (undo-tree-id66645 . -1) (undo-tree-id66646 . -1) (undo-tree-id66647 . -1) (undo-tree-id66648 . -1) (undo-tree-id66649 . -1) (undo-tree-id66650 . -1) (undo-tree-id66651 . -1) (undo-tree-id66652 . -1) (undo-tree-id66653 . -1) (undo-tree-id66654 . -1) (undo-tree-id66655 . -1) (undo-tree-id66656 . -1) (undo-tree-id66657 . -1) (undo-tree-id66658 . -1) (undo-tree-id66659 . -1) (undo-tree-id66660 . -1) (undo-tree-id66661 . -1) (undo-tree-id66662 . -1) (undo-tree-id66663 . -1) (undo-tree-id66664 . -1) (undo-tree-id66665 . -1) (undo-tree-id66666 . -1) (undo-tree-id66667 . -1) (undo-tree-id66668 . -1) (undo-tree-id66669 . -1) (undo-tree-id66670 . -1) (undo-tree-id66671 . -1) (undo-tree-id66672 . -1) (undo-tree-id66673 . -1) (undo-tree-id66674 . -1) (undo-tree-id66675 . -1) (undo-tree-id66676 . -1) (undo-tree-id66677 . -1) (undo-tree-id66678 . -1) (undo-tree-id66679 . -1) (undo-tree-id66680 . -1) (undo-tree-id66681 . -1) (undo-tree-id66682 . -1) (undo-tree-id66683 . -1) (undo-tree-id66684 . -1) (undo-tree-id66685 . -1) (undo-tree-id66686 . -1) (undo-tree-id66687 . -1) (undo-tree-id66688 . -1) (undo-tree-id66689 . -1) (undo-tree-id66690 . -1) (undo-tree-id66691 . -1) (undo-tree-id66692 . -1) (undo-tree-id66693 . -1) (undo-tree-id66694 . -1) (undo-tree-id66695 . -1) (undo-tree-id66696 . -1) (undo-tree-id66697 . -1) (undo-tree-id66698 . -1) (undo-tree-id66699 . -1) (undo-tree-id66700 . -1) (undo-tree-id66701 . -1) (undo-tree-id66702 . -1) (undo-tree-id66703 . -1) (undo-tree-id66704 . -1) (undo-tree-id66705 . -1) (undo-tree-id66706 . -1) (undo-tree-id66707 . -1) (undo-tree-id66708 . -1) (undo-tree-id66709 . -1) (undo-tree-id66710 . -1) (undo-tree-id66711 . -1) (undo-tree-id66712 . -1) (undo-tree-id66713 . -1) (undo-tree-id66714 . -1) (undo-tree-id66715 . -1) (undo-tree-id66716 . -1) (undo-tree-id66717 . -1) (undo-tree-id66718 . -1) (undo-tree-id66719 . -1) (undo-tree-id66720 . -1) (undo-tree-id66721 . -1) (undo-tree-id66722 . -1) (undo-tree-id66723 . -1) (undo-tree-id66724 . -1) (undo-tree-id66725 . -1) (undo-tree-id66726 . -1) (undo-tree-id66727 . -1) (undo-tree-id66728 . -1) (undo-tree-id66729 . -1)) nil (25774 64207 423949 792000) 0 nil])
([nil nil ((#("- We denote these three weight matrices as 𝑼𝑼𝑞𝑞, 𝑼𝑼𝑘𝑘, and 𝑼𝑼𝑣𝑣 . They are used to project the inputs into query, key, and value
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 17 18 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 18 70 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 70 72 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 72 86 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 86 88 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 88 127 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 127 128 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 128 129 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6091) (undo-tree-id64383 . 127) (undo-tree-id64384 . -128) (undo-tree-id64385 . 1) (undo-tree-id64386 . -2) (undo-tree-id64387 . -2) (undo-tree-id64388 . -2) (undo-tree-id64389 . -2) (undo-tree-id64390 . -2) (undo-tree-id64391 . -2) (undo-tree-id64392 . -2) (undo-tree-id64393 . -2) (undo-tree-id64394 . -2) (undo-tree-id64395 . -2) (undo-tree-id64396 . -2) (undo-tree-id64397 . -2) (undo-tree-id64398 . -2) (undo-tree-id64399 . -2) (undo-tree-id64400 . -2) (undo-tree-id64401 . -2) (undo-tree-id64402 . -2) (undo-tree-id64403 . -2) (undo-tree-id64404 . -1) (undo-tree-id64405 . -1) (undo-tree-id64406 . -1) (undo-tree-id64407 . -1) (undo-tree-id64408 . -1) (undo-tree-id64409 . -1) (undo-tree-id64410 . -1) (undo-tree-id64411 . -1) (undo-tree-id64412 . -1) (undo-tree-id64413 . -1) (undo-tree-id64414 . -1) (undo-tree-id64415 . -1) (undo-tree-id64416 . -1) (undo-tree-id64417 . -1) (undo-tree-id64418 . -1) (undo-tree-id64419 . -1) (undo-tree-id64420 . -1) (undo-tree-id64421 . -1) (undo-tree-id64422 . -1) (undo-tree-id64423 . -1) (undo-tree-id64424 . -1) (undo-tree-id64425 . -1) (undo-tree-id64426 . -1) (undo-tree-id64427 . -1) (undo-tree-id64428 . -1) (undo-tree-id64429 . -2) (undo-tree-id64430 . -2) (undo-tree-id64431 . -2) (undo-tree-id64432 . -2) (undo-tree-id64433 . -2) (undo-tree-id64434 . -2) (undo-tree-id64435 . -2) (undo-tree-id64436 . -2) (undo-tree-id64437 . -2) (undo-tree-id64438 . -2) (undo-tree-id64439 . -2) (undo-tree-id64440 . -2) (undo-tree-id64441 . -2) (undo-tree-id64442 . -2) (undo-tree-id64443 . -2) (undo-tree-id64444 . -2) (undo-tree-id64445 . -2) (undo-tree-id64446 . -2) (undo-tree-id64447 . -2) (undo-tree-id64448 . -2) (undo-tree-id64449 . -2) (undo-tree-id64450 . -2) (undo-tree-id64451 . -2) (undo-tree-id64452 . -2) (undo-tree-id64453 . -2) (undo-tree-id64454 . -2) (undo-tree-id64455 . -2) (undo-tree-id64456 . -2) (undo-tree-id64457 . -2) (undo-tree-id64458 . -2) (undo-tree-id64459 . -2) (undo-tree-id64460 . -2) (undo-tree-id64461 . -2) (undo-tree-id64462 . -2) (undo-tree-id64463 . -2) (undo-tree-id64464 . -2) (undo-tree-id64465 . -2) (undo-tree-id64466 . -2) (undo-tree-id64467 . -2) (undo-tree-id64468 . -2) (undo-tree-id64469 . -2) (undo-tree-id64470 . -2) (undo-tree-id64471 . -2) (undo-tree-id64472 . -2) (undo-tree-id64473 . -2) (undo-tree-id64474 . -2) (undo-tree-id64475 . -2) (undo-tree-id64476 . -2) (undo-tree-id64477 . -2) (undo-tree-id64478 . -2) (undo-tree-id64479 . -2) (undo-tree-id64480 . -2) (undo-tree-id64481 . -2) (undo-tree-id64482 . -2) (undo-tree-id64483 . -2) (undo-tree-id64484 . -2) (undo-tree-id64485 . -2) (undo-tree-id64486 . -2) (undo-tree-id64487 . -2) (undo-tree-id64488 . -129) 6093) nil (25774 64207 422584 780000) 0 nil])
([nil nil ((6095 . 6098) (6093 . 6095) (6002 . 6093) (#("- 

- To make the self-attention more flexible, introduce three additional weight matrices." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 4 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 5 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 6 11 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 11 12 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 12 13 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 13 25 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 25 48 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 48 66 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 66 70 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 70 72 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 72 73 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 73 90 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 90 91 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 6002) (undo-tree-id64173 . -91) (undo-tree-id64174 . -91) (undo-tree-id64175 . -91) (undo-tree-id64176 . -91) (undo-tree-id64177 . -91) (undo-tree-id64178 . -91) (undo-tree-id64179 . -91) (undo-tree-id64180 . -91) (undo-tree-id64181 . -91) (undo-tree-id64182 . -91) (undo-tree-id64183 . -91) (undo-tree-id64184 . -91) (undo-tree-id64185 . -91) (undo-tree-id64186 . -91) (undo-tree-id64187 . -91) (undo-tree-id64188 . -91) (undo-tree-id64189 . -91) (undo-tree-id64190 . -91) (undo-tree-id64191 . -91) (undo-tree-id64192 . -91) (undo-tree-id64193 . -91) (undo-tree-id64194 . -91) (undo-tree-id64195 . -91) (undo-tree-id64196 . -91) (undo-tree-id64197 . -91) (undo-tree-id64198 . -91) (undo-tree-id64199 . -91) (undo-tree-id64200 . -91) (undo-tree-id64201 . -91) (undo-tree-id64202 . -91) (undo-tree-id64203 . -91) (undo-tree-id64204 . -91) (undo-tree-id64205 . -91) (undo-tree-id64206 . -91) (undo-tree-id64207 . -91) (undo-tree-id64208 . -91) (undo-tree-id64209 . -91) (undo-tree-id64210 . -91) (undo-tree-id64211 . -91) (undo-tree-id64212 . -91) (undo-tree-id64213 . -91) (undo-tree-id64214 . -91) (undo-tree-id64215 . -91) (undo-tree-id64216 . -91) (undo-tree-id64217 . -91) (undo-tree-id64218 . -91) (undo-tree-id64219 . -91) (undo-tree-id64220 . -91) (undo-tree-id64221 . -91) (undo-tree-id64222 . -91) (undo-tree-id64223 . -91) (undo-tree-id64224 . -91) (undo-tree-id64225 . -91) (undo-tree-id64226 . -91) (undo-tree-id64227 . -91) (undo-tree-id64228 . -91) (undo-tree-id64229 . -91) (undo-tree-id64230 . -91) (undo-tree-id64231 . -91) (undo-tree-id64232 . -91) (undo-tree-id64233 . -91) (undo-tree-id64234 . -91) (undo-tree-id64235 . -91) (undo-tree-id64236 . -91) (undo-tree-id64237 . -91) (undo-tree-id64238 . -91) (undo-tree-id64239 . -91) (undo-tree-id64240 . -91) (undo-tree-id64241 . -91) (undo-tree-id64242 . -91) (undo-tree-id64243 . -91) (undo-tree-id64244 . -91) (undo-tree-id64245 . -91) (undo-tree-id64246 . -91) (undo-tree-id64247 . -91) (undo-tree-id64248 . -91) (undo-tree-id64249 . -91) (undo-tree-id64250 . -91) (undo-tree-id64251 . -91) (undo-tree-id64252 . -91) (undo-tree-id64253 . -91) (undo-tree-id64254 . -91) (undo-tree-id64255 . -91) (undo-tree-id64256 . -91) (undo-tree-id64257 . -91) (undo-tree-id64258 . -91) (undo-tree-id64259 . -91) (undo-tree-id64260 . -91) (undo-tree-id64261 . -91) (undo-tree-id64262 . -91) (undo-tree-id64263 . -91) (undo-tree-id64264 . -91) (undo-tree-id64265 . -91) (undo-tree-id64266 . -91) (undo-tree-id64267 . -91) (undo-tree-id64268 . -91) (undo-tree-id64269 . -91) (undo-tree-id64270 . -91) (undo-tree-id64271 . -91) (undo-tree-id64272 . -91) (undo-tree-id64273 . -91) (undo-tree-id64274 . -91) (undo-tree-id64275 . -91) (undo-tree-id64276 . -91) (6002 . 6006) (#("

" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 2 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6089) (undo-tree-id64277 . -2) (undo-tree-id64278 . -2) (undo-tree-id64279 . -2) (undo-tree-id64280 . -2) (undo-tree-id64281 . -2) (undo-tree-id64282 . -2) (undo-tree-id64283 . -2) (undo-tree-id64284 . -2) (undo-tree-id64285 . -2) (undo-tree-id64286 . -2) (undo-tree-id64287 . -2) (undo-tree-id64288 . -2) (undo-tree-id64289 . -2) (undo-tree-id64290 . -2) (undo-tree-id64291 . -2) (undo-tree-id64292 . -2) (undo-tree-id64293 . -2) (undo-tree-id64294 . -2) (undo-tree-id64295 . -2) (undo-tree-id64296 . -2) (undo-tree-id64297 . -2) (undo-tree-id64298 . -2) (undo-tree-id64299 . -2) (undo-tree-id64300 . -2) (undo-tree-id64301 . -2) (undo-tree-id64302 . -2) (undo-tree-id64303 . -2) (undo-tree-id64304 . -2) (undo-tree-id64305 . -2) (undo-tree-id64306 . -2) (undo-tree-id64307 . -2) (undo-tree-id64308 . -2) (undo-tree-id64309 . -2) (undo-tree-id64310 . -2) (undo-tree-id64311 . -2) (undo-tree-id64312 . -2) (undo-tree-id64313 . -2) (undo-tree-id64314 . -2) (undo-tree-id64315 . -2) (undo-tree-id64316 . -2) (undo-tree-id64317 . -2) (undo-tree-id64318 . -2) (undo-tree-id64319 . -2) (undo-tree-id64320 . -2) (undo-tree-id64321 . -2) (undo-tree-id64322 . -2) (undo-tree-id64323 . -2) (undo-tree-id64324 . -2) (undo-tree-id64325 . -2) (undo-tree-id64326 . -2) (undo-tree-id64327 . -2) (undo-tree-id64328 . -2) (undo-tree-id64329 . -2) (undo-tree-id64330 . -2) (undo-tree-id64331 . -2) (undo-tree-id64332 . -2) (undo-tree-id64333 . -2) (undo-tree-id64334 . -2) (undo-tree-id64335 . -2) (undo-tree-id64336 . -2) (undo-tree-id64337 . -2) (undo-tree-id64338 . -2) (undo-tree-id64339 . -2) (undo-tree-id64340 . -2) (undo-tree-id64341 . -2) (undo-tree-id64342 . -2) (undo-tree-id64343 . -2) (undo-tree-id64344 . -2) (undo-tree-id64345 . -2) (undo-tree-id64346 . -2) (undo-tree-id64347 . -2) (undo-tree-id64348 . -2) (undo-tree-id64349 . -2) (undo-tree-id64350 . -2) (undo-tree-id64351 . -2) (undo-tree-id64352 . -2) (undo-tree-id64353 . -2) (undo-tree-id64354 . -2) (undo-tree-id64355 . -2) (undo-tree-id64356 . -2) (undo-tree-id64357 . -2) (undo-tree-id64358 . -2) (undo-tree-id64359 . -2) (undo-tree-id64360 . -2) (undo-tree-id64361 . -2) (undo-tree-id64362 . -2) (undo-tree-id64363 . -2) (undo-tree-id64364 . -2) (undo-tree-id64365 . -2) (undo-tree-id64366 . -2) (undo-tree-id64367 . -2) (undo-tree-id64368 . -2) (undo-tree-id64369 . -2) (undo-tree-id64370 . -2) (undo-tree-id64371 . -2) (undo-tree-id64372 . -2) (undo-tree-id64373 . -2) (undo-tree-id64374 . -2) (undo-tree-id64375 . -2) (undo-tree-id64376 . -2) (undo-tree-id64377 . -2) (undo-tree-id64378 . -2) (undo-tree-id64379 . -2) (undo-tree-id64380 . -2) 6091 (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6091) (undo-tree-id64381 . -1) (undo-tree-id64382 . -1) 6092 (6091 . 6092)) nil (25774 64207 425394 268000) 0 nil])
([nil nil ((6091 . 6102) (#("- 

- *U_q*" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 4 5 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 5 6 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil face (bold) font-lock-multiline t org-emphasis t invisible org-link) 7 8 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil face (bold) font-lock-multiline t org-emphasis t) 8 9 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil face (bold) font-lock-multiline t org-emphasis t) 9 10 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil display nil face (bold) font-lock-multiline t org-emphasis t) 10 11 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil face (bold) font-lock-multiline t org-emphasis t invisible org-link)) . 6091) (undo-tree-id67519 . -10) (undo-tree-id67520 . -11) (undo-tree-id67521 . -7) (undo-tree-id67522 . -8) (undo-tree-id67523 . -8) (undo-tree-id67524 . -8) (undo-tree-id67525 . -8) (undo-tree-id67526 . -8) (undo-tree-id67527 . -8) (undo-tree-id67528 . -8) (undo-tree-id67529 . -8) (undo-tree-id67530 . -8) (undo-tree-id67531 . -8) (undo-tree-id67532 . -8) (undo-tree-id67533 . -8) (undo-tree-id67534 . -8) (undo-tree-id67535 . -8) (undo-tree-id67536 . -8) (undo-tree-id67537 . -8) (undo-tree-id67538 . -8) (undo-tree-id67539 . -8) (undo-tree-id67540 . -8) (undo-tree-id67541 . -8) (undo-tree-id67542 . -8) (undo-tree-id67543 . -9) (undo-tree-id67544 . -9) (undo-tree-id67545 . -9) (undo-tree-id67546 . -9) (undo-tree-id67547 . -9) (undo-tree-id67548 . -9) (undo-tree-id67549 . -9) (undo-tree-id67550 . -9) (undo-tree-id67551 . -10) (undo-tree-id67552 . -10) (undo-tree-id67553 . -10) (undo-tree-id67554 . -10) (undo-tree-id67555 . -10) (undo-tree-id67556 . -10) (undo-tree-id67557 . -10) (undo-tree-id67558 . -10) (undo-tree-id67559 . -10) (undo-tree-id67560 . -10) (undo-tree-id67561 . -10) (undo-tree-id67562 . -10) (undo-tree-id67563 . -10) (undo-tree-id67564 . -10) (undo-tree-id67565 . -10) (undo-tree-id67566 . -10) (undo-tree-id67567 . -10) (undo-tree-id67568 . -10) (undo-tree-id67569 . -10) (undo-tree-id67570 . -10) (undo-tree-id67571 . -10) (undo-tree-id67572 . -10) (undo-tree-id67573 . -10) (undo-tree-id67574 . -10) (undo-tree-id67575 . -10) (undo-tree-id67576 . -10) (undo-tree-id67577 . -11) (undo-tree-id67578 . -11) (undo-tree-id67579 . -11) (undo-tree-id67580 . -11) (undo-tree-id67581 . -11) (undo-tree-id67582 . -11) (undo-tree-id67583 . -11) (undo-tree-id67584 . -11) (undo-tree-id67585 . -10) (undo-tree-id67586 . -10) (undo-tree-id67587 . -10) (undo-tree-id67588 . -10) (undo-tree-id67589 . -10) (undo-tree-id67590 . -10) (undo-tree-id67591 . -10) (undo-tree-id67592 . -9) (undo-tree-id67593 . -9) (undo-tree-id67594 . -9) (undo-tree-id67595 . -9) (undo-tree-id67596 . -9) (undo-tree-id67597 . -9) (undo-tree-id67598 . -9) (undo-tree-id67599 . -9) (undo-tree-id67600 . -10) (undo-tree-id67601 . -10) (undo-tree-id67602 . -10) (undo-tree-id67603 . -10) (undo-tree-id67604 . -10) (undo-tree-id67605 . -10) (undo-tree-id67606 . -10) (undo-tree-id67607 . -10) (undo-tree-id67608 . -10) (undo-tree-id67609 . -10) (undo-tree-id67610 . -10) (undo-tree-id67611 . -10) (undo-tree-id67612 . -10) (undo-tree-id67613 . -10) (undo-tree-id67614 . -10) (undo-tree-id67615 . -11) (undo-tree-id67616 . -11) (undo-tree-id67617 . -11) (undo-tree-id67618 . -11) (undo-tree-id67619 . -11) (undo-tree-id67620 . -11) (undo-tree-id67621 . -11) (undo-tree-id67622 . -11) (undo-tree-id67623 . -11) (undo-tree-id67624 . -11) (undo-tree-id67625 . -11) (undo-tree-id67626 . -11) (undo-tree-id67627 . -11) (undo-tree-id67628 . -11) (undo-tree-id67629 . -11) (undo-tree-id67630 . -11) (undo-tree-id67631 . -11) (undo-tree-id67632 . -11) (undo-tree-id67633 . -11) (undo-tree-id67634 . -11) (undo-tree-id67635 . -11) (undo-tree-id67636 . -11) (undo-tree-id67637 . -4) (6091 . 6095) (#("  " 0 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6098) (undo-tree-id67638 . -2) (undo-tree-id67639 . -1) (undo-tree-id67640 . -1) (undo-tree-id67641 . -1) (undo-tree-id67642 . -1) (undo-tree-id67643 . -1) (undo-tree-id67644 . -1) (undo-tree-id67645 . -2) (undo-tree-id67646 . -2) (undo-tree-id67647 . -2) (undo-tree-id67648 . -2) (undo-tree-id67649 . -2) (undo-tree-id67650 . -2) (undo-tree-id67651 . -2) (undo-tree-id67652 . -2) 6100 (6098 . 6100)) nil (25774 64229 310115 781000) 0 nil] [nil nil ((6091 . 6102) (#("- *

- *U_q" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (invisible org-link org-emphasis t font-lock-multiline t face (bold) fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 4 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 5 6 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 6 7 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil face (bold) font-lock-multiline t org-emphasis t invisible org-link) 8 9 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil face (bold) font-lock-multiline t org-emphasis t) 9 10 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil face (bold) font-lock-multiline t org-emphasis t) 10 11 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil display nil face (bold) font-lock-multiline t org-emphasis t)) . 6091) (undo-tree-id64074 . -11) (undo-tree-id64075 . -11) (undo-tree-id64076 . -8) (undo-tree-id64077 . -9) (undo-tree-id64078 . -9) (undo-tree-id64079 . -9) (undo-tree-id64080 . -9) (undo-tree-id64081 . -9) (undo-tree-id64082 . -9) (undo-tree-id64083 . -9) (undo-tree-id64084 . -9) (undo-tree-id64085 . -9) (undo-tree-id64086 . -9) (undo-tree-id64087 . -9) (undo-tree-id64088 . -9) (undo-tree-id64089 . -9) (undo-tree-id64090 . -9) (undo-tree-id64091 . -9) (undo-tree-id64092 . -9) (undo-tree-id64093 . -9) (undo-tree-id64094 . -9) (undo-tree-id64095 . -9) (undo-tree-id64096 . -9) (undo-tree-id64097 . -9) (undo-tree-id64098 . -10) (undo-tree-id64099 . -10) (undo-tree-id64100 . -10) (undo-tree-id64101 . -10) (undo-tree-id64102 . -10) (undo-tree-id64103 . -10) (undo-tree-id64104 . -10) (undo-tree-id64105 . -10) (undo-tree-id64106 . -11) (undo-tree-id64107 . -11) (undo-tree-id64108 . -11) (undo-tree-id64109 . -11) (undo-tree-id64110 . -11) (undo-tree-id64111 . -11) (undo-tree-id64112 . -11) (undo-tree-id64113 . -11) (undo-tree-id64114 . -11) (undo-tree-id64115 . -11) (undo-tree-id64116 . -11) (undo-tree-id64117 . -11) (undo-tree-id64118 . -11) (undo-tree-id64119 . -11) (undo-tree-id64120 . -11) (undo-tree-id64121 . -11) (undo-tree-id64122 . -11) (undo-tree-id64123 . -11) (undo-tree-id64124 . -11) (undo-tree-id64125 . -11) (undo-tree-id64126 . -11) (undo-tree-id64127 . -11) (undo-tree-id64128 . -11) (undo-tree-id64129 . -11) (undo-tree-id64130 . -11) (undo-tree-id64131 . -11) (undo-tree-id64132 . -11) (undo-tree-id64133 . -11) (undo-tree-id64134 . -11) (undo-tree-id64135 . -11) (undo-tree-id64136 . -11) (undo-tree-id64137 . -11) (undo-tree-id64138 . -11) (undo-tree-id64139 . -11) (undo-tree-id64140 . -11) (undo-tree-id64141 . -11) (undo-tree-id64142 . -11) (undo-tree-id64143 . -11) (undo-tree-id64144 . -11) (undo-tree-id64145 . -11) (undo-tree-id64146 . -11) (undo-tree-id64147 . -10) (undo-tree-id64148 . -10) (undo-tree-id64149 . -10) (undo-tree-id64150 . -10) (undo-tree-id64151 . -10) (undo-tree-id64152 . -10) (undo-tree-id64153 . -10) (undo-tree-id64154 . -10) (undo-tree-id64155 . -11) (undo-tree-id64156 . -11) (undo-tree-id64157 . -11) (undo-tree-id64158 . -11) (undo-tree-id64159 . -11) (undo-tree-id64160 . -11) (undo-tree-id64161 . -11) (undo-tree-id64162 . -11) (undo-tree-id64163 . -11) (undo-tree-id64164 . -5) (6091 . 6096) (#("*" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t invisible org-link)) . 6097) (undo-tree-id64165 . -1) (undo-tree-id64166 . -1) (undo-tree-id64167 . -1) (undo-tree-id64168 . -1) (undo-tree-id64169 . -1) (undo-tree-id64170 . -1) (undo-tree-id64171 . -1) (undo-tree-id64172 . -1)) ((6097 . 6098) (#("- *

" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (invisible org-link org-emphasis t font-lock-multiline t face (bold) fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 4 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 6091) (6091 . 6102) (#("- *U_q

- *" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 4 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) invisible t) 5 6 (display ((raise -0.3) (height 0.7)) fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 6 7 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 7 8 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 8 9 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 9 10 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 10 11 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6091) (undo-tree-id67468 . 1) (undo-tree-id67469 . -9) (undo-tree-id67470 . -9) (undo-tree-id67471 . -9)) (25774 64207 421725 160000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6102 . 6103) (#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -6110) (6102 . 6111) 6101) nil (25774 64229 309293 186000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 6110 . 6111) (#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -6118) (6110 . 6119) 6103) nil (25774 64229 309291 453000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6099) (undo-tree-id67512 . -1) (undo-tree-id67513 . -1) (undo-tree-id67514 . -1) (undo-tree-id67515 . -1) (undo-tree-id67516 . -1) (undo-tree-id67517 . -1) (undo-tree-id67518 . -1)) nil (25774 64229 309289 902000) 0 nil])
([nil nil ((#("-" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226]))) . 6099) (undo-tree-id67484 . -1) (undo-tree-id67485 . -1) (undo-tree-id67486 . -1) (undo-tree-id67487 . -1) (undo-tree-id67488 . -1) (undo-tree-id67489 . -1) (undo-tree-id67490 . -1) (undo-tree-id67491 . -1) (undo-tree-id67492 . -1) (undo-tree-id67493 . -1) (undo-tree-id67494 . -1) (undo-tree-id67495 . -1) (undo-tree-id67496 . -1) (undo-tree-id67497 . -1) (undo-tree-id67498 . -1) (undo-tree-id67499 . -1) (undo-tree-id67500 . -1) (undo-tree-id67501 . -1) (undo-tree-id67502 . -1) (undo-tree-id67503 . -1) (undo-tree-id67504 . -1) (undo-tree-id67505 . -1) (undo-tree-id67506 . -1) (undo-tree-id67507 . -1) (undo-tree-id67508 . -1) (undo-tree-id67509 . -1) (undo-tree-id67510 . -1) (undo-tree-id67511 . -1)) nil (25774 64229 309283 573000) 0 nil])
([nil nil ((6106 . 6107) (#("q" 0 1 (display nil fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) face (bold) font-lock-multiline t org-emphasis t)) . 6106) (undo-tree-id67483 . -1)) nil (25774 64229 309264 27000) 0 nil])
([nil nil ((6114 . 6115) (#("q" 0 1 (display nil fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) face (bold) font-lock-multiline t org-emphasis t)) . 6114) (undo-tree-id67482 . -1)) nil (25774 64229 309261 786000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -6109) (undo-tree-id67472 . -2) (undo-tree-id67473 . -2) (undo-tree-id67474 . -2) (undo-tree-id67475 . -2) (undo-tree-id67476 . -2) (undo-tree-id67477 . -2) (undo-tree-id67478 . -2) (undo-tree-id67479 . -2) (undo-tree-id67480 . -2) (undo-tree-id67481 . -2) 6111 (6108 . 6111) 6106) nil (25774 64229 309258 44000) 0 nil])
([nil nil ((6117 . 6118)) nil (25774 64229 309236 548000) 0 nil])
([nil nil ((6171 . 6172) (6165 . 6171) (6157 . 6165) (6138 . 6157) (#("- 

- Key Sequence:" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 4 5 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 5 12 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 12 19 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6138) (undo-tree-id67653 . -8) (undo-tree-id67654 . -12) (undo-tree-id67655 . -19) (6138 . 6142) 6153 (6152 . 6153) (6146 . 6152) (6140 . 6146) (6119 . 6140) (#("- 

- Query Sequence:" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 4 5 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 5 14 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 14 21 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6119) (undo-tree-id67656 . -8) (undo-tree-id67657 . -14) (undo-tree-id67658 . -21) (6119 . 6123) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6136) (undo-tree-id67659 . -1) 6137 (6135 . 6137) (6129 . 6135) (6124 . 6129) (#("r" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6124) (undo-tree-id67660 . -1) (undo-tree-id67661 . -1) (#("r" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6125) (undo-tree-id67662 . -1) (undo-tree-id67663 . -1) (#("y" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6126) (undo-tree-id67664 . -1) (undo-tree-id67665 . -1) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6127) (undo-tree-id67666 . -1) 6128 (6123 . 6128) (#("r" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6123) (undo-tree-id67667 . -1) (#("s" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6124) (undo-tree-id67668 . -1) 6125 (6121 . 6125) (6110 . 6121) (#("- 

- *U_v*" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 4 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 5 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 6 7 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) face (bold) font-lock-multiline t org-emphasis t invisible org-link) 7 8 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) face (bold) font-lock-multiline t org-emphasis t) 8 9 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) face (bold) font-lock-multiline t org-emphasis t) 9 10 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) face (bold) font-lock-multiline t org-emphasis t) 10 11 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) face (bold) font-lock-multiline t org-emphasis t invisible org-link)) . 6110) (undo-tree-id67669 . -11) (undo-tree-id67670 . -11) (undo-tree-id67671 . -11) (undo-tree-id67672 . -11) (6110 . 6114) (#("

  " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -6117) (undo-tree-id67673 . -1) (undo-tree-id67674 . -1) (undo-tree-id67675 . -4) 6121 (6118 . 6121) (t 25774 64229 381317 227000) 6118) nil (25774 64268 358555 38000) 0 nil])
([nil nil ((6172 . 6173)) nil (25774 64268 358514 796000) 0 nil])
([nil nil ((6146 . 6148) (6136 . 6146) (t 25774 64268 433945 685000)) nil (25774 64353 256262 786000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6151 . 6152) (6148 . 6152)) ((#("*U_q" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 2 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil invisible t) 3 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil rear-nonsticky nil display ((raise -0.3) (height 0.7)))) . 6148) (undo-tree-id67706 . -3) (undo-tree-id67707 . -4) (undo-tree-id67708 . -3) (undo-tree-id67709 . -3) (undo-tree-id67710 . -3) (undo-tree-id67711 . -3) (undo-tree-id67712 . -3) (undo-tree-id67713 . -3) (undo-tree-id67714 . -3) (undo-tree-id67715 . -3) (nil rear-nonsticky t 6151 . 6152)) (25774 64354 110228 21000) 0 nil])
([nil nil ((6156 . 6161) (#("{]" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6156) (6152 . 6158)) ((#(" x^{" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) face (bold) font-lock-multiline t org-emphasis t) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) face (bold) font-lock-multiline t org-emphasis t) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) display nil face (bold) font-lock-multiline t org-emphasis t)) . 6152) (#("{]" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6156) (6156 . 6158) (#("(i)}*" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) display nil face (bold) font-lock-multiline t org-emphasis t) 3 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) display nil face (bold) font-lock-multiline t org-emphasis t) 4 5 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t invisible org-link)) . 6156)) (25774 64354 344038 880000) 0 nil])
([nil nil ((6144 . 6145)) ((#("*" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t display ((raise 0.3) (height 0.7)))) . 6144)) (25774 64354 589214 507000) 0 nil] [nil nil ((#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6147) (undo-tree-id67682 . -1) (undo-tree-id67683 . -1) (undo-tree-id67684 . -1) (undo-tree-id67685 . -1)) ((6147 . 6148)) (25774 64336 208050 347000) 0 nil])
([nil nil ((#("*" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t invisible org-link)) . -6161) (undo-tree-id67728 . -1) (undo-tree-id67729 . -1) (undo-tree-id67730 . -1) (undo-tree-id67731 . -1) (undo-tree-id67732 . -1) (undo-tree-id67733 . -1) (undo-tree-id67734 . -1) (undo-tree-id67735 . -1) (undo-tree-id67736 . -1) (undo-tree-id67737 . -1) (undo-tree-id67738 . -1) (undo-tree-id67739 . -1) (undo-tree-id67740 . -1) (undo-tree-id67741 . -1) (undo-tree-id67742 . -1) (undo-tree-id67743 . -1) (undo-tree-id67744 . -1) 6162 (#("
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6162) (undo-tree-id67745 . -1) (undo-tree-id67746 . -1) (undo-tree-id67747 . -1) (undo-tree-id67748 . -1) (undo-tree-id67749 . -1) (undo-tree-id67750 . -1) (undo-tree-id67751 . -1) (undo-tree-id67752 . -1) (undo-tree-id67753 . -1) (undo-tree-id67754 . -1) 6163) nil (25774 64372 918532 5000) 0 nil] [nil nil ((#("*" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t display ((raise 0.3) (height 0.7)))) . 6144) (undo-tree-id67691 . -1) (undo-tree-id67693 . -1) (undo-tree-id67695 . -1) (undo-tree-id67697 . -1)) ((6144 . 6145)) (25774 64351 83812 245000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6147) (undo-tree-id67680 . -1) (undo-tree-id67681 . -1)) ((6147 . 6148)) (25774 64335 698132 746000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6149) (undo-tree-id67725 . -1) (undo-tree-id67726 . -1) (undo-tree-id67727 . -1)) nil (25774 64372 918509 645000) 0 nil])
([nil nil ((#("*" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6138) (undo-tree-id67702 . -1) (undo-tree-id67703 . -1) (undo-tree-id67704 . -1) (undo-tree-id67705 . -1)) ((6138 . 6139)) (25774 64350 624313 700000) 0 nil] [nil nil ((6146 . 6147)) ((#("*" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t invisible org-link)) . 6146)) (25774 64345 757862 451000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6139) (undo-tree-id67676 . -1) (undo-tree-id67677 . -1) (undo-tree-id67678 . -1) (undo-tree-id67679 . -1)) ((6139 . 6140) (t 25774 64333 722988 800000)) (25774 64333 648742 588000) 0 nil])
([nil nil ((#("*" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t display ((raise 0.3) (height 0.7)))) . 6144) (undo-tree-id67721 . -1) (undo-tree-id67722 . -1) (undo-tree-id67723 . -1) (undo-tree-id67724 . -1)) nil (25774 64372 918505 843000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6138) (undo-tree-id67699 . -1) (undo-tree-id67700 . -1) (undo-tree-id67701 . -1)) ((6138 . 6139) (t 25774 64349 371237 507000)) (25774 64349 302182 314000) 0 nil])
nil
nil
([nil nil ((#("*" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6138) (undo-tree-id67716 . -1) (undo-tree-id67717 . -1) (undo-tree-id67718 . -1) (undo-tree-id67719 . -1) (undo-tree-id67720 . -1)) nil (25774 64372 918498 489000) 0 nil])
nil
([nil nil ((#("(" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6140) (undo-tree-id67785 . -1) (undo-tree-id67786 . -1) (undo-tree-id67787 . -1) (undo-tree-id67788 . -1) (undo-tree-id67789 . -1) (undo-tree-id67790 . -1) (undo-tree-id67791 . -1) (undo-tree-id67792 . -1) (undo-tree-id67793 . -1) 6141 (6140 . 6141) (t 25774 64372 991612 28000)) nil (25774 64384 315909 862000) 0 nil])
([nil nil ((#("l" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6140) (undo-tree-id67755 . -1) (undo-tree-id67756 . -1) (undo-tree-id67757 . -1) (undo-tree-id67758 . -1) (undo-tree-id67759 . -1) (undo-tree-id67760 . -1) (undo-tree-id67761 . -1) (undo-tree-id67762 . -1) (undo-tree-id67763 . -1) (undo-tree-id67764 . -1) (undo-tree-id67765 . -1) (undo-tree-id67766 . -1) (undo-tree-id67767 . -1) (undo-tree-id67768 . -1) (undo-tree-id67769 . -1) (undo-tree-id67770 . -1) (undo-tree-id67771 . -1) (undo-tree-id67772 . -1) (undo-tree-id67773 . -1) (undo-tree-id67774 . -1) (undo-tree-id67775 . -1) (undo-tree-id67776 . -1) (undo-tree-id67777 . -1) (undo-tree-id67778 . -1) (undo-tree-id67779 . -1) (undo-tree-id67780 . -1) (undo-tree-id67781 . -1) (undo-tree-id67782 . -1) (undo-tree-id67783 . -1) (undo-tree-id67784 . -1) 6141 (6140 . 6141)) nil (25774 64384 316170 887000) 0 nil])
([nil nil ((6174 . 6175)) nil (25774 64420 444674 159000) 0 nil] [nil nil ((6140 . 6141)) ((#("(" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6140)) (25774 64384 315864 412000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6193 . 6194) (nil fontified nil 6175 . 6194) (6175 . 6194) 6174) nil (25774 64420 444673 409000) 0 nil])
nil
([nil nil ((6213 . 6214)) nil (25774 64420 444672 350000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6232 . 6233) (nil fontified nil 6214 . 6233) (6214 . 6233) 6213) nil (25774 64420 444671 429000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6195) (undo-tree-id67798 . -1) (undo-tree-id67799 . -1)) nil (25774 64420 444669 883000) 0 nil])
([nil nil ((6175 . 6176) (#("q" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6175) (undo-tree-id67795 . -1) (undo-tree-id67796 . -1) (undo-tree-id67797 . -1)) nil (25774 64424 774526 846000) 0 nil])
([nil nil ((6186 . 6187)) nil (25774 64545 551639 34000) 0 nil] [nil nil ((6184 . 6185) (#("_" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t invisible t)) . 6184) (undo-tree-id67800 . -1)) ((6184 . 6185) (#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6184)) (25774 64424 774155 80000) 0 nil] [nil nil ((6184 . 6185) (#("_" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t invisible t)) . 6184) (undo-tree-id67794 . -1)) ((6184 . 6185) (#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6184)) (25774 64420 444657 5000) 0 nil])
([nil nil ((#("_" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t invisible t)) . 6184) (undo-tree-id67833 . -1) (undo-tree-id67834 . -1)) nil (25774 64545 551638 230000) 0 nil])
nil
nil
([nil nil ((#("q" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t display nil)) . 6184) (undo-tree-id67807 . -1) (undo-tree-id67808 . -1) (undo-tree-id67809 . -1) (undo-tree-id67810 . -1) (undo-tree-id67811 . -1) (undo-tree-id67812 . -1) (undo-tree-id67813 . -1) (undo-tree-id67814 . -1) (undo-tree-id67815 . -1) (undo-tree-id67816 . -1) (undo-tree-id67817 . -1) (undo-tree-id67818 . -1) (undo-tree-id67819 . -1) (undo-tree-id67820 . -1) (undo-tree-id67821 . -1) (undo-tree-id67822 . -1) (undo-tree-id67823 . -1) (undo-tree-id67824 . -1) (undo-tree-id67825 . -1) (undo-tree-id67826 . -1) (undo-tree-id67827 . -1) (undo-tree-id67828 . -1) (undo-tree-id67829 . -1) (undo-tree-id67830 . -1) (undo-tree-id67831 . -1) (undo-tree-id67832 . -1)) nil (25774 64545 551635 553000) 0 nil])
([nil nil ((6184 . 6185)) nil (25774 64545 551615 220000) 0 nil])
([nil nil ((6213 . 6214) (#("q" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6213) (undo-tree-id67806 . -1)) nil (25774 64545 551614 308000) 0 nil])
([nil nil ((6222 . 6223) (#("_" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t invisible t)) . 6222) (undo-tree-id67805 . -1)) nil (25774 64545 551612 188000) 0 nil])
([nil nil ((6222 . 6223)) nil (25774 64545 551609 994000) 0 nil])
([nil nil ((#("q" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t display ((raise -0.3) (height 0.7)))) . 6224) (undo-tree-id67801 . -1) (undo-tree-id67802 . -1) (undo-tree-id67803 . -1) (undo-tree-id67804 . -1)) nil (25774 64545 551605 943000) 0 nil])
([nil nil ((6235 . 6237) (6233 . 6235) (#("-" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6233) (undo-tree-id67835 . -1) (undo-tree-id67836 . -1) (undo-tree-id67837 . -1) (undo-tree-id67838 . -1) (undo-tree-id67839 . -1) (undo-tree-id67840 . -1) (undo-tree-id67841 . -1) (undo-tree-id67842 . -1) (undo-tree-id67843 . -1) (undo-tree-id67844 . -1) (undo-tree-id67845 . -1) (undo-tree-id67846 . -1) (undo-tree-id67847 . -1) (undo-tree-id67848 . -1) (undo-tree-id67849 . -1) (undo-tree-id67850 . -1) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6234) (undo-tree-id67851 . -1) (undo-tree-id67852 . -1) (undo-tree-id67853 . -1) (undo-tree-id67854 . -1) (undo-tree-id67855 . -1) (undo-tree-id67856 . -1) (undo-tree-id67857 . -1) (undo-tree-id67858 . -1) (undo-tree-id67859 . -1) 6235 (6195 . 6235) (#("- 
- Value Sequence: v^{i} = U_v x^{(i)}" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 4 13 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 13 21 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 21 22 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 22 23 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) invisible t) 23 24 (display ((raise 0.3) (height 0.7)) fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) invisible t) 24 25 (display ((raise 0.3) (height 0.7)) fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 25 26 (display ((raise 0.3) (height 0.7)) fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) invisible t) 26 30 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 30 31 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) invisible t) 31 32 (display ((raise -0.3) (height 0.7)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 32 34 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 34 35 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) invisible t) 35 36 (display ((raise 0.3) (height 0.7)) fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) invisible t) 36 39 (display ((raise 0.3) (height 0.7)) fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 39 40 (display ((raise 0.3) (height 0.7)) rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) invisible t)) . 6195) (undo-tree-id67860 . -40) (undo-tree-id67861 . -40) (undo-tree-id67862 . -40) (undo-tree-id67863 . -40) (undo-tree-id67864 . -40) (undo-tree-id67865 . -40) (undo-tree-id67866 . -40) (undo-tree-id67867 . -40) (undo-tree-id67868 . -40) (undo-tree-id67869 . -40) (undo-tree-id67870 . -40) (undo-tree-id67871 . -40) (undo-tree-id67872 . -40) (undo-tree-id67873 . -40) (undo-tree-id67874 . -40) (undo-tree-id67875 . -40) (undo-tree-id67876 . -40) (undo-tree-id67877 . -40) (undo-tree-id67878 . -40) (undo-tree-id67879 . -40) (undo-tree-id67880 . -40) (undo-tree-id67881 . -40) (undo-tree-id67882 . -40) (undo-tree-id67883 . -40) (undo-tree-id67884 . -40) (undo-tree-id67885 . -40) (undo-tree-id67886 . -40) (undo-tree-id67887 . -40) (undo-tree-id67888 . -40) (undo-tree-id67889 . -40) (undo-tree-id67890 . -3) (6195 . 6198) (#("

" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 2 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6232) (undo-tree-id67891 . -2) (undo-tree-id67892 . -1) (undo-tree-id67893 . -1) (undo-tree-id67894 . -1) (undo-tree-id67895 . -1) (undo-tree-id67896 . -1) (undo-tree-id67897 . -1) (undo-tree-id67898 . -1) (undo-tree-id67899 . -1) (undo-tree-id67900 . -1) (undo-tree-id67901 . -1) (undo-tree-id67902 . -1) (undo-tree-id67903 . -1) (undo-tree-id67904 . -1) (undo-tree-id67905 . -1) (undo-tree-id67906 . -1) (undo-tree-id67907 . -1) (undo-tree-id67908 . -1) (undo-tree-id67909 . -1) (undo-tree-id67910 . -1) (undo-tree-id67911 . -1) (undo-tree-id67912 . -1) (undo-tree-id67913 . -2) (undo-tree-id67914 . -2) (undo-tree-id67915 . -2) (undo-tree-id67916 . -2) (undo-tree-id67917 . -2) (undo-tree-id67918 . -2) (undo-tree-id67919 . -2) (undo-tree-id67920 . -2) 6234 (6233 . 6234) (#("-" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6233) (undo-tree-id67921 . -1) (undo-tree-id67922 . -1) (undo-tree-id67923 . -1) (undo-tree-id67924 . -1) (undo-tree-id67925 . -1) (undo-tree-id67926 . -1) (undo-tree-id67927 . -1) (undo-tree-id67928 . -1) (undo-tree-id67929 . -1) (undo-tree-id67930 . -1) (undo-tree-id67931 . -1) (undo-tree-id67932 . -1) (undo-tree-id67933 . -1) (undo-tree-id67934 . -1) (undo-tree-id67935 . -1) (undo-tree-id67936 . -1) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6234) (undo-tree-id67937 . -1) (undo-tree-id67938 . -1) (undo-tree-id67939 . -1) (undo-tree-id67940 . -1) (undo-tree-id67941 . -1) (undo-tree-id67942 . -1) (undo-tree-id67943 . -1) (undo-tree-id67944 . -1) (undo-tree-id67945 . -1) 6235 (6195 . 6235) (#("- 
- Value Sequence: v^{i} = U_v x^{(i)}" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 4 13 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 13 21 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 21 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 22 23 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil invisible t) 23 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil display ((raise 0.3) (height 0.7)) invisible t) 24 25 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil display ((raise 0.3) (height 0.7))) 25 26 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil display ((raise 0.3) (height 0.7)) invisible t) 26 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 30 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil invisible t) 31 32 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) display ((raise -0.3) (height 0.7))) 32 34 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 34 35 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil invisible t) 35 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil display ((raise 0.3) (height 0.7)) invisible t) 36 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil display ((raise 0.3) (height 0.7))) 39 40 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil rear-nonsticky t display ((raise 0.3) (height 0.7)) invisible t)) . 6195) (undo-tree-id67946 . 9) (undo-tree-id67947 . -21) (undo-tree-id67948 . -32) (undo-tree-id67949 . -36) (undo-tree-id67950 . -36) (undo-tree-id67951 . -36) (undo-tree-id67952 . -36) (undo-tree-id67953 . -36) (undo-tree-id67954 . -36) (undo-tree-id67955 . -36) (undo-tree-id67956 . -36) (undo-tree-id67957 . -36) (undo-tree-id67958 . -36) (undo-tree-id67959 . -36) (undo-tree-id67960 . -36) (undo-tree-id67961 . -36) (undo-tree-id67962 . -36) (undo-tree-id67963 . -36) (undo-tree-id67964 . -37) (undo-tree-id67965 . -37) (undo-tree-id67966 . -37) (undo-tree-id67967 . -37) (undo-tree-id67968 . -37) (undo-tree-id67969 . -37) (undo-tree-id67970 . -37) (undo-tree-id67971 . -37) (undo-tree-id67972 . -37) (undo-tree-id67973 . -37) (undo-tree-id67974 . -37) (undo-tree-id67975 . -3) (6195 . 6198) 6233 (t 25774 64545 626320 906000)) nil (25774 64556 887136 66000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6234) (t 25774 64556 962497 258000)) nil (25775 319 347984 950000) 0 nil])
([nil nil ((6237 . 6240)) nil (25775 319 347984 247000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7328 . 7329) (nil fontified nil 7304 . 7329) (nil fontified nil 7206 . 7304) (nil fontified nil 7114 . 7206) (nil fontified nil 7020 . 7114) (nil fontified nil 6920 . 7020) (nil fontified nil 6819 . 6920) (nil fontified nil 6722 . 6819) (nil fontified nil 6623 . 6722) (nil fontified nil 6521 . 6623) (nil fontified nil 6419 . 6521) (nil fontified nil 6316 . 6419) (nil fontified nil 6291 . 6316) (nil fontified nil 6240 . 6291) (6240 . 7329) 6239) nil (25775 319 347982 988000) 0 nil])
([nil nil ((7303 . 7304) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7303) (undo-tree-id67976 . -1) (7205 . 7206) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7205) (undo-tree-id67977 . -1) (7113 . 7114) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7113) (undo-tree-id67978 . -1) (7019 . 7020) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7019) (undo-tree-id67979 . -1) (6919 . 6920) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6919) (undo-tree-id67980 . -1) (undo-tree-id67981 . -1) (undo-tree-id67982 . -1) (undo-tree-id67983 . -1) (undo-tree-id67984 . -1) (undo-tree-id67985 . -1) (undo-tree-id67986 . -1) (undo-tree-id67987 . -1) (undo-tree-id67988 . -1) (undo-tree-id67989 . -1) (undo-tree-id67990 . -1) (undo-tree-id67991 . -1) (undo-tree-id67992 . -1) (undo-tree-id67993 . -1) (undo-tree-id67994 . -1) (undo-tree-id67995 . -1) (undo-tree-id67996 . -1) (6818 . 6819) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6818) (undo-tree-id67997 . -1) (6721 . 6722) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6721) (undo-tree-id67998 . -1) (6622 . 6623) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6622) (undo-tree-id67999 . -1) (6520 . 6521) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6520) (undo-tree-id68000 . -1) (6418 . 6419) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6418) (undo-tree-id68001 . -1) (6315 . 6316) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6315) (undo-tree-id68002 . -1) 6291) nil (25775 319 347976 397000) 0 nil])
([nil nil ((7329 . 7330)) nil (25775 319 347943 371000) 0 nil])
([nil nil ((6316 . 6317) (t 25775 319 424477 230000)) nil (25775 329 533993 520000) 0 nil])
([nil nil ((6290 . 6291) (#("
" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t)) . -6290) (undo-tree-id68003 . -1) (undo-tree-id68004 . -1) (undo-tree-id68005 . -1) (undo-tree-id68006 . -1) (undo-tree-id68007 . -1) (undo-tree-id68008 . -1) (undo-tree-id68009 . -1) (undo-tree-id68010 . -1) (undo-tree-id68011 . -1) (undo-tree-id68012 . -1) (undo-tree-id68013 . -1) (undo-tree-id68014 . -1) (undo-tree-id68015 . -1) (undo-tree-id68016 . -1) (undo-tree-id68017 . -1) (undo-tree-id68018 . -1) (undo-tree-id68019 . -1) (undo-tree-id68020 . -1) (undo-tree-id68021 . -1) (undo-tree-id68022 . -1) (undo-tree-id68023 . -1) (undo-tree-id68024 . -1) (undo-tree-id68025 . -1) (undo-tree-id68026 . -1) (undo-tree-id68027 . -1) (undo-tree-id68028 . -1) (undo-tree-id68029 . -1) (undo-tree-id68030 . -1) (undo-tree-id68031 . -1) (undo-tree-id68032 . -1) (undo-tree-id68033 . -1) (undo-tree-id68034 . -1) (undo-tree-id68035 . -1) (undo-tree-id68036 . -1) (undo-tree-id68037 . -1) (undo-tree-id68038 . -1) (undo-tree-id68039 . -1) (undo-tree-id68040 . -1) (undo-tree-id68041 . -1) (undo-tree-id68042 . -1) (undo-tree-id68043 . -1) (undo-tree-id68044 . -1) (undo-tree-id68045 . -1) (undo-tree-id68046 . -1) (undo-tree-id68047 . -1) (undo-tree-id68048 . -1) (undo-tree-id68049 . -1) (undo-tree-id68050 . -1) (undo-tree-id68051 . -1) (undo-tree-id68052 . -1) (undo-tree-id68053 . -1) (undo-tree-id68054 . -1) (undo-tree-id68055 . -1) (undo-tree-id68056 . -1) (undo-tree-id68057 . -1) (undo-tree-id68058 . -1) (undo-tree-id68059 . -1) (undo-tree-id68060 . -1) (undo-tree-id68061 . -1) (undo-tree-id68062 . -1) (undo-tree-id68063 . -1) (undo-tree-id68064 . -1) (undo-tree-id68065 . -1) (undo-tree-id68066 . -1) (undo-tree-id68067 . -1) (undo-tree-id68068 . -1) (undo-tree-id68069 . -1) (undo-tree-id68070 . -1) (undo-tree-id68071 . -1) (undo-tree-id68072 . -1) (undo-tree-id68073 . -1) (undo-tree-id68074 . -1) (undo-tree-id68075 . -1) (undo-tree-id68076 . -1) (undo-tree-id68077 . -1) (undo-tree-id68078 . -1) (undo-tree-id68079 . -1) (undo-tree-id68080 . -1) (undo-tree-id68081 . -1) (undo-tree-id68082 . -1) (undo-tree-id68083 . -1) (undo-tree-id68084 . -1) (undo-tree-id68085 . -1) 6240) nil (25775 329 533985 441000) 0 nil])
([nil nil ((6317 . 6319) (t 25775 329 604653 588000)) nil (25775 335 537397 924000) 0 nil])
([nil nil ((7332 . 7334) (t 25775 335 612757 566000)) nil (25775 364 413646 138000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7827 . 7828) (nil fontified nil 7639 . 7741) (nil fontified nil 7540 . 7639) (nil fontified nil 7433 . 7540) (nil fontified nil 7334 . 7433) (7334 . 7828)) ((#("Although this transformer architecture was originally designed for language translation, it can be
generalized to other tasks such as English constituency parsing, text generation, and text classification.
Later, we will discuss popular language models, such as BERT and GPT, which were derived from this
original transformer architecture. Figure 16.6, which we adapted from the original transformer paper,
illustrates the main architecture and components we will be discussing in this section:" 0 99 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 99 206 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 206 305 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 305 407 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 407 493 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 493 494 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil rear-nonsticky nil)) . 7334) (undo-tree-id68349 . -494) (undo-tree-id68350 . -494) (undo-tree-id68351 . -494) (undo-tree-id68352 . -493) (undo-tree-id68353 . -494) (undo-tree-id68354 . -494) (undo-tree-id68355 . -494) (undo-tree-id68356 . -494) (undo-tree-id68357 . -494) (undo-tree-id68358 . -494) (undo-tree-id68359 . -494) (undo-tree-id68360 . -494) (undo-tree-id68361 . -494) (undo-tree-id68362 . -494) (undo-tree-id68363 . -494) (undo-tree-id68364 . -494) (undo-tree-id68365 . -494) (undo-tree-id68366 . -494) (undo-tree-id68367 . -494) (undo-tree-id68368 . -494) (undo-tree-id68369 . -494) (undo-tree-id68370 . -494) (undo-tree-id68371 . -494) (undo-tree-id68372 . -494) (undo-tree-id68373 . -494) (undo-tree-id68374 . -494) (undo-tree-id68375 . -494) (undo-tree-id68376 . -494) (undo-tree-id68377 . -494) (undo-tree-id68378 . -494) (undo-tree-id68379 . -494) (undo-tree-id68380 . -494) (undo-tree-id68381 . -494) (undo-tree-id68382 . -494) (undo-tree-id68383 . -494) (undo-tree-id68384 . -494) (undo-tree-id68385 . -494) (undo-tree-id68386 . -494) (undo-tree-id68387 . -494) (undo-tree-id68388 . -494) (undo-tree-id68389 . -494) (undo-tree-id68390 . -494) (undo-tree-id68391 . -494) (undo-tree-id68392 . -494) (undo-tree-id68393 . -494) (undo-tree-id68394 . -494) (undo-tree-id68395 . -494) (undo-tree-id68396 . -494) (undo-tree-id68397 . -494) (undo-tree-id68398 . -494) (undo-tree-id68399 . -494) (undo-tree-id68400 . -494) (undo-tree-id68401 . -494) (undo-tree-id68402 . -494) (undo-tree-id68403 . -494) (undo-tree-id68404 . -494) (undo-tree-id68405 . -494) (undo-tree-id68406 . -494) (undo-tree-id68407 . -494) (undo-tree-id68408 . -494) (undo-tree-id68409 . -494) (undo-tree-id68410 . -494) (undo-tree-id68411 . -494) (undo-tree-id68412 . -494) (undo-tree-id68413 . -494) (undo-tree-id68414 . -494) (undo-tree-id68415 . -494) (undo-tree-id68416 . -494) (undo-tree-id68417 . -494) (undo-tree-id68418 . -494) (undo-tree-id68419 . -494) (undo-tree-id68420 . -494) (undo-tree-id68421 . -494) (undo-tree-id68422 . -494) (undo-tree-id68423 . -494) (undo-tree-id68424 . -494) (undo-tree-id68425 . -494) (undo-tree-id68426 . -494) (undo-tree-id68427 . -494) (undo-tree-id68428 . -494) (undo-tree-id68429 . -494) (undo-tree-id68430 . -494) (undo-tree-id68431 . -494) (undo-tree-id68432 . -494) (undo-tree-id68433 . -494) (undo-tree-id68434 . -494) (undo-tree-id68435 . -494) (undo-tree-id68436 . -494) (undo-tree-id68437 . -494) (undo-tree-id68438 . -494) (undo-tree-id68439 . -494) (undo-tree-id68440 . -494) (undo-tree-id68441 . -494) (undo-tree-id68442 . -494) (undo-tree-id68443 . -494) (undo-tree-id68444 . -494) (undo-tree-id68445 . -494) (undo-tree-id68446 . -494) (undo-tree-id68447 . -494) (undo-tree-id68448 . -494) (undo-tree-id68449 . -494) (undo-tree-id68450 . -494) (undo-tree-id68451 . -494) (undo-tree-id68452 . -494) (undo-tree-id68453 . -494) (undo-tree-id68454 . -494) (undo-tree-id68455 . -494) (undo-tree-id68456 . -494) (undo-tree-id68457 . -494) (undo-tree-id68458 . -494) (undo-tree-id68459 . -494) (undo-tree-id68460 . -494) (undo-tree-id68461 . -494) (undo-tree-id68462 . -494) (undo-tree-id68463 . -494) (undo-tree-id68464 . -494) (undo-tree-id68465 . -494) (undo-tree-id68466 . -494) (undo-tree-id68467 . -494) (undo-tree-id68468 . -494) (undo-tree-id68469 . -494) (undo-tree-id68470 . -494) (undo-tree-id68471 . -494) (undo-tree-id68472 . -494) (undo-tree-id68473 . -494) (undo-tree-id68474 . -494) (undo-tree-id68475 . -494) (undo-tree-id68476 . -494) (undo-tree-id68477 . -494) (undo-tree-id68478 . -494) (undo-tree-id68479 . -494) (undo-tree-id68480 . -494) (undo-tree-id68481 . -494) (undo-tree-id68482 . -494) (undo-tree-id68483 . -494) (undo-tree-id68484 . -494) (undo-tree-id68485 . -494) (undo-tree-id68486 . -494) (undo-tree-id68487 . -494) (undo-tree-id68488 . -494) (undo-tree-id68489 . -494) (undo-tree-id68490 . -494) (undo-tree-id68491 . -494) (undo-tree-id68492 . -494) (undo-tree-id68493 . -494) (undo-tree-id68494 . -494) (undo-tree-id68495 . -494) (undo-tree-id68496 . -494) (undo-tree-id68497 . -494) (undo-tree-id68498 . -494) (undo-tree-id68499 . -494) (undo-tree-id68500 . -494) (undo-tree-id68501 . -494) (undo-tree-id68502 . -494) (undo-tree-id68503 . -494) (undo-tree-id68504 . -494) (undo-tree-id68505 . -494) (undo-tree-id68506 . -494) (undo-tree-id68507 . -494) (undo-tree-id68508 . -494) (undo-tree-id68509 . -494) (undo-tree-id68510 . -494) (undo-tree-id68511 . -494) (undo-tree-id68512 . -494) (undo-tree-id68513 . -494) (undo-tree-id68514 . -494) (undo-tree-id68515 . -494) (undo-tree-id68516 . -494) (undo-tree-id68517 . -494) (undo-tree-id68518 . -494) (undo-tree-id68519 . -494) (undo-tree-id68520 . -494) (undo-tree-id68521 . -494) (undo-tree-id68522 . -494) (undo-tree-id68523 . -494) (undo-tree-id68524 . -494) (undo-tree-id68525 . -494) (undo-tree-id68526 . -494) (undo-tree-id68527 . -494) (undo-tree-id68528 . -494) (undo-tree-id68529 . -494) (undo-tree-id68530 . -494) (undo-tree-id68531 . -494) (undo-tree-id68532 . -494) (undo-tree-id68533 . -494) (undo-tree-id68534 . -494) (undo-tree-id68535 . -494) (undo-tree-id68536 . -494) (undo-tree-id68537 . -494) (undo-tree-id68538 . -494) (undo-tree-id68539 . -494) (undo-tree-id68540 . -494) (undo-tree-id68541 . -494) (undo-tree-id68542 . -494) (undo-tree-id68543 . -494) (undo-tree-id68544 . -494) (undo-tree-id68545 . -494) (undo-tree-id68546 . -494) (undo-tree-id68547 . -494) (undo-tree-id68548 . -494) (undo-tree-id68549 . -494) (undo-tree-id68550 . -494) (undo-tree-id68551 . -494) (undo-tree-id68552 . -494) (undo-tree-id68553 . -494) (undo-tree-id68554 . -494) (undo-tree-id68555 . -494) (undo-tree-id68556 . -494) (undo-tree-id68557 . -494) (undo-tree-id68558 . -494) (undo-tree-id68559 . -494) (undo-tree-id68560 . -494) (undo-tree-id68561 . -494) (undo-tree-id68562 . -494) (undo-tree-id68563 . -494) (undo-tree-id68564 . -494) (undo-tree-id68565 . -494) (undo-tree-id68566 . -494) (undo-tree-id68567 . -494) (undo-tree-id68568 . -494) (undo-tree-id68569 . -494) (undo-tree-id68570 . -494) (undo-tree-id68571 . -494) (undo-tree-id68572 . -494) (undo-tree-id68573 . -494) (undo-tree-id68574 . -494) (undo-tree-id68575 . -494) (undo-tree-id68576 . -494) (undo-tree-id68577 . -494) (undo-tree-id68578 . -494) (undo-tree-id68579 . -494) (undo-tree-id68580 . -494) (undo-tree-id68581 . -494) (undo-tree-id68582 . -494) (undo-tree-id68583 . -494) (undo-tree-id68584 . -493) (undo-tree-id68585 . -493) (undo-tree-id68586 . -493) (undo-tree-id68587 . -493) (undo-tree-id68588 . -493) (undo-tree-id68589 . -493) (undo-tree-id68590 . -493) (undo-tree-id68591 . -493) (undo-tree-id68592 . -493) (undo-tree-id68593 . -493) (undo-tree-id68594 . -493) (undo-tree-id68595 . -493) (undo-tree-id68596 . -493) (undo-tree-id68597 . -493) (undo-tree-id68598 . -493) (undo-tree-id68599 . -493) (undo-tree-id68600 . -493) (undo-tree-id68601 . -493) (undo-tree-id68602 . -493) (undo-tree-id68603 . -493) (undo-tree-id68604 . -493) (undo-tree-id68605 . -493) (undo-tree-id68606 . -493) (undo-tree-id68607 . -493) (undo-tree-id68608 . -493) (undo-tree-id68609 . -493) (undo-tree-id68610 . -493) (undo-tree-id68611 . -493) (nil fontified t 7334 . 7433) (nil fontified t 7433 . 7540) (nil fontified t 7540 . 7639) (nil fontified t 7639 . 7741) (nil rear-nonsticky t 7827 . 7828)) (25775 365 256605 438000) 0 nil])
([nil nil ((7334 . 7336)) nil (25775 415 35120 853000) 0 nil] [nil nil ((nil rear-nonsticky nil 8321 . 8322) (nil fontified nil 8235 . 8322) (nil fontified nil 8133 . 8235) (nil fontified nil 8034 . 8133) (nil fontified nil 7927 . 8034) (nil fontified nil 7828 . 7927) (7828 . 8322) 7827) ((#("Although this transformer architecture was originally designed for language translation, it can be
generalized to other tasks such as English constituency parsing, text generation, and text classification.
Later, we will discuss popular language models, such as BERT and GPT, which were derived from this
original transformer architecture. Figure 16.6, which we adapted from the original transformer paper,
illustrates the main architecture and components we will be discussing in this section:" 0 99 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 99 206 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 206 305 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 305 407 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 407 493 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 493 494 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil rear-nonsticky nil)) . 7828) (undo-tree-id68114 . -494) (undo-tree-id68115 . -494) (undo-tree-id68116 . -494) (undo-tree-id68117 . -493) (undo-tree-id68118 . -494) (undo-tree-id68119 . -494) (undo-tree-id68120 . -494) (undo-tree-id68121 . -494) (undo-tree-id68122 . -494) (undo-tree-id68123 . -494) (undo-tree-id68124 . -494) (undo-tree-id68125 . -494) (undo-tree-id68126 . -494) (undo-tree-id68127 . -494) (undo-tree-id68128 . -494) (undo-tree-id68129 . -494) (undo-tree-id68130 . -494) (undo-tree-id68131 . -494) (undo-tree-id68132 . -494) (undo-tree-id68133 . -494) (undo-tree-id68134 . -494) (undo-tree-id68135 . -494) (undo-tree-id68136 . -494) (undo-tree-id68137 . -407) (undo-tree-id68138 . -493) (undo-tree-id68139 . -493) (undo-tree-id68140 . -493) (undo-tree-id68141 . -493) (undo-tree-id68142 . -493) (undo-tree-id68143 . -493) (undo-tree-id68144 . -493) (undo-tree-id68145 . -493) (undo-tree-id68146 . -493) (undo-tree-id68147 . -493) (undo-tree-id68148 . -493) (undo-tree-id68149 . -493) (undo-tree-id68150 . -493) (undo-tree-id68151 . -493) (undo-tree-id68152 . -493) (undo-tree-id68153 . -493) (undo-tree-id68154 . -493) (undo-tree-id68155 . -493) (undo-tree-id68156 . -493) (undo-tree-id68157 . -493) (undo-tree-id68158 . -493) (undo-tree-id68159 . -493) (undo-tree-id68160 . -493) (undo-tree-id68161 . -493) (undo-tree-id68162 . -493) (undo-tree-id68163 . -493) (undo-tree-id68164 . -493) (undo-tree-id68165 . -493) (undo-tree-id68166 . -493) (undo-tree-id68167 . -493) (undo-tree-id68168 . -493) (undo-tree-id68169 . -493) (undo-tree-id68170 . -493) (undo-tree-id68171 . -493) (undo-tree-id68172 . -493) (undo-tree-id68173 . -493) (undo-tree-id68174 . -493) (undo-tree-id68175 . -493) (undo-tree-id68176 . -493) (undo-tree-id68177 . -493) (undo-tree-id68178 . -493) (undo-tree-id68179 . -493) (undo-tree-id68180 . -493) (undo-tree-id68181 . -493) (undo-tree-id68182 . -493) (undo-tree-id68183 . -493) (undo-tree-id68184 . -493) (undo-tree-id68185 . -493) (undo-tree-id68186 . -493) (undo-tree-id68187 . -493) (undo-tree-id68188 . -493) (undo-tree-id68189 . -493) (undo-tree-id68190 . -493) (undo-tree-id68191 . -493) (undo-tree-id68192 . -493) (undo-tree-id68193 . -493) (undo-tree-id68194 . -493) (undo-tree-id68195 . -493) (undo-tree-id68196 . -493) (undo-tree-id68197 . -493) (undo-tree-id68198 . -493) (undo-tree-id68199 . -493) (undo-tree-id68200 . -493) (undo-tree-id68201 . -493) (undo-tree-id68202 . -493) (undo-tree-id68203 . -493) (undo-tree-id68204 . -493) (undo-tree-id68205 . -493) (undo-tree-id68206 . -493) (undo-tree-id68207 . -493) (undo-tree-id68208 . -493) (undo-tree-id68209 . -493) (undo-tree-id68210 . -493) (undo-tree-id68211 . -493) (undo-tree-id68212 . -493) (undo-tree-id68213 . -493) (undo-tree-id68214 . -493) (undo-tree-id68215 . -493) (undo-tree-id68216 . -493) (undo-tree-id68217 . -493) (undo-tree-id68218 . -493) (undo-tree-id68219 . -493) (undo-tree-id68220 . -493) (undo-tree-id68221 . -493) (undo-tree-id68222 . -493) (undo-tree-id68223 . -493) (undo-tree-id68224 . -493) (undo-tree-id68225 . -493) (undo-tree-id68226 . -493) (undo-tree-id68227 . -493) (undo-tree-id68228 . -493) (undo-tree-id68229 . -493) (undo-tree-id68230 . -493) (undo-tree-id68231 . -493) (undo-tree-id68232 . -493) (undo-tree-id68233 . -493) (undo-tree-id68234 . -493) (undo-tree-id68235 . -493) (undo-tree-id68236 . -493) (undo-tree-id68237 . -493) (undo-tree-id68238 . -493) (undo-tree-id68239 . -493) (undo-tree-id68240 . -493) (undo-tree-id68241 . -493) (undo-tree-id68242 . -493) (undo-tree-id68243 . -493) (undo-tree-id68244 . -493) (undo-tree-id68245 . -493) (undo-tree-id68246 . -493) (undo-tree-id68247 . -493) (undo-tree-id68248 . -493) (undo-tree-id68249 . -493) (undo-tree-id68250 . -493) (undo-tree-id68251 . -493) (undo-tree-id68252 . -493) (undo-tree-id68253 . -493) (undo-tree-id68254 . -493) (undo-tree-id68255 . -493) (undo-tree-id68256 . -493) (undo-tree-id68257 . -493) (undo-tree-id68258 . -493) (undo-tree-id68259 . -493) (undo-tree-id68260 . -493) (undo-tree-id68261 . -493) (undo-tree-id68262 . -493) (undo-tree-id68263 . -493) (undo-tree-id68264 . -493) (undo-tree-id68265 . -493) (undo-tree-id68266 . -493) (undo-tree-id68267 . -493) (undo-tree-id68268 . -493) (undo-tree-id68269 . -493) (undo-tree-id68270 . -493) (undo-tree-id68271 . -493) (undo-tree-id68272 . -493) (undo-tree-id68273 . -493) (undo-tree-id68274 . -493) (undo-tree-id68275 . -493) (undo-tree-id68276 . -493) (undo-tree-id68277 . -493) (undo-tree-id68278 . -493) (undo-tree-id68279 . -493) (undo-tree-id68280 . -493) (undo-tree-id68281 . -493) (undo-tree-id68282 . -493) (undo-tree-id68283 . -493) (undo-tree-id68284 . -493) (undo-tree-id68285 . -493) (undo-tree-id68286 . -493) (undo-tree-id68287 . -493) (undo-tree-id68288 . -493) (undo-tree-id68289 . -493) (undo-tree-id68290 . -493) (undo-tree-id68291 . -493) (undo-tree-id68292 . -493) (undo-tree-id68293 . -493) (undo-tree-id68294 . -493) (undo-tree-id68295 . -493) (undo-tree-id68296 . -493) (undo-tree-id68297 . -493) (undo-tree-id68298 . -493) (undo-tree-id68299 . -493) (undo-tree-id68300 . -493) (undo-tree-id68301 . -493) (undo-tree-id68302 . -493) (undo-tree-id68303 . -493) (undo-tree-id68304 . -493) (undo-tree-id68305 . -493) (undo-tree-id68306 . -493) (undo-tree-id68307 . -493) (undo-tree-id68308 . -493) (undo-tree-id68309 . -493) (undo-tree-id68310 . -493) (undo-tree-id68311 . -493) (undo-tree-id68312 . -493) (undo-tree-id68313 . -493) (undo-tree-id68314 . -493) (undo-tree-id68315 . -493) (undo-tree-id68316 . -493) (undo-tree-id68317 . -493) (undo-tree-id68318 . -493) (undo-tree-id68319 . -493) (undo-tree-id68320 . -493) (undo-tree-id68321 . -493) (undo-tree-id68322 . -493) (undo-tree-id68323 . -493) (undo-tree-id68324 . -493) (undo-tree-id68325 . -493) (undo-tree-id68326 . -493) (undo-tree-id68327 . -493) (undo-tree-id68328 . -493) (undo-tree-id68329 . -493) (undo-tree-id68330 . -493) (undo-tree-id68331 . -493) (undo-tree-id68332 . -493) (undo-tree-id68333 . -493) (undo-tree-id68334 . -493) (undo-tree-id68335 . -493) (undo-tree-id68336 . -493) (undo-tree-id68337 . -493) (undo-tree-id68338 . -493) (undo-tree-id68339 . -493) (undo-tree-id68340 . -493) (undo-tree-id68341 . -493) (undo-tree-id68342 . -493) (undo-tree-id68343 . -493) (undo-tree-id68344 . -493) (undo-tree-id68345 . -493) (undo-tree-id68346 . -493) (undo-tree-id68347 . -493) (undo-tree-id68348 . -493) (nil fontified t 7828 . 7927) (nil fontified t 7927 . 8034) (nil fontified t 8034 . 8133) (nil fontified t 8133 . 8235) (nil rear-nonsticky t 8321 . 8322)) (25775 361 603834 799000) 0 nil])
([nil nil ((7742 . 7743) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -7742) (undo-tree-id68630 . -1) (7640 . 7641) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -7640) (undo-tree-id68631 . -1) (7541 . 7542) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -7541) (undo-tree-id68632 . -1) (7434 . 7435) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -7434) (undo-tree-id68633 . -1) 7335) nil (25775 415 35118 938000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8815 . 8816) (nil fontified nil 8729 . 8816) (nil fontified nil 8627 . 8729) (nil fontified nil 8528 . 8627) (nil fontified nil 8421 . 8528) (nil fontified nil 8322 . 8421) (8322 . 8816) 8321) ((#("Although this transformer architecture was originally designed for language translation, it can be
generalized to other tasks such as English constituency parsing, text generation, and text classification.
Later, we will discuss popular language models, such as BERT and GPT, which were derived from this
original transformer architecture. Figure 16.6, which we adapted from the original transformer paper,
illustrates the main architecture and components we will be discussing in this section:" 0 99 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 99 206 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 206 305 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 305 407 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 407 493 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 493 494 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil rear-nonsticky nil)) . 8322) (undo-tree-id68090 . -494) (undo-tree-id68091 . -494) (undo-tree-id68092 . -494) (undo-tree-id68093 . -26) (undo-tree-id68094 . -493) (undo-tree-id68095 . -494) (undo-tree-id68096 . -493) (undo-tree-id68097 . -493) (undo-tree-id68098 . -493) (undo-tree-id68099 . -493) (undo-tree-id68100 . -493) (undo-tree-id68101 . -493) (undo-tree-id68102 . -493) (undo-tree-id68103 . -493) (undo-tree-id68104 . -493) (undo-tree-id68105 . -493) (undo-tree-id68106 . -493) (undo-tree-id68107 . -493) (undo-tree-id68108 . -493) (undo-tree-id68109 . -493) (undo-tree-id68110 . -493) (undo-tree-id68111 . -493) (undo-tree-id68112 . -493) (undo-tree-id68113 . -493) (nil fontified t 8322 . 8421) (nil fontified t 8421 . 8528) (nil fontified t 8528 . 8627) (nil fontified t 8627 . 8729) (nil rear-nonsticky t 8815 . 8816)) (25775 361 197185 184000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8259 . 8260) (nil fontified nil 8228 . 8260) (nil fontified nil 8127 . 8228) (nil fontified nil 8031 . 8127) (nil fontified nil 7931 . 8031) (nil fontified nil 7831 . 7931) (7831 . 8260)) nil (25775 415 35112 102000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9309 . 9310) (nil fontified nil 9223 . 9310) (nil fontified nil 9121 . 9223) (nil fontified nil 9022 . 9121) (nil fontified nil 8915 . 9022) (nil fontified nil 8816 . 8915) (8816 . 9310) 8815) ((#("Although this transformer architecture was originally designed for language translation, it can be
generalized to other tasks such as English constituency parsing, text generation, and text classification.
Later, we will discuss popular language models, such as BERT and GPT, which were derived from this
original transformer architecture. Figure 16.6, which we adapted from the original transformer paper,
illustrates the main architecture and components we will be discussing in this section:" 0 99 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 99 206 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 206 305 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 305 407 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 407 493 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil) 493 494 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil rear-nonsticky nil)) . 8816) (undo-tree-id68086 . -493) (undo-tree-id68087 . -493) (undo-tree-id68088 . -493) (undo-tree-id68089 . -493) (nil fontified t 8816 . 8915) (nil fontified t 8915 . 9022) (nil fontified t 9022 . 9121) (nil fontified t 9121 . 9223) (nil rear-nonsticky t 9309 . 9310)) (25775 361 196622 147000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7831) (undo-tree-id68620 . -2) (undo-tree-id68621 . -2) (undo-tree-id68622 . -2) (undo-tree-id68623 . -2) (undo-tree-id68624 . -2) (undo-tree-id68625 . -2) (undo-tree-id68626 . -2) (undo-tree-id68627 . -2) (undo-tree-id68628 . -2) (undo-tree-id68629 . -2) 7833 (7830 . 7833) 7829) nil (25775 415 35106 275000) 0 nil])
nil
([nil nil ((8228 . 8229) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8228) (undo-tree-id68616 . -1) (8127 . 8128) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8127) (undo-tree-id68617 . -1) (8031 . 8032) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8031) (undo-tree-id68618 . -1) (7931 . 7932) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7931) (undo-tree-id68619 . -1) 7832) nil (25775 415 33212 129000) 0 nil])
([nil nil ((#("Interestingly" 0 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6319) (undo-tree-id68614 . -12) (undo-tree-id68615 . -13)) nil (25775 415 33206 205000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6319) (undo-tree-id68612 . -1) (undo-tree-id68613 . -2)) nil (25775 415 33203 345000) 0 nil])
([nil nil ((6319 . 6320) (#("t" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6319)) nil (25775 415 33194 118000) 0 nil])
([nil nil ((8246 . 8247)) nil (25775 426 795850 24000) 0 nil])
([nil nil ((6317 . 7322) (#("- 
 Originally, the intention behind using an attention mechanism was to improve the text generation capabilities of RNNs when working with long sentences. However, only a few years after ex- perimenting with attention mechanisms for RNNs, researchers found that an attention-based language model was even more powerful when the recurrent layers were deleted. This led to the development of the transformer architecture, which is the main topic of this chapter and the remaining sections. The transformer architecture was first proposed in the NeurIPS 2017 paper Attention Is All You Need by A. Vaswani and colleagues (https://arxiv.org/abs/1706.03762). Thanks to the self-attention mechanism, a transformer model can capture long-range dependencies among the elements in an input sequence—in an NLP context; for example, this helps the model better “understand” the mean- ing of an input sentence.

- The original transformer architecture is based on an attention mechanism that was first used in an RNN." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 89 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 89 90 (wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 90 191 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 191 192 (wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 192 290 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 290 291 (wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 291 308 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 308 360 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 360 383 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 383 384 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 384 387 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 387 388 (wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 388 396 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 396 398 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 398 473 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 473 488 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 488 489 (wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 489 588 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 588 589 (wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 589 619 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 619 650 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://arxiv.org/abs/1706.03762") help-echo "LINK: https://arxiv.org/abs/1706.03762" fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 650 651 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://arxiv.org/abs/1706.03762") help-echo "LINK: https://arxiv.org/abs/1706.03762" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 651 682 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 682 683 (wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 683 774 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 774 775 (wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 775 872 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 872 873 (wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 873 897 (fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 897 898 (rear-nonsticky t fontified nil wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 898 899 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent))) 899 900 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 900 901 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 901 902 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 902 975 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 975 989 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 989 990 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 990 1005 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 6317) (undo-tree-id68681 . -902) (undo-tree-id68682 . -902) (undo-tree-id68683 . 102) (undo-tree-id68684 . -902) (undo-tree-id68685 . -902) (undo-tree-id68686 . -1005) (undo-tree-id68687 . -1005) (undo-tree-id68688 . -902) (undo-tree-id68689 . -1005) (undo-tree-id68690 . -1005) (undo-tree-id68691 . -1005) (undo-tree-id68692 . -1005) (undo-tree-id68693 . -1005) (undo-tree-id68694 . -1005) (undo-tree-id68695 . -1005) (undo-tree-id68696 . -1005) (undo-tree-id68697 . -1005) (undo-tree-id68698 . -1005) (undo-tree-id68699 . -1005) (undo-tree-id68700 . -1005) (undo-tree-id68701 . -1005) (undo-tree-id68702 . -1005) (undo-tree-id68703 . -1005) (undo-tree-id68704 . -1005) (undo-tree-id68705 . -1005) (undo-tree-id68706 . -975) (undo-tree-id68707 . -975) (undo-tree-id68708 . -975) (undo-tree-id68709 . -975) (undo-tree-id68710 . -975) (undo-tree-id68711 . -975) (undo-tree-id68712 . -975) (undo-tree-id68713 . -975) (undo-tree-id68714 . -975) (undo-tree-id68715 . -975) (undo-tree-id68716 . -975) (undo-tree-id68717 . -975) (undo-tree-id68718 . -975) (undo-tree-id68719 . -975) (undo-tree-id68720 . -975) (undo-tree-id68721 . -975) (undo-tree-id68722 . -975) (undo-tree-id68723 . -975) (undo-tree-id68724 . -975) (undo-tree-id68725 . -975) (undo-tree-id68726 . -975) (undo-tree-id68727 . -975) (undo-tree-id68728 . -975) (undo-tree-id68729 . -975) (undo-tree-id68730 . -975) (undo-tree-id68731 . -975) (undo-tree-id68732 . -975) (undo-tree-id68733 . -975) (undo-tree-id68734 . -975) (undo-tree-id68735 . -975) (undo-tree-id68736 . -975) (undo-tree-id68737 . -975) (undo-tree-id68738 . -975) (undo-tree-id68739 . -975) (undo-tree-id68740 . -975) (undo-tree-id68741 . -975) (undo-tree-id68742 . -975) (undo-tree-id68743 . -975) (undo-tree-id68744 . -975) (undo-tree-id68745 . -978) (undo-tree-id68746 . -978) (undo-tree-id68747 . -978) (undo-tree-id68748 . -978) (undo-tree-id68749 . -978) (undo-tree-id68750 . -978) (undo-tree-id68751 . -978) (undo-tree-id68752 . -978) (undo-tree-id68753 . -978) (undo-tree-id68754 . -978) (undo-tree-id68755 . -978) (undo-tree-id68756 . -978) (undo-tree-id68757 . -978) (undo-tree-id68758 . -978) (undo-tree-id68759 . -978) (undo-tree-id68760 . -978) (undo-tree-id68761 . -982) (undo-tree-id68762 . -982) (undo-tree-id68763 . -982) (undo-tree-id68764 . -982) (undo-tree-id68765 . -982) (undo-tree-id68766 . -982) (undo-tree-id68767 . -982) (undo-tree-id68768 . -982) (undo-tree-id68769 . -982) (undo-tree-id68770 . -982) (undo-tree-id68771 . -982) (undo-tree-id68772 . -982) (undo-tree-id68773 . -982) (undo-tree-id68774 . -982) (undo-tree-id68775 . -982) (undo-tree-id68776 . -982) (undo-tree-id68777 . -988) (undo-tree-id68778 . -988) (undo-tree-id68779 . -988) (undo-tree-id68780 . -988) (undo-tree-id68781 . -988) (undo-tree-id68782 . -988) (undo-tree-id68783 . -988) (undo-tree-id68784 . -988) (undo-tree-id68785 . -988) (undo-tree-id68786 . -988) (undo-tree-id68787 . -988) (undo-tree-id68788 . -988) (undo-tree-id68789 . -988) (undo-tree-id68790 . -988) (undo-tree-id68791 . -988) (undo-tree-id68792 . -988) (undo-tree-id68793 . -988) (undo-tree-id68794 . -988) (undo-tree-id68795 . -993) (undo-tree-id68796 . -993) (undo-tree-id68797 . -993) (undo-tree-id68798 . -993) (undo-tree-id68799 . -993) (undo-tree-id68800 . -993) (undo-tree-id68801 . -993) (undo-tree-id68802 . -993) (undo-tree-id68803 . -993) (undo-tree-id68804 . -993) (undo-tree-id68805 . -993) (undo-tree-id68806 . -993) (undo-tree-id68807 . -993) (undo-tree-id68808 . -993) (undo-tree-id68809 . -993) (undo-tree-id68810 . -993) (undo-tree-id68811 . -996) (undo-tree-id68812 . -996) (undo-tree-id68813 . -996) (undo-tree-id68814 . -996) (undo-tree-id68815 . -996) (undo-tree-id68816 . -996) (undo-tree-id68817 . -996) (undo-tree-id68818 . -996) (undo-tree-id68819 . -996) (undo-tree-id68820 . -996) (undo-tree-id68821 . -996) (undo-tree-id68822 . -996) (undo-tree-id68823 . -996) (undo-tree-id68824 . -996) (undo-tree-id68825 . -996) (undo-tree-id68826 . -996) (undo-tree-id68827 . -996) (undo-tree-id68828 . -996) (undo-tree-id68829 . -996) (undo-tree-id68830 . -996) (undo-tree-id68831 . -996) (undo-tree-id68832 . -999) (undo-tree-id68833 . -999) (undo-tree-id68834 . -999) (undo-tree-id68835 . -999) (undo-tree-id68836 . -999) (undo-tree-id68837 . -999) (undo-tree-id68838 . -999) (undo-tree-id68839 . -999) (undo-tree-id68840 . -999) (undo-tree-id68841 . -999) (undo-tree-id68842 . -999) (undo-tree-id68843 . -999) (undo-tree-id68844 . -999) (undo-tree-id68845 . -999) (undo-tree-id68846 . -999) (undo-tree-id68847 . -999) (undo-tree-id68848 . 4) (undo-tree-id68849 . -1004) (undo-tree-id68850 . -1003) (undo-tree-id68851 . -1003) (undo-tree-id68852 . -1003) (undo-tree-id68853 . -1003) (undo-tree-id68854 . -1003) (undo-tree-id68855 . -1003) (undo-tree-id68856 . -1003) (undo-tree-id68857 . -1003) (undo-tree-id68858 . -1003) (undo-tree-id68859 . -1003) (undo-tree-id68860 . -1003) (undo-tree-id68861 . -1003) (undo-tree-id68862 . -1003) (undo-tree-id68863 . -1003) (undo-tree-id68864 . -1003) (undo-tree-id68865 . -1003) (undo-tree-id68866 . -1004) (undo-tree-id68867 . -1004) (undo-tree-id68868 . -1004) (undo-tree-id68869 . -1004) (undo-tree-id68870 . -1004) (undo-tree-id68871 . -1004) (undo-tree-id68872 . -1004) (undo-tree-id68873 . -1004) (undo-tree-id68874 . -1004) (undo-tree-id68875 . -1004) (undo-tree-id68876 . -1004) (undo-tree-id68877 . -1004) (undo-tree-id68878 . -1004) (undo-tree-id68879 . -1004) (undo-tree-id68880 . -1004) (undo-tree-id68881 . -1004) (undo-tree-id68882 . -1005) (undo-tree-id68883 . -1005) (undo-tree-id68884 . -1005) (undo-tree-id68885 . -1005) (undo-tree-id68886 . -1005) (undo-tree-id68887 . -1005) (undo-tree-id68888 . -1005) (undo-tree-id68889 . -1005) (undo-tree-id68890 . -1005) (undo-tree-id68891 . -1005) (undo-tree-id68892 . -1005) (undo-tree-id68893 . -1005) (undo-tree-id68894 . -1005) (undo-tree-id68895 . -1005) (undo-tree-id68896 . -1005) (undo-tree-id68897 . -1005) (undo-tree-id68898 . -1005) (undo-tree-id68899 . -1005) (undo-tree-id68900 . -1005) (undo-tree-id68901 . -1005) (undo-tree-id68902 . -1005) (undo-tree-id68903 . -1005) (undo-tree-id68904 . -1005) (undo-tree-id68905 . -1005) (undo-tree-id68906 . -1005) (undo-tree-id68907 . -1005) (undo-tree-id68908 . -1005) (undo-tree-id68909 . -1005) (undo-tree-id68910 . -1005) (undo-tree-id68911 . -1005) (undo-tree-id68912 . -1005) (undo-tree-id68913 . -1005) (undo-tree-id68914 . -1005) (undo-tree-id68915 . -1005) (undo-tree-id68916 . -1005) (undo-tree-id68917 . -1005) (undo-tree-id68918 . -1005) (undo-tree-id68919 . -1005) (undo-tree-id68920 . -1005) (undo-tree-id68921 . -1005) (undo-tree-id68922 . -1005) (undo-tree-id68923 . -1005) (undo-tree-id68924 . -1005) (undo-tree-id68925 . -1005) (undo-tree-id68926 . -1005) (undo-tree-id68927 . -1005) (undo-tree-id68928 . -1005) (undo-tree-id68929 . -1005) (undo-tree-id68930 . -1005) (undo-tree-id68931 . -1005) (undo-tree-id68932 . -1005) (undo-tree-id68933 . -1005) (undo-tree-id68934 . -1005) (undo-tree-id68935 . -1005) (undo-tree-id68936 . -1005) (undo-tree-id68937 . -1005) (undo-tree-id68938 . -1005) (undo-tree-id68939 . -1005) (undo-tree-id68940 . -1005) (undo-tree-id68941 . -1005) (undo-tree-id68942 . -1005) (undo-tree-id68943 . -1005) (undo-tree-id68944 . -1005) (undo-tree-id68945 . -1005) (undo-tree-id68946 . -1005) (undo-tree-id68947 . -1005) (undo-tree-id68948 . -900) (6317 . 7217) (#("
 Originally, the intention behind using an attention mechanism was to improve the text generation capabilities of RNNs when working with long sentences. However, only a few years after ex- perimenting with attention mechanisms for RNNs, researchers found that an attention-based language model was even more powerful when the recurrent layers were deleted. This led to the development of the transformer architecture, which is the main topic of this chapter and the remaining sections. The transformer architecture was first proposed in the NeurIPS 2017 paper Attention Is All You Need by A. Vaswani and colleagues (https://arxiv.org/abs/1706.03762). Thanks to the self-attention mechanism, a transformer model can capture long-range dependencies among the elements in an input sequence—in an NLP context; for example, this helps the model better “understand” the mean- ing of an input sentence." 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 87 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 87 88 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent))) 88 189 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 189 190 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent))) 190 288 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 288 289 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent))) 289 306 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 306 358 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 358 381 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 381 382 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 382 385 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 385 386 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent))) 386 394 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 394 396 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 396 471 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 471 486 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 486 487 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent))) 487 586 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 586 587 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent))) 587 617 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 617 648 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t help-echo "LINK: https://arxiv.org/abs/1706.03762" htmlize-link (:uri "https://arxiv.org/abs/1706.03762") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 648 649 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://arxiv.org/abs/1706.03762" htmlize-link (:uri "https://arxiv.org/abs/1706.03762") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 649 680 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 680 681 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent))) 681 772 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 772 773 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent))) 773 870 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 870 871 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent))) 871 895 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t) 895 896 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) fontified t rear-nonsticky t)) . 6422) (undo-tree-id68949 . -895) (undo-tree-id68950 . -896) (undo-tree-id68951 . -1) (undo-tree-id68952 . -896) (undo-tree-id68953 . -896) (undo-tree-id68954 . -896) (undo-tree-id68955 . -896) (undo-tree-id68956 . -896) (undo-tree-id68957 . -896) (undo-tree-id68958 . -896) (undo-tree-id68959 . -896) (undo-tree-id68960 . -896) (undo-tree-id68961 . -896) (undo-tree-id68962 . -896) (undo-tree-id68963 . -896) (undo-tree-id68964 . -896) (undo-tree-id68965 . -896) (undo-tree-id68966 . -896) (undo-tree-id68967 . -896) (undo-tree-id68968 . -1) (undo-tree-id68969 . -1) (undo-tree-id68970 . -1) (undo-tree-id68971 . -1) (undo-tree-id68972 . -1) (undo-tree-id68973 . -1) (undo-tree-id68974 . -1) (undo-tree-id68975 . -1) (undo-tree-id68976 . -1) (undo-tree-id68977 . -1) (undo-tree-id68978 . -1) (undo-tree-id68979 . -1) (undo-tree-id68980 . -1) (undo-tree-id68981 . -1) (undo-tree-id68982 . -1) (undo-tree-id68983 . -1) (undo-tree-id68984 . -1) (undo-tree-id68985 . -1) (undo-tree-id68986 . -1) (undo-tree-id68987 . -1) (undo-tree-id68988 . -1) (undo-tree-id68989 . -1) (undo-tree-id68990 . -1) (undo-tree-id68991 . -1) (undo-tree-id68992 . -1) (undo-tree-id68993 . -1) (undo-tree-id68994 . -1) (undo-tree-id68995 . -1) (undo-tree-id68996 . -1) (undo-tree-id68997 . -1) (undo-tree-id68998 . -1) (undo-tree-id68999 . -1) (undo-tree-id69000 . -1) (undo-tree-id69001 . -1) (undo-tree-id69002 . -1) (undo-tree-id69003 . -1) (undo-tree-id69004 . -1) (undo-tree-id69005 . -1) 6423 (6422 . 6423) (t 25775 415 110126 689000)) nil (25775 435 796481 775000) 0 nil] [nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7318) (undo-tree-id68634 . -2) (undo-tree-id68635 . -2) (undo-tree-id68636 . -2) (undo-tree-id68637 . -2) (undo-tree-id68638 . -2) (undo-tree-id68639 . -2) (undo-tree-id68640 . -2) (undo-tree-id68641 . -2) (undo-tree-id68642 . -2) (undo-tree-id68643 . -2) (undo-tree-id68644 . -2) (undo-tree-id68645 . -2) (undo-tree-id68646 . -2) (undo-tree-id68647 . -2) (undo-tree-id68648 . -2) (undo-tree-id68649 . -2) (undo-tree-id68650 . -2) 7320 (7317 . 7320) (t 25775 415 110126 689000) 6392) ((#("
  " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 7317) (undo-tree-id68651 . -3) (undo-tree-id68652 . -3) (undo-tree-id68653 . -3) (undo-tree-id68654 . -3) (undo-tree-id68655 . -3) (undo-tree-id68656 . -3) (undo-tree-id68657 . -3) (undo-tree-id68658 . -3) (undo-tree-id68659 . -3) (undo-tree-id68660 . -3) (undo-tree-id68661 . -3) (undo-tree-id68662 . -3) (undo-tree-id68663 . -3) (undo-tree-id68664 . -3) (undo-tree-id68665 . -3) (undo-tree-id68666 . -3) (undo-tree-id68667 . -1) (undo-tree-id68668 . -1) (7318 . 7320)) (25775 426 795298 447000) 0 nil])
([nil nil ((6425 . 6426) (#("  " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 6425) (undo-tree-id68669 . 1) (undo-tree-id68670 . -1) (undo-tree-id68671 . -1) (undo-tree-id68672 . -1) (undo-tree-id68673 . -1) (undo-tree-id68674 . -1) (undo-tree-id68675 . -1) (undo-tree-id68676 . -1) (undo-tree-id68677 . -1) (undo-tree-id68678 . -1) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -6426) (undo-tree-id68679 . 1) (undo-tree-id68680 . -1) 6425) nil (25775 435 795878 775000) 0 nil])
nil
([nil nil ((#("Originally" 0 10 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6426) (undo-tree-id69011 . 10) (undo-tree-id69012 . -9) (undo-tree-id69013 . -10) (t 25775 435 870482 317000)) nil (25775 446 414505 181000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6426) (undo-tree-id69008 . 2) (undo-tree-id69009 . -1) (undo-tree-id69010 . -2)) nil (25775 446 414501 813000) 0 nil])
([nil nil ((6426 . 6427) (#("t" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6426)) nil (25775 446 414497 839000) 0 nil])
([nil nil ((6426 . 6427) (#("T" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6426)) nil (25775 446 997499 903000) 0 nil])
([nil nil ((6424 . 7311) (#("- However, only a few years after ex- perimenting with attention mechanisms for RNNs, researchers found that an attention-based language model was even more powerful when the recurrent layers were deleted. This led to the development of the transformer architecture, which is the main topic of this chapter and the remaining sections. The transformer architecture was first proposed in the NeurIPS 2017 paper Attention Is All You Need by A. Vaswani and colleagues (https://arxiv.org/abs/1706.03762). Thanks to the self-attention mechanism, a transformer model can capture long-range dependencies among the elements in an input sequence—in an NLP context; for example, this helps the model better “understand” the mean- ing of an input sentence.

- The intention behind using an attention mechanism was to improve the text generation capabilities of RNNs when working with long sentences." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 37 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 37 38 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 38 136 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 136 137 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 137 154 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 154 206 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 206 229 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 229 230 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 230 233 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 233 234 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 234 239 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 239 242 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 242 244 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 244 319 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 319 334 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 334 335 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 335 348 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 348 358 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 358 360 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 360 434 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 434 435 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 435 465 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 465 496 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://arxiv.org/abs/1706.03762") help-echo "LINK: https://arxiv.org/abs/1706.03762" fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 496 497 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://arxiv.org/abs/1706.03762") help-echo "LINK: https://arxiv.org/abs/1706.03762" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 497 528 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 528 529 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 529 620 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 620 621 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 621 718 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 718 719 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 719 743 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 743 744 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 744 745 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 745 746 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 746 747 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 747 748 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 748 749 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 749 821 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 821 822 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 822 887 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 6424) (undo-tree-id69768 . 139) (undo-tree-id69769 . -748) (undo-tree-id69770 . -748) (undo-tree-id69771 . 138) (undo-tree-id69772 . -748) (undo-tree-id69773 . -748) (undo-tree-id69774 . -748) (undo-tree-id69775 . -887) (undo-tree-id69776 . -748) (undo-tree-id69777 . -748) (undo-tree-id69778 . -748) (undo-tree-id69779 . -748) (undo-tree-id69780 . -748) (undo-tree-id69781 . -748) (undo-tree-id69782 . -748) (undo-tree-id69783 . -748) (undo-tree-id69784 . -748) (undo-tree-id69785 . -748) (undo-tree-id69786 . -748) (undo-tree-id69787 . -748) (undo-tree-id69788 . -748) (undo-tree-id69789 . -748) (undo-tree-id69790 . -748) (undo-tree-id69791 . -748) (undo-tree-id69792 . -748) (undo-tree-id69793 . -748) (undo-tree-id69794 . -748) (undo-tree-id69795 . -748) (undo-tree-id69796 . -748) (undo-tree-id69797 . -748) (undo-tree-id69798 . -748) (undo-tree-id69799 . -748) (undo-tree-id69800 . -748) (undo-tree-id69801 . -748) (undo-tree-id69802 . -748) (undo-tree-id69803 . -748) (undo-tree-id69804 . -748) (undo-tree-id69805 . -748) (undo-tree-id69806 . -748) (undo-tree-id69807 . -748) (undo-tree-id69808 . -748) (undo-tree-id69809 . -748) (undo-tree-id69810 . -748) (undo-tree-id69811 . -748) (undo-tree-id69812 . -748) (undo-tree-id69813 . -748) (undo-tree-id69814 . -748) (undo-tree-id69815 . -748) (undo-tree-id69816 . -748) (undo-tree-id69817 . -748) (undo-tree-id69818 . -748) (undo-tree-id69819 . -748) (undo-tree-id69820 . -748) (undo-tree-id69821 . -748) (undo-tree-id69822 . -748) (undo-tree-id69823 . -748) (undo-tree-id69824 . -748) (undo-tree-id69825 . -748) (undo-tree-id69826 . -748) (undo-tree-id69827 . -748) (undo-tree-id69828 . -748) (undo-tree-id69829 . -748) (undo-tree-id69830 . -748) (undo-tree-id69831 . -748) (undo-tree-id69832 . -748) (undo-tree-id69833 . -748) (undo-tree-id69834 . -748) (undo-tree-id69835 . -748) (undo-tree-id69836 . -748) (undo-tree-id69837 . -748) (undo-tree-id69838 . -748) (undo-tree-id69839 . -748) (undo-tree-id69840 . -748) (undo-tree-id69841 . -748) (undo-tree-id69842 . -750) (undo-tree-id69843 . -750) (undo-tree-id69844 . -750) (undo-tree-id69845 . -750) (undo-tree-id69846 . -750) (undo-tree-id69847 . -750) (undo-tree-id69848 . -750) (undo-tree-id69849 . -750) (undo-tree-id69850 . -750) (undo-tree-id69851 . -750) (undo-tree-id69852 . -750) (undo-tree-id69853 . -750) (undo-tree-id69854 . -750) (undo-tree-id69855 . -750) (undo-tree-id69856 . -750) (undo-tree-id69857 . -750) (undo-tree-id69858 . -760) (undo-tree-id69859 . -760) (undo-tree-id69860 . -760) (undo-tree-id69861 . -760) (undo-tree-id69862 . -760) (undo-tree-id69863 . -760) (undo-tree-id69864 . -760) (undo-tree-id69865 . -760) (undo-tree-id69866 . -760) (undo-tree-id69867 . -760) (undo-tree-id69868 . -760) (undo-tree-id69869 . -760) (undo-tree-id69870 . -760) (undo-tree-id69871 . -760) (undo-tree-id69872 . -760) (undo-tree-id69873 . -760) (undo-tree-id69874 . -767) (undo-tree-id69875 . -767) (undo-tree-id69876 . -767) (undo-tree-id69877 . -767) (undo-tree-id69878 . -767) (undo-tree-id69879 . -767) (undo-tree-id69880 . -767) (undo-tree-id69881 . -767) (undo-tree-id69882 . -767) (undo-tree-id69883 . -767) (undo-tree-id69884 . -767) (undo-tree-id69885 . -767) (undo-tree-id69886 . -767) (undo-tree-id69887 . -767) (undo-tree-id69888 . -767) (undo-tree-id69889 . -767) (undo-tree-id69890 . -767) (undo-tree-id69891 . -767) (undo-tree-id69892 . -767) (undo-tree-id69893 . -767) (undo-tree-id69894 . -767) (undo-tree-id69895 . -773) (undo-tree-id69896 . -773) (undo-tree-id69897 . -773) (undo-tree-id69898 . -773) (undo-tree-id69899 . -773) (undo-tree-id69900 . -773) (undo-tree-id69901 . -773) (undo-tree-id69902 . -773) (undo-tree-id69903 . -773) (undo-tree-id69904 . -773) (undo-tree-id69905 . -773) (undo-tree-id69906 . -773) (undo-tree-id69907 . -773) (undo-tree-id69908 . -773) (undo-tree-id69909 . -773) (undo-tree-id69910 . -773) (undo-tree-id69911 . -776) (undo-tree-id69912 . -776) (undo-tree-id69913 . -776) (undo-tree-id69914 . -776) (undo-tree-id69915 . -776) (undo-tree-id69916 . -776) (undo-tree-id69917 . -776) (undo-tree-id69918 . -776) (undo-tree-id69919 . -776) (undo-tree-id69920 . -776) (undo-tree-id69921 . -776) (undo-tree-id69922 . -776) (undo-tree-id69923 . -776) (undo-tree-id69924 . -776) (undo-tree-id69925 . -776) (undo-tree-id69926 . -776) (undo-tree-id69927 . -786) (undo-tree-id69928 . -786) (undo-tree-id69929 . -786) (undo-tree-id69930 . -786) (undo-tree-id69931 . -786) (undo-tree-id69932 . -786) (undo-tree-id69933 . -786) (undo-tree-id69934 . -786) (undo-tree-id69935 . -786) (undo-tree-id69936 . -786) (undo-tree-id69937 . -786) (undo-tree-id69938 . -786) (undo-tree-id69939 . -786) (undo-tree-id69940 . -786) (undo-tree-id69941 . -786) (undo-tree-id69942 . -786) (undo-tree-id69943 . -796) (undo-tree-id69944 . -796) (undo-tree-id69945 . -796) (undo-tree-id69946 . -796) (undo-tree-id69947 . -796) (undo-tree-id69948 . -796) (undo-tree-id69949 . -796) (undo-tree-id69950 . -796) (undo-tree-id69951 . -796) (undo-tree-id69952 . -796) (undo-tree-id69953 . -796) (undo-tree-id69954 . -796) (undo-tree-id69955 . -796) (undo-tree-id69956 . -796) (undo-tree-id69957 . -796) (undo-tree-id69958 . -796) (undo-tree-id69959 . -796) (undo-tree-id69960 . -796) (undo-tree-id69961 . -796) (undo-tree-id69962 . -796) (undo-tree-id69963 . -796) (undo-tree-id69964 . -800) (undo-tree-id69965 . -800) (undo-tree-id69966 . -800) (undo-tree-id69967 . -800) (undo-tree-id69968 . -800) (undo-tree-id69969 . -800) (undo-tree-id69970 . -800) (undo-tree-id69971 . -800) (undo-tree-id69972 . -800) (undo-tree-id69973 . -800) (undo-tree-id69974 . -800) (undo-tree-id69975 . -800) (undo-tree-id69976 . -800) (undo-tree-id69977 . -800) (undo-tree-id69978 . -800) (undo-tree-id69979 . -800) (undo-tree-id69980 . -803) (undo-tree-id69981 . -803) (undo-tree-id69982 . -803) (undo-tree-id69983 . -803) (undo-tree-id69984 . -803) (undo-tree-id69985 . -803) (undo-tree-id69986 . -803) (undo-tree-id69987 . -803) (undo-tree-id69988 . -803) (undo-tree-id69989 . -803) (undo-tree-id69990 . -803) (undo-tree-id69991 . -803) (undo-tree-id69992 . -803) (undo-tree-id69993 . -803) (undo-tree-id69994 . -803) (undo-tree-id69995 . -803) (undo-tree-id69996 . -811) (undo-tree-id69997 . -811) (undo-tree-id69998 . -811) (undo-tree-id69999 . -811) (undo-tree-id70000 . -811) (undo-tree-id70001 . -811) (undo-tree-id70002 . -811) (undo-tree-id70003 . -811) (undo-tree-id70004 . -811) (undo-tree-id70005 . -811) (undo-tree-id70006 . -811) (undo-tree-id70007 . -811) (undo-tree-id70008 . -811) (undo-tree-id70009 . -811) (undo-tree-id70010 . -811) (undo-tree-id70011 . -811) (undo-tree-id70012 . -815) (undo-tree-id70013 . -815) (undo-tree-id70014 . -815) (undo-tree-id70015 . -815) (undo-tree-id70016 . -815) (undo-tree-id70017 . -815) (undo-tree-id70018 . -815) (undo-tree-id70019 . -815) (undo-tree-id70020 . -815) (undo-tree-id70021 . -815) (undo-tree-id70022 . -815) (undo-tree-id70023 . -815) (undo-tree-id70024 . -815) (undo-tree-id70025 . -815) (undo-tree-id70026 . -815) (undo-tree-id70027 . -815) (undo-tree-id70028 . -820) (undo-tree-id70029 . -820) (undo-tree-id70030 . -820) (undo-tree-id70031 . -820) (undo-tree-id70032 . -820) (undo-tree-id70033 . -820) (undo-tree-id70034 . -820) (undo-tree-id70035 . -820) (undo-tree-id70036 . -820) (undo-tree-id70037 . -820) (undo-tree-id70038 . -820) (undo-tree-id70039 . -820) (undo-tree-id70040 . -820) (undo-tree-id70041 . -820) (undo-tree-id70042 . -820) (undo-tree-id70043 . -820) (undo-tree-id70044 . -831) (undo-tree-id70045 . -831) (undo-tree-id70046 . -831) (undo-tree-id70047 . -831) (undo-tree-id70048 . -831) (undo-tree-id70049 . -831) (undo-tree-id70050 . -831) (undo-tree-id70051 . -831) (undo-tree-id70052 . -831) (undo-tree-id70053 . -831) (undo-tree-id70054 . -831) (undo-tree-id70055 . -831) (undo-tree-id70056 . -831) (undo-tree-id70057 . -831) (undo-tree-id70058 . -831) (undo-tree-id70059 . -831) (undo-tree-id70060 . -844) (undo-tree-id70061 . -844) (undo-tree-id70062 . -844) (undo-tree-id70063 . -844) (undo-tree-id70064 . -844) (undo-tree-id70065 . -844) (undo-tree-id70066 . -844) (undo-tree-id70067 . -844) (undo-tree-id70068 . -844) (undo-tree-id70069 . -844) (undo-tree-id70070 . -844) (undo-tree-id70071 . -844) (undo-tree-id70072 . -844) (undo-tree-id70073 . -844) (undo-tree-id70074 . -844) (undo-tree-id70075 . -844) (undo-tree-id70076 . -847) (undo-tree-id70077 . -847) (undo-tree-id70078 . -847) (undo-tree-id70079 . -847) (undo-tree-id70080 . -847) (undo-tree-id70081 . -847) (undo-tree-id70082 . -847) (undo-tree-id70083 . -847) (undo-tree-id70084 . -847) (undo-tree-id70085 . -847) (undo-tree-id70086 . -847) (undo-tree-id70087 . -847) (undo-tree-id70088 . -847) (undo-tree-id70089 . -847) (undo-tree-id70090 . -847) (undo-tree-id70091 . -847) (undo-tree-id70092 . 38) (undo-tree-id70093 . -853) (undo-tree-id70094 . -852) (undo-tree-id70095 . -852) (undo-tree-id70096 . -852) (undo-tree-id70097 . -852) (undo-tree-id70098 . -852) (undo-tree-id70099 . -852) (undo-tree-id70100 . -852) (undo-tree-id70101 . -852) (undo-tree-id70102 . -852) (undo-tree-id70103 . -852) (undo-tree-id70104 . -852) (undo-tree-id70105 . -852) (undo-tree-id70106 . -852) (undo-tree-id70107 . -852) (undo-tree-id70108 . -852) (undo-tree-id70109 . -852) (undo-tree-id70110 . -857) (undo-tree-id70111 . -857) (undo-tree-id70112 . -857) (undo-tree-id70113 . -857) (undo-tree-id70114 . -857) (undo-tree-id70115 . -857) (undo-tree-id70116 . -857) (undo-tree-id70117 . -857) (undo-tree-id70118 . -857) (undo-tree-id70119 . -857) (undo-tree-id70120 . -857) (undo-tree-id70121 . -857) (undo-tree-id70122 . -857) (undo-tree-id70123 . -857) (undo-tree-id70124 . -857) (undo-tree-id70125 . -857) (undo-tree-id70126 . -865) (undo-tree-id70127 . -865) (undo-tree-id70128 . -865) (undo-tree-id70129 . -865) (undo-tree-id70130 . -865) (undo-tree-id70131 . -865) (undo-tree-id70132 . -865) (undo-tree-id70133 . -865) (undo-tree-id70134 . -865) (undo-tree-id70135 . -865) (undo-tree-id70136 . -865) (undo-tree-id70137 . -865) (undo-tree-id70138 . -865) (undo-tree-id70139 . -865) (undo-tree-id70140 . -865) (undo-tree-id70141 . -865) (undo-tree-id70142 . -870) (undo-tree-id70143 . -870) (undo-tree-id70144 . -870) (undo-tree-id70145 . -870) (undo-tree-id70146 . -870) (undo-tree-id70147 . -870) (undo-tree-id70148 . -870) (undo-tree-id70149 . -870) (undo-tree-id70150 . -870) (undo-tree-id70151 . -870) (undo-tree-id70152 . -870) (undo-tree-id70153 . -870) (undo-tree-id70154 . -870) (undo-tree-id70155 . -870) (undo-tree-id70156 . -870) (undo-tree-id70157 . -870) (undo-tree-id70158 . -875) (undo-tree-id70159 . -875) (undo-tree-id70160 . -875) (undo-tree-id70161 . -875) (undo-tree-id70162 . -875) (undo-tree-id70163 . -875) (undo-tree-id70164 . -875) (undo-tree-id70165 . -875) (undo-tree-id70166 . -875) (undo-tree-id70167 . -875) (undo-tree-id70168 . -875) (undo-tree-id70169 . -875) (undo-tree-id70170 . -875) (undo-tree-id70171 . -875) (undo-tree-id70172 . -875) (undo-tree-id70173 . -875) (undo-tree-id70174 . -885) (undo-tree-id70175 . -885) (undo-tree-id70176 . -885) (undo-tree-id70177 . -885) (undo-tree-id70178 . -885) (undo-tree-id70179 . -885) (undo-tree-id70180 . -885) (undo-tree-id70181 . -885) (undo-tree-id70182 . -885) (undo-tree-id70183 . -885) (undo-tree-id70184 . -885) (undo-tree-id70185 . -885) (undo-tree-id70186 . -885) (undo-tree-id70187 . -885) (undo-tree-id70188 . -885) (undo-tree-id70189 . -885) (undo-tree-id70190 . -886) (undo-tree-id70191 . -886) (undo-tree-id70192 . -886) (undo-tree-id70193 . -886) (undo-tree-id70194 . -886) (undo-tree-id70195 . -886) (undo-tree-id70196 . -886) (undo-tree-id70197 . -886) (undo-tree-id70198 . -886) (undo-tree-id70199 . -886) (undo-tree-id70200 . -886) (undo-tree-id70201 . -886) (undo-tree-id70202 . -886) (undo-tree-id70203 . -886) (undo-tree-id70204 . -886) (undo-tree-id70205 . -886) (undo-tree-id70206 . -887) (undo-tree-id70207 . -887) (undo-tree-id70208 . -887) (undo-tree-id70209 . -887) (undo-tree-id70210 . -887) (undo-tree-id70211 . -887) (undo-tree-id70212 . -887) (undo-tree-id70213 . -887) (undo-tree-id70214 . -887) (undo-tree-id70215 . -887) (undo-tree-id70216 . -887) (undo-tree-id70217 . -887) (undo-tree-id70218 . -887) (undo-tree-id70219 . -887) (undo-tree-id70220 . -887) (undo-tree-id70221 . -887) (undo-tree-id70222 . -887) (undo-tree-id70223 . -887) (undo-tree-id70224 . -887) (undo-tree-id70225 . -887) (undo-tree-id70226 . -887) (undo-tree-id70227 . -887) (undo-tree-id70228 . -887) (undo-tree-id70229 . -887) (undo-tree-id70230 . -887) (undo-tree-id70231 . -887) (undo-tree-id70232 . -887) (undo-tree-id70233 . -887) (undo-tree-id70234 . -887) (undo-tree-id70235 . -746) (6424 . 7170) (#(" However, only a few years after ex- perimenting with attention mechanisms for RNNs, researchers found that an attention-based language model was even more powerful when the recurrent layers were deleted. This led to the development of the transformer architecture, which is the main topic of this chapter and the remaining sections. The transformer architecture was first proposed in the NeurIPS 2017 paper Attention Is All You Need by A. Vaswani and colleagues (https://arxiv.org/abs/1706.03762). Thanks to the self-attention mechanism, a transformer model can capture long-range dependencies among the elements in an input sequence—in an NLP context; for example, this helps the model better “understand” the mean- ing of an input sentence." 0 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 36 37 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 37 135 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 135 136 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 136 153 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 153 205 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 205 228 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 228 229 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 229 232 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 232 233 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 233 238 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 238 241 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 241 243 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 243 318 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 318 333 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 333 334 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 334 347 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 347 357 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 357 359 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 359 433 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 433 434 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 434 464 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 464 495 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t help-echo "LINK: https://arxiv.org/abs/1706.03762" htmlize-link (:uri "https://arxiv.org/abs/1706.03762") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 495 496 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://arxiv.org/abs/1706.03762" htmlize-link (:uri "https://arxiv.org/abs/1706.03762") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 496 527 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 527 528 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 528 619 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 619 620 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 620 717 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 717 718 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 718 742 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 742 743 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 6565)) nil (25775 481 541609 20000) 0 nil] [nil nil ((6426 . 6427) (#("T" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6426) (undo-tree-id69006 . 1) (undo-tree-id69007 . -1)) ((6426 . 6427) (#("w" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6426) (undo-tree-id69014 . 1) (t 25775 446 486663 888000)) (25775 446 414492 335000) 0 nil])
([nil nil ((#("However" 0 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6569) (undo-tree-id69765 . 7) (undo-tree-id69766 . -6) (undo-tree-id69767 . -7)) nil (25775 481 541317 826000) 0 nil])
nil
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6569) (undo-tree-id69762 . 2) (undo-tree-id69763 . -1) (undo-tree-id69764 . -2)) nil (25775 481 541315 109000) 0 nil])
([nil nil ((#("only a few years after ex- perimenting with attention mechanisms for RNNs" 0 26 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 26 27 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 27 73 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6569) (undo-tree-id69759 . 73) (undo-tree-id69760 . -72) (undo-tree-id69761 . -73)) nil (25775 481 541312 671000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6569) (undo-tree-id69756 . 2) (undo-tree-id69757 . -1) (undo-tree-id69758 . -2)) nil (25775 481 541309 914000) 0 nil])
([nil nil ((#("researchers " 0 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6569) (undo-tree-id69753 . 12) (undo-tree-id69754 . -11) (undo-tree-id69755 . -12)) nil (25775 481 541307 526000) 0 nil])
([nil nil ((#("found " 0 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6569) (undo-tree-id69750 . 6) (undo-tree-id69751 . -5) (undo-tree-id69752 . -6)) nil (25775 481 541305 89000) 0 nil])
([nil nil ((#("that " 0 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6569) (undo-tree-id69747 . 5) (undo-tree-id69748 . -4) (undo-tree-id69749 . -5)) nil (25775 481 541301 616000) 0 nil])
([nil nil ((#("an " 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6569) (undo-tree-id69744 . 3) (undo-tree-id69745 . -2) (undo-tree-id69746 . -3)) nil (25775 481 541299 53000) 0 nil])
([nil nil ((6569 . 6570) (#("a" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6569)) nil (25775 481 541295 626000) 0 nil])
([nil nil ((6567 . 7204) (#("- This led to the development of the transformer architecture, which is the main topic of this chapter and the remaining sections. The transformer architecture was first proposed in the NeurIPS 2017 paper Attention Is All You Need by A. Vaswani and colleagues (https://arxiv.org/abs/1706.03762). Thanks to the self-attention mechanism, a transformer model can capture long-range dependencies among the elements in an input sequence—in an NLP context; for example, this helps the model better “understand” the mean- ing of an input sentence.

- Attention-based language model was even more powerful when the recurrent layers were deleted." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 25 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 25 26 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 26 29 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 29 30 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 30 35 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 35 38 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 38 40 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 40 115 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 115 130 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 130 131 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 131 144 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 144 153 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 153 154 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 154 156 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 156 230 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 230 231 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 231 261 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 261 292 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://arxiv.org/abs/1706.03762") help-echo "LINK: https://arxiv.org/abs/1706.03762" fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 292 293 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://arxiv.org/abs/1706.03762") help-echo "LINK: https://arxiv.org/abs/1706.03762" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 293 303 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 303 305 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 305 324 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 324 325 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 325 378 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 378 380 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 380 392 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 392 398 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 398 403 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 403 406 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 406 416 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 416 417 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 417 514 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 514 515 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 515 539 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 539 540 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 540 541 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 541 542 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 542 543 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 543 544 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 544 568 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 568 569 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 569 586 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 586 637 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 6567) (undo-tree-id69015 . 93) (undo-tree-id69016 . -544) (undo-tree-id69017 . -544) (undo-tree-id69018 . -544) (undo-tree-id69019 . -544) (undo-tree-id69020 . 92) (undo-tree-id69021 . -544) (undo-tree-id69022 . -544) (undo-tree-id69023 . -637) (undo-tree-id69024 . -544) (undo-tree-id69025 . -544) (undo-tree-id69026 . -544) (undo-tree-id69027 . -544) (undo-tree-id69028 . -544) (undo-tree-id69029 . -544) (undo-tree-id69030 . -544) (undo-tree-id69031 . -544) (undo-tree-id69032 . -544) (undo-tree-id69033 . -544) (undo-tree-id69034 . -544) (undo-tree-id69035 . -544) (undo-tree-id69036 . -544) (undo-tree-id69037 . -544) (undo-tree-id69038 . -544) (undo-tree-id69039 . -544) (undo-tree-id69040 . -544) (undo-tree-id69041 . -544) (undo-tree-id69042 . -544) (undo-tree-id69043 . -544) (undo-tree-id69044 . -544) (undo-tree-id69045 . -544) (undo-tree-id69046 . -544) (undo-tree-id69047 . -544) (undo-tree-id69048 . -544) (undo-tree-id69049 . -544) (undo-tree-id69050 . -544) (undo-tree-id69051 . -543) (undo-tree-id69052 . -543) (undo-tree-id69053 . -543) (undo-tree-id69054 . -543) (undo-tree-id69055 . -543) (undo-tree-id69056 . -543) (undo-tree-id69057 . -543) (undo-tree-id69058 . -543) (undo-tree-id69059 . -543) (undo-tree-id69060 . -543) (undo-tree-id69061 . -543) (undo-tree-id69062 . -543) (undo-tree-id69063 . -543) (undo-tree-id69064 . -543) (undo-tree-id69065 . -543) (undo-tree-id69066 . -543) (undo-tree-id69067 . -543) (undo-tree-id69068 . -543) (undo-tree-id69069 . -543) (undo-tree-id69070 . -543) (undo-tree-id69071 . -543) (undo-tree-id69072 . -543) (undo-tree-id69073 . -543) (undo-tree-id69074 . -543) (undo-tree-id69075 . -543) (undo-tree-id69076 . -544) (undo-tree-id69077 . -544) (undo-tree-id69078 . -544) (undo-tree-id69079 . -544) (undo-tree-id69080 . -544) (undo-tree-id69081 . -544) (undo-tree-id69082 . -544) (undo-tree-id69083 . -544) (undo-tree-id69084 . -544) (undo-tree-id69085 . -544) (undo-tree-id69086 . -544) (undo-tree-id69087 . -544) (undo-tree-id69088 . -544) (undo-tree-id69089 . -544) (undo-tree-id69090 . -544) (undo-tree-id69091 . -544) (undo-tree-id69092 . -544) (undo-tree-id69093 . -544) (undo-tree-id69094 . -544) (undo-tree-id69095 . -544) (undo-tree-id69096 . -544) (undo-tree-id69097 . -544) (undo-tree-id69098 . -544) (undo-tree-id69099 . -544) (undo-tree-id69100 . -544) (undo-tree-id69101 . -544) (undo-tree-id69102 . -544) (undo-tree-id69103 . -544) (undo-tree-id69104 . -544) (undo-tree-id69105 . -544) (undo-tree-id69106 . -544) (undo-tree-id69107 . -544) (undo-tree-id69108 . -544) (undo-tree-id69109 . -544) (undo-tree-id69110 . -544) (undo-tree-id69111 . -544) (undo-tree-id69112 . -544) (undo-tree-id69113 . -544) (undo-tree-id69114 . -544) (undo-tree-id69115 . -544) (undo-tree-id69116 . -544) (undo-tree-id69117 . -544) (undo-tree-id69118 . -544) (undo-tree-id69119 . -544) (undo-tree-id69120 . -544) (undo-tree-id69121 . -544) (undo-tree-id69122 . -544) (undo-tree-id69123 . -544) (undo-tree-id69124 . -544) (undo-tree-id69125 . -544) (undo-tree-id69126 . -544) (undo-tree-id69127 . -544) (undo-tree-id69128 . -544) (undo-tree-id69129 . -544) (undo-tree-id69130 . -544) (undo-tree-id69131 . -544) (undo-tree-id69132 . -544) (undo-tree-id69133 . -544) (undo-tree-id69134 . -544) (undo-tree-id69135 . -544) (undo-tree-id69136 . -544) (undo-tree-id69137 . -544) (undo-tree-id69138 . -544) (undo-tree-id69139 . -544) (undo-tree-id69140 . -544) (undo-tree-id69141 . -544) (undo-tree-id69142 . -544) (undo-tree-id69143 . -544) (undo-tree-id69144 . -544) (undo-tree-id69145 . -544) (undo-tree-id69146 . -544) (undo-tree-id69147 . -544) (undo-tree-id69148 . -544) (undo-tree-id69149 . -544) (undo-tree-id69150 . -544) (undo-tree-id69151 . -544) (undo-tree-id69152 . -544) (undo-tree-id69153 . -544) (undo-tree-id69154 . -544) (undo-tree-id69155 . -544) (undo-tree-id69156 . -544) (undo-tree-id69157 . -544) (undo-tree-id69158 . -544) (undo-tree-id69159 . -544) (undo-tree-id69160 . -544) (undo-tree-id69161 . -544) (undo-tree-id69162 . -544) (undo-tree-id69163 . -544) (undo-tree-id69164 . -544) (undo-tree-id69165 . -544) (undo-tree-id69166 . -544) (undo-tree-id69167 . -544) (undo-tree-id69168 . -544) (undo-tree-id69169 . -544) (undo-tree-id69170 . -544) (undo-tree-id69171 . -544) (undo-tree-id69172 . -544) (undo-tree-id69173 . -544) (undo-tree-id69174 . -544) (undo-tree-id69175 . -544) (undo-tree-id69176 . -544) (undo-tree-id69177 . -544) (undo-tree-id69178 . -544) (undo-tree-id69179 . -544) (undo-tree-id69180 . -544) (undo-tree-id69181 . -544) (undo-tree-id69182 . -544) (undo-tree-id69183 . -544) (undo-tree-id69184 . -544) (undo-tree-id69185 . -544) (undo-tree-id69186 . -544) (undo-tree-id69187 . -544) (undo-tree-id69188 . -544) (undo-tree-id69189 . -544) (undo-tree-id69190 . -544) (undo-tree-id69191 . -544) (undo-tree-id69192 . -544) (undo-tree-id69193 . -544) (undo-tree-id69194 . -544) (undo-tree-id69195 . -544) (undo-tree-id69196 . -544) (undo-tree-id69197 . -544) (undo-tree-id69198 . -544) (undo-tree-id69199 . -544) (undo-tree-id69200 . -544) (undo-tree-id69201 . -544) (undo-tree-id69202 . -544) (undo-tree-id69203 . -544) (undo-tree-id69204 . -544) (undo-tree-id69205 . -544) (undo-tree-id69206 . -544) (undo-tree-id69207 . -544) (undo-tree-id69208 . -544) (undo-tree-id69209 . -544) (undo-tree-id69210 . -544) (undo-tree-id69211 . -544) (undo-tree-id69212 . -544) (undo-tree-id69213 . -544) (undo-tree-id69214 . -544) (undo-tree-id69215 . -544) (undo-tree-id69216 . -544) (undo-tree-id69217 . -544) (undo-tree-id69218 . -544) (undo-tree-id69219 . -544) (undo-tree-id69220 . -544) (undo-tree-id69221 . -544) (undo-tree-id69222 . -544) (undo-tree-id69223 . -544) (undo-tree-id69224 . -544) (undo-tree-id69225 . -544) (undo-tree-id69226 . -544) (undo-tree-id69227 . -544) (undo-tree-id69228 . -544) (undo-tree-id69229 . -544) (undo-tree-id69230 . -544) (undo-tree-id69231 . -544) (undo-tree-id69232 . -544) (undo-tree-id69233 . -544) (undo-tree-id69234 . -544) (undo-tree-id69235 . -544) (undo-tree-id69236 . -544) (undo-tree-id69237 . -544) (undo-tree-id69238 . -544) (undo-tree-id69239 . -544) (undo-tree-id69240 . -544) (undo-tree-id69241 . -544) (undo-tree-id69242 . -544) (undo-tree-id69243 . -544) (undo-tree-id69244 . -544) (undo-tree-id69245 . -544) (undo-tree-id69246 . -544) (undo-tree-id69247 . -544) (undo-tree-id69248 . -544) (undo-tree-id69249 . -544) (undo-tree-id69250 . -544) (undo-tree-id69251 . -544) (undo-tree-id69252 . -544) (undo-tree-id69253 . -544) (undo-tree-id69254 . -544) (undo-tree-id69255 . -544) (undo-tree-id69256 . -544) (undo-tree-id69257 . -544) (undo-tree-id69258 . -544) (undo-tree-id69259 . -544) (undo-tree-id69260 . -544) (undo-tree-id69261 . -544) (undo-tree-id69262 . -544) (undo-tree-id69263 . -544) (undo-tree-id69264 . -544) (undo-tree-id69265 . -544) (undo-tree-id69266 . -544) (undo-tree-id69267 . -544) (undo-tree-id69268 . -544) (undo-tree-id69269 . -544) (undo-tree-id69270 . -544) (undo-tree-id69271 . -544) (undo-tree-id69272 . -544) (undo-tree-id69273 . -544) (undo-tree-id69274 . -544) (undo-tree-id69275 . -544) (undo-tree-id69276 . -544) (undo-tree-id69277 . -544) (undo-tree-id69278 . -544) (undo-tree-id69279 . -544) (undo-tree-id69280 . -544) (undo-tree-id69281 . -544) (undo-tree-id69282 . -544) (undo-tree-id69283 . -544) (undo-tree-id69284 . -544) (undo-tree-id69285 . -544) (undo-tree-id69286 . -544) (undo-tree-id69287 . -544) (undo-tree-id69288 . -544) (undo-tree-id69289 . -544) (undo-tree-id69290 . -544) (undo-tree-id69291 . -544) (undo-tree-id69292 . -544) (undo-tree-id69293 . -544) (undo-tree-id69294 . -544) (undo-tree-id69295 . -544) (undo-tree-id69296 . -544) (undo-tree-id69297 . -544) (undo-tree-id69298 . -544) (undo-tree-id69299 . -544) (undo-tree-id69300 . -544) (undo-tree-id69301 . -544) (undo-tree-id69302 . -544) (undo-tree-id69303 . -544) (undo-tree-id69304 . -544) (undo-tree-id69305 . -544) (undo-tree-id69306 . -544) (undo-tree-id69307 . -544) (undo-tree-id69308 . -544) (undo-tree-id69309 . -544) (undo-tree-id69310 . -544) (undo-tree-id69311 . -544) (undo-tree-id69312 . -544) (undo-tree-id69313 . -544) (undo-tree-id69314 . -544) (undo-tree-id69315 . -544) (undo-tree-id69316 . -544) (undo-tree-id69317 . -544) (undo-tree-id69318 . -544) (undo-tree-id69319 . -544) (undo-tree-id69320 . -544) (undo-tree-id69321 . -544) (undo-tree-id69322 . -544) (undo-tree-id69323 . -544) (undo-tree-id69324 . -544) (undo-tree-id69325 . -544) (undo-tree-id69326 . -544) (undo-tree-id69327 . -544) (undo-tree-id69328 . -544) (undo-tree-id69329 . -544) (undo-tree-id69330 . -544) (undo-tree-id69331 . -544) (undo-tree-id69332 . -544) (undo-tree-id69333 . -544) (undo-tree-id69334 . -544) (undo-tree-id69335 . -544) (undo-tree-id69336 . -544) (undo-tree-id69337 . -544) (undo-tree-id69338 . -544) (undo-tree-id69339 . -544) (undo-tree-id69340 . -544) (undo-tree-id69341 . -544) (undo-tree-id69342 . -544) (undo-tree-id69343 . -544) (undo-tree-id69344 . -544) (undo-tree-id69345 . -544) (undo-tree-id69346 . -544) (undo-tree-id69347 . -544) (undo-tree-id69348 . -544) (undo-tree-id69349 . -544) (undo-tree-id69350 . -544) (undo-tree-id69351 . -544) (undo-tree-id69352 . -544) (undo-tree-id69353 . -544) (undo-tree-id69354 . -544) (undo-tree-id69355 . -544) (undo-tree-id69356 . -544) (undo-tree-id69357 . -544) (undo-tree-id69358 . -544) (undo-tree-id69359 . -544) (undo-tree-id69360 . -544) (undo-tree-id69361 . -544) (undo-tree-id69362 . -544) (undo-tree-id69363 . -544) (undo-tree-id69364 . -544) (undo-tree-id69365 . -544) (undo-tree-id69366 . -544) (undo-tree-id69367 . -544) (undo-tree-id69368 . -544) (undo-tree-id69369 . -544) (undo-tree-id69370 . -544) (undo-tree-id69371 . -544) (undo-tree-id69372 . -544) (undo-tree-id69373 . -544) (undo-tree-id69374 . -544) (undo-tree-id69375 . -544) (undo-tree-id69376 . -544) (undo-tree-id69377 . -544) (undo-tree-id69378 . -544) (undo-tree-id69379 . -544) (undo-tree-id69380 . -544) (undo-tree-id69381 . -544) (undo-tree-id69382 . -544) (undo-tree-id69383 . -544) (undo-tree-id69384 . -544) (undo-tree-id69385 . -544) (undo-tree-id69386 . -544) (undo-tree-id69387 . -544) (undo-tree-id69388 . -544) (undo-tree-id69389 . -544) (undo-tree-id69390 . -544) (undo-tree-id69391 . -544) (undo-tree-id69392 . -544) (undo-tree-id69393 . -544) (undo-tree-id69394 . -544) (undo-tree-id69395 . -544) (undo-tree-id69396 . -544) (undo-tree-id69397 . -544) (undo-tree-id69398 . -544) (undo-tree-id69399 . -544) (undo-tree-id69400 . -544) (undo-tree-id69401 . -544) (undo-tree-id69402 . -544) (undo-tree-id69403 . -544) (undo-tree-id69404 . -544) (undo-tree-id69405 . -544) (undo-tree-id69406 . -544) (undo-tree-id69407 . -544) (undo-tree-id69408 . -544) (undo-tree-id69409 . -544) (undo-tree-id69410 . -544) (undo-tree-id69411 . -544) (undo-tree-id69412 . -544) (undo-tree-id69413 . -544) (undo-tree-id69414 . -544) (undo-tree-id69415 . -544) (undo-tree-id69416 . -544) (undo-tree-id69417 . -544) (undo-tree-id69418 . -544) (undo-tree-id69419 . -544) (undo-tree-id69420 . -544) (undo-tree-id69421 . -544) (undo-tree-id69422 . -544) (undo-tree-id69423 . -544) (undo-tree-id69424 . -544) (undo-tree-id69425 . -544) (undo-tree-id69426 . -544) (undo-tree-id69427 . -544) (undo-tree-id69428 . -544) (undo-tree-id69429 . -544) (undo-tree-id69430 . -544) (undo-tree-id69431 . -544) (undo-tree-id69432 . -544) (undo-tree-id69433 . -544) (undo-tree-id69434 . -544) (undo-tree-id69435 . -544) (undo-tree-id69436 . -544) (undo-tree-id69437 . -544) (undo-tree-id69438 . -544) (undo-tree-id69439 . -544) (undo-tree-id69440 . -544) (undo-tree-id69441 . -544) (undo-tree-id69442 . -544) (undo-tree-id69443 . -544) (undo-tree-id69444 . -544) (undo-tree-id69445 . -544) (undo-tree-id69446 . -544) (undo-tree-id69447 . -544) (undo-tree-id69448 . -552) (undo-tree-id69449 . -552) (undo-tree-id69450 . -552) (undo-tree-id69451 . -552) (undo-tree-id69452 . -552) (undo-tree-id69453 . -552) (undo-tree-id69454 . -552) (undo-tree-id69455 . -552) (undo-tree-id69456 . -552) (undo-tree-id69457 . -552) (undo-tree-id69458 . -552) (undo-tree-id69459 . -552) (undo-tree-id69460 . -552) (undo-tree-id69461 . -552) (undo-tree-id69462 . -552) (undo-tree-id69463 . -552) (undo-tree-id69464 . -553) (undo-tree-id69465 . -553) (undo-tree-id69466 . -553) (undo-tree-id69467 . -553) (undo-tree-id69468 . -553) (undo-tree-id69469 . -553) (undo-tree-id69470 . -553) (undo-tree-id69471 . -553) (undo-tree-id69472 . -553) (undo-tree-id69473 . -553) (undo-tree-id69474 . -553) (undo-tree-id69475 . -553) (undo-tree-id69476 . -553) (undo-tree-id69477 . -553) (undo-tree-id69478 . -553) (undo-tree-id69479 . -553) (undo-tree-id69480 . -558) (undo-tree-id69481 . -558) (undo-tree-id69482 . -558) (undo-tree-id69483 . -558) (undo-tree-id69484 . -558) (undo-tree-id69485 . -558) (undo-tree-id69486 . -558) (undo-tree-id69487 . -558) (undo-tree-id69488 . -558) (undo-tree-id69489 . -558) (undo-tree-id69490 . -558) (undo-tree-id69491 . -558) (undo-tree-id69492 . -558) (undo-tree-id69493 . -558) (undo-tree-id69494 . -558) (undo-tree-id69495 . -558) (undo-tree-id69496 . -567) (undo-tree-id69497 . -567) (undo-tree-id69498 . -567) (undo-tree-id69499 . -567) (undo-tree-id69500 . -567) (undo-tree-id69501 . -567) (undo-tree-id69502 . -567) (undo-tree-id69503 . -567) (undo-tree-id69504 . -567) (undo-tree-id69505 . -567) (undo-tree-id69506 . -567) (undo-tree-id69507 . -567) (undo-tree-id69508 . -567) (undo-tree-id69509 . -567) (undo-tree-id69510 . -567) (undo-tree-id69511 . -567) (undo-tree-id69512 . -573) (undo-tree-id69513 . -573) (undo-tree-id69514 . -573) (undo-tree-id69515 . -573) (undo-tree-id69516 . -573) (undo-tree-id69517 . -573) (undo-tree-id69518 . -573) (undo-tree-id69519 . -573) (undo-tree-id69520 . -573) (undo-tree-id69521 . -573) (undo-tree-id69522 . -573) (undo-tree-id69523 . -573) (undo-tree-id69524 . -573) (undo-tree-id69525 . -573) (undo-tree-id69526 . -573) (undo-tree-id69527 . -573) (undo-tree-id69528 . -573) (undo-tree-id69529 . -573) (undo-tree-id69530 . -573) (undo-tree-id69531 . -573) (undo-tree-id69532 . -573) (undo-tree-id69533 . -577) (undo-tree-id69534 . -577) (undo-tree-id69535 . -577) (undo-tree-id69536 . -577) (undo-tree-id69537 . -577) (undo-tree-id69538 . -577) (undo-tree-id69539 . -577) (undo-tree-id69540 . -577) (undo-tree-id69541 . -577) (undo-tree-id69542 . -577) (undo-tree-id69543 . -577) (undo-tree-id69544 . -577) (undo-tree-id69545 . -577) (undo-tree-id69546 . -577) (undo-tree-id69547 . -577) (undo-tree-id69548 . -577) (undo-tree-id69549 . -577) (undo-tree-id69550 . -577) (undo-tree-id69551 . -577) (undo-tree-id69552 . -577) (undo-tree-id69553 . -577) (undo-tree-id69554 . -582) (undo-tree-id69555 . -582) (undo-tree-id69556 . -582) (undo-tree-id69557 . -582) (undo-tree-id69558 . -582) (undo-tree-id69559 . -582) (undo-tree-id69560 . -582) (undo-tree-id69561 . -582) (undo-tree-id69562 . -582) (undo-tree-id69563 . -582) (undo-tree-id69564 . -582) (undo-tree-id69565 . -582) (undo-tree-id69566 . -582) (undo-tree-id69567 . -582) (undo-tree-id69568 . -582) (undo-tree-id69569 . -582) (undo-tree-id69570 . -587) (undo-tree-id69571 . -587) (undo-tree-id69572 . -587) (undo-tree-id69573 . -587) (undo-tree-id69574 . -587) (undo-tree-id69575 . -587) (undo-tree-id69576 . -587) (undo-tree-id69577 . -587) (undo-tree-id69578 . -587) (undo-tree-id69579 . -587) (undo-tree-id69580 . -587) (undo-tree-id69581 . -587) (undo-tree-id69582 . -587) (undo-tree-id69583 . -587) (undo-tree-id69584 . -587) (undo-tree-id69585 . -587) (undo-tree-id69586 . -596) (undo-tree-id69587 . -596) (undo-tree-id69588 . -596) (undo-tree-id69589 . -596) (undo-tree-id69590 . -596) (undo-tree-id69591 . -596) (undo-tree-id69592 . -596) (undo-tree-id69593 . -596) (undo-tree-id69594 . -596) (undo-tree-id69595 . -596) (undo-tree-id69596 . -596) (undo-tree-id69597 . -596) (undo-tree-id69598 . -596) (undo-tree-id69599 . -596) (undo-tree-id69600 . -596) (undo-tree-id69601 . -596) (undo-tree-id69602 . -601) (undo-tree-id69603 . -601) (undo-tree-id69604 . -601) (undo-tree-id69605 . -601) (undo-tree-id69606 . -601) (undo-tree-id69607 . -601) (undo-tree-id69608 . -601) (undo-tree-id69609 . -601) (undo-tree-id69610 . -601) (undo-tree-id69611 . -601) (undo-tree-id69612 . -601) (undo-tree-id69613 . -601) (undo-tree-id69614 . -601) (undo-tree-id69615 . -601) (undo-tree-id69616 . -601) (undo-tree-id69617 . -601) (undo-tree-id69618 . -605) (undo-tree-id69619 . -605) (undo-tree-id69620 . -605) (undo-tree-id69621 . -605) (undo-tree-id69622 . -605) (undo-tree-id69623 . -605) (undo-tree-id69624 . -605) (undo-tree-id69625 . -605) (undo-tree-id69626 . -605) (undo-tree-id69627 . -605) (undo-tree-id69628 . -605) (undo-tree-id69629 . -605) (undo-tree-id69630 . -605) (undo-tree-id69631 . -605) (undo-tree-id69632 . -605) (undo-tree-id69633 . -605) (undo-tree-id69634 . -615) (undo-tree-id69635 . -615) (undo-tree-id69636 . -615) (undo-tree-id69637 . -615) (undo-tree-id69638 . -615) (undo-tree-id69639 . -615) (undo-tree-id69640 . -615) (undo-tree-id69641 . -615) (undo-tree-id69642 . -615) (undo-tree-id69643 . -615) (undo-tree-id69644 . -615) (undo-tree-id69645 . -615) (undo-tree-id69646 . -615) (undo-tree-id69647 . -615) (undo-tree-id69648 . -615) (undo-tree-id69649 . -615) (undo-tree-id69650 . -622) (undo-tree-id69651 . -622) (undo-tree-id69652 . -622) (undo-tree-id69653 . -622) (undo-tree-id69654 . -622) (undo-tree-id69655 . -622) (undo-tree-id69656 . -622) (undo-tree-id69657 . -622) (undo-tree-id69658 . -622) (undo-tree-id69659 . -622) (undo-tree-id69660 . -622) (undo-tree-id69661 . -622) (undo-tree-id69662 . -622) (undo-tree-id69663 . -622) (undo-tree-id69664 . -622) (undo-tree-id69665 . -622) (undo-tree-id69666 . -627) (undo-tree-id69667 . -627) (undo-tree-id69668 . -627) (undo-tree-id69669 . -627) (undo-tree-id69670 . -627) (undo-tree-id69671 . -627) (undo-tree-id69672 . -627) (undo-tree-id69673 . -627) (undo-tree-id69674 . -627) (undo-tree-id69675 . -627) (undo-tree-id69676 . -627) (undo-tree-id69677 . -627) (undo-tree-id69678 . -627) (undo-tree-id69679 . -627) (undo-tree-id69680 . -627) (undo-tree-id69681 . -627) (undo-tree-id69682 . -635) (undo-tree-id69683 . -635) (undo-tree-id69684 . -635) (undo-tree-id69685 . -635) (undo-tree-id69686 . -635) (undo-tree-id69687 . -635) (undo-tree-id69688 . -635) (undo-tree-id69689 . -635) (undo-tree-id69690 . -635) (undo-tree-id69691 . -635) (undo-tree-id69692 . -635) (undo-tree-id69693 . -635) (undo-tree-id69694 . -635) (undo-tree-id69695 . -635) (undo-tree-id69696 . -635) (undo-tree-id69697 . -635) (undo-tree-id69698 . -636) (undo-tree-id69699 . -636) (undo-tree-id69700 . -636) (undo-tree-id69701 . -636) (undo-tree-id69702 . -636) (undo-tree-id69703 . -636) (undo-tree-id69704 . -636) (undo-tree-id69705 . -636) (undo-tree-id69706 . -636) (undo-tree-id69707 . -636) (undo-tree-id69708 . -636) (undo-tree-id69709 . -636) (undo-tree-id69710 . -636) (undo-tree-id69711 . -636) (undo-tree-id69712 . -636) (undo-tree-id69713 . -636) (undo-tree-id69714 . -637) (undo-tree-id69715 . -637) (undo-tree-id69716 . -637) (undo-tree-id69717 . -637) (undo-tree-id69718 . -637) (undo-tree-id69719 . -637) (undo-tree-id69720 . -637) (undo-tree-id69721 . -637) (undo-tree-id69722 . -637) (undo-tree-id69723 . -637) (undo-tree-id69724 . -637) (undo-tree-id69725 . -637) (undo-tree-id69726 . -637) (undo-tree-id69727 . -637) (undo-tree-id69728 . -637) (undo-tree-id69729 . -637) (undo-tree-id69730 . -637) (undo-tree-id69731 . -637) (undo-tree-id69732 . -637) (undo-tree-id69733 . -637) (undo-tree-id69734 . -637) (undo-tree-id69735 . -637) (undo-tree-id69736 . -637) (undo-tree-id69737 . -637) (undo-tree-id69738 . -637) (undo-tree-id69739 . -637) (undo-tree-id69740 . -637) (undo-tree-id69741 . -637) (undo-tree-id69742 . -637) (undo-tree-id69743 . -542) (6567 . 7109) (#(" This led to the development of the transformer architecture, which is the main topic of this chapter and the remaining sections. The transformer architecture was first proposed in the NeurIPS 2017 paper Attention Is All You Need by A. Vaswani and colleagues (https://arxiv.org/abs/1706.03762). Thanks to the self-attention mechanism, a transformer model can capture long-range dependencies among the elements in an input sequence—in an NLP context; for example, this helps the model better “understand” the mean- ing of an input sentence." 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 24 25 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 25 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 28 29 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 29 34 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 34 37 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 37 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 39 114 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 114 129 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 129 130 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 130 143 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 143 152 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 152 153 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 153 155 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 155 229 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 229 230 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 230 260 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 260 291 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t help-echo "LINK: https://arxiv.org/abs/1706.03762" htmlize-link (:uri "https://arxiv.org/abs/1706.03762") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 291 292 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://arxiv.org/abs/1706.03762" htmlize-link (:uri "https://arxiv.org/abs/1706.03762") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 292 302 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 302 304 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 304 323 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 323 324 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 324 377 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 377 379 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 379 391 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 391 397 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 397 402 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 402 405 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 405 415 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 415 416 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 416 513 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 513 514 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 514 538 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 538 539 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 6662)) nil (25775 481 541237 741000) 0 nil])
([nil nil ((#("This led to the development of the transformer architecture, which is the main topic of this chapter and the remaining sections" 0 23 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 23 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 24 27 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 27 28 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 28 33 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 33 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 36 38 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 38 113 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 113 127 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6666) (undo-tree-id70239 . 127) (undo-tree-id70240 . -126) (undo-tree-id70241 . -127) (t 25775 481 615263 391000)) nil (25775 489 461637 869000) 0 nil])
([nil nil ((#(". " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6666) (undo-tree-id70236 . 2) (undo-tree-id70237 . -1) (undo-tree-id70238 . -2)) nil (25775 489 461631 240000) 0 nil])
([nil nil ((#("The transformer architecture was first proposed in the NeurIPS 2017 paper Attention Is All You Need by A" 0 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 13 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 22 23 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 23 25 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 25 99 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 99 100 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 100 104 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6666) (undo-tree-id70245 . 104) (undo-tree-id70246 . -103) (undo-tree-id70247 . -104) (t 25775 489 535398 286000)) nil (25775 499 192975 127000) 0 nil])
([nil nil ((#(". " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6666) (undo-tree-id70242 . 2) (undo-tree-id70243 . -1) (undo-tree-id70244 . -2)) nil (25775 499 192927 718000) 0 nil])
([nil nil ((#("Vaswani and colleagues (https://arxiv" 0 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 24 37 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t help-echo "LINK: https://arxiv.org/abs/1706.03762" htmlize-link (:uri "https://arxiv.org/abs/1706.03762") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t)) . 6666) (undo-tree-id70257 . 37) (undo-tree-id70258 . -36) (undo-tree-id70259 . 37) (undo-tree-id70260 . -7) (undo-tree-id70261 . -37) (t 25775 499 271563 981000)) nil (25775 503 893590 986000) 0 nil])
([nil nil ((#(".org/abs/1706" 0 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t help-echo "LINK: https://arxiv.org/abs/1706.03762" htmlize-link (:uri "https://arxiv.org/abs/1706.03762"))) . 6666) (undo-tree-id70254 . 13) (undo-tree-id70255 . -12) (undo-tree-id70256 . -13)) nil (25775 503 893586 27000) 0 nil])
([nil nil ((#(".03762)" 0 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t help-echo "LINK: https://arxiv.org/abs/1706.03762" htmlize-link (:uri "https://arxiv.org/abs/1706.03762")) 5 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://arxiv.org/abs/1706.03762" htmlize-link (:uri "https://arxiv.org/abs/1706.03762")) 6 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6666) (undo-tree-id70251 . 7) (undo-tree-id70252 . -6) (undo-tree-id70253 . -7)) nil (25775 503 893897 434000) 0 nil])
([nil nil ((#(". " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6666) (undo-tree-id70262 . 2) (undo-tree-id70263 . -1) (undo-tree-id70264 . -2)) nil (25775 527 33190 605000) 0 nil] [nil nil ((#(". Thanks to the self-attention mechanism, a transformer model can capture long-range dependencies among the elements in an input sequence—in an NLP context; for example, this helps the model better “understand” the mean- ing of an input sentence" 0 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 9 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 11 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 30 31 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 31 84 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 84 86 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 86 98 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 98 104 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 104 109 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 109 112 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 112 122 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 122 123 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 123 220 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 220 221 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 221 245 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6666) (undo-tree-id70248 . 245) (undo-tree-id70249 . -244) (undo-tree-id70250 . -245)) ((6666 . 6911)) (25775 503 893573 602000) 0 nil])
([nil nil ((6801 . 6802) (#("—" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6801) (undo-tree-id70272 . -1) (t 25775 505 475669 491000)) nil (25775 532 687013 868000) 0 nil] [nil nil ((#("—" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6801) (undo-tree-id70269 . -1) (undo-tree-id70270 . -1) (t 25775 505 475669 491000)) ((6801 . 6802)) (25775 526 279153 84000) 0 nil])
nil
([nil nil ((#("Thanks to the self-attention mechanism" 0 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 7 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 9 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 28 29 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 29 38 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6666) (undo-tree-id70382 . 38) (undo-tree-id70383 . -37) (undo-tree-id70384 . -14) (undo-tree-id70385 . -14) (undo-tree-id70386 . -14) (undo-tree-id70387 . -14) (undo-tree-id70388 . -14) (undo-tree-id70389 . -14) (undo-tree-id70390 . -14) (undo-tree-id70391 . -14) (undo-tree-id70392 . -14) (undo-tree-id70393 . -14) (undo-tree-id70394 . -14) (undo-tree-id70395 . -14) (undo-tree-id70396 . -14) (undo-tree-id70397 . -14) (undo-tree-id70398 . -14) (undo-tree-id70399 . -14) (undo-tree-id70400 . -14) (undo-tree-id70401 . -14) (undo-tree-id70402 . -14) (undo-tree-id70403 . -14) (undo-tree-id70404 . -14) (undo-tree-id70405 . -14) (undo-tree-id70406 . -14) (undo-tree-id70407 . -14) (undo-tree-id70408 . -14) (undo-tree-id70409 . -14) (undo-tree-id70410 . -18) (undo-tree-id70411 . -18) (undo-tree-id70412 . -18) (undo-tree-id70413 . -18) (undo-tree-id70414 . -18) (undo-tree-id70415 . -18) (undo-tree-id70416 . -18) (undo-tree-id70417 . -18) (undo-tree-id70418 . -18) (undo-tree-id70419 . -18) (undo-tree-id70420 . -18) (undo-tree-id70421 . -18) (undo-tree-id70422 . -18) (undo-tree-id70423 . -18) (undo-tree-id70424 . -18) (undo-tree-id70425 . -18) (undo-tree-id70426 . -18) (undo-tree-id70427 . -18) (undo-tree-id70428 . -18) (undo-tree-id70429 . -18) (undo-tree-id70430 . -18) (undo-tree-id70431 . -18) (undo-tree-id70432 . -18) (undo-tree-id70433 . -18) (undo-tree-id70434 . -18) (undo-tree-id70435 . -18) (undo-tree-id70436 . -38) (t 25775 532 760132 830000)) nil (25775 557 822688 751000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6801) (undo-tree-id70267 . -1) (undo-tree-id70268 . -1)) ((6801 . 6802)) (25775 525 119630 995000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6666) (undo-tree-id70379 . 2) (undo-tree-id70380 . -1) (undo-tree-id70381 . -2)) nil (25775 557 821901 126000) 0 nil])
([nil nil ((6801 . 6802) (#("n" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6801) (undo-tree-id70265 . -1) (undo-tree-id70266 . -1)) ((6801 . 6802) (#("w" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6801) (undo-tree-id70271 . -1)) (25775 525 118504 498000) 0 nil])
([nil nil ((6666 . 6667) (#("a" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6666)) nil (25775 557 821896 788000) 0 nil])
nil
([nil nil ((#("-in an NLP context; for example, this helps the model better “understand” the mean- ing of an input sentence" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 2 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 3 83 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 83 84 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 84 108 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6761) (undo-tree-id70283 . -107) (undo-tree-id70284 . -107) (undo-tree-id70285 . -107) (undo-tree-id70286 . -107) (undo-tree-id70287 . -108) (undo-tree-id70288 . -107) (undo-tree-id70289 . -59) (undo-tree-id70290 . -59) (undo-tree-id70291 . -59) (undo-tree-id70292 . -59) (undo-tree-id70293 . -59) (undo-tree-id70294 . -59) (undo-tree-id70295 . -59) (undo-tree-id70296 . -59) (undo-tree-id70297 . -59) (undo-tree-id70298 . -59) (undo-tree-id70299 . -59) (undo-tree-id70300 . -59) (undo-tree-id70301 . -59) (undo-tree-id70302 . -59) (undo-tree-id70303 . -59) (undo-tree-id70304 . -59) (undo-tree-id70305 . -59) (undo-tree-id70306 . -59) (undo-tree-id70307 . -59) (undo-tree-id70308 . -59) (undo-tree-id70309 . -59) (undo-tree-id70310 . -59) (undo-tree-id70311 . -59) (undo-tree-id70312 . -59) (undo-tree-id70313 . -59) (undo-tree-id70314 . -59) (undo-tree-id70315 . -59) (undo-tree-id70316 . -59) (undo-tree-id70317 . -59) (undo-tree-id70318 . -59) (undo-tree-id70319 . -59) (undo-tree-id70320 . -59) (undo-tree-id70321 . -59) (undo-tree-id70322 . -59) (undo-tree-id70323 . -59) (undo-tree-id70324 . -59) (undo-tree-id70325 . -108) (undo-tree-id70326 . -108) (undo-tree-id70327 . -108) (undo-tree-id70328 . -108) (undo-tree-id70329 . -108) (undo-tree-id70330 . -108) (undo-tree-id70331 . -108) (undo-tree-id70332 . -108) (undo-tree-id70333 . -108) (undo-tree-id70334 . -108) (undo-tree-id70335 . -108) (undo-tree-id70336 . -108) (undo-tree-id70337 . -108) (undo-tree-id70338 . -108) (undo-tree-id70339 . -108) (undo-tree-id70340 . -108) (undo-tree-id70341 . -108) (undo-tree-id70342 . -108) (undo-tree-id70343 . -108) (undo-tree-id70344 . -108) (undo-tree-id70345 . -108) (undo-tree-id70346 . -107) (undo-tree-id70347 . -107) (undo-tree-id70348 . -107) (undo-tree-id70349 . -107) (undo-tree-id70350 . -107) (undo-tree-id70351 . -107) (undo-tree-id70352 . -107) (undo-tree-id70353 . -107) (undo-tree-id70354 . -107) (undo-tree-id70355 . -107) (undo-tree-id70356 . -107) (undo-tree-id70357 . -107) (undo-tree-id70358 . -107) (undo-tree-id70359 . -107) (undo-tree-id70360 . -107) (undo-tree-id70361 . -107) (undo-tree-id70362 . -107) (undo-tree-id70363 . -107) (undo-tree-id70364 . -107) (undo-tree-id70365 . -107) (undo-tree-id70366 . -107) (undo-tree-id70367 . -107) (undo-tree-id70368 . -107) (undo-tree-id70369 . -107) (undo-tree-id70370 . -107) (undo-tree-id70371 . -107) (undo-tree-id70372 . -107) (undo-tree-id70373 . -107) (undo-tree-id70374 . -107) (undo-tree-id70375 . -107) (undo-tree-id70376 . -107) (undo-tree-id70377 . -107) (undo-tree-id70378 . -108) 6868) nil (25775 572 667321 73000) 0 nil])
([nil nil ((#("Although " 0 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6766) (undo-tree-id71474 . -8) (undo-tree-id71475 . -9)) nil (25775 594 221790 758000) 0 nil] [nil nil ((#("Although this transformer architecture was originally designed for language translation" 0 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 39 87 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6766) (undo-tree-id70440 . -86) (undo-tree-id70441 . -39) (undo-tree-id70442 . -39) (undo-tree-id70443 . -39) (undo-tree-id70444 . -39) (undo-tree-id70445 . -39) (undo-tree-id70446 . -39) (undo-tree-id70447 . -39) (undo-tree-id70448 . -39) (undo-tree-id70449 . -39) (undo-tree-id70450 . -39) (undo-tree-id70451 . -39) (undo-tree-id70452 . -39) (undo-tree-id70453 . -39) (undo-tree-id70454 . -39) (undo-tree-id70455 . -39) (undo-tree-id70456 . -39) (undo-tree-id70457 . -39) (undo-tree-id70458 . -39) (undo-tree-id70459 . -39) (undo-tree-id70460 . -39) (undo-tree-id70461 . -86) (undo-tree-id70462 . -86) (undo-tree-id70463 . -86) (undo-tree-id70464 . -86) (undo-tree-id70465 . -86) (undo-tree-id70466 . -86) (undo-tree-id70467 . -86) (undo-tree-id70468 . -86) (undo-tree-id70469 . -86) (undo-tree-id70470 . -86) (undo-tree-id70471 . -86) (undo-tree-id70472 . -86) (undo-tree-id70473 . -86) (undo-tree-id70474 . -86) (undo-tree-id70475 . -86) (undo-tree-id70476 . -86) (undo-tree-id70477 . -32) (undo-tree-id70478 . -32) (undo-tree-id70479 . -32) (undo-tree-id70480 . -32) (undo-tree-id70481 . -32) (undo-tree-id70482 . -32) (undo-tree-id70483 . -32) (undo-tree-id70484 . -32) (undo-tree-id70485 . -32) (undo-tree-id70486 . -32) (undo-tree-id70487 . -32) (undo-tree-id70488 . -32) (undo-tree-id70489 . -32) (undo-tree-id70490 . -32) (undo-tree-id70491 . -32) (undo-tree-id70492 . -32) (undo-tree-id70493 . -87)) ((6766 . 6853)) (25775 572 366420 111000) 0 nil] [nil nil ((#("was originally designed for language translation, it can be generalized to other tasks such as English const" 0 59 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 59 60 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 60 108 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6805) (undo-tree-id70276 . -107) (undo-tree-id70277 . -107) (undo-tree-id70278 . -107) (undo-tree-id70279 . -108) (undo-tree-id70280 . -107) (undo-tree-id70281 . -107) (undo-tree-id70282 . -108) 6912) ((6805 . 6913)) (25775 557 823099 159000) 0 nil])
([nil nil ((#("this " 0 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6766) (undo-tree-id71472 . -4) (undo-tree-id71473 . -5)) nil (25775 594 221788 860000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6766) (undo-tree-id70438 . -1) (undo-tree-id70439 . -2)) ((6766 . 6768)) (25775 572 365842 150000) 0 nil])
([nil nil ((6805 . 6806) (#("i" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6805) (undo-tree-id70273 . 1) (undo-tree-id70274 . 1) (undo-tree-id70275 . -1)) ((6805 . 6806) (#("w" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6805) (undo-tree-id70437 . 1)) (25775 557 821818 601000) 0 nil])
([nil nil ((6766 . 6767) (#("t" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6766)) nil (25775 594 221786 220000) 0 nil])
nil
nil
([nil nil ((#("was " 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6791) (undo-tree-id71449 . -3) (undo-tree-id71450 . -2) (undo-tree-id71451 . -2) (undo-tree-id71452 . -2) (undo-tree-id71453 . -2) (undo-tree-id71454 . -2) (undo-tree-id71455 . -2) (undo-tree-id71456 . -2) (undo-tree-id71457 . -2) (undo-tree-id71458 . -2) (undo-tree-id71459 . -2) (undo-tree-id71460 . -2) (undo-tree-id71461 . -2) (undo-tree-id71462 . -2) (undo-tree-id71463 . -2) (undo-tree-id71464 . -2) (undo-tree-id71465 . -2) (undo-tree-id71466 . -2) (undo-tree-id71467 . -2) (undo-tree-id71468 . -2) (undo-tree-id71469 . -2) (undo-tree-id71470 . -2) (undo-tree-id71471 . -4)) nil (25775 594 221784 649000) 0 nil])
([nil nil ((#("originally " 0 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6791) (undo-tree-id71447 . -10) (undo-tree-id71448 . -11)) nil (25775 594 221771 342000) 0 nil])
([nil nil ((#("designed " 0 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6791) (undo-tree-id71445 . -8) (undo-tree-id71446 . -9)) nil (25775 594 221769 555000) 0 nil])
([nil nil ((#("for " 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6791) (undo-tree-id71443 . -3) (undo-tree-id71444 . -4)) nil (25775 594 221767 742000) 0 nil])
([nil nil ((#("language " 0 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6791) (undo-tree-id71441 . -8) (undo-tree-id71442 . -9)) nil (25775 594 221765 977000) 0 nil])
([nil nil ((#("translation" 0 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6791) (undo-tree-id71423 . -10) (undo-tree-id71424 . -10) (undo-tree-id71425 . -10) (undo-tree-id71426 . -10) (undo-tree-id71427 . -10) (undo-tree-id71428 . -10) (undo-tree-id71429 . -10) (undo-tree-id71430 . -10) (undo-tree-id71431 . -10) (undo-tree-id71432 . -10) (undo-tree-id71433 . -10) (undo-tree-id71434 . -10) (undo-tree-id71435 . -10) (undo-tree-id71436 . -10) (undo-tree-id71437 . -10) (undo-tree-id71438 . -10) (undo-tree-id71439 . -10) (undo-tree-id71440 . -11)) nil (25775 594 221763 598000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6791) (undo-tree-id71421 . -1) (undo-tree-id71422 . -1)) nil (25775 594 221750 933000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6791) (undo-tree-id71419 . -1) (undo-tree-id71420 . -1)) nil (25775 594 221749 6000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6791) (undo-tree-id71417 . -1) (undo-tree-id71418 . -1)) nil (25775 594 221747 197000) 0 nil])
([nil nil ((#("t" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6791) (undo-tree-id71415 . -1) (undo-tree-id71416 . -1)) nil (25775 594 221744 758000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6791) (undo-tree-id71413 . -1) (undo-tree-id71414 . -1)) nil (25775 594 221742 186000) 0 nil])
([nil nil ((6764 . 7196) (#("- Later, we will discuss popular language models, such as BERT and GPT, which were derived from this original transformer architecture. Figure 16.6, which we adapted from the original transformer paper, illustrates the main architecture and components we will be discussing in this section:

- Transformer architecture can be generalized to other tasks such as English constituency parsing, text generation, and text classification." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 100 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 100 101 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 101 202 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 202 203 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 203 289 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 289 290 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 290 291 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 291 292 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 292 293 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 293 294 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 294 319 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 319 325 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 325 326 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 326 374 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 374 375 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 375 432 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 6764) (undo-tree-id70494 . -319) (undo-tree-id70495 . -319) (undo-tree-id70496 . -294) (undo-tree-id70497 . -294) (undo-tree-id70498 . 137) (undo-tree-id70499 . -294) (undo-tree-id70500 . -294) (undo-tree-id70501 . -432) (undo-tree-id70502 . -432) (undo-tree-id70503 . -432) (undo-tree-id70504 . -319) (undo-tree-id70505 . -319) (undo-tree-id70506 . -319) (undo-tree-id70507 . -319) (undo-tree-id70508 . -319) (undo-tree-id70509 . -319) (undo-tree-id70510 . -319) (undo-tree-id70511 . -319) (undo-tree-id70512 . -319) (undo-tree-id70513 . -319) (undo-tree-id70514 . -319) (undo-tree-id70515 . -319) (undo-tree-id70516 . -319) (undo-tree-id70517 . -319) (undo-tree-id70518 . -319) (undo-tree-id70519 . -319) (undo-tree-id70520 . -319) (undo-tree-id70521 . -319) (undo-tree-id70522 . -319) (undo-tree-id70523 . -319) (undo-tree-id70524 . -319) (undo-tree-id70525 . -319) (undo-tree-id70526 . -319) (undo-tree-id70527 . -319) (undo-tree-id70528 . -319) (undo-tree-id70529 . -319) (undo-tree-id70530 . -319) (undo-tree-id70531 . -319) (undo-tree-id70532 . -319) (undo-tree-id70533 . -319) (undo-tree-id70534 . -319) (undo-tree-id70535 . -319) (undo-tree-id70536 . -319) (undo-tree-id70537 . -319) (undo-tree-id70538 . -312) (undo-tree-id70539 . -312) (undo-tree-id70540 . -312) (undo-tree-id70541 . -312) (undo-tree-id70542 . -312) (undo-tree-id70543 . -312) (undo-tree-id70544 . -312) (undo-tree-id70545 . -312) (undo-tree-id70546 . -312) (undo-tree-id70547 . -312) (undo-tree-id70548 . -312) (undo-tree-id70549 . -312) (undo-tree-id70550 . -312) (undo-tree-id70551 . -312) (undo-tree-id70552 . -312) (undo-tree-id70553 . -312) (undo-tree-id70554 . -294) (undo-tree-id70555 . -294) (undo-tree-id70556 . -294) (undo-tree-id70557 . -294) (undo-tree-id70558 . -294) (undo-tree-id70559 . -294) (undo-tree-id70560 . -294) (undo-tree-id70561 . -294) (undo-tree-id70562 . -294) (undo-tree-id70563 . -294) (undo-tree-id70564 . -294) (undo-tree-id70565 . -294) (undo-tree-id70566 . -294) (undo-tree-id70567 . -294) (undo-tree-id70568 . -294) (undo-tree-id70569 . -294) (undo-tree-id70570 . -294) (undo-tree-id70571 . -294) (undo-tree-id70572 . -294) (undo-tree-id70573 . -294) (undo-tree-id70574 . -294) (undo-tree-id70575 . -294) (undo-tree-id70576 . -294) (undo-tree-id70577 . -294) (undo-tree-id70578 . -294) (undo-tree-id70579 . -294) (undo-tree-id70580 . -294) (undo-tree-id70581 . -294) (undo-tree-id70582 . -294) (undo-tree-id70583 . -294) (undo-tree-id70584 . -294) (undo-tree-id70585 . -294) (undo-tree-id70586 . -294) (undo-tree-id70587 . -294) (undo-tree-id70588 . -294) (undo-tree-id70589 . -294) (undo-tree-id70590 . -294) (undo-tree-id70591 . -294) (undo-tree-id70592 . -294) (undo-tree-id70593 . -294) (undo-tree-id70594 . -294) (undo-tree-id70595 . -294) (undo-tree-id70596 . -294) (undo-tree-id70597 . -294) (undo-tree-id70598 . -294) (undo-tree-id70599 . -294) (undo-tree-id70600 . -294) (undo-tree-id70601 . -294) (undo-tree-id70602 . -294) (undo-tree-id70603 . -294) (undo-tree-id70604 . -294) (undo-tree-id70605 . -294) (undo-tree-id70606 . -294) (undo-tree-id70607 . -294) (undo-tree-id70608 . -294) (undo-tree-id70609 . -294) (undo-tree-id70610 . -294) (undo-tree-id70611 . -294) (undo-tree-id70612 . -294) (undo-tree-id70613 . -294) (undo-tree-id70614 . -294) (undo-tree-id70615 . -294) (undo-tree-id70616 . -294) (undo-tree-id70617 . -294) (undo-tree-id70618 . -294) (undo-tree-id70619 . -294) (undo-tree-id70620 . -294) (undo-tree-id70621 . -294) (undo-tree-id70622 . -294) (undo-tree-id70623 . -294) (undo-tree-id70624 . -294) (undo-tree-id70625 . -294) (undo-tree-id70626 . -294) (undo-tree-id70627 . -294) (undo-tree-id70628 . -294) (undo-tree-id70629 . -294) (undo-tree-id70630 . -294) (undo-tree-id70631 . -294) (undo-tree-id70632 . -294) (undo-tree-id70633 . -294) (undo-tree-id70634 . -294) (undo-tree-id70635 . -294) (undo-tree-id70636 . -294) (undo-tree-id70637 . -294) (undo-tree-id70638 . -294) (undo-tree-id70639 . -294) (undo-tree-id70640 . -294) (undo-tree-id70641 . -294) (undo-tree-id70642 . -294) (undo-tree-id70643 . -294) (undo-tree-id70644 . -294) (undo-tree-id70645 . -294) (undo-tree-id70646 . -294) (undo-tree-id70647 . -294) (undo-tree-id70648 . -294) (undo-tree-id70649 . -294) (undo-tree-id70650 . -294) (undo-tree-id70651 . -294) (undo-tree-id70652 . -294) (undo-tree-id70653 . -294) (undo-tree-id70654 . -294) (undo-tree-id70655 . -294) (undo-tree-id70656 . -294) (undo-tree-id70657 . -294) (undo-tree-id70658 . -294) (undo-tree-id70659 . -294) (undo-tree-id70660 . -294) (undo-tree-id70661 . -294) (undo-tree-id70662 . -294) (undo-tree-id70663 . -294) (undo-tree-id70664 . -294) (undo-tree-id70665 . -294) (undo-tree-id70666 . -294) (undo-tree-id70667 . -294) (undo-tree-id70668 . -294) (undo-tree-id70669 . -294) (undo-tree-id70670 . -294) (undo-tree-id70671 . -294) (undo-tree-id70672 . -294) (undo-tree-id70673 . -294) (undo-tree-id70674 . -294) (undo-tree-id70675 . -294) (undo-tree-id70676 . -294) (undo-tree-id70677 . -294) (undo-tree-id70678 . -294) (undo-tree-id70679 . -294) (undo-tree-id70680 . -294) (undo-tree-id70681 . -294) (undo-tree-id70682 . -294) (undo-tree-id70683 . -294) (undo-tree-id70684 . -294) (undo-tree-id70685 . -294) (undo-tree-id70686 . -294) (undo-tree-id70687 . -294) (undo-tree-id70688 . -294) (undo-tree-id70689 . -294) (undo-tree-id70690 . -294) (undo-tree-id70691 . -294) (undo-tree-id70692 . -294) (undo-tree-id70693 . -294) (undo-tree-id70694 . -294) (undo-tree-id70695 . -294) (undo-tree-id70696 . -294) (undo-tree-id70697 . -294) (undo-tree-id70698 . -294) (undo-tree-id70699 . -294) (undo-tree-id70700 . -294) (undo-tree-id70701 . -294) (undo-tree-id70702 . -294) (undo-tree-id70703 . -294) (undo-tree-id70704 . -294) (undo-tree-id70705 . -294) (undo-tree-id70706 . -294) (undo-tree-id70707 . -294) (undo-tree-id70708 . -294) (undo-tree-id70709 . -294) (undo-tree-id70710 . -304) (undo-tree-id70711 . -304) (undo-tree-id70712 . -304) (undo-tree-id70713 . -304) (undo-tree-id70714 . -304) (undo-tree-id70715 . -304) (undo-tree-id70716 . -304) (undo-tree-id70717 . -304) (undo-tree-id70718 . -304) (undo-tree-id70719 . -304) (undo-tree-id70720 . -304) (undo-tree-id70721 . -304) (undo-tree-id70722 . -304) (undo-tree-id70723 . -304) (undo-tree-id70724 . -304) (undo-tree-id70725 . -304) (undo-tree-id70726 . -317) (undo-tree-id70727 . -317) (undo-tree-id70728 . -317) (undo-tree-id70729 . -317) (undo-tree-id70730 . -317) (undo-tree-id70731 . -317) (undo-tree-id70732 . -317) (undo-tree-id70733 . -317) (undo-tree-id70734 . -317) (undo-tree-id70735 . -317) (undo-tree-id70736 . -317) (undo-tree-id70737 . -317) (undo-tree-id70738 . -317) (undo-tree-id70739 . -317) (undo-tree-id70740 . -317) (undo-tree-id70741 . -317) (undo-tree-id70742 . -319) (undo-tree-id70743 . -319) (undo-tree-id70744 . -319) (undo-tree-id70745 . -319) (undo-tree-id70746 . -319) (undo-tree-id70747 . -319) (undo-tree-id70748 . -319) (undo-tree-id70749 . -319) (undo-tree-id70750 . -319) (undo-tree-id70751 . -319) (undo-tree-id70752 . -319) (undo-tree-id70753 . -319) (undo-tree-id70754 . -319) (undo-tree-id70755 . -319) (undo-tree-id70756 . -319) (undo-tree-id70757 . -319) (undo-tree-id70758 . -319) (undo-tree-id70759 . -319) (undo-tree-id70760 . -319) (undo-tree-id70761 . -319) (undo-tree-id70762 . -319) (undo-tree-id70763 . -319) (undo-tree-id70764 . -319) (undo-tree-id70765 . -319) (undo-tree-id70766 . -319) (undo-tree-id70767 . -319) (undo-tree-id70768 . -319) (undo-tree-id70769 . -319) (undo-tree-id70770 . -319) (undo-tree-id70771 . -319) (undo-tree-id70772 . -319) (undo-tree-id70773 . -319) (undo-tree-id70774 . -319) (undo-tree-id70775 . -319) (undo-tree-id70776 . -319) (undo-tree-id70777 . -319) (undo-tree-id70778 . -319) (undo-tree-id70779 . -319) (undo-tree-id70780 . -319) (undo-tree-id70781 . -319) (undo-tree-id70782 . -319) (undo-tree-id70783 . -319) (undo-tree-id70784 . -319) (undo-tree-id70785 . -319) (undo-tree-id70786 . -319) (undo-tree-id70787 . -319) (undo-tree-id70788 . -319) (undo-tree-id70789 . -319) (undo-tree-id70790 . -319) (undo-tree-id70791 . -319) (undo-tree-id70792 . -319) (undo-tree-id70793 . -319) (undo-tree-id70794 . -319) (undo-tree-id70795 . -319) (undo-tree-id70796 . -319) (undo-tree-id70797 . -319) (undo-tree-id70798 . -319) (undo-tree-id70799 . -319) (undo-tree-id70800 . -319) (undo-tree-id70801 . -319) (undo-tree-id70802 . -319) (undo-tree-id70803 . -319) (undo-tree-id70804 . -319) (undo-tree-id70805 . -319) (undo-tree-id70806 . -319) (undo-tree-id70807 . -319) (undo-tree-id70808 . -319) (undo-tree-id70809 . -319) (undo-tree-id70810 . -319) (undo-tree-id70811 . -319) (undo-tree-id70812 . -319) (undo-tree-id70813 . -319) (undo-tree-id70814 . -319) (undo-tree-id70815 . -319) (undo-tree-id70816 . -319) (undo-tree-id70817 . -319) (undo-tree-id70818 . -319) (undo-tree-id70819 . -319) (undo-tree-id70820 . -319) (undo-tree-id70821 . -319) (undo-tree-id70822 . -319) (undo-tree-id70823 . -319) (undo-tree-id70824 . -319) (undo-tree-id70825 . -319) (undo-tree-id70826 . -319) (undo-tree-id70827 . -319) (undo-tree-id70828 . -319) (undo-tree-id70829 . -319) (undo-tree-id70830 . -319) (undo-tree-id70831 . -319) (undo-tree-id70832 . -319) (undo-tree-id70833 . -319) (undo-tree-id70834 . -319) (undo-tree-id70835 . -319) (undo-tree-id70836 . -319) (undo-tree-id70837 . -319) (undo-tree-id70838 . -319) (undo-tree-id70839 . -319) (undo-tree-id70840 . -319) (undo-tree-id70841 . -319) (undo-tree-id70842 . -319) (undo-tree-id70843 . -319) (undo-tree-id70844 . -319) (undo-tree-id70845 . -319) (undo-tree-id70846 . -319) (undo-tree-id70847 . -319) (undo-tree-id70848 . -319) (undo-tree-id70849 . -319) (undo-tree-id70850 . -319) (undo-tree-id70851 . -319) (undo-tree-id70852 . -319) (undo-tree-id70853 . -319) (undo-tree-id70854 . -319) (undo-tree-id70855 . -319) (undo-tree-id70856 . -319) (undo-tree-id70857 . -319) (undo-tree-id70858 . -319) (undo-tree-id70859 . -319) (undo-tree-id70860 . -319) (undo-tree-id70861 . -319) (undo-tree-id70862 . -319) (undo-tree-id70863 . -319) (undo-tree-id70864 . -319) (undo-tree-id70865 . -319) (undo-tree-id70866 . -319) (undo-tree-id70867 . -319) (undo-tree-id70868 . -319) (undo-tree-id70869 . -319) (undo-tree-id70870 . -319) (undo-tree-id70871 . -319) (undo-tree-id70872 . -319) (undo-tree-id70873 . -319) (undo-tree-id70874 . -319) (undo-tree-id70875 . -319) (undo-tree-id70876 . -319) (undo-tree-id70877 . -319) (undo-tree-id70878 . -319) (undo-tree-id70879 . -319) (undo-tree-id70880 . -319) (undo-tree-id70881 . -319) (undo-tree-id70882 . -319) (undo-tree-id70883 . -319) (undo-tree-id70884 . -319) (undo-tree-id70885 . -319) (undo-tree-id70886 . -319) (undo-tree-id70887 . -319) (undo-tree-id70888 . -319) (undo-tree-id70889 . -319) (undo-tree-id70890 . -319) (undo-tree-id70891 . -319) (undo-tree-id70892 . -319) (undo-tree-id70893 . -319) (undo-tree-id70894 . -319) (undo-tree-id70895 . -319) (undo-tree-id70896 . -319) (undo-tree-id70897 . -319) (undo-tree-id70898 . -319) (undo-tree-id70899 . -319) (undo-tree-id70900 . -319) (undo-tree-id70901 . -319) (undo-tree-id70902 . -319) (undo-tree-id70903 . -319) (undo-tree-id70904 . -319) (undo-tree-id70905 . -319) (undo-tree-id70906 . -319) (undo-tree-id70907 . -319) (undo-tree-id70908 . -319) (undo-tree-id70909 . -319) (undo-tree-id70910 . -319) (undo-tree-id70911 . -319) (undo-tree-id70912 . -319) (undo-tree-id70913 . -319) (undo-tree-id70914 . -319) (undo-tree-id70915 . -319) (undo-tree-id70916 . -319) (undo-tree-id70917 . -319) (undo-tree-id70918 . -319) (undo-tree-id70919 . -319) (undo-tree-id70920 . -319) (undo-tree-id70921 . -319) (undo-tree-id70922 . -319) (undo-tree-id70923 . -319) (undo-tree-id70924 . -319) (undo-tree-id70925 . -319) (undo-tree-id70926 . -319) (undo-tree-id70927 . -319) (undo-tree-id70928 . -319) (undo-tree-id70929 . -319) (undo-tree-id70930 . -319) (undo-tree-id70931 . -319) (undo-tree-id70932 . -319) (undo-tree-id70933 . -319) (undo-tree-id70934 . -319) (undo-tree-id70935 . -319) (undo-tree-id70936 . -319) (undo-tree-id70937 . -319) (undo-tree-id70938 . -319) (undo-tree-id70939 . -319) (undo-tree-id70940 . -319) (undo-tree-id70941 . -319) (undo-tree-id70942 . -319) (undo-tree-id70943 . -319) (undo-tree-id70944 . -319) (undo-tree-id70945 . -319) (undo-tree-id70946 . -319) (undo-tree-id70947 . -319) (undo-tree-id70948 . -319) (undo-tree-id70949 . -319) (undo-tree-id70950 . -319) (undo-tree-id70951 . -319) (undo-tree-id70952 . -319) (undo-tree-id70953 . -319) (undo-tree-id70954 . -319) (undo-tree-id70955 . -319) (undo-tree-id70956 . -319) (undo-tree-id70957 . -319) (undo-tree-id70958 . -319) (undo-tree-id70959 . -319) (undo-tree-id70960 . -319) (undo-tree-id70961 . -319) (undo-tree-id70962 . -319) (undo-tree-id70963 . -319) (undo-tree-id70964 . -319) (undo-tree-id70965 . -319) (undo-tree-id70966 . -319) (undo-tree-id70967 . -319) (undo-tree-id70968 . -319) (undo-tree-id70969 . -319) (undo-tree-id70970 . -319) (undo-tree-id70971 . -319) (undo-tree-id70972 . -319) (undo-tree-id70973 . -319) (undo-tree-id70974 . -319) (undo-tree-id70975 . -319) (undo-tree-id70976 . -319) (undo-tree-id70977 . -319) (undo-tree-id70978 . -319) (undo-tree-id70979 . -319) (undo-tree-id70980 . -319) (undo-tree-id70981 . -319) (undo-tree-id70982 . -319) (undo-tree-id70983 . -319) (undo-tree-id70984 . -319) (undo-tree-id70985 . -319) (undo-tree-id70986 . -319) (undo-tree-id70987 . -319) (undo-tree-id70988 . -319) (undo-tree-id70989 . -319) (undo-tree-id70990 . -319) (undo-tree-id70991 . -319) (undo-tree-id70992 . -319) (undo-tree-id70993 . -319) (undo-tree-id70994 . -319) (undo-tree-id70995 . -319) (undo-tree-id70996 . -319) (undo-tree-id70997 . -319) (undo-tree-id70998 . -319) (undo-tree-id70999 . -319) (undo-tree-id71000 . -319) (undo-tree-id71001 . -319) (undo-tree-id71002 . -319) (undo-tree-id71003 . -319) (undo-tree-id71004 . -319) (undo-tree-id71005 . -319) (undo-tree-id71006 . -319) (undo-tree-id71007 . -319) (undo-tree-id71008 . -319) (undo-tree-id71009 . -319) (undo-tree-id71010 . -319) (undo-tree-id71011 . -319) (undo-tree-id71012 . -319) (undo-tree-id71013 . -319) (undo-tree-id71014 . -319) (undo-tree-id71015 . -319) (undo-tree-id71016 . -319) (undo-tree-id71017 . -319) (undo-tree-id71018 . -319) (undo-tree-id71019 . -319) (undo-tree-id71020 . -319) (undo-tree-id71021 . -319) (undo-tree-id71022 . -319) (undo-tree-id71023 . -319) (undo-tree-id71024 . -319) (undo-tree-id71025 . -319) (undo-tree-id71026 . -319) (undo-tree-id71027 . -319) (undo-tree-id71028 . -319) (undo-tree-id71029 . -319) (undo-tree-id71030 . -319) (undo-tree-id71031 . -321) (undo-tree-id71032 . -321) (undo-tree-id71033 . -321) (undo-tree-id71034 . -321) (undo-tree-id71035 . -321) (undo-tree-id71036 . -321) (undo-tree-id71037 . -321) (undo-tree-id71038 . -321) (undo-tree-id71039 . -321) (undo-tree-id71040 . -321) (undo-tree-id71041 . -321) (undo-tree-id71042 . -321) (undo-tree-id71043 . -321) (undo-tree-id71044 . -321) (undo-tree-id71045 . -321) (undo-tree-id71046 . -321) (undo-tree-id71047 . -324) (undo-tree-id71048 . -324) (undo-tree-id71049 . -324) (undo-tree-id71050 . -324) (undo-tree-id71051 . -324) (undo-tree-id71052 . -324) (undo-tree-id71053 . -324) (undo-tree-id71054 . -324) (undo-tree-id71055 . -324) (undo-tree-id71056 . -324) (undo-tree-id71057 . -324) (undo-tree-id71058 . -324) (undo-tree-id71059 . -324) (undo-tree-id71060 . -324) (undo-tree-id71061 . -324) (undo-tree-id71062 . -324) (undo-tree-id71063 . -336) (undo-tree-id71064 . -336) (undo-tree-id71065 . -336) (undo-tree-id71066 . -336) (undo-tree-id71067 . -336) (undo-tree-id71068 . -336) (undo-tree-id71069 . -336) (undo-tree-id71070 . -336) (undo-tree-id71071 . -336) (undo-tree-id71072 . -336) (undo-tree-id71073 . -336) (undo-tree-id71074 . -336) (undo-tree-id71075 . -336) (undo-tree-id71076 . -336) (undo-tree-id71077 . -336) (undo-tree-id71078 . -336) (undo-tree-id71079 . -339) (undo-tree-id71080 . -339) (undo-tree-id71081 . -339) (undo-tree-id71082 . -339) (undo-tree-id71083 . -339) (undo-tree-id71084 . -339) (undo-tree-id71085 . -339) (undo-tree-id71086 . -339) (undo-tree-id71087 . -339) (undo-tree-id71088 . -339) (undo-tree-id71089 . -339) (undo-tree-id71090 . -339) (undo-tree-id71091 . -339) (undo-tree-id71092 . -339) (undo-tree-id71093 . -339) (undo-tree-id71094 . -339) (undo-tree-id71095 . -339) (undo-tree-id71096 . -339) (undo-tree-id71097 . -339) (undo-tree-id71098 . -339) (undo-tree-id71099 . -339) (undo-tree-id71100 . -345) (undo-tree-id71101 . -345) (undo-tree-id71102 . -345) (undo-tree-id71103 . -345) (undo-tree-id71104 . -345) (undo-tree-id71105 . -345) (undo-tree-id71106 . -345) (undo-tree-id71107 . -345) (undo-tree-id71108 . -345) (undo-tree-id71109 . -345) (undo-tree-id71110 . -345) (undo-tree-id71111 . -345) (undo-tree-id71112 . -345) (undo-tree-id71113 . -345) (undo-tree-id71114 . -345) (undo-tree-id71115 . -345) (undo-tree-id71116 . -351) (undo-tree-id71117 . -351) (undo-tree-id71118 . -351) (undo-tree-id71119 . -351) (undo-tree-id71120 . -351) (undo-tree-id71121 . -351) (undo-tree-id71122 . -351) (undo-tree-id71123 . -351) (undo-tree-id71124 . -351) (undo-tree-id71125 . -351) (undo-tree-id71126 . -351) (undo-tree-id71127 . -351) (undo-tree-id71128 . -351) (undo-tree-id71129 . -351) (undo-tree-id71130 . -351) (undo-tree-id71131 . -351) (undo-tree-id71132 . -351) (undo-tree-id71133 . -351) (undo-tree-id71134 . -351) (undo-tree-id71135 . -351) (undo-tree-id71136 . -351) (undo-tree-id71137 . -351) (undo-tree-id71138 . -351) (undo-tree-id71139 . -351) (undo-tree-id71140 . -351) (undo-tree-id71141 . -351) (undo-tree-id71142 . -353) (undo-tree-id71143 . -353) (undo-tree-id71144 . -353) (undo-tree-id71145 . -353) (undo-tree-id71146 . -353) (undo-tree-id71147 . -353) (undo-tree-id71148 . -353) (undo-tree-id71149 . -353) (undo-tree-id71150 . -353) (undo-tree-id71151 . -353) (undo-tree-id71152 . -353) (undo-tree-id71153 . -353) (undo-tree-id71154 . -353) (undo-tree-id71155 . -353) (undo-tree-id71156 . -353) (undo-tree-id71157 . -353) (undo-tree-id71158 . -358) (undo-tree-id71159 . -358) (undo-tree-id71160 . -358) (undo-tree-id71161 . -358) (undo-tree-id71162 . -358) (undo-tree-id71163 . -358) (undo-tree-id71164 . -358) (undo-tree-id71165 . -358) (undo-tree-id71166 . -358) (undo-tree-id71167 . -358) (undo-tree-id71168 . -358) (undo-tree-id71169 . -358) (undo-tree-id71170 . -358) (undo-tree-id71171 . -358) (undo-tree-id71172 . -358) (undo-tree-id71173 . -358) (undo-tree-id71174 . -359) (undo-tree-id71175 . -359) (undo-tree-id71176 . -359) (undo-tree-id71177 . -359) (undo-tree-id71178 . -359) (undo-tree-id71179 . -359) (undo-tree-id71180 . -359) (undo-tree-id71181 . -359) (undo-tree-id71182 . -359) (undo-tree-id71183 . -359) (undo-tree-id71184 . -359) (undo-tree-id71185 . -359) (undo-tree-id71186 . -359) (undo-tree-id71187 . -359) (undo-tree-id71188 . -359) (undo-tree-id71189 . -359) (undo-tree-id71190 . -367) (undo-tree-id71191 . -367) (undo-tree-id71192 . -367) (undo-tree-id71193 . -367) (undo-tree-id71194 . -367) (undo-tree-id71195 . -367) (undo-tree-id71196 . -367) (undo-tree-id71197 . -367) (undo-tree-id71198 . -367) (undo-tree-id71199 . -367) (undo-tree-id71200 . -367) (undo-tree-id71201 . -367) (undo-tree-id71202 . -367) (undo-tree-id71203 . -367) (undo-tree-id71204 . -367) (undo-tree-id71205 . -367) (undo-tree-id71206 . -380) (undo-tree-id71207 . -380) (undo-tree-id71208 . -380) (undo-tree-id71209 . -380) (undo-tree-id71210 . -380) (undo-tree-id71211 . -380) (undo-tree-id71212 . -380) (undo-tree-id71213 . -380) (undo-tree-id71214 . -380) (undo-tree-id71215 . -380) (undo-tree-id71216 . -380) (undo-tree-id71217 . -380) (undo-tree-id71218 . -380) (undo-tree-id71219 . -380) (undo-tree-id71220 . -380) (undo-tree-id71221 . -380) (undo-tree-id71222 . -388) (undo-tree-id71223 . -388) (undo-tree-id71224 . -388) (undo-tree-id71225 . -388) (undo-tree-id71226 . -388) (undo-tree-id71227 . -388) (undo-tree-id71228 . -388) (undo-tree-id71229 . -388) (undo-tree-id71230 . -388) (undo-tree-id71231 . -388) (undo-tree-id71232 . -388) (undo-tree-id71233 . -388) (undo-tree-id71234 . -388) (undo-tree-id71235 . -388) (undo-tree-id71236 . -388) (undo-tree-id71237 . -388) (undo-tree-id71238 . -389) (undo-tree-id71239 . -389) (undo-tree-id71240 . -389) (undo-tree-id71241 . -389) (undo-tree-id71242 . -389) (undo-tree-id71243 . -389) (undo-tree-id71244 . -389) (undo-tree-id71245 . -389) (undo-tree-id71246 . -389) (undo-tree-id71247 . -389) (undo-tree-id71248 . -389) (undo-tree-id71249 . -389) (undo-tree-id71250 . -389) (undo-tree-id71251 . -389) (undo-tree-id71252 . -389) (undo-tree-id71253 . -389) (undo-tree-id71254 . -394) (undo-tree-id71255 . -394) (undo-tree-id71256 . -394) (undo-tree-id71257 . -394) (undo-tree-id71258 . -394) (undo-tree-id71259 . -394) (undo-tree-id71260 . -394) (undo-tree-id71261 . -394) (undo-tree-id71262 . -394) (undo-tree-id71263 . -394) (undo-tree-id71264 . -394) (undo-tree-id71265 . -394) (undo-tree-id71266 . -394) (undo-tree-id71267 . -394) (undo-tree-id71268 . -394) (undo-tree-id71269 . -394) (undo-tree-id71270 . -405) (undo-tree-id71271 . -405) (undo-tree-id71272 . -405) (undo-tree-id71273 . -405) (undo-tree-id71274 . -405) (undo-tree-id71275 . -405) (undo-tree-id71276 . -405) (undo-tree-id71277 . -405) (undo-tree-id71278 . -405) (undo-tree-id71279 . -405) (undo-tree-id71280 . -405) (undo-tree-id71281 . -405) (undo-tree-id71282 . -405) (undo-tree-id71283 . -405) (undo-tree-id71284 . -405) (undo-tree-id71285 . -405) (undo-tree-id71286 . -406) (undo-tree-id71287 . -406) (undo-tree-id71288 . -406) (undo-tree-id71289 . -406) (undo-tree-id71290 . -406) (undo-tree-id71291 . -406) (undo-tree-id71292 . -406) (undo-tree-id71293 . -406) (undo-tree-id71294 . -406) (undo-tree-id71295 . -406) (undo-tree-id71296 . -406) (undo-tree-id71297 . -406) (undo-tree-id71298 . -406) (undo-tree-id71299 . -406) (undo-tree-id71300 . -406) (undo-tree-id71301 . -406) (undo-tree-id71302 . -410) (undo-tree-id71303 . -410) (undo-tree-id71304 . -410) (undo-tree-id71305 . -410) (undo-tree-id71306 . -410) (undo-tree-id71307 . -410) (undo-tree-id71308 . -410) (undo-tree-id71309 . -410) (undo-tree-id71310 . -410) (undo-tree-id71311 . -410) (undo-tree-id71312 . -410) (undo-tree-id71313 . -410) (undo-tree-id71314 . -410) (undo-tree-id71315 . -410) (undo-tree-id71316 . -410) (undo-tree-id71317 . -410) (undo-tree-id71318 . -415) (undo-tree-id71319 . -415) (undo-tree-id71320 . -415) (undo-tree-id71321 . -415) (undo-tree-id71322 . -415) (undo-tree-id71323 . -415) (undo-tree-id71324 . -415) (undo-tree-id71325 . -415) (undo-tree-id71326 . -415) (undo-tree-id71327 . -415) (undo-tree-id71328 . -415) (undo-tree-id71329 . -415) (undo-tree-id71330 . -415) (undo-tree-id71331 . -415) (undo-tree-id71332 . -415) (undo-tree-id71333 . -415) (undo-tree-id71334 . -430) (undo-tree-id71335 . -430) (undo-tree-id71336 . -430) (undo-tree-id71337 . -430) (undo-tree-id71338 . -430) (undo-tree-id71339 . -430) (undo-tree-id71340 . -430) (undo-tree-id71341 . -430) (undo-tree-id71342 . -430) (undo-tree-id71343 . -430) (undo-tree-id71344 . -430) (undo-tree-id71345 . -430) (undo-tree-id71346 . -430) (undo-tree-id71347 . -430) (undo-tree-id71348 . -430) (undo-tree-id71349 . -430) (undo-tree-id71350 . -430) (undo-tree-id71351 . -430) (undo-tree-id71352 . -430) (undo-tree-id71353 . -430) (undo-tree-id71354 . -430) (undo-tree-id71355 . -430) (undo-tree-id71356 . -430) (undo-tree-id71357 . -430) (undo-tree-id71358 . -430) (undo-tree-id71359 . -430) (undo-tree-id71360 . -431) (undo-tree-id71361 . -431) (undo-tree-id71362 . -431) (undo-tree-id71363 . -431) (undo-tree-id71364 . -431) (undo-tree-id71365 . -431) (undo-tree-id71366 . -431) (undo-tree-id71367 . -431) (undo-tree-id71368 . -431) (undo-tree-id71369 . -431) (undo-tree-id71370 . -431) (undo-tree-id71371 . -431) (undo-tree-id71372 . -431) (undo-tree-id71373 . -431) (undo-tree-id71374 . -431) (undo-tree-id71375 . -431) (undo-tree-id71376 . -431) (undo-tree-id71377 . -431) (undo-tree-id71378 . -431) (undo-tree-id71379 . -431) (undo-tree-id71380 . -431) (undo-tree-id71381 . -431) (undo-tree-id71382 . -431) (undo-tree-id71383 . -431) (undo-tree-id71384 . -431) (undo-tree-id71385 . -431) (undo-tree-id71386 . -432) (undo-tree-id71387 . -432) (undo-tree-id71388 . -432) (undo-tree-id71389 . -432) (undo-tree-id71390 . -432) (undo-tree-id71391 . -432) (undo-tree-id71392 . -432) (undo-tree-id71393 . -432) (undo-tree-id71394 . -432) (undo-tree-id71395 . -432) (undo-tree-id71396 . -432) (undo-tree-id71397 . -432) (undo-tree-id71398 . -432) (undo-tree-id71399 . -432) (undo-tree-id71400 . -432) (undo-tree-id71401 . -432) (undo-tree-id71402 . -432) (undo-tree-id71403 . -432) (undo-tree-id71404 . -432) (undo-tree-id71405 . -432) (undo-tree-id71406 . -432) (undo-tree-id71407 . -432) (undo-tree-id71408 . -432) (undo-tree-id71409 . -432) (undo-tree-id71410 . -292) (6764 . 7056) (#(" Later, we will discuss popular language models, such as BERT and GPT, which were derived from this original transformer architecture. Figure 16.6, which we adapted from the original transformer paper, illustrates the main architecture and components we will be discussing in this section:" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 99 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 99 100 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 100 201 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 201 202 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 202 288 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 288 289 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 6904) (undo-tree-id71411 . -289) (undo-tree-id71412 . -289)) nil (25775 594 221707 332000) 0 nil])
([nil nil ((#("Later, we will discuss popular language models, such as BERT and GPT, which were derived from this original transformer architecture" 0 98 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 98 99 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 99 132 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6908) (undo-tree-id71719 . 132) (undo-tree-id71720 . -131) (undo-tree-id71721 . -4) (undo-tree-id71722 . -4) (undo-tree-id71723 . -4) (undo-tree-id71724 . -4) (undo-tree-id71725 . -4) (undo-tree-id71726 . -4) (undo-tree-id71727 . -4) (undo-tree-id71728 . -4) (undo-tree-id71729 . -4) (undo-tree-id71730 . -4) (undo-tree-id71731 . -4) (undo-tree-id71732 . -4) (undo-tree-id71733 . -4) (undo-tree-id71734 . -4) (undo-tree-id71735 . -4) (undo-tree-id71736 . -4) (undo-tree-id71737 . -4) (undo-tree-id71738 . -4) (undo-tree-id71739 . -4) (undo-tree-id71740 . -4) (undo-tree-id71741 . -4) (undo-tree-id71742 . -5) (undo-tree-id71743 . -5) (undo-tree-id71744 . -5) (undo-tree-id71745 . -5) (undo-tree-id71746 . -5) (undo-tree-id71747 . -5) (undo-tree-id71748 . -5) (undo-tree-id71749 . -5) (undo-tree-id71750 . -5) (undo-tree-id71751 . -5) (undo-tree-id71752 . -5) (undo-tree-id71753 . -5) (undo-tree-id71754 . -5) (undo-tree-id71755 . -5) (undo-tree-id71756 . -5) (undo-tree-id71757 . -5) (undo-tree-id71758 . -5) (undo-tree-id71759 . -5) (undo-tree-id71760 . -5) (undo-tree-id71761 . -5) (undo-tree-id71762 . -5) (undo-tree-id71763 . -132) (t 25775 594 293174 24000)) nil (25775 609 784874 654000) 0 nil])
([nil nil ((#("- . Figure 16.6, which we adapted from the original transformer paper, illustrates the main architecture and components we will be discussing in this section:
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 70 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 70 71 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 71 157 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 157 158 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 158 159 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 6906) (undo-tree-id71492 . 157) (undo-tree-id71493 . -158) (undo-tree-id71494 . 1) (undo-tree-id71495 . -1) (undo-tree-id71496 . -2) (undo-tree-id71497 . -1) (undo-tree-id71498 . -1) (undo-tree-id71499 . -1) (undo-tree-id71500 . -1) (undo-tree-id71501 . -1) (undo-tree-id71502 . -1) (undo-tree-id71503 . -1) (undo-tree-id71504 . -1) (undo-tree-id71505 . -1) (undo-tree-id71506 . -1) (undo-tree-id71507 . -1) (undo-tree-id71508 . -1) (undo-tree-id71509 . -1) (undo-tree-id71510 . -1) (undo-tree-id71511 . -1) (undo-tree-id71512 . -1) (undo-tree-id71513 . -1) (undo-tree-id71514 . -1) (undo-tree-id71515 . -1) (undo-tree-id71516 . -1) (undo-tree-id71517 . -1) (undo-tree-id71518 . -1) (undo-tree-id71519 . -1) (undo-tree-id71520 . -1) (undo-tree-id71521 . -1) (undo-tree-id71522 . -1) (undo-tree-id71523 . -1) (undo-tree-id71524 . -1) (undo-tree-id71525 . -1) (undo-tree-id71526 . -2) (undo-tree-id71527 . -2) (undo-tree-id71528 . -2) (undo-tree-id71529 . -2) (undo-tree-id71530 . -2) (undo-tree-id71531 . -2) (undo-tree-id71532 . -2) (undo-tree-id71533 . -2) (undo-tree-id71534 . -2) (undo-tree-id71535 . -2) (undo-tree-id71536 . -2) (undo-tree-id71537 . -2) (undo-tree-id71538 . -2) (undo-tree-id71539 . -2) (undo-tree-id71540 . -2) (undo-tree-id71541 . -2) (undo-tree-id71542 . -2) (undo-tree-id71543 . -2) (undo-tree-id71544 . -2) (undo-tree-id71545 . -2) (undo-tree-id71546 . -2) (undo-tree-id71547 . -2) (undo-tree-id71548 . -2) (undo-tree-id71549 . -2) (undo-tree-id71550 . -2) (undo-tree-id71551 . -2) (undo-tree-id71552 . -2) (undo-tree-id71553 . -2) (undo-tree-id71554 . -2) (undo-tree-id71555 . -2) (undo-tree-id71556 . -2) (undo-tree-id71557 . -2) (undo-tree-id71558 . -2) (undo-tree-id71559 . -2) (undo-tree-id71560 . -2) (undo-tree-id71561 . -2) (undo-tree-id71562 . -2) (undo-tree-id71563 . -2) (undo-tree-id71564 . -2) (undo-tree-id71565 . -2) (undo-tree-id71566 . -2) (undo-tree-id71567 . -2) (undo-tree-id71568 . -2) (undo-tree-id71569 . -2) (undo-tree-id71570 . -2) (undo-tree-id71571 . -2) (undo-tree-id71572 . -2) (undo-tree-id71573 . -2) (undo-tree-id71574 . -2) (undo-tree-id71575 . -2) (undo-tree-id71576 . -2) (undo-tree-id71577 . -2) (undo-tree-id71578 . -2) (undo-tree-id71579 . -2) (undo-tree-id71580 . -2) (undo-tree-id71581 . -2) (undo-tree-id71582 . -2) (undo-tree-id71583 . -2) (undo-tree-id71584 . -2) (undo-tree-id71585 . -2) (undo-tree-id71586 . -2) (undo-tree-id71587 . -2) (undo-tree-id71588 . -2) (undo-tree-id71589 . -2) (undo-tree-id71590 . -2) (undo-tree-id71591 . -2) (undo-tree-id71592 . -2) (undo-tree-id71593 . -2) (undo-tree-id71594 . -2) (undo-tree-id71595 . -2) (undo-tree-id71596 . -2) (undo-tree-id71597 . -2) (undo-tree-id71598 . -2) (undo-tree-id71599 . -2) (undo-tree-id71600 . -2) (undo-tree-id71601 . -2) (undo-tree-id71602 . -2) (undo-tree-id71603 . -2) (undo-tree-id71604 . -2) (undo-tree-id71605 . -2) (undo-tree-id71606 . -2) (undo-tree-id71607 . -2) (undo-tree-id71608 . -2) (undo-tree-id71609 . -2) (undo-tree-id71610 . -2) (undo-tree-id71611 . -2) (undo-tree-id71612 . -2) (undo-tree-id71613 . -2) (undo-tree-id71614 . -2) (undo-tree-id71615 . -2) (undo-tree-id71616 . -2) (undo-tree-id71617 . -2) (undo-tree-id71618 . -2) (undo-tree-id71619 . -2) (undo-tree-id71620 . -2) (undo-tree-id71621 . -2) (undo-tree-id71622 . -2) (undo-tree-id71623 . -2) (undo-tree-id71624 . -2) (undo-tree-id71625 . -2) (undo-tree-id71626 . -2) (undo-tree-id71627 . -2) (undo-tree-id71628 . -2) (undo-tree-id71629 . -2) (undo-tree-id71630 . -2) (undo-tree-id71631 . -2) (undo-tree-id71632 . -2) (undo-tree-id71633 . -2) (undo-tree-id71634 . -2) (undo-tree-id71635 . -2) (undo-tree-id71636 . -2) (undo-tree-id71637 . -2) (undo-tree-id71638 . -2) (undo-tree-id71639 . -2) (undo-tree-id71640 . -2) (undo-tree-id71641 . -2) (undo-tree-id71642 . -2) (undo-tree-id71643 . -2) (undo-tree-id71644 . -2) (undo-tree-id71645 . -2) (undo-tree-id71646 . -2) (undo-tree-id71647 . -2) (undo-tree-id71648 . -2) (undo-tree-id71649 . -2) (undo-tree-id71650 . -2) (undo-tree-id71651 . -2) (undo-tree-id71652 . -2) (undo-tree-id71653 . -2) (undo-tree-id71654 . -2) (undo-tree-id71655 . -2) (undo-tree-id71656 . -2) (undo-tree-id71657 . -2) (undo-tree-id71658 . -2) (undo-tree-id71659 . -2) (undo-tree-id71660 . -2) (undo-tree-id71661 . -2) (undo-tree-id71662 . -2) (undo-tree-id71663 . -2) (undo-tree-id71664 . -2) (undo-tree-id71665 . -2) (undo-tree-id71666 . -2) (undo-tree-id71667 . -2) (undo-tree-id71668 . -2) (undo-tree-id71669 . -2) (undo-tree-id71670 . -2) (undo-tree-id71671 . -2) (undo-tree-id71672 . -2) (undo-tree-id71673 . -2) (undo-tree-id71674 . -2) (undo-tree-id71675 . -2) (undo-tree-id71676 . -2) (undo-tree-id71677 . -2) (undo-tree-id71678 . -2) (undo-tree-id71679 . -2) (undo-tree-id71680 . -2) (undo-tree-id71681 . -2) (undo-tree-id71682 . -2) (undo-tree-id71683 . -2) (undo-tree-id71684 . -2) (undo-tree-id71685 . -2) (undo-tree-id71686 . -2) (undo-tree-id71687 . -2) (undo-tree-id71688 . -2) (undo-tree-id71689 . -2) (undo-tree-id71690 . -2) (undo-tree-id71691 . -2) (undo-tree-id71692 . -2) (undo-tree-id71693 . -2) (undo-tree-id71694 . -2) (undo-tree-id71695 . -2) (undo-tree-id71696 . -2) (undo-tree-id71697 . -2) (undo-tree-id71698 . -2) (undo-tree-id71699 . -2) (undo-tree-id71700 . -2) (undo-tree-id71701 . -2) (undo-tree-id71702 . -2) (undo-tree-id71703 . -2) (undo-tree-id71704 . -2) (undo-tree-id71705 . -2) (undo-tree-id71706 . -2) (undo-tree-id71707 . -2) (undo-tree-id71708 . -2) (undo-tree-id71709 . -2) (undo-tree-id71710 . -2) (undo-tree-id71711 . -2) (undo-tree-id71712 . -2) (undo-tree-id71713 . -2) (undo-tree-id71714 . -2) (undo-tree-id71715 . -2) (undo-tree-id71716 . -2) (undo-tree-id71717 . -2) (undo-tree-id71718 . -159) 6908) nil (25775 609 784814 276000) 0 nil])
([nil nil ((6906 . 6908)) nil (25775 609 783951 380000) 0 nil])
([nil nil ((6907 . 6908) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 6907) (undo-tree-id71476 . -1) (undo-tree-id71477 . -1) (undo-tree-id71478 . -1) (undo-tree-id71479 . -1) (undo-tree-id71480 . -1) (undo-tree-id71481 . -1) (undo-tree-id71482 . -1) (undo-tree-id71483 . -1) (undo-tree-id71484 . -1) (undo-tree-id71485 . -1) (undo-tree-id71486 . -1) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -6908) (undo-tree-id71487 . 1) (undo-tree-id71488 . 1) (undo-tree-id71489 . -1) (undo-tree-id71490 . -1) (undo-tree-id71491 . -1) 6907) nil (25775 609 783910 295000) 0 nil])
([nil nil ((#("In the following subsections, we go over this original transformer model step by step, by decompos- ing it into two main blocks: an encoder and a decoder" 0 99 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 99 100 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 100 153 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6908) (undo-tree-id71768 . 153) (undo-tree-id71769 . -152) (undo-tree-id71770 . 153) (undo-tree-id71771 . 63) (undo-tree-id71772 . -98) (undo-tree-id71773 . -153) (t 25775 609 861436 688000)) nil (25775 618 811108 322000) 0 nil])
([nil nil ((#(". " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 6908) (undo-tree-id71764 . 2) (undo-tree-id71765 . -1) (undo-tree-id71766 . 2) (undo-tree-id71767 . -2)) nil (25775 618 811100 207000) 0 nil])
([nil nil ((6906 . 7185) (#("- The decoder takes in the processed input and outputs the resulting sequence (for instance, the translated sentence) using a masked form of self-attention.

- The encoder receives the original sequential input and encodes the embeddings using a multi-head self-attention module." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 22 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 22 23 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 23 123 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 123 124 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 124 155 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 155 156 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 156 157 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 157 158 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 158 159 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 159 160 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 160 204 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 204 205 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 205 279 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 6906) (undo-tree-id71774 . 119) (undo-tree-id71775 . 119) (undo-tree-id71776 . -159) (undo-tree-id71777 . -159) (undo-tree-id71778 . -279) (undo-tree-id71779 . -160) (undo-tree-id71780 . -279) (undo-tree-id71781 . -160) (undo-tree-id71782 . -160) (undo-tree-id71783 . -160) (undo-tree-id71784 . -160) (undo-tree-id71785 . -160) (undo-tree-id71786 . -160) (undo-tree-id71787 . -160) (undo-tree-id71788 . -160) (undo-tree-id71789 . -160) (undo-tree-id71790 . -160) (undo-tree-id71791 . -160) (undo-tree-id71792 . -160) (undo-tree-id71793 . -160) (undo-tree-id71794 . -160) (undo-tree-id71795 . -160) (undo-tree-id71796 . -160) (undo-tree-id71797 . -160) (undo-tree-id71798 . -160) (undo-tree-id71799 . -160) (undo-tree-id71800 . -160) (undo-tree-id71801 . -160) (undo-tree-id71802 . -160) (undo-tree-id71803 . -160) (undo-tree-id71804 . -160) (undo-tree-id71805 . -160) (undo-tree-id71806 . -160) (undo-tree-id71807 . -160) (undo-tree-id71808 . -160) (undo-tree-id71809 . -160) (undo-tree-id71810 . -160) (undo-tree-id71811 . -160) (undo-tree-id71812 . -160) (undo-tree-id71813 . -160) (undo-tree-id71814 . -160) (undo-tree-id71815 . -160) (undo-tree-id71816 . -160) (undo-tree-id71817 . -160) (undo-tree-id71818 . -160) (undo-tree-id71819 . -160) (undo-tree-id71820 . -160) (undo-tree-id71821 . -160) (undo-tree-id71822 . -160) (undo-tree-id71823 . -160) (undo-tree-id71824 . -160) (undo-tree-id71825 . -160) (undo-tree-id71826 . -160) (undo-tree-id71827 . -160) (undo-tree-id71828 . -160) (undo-tree-id71829 . -160) (undo-tree-id71830 . -160) (undo-tree-id71831 . -160) (undo-tree-id71832 . -160) (undo-tree-id71833 . -160) (undo-tree-id71834 . -160) (undo-tree-id71835 . -160) (undo-tree-id71836 . -160) (undo-tree-id71837 . -160) (undo-tree-id71838 . -160) (undo-tree-id71839 . -160) (undo-tree-id71840 . -278) (undo-tree-id71841 . -278) (undo-tree-id71842 . -278) (undo-tree-id71843 . -278) (undo-tree-id71844 . -278) (undo-tree-id71845 . -278) (undo-tree-id71846 . -278) (undo-tree-id71847 . -278) (undo-tree-id71848 . -278) (undo-tree-id71849 . -278) (undo-tree-id71850 . -278) (undo-tree-id71851 . -278) (undo-tree-id71852 . -278) (undo-tree-id71853 . -278) (undo-tree-id71854 . -278) (undo-tree-id71855 . -278) (undo-tree-id71856 . -279) (undo-tree-id71857 . -279) (undo-tree-id71858 . -279) (undo-tree-id71859 . -279) (undo-tree-id71860 . -279) (undo-tree-id71861 . -279) (undo-tree-id71862 . -279) (undo-tree-id71863 . -279) (undo-tree-id71864 . -279) (undo-tree-id71865 . -279) (undo-tree-id71866 . -279) (undo-tree-id71867 . -279) (undo-tree-id71868 . -279) (undo-tree-id71869 . -279) (undo-tree-id71870 . -279) (undo-tree-id71871 . -279) (undo-tree-id71872 . -279) (undo-tree-id71873 . -279) (undo-tree-id71874 . -279) (undo-tree-id71875 . -279) (undo-tree-id71876 . -279) (undo-tree-id71877 . -279) (undo-tree-id71878 . -279) (undo-tree-id71879 . -279) (undo-tree-id71880 . -279) (undo-tree-id71881 . -279) (undo-tree-id71882 . -279) (undo-tree-id71883 . -279) (undo-tree-id71884 . -279) (undo-tree-id71885 . -158) (6906 . 7064) (#(" The decoder takes in the processed input and outputs the resulting sequence (for instance, the translated sentence) using a masked form of self-attention." 0 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 21 22 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 22 122 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 122 123 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 123 154 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 154 155 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 7027) (undo-tree-id71886 . -154) (t 25775 618 885588 804000)) nil (25775 623 987623 199000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7028) (undo-tree-id71897 . -1) (t 25775 624 65676 78000)) nil (25775 690 712971 250000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7028) (undo-tree-id71887 . -2) (undo-tree-id71888 . -2) (undo-tree-id71889 . -2) (undo-tree-id71890 . -2) (undo-tree-id71891 . -2) (undo-tree-id71892 . -2) (undo-tree-id71893 . -2) (undo-tree-id71894 . -2) (undo-tree-id71895 . -2) (undo-tree-id71896 . -2) 7030 (7027 . 7030) 7020) nil (25775 690 712965 753000) 0 nil])
([nil nil ((7029 . 7189) (#("- 

- The decoder takes in the processed input and outputs the resulting sequence (for instance, the translated sentence) using a masked form of self-attention." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 4 5 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 5 6 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 6 26 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 26 27 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 27 127 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 127 128 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 128 159 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 159 160 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil rear-nonsticky t)) . 7029) (undo-tree-id71974 . -63) (undo-tree-id71975 . -63) (undo-tree-id71976 . -63) (undo-tree-id71977 . -63) (undo-tree-id71978 . -63) (undo-tree-id71979 . -63) (undo-tree-id71980 . -63) (undo-tree-id71981 . -63) (undo-tree-id71982 . -63) (undo-tree-id71983 . -63) (undo-tree-id71984 . -63) (undo-tree-id71985 . -122) (undo-tree-id71986 . -122) (undo-tree-id71987 . -122) (undo-tree-id71988 . -122) (undo-tree-id71989 . -122) (undo-tree-id71990 . -122) (undo-tree-id71991 . -122) (undo-tree-id71992 . -122) (undo-tree-id71993 . -122) (undo-tree-id71994 . -122) (undo-tree-id71995 . -122) (undo-tree-id71996 . -160) (undo-tree-id71997 . -122) (undo-tree-id71998 . -122) (undo-tree-id71999 . -122) (undo-tree-id72000 . -122) (undo-tree-id72001 . -122) (undo-tree-id72002 . -122) (undo-tree-id72003 . -122) (undo-tree-id72004 . -122) (undo-tree-id72005 . -122) (undo-tree-id72006 . -122) (undo-tree-id72007 . -122) (undo-tree-id72008 . -122) (undo-tree-id72009 . -122) (undo-tree-id72010 . -122) (undo-tree-id72011 . -122) (undo-tree-id72012 . -122) (undo-tree-id72013 . -63) (undo-tree-id72014 . -63) (undo-tree-id72015 . -63) (undo-tree-id72016 . -63) (undo-tree-id72017 . -63) (undo-tree-id72018 . -63) (undo-tree-id72019 . -63) (undo-tree-id72020 . -63) (undo-tree-id72021 . -63) (undo-tree-id72022 . -63) (undo-tree-id72023 . -63) (undo-tree-id72024 . -63) (undo-tree-id72025 . -63) (undo-tree-id72026 . -63) (undo-tree-id72027 . -63) (undo-tree-id72028 . -63) (undo-tree-id72029 . -27) (undo-tree-id72030 . -27) (undo-tree-id72031 . -27) (undo-tree-id72032 . -27) (undo-tree-id72033 . -27) (undo-tree-id72034 . -27) (undo-tree-id72035 . -27) (undo-tree-id72036 . -27) (undo-tree-id72037 . -27) (undo-tree-id72038 . -27) (undo-tree-id72039 . -27) (undo-tree-id72040 . -27) (undo-tree-id72041 . -27) (undo-tree-id72042 . -27) (undo-tree-id72043 . -27) (undo-tree-id72044 . -27) (undo-tree-id72045 . -27) (undo-tree-id72046 . -27) (undo-tree-id72047 . -27) (undo-tree-id72048 . -27) (undo-tree-id72049 . -27) (undo-tree-id72050 . -27) (undo-tree-id72051 . -27) (undo-tree-id72052 . -27) (undo-tree-id72053 . -27) (undo-tree-id72054 . -27) (undo-tree-id72055 . -29) (undo-tree-id72056 . -29) (undo-tree-id72057 . -29) (undo-tree-id72058 . -29) (undo-tree-id72059 . -29) (undo-tree-id72060 . -29) (undo-tree-id72061 . -29) (undo-tree-id72062 . -29) (undo-tree-id72063 . -29) (undo-tree-id72064 . -29) (undo-tree-id72065 . -29) (undo-tree-id72066 . -29) (undo-tree-id72067 . -29) (undo-tree-id72068 . -29) (undo-tree-id72069 . -29) (undo-tree-id72070 . -29) (undo-tree-id72071 . -29) (undo-tree-id72072 . -29) (undo-tree-id72073 . -29) (undo-tree-id72074 . -29) (undo-tree-id72075 . -29) (undo-tree-id72076 . -39) (undo-tree-id72077 . -39) (undo-tree-id72078 . -39) (undo-tree-id72079 . -39) (undo-tree-id72080 . -39) (undo-tree-id72081 . -39) (undo-tree-id72082 . -39) (undo-tree-id72083 . -39) (undo-tree-id72084 . -39) (undo-tree-id72085 . -39) (undo-tree-id72086 . -39) (undo-tree-id72087 . -39) (undo-tree-id72088 . -39) (undo-tree-id72089 . -39) (undo-tree-id72090 . -39) (undo-tree-id72091 . -39) (undo-tree-id72092 . -45) (undo-tree-id72093 . -45) (undo-tree-id72094 . -45) (undo-tree-id72095 . -45) (undo-tree-id72096 . -45) (undo-tree-id72097 . -45) (undo-tree-id72098 . -45) (undo-tree-id72099 . -45) (undo-tree-id72100 . -45) (undo-tree-id72101 . -45) (undo-tree-id72102 . -45) (undo-tree-id72103 . -45) (undo-tree-id72104 . -45) (undo-tree-id72105 . -45) (undo-tree-id72106 . -45) (undo-tree-id72107 . -45) (undo-tree-id72108 . -49) (undo-tree-id72109 . -49) (undo-tree-id72110 . -49) (undo-tree-id72111 . -49) (undo-tree-id72112 . -49) (undo-tree-id72113 . -49) (undo-tree-id72114 . -49) (undo-tree-id72115 . -49) (undo-tree-id72116 . -49) (undo-tree-id72117 . -49) (undo-tree-id72118 . -49) (undo-tree-id72119 . -49) (undo-tree-id72120 . -49) (undo-tree-id72121 . -49) (undo-tree-id72122 . -49) (undo-tree-id72123 . -49) (undo-tree-id72124 . -57) (undo-tree-id72125 . -57) (undo-tree-id72126 . -57) (undo-tree-id72127 . -57) (undo-tree-id72128 . -57) (undo-tree-id72129 . -57) (undo-tree-id72130 . -57) (undo-tree-id72131 . -57) (undo-tree-id72132 . -57) (undo-tree-id72133 . -57) (undo-tree-id72134 . -57) (undo-tree-id72135 . -57) (undo-tree-id72136 . -57) (undo-tree-id72137 . -57) (undo-tree-id72138 . -57) (undo-tree-id72139 . -57) (undo-tree-id72140 . -61) (undo-tree-id72141 . -61) (undo-tree-id72142 . -61) (undo-tree-id72143 . -61) (undo-tree-id72144 . -61) (undo-tree-id72145 . -61) (undo-tree-id72146 . -61) (undo-tree-id72147 . -61) (undo-tree-id72148 . -61) (undo-tree-id72149 . -61) (undo-tree-id72150 . -61) (undo-tree-id72151 . -61) (undo-tree-id72152 . -61) (undo-tree-id72153 . -61) (undo-tree-id72154 . -61) (undo-tree-id72155 . -61) (undo-tree-id72156 . -71) (undo-tree-id72157 . -71) (undo-tree-id72158 . -71) (undo-tree-id72159 . -71) (undo-tree-id72160 . -71) (undo-tree-id72161 . -71) (undo-tree-id72162 . -71) (undo-tree-id72163 . -71) (undo-tree-id72164 . -71) (undo-tree-id72165 . -71) (undo-tree-id72166 . -71) (undo-tree-id72167 . -71) (undo-tree-id72168 . -71) (undo-tree-id72169 . -71) (undo-tree-id72170 . -71) (undo-tree-id72171 . -71) (undo-tree-id72172 . -80) (undo-tree-id72173 . -80) (undo-tree-id72174 . -80) (undo-tree-id72175 . -80) (undo-tree-id72176 . -80) (undo-tree-id72177 . -80) (undo-tree-id72178 . -80) (undo-tree-id72179 . -80) (undo-tree-id72180 . -80) (undo-tree-id72181 . -80) (undo-tree-id72182 . -80) (undo-tree-id72183 . -80) (undo-tree-id72184 . -80) (undo-tree-id72185 . -80) (undo-tree-id72186 . -80) (undo-tree-id72187 . -80) (undo-tree-id72188 . -82) (undo-tree-id72189 . -82) (undo-tree-id72190 . -82) (undo-tree-id72191 . -82) (undo-tree-id72192 . -82) (undo-tree-id72193 . -82) (undo-tree-id72194 . -82) (undo-tree-id72195 . -82) (undo-tree-id72196 . -82) (undo-tree-id72197 . -82) (undo-tree-id72198 . -82) (undo-tree-id72199 . -82) (undo-tree-id72200 . -82) (undo-tree-id72201 . -82) (undo-tree-id72202 . -82) (undo-tree-id72203 . -82) (undo-tree-id72204 . -82) (undo-tree-id72205 . -82) (undo-tree-id72206 . -82) (undo-tree-id72207 . -82) (undo-tree-id72208 . -82) (undo-tree-id72209 . -82) (undo-tree-id72210 . -82) (undo-tree-id72211 . -82) (undo-tree-id72212 . -82) (undo-tree-id72213 . -82) (undo-tree-id72214 . -82) (undo-tree-id72215 . -82) (undo-tree-id72216 . -82) (undo-tree-id72217 . -82) (undo-tree-id72218 . -82) (undo-tree-id72219 . -85) (undo-tree-id72220 . -85) (undo-tree-id72221 . -85) (undo-tree-id72222 . -85) (undo-tree-id72223 . -85) (undo-tree-id72224 . -85) (undo-tree-id72225 . -85) (undo-tree-id72226 . -85) (undo-tree-id72227 . -85) (undo-tree-id72228 . -85) (undo-tree-id72229 . -85) (undo-tree-id72230 . -85) (undo-tree-id72231 . -85) (undo-tree-id72232 . -85) (undo-tree-id72233 . -85) (undo-tree-id72234 . -85) (undo-tree-id72235 . -94) (undo-tree-id72236 . -94) (undo-tree-id72237 . -94) (undo-tree-id72238 . -94) (undo-tree-id72239 . -94) (undo-tree-id72240 . -94) (undo-tree-id72241 . -94) (undo-tree-id72242 . -94) (undo-tree-id72243 . -94) (undo-tree-id72244 . -94) (undo-tree-id72245 . -94) (undo-tree-id72246 . -94) (undo-tree-id72247 . -94) (undo-tree-id72248 . -94) (undo-tree-id72249 . -94) (undo-tree-id72250 . -94) (undo-tree-id72251 . -95) (undo-tree-id72252 . -95) (undo-tree-id72253 . -95) (undo-tree-id72254 . -95) (undo-tree-id72255 . -95) (undo-tree-id72256 . -95) (undo-tree-id72257 . -95) (undo-tree-id72258 . -95) (undo-tree-id72259 . -95) (undo-tree-id72260 . -95) (undo-tree-id72261 . -95) (undo-tree-id72262 . -95) (undo-tree-id72263 . -95) (undo-tree-id72264 . -95) (undo-tree-id72265 . -95) (undo-tree-id72266 . -95) (undo-tree-id72267 . -99) (undo-tree-id72268 . -99) (undo-tree-id72269 . -99) (undo-tree-id72270 . -99) (undo-tree-id72271 . -99) (undo-tree-id72272 . -99) (undo-tree-id72273 . -99) (undo-tree-id72274 . -99) (undo-tree-id72275 . -99) (undo-tree-id72276 . -99) (undo-tree-id72277 . -99) (undo-tree-id72278 . -99) (undo-tree-id72279 . -99) (undo-tree-id72280 . -99) (undo-tree-id72281 . -99) (undo-tree-id72282 . -99) (undo-tree-id72283 . -110) (undo-tree-id72284 . -110) (undo-tree-id72285 . -110) (undo-tree-id72286 . -110) (undo-tree-id72287 . -110) (undo-tree-id72288 . -110) (undo-tree-id72289 . -110) (undo-tree-id72290 . -110) (undo-tree-id72291 . -110) (undo-tree-id72292 . -110) (undo-tree-id72293 . -110) (undo-tree-id72294 . -110) (undo-tree-id72295 . -110) (undo-tree-id72296 . -110) (undo-tree-id72297 . -110) (undo-tree-id72298 . -110) (undo-tree-id72299 . -119) (undo-tree-id72300 . -119) (undo-tree-id72301 . -119) (undo-tree-id72302 . -119) (undo-tree-id72303 . -119) (undo-tree-id72304 . -119) (undo-tree-id72305 . -119) (undo-tree-id72306 . -119) (undo-tree-id72307 . -119) (undo-tree-id72308 . -119) (undo-tree-id72309 . -119) (undo-tree-id72310 . -119) (undo-tree-id72311 . -119) (undo-tree-id72312 . -119) (undo-tree-id72313 . -119) (undo-tree-id72314 . -119) (undo-tree-id72315 . -120) (undo-tree-id72316 . -120) (undo-tree-id72317 . -120) (undo-tree-id72318 . -120) (undo-tree-id72319 . -120) (undo-tree-id72320 . -120) (undo-tree-id72321 . -120) (undo-tree-id72322 . -120) (undo-tree-id72323 . -120) (undo-tree-id72324 . -120) (undo-tree-id72325 . -120) (undo-tree-id72326 . -120) (undo-tree-id72327 . -120) (undo-tree-id72328 . -120) (undo-tree-id72329 . -120) (undo-tree-id72330 . -120) (undo-tree-id72331 . -126) (undo-tree-id72332 . -126) (undo-tree-id72333 . -126) (undo-tree-id72334 . -126) (undo-tree-id72335 . -126) (undo-tree-id72336 . -126) (undo-tree-id72337 . -126) (undo-tree-id72338 . -126) (undo-tree-id72339 . -126) (undo-tree-id72340 . -126) (undo-tree-id72341 . -126) (undo-tree-id72342 . -126) (undo-tree-id72343 . -126) (undo-tree-id72344 . -126) (undo-tree-id72345 . -126) (undo-tree-id72346 . -126) (undo-tree-id72347 . -128) (undo-tree-id72348 . -128) (undo-tree-id72349 . -128) (undo-tree-id72350 . -128) (undo-tree-id72351 . -128) (undo-tree-id72352 . -128) (undo-tree-id72353 . -128) (undo-tree-id72354 . -128) (undo-tree-id72355 . -128) (undo-tree-id72356 . -128) (undo-tree-id72357 . -128) (undo-tree-id72358 . -128) (undo-tree-id72359 . -128) (undo-tree-id72360 . -128) (undo-tree-id72361 . -128) (undo-tree-id72362 . -128) (undo-tree-id72363 . -135) (undo-tree-id72364 . -135) (undo-tree-id72365 . -135) (undo-tree-id72366 . -135) (undo-tree-id72367 . -135) (undo-tree-id72368 . -135) (undo-tree-id72369 . -135) (undo-tree-id72370 . -135) (undo-tree-id72371 . -135) (undo-tree-id72372 . -135) (undo-tree-id72373 . -135) (undo-tree-id72374 . -135) (undo-tree-id72375 . -135) (undo-tree-id72376 . -135) (undo-tree-id72377 . -135) (undo-tree-id72378 . -135) (undo-tree-id72379 . -140) (undo-tree-id72380 . -140) (undo-tree-id72381 . -140) (undo-tree-id72382 . -140) (undo-tree-id72383 . -140) (undo-tree-id72384 . -140) (undo-tree-id72385 . -140) (undo-tree-id72386 . -140) (undo-tree-id72387 . -140) (undo-tree-id72388 . -140) (undo-tree-id72389 . -140) (undo-tree-id72390 . -140) (undo-tree-id72391 . -140) (undo-tree-id72392 . -140) (undo-tree-id72393 . -140) (undo-tree-id72394 . -140) (undo-tree-id72395 . -140) (undo-tree-id72396 . -140) (undo-tree-id72397 . -140) (undo-tree-id72398 . -140) (undo-tree-id72399 . -140) (undo-tree-id72400 . -143) (undo-tree-id72401 . -143) (undo-tree-id72402 . -143) (undo-tree-id72403 . -143) (undo-tree-id72404 . -143) (undo-tree-id72405 . -143) (undo-tree-id72406 . -143) (undo-tree-id72407 . -143) (undo-tree-id72408 . -143) (undo-tree-id72409 . -143) (undo-tree-id72410 . -143) (undo-tree-id72411 . -143) (undo-tree-id72412 . -143) (undo-tree-id72413 . -143) (undo-tree-id72414 . -143) (undo-tree-id72415 . -143) (undo-tree-id72416 . -148) (undo-tree-id72417 . -148) (undo-tree-id72418 . -148) (undo-tree-id72419 . -148) (undo-tree-id72420 . -148) (undo-tree-id72421 . -148) (undo-tree-id72422 . -148) (undo-tree-id72423 . -148) (undo-tree-id72424 . -148) (undo-tree-id72425 . -148) (undo-tree-id72426 . -148) (undo-tree-id72427 . -148) (undo-tree-id72428 . -148) (undo-tree-id72429 . -148) (undo-tree-id72430 . -148) (undo-tree-id72431 . -148) (undo-tree-id72432 . -149) (undo-tree-id72433 . -149) (undo-tree-id72434 . -149) (undo-tree-id72435 . -149) (undo-tree-id72436 . -149) (undo-tree-id72437 . -149) (undo-tree-id72438 . -149) (undo-tree-id72439 . -149) (undo-tree-id72440 . -149) (undo-tree-id72441 . -149) (undo-tree-id72442 . -149) (undo-tree-id72443 . -149) (undo-tree-id72444 . -149) (undo-tree-id72445 . -149) (undo-tree-id72446 . -149) (undo-tree-id72447 . -149) (undo-tree-id72448 . -158) (undo-tree-id72449 . -158) (undo-tree-id72450 . -158) (undo-tree-id72451 . -158) (undo-tree-id72452 . -158) (undo-tree-id72453 . -158) (undo-tree-id72454 . -158) (undo-tree-id72455 . -158) (undo-tree-id72456 . -158) (undo-tree-id72457 . -158) (undo-tree-id72458 . -158) (undo-tree-id72459 . -158) (undo-tree-id72460 . -158) (undo-tree-id72461 . -158) (undo-tree-id72462 . -158) (undo-tree-id72463 . -158) (undo-tree-id72464 . -159) (undo-tree-id72465 . -159) (undo-tree-id72466 . -159) (undo-tree-id72467 . -159) (undo-tree-id72468 . -159) (undo-tree-id72469 . -159) (undo-tree-id72470 . -159) (undo-tree-id72471 . -159) (undo-tree-id72472 . -159) (undo-tree-id72473 . -159) (undo-tree-id72474 . -159) (undo-tree-id72475 . -159) (undo-tree-id72476 . -159) (undo-tree-id72477 . -159) (undo-tree-id72478 . -159) (undo-tree-id72479 . -159) (undo-tree-id72480 . -160) (undo-tree-id72481 . -160) (undo-tree-id72482 . -160) (undo-tree-id72483 . -160) (undo-tree-id72484 . -160) (undo-tree-id72485 . -160) (undo-tree-id72486 . -160) (undo-tree-id72487 . -160) (undo-tree-id72488 . -160) (undo-tree-id72489 . -160) (undo-tree-id72490 . -160) (undo-tree-id72491 . -160) (undo-tree-id72492 . -160) (undo-tree-id72493 . -160) (undo-tree-id72494 . -160) (undo-tree-id72495 . -160) (undo-tree-id72496 . -160) (undo-tree-id72497 . -160) (undo-tree-id72498 . -160) (undo-tree-id72499 . -160) (undo-tree-id72500 . -160) (undo-tree-id72501 . -160) (undo-tree-id72502 . -160) (undo-tree-id72503 . -160) (undo-tree-id72504 . -160) (undo-tree-id72505 . -160) (undo-tree-id72506 . -160) (undo-tree-id72507 . -160) (undo-tree-id72508 . -160) (undo-tree-id72509 . -160) (undo-tree-id72510 . -160) (undo-tree-id72511 . -160) (undo-tree-id72512 . -160) (undo-tree-id72513 . -4) (7029 . 7033) (#("

" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -7185) (undo-tree-id72514 . -2) (undo-tree-id72515 . -1) (undo-tree-id72516 . -1) (undo-tree-id72517 . -1) (undo-tree-id72518 . -1) (undo-tree-id72519 . -1) (undo-tree-id72520 . -1) (undo-tree-id72521 . -1) (undo-tree-id72522 . -2) (undo-tree-id72523 . -2) (undo-tree-id72524 . -2) (undo-tree-id72525 . -2) (undo-tree-id72526 . -2) (undo-tree-id72527 . -2) (undo-tree-id72528 . -2) (undo-tree-id72529 . -2) 7187 (7185 . 7187) (t 25775 690 786797 496000)) nil (25775 742 646617 469000) 0 nil])
([nil nil ((7188 . 7192)) nil (25775 742 643965 598000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9307 . 9308) (nil fontified nil 9211 . 9308) (nil fontified nil 9097 . 9211) (nil fontified nil 8999 . 9097) (nil fontified nil 8976 . 8999) (nil fontified nil 8971 . 8976) (nil fontified nil 8949 . 8971) (nil fontified nil 8927 . 8949) (nil fontified nil 8925 . 8927) (nil fontified nil 8923 . 8925) (nil fontified nil 8868 . 8923) (nil fontified nil 8765 . 8868) (nil fontified nil 8654 . 8765) (nil fontified nil 8628 . 8654) (nil fontified nil 8527 . 8628) (nil fontified nil 8455 . 8527) (nil fontified nil 8354 . 8455) (nil fontified nil 8251 . 8354) (nil fontified nil 8148 . 8251) (nil fontified nil 8045 . 8148) (nil fontified nil 7938 . 8045) (nil fontified nil 7881 . 7938) (nil fontified nil 7775 . 7881) (nil fontified nil 7675 . 7775) (nil fontified nil 7574 . 7675) (nil fontified nil 7470 . 7574) (nil fontified nil 7363 . 7470) (nil fontified nil 7246 . 7363) (nil fontified nil 7193 . 7246) (7193 . 9308) 7192) nil (25775 742 643963 847000) 0 nil])
([nil nil ((#("-" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7187) (undo-tree-id71930 . -1) (undo-tree-id71931 . -1) (undo-tree-id71932 . -1) (undo-tree-id71933 . -1) (undo-tree-id71934 . -1) (undo-tree-id71935 . -1) (undo-tree-id71936 . -1) (undo-tree-id71937 . -1) (undo-tree-id71938 . -1) (undo-tree-id71939 . -1) (undo-tree-id71940 . -1) (undo-tree-id71941 . -1) (undo-tree-id71942 . -1) (undo-tree-id71943 . -1) (undo-tree-id71944 . -1) (undo-tree-id71945 . -1) (undo-tree-id71946 . -1) (undo-tree-id71947 . -1) (undo-tree-id71948 . -1) (undo-tree-id71949 . -1) (undo-tree-id71950 . -1) (undo-tree-id71951 . -1) (undo-tree-id71952 . -1) (undo-tree-id71953 . -1) (undo-tree-id71954 . -1) (undo-tree-id71955 . -1) (undo-tree-id71956 . -1) (undo-tree-id71957 . -1) (undo-tree-id71958 . -1) (undo-tree-id71959 . -1) (undo-tree-id71960 . -1) (undo-tree-id71961 . -1) (undo-tree-id71962 . -1) (undo-tree-id71963 . -1) (undo-tree-id71964 . -1) (undo-tree-id71965 . -1) (undo-tree-id71966 . -1) (undo-tree-id71967 . -1) (undo-tree-id71968 . -1) (undo-tree-id71969 . -1) (undo-tree-id71970 . -1) (undo-tree-id71971 . -1) (undo-tree-id71972 . -1) (undo-tree-id71973 . -1)) nil (25775 742 647226 571000) 0 nil])
([nil nil ((8652 . 8653) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8652) (undo-tree-id72544 . -1) (8626 . 8627) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8626) (undo-tree-id72545 . -1) (8525 . 8526) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8525) (undo-tree-id72546 . -1) (8453 . 8454) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8453) (undo-tree-id72547 . -1) (8352 . 8353) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8352) (undo-tree-id72548 . -1) (8249 . 8250) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8249) (undo-tree-id72549 . -1) (8146 . 8147) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8146) (undo-tree-id72550 . -1) (8043 . 8044) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8043) (undo-tree-id72551 . -1) (7936 . 7937) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7936) (undo-tree-id72552 . -1) (7879 . 7880) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7879) (undo-tree-id72553 . -1) (7773 . 7774) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7773) (undo-tree-id72554 . -1) (7673 . 7674) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7673) (undo-tree-id72555 . -1) (7572 . 7573) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7572) (undo-tree-id72556 . -1) (7468 . 7469) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7468) (undo-tree-id72557 . -1) (7361 . 7362) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7361) (undo-tree-id72558 . -1) 7245) nil (25775 752 57606 655000) 0 nil] [nil nil ((7244 . 7245) (#("
" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t)) . -7244) (undo-tree-id71898 . -1) (undo-tree-id71899 . -1) (undo-tree-id71900 . -1) (undo-tree-id71901 . -1) (undo-tree-id71902 . -1) (undo-tree-id71903 . -1) (undo-tree-id71904 . -1) (undo-tree-id71905 . -1) (undo-tree-id71906 . -1) (undo-tree-id71907 . -1) (undo-tree-id71908 . -1) (undo-tree-id71909 . -1) (undo-tree-id71910 . -1) (undo-tree-id71911 . -1) (undo-tree-id71912 . -1) (undo-tree-id71913 . -1) (undo-tree-id71914 . -1) (undo-tree-id71915 . -1) (undo-tree-id71916 . -1) (undo-tree-id71917 . -1) (undo-tree-id71918 . -1) (undo-tree-id71919 . -1) (undo-tree-id71920 . -1) (undo-tree-id71921 . -1) (undo-tree-id71922 . -1) (undo-tree-id71923 . -1) (undo-tree-id71924 . -1) (undo-tree-id71925 . -1) (undo-tree-id71926 . -1) (undo-tree-id71927 . -1) (undo-tree-id71928 . -1) (undo-tree-id71929 . -1) 7192) ((7244 . 7245) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 7244)) (25775 742 643922 310000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -9307) (undo-tree-id72530 . 1) (undo-tree-id72531 . 1) (undo-tree-id72532 . -1) (9209 . 9210) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9209) (undo-tree-id72533 . -1) (9095 . 9096) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9095) (undo-tree-id72534 . -1) (8997 . 8998) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8997) (undo-tree-id72535 . -1) (8974 . 8975) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8974) (undo-tree-id72536 . -1) (8969 . 8970) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8969) (undo-tree-id72537 . -1) (8947 . 8948) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8947) (undo-tree-id72538 . -1) (8925 . 8926) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8925) (undo-tree-id72539 . -1) (8923 . 8924) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8923) (undo-tree-id72540 . -1) (8921 . 8922) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8921) (undo-tree-id72541 . -1) (8866 . 8867) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8866) (undo-tree-id72542 . -1) (8763 . 8764) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8763) (undo-tree-id72543 . -1) 8652) nil (25775 752 57586 844000) 0 nil])
nil
([nil nil ((7245 . 7246)) nil (25775 752 57564 13000) 0 nil])
([nil nil ((9308 . 9309)) nil (25775 752 57559 42000) 0 nil])
([nil nil ((7246 . 7248) (t 25775 752 143824 680000)) nil (25775 797 314670 6000) 0 nil])
([nil nil ((#("𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) )" 0 34 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7319) (undo-tree-id73037 . -33) (undo-tree-id73038 . -33) (undo-tree-id73039 . -33) (undo-tree-id73040 . -33) (undo-tree-id73041 . -34) (undo-tree-id73042 . -33) (undo-tree-id73043 . -1) (undo-tree-id73044 . -1) (undo-tree-id73045 . -1) (undo-tree-id73046 . -1) (undo-tree-id73047 . -1) (undo-tree-id73048 . -1) (undo-tree-id73049 . -1) (undo-tree-id73050 . -1) (undo-tree-id73051 . -1) (undo-tree-id73052 . -1) (undo-tree-id73053 . -1) (undo-tree-id73054 . -1) (undo-tree-id73055 . -1) (undo-tree-id73056 . -1) (undo-tree-id73057 . -1) (undo-tree-id73058 . -1) (undo-tree-id73059 . -1) (undo-tree-id73060 . -1) (undo-tree-id73061 . -1) (undo-tree-id73062 . -1) (undo-tree-id73063 . -1) (undo-tree-id73064 . -3) (undo-tree-id73065 . -3) (undo-tree-id73066 . -3) (undo-tree-id73067 . -3) (undo-tree-id73068 . -3) (undo-tree-id73069 . -3) (undo-tree-id73070 . -3) (undo-tree-id73071 . -3) (undo-tree-id73072 . -3) (undo-tree-id73073 . -3) (undo-tree-id73074 . -3) (undo-tree-id73075 . -3) (undo-tree-id73076 . -3) (undo-tree-id73077 . -3) (undo-tree-id73078 . -3) (undo-tree-id73079 . -3) (undo-tree-id73080 . -3) (undo-tree-id73081 . -3) (undo-tree-id73082 . -3) (undo-tree-id73083 . -3) (undo-tree-id73084 . -3) (undo-tree-id73085 . -7) (undo-tree-id73086 . -7) (undo-tree-id73087 . -7) (undo-tree-id73088 . -7) (undo-tree-id73089 . -7) (undo-tree-id73090 . -7) (undo-tree-id73091 . -7) (undo-tree-id73092 . -7) (undo-tree-id73093 . -7) (undo-tree-id73094 . -7) (undo-tree-id73095 . -7) (undo-tree-id73096 . -7) (undo-tree-id73097 . -7) (undo-tree-id73098 . -7) (undo-tree-id73099 . -7) (undo-tree-id73100 . -7) (undo-tree-id73101 . -7) (undo-tree-id73102 . -7) (undo-tree-id73103 . -7) (undo-tree-id73104 . -7) (undo-tree-id73105 . -7) (undo-tree-id73106 . -8) (undo-tree-id73107 . -8) (undo-tree-id73108 . -8) (undo-tree-id73109 . -8) (undo-tree-id73110 . -8) (undo-tree-id73111 . -8) (undo-tree-id73112 . -8) (undo-tree-id73113 . -8) (undo-tree-id73114 . -8) (undo-tree-id73115 . -8) (undo-tree-id73116 . -8) (undo-tree-id73117 . -8) (undo-tree-id73118 . -8) (undo-tree-id73119 . -8) (undo-tree-id73120 . -8) (undo-tree-id73121 . -8) (undo-tree-id73122 . -8) (undo-tree-id73123 . -8) (undo-tree-id73124 . -8) (undo-tree-id73125 . -8) (undo-tree-id73126 . -8) (undo-tree-id73127 . -9) (undo-tree-id73128 . -9) (undo-tree-id73129 . -9) (undo-tree-id73130 . -9) (undo-tree-id73131 . -9) (undo-tree-id73132 . -9) (undo-tree-id73133 . -9) (undo-tree-id73134 . -9) (undo-tree-id73135 . -9) (undo-tree-id73136 . -9) (undo-tree-id73137 . -9) (undo-tree-id73138 . -9) (undo-tree-id73139 . -9) (undo-tree-id73140 . -9) (undo-tree-id73141 . -9) (undo-tree-id73142 . -9) (undo-tree-id73143 . -9) (undo-tree-id73144 . -9) (undo-tree-id73145 . -9) (undo-tree-id73146 . -9) (undo-tree-id73147 . -9) (undo-tree-id73148 . -10) (undo-tree-id73149 . -10) (undo-tree-id73150 . -10) (undo-tree-id73151 . -10) (undo-tree-id73152 . -10) (undo-tree-id73153 . -10) (undo-tree-id73154 . -10) (undo-tree-id73155 . -10) (undo-tree-id73156 . -10) (undo-tree-id73157 . -10) (undo-tree-id73158 . -10) (undo-tree-id73159 . -10) (undo-tree-id73160 . -10) (undo-tree-id73161 . -10) (undo-tree-id73162 . -10) (undo-tree-id73163 . -10) (undo-tree-id73164 . -10) (undo-tree-id73165 . -10) (undo-tree-id73166 . -10) (undo-tree-id73167 . -10) (undo-tree-id73168 . -10) (undo-tree-id73169 . -12) (undo-tree-id73170 . -12) (undo-tree-id73171 . -12) (undo-tree-id73172 . -12) (undo-tree-id73173 . -12) (undo-tree-id73174 . -12) (undo-tree-id73175 . -12) (undo-tree-id73176 . -12) (undo-tree-id73177 . -12) (undo-tree-id73178 . -12) (undo-tree-id73179 . -12) (undo-tree-id73180 . -12) (undo-tree-id73181 . -12) (undo-tree-id73182 . -12) (undo-tree-id73183 . -12) (undo-tree-id73184 . -12) (undo-tree-id73185 . -12) (undo-tree-id73186 . -12) (undo-tree-id73187 . -12) (undo-tree-id73188 . -12) (undo-tree-id73189 . -12) (undo-tree-id73190 . -12) (undo-tree-id73191 . -12) (undo-tree-id73192 . -12) (undo-tree-id73193 . -12) (undo-tree-id73194 . -12) (undo-tree-id73195 . -15) (undo-tree-id73196 . -15) (undo-tree-id73197 . -15) (undo-tree-id73198 . -15) (undo-tree-id73199 . -15) (undo-tree-id73200 . -15) (undo-tree-id73201 . -15) (undo-tree-id73202 . -15) (undo-tree-id73203 . -15) (undo-tree-id73204 . -15) (undo-tree-id73205 . -15) (undo-tree-id73206 . -15) (undo-tree-id73207 . -15) (undo-tree-id73208 . -15) (undo-tree-id73209 . -15) (undo-tree-id73210 . -15) (undo-tree-id73211 . -15) (undo-tree-id73212 . -15) (undo-tree-id73213 . -15) (undo-tree-id73214 . -15) (undo-tree-id73215 . -15) (undo-tree-id73216 . -16) (undo-tree-id73217 . -16) (undo-tree-id73218 . -16) (undo-tree-id73219 . -16) (undo-tree-id73220 . -16) (undo-tree-id73221 . -16) (undo-tree-id73222 . -16) (undo-tree-id73223 . -16) (undo-tree-id73224 . -16) (undo-tree-id73225 . -16) (undo-tree-id73226 . -16) (undo-tree-id73227 . -16) (undo-tree-id73228 . -16) (undo-tree-id73229 . -16) (undo-tree-id73230 . -16) (undo-tree-id73231 . -16) (undo-tree-id73232 . -16) (undo-tree-id73233 . -16) (undo-tree-id73234 . -16) (undo-tree-id73235 . -16) (undo-tree-id73236 . -16) (undo-tree-id73237 . -17) (undo-tree-id73238 . -17) (undo-tree-id73239 . -17) (undo-tree-id73240 . -17) (undo-tree-id73241 . -17) (undo-tree-id73242 . -17) (undo-tree-id73243 . -17) (undo-tree-id73244 . -17) (undo-tree-id73245 . -17) (undo-tree-id73246 . -17) (undo-tree-id73247 . -17) (undo-tree-id73248 . -17) (undo-tree-id73249 . -17) (undo-tree-id73250 . -17) (undo-tree-id73251 . -17) (undo-tree-id73252 . -17) (undo-tree-id73253 . -17) (undo-tree-id73254 . -17) (undo-tree-id73255 . -17) (undo-tree-id73256 . -17) (undo-tree-id73257 . -17) (undo-tree-id73258 . -18) (undo-tree-id73259 . -18) (undo-tree-id73260 . -18) (undo-tree-id73261 . -18) (undo-tree-id73262 . -18) (undo-tree-id73263 . -18) (undo-tree-id73264 . -18) (undo-tree-id73265 . -18) (undo-tree-id73266 . -18) (undo-tree-id73267 . -18) (undo-tree-id73268 . -18) (undo-tree-id73269 . -18) (undo-tree-id73270 . -18) (undo-tree-id73271 . -18) (undo-tree-id73272 . -18) (undo-tree-id73273 . -18) (undo-tree-id73274 . -18) (undo-tree-id73275 . -18) (undo-tree-id73276 . -18) (undo-tree-id73277 . -18) (undo-tree-id73278 . -18) (undo-tree-id73279 . -20) (undo-tree-id73280 . -20) (undo-tree-id73281 . -20) (undo-tree-id73282 . -20) (undo-tree-id73283 . -20) (undo-tree-id73284 . -20) (undo-tree-id73285 . -20) (undo-tree-id73286 . -20) (undo-tree-id73287 . -20) (undo-tree-id73288 . -20) (undo-tree-id73289 . -20) (undo-tree-id73290 . -20) (undo-tree-id73291 . -20) (undo-tree-id73292 . -20) (undo-tree-id73293 . -20) (undo-tree-id73294 . -20) (undo-tree-id73295 . -20) (undo-tree-id73296 . -20) (undo-tree-id73297 . -20) (undo-tree-id73298 . -20) (undo-tree-id73299 . -20) (undo-tree-id73300 . -20) (undo-tree-id73301 . -20) (undo-tree-id73302 . -20) (undo-tree-id73303 . -20) (undo-tree-id73304 . -20) (undo-tree-id73305 . -22) (undo-tree-id73306 . -22) (undo-tree-id73307 . -22) (undo-tree-id73308 . -22) (undo-tree-id73309 . -22) (undo-tree-id73310 . -22) (undo-tree-id73311 . -22) (undo-tree-id73312 . -22) (undo-tree-id73313 . -22) (undo-tree-id73314 . -22) (undo-tree-id73315 . -22) (undo-tree-id73316 . -22) (undo-tree-id73317 . -22) (undo-tree-id73318 . -22) (undo-tree-id73319 . -22) (undo-tree-id73320 . -22) (undo-tree-id73321 . -22) (undo-tree-id73322 . -22) (undo-tree-id73323 . -22) (undo-tree-id73324 . -22) (undo-tree-id73325 . -22) (undo-tree-id73326 . -24) (undo-tree-id73327 . -24) (undo-tree-id73328 . -24) (undo-tree-id73329 . -24) (undo-tree-id73330 . -24) (undo-tree-id73331 . -24) (undo-tree-id73332 . -24) (undo-tree-id73333 . -24) (undo-tree-id73334 . -24) (undo-tree-id73335 . -24) (undo-tree-id73336 . -24) (undo-tree-id73337 . -24) (undo-tree-id73338 . -24) (undo-tree-id73339 . -24) (undo-tree-id73340 . -24) (undo-tree-id73341 . -24) (undo-tree-id73342 . -24) (undo-tree-id73343 . -24) (undo-tree-id73344 . -24) (undo-tree-id73345 . -24) (undo-tree-id73346 . -24) (undo-tree-id73347 . -27) (undo-tree-id73348 . -27) (undo-tree-id73349 . -27) (undo-tree-id73350 . -27) (undo-tree-id73351 . -27) (undo-tree-id73352 . -27) (undo-tree-id73353 . -27) (undo-tree-id73354 . -27) (undo-tree-id73355 . -27) (undo-tree-id73356 . -27) (undo-tree-id73357 . -27) (undo-tree-id73358 . -27) (undo-tree-id73359 . -27) (undo-tree-id73360 . -27) (undo-tree-id73361 . -27) (undo-tree-id73362 . -27) (undo-tree-id73363 . -27) (undo-tree-id73364 . -27) (undo-tree-id73365 . -27) (undo-tree-id73366 . -27) (undo-tree-id73367 . -27) (undo-tree-id73368 . -28) (undo-tree-id73369 . -28) (undo-tree-id73370 . -28) (undo-tree-id73371 . -28) (undo-tree-id73372 . -28) (undo-tree-id73373 . -28) (undo-tree-id73374 . -28) (undo-tree-id73375 . -28) (undo-tree-id73376 . -28) (undo-tree-id73377 . -28) (undo-tree-id73378 . -28) (undo-tree-id73379 . -28) (undo-tree-id73380 . -28) (undo-tree-id73381 . -28) (undo-tree-id73382 . -28) (undo-tree-id73383 . -28) (undo-tree-id73384 . -28) (undo-tree-id73385 . -28) (undo-tree-id73386 . -28) (undo-tree-id73387 . -28) (undo-tree-id73388 . -28) (undo-tree-id73389 . -30) (undo-tree-id73390 . -30) (undo-tree-id73391 . -30) (undo-tree-id73392 . -30) (undo-tree-id73393 . -30) (undo-tree-id73394 . -30) (undo-tree-id73395 . -30) (undo-tree-id73396 . -30) (undo-tree-id73397 . -30) (undo-tree-id73398 . -30) (undo-tree-id73399 . -30) (undo-tree-id73400 . -30) (undo-tree-id73401 . -30) (undo-tree-id73402 . -30) (undo-tree-id73403 . -30) (undo-tree-id73404 . -30) (undo-tree-id73405 . -30) (undo-tree-id73406 . -30) (undo-tree-id73407 . -30) (undo-tree-id73408 . -30) (undo-tree-id73409 . -30) (undo-tree-id73410 . -31) (undo-tree-id73411 . -31) (undo-tree-id73412 . -31) (undo-tree-id73413 . -31) (undo-tree-id73414 . -31) (undo-tree-id73415 . -31) (undo-tree-id73416 . -31) (undo-tree-id73417 . -31) (undo-tree-id73418 . -31) (undo-tree-id73419 . -31) (undo-tree-id73420 . -31) (undo-tree-id73421 . -31) (undo-tree-id73422 . -31) (undo-tree-id73423 . -31) (undo-tree-id73424 . -31) (undo-tree-id73425 . -31) (undo-tree-id73426 . -31) (undo-tree-id73427 . -31) (undo-tree-id73428 . -31) (undo-tree-id73429 . -31) (undo-tree-id73430 . -31) (undo-tree-id73431 . -33) (undo-tree-id73432 . -33) (undo-tree-id73433 . -33) (undo-tree-id73434 . -33) (undo-tree-id73435 . -33) (undo-tree-id73436 . -33) (undo-tree-id73437 . -33) (undo-tree-id73438 . -33) (undo-tree-id73439 . -33) (undo-tree-id73440 . -33) (undo-tree-id73441 . -33) (undo-tree-id73442 . -33) (undo-tree-id73443 . -33) (undo-tree-id73444 . -33) (undo-tree-id73445 . -33) (undo-tree-id73446 . -33) (undo-tree-id73447 . -33) (undo-tree-id73448 . -33) (undo-tree-id73449 . -33) (undo-tree-id73450 . -33) (undo-tree-id73451 . -33) (undo-tree-id73452 . -34) (undo-tree-id73453 . -34) (undo-tree-id73454 . -34) (undo-tree-id73455 . -34) (undo-tree-id73456 . -34) (undo-tree-id73457 . -34) (undo-tree-id73458 . -34) (undo-tree-id73459 . -34) (undo-tree-id73460 . -34) (undo-tree-id73461 . -34) (undo-tree-id73462 . -34) (undo-tree-id73463 . -34) (undo-tree-id73464 . -34) (undo-tree-id73465 . -34) (undo-tree-id73466 . -34) (undo-tree-id73467 . -34) (undo-tree-id73468 . -34) (undo-tree-id73469 . -34) (undo-tree-id73470 . -34) (undo-tree-id73471 . -34) (undo-tree-id73472 . -34) (undo-tree-id73473 . -33) (undo-tree-id73474 . -33) (undo-tree-id73475 . -33) (undo-tree-id73476 . -33) (undo-tree-id73477 . -33) (undo-tree-id73478 . -33) (undo-tree-id73479 . -33) (undo-tree-id73480 . -33) (undo-tree-id73481 . -33) (undo-tree-id73482 . -33) (undo-tree-id73483 . -33) (undo-tree-id73484 . -33) (undo-tree-id73485 . -33) (undo-tree-id73486 . -33) (undo-tree-id73487 . -33) (undo-tree-id73488 . 1) (undo-tree-id73489 . -34) (undo-tree-id73490 . -33) (undo-tree-id73491 . -33) (undo-tree-id73492 . -33) (undo-tree-id73493 . -33) (undo-tree-id73494 . -33) (undo-tree-id73495 . -33) (undo-tree-id73496 . -33) (undo-tree-id73497 . -34) 7352) nil (25775 797 314655 850000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7319) (undo-tree-id73013 . 1) (undo-tree-id73014 . -1) (undo-tree-id73015 . -1) (undo-tree-id73016 . -1) (undo-tree-id73017 . -1) (undo-tree-id73018 . -1) (undo-tree-id73019 . -1) (undo-tree-id73020 . -1) (undo-tree-id73021 . -1) (undo-tree-id73022 . -1) (undo-tree-id73023 . -1) (undo-tree-id73024 . -1) (undo-tree-id73025 . -1) (undo-tree-id73026 . -1) (undo-tree-id73027 . -1) (undo-tree-id73028 . -1) (undo-tree-id73029 . -1) (undo-tree-id73030 . -1) (undo-tree-id73031 . -1) (undo-tree-id73032 . -1) (undo-tree-id73033 . -1) (undo-tree-id73034 . -1) (undo-tree-id73035 . -1) (undo-tree-id73036 . -1)) nil (25775 797 314367 587000) 0 nil])
([nil nil ((#("𝒁𝒁 𝒁 𝒁𝒁𝒁(1) , 𝒛𝒛(2) , … , 𝒛𝒛(𝑇𝑇) )" 0 34 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7363) (undo-tree-id72562 . -33) (undo-tree-id72563 . -33) (undo-tree-id72564 . -33) (undo-tree-id72565 . -33) (undo-tree-id72566 . -1) (undo-tree-id72567 . -1) (undo-tree-id72568 . -1) (undo-tree-id72569 . -1) (undo-tree-id72570 . -1) (undo-tree-id72571 . -1) (undo-tree-id72572 . -1) (undo-tree-id72573 . -1) (undo-tree-id72574 . -1) (undo-tree-id72575 . -1) (undo-tree-id72576 . -1) (undo-tree-id72577 . -1) (undo-tree-id72578 . -1) (undo-tree-id72579 . -1) (undo-tree-id72580 . -1) (undo-tree-id72581 . -1) (undo-tree-id72582 . -3) (undo-tree-id72583 . -3) (undo-tree-id72584 . -3) (undo-tree-id72585 . -3) (undo-tree-id72586 . -3) (undo-tree-id72587 . -3) (undo-tree-id72588 . -3) (undo-tree-id72589 . -3) (undo-tree-id72590 . -3) (undo-tree-id72591 . -3) (undo-tree-id72592 . -3) (undo-tree-id72593 . -3) (undo-tree-id72594 . -3) (undo-tree-id72595 . -3) (undo-tree-id72596 . -3) (undo-tree-id72597 . -3) (undo-tree-id72598 . -34) (undo-tree-id72599 . -33) (undo-tree-id72600 . -1) (undo-tree-id72601 . -1) (undo-tree-id72602 . -1) (undo-tree-id72603 . -1) (undo-tree-id72604 . -1) (undo-tree-id72605 . -1) (undo-tree-id72606 . -1) (undo-tree-id72607 . -1) (undo-tree-id72608 . -1) (undo-tree-id72609 . -1) (undo-tree-id72610 . -1) (undo-tree-id72611 . -1) (undo-tree-id72612 . -1) (undo-tree-id72613 . -1) (undo-tree-id72614 . -1) (undo-tree-id72615 . -1) (undo-tree-id72616 . -1) (undo-tree-id72617 . -1) (undo-tree-id72618 . -1) (undo-tree-id72619 . -1) (undo-tree-id72620 . -1) (undo-tree-id72621 . -3) (undo-tree-id72622 . -3) (undo-tree-id72623 . -3) (undo-tree-id72624 . -3) (undo-tree-id72625 . -3) (undo-tree-id72626 . -3) (undo-tree-id72627 . -3) (undo-tree-id72628 . -3) (undo-tree-id72629 . -3) (undo-tree-id72630 . -3) (undo-tree-id72631 . -3) (undo-tree-id72632 . -3) (undo-tree-id72633 . -3) (undo-tree-id72634 . -3) (undo-tree-id72635 . -3) (undo-tree-id72636 . -3) (undo-tree-id72637 . -3) (undo-tree-id72638 . -3) (undo-tree-id72639 . -3) (undo-tree-id72640 . -3) (undo-tree-id72641 . -3) (undo-tree-id72642 . -7) (undo-tree-id72643 . -7) (undo-tree-id72644 . -7) (undo-tree-id72645 . -7) (undo-tree-id72646 . -7) (undo-tree-id72647 . -7) (undo-tree-id72648 . -7) (undo-tree-id72649 . -7) (undo-tree-id72650 . -7) (undo-tree-id72651 . -7) (undo-tree-id72652 . -7) (undo-tree-id72653 . -7) (undo-tree-id72654 . -7) (undo-tree-id72655 . -7) (undo-tree-id72656 . -7) (undo-tree-id72657 . -7) (undo-tree-id72658 . -7) (undo-tree-id72659 . -7) (undo-tree-id72660 . -7) (undo-tree-id72661 . -7) (undo-tree-id72662 . -7) (undo-tree-id72663 . -8) (undo-tree-id72664 . -8) (undo-tree-id72665 . -8) (undo-tree-id72666 . -8) (undo-tree-id72667 . -8) (undo-tree-id72668 . -8) (undo-tree-id72669 . -8) (undo-tree-id72670 . -8) (undo-tree-id72671 . -8) (undo-tree-id72672 . -8) (undo-tree-id72673 . -8) (undo-tree-id72674 . -8) (undo-tree-id72675 . -8) (undo-tree-id72676 . -8) (undo-tree-id72677 . -8) (undo-tree-id72678 . -8) (undo-tree-id72679 . -8) (undo-tree-id72680 . -8) (undo-tree-id72681 . -8) (undo-tree-id72682 . -8) (undo-tree-id72683 . -8) (undo-tree-id72684 . -9) (undo-tree-id72685 . -9) (undo-tree-id72686 . -9) (undo-tree-id72687 . -9) (undo-tree-id72688 . -9) (undo-tree-id72689 . -9) (undo-tree-id72690 . -9) (undo-tree-id72691 . -9) (undo-tree-id72692 . -9) (undo-tree-id72693 . -9) (undo-tree-id72694 . -9) (undo-tree-id72695 . -9) (undo-tree-id72696 . -9) (undo-tree-id72697 . -9) (undo-tree-id72698 . -9) (undo-tree-id72699 . -9) (undo-tree-id72700 . -9) (undo-tree-id72701 . -9) (undo-tree-id72702 . -9) (undo-tree-id72703 . -9) (undo-tree-id72704 . -9) (undo-tree-id72705 . -10) (undo-tree-id72706 . -10) (undo-tree-id72707 . -10) (undo-tree-id72708 . -10) (undo-tree-id72709 . -10) (undo-tree-id72710 . -10) (undo-tree-id72711 . -10) (undo-tree-id72712 . -10) (undo-tree-id72713 . -10) (undo-tree-id72714 . -10) (undo-tree-id72715 . -10) (undo-tree-id72716 . -10) (undo-tree-id72717 . -10) (undo-tree-id72718 . -10) (undo-tree-id72719 . -10) (undo-tree-id72720 . -10) (undo-tree-id72721 . -10) (undo-tree-id72722 . -10) (undo-tree-id72723 . -10) (undo-tree-id72724 . -10) (undo-tree-id72725 . -10) (undo-tree-id72726 . -12) (undo-tree-id72727 . -12) (undo-tree-id72728 . -12) (undo-tree-id72729 . -12) (undo-tree-id72730 . -12) (undo-tree-id72731 . -12) (undo-tree-id72732 . -12) (undo-tree-id72733 . -12) (undo-tree-id72734 . -12) (undo-tree-id72735 . -12) (undo-tree-id72736 . -12) (undo-tree-id72737 . -12) (undo-tree-id72738 . -12) (undo-tree-id72739 . -12) (undo-tree-id72740 . -12) (undo-tree-id72741 . -12) (undo-tree-id72742 . -12) (undo-tree-id72743 . -12) (undo-tree-id72744 . -12) (undo-tree-id72745 . -12) (undo-tree-id72746 . -12) (undo-tree-id72747 . -15) (undo-tree-id72748 . -15) (undo-tree-id72749 . -15) (undo-tree-id72750 . -15) (undo-tree-id72751 . -15) (undo-tree-id72752 . -15) (undo-tree-id72753 . -15) (undo-tree-id72754 . -15) (undo-tree-id72755 . -15) (undo-tree-id72756 . -15) (undo-tree-id72757 . -15) (undo-tree-id72758 . -15) (undo-tree-id72759 . -15) (undo-tree-id72760 . -15) (undo-tree-id72761 . -15) (undo-tree-id72762 . -15) (undo-tree-id72763 . -15) (undo-tree-id72764 . -15) (undo-tree-id72765 . -15) (undo-tree-id72766 . -15) (undo-tree-id72767 . -15) (undo-tree-id72768 . -16) (undo-tree-id72769 . -16) (undo-tree-id72770 . -16) (undo-tree-id72771 . -16) (undo-tree-id72772 . -16) (undo-tree-id72773 . -16) (undo-tree-id72774 . -16) (undo-tree-id72775 . -16) (undo-tree-id72776 . -16) (undo-tree-id72777 . -16) (undo-tree-id72778 . -16) (undo-tree-id72779 . -16) (undo-tree-id72780 . -16) (undo-tree-id72781 . -16) (undo-tree-id72782 . -16) (undo-tree-id72783 . -16) (undo-tree-id72784 . -16) (undo-tree-id72785 . -16) (undo-tree-id72786 . -16) (undo-tree-id72787 . -16) (undo-tree-id72788 . -16) (undo-tree-id72789 . -17) (undo-tree-id72790 . -17) (undo-tree-id72791 . -17) (undo-tree-id72792 . -17) (undo-tree-id72793 . -17) (undo-tree-id72794 . -17) (undo-tree-id72795 . -17) (undo-tree-id72796 . -17) (undo-tree-id72797 . -17) (undo-tree-id72798 . -17) (undo-tree-id72799 . -17) (undo-tree-id72800 . -17) (undo-tree-id72801 . -17) (undo-tree-id72802 . -17) (undo-tree-id72803 . -17) (undo-tree-id72804 . -17) (undo-tree-id72805 . -17) (undo-tree-id72806 . -17) (undo-tree-id72807 . -17) (undo-tree-id72808 . -17) (undo-tree-id72809 . -17) (undo-tree-id72810 . -18) (undo-tree-id72811 . -18) (undo-tree-id72812 . -18) (undo-tree-id72813 . -18) (undo-tree-id72814 . -18) (undo-tree-id72815 . -18) (undo-tree-id72816 . -18) (undo-tree-id72817 . -18) (undo-tree-id72818 . -18) (undo-tree-id72819 . -18) (undo-tree-id72820 . -18) (undo-tree-id72821 . -18) (undo-tree-id72822 . -18) (undo-tree-id72823 . -18) (undo-tree-id72824 . -18) (undo-tree-id72825 . -18) (undo-tree-id72826 . -18) (undo-tree-id72827 . -18) (undo-tree-id72828 . -18) (undo-tree-id72829 . -18) (undo-tree-id72830 . -18) (undo-tree-id72831 . -20) (undo-tree-id72832 . -20) (undo-tree-id72833 . -20) (undo-tree-id72834 . -20) (undo-tree-id72835 . -20) (undo-tree-id72836 . -20) (undo-tree-id72837 . -20) (undo-tree-id72838 . -20) (undo-tree-id72839 . -20) (undo-tree-id72840 . -20) (undo-tree-id72841 . -20) (undo-tree-id72842 . -20) (undo-tree-id72843 . -20) (undo-tree-id72844 . -20) (undo-tree-id72845 . -20) (undo-tree-id72846 . -20) (undo-tree-id72847 . -20) (undo-tree-id72848 . -20) (undo-tree-id72849 . -20) (undo-tree-id72850 . -20) (undo-tree-id72851 . -20) (undo-tree-id72852 . -22) (undo-tree-id72853 . -22) (undo-tree-id72854 . -22) (undo-tree-id72855 . -22) (undo-tree-id72856 . -22) (undo-tree-id72857 . -22) (undo-tree-id72858 . -22) (undo-tree-id72859 . -22) (undo-tree-id72860 . -22) (undo-tree-id72861 . -22) (undo-tree-id72862 . -22) (undo-tree-id72863 . -22) (undo-tree-id72864 . -22) (undo-tree-id72865 . -22) (undo-tree-id72866 . -22) (undo-tree-id72867 . -22) (undo-tree-id72868 . -22) (undo-tree-id72869 . -22) (undo-tree-id72870 . -22) (undo-tree-id72871 . -22) (undo-tree-id72872 . -22) (undo-tree-id72873 . -24) (undo-tree-id72874 . -24) (undo-tree-id72875 . -24) (undo-tree-id72876 . -24) (undo-tree-id72877 . -24) (undo-tree-id72878 . -24) (undo-tree-id72879 . -24) (undo-tree-id72880 . -24) (undo-tree-id72881 . -24) (undo-tree-id72882 . -24) (undo-tree-id72883 . -24) (undo-tree-id72884 . -24) (undo-tree-id72885 . -24) (undo-tree-id72886 . -24) (undo-tree-id72887 . -24) (undo-tree-id72888 . -24) (undo-tree-id72889 . -24) (undo-tree-id72890 . -24) (undo-tree-id72891 . -24) (undo-tree-id72892 . -24) (undo-tree-id72893 . -24) (undo-tree-id72894 . -27) (undo-tree-id72895 . -27) (undo-tree-id72896 . -27) (undo-tree-id72897 . -27) (undo-tree-id72898 . -27) (undo-tree-id72899 . -27) (undo-tree-id72900 . -27) (undo-tree-id72901 . -27) (undo-tree-id72902 . -27) (undo-tree-id72903 . -27) (undo-tree-id72904 . -27) (undo-tree-id72905 . -27) (undo-tree-id72906 . -27) (undo-tree-id72907 . -27) (undo-tree-id72908 . -27) (undo-tree-id72909 . -27) (undo-tree-id72910 . -27) (undo-tree-id72911 . -27) (undo-tree-id72912 . -27) (undo-tree-id72913 . -27) (undo-tree-id72914 . -27) (undo-tree-id72915 . -28) (undo-tree-id72916 . -28) (undo-tree-id72917 . -28) (undo-tree-id72918 . -28) (undo-tree-id72919 . -28) (undo-tree-id72920 . -28) (undo-tree-id72921 . -28) (undo-tree-id72922 . -28) (undo-tree-id72923 . -28) (undo-tree-id72924 . -28) (undo-tree-id72925 . -28) (undo-tree-id72926 . -28) (undo-tree-id72927 . -28) (undo-tree-id72928 . -28) (undo-tree-id72929 . -28) (undo-tree-id72930 . -28) (undo-tree-id72931 . -28) (undo-tree-id72932 . -28) (undo-tree-id72933 . -28) (undo-tree-id72934 . -28) (undo-tree-id72935 . -28) (undo-tree-id72936 . -30) (undo-tree-id72937 . -30) (undo-tree-id72938 . -30) (undo-tree-id72939 . -30) (undo-tree-id72940 . -30) (undo-tree-id72941 . -30) (undo-tree-id72942 . -30) (undo-tree-id72943 . -30) (undo-tree-id72944 . -30) (undo-tree-id72945 . -30) (undo-tree-id72946 . -30) (undo-tree-id72947 . -30) (undo-tree-id72948 . -30) (undo-tree-id72949 . -30) (undo-tree-id72950 . -30) (undo-tree-id72951 . -30) (undo-tree-id72952 . -30) (undo-tree-id72953 . -30) (undo-tree-id72954 . -30) (undo-tree-id72955 . -30) (undo-tree-id72956 . -30) (undo-tree-id72957 . -31) (undo-tree-id72958 . -31) (undo-tree-id72959 . -31) (undo-tree-id72960 . -31) (undo-tree-id72961 . -31) (undo-tree-id72962 . -31) (undo-tree-id72963 . -31) (undo-tree-id72964 . -31) (undo-tree-id72965 . -31) (undo-tree-id72966 . -31) (undo-tree-id72967 . -31) (undo-tree-id72968 . -31) (undo-tree-id72969 . -31) (undo-tree-id72970 . -31) (undo-tree-id72971 . -31) (undo-tree-id72972 . 1) (undo-tree-id72973 . -34) (undo-tree-id72974 . -31) (undo-tree-id72975 . -31) (undo-tree-id72976 . -31) (undo-tree-id72977 . -31) (undo-tree-id72978 . -31) (undo-tree-id72979 . -31) (undo-tree-id72980 . -31) (undo-tree-id72981 . -31) (undo-tree-id72982 . -31) (undo-tree-id72983 . -31) (undo-tree-id72984 . -31) (undo-tree-id72985 . -33) (undo-tree-id72986 . -33) (undo-tree-id72987 . -33) (undo-tree-id72988 . -33) (undo-tree-id72989 . -33) (undo-tree-id72990 . -33) (undo-tree-id72991 . -33) (undo-tree-id72992 . -33) (undo-tree-id72993 . -33) (undo-tree-id72994 . -33) (undo-tree-id72995 . -33) (undo-tree-id72996 . -33) (undo-tree-id72997 . -33) (undo-tree-id72998 . -33) (undo-tree-id72999 . -33) (undo-tree-id73000 . -33) (undo-tree-id73001 . -33) (undo-tree-id73002 . -33) (undo-tree-id73003 . -33) (undo-tree-id73004 . -33) (undo-tree-id73005 . -33) (undo-tree-id73006 . -33) (undo-tree-id73007 . -33) (undo-tree-id73008 . -33) (undo-tree-id73009 . -33) (undo-tree-id73010 . -33) (undo-tree-id73011 . -33) (undo-tree-id73012 . -34) 7396) nil (25775 797 314331 415000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7363) (undo-tree-id72559 . 1) (undo-tree-id72560 . -1) (undo-tree-id72561 . -1)) nil (25775 797 311756 966000) 0 nil])
([nil nil ((7246 . 9242) (#("- The encoder is a stack of six identical layers. Six is not a magic number here but merely a hyperparam- eter choice made in the original transformer paper. You can adjust the number of layers according to the model performance. Inside each of these identical layers, there are two sublayers: one computes the multi-head self-attention, which we will discuss below, and the other one is a fully connected layer, which you have already encountered in previous chapters. Let’s first talk about the multi-head self-attention, which is a simple modification of scaled dot-product attention covered earlier in this chapter. In the scaled dot-product attention, we used three matrices (corresponding to query, value, and key) to transform the input sequence. In the context of multi-head attention, we can think of this set of three matrices as one attention head. As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the
- The overall goal of the encoder block is to take in a sequential input and map it into a continuous representation that is then passed on to the decoder." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 105 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 105 106 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 106 206 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 206 207 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 207 224 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 224 276 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 276 277 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 277 278 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 278 306 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 306 307 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 307 310 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 310 311 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 311 345 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 345 346 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 346 412 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 412 413 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 413 469 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 469 470 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 470 542 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 542 576 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 576 577 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 577 679 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 679 680 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 680 782 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 782 783 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 783 807 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 807 885 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 885 886 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 886 986 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 986 987 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 987 1042 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1042 1058 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1058 1059 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1059 1159 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1159 1160 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1160 1185 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1185 1186 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1186 1296 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1296 1297 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1297 1386 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1386 1399 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1399 1400 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1400 1454 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1454 1455 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1455 1456 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1456 1457 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1457 1458 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1458 1459 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1459 1480 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1480 1481 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1481 1502 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1502 1503 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1503 1507 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1507 1508 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1508 1530 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1530 1531 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1531 1628 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1628 1629 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1629 1742 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1742 1743 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1743 1839 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1839 1840 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1840 1841 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1841 1842 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil composition (0 1 [8226])) 1842 1843 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1843 1924 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1924 1925 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1925 1996 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 7246) (undo-tree-id73508 . 153) (undo-tree-id73509 . -1958) (undo-tree-id73510 . -1958) (undo-tree-id73511 . 38) (undo-tree-id73512 . -1958) (undo-tree-id73513 . -1958) (undo-tree-id73514 . -1996) (undo-tree-id73515 . -1914) (undo-tree-id73516 . -1914) (undo-tree-id73517 . -1914) (undo-tree-id73518 . -1914) (undo-tree-id73519 . -1914) (undo-tree-id73520 . -1914) (undo-tree-id73521 . -1914) (undo-tree-id73522 . -1914) (undo-tree-id73523 . -1914) (undo-tree-id73524 . -1914) (undo-tree-id73525 . -1914) (undo-tree-id73526 . -1914) (undo-tree-id73527 . -1914) (undo-tree-id73528 . -1914) (undo-tree-id73529 . -1914) (undo-tree-id73530 . -1914) (undo-tree-id73531 . -1914) (undo-tree-id73532 . -1914) (undo-tree-id73533 . -1914) (undo-tree-id73534 . -1914) (undo-tree-id73535 . -1914) (undo-tree-id73536 . -1914) (undo-tree-id73537 . -1914) (undo-tree-id73538 . -1914) (undo-tree-id73539 . -1914) (undo-tree-id73540 . -1914) (undo-tree-id73541 . -1914) (undo-tree-id73542 . -1914) (undo-tree-id73543 . -1914) (undo-tree-id73544 . -1914) (undo-tree-id73545 . -1914) (undo-tree-id73546 . -1914) (undo-tree-id73547 . -1914) (undo-tree-id73548 . -1914) (undo-tree-id73549 . -1914) (undo-tree-id73550 . -1914) (undo-tree-id73551 . -1914) (undo-tree-id73552 . -1914) (undo-tree-id73553 . -1914) (undo-tree-id73554 . -1914) (undo-tree-id73555 . -1914) (undo-tree-id73556 . -1914) (undo-tree-id73557 . -1914) (undo-tree-id73558 . -1914) (undo-tree-id73559 . -1914) (undo-tree-id73560 . -1914) (undo-tree-id73561 . -1914) (undo-tree-id73562 . -1914) (undo-tree-id73563 . -1914) (undo-tree-id73564 . -1914) (undo-tree-id73565 . -1914) (undo-tree-id73566 . -1914) (undo-tree-id73567 . -1914) (undo-tree-id73568 . -1914) (undo-tree-id73569 . -1914) (undo-tree-id73570 . -1914) (undo-tree-id73571 . -1914) (undo-tree-id73572 . -1914) (undo-tree-id73573 . -1914) (undo-tree-id73574 . -1914) (undo-tree-id73575 . -1914) (undo-tree-id73576 . -1914) (undo-tree-id73577 . -1914) (undo-tree-id73578 . -1914) (undo-tree-id73579 . -1914) (undo-tree-id73580 . -1914) (undo-tree-id73581 . -1914) (undo-tree-id73582 . -1914) (undo-tree-id73583 . -1914) (undo-tree-id73584 . -1914) (undo-tree-id73585 . -1914) (undo-tree-id73586 . -1914) (undo-tree-id73587 . -1914) (undo-tree-id73588 . -1914) (undo-tree-id73589 . -1914) (undo-tree-id73590 . -1914) (undo-tree-id73591 . -1914) (undo-tree-id73592 . -1914) (undo-tree-id73593 . -1914) (undo-tree-id73594 . -1914) (undo-tree-id73595 . -1914) (undo-tree-id73596 . -1914) (undo-tree-id73597 . -1914) (undo-tree-id73598 . -1914) (undo-tree-id73599 . -1914) (undo-tree-id73600 . -1914) (undo-tree-id73601 . -1914) (undo-tree-id73602 . -1914) (undo-tree-id73603 . -1914) (undo-tree-id73604 . -1914) (undo-tree-id73605 . -1914) (undo-tree-id73606 . -1914) (undo-tree-id73607 . -1914) (undo-tree-id73608 . -1914) (undo-tree-id73609 . -1914) (undo-tree-id73610 . -1914) (undo-tree-id73611 . -1914) (undo-tree-id73612 . -1914) (undo-tree-id73613 . -1914) (undo-tree-id73614 . -1914) (undo-tree-id73615 . -1914) (undo-tree-id73616 . -1914) (undo-tree-id73617 . -1914) (undo-tree-id73618 . -1914) (undo-tree-id73619 . -1914) (undo-tree-id73620 . -1914) (undo-tree-id73621 . -1914) (undo-tree-id73622 . -1914) (undo-tree-id73623 . -1914) (undo-tree-id73624 . -1914) (undo-tree-id73625 . -1914) (undo-tree-id73626 . -1914) (undo-tree-id73627 . -1914) (undo-tree-id73628 . -1914) (undo-tree-id73629 . -1914) (undo-tree-id73630 . -1914) (undo-tree-id73631 . -1914) (undo-tree-id73632 . -1914) (undo-tree-id73633 . -1914) (undo-tree-id73634 . -1914) (undo-tree-id73635 . -1914) (undo-tree-id73636 . -1914) (undo-tree-id73637 . -1914) (undo-tree-id73638 . -1914) (undo-tree-id73639 . -1914) (undo-tree-id73640 . -1914) (undo-tree-id73641 . -1914) (undo-tree-id73642 . -1914) (undo-tree-id73643 . -1914) (undo-tree-id73644 . -1914) (undo-tree-id73645 . -1914) (undo-tree-id73646 . -1914) (undo-tree-id73647 . -1914) (undo-tree-id73648 . -1914) (undo-tree-id73649 . -1914) (undo-tree-id73650 . -1914) (undo-tree-id73651 . -1914) (undo-tree-id73652 . -1914) (undo-tree-id73653 . -1914) (undo-tree-id73654 . -1914) (undo-tree-id73655 . -1914) (undo-tree-id73656 . -1914) (undo-tree-id73657 . -1914) (undo-tree-id73658 . -1914) (undo-tree-id73659 . -1914) (undo-tree-id73660 . -1914) (undo-tree-id73661 . -1914) (undo-tree-id73662 . -1914) (undo-tree-id73663 . -1914) (undo-tree-id73664 . -1914) (undo-tree-id73665 . -1914) (undo-tree-id73666 . -1914) (undo-tree-id73667 . -1914) (undo-tree-id73668 . -1914) (undo-tree-id73669 . -1914) (undo-tree-id73670 . -1914) (undo-tree-id73671 . -1914) (undo-tree-id73672 . -1914) (undo-tree-id73673 . -1914) (undo-tree-id73674 . -1914) (undo-tree-id73675 . -1914) (undo-tree-id73676 . -1914) (undo-tree-id73677 . -1914) (undo-tree-id73678 . -1914) (undo-tree-id73679 . -1914) (undo-tree-id73680 . -1914) (undo-tree-id73681 . -1914) (undo-tree-id73682 . -1914) (undo-tree-id73683 . -1914) (undo-tree-id73684 . -1914) (undo-tree-id73685 . -1914) (undo-tree-id73686 . -1914) (undo-tree-id73687 . -1914) (undo-tree-id73688 . -1914) (undo-tree-id73689 . -1914) (undo-tree-id73690 . -1914) (undo-tree-id73691 . -1914) (undo-tree-id73692 . -1914) (undo-tree-id73693 . -1914) (undo-tree-id73694 . -1914) (undo-tree-id73695 . -1914) (undo-tree-id73696 . -1914) (undo-tree-id73697 . -1914) (undo-tree-id73698 . -1914) (undo-tree-id73699 . -1914) (undo-tree-id73700 . -1914) (undo-tree-id73701 . -1914) (undo-tree-id73702 . -1914) (undo-tree-id73703 . -1914) (undo-tree-id73704 . -1914) (undo-tree-id73705 . -1914) (undo-tree-id73706 . -1914) (undo-tree-id73707 . -1914) (undo-tree-id73708 . -1914) (undo-tree-id73709 . -1914) (undo-tree-id73710 . -1914) (undo-tree-id73711 . -1914) (undo-tree-id73712 . -1914) (undo-tree-id73713 . -1914) (undo-tree-id73714 . -1914) (undo-tree-id73715 . -1914) (undo-tree-id73716 . -1914) (undo-tree-id73717 . -1914) (undo-tree-id73718 . -1914) (undo-tree-id73719 . -1914) (undo-tree-id73720 . -1914) (undo-tree-id73721 . -1914) (undo-tree-id73722 . -1914) (undo-tree-id73723 . -1914) (undo-tree-id73724 . -1914) (undo-tree-id73725 . -1914) (undo-tree-id73726 . -1914) (undo-tree-id73727 . -1914) (undo-tree-id73728 . -1914) (undo-tree-id73729 . -1914) (undo-tree-id73730 . -1914) (undo-tree-id73731 . -1914) (undo-tree-id73732 . -1914) (undo-tree-id73733 . -1914) (undo-tree-id73734 . -1914) (undo-tree-id73735 . -1914) (undo-tree-id73736 . -1914) (undo-tree-id73737 . -1914) (undo-tree-id73738 . -1914) (undo-tree-id73739 . -1914) (undo-tree-id73740 . -1914) (undo-tree-id73741 . -1914) (undo-tree-id73742 . -1914) (undo-tree-id73743 . -1914) (undo-tree-id73744 . -1914) (undo-tree-id73745 . -1914) (undo-tree-id73746 . -1914) (undo-tree-id73747 . -1914) (undo-tree-id73748 . -1914) (undo-tree-id73749 . -1914) (undo-tree-id73750 . -1914) (undo-tree-id73751 . -1914) (undo-tree-id73752 . -1914) (undo-tree-id73753 . -1914) (undo-tree-id73754 . -1914) (undo-tree-id73755 . -1914) (undo-tree-id73756 . -1914) (undo-tree-id73757 . -1914) (undo-tree-id73758 . -1914) (undo-tree-id73759 . -1914) (undo-tree-id73760 . -1914) (undo-tree-id73761 . -1914) (undo-tree-id73762 . -1914) (undo-tree-id73763 . -1914) (undo-tree-id73764 . -1914) (undo-tree-id73765 . -1914) (undo-tree-id73766 . -1914) (undo-tree-id73767 . -1914) (undo-tree-id73768 . -1914) (undo-tree-id73769 . -1914) (undo-tree-id73770 . -1914) (undo-tree-id73771 . -1914) (undo-tree-id73772 . -1914) (undo-tree-id73773 . -1914) (undo-tree-id73774 . -1914) (undo-tree-id73775 . -1914) (undo-tree-id73776 . -1914) (undo-tree-id73777 . -1914) (undo-tree-id73778 . -1914) (undo-tree-id73779 . -1914) (undo-tree-id73780 . -1914) (undo-tree-id73781 . -1914) (undo-tree-id73782 . -1914) (undo-tree-id73783 . -1914) (undo-tree-id73784 . -1914) (undo-tree-id73785 . -1914) (undo-tree-id73786 . -1914) (undo-tree-id73787 . -1914) (undo-tree-id73788 . -1914) (undo-tree-id73789 . -1914) (undo-tree-id73790 . -1914) (undo-tree-id73791 . -1914) (undo-tree-id73792 . -1914) (undo-tree-id73793 . -1914) (undo-tree-id73794 . -1914) (undo-tree-id73795 . -1914) (undo-tree-id73796 . -1914) (undo-tree-id73797 . -1914) (undo-tree-id73798 . -1914) (undo-tree-id73799 . -1914) (undo-tree-id73800 . -1914) (undo-tree-id73801 . -1914) (undo-tree-id73802 . -1914) (undo-tree-id73803 . -1914) (undo-tree-id73804 . -1914) (undo-tree-id73805 . -1914) (undo-tree-id73806 . -1914) (undo-tree-id73807 . -1914) (undo-tree-id73808 . -1914) (undo-tree-id73809 . -1914) (undo-tree-id73810 . -1914) (undo-tree-id73811 . -1914) (undo-tree-id73812 . -1914) (undo-tree-id73813 . -1914) (undo-tree-id73814 . -1914) (undo-tree-id73815 . -1914) (undo-tree-id73816 . -1914) (undo-tree-id73817 . -1914) (undo-tree-id73818 . -1914) (undo-tree-id73819 . -1914) (undo-tree-id73820 . -1914) (undo-tree-id73821 . -1914) (undo-tree-id73822 . -1914) (undo-tree-id73823 . -1914) (undo-tree-id73824 . -1914) (undo-tree-id73825 . -1914) (undo-tree-id73826 . -1914) (undo-tree-id73827 . -1914) (undo-tree-id73828 . -1914) (undo-tree-id73829 . -1914) (undo-tree-id73830 . -1914) (undo-tree-id73831 . -1914) (undo-tree-id73832 . -1914) (undo-tree-id73833 . -1914) (undo-tree-id73834 . -1914) (undo-tree-id73835 . -1914) (undo-tree-id73836 . -1914) (undo-tree-id73837 . -1914) (undo-tree-id73838 . -1914) (undo-tree-id73839 . -1914) (undo-tree-id73840 . -1914) (undo-tree-id73841 . -1914) (undo-tree-id73842 . -1914) (undo-tree-id73843 . -1914) (undo-tree-id73844 . -1914) (undo-tree-id73845 . -1914) (undo-tree-id73846 . -1914) (undo-tree-id73847 . -1914) (undo-tree-id73848 . -1914) (undo-tree-id73849 . -1914) (undo-tree-id73850 . -1914) (undo-tree-id73851 . -1914) (undo-tree-id73852 . -1914) (undo-tree-id73853 . -1914) (undo-tree-id73854 . -1914) (undo-tree-id73855 . -1914) (undo-tree-id73856 . -1914) (undo-tree-id73857 . -1914) (undo-tree-id73858 . -1914) (undo-tree-id73859 . -1914) (undo-tree-id73860 . -1914) (undo-tree-id73861 . -1914) (undo-tree-id73862 . -1914) (undo-tree-id73863 . -1914) (undo-tree-id73864 . -1914) (undo-tree-id73865 . -1914) (undo-tree-id73866 . -1914) (undo-tree-id73867 . -1914) (undo-tree-id73868 . -1914) (undo-tree-id73869 . -1914) (undo-tree-id73870 . -1914) (undo-tree-id73871 . -1914) (undo-tree-id73872 . -1914) (undo-tree-id73873 . -1914) (undo-tree-id73874 . -1914) (undo-tree-id73875 . -1914) (undo-tree-id73876 . -1914) (undo-tree-id73877 . -1914) (undo-tree-id73878 . -1914) (undo-tree-id73879 . -1914) (undo-tree-id73880 . -1914) (undo-tree-id73881 . -1914) (undo-tree-id73882 . -1914) (undo-tree-id73883 . -1914) (undo-tree-id73884 . -1914) (undo-tree-id73885 . -1914) (undo-tree-id73886 . -1914) (undo-tree-id73887 . -1914) (undo-tree-id73888 . -1914) (undo-tree-id73889 . -1914) (undo-tree-id73890 . -1914) (undo-tree-id73891 . -1914) (undo-tree-id73892 . -1914) (undo-tree-id73893 . -1914) (undo-tree-id73894 . -1914) (undo-tree-id73895 . -1914) (undo-tree-id73896 . -1914) (undo-tree-id73897 . -1914) (undo-tree-id73898 . -1914) (undo-tree-id73899 . -1914) (undo-tree-id73900 . -1914) (undo-tree-id73901 . -1914) (undo-tree-id73902 . -1914) (undo-tree-id73903 . -1914) (undo-tree-id73904 . -1914) (undo-tree-id73905 . -1914) (undo-tree-id73906 . -1914) (undo-tree-id73907 . -1914) (undo-tree-id73908 . -1914) (undo-tree-id73909 . -1914) (undo-tree-id73910 . -1914) (undo-tree-id73911 . -1914) (undo-tree-id73912 . -1914) (undo-tree-id73913 . -1914) (undo-tree-id73914 . -1914) (undo-tree-id73915 . -1914) (undo-tree-id73916 . -1914) (undo-tree-id73917 . -1914) (undo-tree-id73918 . -1914) (undo-tree-id73919 . -1914) (undo-tree-id73920 . -1914) (undo-tree-id73921 . -1914) (undo-tree-id73922 . -1914) (undo-tree-id73923 . -1914) (undo-tree-id73924 . -1914) (undo-tree-id73925 . -1914) (undo-tree-id73926 . -1914) (undo-tree-id73927 . -1914) (undo-tree-id73928 . -1914) (undo-tree-id73929 . -1914) (undo-tree-id73930 . -1914) (undo-tree-id73931 . -1914) (undo-tree-id73932 . -1914) (undo-tree-id73933 . -1914) (undo-tree-id73934 . -1914) (undo-tree-id73935 . -1914) (undo-tree-id73936 . -1914) (undo-tree-id73937 . -1914) (undo-tree-id73938 . -1914) (undo-tree-id73939 . -1914) (undo-tree-id73940 . -1914) (undo-tree-id73941 . -1914) (undo-tree-id73942 . -1914) (undo-tree-id73943 . -1914) (undo-tree-id73944 . -1914) (undo-tree-id73945 . -1914) (undo-tree-id73946 . -1914) (undo-tree-id73947 . -1914) (undo-tree-id73948 . -1914) (undo-tree-id73949 . -1914) (undo-tree-id73950 . -1914) (undo-tree-id73951 . -1914) (undo-tree-id73952 . -1914) (undo-tree-id73953 . -1914) (undo-tree-id73954 . -1914) (undo-tree-id73955 . -1914) (undo-tree-id73956 . -1914) (undo-tree-id73957 . -1914) (undo-tree-id73958 . -1914) (undo-tree-id73959 . -1914) (undo-tree-id73960 . -1914) (undo-tree-id73961 . -1914) (undo-tree-id73962 . -1914) (undo-tree-id73963 . -1914) (undo-tree-id73964 . -1914) (undo-tree-id73965 . -1914) (undo-tree-id73966 . -1914) (undo-tree-id73967 . -1914) (undo-tree-id73968 . -1914) (undo-tree-id73969 . -1914) (undo-tree-id73970 . -1914) (undo-tree-id73971 . -1914) (undo-tree-id73972 . -1914) (undo-tree-id73973 . -1914) (undo-tree-id73974 . -1914) (undo-tree-id73975 . -1914) (undo-tree-id73976 . -1914) (undo-tree-id73977 . -1914) (undo-tree-id73978 . -1914) (undo-tree-id73979 . -1914) (undo-tree-id73980 . -1914) (undo-tree-id73981 . -1914) (undo-tree-id73982 . -1914) (undo-tree-id73983 . -1914) (undo-tree-id73984 . -1914) (undo-tree-id73985 . -1914) (undo-tree-id73986 . -1914) (undo-tree-id73987 . -1958) (undo-tree-id73988 . -1958) (undo-tree-id73989 . -1958) (undo-tree-id73990 . -1958) (undo-tree-id73991 . -1958) (undo-tree-id73992 . -1958) (undo-tree-id73993 . -1958) (undo-tree-id73994 . -1958) (undo-tree-id73995 . -1958) (undo-tree-id73996 . -1958) (undo-tree-id73997 . -1958) (undo-tree-id73998 . -1958) (undo-tree-id73999 . -1958) (undo-tree-id74000 . -1958) (undo-tree-id74001 . -1958) (undo-tree-id74002 . -1958) (undo-tree-id74003 . -1958) (undo-tree-id74004 . -1958) (undo-tree-id74005 . -1958) (undo-tree-id74006 . -1958) (undo-tree-id74007 . -1958) (undo-tree-id74008 . -1958) (undo-tree-id74009 . -1958) (undo-tree-id74010 . -1958) (undo-tree-id74011 . -1958) (undo-tree-id74012 . -1958) (undo-tree-id74013 . -1958) (undo-tree-id74014 . -1958) (undo-tree-id74015 . -1958) (undo-tree-id74016 . -1958) (undo-tree-id74017 . -1958) (undo-tree-id74018 . -1958) (undo-tree-id74019 . -1958) (undo-tree-id74020 . -1958) (undo-tree-id74021 . -1958) (undo-tree-id74022 . -1958) (undo-tree-id74023 . -1958) (undo-tree-id74024 . -1958) (undo-tree-id74025 . -1958) (undo-tree-id74026 . -1958) (undo-tree-id74027 . -1958) (undo-tree-id74028 . -1958) (undo-tree-id74029 . -1958) (undo-tree-id74030 . -1958) (undo-tree-id74031 . -1958) (undo-tree-id74032 . -1958) (undo-tree-id74033 . -1958) (undo-tree-id74034 . -1958) (undo-tree-id74035 . -1958) (undo-tree-id74036 . -1958) (undo-tree-id74037 . -1958) (undo-tree-id74038 . -1958) (undo-tree-id74039 . -1958) (undo-tree-id74040 . -1958) (undo-tree-id74041 . -1958) (undo-tree-id74042 . -1958) (undo-tree-id74043 . -1958) (undo-tree-id74044 . -1958) (undo-tree-id74045 . -1958) (undo-tree-id74046 . -1958) (undo-tree-id74047 . -1958) (undo-tree-id74048 . -1958) (undo-tree-id74049 . -1958) (undo-tree-id74050 . -1958) (undo-tree-id74051 . -1958) (undo-tree-id74052 . -1958) (undo-tree-id74053 . -1958) (undo-tree-id74054 . -1958) (undo-tree-id74055 . -1958) (undo-tree-id74056 . -1958) (undo-tree-id74057 . -1958) (undo-tree-id74058 . -1958) (undo-tree-id74059 . -1958) (undo-tree-id74060 . -1958) (undo-tree-id74061 . -1958) (undo-tree-id74062 . -1958) (undo-tree-id74063 . -1958) (undo-tree-id74064 . -1958) (undo-tree-id74065 . -1958) (undo-tree-id74066 . -1958) (undo-tree-id74067 . -1958) (undo-tree-id74068 . -1958) (undo-tree-id74069 . -1958) (undo-tree-id74070 . -1958) (undo-tree-id74071 . -1958) (undo-tree-id74072 . -1958) (undo-tree-id74073 . -1958) (undo-tree-id74074 . -1958) (undo-tree-id74075 . -1958) (undo-tree-id74076 . -1958) (undo-tree-id74077 . -1958) (undo-tree-id74078 . -1958) (undo-tree-id74079 . -1958) (undo-tree-id74080 . -1958) (undo-tree-id74081 . -1958) (undo-tree-id74082 . -1958) (undo-tree-id74083 . -1958) (undo-tree-id74084 . -1958) (undo-tree-id74085 . -1958) (undo-tree-id74086 . -1958) (undo-tree-id74087 . -1958) (undo-tree-id74088 . -1958) (undo-tree-id74089 . -1958) (undo-tree-id74090 . -1958) (undo-tree-id74091 . -1958) (undo-tree-id74092 . -1958) (undo-tree-id74093 . -1958) (undo-tree-id74094 . -1958) (undo-tree-id74095 . -1958) (undo-tree-id74096 . -1958) (undo-tree-id74097 . -1958) (undo-tree-id74098 . -1958) (undo-tree-id74099 . -1958) (undo-tree-id74100 . -1958) (undo-tree-id74101 . -1958) (undo-tree-id74102 . -1958) (undo-tree-id74103 . -1958) (undo-tree-id74104 . -1958) (undo-tree-id74105 . -1958) (undo-tree-id74106 . -1958) (undo-tree-id74107 . -1958) (undo-tree-id74108 . -1958) (undo-tree-id74109 . -1958) (undo-tree-id74110 . -1958) (undo-tree-id74111 . -1958) (undo-tree-id74112 . -1958) (undo-tree-id74113 . -1958) (undo-tree-id74114 . -1958) (undo-tree-id74115 . -1958) (undo-tree-id74116 . -1958) (undo-tree-id74117 . -1958) (undo-tree-id74118 . -1958) (undo-tree-id74119 . -1958) (undo-tree-id74120 . -1958) (undo-tree-id74121 . -1958) (undo-tree-id74122 . -1958) (undo-tree-id74123 . -1958) (undo-tree-id74124 . -1958) (undo-tree-id74125 . -1958) (undo-tree-id74126 . -1958) (undo-tree-id74127 . -1958) (undo-tree-id74128 . -1958) (undo-tree-id74129 . -1958) (undo-tree-id74130 . -1958) (undo-tree-id74131 . -1958) (undo-tree-id74132 . -1958) (undo-tree-id74133 . -1958) (undo-tree-id74134 . -1958) (undo-tree-id74135 . -1958) (undo-tree-id74136 . -1958) (undo-tree-id74137 . -1958) (undo-tree-id74138 . -1958) (undo-tree-id74139 . -1958) (undo-tree-id74140 . -1958) (undo-tree-id74141 . -1958) (undo-tree-id74142 . -1958) (undo-tree-id74143 . -1958) (undo-tree-id74144 . -1958) (undo-tree-id74145 . -1958) (undo-tree-id74146 . -1958) (undo-tree-id74147 . -1958) (undo-tree-id74148 . -1958) (undo-tree-id74149 . -1958) (undo-tree-id74150 . -1958) (undo-tree-id74151 . -1958) (undo-tree-id74152 . -1958) (undo-tree-id74153 . -1958) (undo-tree-id74154 . -1958) (undo-tree-id74155 . -1958) (undo-tree-id74156 . -1958) (undo-tree-id74157 . -1958) (undo-tree-id74158 . -1958) (undo-tree-id74159 . -1958) (undo-tree-id74160 . -1958) (undo-tree-id74161 . -1958) (undo-tree-id74162 . -1958) (undo-tree-id74163 . -1958) (undo-tree-id74164 . -1958) (undo-tree-id74165 . -1958) (undo-tree-id74166 . -1958) (undo-tree-id74167 . -1958) (undo-tree-id74168 . -1958) (undo-tree-id74169 . -1958) (undo-tree-id74170 . -1958) (undo-tree-id74171 . -1958) (undo-tree-id74172 . -1958) (undo-tree-id74173 . -1958) (undo-tree-id74174 . -1958) (undo-tree-id74175 . -1958) (undo-tree-id74176 . -1958) (undo-tree-id74177 . -1958) (undo-tree-id74178 . -1958) (undo-tree-id74179 . -1958) (undo-tree-id74180 . -1958) (undo-tree-id74181 . -1958) (undo-tree-id74182 . -1958) (undo-tree-id74183 . -1958) (undo-tree-id74184 . -1958) (undo-tree-id74185 . -1958) (undo-tree-id74186 . -1958) (undo-tree-id74187 . -1958) (undo-tree-id74188 . -1958) (undo-tree-id74189 . -1958) (undo-tree-id74190 . -1958) (undo-tree-id74191 . -1958) (undo-tree-id74192 . -1958) (undo-tree-id74193 . -1958) (undo-tree-id74194 . -1958) (undo-tree-id74195 . -1958) (undo-tree-id74196 . -1958) (undo-tree-id74197 . -1958) (undo-tree-id74198 . -1958) (undo-tree-id74199 . -1958) (undo-tree-id74200 . -1958) (undo-tree-id74201 . -1958) (undo-tree-id74202 . -1958) (undo-tree-id74203 . -1958) (undo-tree-id74204 . -1958) (undo-tree-id74205 . -1958) (undo-tree-id74206 . -1958) (undo-tree-id74207 . -1958) (undo-tree-id74208 . -1958) (undo-tree-id74209 . -1958) (undo-tree-id74210 . -1958) (undo-tree-id74211 . -1958) (undo-tree-id74212 . -1958) (undo-tree-id74213 . -1958) (undo-tree-id74214 . -1958) (undo-tree-id74215 . -1958) (undo-tree-id74216 . -1958) (undo-tree-id74217 . -1958) (undo-tree-id74218 . -1958) (undo-tree-id74219 . -1958) (undo-tree-id74220 . -1958) (undo-tree-id74221 . -1958) (undo-tree-id74222 . -1958) (undo-tree-id74223 . -1958) (undo-tree-id74224 . -1958) (undo-tree-id74225 . -1958) (undo-tree-id74226 . -1958) (undo-tree-id74227 . -1958) (undo-tree-id74228 . -1958) (undo-tree-id74229 . -1958) (undo-tree-id74230 . -1958) (undo-tree-id74231 . -1958) (undo-tree-id74232 . -1958) (undo-tree-id74233 . -1958) (undo-tree-id74234 . -1958) (undo-tree-id74235 . -1958) (undo-tree-id74236 . -1958) (undo-tree-id74237 . -1958) (undo-tree-id74238 . -1958) (undo-tree-id74239 . -1958) (undo-tree-id74240 . -1958) (undo-tree-id74241 . -1958) (undo-tree-id74242 . -1958) (undo-tree-id74243 . -1958) (undo-tree-id74244 . -1958) (undo-tree-id74245 . -1958) (undo-tree-id74246 . -1958) (undo-tree-id74247 . -1958) (undo-tree-id74248 . -1958) (undo-tree-id74249 . -1958) (undo-tree-id74250 . -1958) (undo-tree-id74251 . -1958) (undo-tree-id74252 . -1958) (undo-tree-id74253 . -1958) (undo-tree-id74254 . -1958) (undo-tree-id74255 . -1958) (undo-tree-id74256 . -1958) (undo-tree-id74257 . -1958) (undo-tree-id74258 . -1958) (undo-tree-id74259 . -1958) (undo-tree-id74260 . -1958) (undo-tree-id74261 . -1958) (undo-tree-id74262 . -1958) (undo-tree-id74263 . -1958) (undo-tree-id74264 . -1958) (undo-tree-id74265 . -1958) (undo-tree-id74266 . -1958) (undo-tree-id74267 . -1958) (undo-tree-id74268 . -1958) (undo-tree-id74269 . -1958) (undo-tree-id74270 . -1958) (undo-tree-id74271 . -1958) (undo-tree-id74272 . -1958) (undo-tree-id74273 . -1958) (undo-tree-id74274 . -1958) (undo-tree-id74275 . -1958) (undo-tree-id74276 . -1958) (undo-tree-id74277 . -1958) (undo-tree-id74278 . -1958) (undo-tree-id74279 . -1958) (undo-tree-id74280 . -1958) (undo-tree-id74281 . -1958) (undo-tree-id74282 . -1958) (undo-tree-id74283 . -1958) (undo-tree-id74284 . -1958) (undo-tree-id74285 . -1958) (undo-tree-id74286 . -1958) (undo-tree-id74287 . -1958) (undo-tree-id74288 . -1958) (undo-tree-id74289 . -1958) (undo-tree-id74290 . -1958) (undo-tree-id74291 . -1958) (undo-tree-id74292 . -1958) (undo-tree-id74293 . -1958) (undo-tree-id74294 . -1958) (undo-tree-id74295 . -1958) (undo-tree-id74296 . -1958) (undo-tree-id74297 . -1958) (undo-tree-id74298 . -1958) (undo-tree-id74299 . -1958) (undo-tree-id74300 . -1958) (undo-tree-id74301 . -1958) (undo-tree-id74302 . -1958) (undo-tree-id74303 . -1958) (undo-tree-id74304 . -1958) (undo-tree-id74305 . -1958) (undo-tree-id74306 . -1958) (undo-tree-id74307 . -1958) (undo-tree-id74308 . -1958) (undo-tree-id74309 . -1958) (undo-tree-id74310 . -1958) (undo-tree-id74311 . -1958) (undo-tree-id74312 . -1958) (undo-tree-id74313 . -1958) (undo-tree-id74314 . -1958) (undo-tree-id74315 . -1958) (undo-tree-id74316 . -1958) (undo-tree-id74317 . -1958) (undo-tree-id74318 . -1958) (undo-tree-id74319 . -1958) (undo-tree-id74320 . -1958) (undo-tree-id74321 . -1958) (undo-tree-id74322 . -1958) (undo-tree-id74323 . -1958) (undo-tree-id74324 . -1958) (undo-tree-id74325 . -1958) (undo-tree-id74326 . -1958) (undo-tree-id74327 . -1958) (undo-tree-id74328 . -1958) (undo-tree-id74329 . -1958) (undo-tree-id74330 . -1958) (undo-tree-id74331 . -1958) (undo-tree-id74332 . -1958) (undo-tree-id74333 . -1958) (undo-tree-id74334 . -1958) (undo-tree-id74335 . -1958) (undo-tree-id74336 . -1958) (undo-tree-id74337 . -1958) (undo-tree-id74338 . -1958) (undo-tree-id74339 . -1958) (undo-tree-id74340 . -1958) (undo-tree-id74341 . -1958) (undo-tree-id74342 . -1958) (undo-tree-id74343 . -1958) (undo-tree-id74344 . -1958) (undo-tree-id74345 . -1958) (undo-tree-id74346 . -1958) (undo-tree-id74347 . -1958) (undo-tree-id74348 . -1958) (undo-tree-id74349 . -1958) (undo-tree-id74350 . -1958) (undo-tree-id74351 . -1958) (undo-tree-id74352 . -1958) (undo-tree-id74353 . -1958) (undo-tree-id74354 . -1958) (undo-tree-id74355 . -1958) (undo-tree-id74356 . -1958) (undo-tree-id74357 . -1958) (undo-tree-id74358 . -1958) (undo-tree-id74359 . -1958) (undo-tree-id74360 . -1958) (undo-tree-id74361 . -1958) (undo-tree-id74362 . -1958) (undo-tree-id74363 . -1958) (undo-tree-id74364 . -1958) (undo-tree-id74365 . -1958) (undo-tree-id74366 . -1958) (undo-tree-id74367 . -1958) (undo-tree-id74368 . -1958) (undo-tree-id74369 . -1958) (undo-tree-id74370 . -1958) (undo-tree-id74371 . -1958) (undo-tree-id74372 . -1958) (undo-tree-id74373 . -1958) (undo-tree-id74374 . -1958) (undo-tree-id74375 . -1958) (undo-tree-id74376 . -1958) (undo-tree-id74377 . -1958) (undo-tree-id74378 . -1958) (undo-tree-id74379 . -1958) (undo-tree-id74380 . -1958) (undo-tree-id74381 . -1958) (undo-tree-id74382 . -1958) (undo-tree-id74383 . -1958) (undo-tree-id74384 . -1958) (undo-tree-id74385 . -1958) (undo-tree-id74386 . -1958) (undo-tree-id74387 . -1958) (undo-tree-id74388 . -1958) (undo-tree-id74389 . -1958) (undo-tree-id74390 . -1958) (undo-tree-id74391 . -1958) (undo-tree-id74392 . -1958) (undo-tree-id74393 . -1958) (undo-tree-id74394 . -1958) (undo-tree-id74395 . -1958) (undo-tree-id74396 . -1958) (undo-tree-id74397 . -1958) (undo-tree-id74398 . -1958) (undo-tree-id74399 . -1958) (undo-tree-id74400 . -1958) (undo-tree-id74401 . -1958) (undo-tree-id74402 . -1958) (undo-tree-id74403 . -1958) (undo-tree-id74404 . -1958) (undo-tree-id74405 . -1958) (undo-tree-id74406 . -1958) (undo-tree-id74407 . -1958) (undo-tree-id74408 . -1958) (undo-tree-id74409 . -1958) (undo-tree-id74410 . -1958) (undo-tree-id74411 . -1958) (undo-tree-id74412 . -1958) (undo-tree-id74413 . -1958) (undo-tree-id74414 . -1958) (undo-tree-id74415 . -1958) (undo-tree-id74416 . -1958) (undo-tree-id74417 . -1958) (undo-tree-id74418 . -1958) (undo-tree-id74419 . -1958) (undo-tree-id74420 . -1958) (undo-tree-id74421 . -1958) (undo-tree-id74422 . -1958) (undo-tree-id74423 . -1958) (undo-tree-id74424 . -1958) (undo-tree-id74425 . -1958) (undo-tree-id74426 . -1958) (undo-tree-id74427 . -1958) (undo-tree-id74428 . -1958) (undo-tree-id74429 . -1996) (undo-tree-id74430 . -1958) (undo-tree-id74431 . -1958) (undo-tree-id74432 . -1958) (undo-tree-id74433 . -1958) (undo-tree-id74434 . -1958) (undo-tree-id74435 . -1958) (undo-tree-id74436 . -1958) (undo-tree-id74437 . -1958) (undo-tree-id74438 . -1958) (undo-tree-id74439 . -1958) (undo-tree-id74440 . -1958) (undo-tree-id74441 . -1958) (undo-tree-id74442 . -1958) (undo-tree-id74443 . -1958) (undo-tree-id74444 . -1958) (undo-tree-id74445 . -1958) (undo-tree-id74446 . -1958) (undo-tree-id74447 . -1958) (undo-tree-id74448 . -1958) (undo-tree-id74449 . -1958) (undo-tree-id74450 . -1958) (undo-tree-id74451 . -1958) (undo-tree-id74452 . -1958) (undo-tree-id74453 . -1958) (undo-tree-id74454 . -1958) (undo-tree-id74455 . -1958) (undo-tree-id74456 . -1958) (undo-tree-id74457 . -1958) (undo-tree-id74458 . -1958) (undo-tree-id74459 . -1958) (undo-tree-id74460 . -1958) (undo-tree-id74461 . -1958) (undo-tree-id74462 . -1958) (undo-tree-id74463 . -1958) (undo-tree-id74464 . -1958) (undo-tree-id74465 . -1958) (undo-tree-id74466 . -1958) (undo-tree-id74467 . -1958) (undo-tree-id74468 . -1958) (undo-tree-id74469 . -1961) (undo-tree-id74470 . -1961) (undo-tree-id74471 . -1961) (undo-tree-id74472 . -1961) (undo-tree-id74473 . -1961) (undo-tree-id74474 . -1961) (undo-tree-id74475 . -1961) (undo-tree-id74476 . -1961) (undo-tree-id74477 . -1961) (undo-tree-id74478 . -1961) (undo-tree-id74479 . -1961) (undo-tree-id74480 . -1961) (undo-tree-id74481 . -1961) (undo-tree-id74482 . -1961) (undo-tree-id74483 . -1961) (undo-tree-id74484 . -1961) (undo-tree-id74485 . -1964) (undo-tree-id74486 . -1964) (undo-tree-id74487 . -1964) (undo-tree-id74488 . -1964) (undo-tree-id74489 . -1964) (undo-tree-id74490 . -1964) (undo-tree-id74491 . -1964) (undo-tree-id74492 . -1964) (undo-tree-id74493 . -1964) (undo-tree-id74494 . -1964) (undo-tree-id74495 . -1964) (undo-tree-id74496 . -1964) (undo-tree-id74497 . -1964) (undo-tree-id74498 . -1964) (undo-tree-id74499 . -1964) (undo-tree-id74500 . -1964) (undo-tree-id74501 . -1964) (undo-tree-id74502 . -1964) (undo-tree-id74503 . -1964) (undo-tree-id74504 . -1964) (undo-tree-id74505 . -1964) (undo-tree-id74506 . -1969) (undo-tree-id74507 . -1969) (undo-tree-id74508 . -1969) (undo-tree-id74509 . -1969) (undo-tree-id74510 . -1969) (undo-tree-id74511 . -1969) (undo-tree-id74512 . -1969) (undo-tree-id74513 . -1969) (undo-tree-id74514 . -1969) (undo-tree-id74515 . -1969) (undo-tree-id74516 . -1969) (undo-tree-id74517 . -1969) (undo-tree-id74518 . -1969) (undo-tree-id74519 . -1969) (undo-tree-id74520 . -1969) (undo-tree-id74521 . -1969) (undo-tree-id74522 . -1976) (undo-tree-id74523 . -1976) (undo-tree-id74524 . -1976) (undo-tree-id74525 . -1976) (undo-tree-id74526 . -1976) (undo-tree-id74527 . -1976) (undo-tree-id74528 . -1976) (undo-tree-id74529 . -1976) (undo-tree-id74530 . -1976) (undo-tree-id74531 . -1976) (undo-tree-id74532 . -1976) (undo-tree-id74533 . -1976) (undo-tree-id74534 . -1976) (undo-tree-id74535 . -1976) (undo-tree-id74536 . -1976) (undo-tree-id74537 . -1976) (undo-tree-id74538 . -1979) (undo-tree-id74539 . -1979) (undo-tree-id74540 . -1979) (undo-tree-id74541 . -1979) (undo-tree-id74542 . -1979) (undo-tree-id74543 . -1979) (undo-tree-id74544 . -1979) (undo-tree-id74545 . -1979) (undo-tree-id74546 . -1979) (undo-tree-id74547 . -1979) (undo-tree-id74548 . -1979) (undo-tree-id74549 . -1979) (undo-tree-id74550 . -1979) (undo-tree-id74551 . -1979) (undo-tree-id74552 . -1979) (undo-tree-id74553 . -1979) (undo-tree-id74554 . -1979) (undo-tree-id74555 . -1979) (undo-tree-id74556 . -1979) (undo-tree-id74557 . -1979) (undo-tree-id74558 . -1979) (undo-tree-id74559 . -1979) (undo-tree-id74560 . -1979) (undo-tree-id74561 . -1979) (undo-tree-id74562 . -1979) (undo-tree-id74563 . -1979) (undo-tree-id74564 . -1982) (undo-tree-id74565 . -1982) (undo-tree-id74566 . -1982) (undo-tree-id74567 . -1982) (undo-tree-id74568 . -1982) (undo-tree-id74569 . -1982) (undo-tree-id74570 . -1982) (undo-tree-id74571 . -1982) (undo-tree-id74572 . -1982) (undo-tree-id74573 . -1982) (undo-tree-id74574 . -1982) (undo-tree-id74575 . -1982) (undo-tree-id74576 . -1982) (undo-tree-id74577 . -1982) (undo-tree-id74578 . -1982) (undo-tree-id74579 . -1982) (undo-tree-id74580 . -1986) (undo-tree-id74581 . -1986) (undo-tree-id74582 . -1986) (undo-tree-id74583 . -1986) (undo-tree-id74584 . -1986) (undo-tree-id74585 . -1986) (undo-tree-id74586 . -1986) (undo-tree-id74587 . -1986) (undo-tree-id74588 . -1986) (undo-tree-id74589 . -1986) (undo-tree-id74590 . -1986) (undo-tree-id74591 . -1986) (undo-tree-id74592 . -1986) (undo-tree-id74593 . -1986) (undo-tree-id74594 . -1986) (undo-tree-id74595 . -1986) (undo-tree-id74596 . -1994) (undo-tree-id74597 . -1994) (undo-tree-id74598 . -1994) (undo-tree-id74599 . -1994) (undo-tree-id74600 . -1994) (undo-tree-id74601 . -1994) (undo-tree-id74602 . -1994) (undo-tree-id74603 . -1994) (undo-tree-id74604 . -1994) (undo-tree-id74605 . -1994) (undo-tree-id74606 . -1994) (undo-tree-id74607 . -1994) (undo-tree-id74608 . -1994) (undo-tree-id74609 . -1994) (undo-tree-id74610 . -1994) (undo-tree-id74611 . -1994) (undo-tree-id74612 . -1994) (undo-tree-id74613 . -1994) (undo-tree-id74614 . -1994) (undo-tree-id74615 . -1994) (undo-tree-id74616 . -1994) (undo-tree-id74617 . -1995) (undo-tree-id74618 . -1995) (undo-tree-id74619 . -1995) (undo-tree-id74620 . -1995) (undo-tree-id74621 . -1995) (undo-tree-id74622 . -1995) (undo-tree-id74623 . -1995) (undo-tree-id74624 . -1995) (undo-tree-id74625 . -1995) (undo-tree-id74626 . -1995) (undo-tree-id74627 . -1995) (undo-tree-id74628 . -1995) (undo-tree-id74629 . -1995) (undo-tree-id74630 . -1995) (undo-tree-id74631 . -1995) (undo-tree-id74632 . -1995) (undo-tree-id74633 . -1996) (undo-tree-id74634 . -1996) (undo-tree-id74635 . -1996) (undo-tree-id74636 . -1996) (undo-tree-id74637 . -1996) (undo-tree-id74638 . -1996) (undo-tree-id74639 . -1996) (undo-tree-id74640 . -1996) (undo-tree-id74641 . -1996) (undo-tree-id74642 . -1996) (undo-tree-id74643 . -1996) (undo-tree-id74644 . -1996) (undo-tree-id74645 . -1996) (undo-tree-id74646 . -1996) (undo-tree-id74647 . -1996) (undo-tree-id74648 . -1996) (undo-tree-id74649 . -1996) (undo-tree-id74650 . -1996) (undo-tree-id74651 . -1996) (undo-tree-id74652 . -1996) (undo-tree-id74653 . -1996) (undo-tree-id74654 . -1996) (undo-tree-id74655 . -1996) (undo-tree-id74656 . -1996) (undo-tree-id74657 . -1841) (7246 . 9087) (#(" The encoder is a stack of six identical layers. Six is not a magic number here but merely a hyperparam- eter choice made in the original transformer paper. You can adjust the number of layers according to the model performance. Inside each of these identical layers, there are two sublayers: one computes the multi-head self-attention, which we will discuss below, and the other one is a fully connected layer, which you have already encountered in previous chapters. Let’s first talk about the multi-head self-attention, which is a simple modification of scaled dot-product attention covered earlier in this chapter. In the scaled dot-product attention, we used three matrices (corresponding to query, value, and key) to transform the input sequence. In the context of multi-head attention, we can think of this set of three matrices as one attention head. As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 104 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 104 105 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 105 205 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 205 206 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 206 223 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 223 275 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 275 276 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 276 277 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 277 305 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 305 306 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 306 309 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 309 310 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 310 344 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 344 345 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 345 411 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 411 412 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 412 468 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 468 469 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 469 541 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 541 575 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 575 576 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 576 678 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 678 679 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 679 781 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 781 782 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 782 806 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 806 884 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 884 885 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 885 985 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 985 986 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 986 1041 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1041 1057 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1057 1058 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1058 1158 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1158 1159 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1159 1184 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1184 1185 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1185 1295 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1295 1296 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1296 1385 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1385 1398 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1398 1399 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1399 1453 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1453 1454 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1454 1455 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1455 1456 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1456 1457 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1457 1458 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1458 1479 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1479 1480 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1480 1501 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1501 1502 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1502 1506 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1506 1507 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1507 1529 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1529 1530 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1530 1627 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1627 1628 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1628 1741 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1741 1742 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1742 1838 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1838 1839 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 7401) (undo-tree-id74658 . 1746) (undo-tree-id74659 . -103) (undo-tree-id74660 . 218) (undo-tree-id74661 . -1626) (undo-tree-id74662 . -1741) (t 25775 797 388579 895000)) nil (25775 805 595389 265000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7402) (undo-tree-id73498 . -2) (undo-tree-id73499 . -2) (undo-tree-id73500 . -2) (undo-tree-id73501 . -2) (undo-tree-id73502 . -2) (undo-tree-id73503 . -2) (undo-tree-id73504 . -2) (undo-tree-id73505 . -2) (undo-tree-id73506 . -2) (undo-tree-id73507 . -2) 7404 (7401 . 7404) 7363) nil (25775 805 594237 397000) 0 nil])
([nil nil ((7403 . 9246) (#("- Six is not a magic number here but merely a hyperparam- eter choice made in the original transformer paper. You can adjust the number of layers according to the model performance. Inside each of these identical layers, there are two sublayers: one computes the multi-head self-attention, which we will discuss below, and the other one is a fully connected layer, which you have already encountered in previous chapters. Let’s first talk about the multi-head self-attention, which is a simple modification of scaled dot-product attention covered earlier in this chapter. In the scaled dot-product attention, we used three matrices (corresponding to query, value, and key) to transform the input sequence. In the context of multi-head attention, we can think of this set of three matrices as one attention head. As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the

- The encoder is a stack of six identical layers." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 57 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 57 58 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 58 158 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 158 159 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 159 176 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 176 228 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 228 229 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 229 230 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 230 258 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 258 259 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 259 262 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 262 263 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 263 296 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 296 297 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 297 298 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 298 364 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 364 365 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 365 421 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 421 422 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 422 494 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 494 528 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 528 529 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 529 631 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 631 632 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 632 734 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 734 735 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 735 759 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 759 837 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 837 838 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 838 938 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 938 939 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 939 994 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 994 1010 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1010 1011 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1011 1111 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1111 1112 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1112 1137 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1137 1138 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1138 1248 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1248 1249 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1249 1338 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1338 1351 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1351 1352 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1352 1406 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1406 1407 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1407 1408 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1408 1409 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1409 1410 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1410 1411 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1411 1432 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1432 1433 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1433 1454 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1454 1455 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1455 1459 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1459 1460 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1460 1482 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1482 1483 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1483 1580 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1580 1581 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1581 1694 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1694 1695 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1695 1791 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1791 1792 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1792 1793 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1793 1794 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1794 1795 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1795 1796 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1796 1843 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 7403) (undo-tree-id74663 . 1) (undo-tree-id74664 . -1796) (undo-tree-id74665 . -1796) (undo-tree-id74666 . -1796) (undo-tree-id74667 . -1796) (undo-tree-id74668 . -1796) (undo-tree-id74669 . -1796) (undo-tree-id74670 . -1796) (undo-tree-id74671 . -1796) (undo-tree-id74672 . -1796) (undo-tree-id74673 . -1796) (undo-tree-id74674 . -1796) (undo-tree-id74675 . -1796) (undo-tree-id74676 . -1796) (undo-tree-id74677 . -1796) (undo-tree-id74678 . -1796) (undo-tree-id74679 . -1796) (undo-tree-id74680 . -1796) (undo-tree-id74681 . -1796) (undo-tree-id74682 . -1796) (undo-tree-id74683 . -1796) (undo-tree-id74684 . -1796) (undo-tree-id74685 . -1796) (undo-tree-id74686 . -1796) (undo-tree-id74687 . -1796) (undo-tree-id74688 . -1796) (undo-tree-id74689 . -1796) (undo-tree-id74690 . -1796) (undo-tree-id74691 . -1796) (undo-tree-id74692 . -1796) (undo-tree-id74693 . -1796) (undo-tree-id74694 . -1796) (undo-tree-id74695 . -1796) (undo-tree-id74696 . -1843) (undo-tree-id74697 . -1796) (undo-tree-id74698 . -1796) (undo-tree-id74699 . -1796) (undo-tree-id74700 . -1796) (undo-tree-id74701 . -1796) (undo-tree-id74702 . -1796) (undo-tree-id74703 . -1796) (undo-tree-id74704 . -1796) (undo-tree-id74705 . -1796) (undo-tree-id74706 . -1796) (undo-tree-id74707 . -1796) (undo-tree-id74708 . -1796) (undo-tree-id74709 . -1796) (undo-tree-id74710 . -1796) (undo-tree-id74711 . -1796) (undo-tree-id74712 . -1796) (undo-tree-id74713 . -1796) (undo-tree-id74714 . -1796) (undo-tree-id74715 . -1796) (undo-tree-id74716 . -1798) (undo-tree-id74717 . -1798) (undo-tree-id74718 . -1798) (undo-tree-id74719 . -1798) (undo-tree-id74720 . -1798) (undo-tree-id74721 . -1798) (undo-tree-id74722 . -1798) (undo-tree-id74723 . -1798) (undo-tree-id74724 . -1798) (undo-tree-id74725 . -1798) (undo-tree-id74726 . -1798) (undo-tree-id74727 . -1798) (undo-tree-id74728 . -1798) (undo-tree-id74729 . -1798) (undo-tree-id74730 . -1798) (undo-tree-id74731 . -1798) (undo-tree-id74732 . -1798) (undo-tree-id74733 . -1798) (undo-tree-id74734 . -1798) (undo-tree-id74735 . -1798) (undo-tree-id74736 . -1798) (undo-tree-id74737 . -1798) (undo-tree-id74738 . -1798) (undo-tree-id74739 . -1798) (undo-tree-id74740 . -1798) (undo-tree-id74741 . -1798) (undo-tree-id74742 . -1806) (undo-tree-id74743 . -1806) (undo-tree-id74744 . -1806) (undo-tree-id74745 . -1806) (undo-tree-id74746 . -1806) (undo-tree-id74747 . -1806) (undo-tree-id74748 . -1806) (undo-tree-id74749 . -1806) (undo-tree-id74750 . -1806) (undo-tree-id74751 . -1806) (undo-tree-id74752 . -1806) (undo-tree-id74753 . -1809) (undo-tree-id74754 . -1809) (undo-tree-id74755 . -1809) (undo-tree-id74756 . -1809) (undo-tree-id74757 . -1809) (undo-tree-id74758 . -1809) (undo-tree-id74759 . -1809) (undo-tree-id74760 . -1809) (undo-tree-id74761 . -1809) (undo-tree-id74762 . -1809) (undo-tree-id74763 . -1809) (undo-tree-id74764 . -1811) (undo-tree-id74765 . -1811) (undo-tree-id74766 . -1811) (undo-tree-id74767 . -1811) (undo-tree-id74768 . -1811) (undo-tree-id74769 . -1811) (undo-tree-id74770 . -1811) (undo-tree-id74771 . -1811) (undo-tree-id74772 . -1811) (undo-tree-id74773 . -1811) (undo-tree-id74774 . -1811) (undo-tree-id74775 . -1817) (undo-tree-id74776 . -1817) (undo-tree-id74777 . -1817) (undo-tree-id74778 . -1817) (undo-tree-id74779 . -1817) (undo-tree-id74780 . -1817) (undo-tree-id74781 . -1817) (undo-tree-id74782 . -1817) (undo-tree-id74783 . -1817) (undo-tree-id74784 . -1817) (undo-tree-id74785 . -1817) (undo-tree-id74786 . -1817) (undo-tree-id74787 . -1817) (undo-tree-id74788 . -1817) (undo-tree-id74789 . -1817) (undo-tree-id74790 . -1817) (undo-tree-id74791 . -1817) (undo-tree-id74792 . -1817) (undo-tree-id74793 . -1817) (undo-tree-id74794 . -1817) (undo-tree-id74795 . -1817) (undo-tree-id74796 . -1817) (undo-tree-id74797 . -1817) (undo-tree-id74798 . -1817) (undo-tree-id74799 . -1817) (undo-tree-id74800 . -1817) (undo-tree-id74801 . -1817) (undo-tree-id74802 . -1817) (undo-tree-id74803 . -1817) (undo-tree-id74804 . -1817) (undo-tree-id74805 . -1817) (undo-tree-id74806 . -1817) (undo-tree-id74807 . -1817) (undo-tree-id74808 . -1817) (undo-tree-id74809 . -1817) (undo-tree-id74810 . -1817) (undo-tree-id74811 . -1820) (undo-tree-id74812 . -1820) (undo-tree-id74813 . -1820) (undo-tree-id74814 . -1820) (undo-tree-id74815 . -1820) (undo-tree-id74816 . -1820) (undo-tree-id74817 . -1820) (undo-tree-id74818 . -1820) (undo-tree-id74819 . -1820) (undo-tree-id74820 . -1820) (undo-tree-id74821 . -1820) (undo-tree-id74822 . -1820) (undo-tree-id74823 . -1820) (undo-tree-id74824 . -1820) (undo-tree-id74825 . -1820) (undo-tree-id74826 . -1820) (undo-tree-id74827 . -1824) (undo-tree-id74828 . -1824) (undo-tree-id74829 . -1824) (undo-tree-id74830 . -1824) (undo-tree-id74831 . -1824) (undo-tree-id74832 . -1824) (undo-tree-id74833 . -1824) (undo-tree-id74834 . -1824) (undo-tree-id74835 . -1824) (undo-tree-id74836 . -1824) (undo-tree-id74837 . -1824) (undo-tree-id74838 . -1824) (undo-tree-id74839 . -1824) (undo-tree-id74840 . -1824) (undo-tree-id74841 . -1824) (undo-tree-id74842 . -1824) (undo-tree-id74843 . -1834) (undo-tree-id74844 . -1834) (undo-tree-id74845 . -1834) (undo-tree-id74846 . -1834) (undo-tree-id74847 . -1834) (undo-tree-id74848 . -1834) (undo-tree-id74849 . -1834) (undo-tree-id74850 . -1834) (undo-tree-id74851 . -1834) (undo-tree-id74852 . -1834) (undo-tree-id74853 . -1834) (undo-tree-id74854 . -1834) (undo-tree-id74855 . -1834) (undo-tree-id74856 . -1834) (undo-tree-id74857 . -1834) (undo-tree-id74858 . -1834) (undo-tree-id74859 . -1841) (undo-tree-id74860 . -1841) (undo-tree-id74861 . -1841) (undo-tree-id74862 . -1841) (undo-tree-id74863 . -1841) (undo-tree-id74864 . -1841) (undo-tree-id74865 . -1841) (undo-tree-id74866 . -1841) (undo-tree-id74867 . -1841) (undo-tree-id74868 . -1841) (undo-tree-id74869 . -1841) (undo-tree-id74870 . -1841) (undo-tree-id74871 . -1841) (undo-tree-id74872 . -1841) (undo-tree-id74873 . -1841) (undo-tree-id74874 . -1841) (undo-tree-id74875 . -1842) (undo-tree-id74876 . -1842) (undo-tree-id74877 . -1842) (undo-tree-id74878 . -1842) (undo-tree-id74879 . -1842) (undo-tree-id74880 . -1842) (undo-tree-id74881 . -1842) (undo-tree-id74882 . -1842) (undo-tree-id74883 . -1842) (undo-tree-id74884 . -1842) (undo-tree-id74885 . -1842) (undo-tree-id74886 . -1842) (undo-tree-id74887 . -1842) (undo-tree-id74888 . -1842) (undo-tree-id74889 . -1842) (undo-tree-id74890 . -1842) (undo-tree-id74891 . -1842) (undo-tree-id74892 . -1842) (undo-tree-id74893 . -1842) (undo-tree-id74894 . -1842) (undo-tree-id74895 . -1842) (undo-tree-id74896 . -1842) (undo-tree-id74897 . -1842) (undo-tree-id74898 . -1841) (undo-tree-id74899 . -1841) (undo-tree-id74900 . -1841) (undo-tree-id74901 . -1841) (undo-tree-id74902 . -1841) (undo-tree-id74903 . -1841) (undo-tree-id74904 . -1841) (undo-tree-id74905 . -1841) (undo-tree-id74906 . -1841) (undo-tree-id74907 . -1841) (undo-tree-id74908 . -1841) (undo-tree-id74909 . -1841) (undo-tree-id74910 . -1841) (undo-tree-id74911 . -1841) (undo-tree-id74912 . -1841) (undo-tree-id74913 . -1841) (undo-tree-id74914 . -1841) (undo-tree-id74915 . -1841) (undo-tree-id74916 . -1841) (undo-tree-id74917 . -1841) (undo-tree-id74918 . -1841) (undo-tree-id74919 . -1841) (undo-tree-id74920 . -1841) (undo-tree-id74921 . -1841) (undo-tree-id74922 . -1841) (undo-tree-id74923 . -1842) (undo-tree-id74924 . -1842) (undo-tree-id74925 . -1842) (undo-tree-id74926 . -1842) (undo-tree-id74927 . -1842) (undo-tree-id74928 . -1842) (undo-tree-id74929 . -1842) (undo-tree-id74930 . -1842) (undo-tree-id74931 . -1842) (undo-tree-id74932 . -1842) (undo-tree-id74933 . -1842) (undo-tree-id74934 . -1842) (undo-tree-id74935 . -1842) (undo-tree-id74936 . -1842) (undo-tree-id74937 . -1842) (undo-tree-id74938 . -1842) (undo-tree-id74939 . -1843) (undo-tree-id74940 . -1843) (undo-tree-id74941 . -1843) (undo-tree-id74942 . -1843) (undo-tree-id74943 . -1843) (undo-tree-id74944 . -1843) (undo-tree-id74945 . -1843) (undo-tree-id74946 . -1843) (undo-tree-id74947 . -1843) (undo-tree-id74948 . -1843) (undo-tree-id74949 . -1843) (undo-tree-id74950 . -1843) (undo-tree-id74951 . -1843) (undo-tree-id74952 . -1843) (undo-tree-id74953 . -1843) (undo-tree-id74954 . -1843) (undo-tree-id74955 . -1843) (undo-tree-id74956 . -1843) (undo-tree-id74957 . -1843) (undo-tree-id74958 . -1843) (undo-tree-id74959 . -1843) (undo-tree-id74960 . -1843) (undo-tree-id74961 . -1843) (undo-tree-id74962 . -1843) (undo-tree-id74963 . -1794) (7403 . 9197) (#(" Six is not a magic number here but merely a hyperparam- eter choice made in the original transformer paper. You can adjust the number of layers according to the model performance. Inside each of these identical layers, there are two sublayers: one computes the multi-head self-attention, which we will discuss below, and the other one is a fully connected layer, which you have already encountered in previous chapters. Let’s first talk about the multi-head self-attention, which is a simple modification of scaled dot-product attention covered earlier in this chapter. In the scaled dot-product attention, we used three matrices (corresponding to query, value, and key) to transform the input sequence. In the context of multi-head attention, we can think of this set of three matrices as one attention head. As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the" 0 56 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 56 57 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 57 157 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 157 158 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 158 175 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 175 227 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 227 228 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 228 229 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 229 257 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 257 258 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 258 261 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 261 262 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 262 295 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 295 296 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 296 297 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 297 363 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 363 364 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 364 420 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 420 421 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 421 493 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 493 527 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 527 528 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 528 630 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 630 631 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 631 733 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 733 734 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 734 758 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 758 836 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 836 837 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 837 937 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 937 938 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 938 993 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 993 1009 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1009 1010 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1010 1110 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1110 1111 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1111 1136 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1136 1137 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1137 1247 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1247 1248 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1248 1337 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1337 1350 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1350 1351 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1351 1405 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1405 1406 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1406 1407 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1407 1408 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1408 1409 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1409 1410 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1410 1431 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1431 1432 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1432 1453 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1453 1454 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1454 1458 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1458 1459 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1459 1481 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1481 1482 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1482 1579 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1579 1580 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1580 1693 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1693 1694 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1694 1790 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1790 1791 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 7452) (t 25775 805 672717 981000)) nil (25775 865 5161 901000) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7510) (undo-tree-id75272 . -1) (undo-tree-id75273 . -1) (t 25775 824 213026 828000)) nil (25775 873 151249 811000) 0 nil] [nil nil ((#("-" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7510) (undo-tree-id74966 . -1) (undo-tree-id74967 . -1) (t 25775 824 213026 828000)) ((7510 . 7511)) (25775 864 620753 720000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 7510) (undo-tree-id75270 . -1) (undo-tree-id75271 . -1)) nil (25775 873 151203 657000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 7510) (undo-tree-id74964 . -1) (undo-tree-id74965 . -1)) ((7510 . 7511)) (25775 864 620419 801000) 0 nil])
([nil nil ((7454 . 9247) (#("- You can adjust the number of layers according to the model performance. Inside each of these identical layers, there are two sublayers: one computes the multi-head self-attention, which we will discuss below, and the other one is a fully connected layer, which you have already encountered in previous chapters. Let’s first talk about the multi-head self-attention, which is a simple modification of scaled dot-product attention covered earlier in this chapter. In the scaled dot-product attention, we used three matrices (corresponding to query, value, and key) to transform the input sequence. In the context of multi-head attention, we can think of this set of three matrices as one attention head. As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the

- Six is not a magic number here but merely a hyperparameter choice made in the original transformer paper." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 50 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 50 51 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 51 68 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 68 120 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 120 121 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 121 122 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 122 150 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 150 151 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 151 154 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 154 155 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 155 188 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 188 189 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 189 190 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 190 256 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 256 257 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 257 313 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 313 314 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 314 341 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 341 386 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 386 392 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 392 393 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 393 394 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 394 420 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 420 421 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 421 523 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 523 524 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 524 626 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 626 627 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 627 651 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 651 729 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 729 730 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 730 830 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 830 831 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 831 886 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 886 902 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 902 903 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 903 1003 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1003 1004 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1004 1029 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1029 1030 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1030 1140 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1140 1141 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1141 1230 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1230 1243 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1243 1244 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1244 1298 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1298 1299 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1299 1300 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1300 1301 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1301 1302 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1302 1303 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1303 1324 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1324 1325 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1325 1346 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1346 1347 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1347 1351 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1351 1352 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1352 1374 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1374 1375 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1375 1472 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1472 1473 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1473 1586 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1586 1587 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1587 1683 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1683 1684 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1684 1685 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1685 1686 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1686 1687 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1687 1688 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1688 1742 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1742 1793 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 7454) (undo-tree-id74968 . 105) (undo-tree-id74969 . -1742) (undo-tree-id74970 . -1742) (undo-tree-id74971 . -1687) (undo-tree-id74972 . -1687) (undo-tree-id74973 . -1793) (undo-tree-id74974 . -1745) (undo-tree-id74975 . -1742) (undo-tree-id74976 . -1742) (undo-tree-id74977 . -1742) (undo-tree-id74978 . -1742) (undo-tree-id74979 . -1742) (undo-tree-id74980 . -1742) (undo-tree-id74981 . -1742) (undo-tree-id74982 . -1742) (undo-tree-id74983 . -1742) (undo-tree-id74984 . -1742) (undo-tree-id74985 . -1742) (undo-tree-id74986 . -1742) (undo-tree-id74987 . -1742) (undo-tree-id74988 . -1742) (undo-tree-id74989 . -1742) (undo-tree-id74990 . -1742) (undo-tree-id74991 . -1742) (undo-tree-id74992 . -1742) (undo-tree-id74993 . -1742) (undo-tree-id74994 . -1742) (undo-tree-id74995 . -1742) (undo-tree-id74996 . -1742) (undo-tree-id74997 . -1742) (undo-tree-id74998 . -1742) (undo-tree-id74999 . -1742) (undo-tree-id75000 . -1742) (undo-tree-id75001 . -1742) (undo-tree-id75002 . -1742) (undo-tree-id75003 . -1742) (undo-tree-id75004 . -1742) (undo-tree-id75005 . -1742) (undo-tree-id75006 . -1742) (undo-tree-id75007 . -1742) (undo-tree-id75008 . -1742) (undo-tree-id75009 . -1742) (undo-tree-id75010 . -1742) (undo-tree-id75011 . -1742) (undo-tree-id75012 . -1742) (undo-tree-id75013 . -1742) (undo-tree-id75014 . -1742) (undo-tree-id75015 . -1742) (undo-tree-id75016 . -1742) (undo-tree-id75017 . -1742) (undo-tree-id75018 . -1742) (undo-tree-id75019 . -1742) (undo-tree-id75020 . -1742) (undo-tree-id75021 . -1742) (undo-tree-id75022 . -1742) (undo-tree-id75023 . -1742) (undo-tree-id75024 . -1742) (undo-tree-id75025 . -1742) (undo-tree-id75026 . -1742) (undo-tree-id75027 . -1742) (undo-tree-id75028 . -1742) (undo-tree-id75029 . -1742) (undo-tree-id75030 . -1742) (undo-tree-id75031 . -1742) (undo-tree-id75032 . -1742) (undo-tree-id75033 . -1742) (undo-tree-id75034 . -1742) (undo-tree-id75035 . -1742) (undo-tree-id75036 . -1742) (undo-tree-id75037 . -1742) (undo-tree-id75038 . -1742) (undo-tree-id75039 . -1742) (undo-tree-id75040 . -1742) (undo-tree-id75041 . -1742) (undo-tree-id75042 . -1742) (undo-tree-id75043 . -1742) (undo-tree-id75044 . -1742) (undo-tree-id75045 . -1742) (undo-tree-id75046 . -1742) (undo-tree-id75047 . -1742) (undo-tree-id75048 . -1742) (undo-tree-id75049 . -1742) (undo-tree-id75050 . -1742) (undo-tree-id75051 . -1742) (undo-tree-id75052 . -1742) (undo-tree-id75053 . -1742) (undo-tree-id75054 . -1742) (undo-tree-id75055 . -1742) (undo-tree-id75056 . -1742) (undo-tree-id75057 . -1742) (undo-tree-id75058 . -1742) (undo-tree-id75059 . -1742) (undo-tree-id75060 . -1742) (undo-tree-id75061 . -1742) (undo-tree-id75062 . 61) (undo-tree-id75063 . -1746) (undo-tree-id75064 . -1742) (undo-tree-id75065 . -1742) (undo-tree-id75066 . -1742) (undo-tree-id75067 . -1742) (undo-tree-id75068 . -1742) (undo-tree-id75069 . -1742) (undo-tree-id75070 . -1742) (undo-tree-id75071 . -1742) (undo-tree-id75072 . -1742) (undo-tree-id75073 . -1742) (undo-tree-id75074 . -1742) (undo-tree-id75075 . -1742) (undo-tree-id75076 . -1742) (undo-tree-id75077 . -1742) (undo-tree-id75078 . -1742) (undo-tree-id75079 . -1742) (undo-tree-id75080 . -1742) (undo-tree-id75081 . -1745) (undo-tree-id75082 . -1745) (undo-tree-id75083 . -1745) (undo-tree-id75084 . -1745) (undo-tree-id75085 . -1745) (undo-tree-id75086 . -1745) (undo-tree-id75087 . -1745) (undo-tree-id75088 . -1745) (undo-tree-id75089 . -1745) (undo-tree-id75090 . -1745) (undo-tree-id75091 . -1745) (undo-tree-id75092 . -1745) (undo-tree-id75093 . -1745) (undo-tree-id75094 . -1745) (undo-tree-id75095 . -1745) (undo-tree-id75096 . -1745) (undo-tree-id75097 . -1752) (undo-tree-id75098 . -1752) (undo-tree-id75099 . -1752) (undo-tree-id75100 . -1752) (undo-tree-id75101 . -1752) (undo-tree-id75102 . -1752) (undo-tree-id75103 . -1752) (undo-tree-id75104 . -1752) (undo-tree-id75105 . -1752) (undo-tree-id75106 . -1752) (undo-tree-id75107 . -1752) (undo-tree-id75108 . -1752) (undo-tree-id75109 . -1752) (undo-tree-id75110 . -1752) (undo-tree-id75111 . -1752) (undo-tree-id75112 . -1752) (undo-tree-id75113 . -1752) (undo-tree-id75114 . -1752) (undo-tree-id75115 . -1752) (undo-tree-id75116 . -1752) (undo-tree-id75117 . -1752) (undo-tree-id75118 . -1757) (undo-tree-id75119 . -1757) (undo-tree-id75120 . -1757) (undo-tree-id75121 . -1757) (undo-tree-id75122 . -1757) (undo-tree-id75123 . -1757) (undo-tree-id75124 . -1757) (undo-tree-id75125 . -1757) (undo-tree-id75126 . -1757) (undo-tree-id75127 . -1757) (undo-tree-id75128 . -1757) (undo-tree-id75129 . -1757) (undo-tree-id75130 . -1757) (undo-tree-id75131 . -1757) (undo-tree-id75132 . -1757) (undo-tree-id75133 . -1757) (undo-tree-id75134 . -1757) (undo-tree-id75135 . -1757) (undo-tree-id75136 . -1757) (undo-tree-id75137 . -1757) (undo-tree-id75138 . -1757) (undo-tree-id75139 . -1757) (undo-tree-id75140 . -1757) (undo-tree-id75141 . -1757) (undo-tree-id75142 . -1757) (undo-tree-id75143 . -1757) (undo-tree-id75144 . -1760) (undo-tree-id75145 . -1760) (undo-tree-id75146 . -1760) (undo-tree-id75147 . -1760) (undo-tree-id75148 . -1760) (undo-tree-id75149 . -1760) (undo-tree-id75150 . -1760) (undo-tree-id75151 . -1760) (undo-tree-id75152 . -1760) (undo-tree-id75153 . -1760) (undo-tree-id75154 . -1760) (undo-tree-id75155 . -1760) (undo-tree-id75156 . -1760) (undo-tree-id75157 . -1760) (undo-tree-id75158 . -1760) (undo-tree-id75159 . -1760) (undo-tree-id75160 . -1764) (undo-tree-id75161 . -1764) (undo-tree-id75162 . -1764) (undo-tree-id75163 . -1764) (undo-tree-id75164 . -1764) (undo-tree-id75165 . -1764) (undo-tree-id75166 . -1764) (undo-tree-id75167 . -1764) (undo-tree-id75168 . -1764) (undo-tree-id75169 . -1764) (undo-tree-id75170 . -1764) (undo-tree-id75171 . -1764) (undo-tree-id75172 . -1764) (undo-tree-id75173 . -1764) (undo-tree-id75174 . -1764) (undo-tree-id75175 . -1764) (undo-tree-id75176 . -1773) (undo-tree-id75177 . -1773) (undo-tree-id75178 . -1773) (undo-tree-id75179 . -1773) (undo-tree-id75180 . -1773) (undo-tree-id75181 . -1773) (undo-tree-id75182 . -1773) (undo-tree-id75183 . -1773) (undo-tree-id75184 . -1773) (undo-tree-id75185 . -1773) (undo-tree-id75186 . -1773) (undo-tree-id75187 . -1773) (undo-tree-id75188 . -1773) (undo-tree-id75189 . -1773) (undo-tree-id75190 . -1773) (undo-tree-id75191 . -1773) (undo-tree-id75192 . -1785) (undo-tree-id75193 . -1785) (undo-tree-id75194 . -1785) (undo-tree-id75195 . -1785) (undo-tree-id75196 . -1785) (undo-tree-id75197 . -1785) (undo-tree-id75198 . -1785) (undo-tree-id75199 . -1785) (undo-tree-id75200 . -1785) (undo-tree-id75201 . -1785) (undo-tree-id75202 . -1785) (undo-tree-id75203 . -1785) (undo-tree-id75204 . -1785) (undo-tree-id75205 . -1785) (undo-tree-id75206 . -1785) (undo-tree-id75207 . -1785) (undo-tree-id75208 . -1791) (undo-tree-id75209 . -1791) (undo-tree-id75210 . -1791) (undo-tree-id75211 . -1791) (undo-tree-id75212 . -1791) (undo-tree-id75213 . -1791) (undo-tree-id75214 . -1791) (undo-tree-id75215 . -1791) (undo-tree-id75216 . -1791) (undo-tree-id75217 . -1791) (undo-tree-id75218 . -1791) (undo-tree-id75219 . -1791) (undo-tree-id75220 . -1791) (undo-tree-id75221 . -1791) (undo-tree-id75222 . -1791) (undo-tree-id75223 . -1791) (undo-tree-id75224 . -1792) (undo-tree-id75225 . -1792) (undo-tree-id75226 . -1792) (undo-tree-id75227 . -1792) (undo-tree-id75228 . -1792) (undo-tree-id75229 . -1792) (undo-tree-id75230 . -1792) (undo-tree-id75231 . -1792) (undo-tree-id75232 . -1792) (undo-tree-id75233 . -1792) (undo-tree-id75234 . -1792) (undo-tree-id75235 . -1792) (undo-tree-id75236 . -1792) (undo-tree-id75237 . -1792) (undo-tree-id75238 . -1792) (undo-tree-id75239 . -1792) (undo-tree-id75240 . -1793) (undo-tree-id75241 . -1793) (undo-tree-id75242 . -1793) (undo-tree-id75243 . -1793) (undo-tree-id75244 . -1793) (undo-tree-id75245 . -1793) (undo-tree-id75246 . -1793) (undo-tree-id75247 . -1793) (undo-tree-id75248 . -1793) (undo-tree-id75249 . -1793) (undo-tree-id75250 . -1793) (undo-tree-id75251 . -1793) (undo-tree-id75252 . -1793) (undo-tree-id75253 . -1793) (undo-tree-id75254 . -1793) (undo-tree-id75255 . -1793) (undo-tree-id75256 . -1793) (undo-tree-id75257 . -1793) (undo-tree-id75258 . -1793) (undo-tree-id75259 . -1793) (undo-tree-id75260 . -1793) (undo-tree-id75261 . -1793) (undo-tree-id75262 . -1793) (undo-tree-id75263 . -1793) (undo-tree-id75264 . -1793) (undo-tree-id75265 . -1793) (undo-tree-id75266 . -1793) (undo-tree-id75267 . -1793) (undo-tree-id75268 . -1793) (undo-tree-id75269 . -1686) (7454 . 9140) (#(" You can adjust the number of layers according to the model performance. Inside each of these identical layers, there are two sublayers: one computes the multi-head self-attention, which we will discuss below, and the other one is a fully connected layer, which you have already encountered in previous chapters. Let’s first talk about the multi-head self-attention, which is a simple modification of scaled dot-product attention covered earlier in this chapter. In the scaled dot-product attention, we used three matrices (corresponding to query, value, and key) to transform the input sequence. In the context of multi-head attention, we can think of this set of three matrices as one attention head. As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the" 0 49 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 49 50 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 50 67 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 67 119 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 119 120 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 120 121 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 121 149 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 149 150 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 150 153 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 153 154 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 154 187 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 187 188 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 188 189 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 189 255 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 255 256 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 256 312 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 312 313 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 313 340 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 340 385 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 385 391 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 391 392 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 392 393 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 393 419 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 419 420 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 420 522 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 522 523 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 523 625 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 625 626 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 626 650 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 650 728 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 728 729 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 729 829 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 829 830 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 830 885 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 885 901 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 901 902 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 902 1002 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1002 1003 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1003 1028 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1028 1029 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1029 1139 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1139 1140 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1140 1229 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1229 1242 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1242 1243 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1243 1297 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1297 1298 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1298 1299 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1299 1300 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1300 1301 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1301 1302 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1302 1323 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1323 1324 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1324 1345 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1345 1346 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1346 1350 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1350 1351 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1351 1373 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1373 1374 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1374 1471 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1471 1472 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1472 1585 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1585 1586 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1586 1682 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1682 1683 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 7561)) nil (25775 873 151139 800000) 0 nil])
nil
([nil nil ((#(" You can adjust the number of layers according to the model performance" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 49 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 49 50 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 50 67 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 67 71 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7564) (undo-tree-id75277 . 70) (undo-tree-id75278 . -70) (undo-tree-id75279 . -71) (t 25775 873 225841 980000)) nil (25775 880 589842 834000) 0 nil])
([nil nil ((#("." 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7564) (undo-tree-id75274 . 1) (undo-tree-id75275 . -1) (undo-tree-id75276 . -1)) nil (25775 880 589835 943000) 0 nil])
([nil nil ((7563 . 9178) (#("- one computes the multi-head self-attention, which we will discuss below, and the other one is a fully connected layer, which you have already encountered in previous chapters. Let’s first talk about the multi-head self-attention, which is a simple modification of scaled dot-product attention covered earlier in this chapter. In the scaled dot-product attention, we used three matrices (corresponding to query, value, and key) to transform the input sequence. In the context of multi-head attention, we can think of this set of three matrices as one attention head. As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the

- Inside each of these identical layers, there are two sublayers." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 14 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 14 15 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 15 18 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 18 19 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 19 52 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 52 53 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 53 54 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 54 120 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 120 121 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 121 177 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 177 178 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 178 205 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 205 250 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 250 255 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 255 256 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 256 257 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 257 258 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 258 284 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 284 285 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 285 387 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 387 388 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 388 435 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 435 436 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 436 437 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 437 490 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 490 491 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 491 515 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 515 593 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 593 594 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 594 694 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 694 695 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 695 750 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 750 766 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 766 767 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 767 867 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 867 868 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 868 893 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 893 894 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 894 1004 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1004 1005 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1005 1094 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1094 1107 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1107 1108 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1108 1162 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1162 1163 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1163 1164 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1164 1165 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1165 1166 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1166 1167 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1167 1188 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1188 1189 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1189 1210 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1210 1211 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1211 1215 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1215 1216 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1216 1238 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1238 1239 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1239 1336 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1336 1337 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1337 1450 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1450 1451 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1451 1547 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1547 1548 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1548 1549 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1549 1550 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1550 1551 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1551 1598 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1598 1599 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1599 1600 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1600 1615 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 7563) (undo-tree-id75280 . 64) (undo-tree-id75281 . -1614) (undo-tree-id75282 . -1614) (undo-tree-id75283 . -1552) (undo-tree-id75284 . -1615) (undo-tree-id75285 . -1552) (undo-tree-id75286 . -1552) (undo-tree-id75287 . -1552) (undo-tree-id75288 . -1552) (undo-tree-id75289 . -1552) (undo-tree-id75290 . -1552) (undo-tree-id75291 . -1552) (undo-tree-id75292 . -1552) (undo-tree-id75293 . -1552) (undo-tree-id75294 . -1552) (undo-tree-id75295 . -1552) (undo-tree-id75296 . -1552) (undo-tree-id75297 . -1552) (undo-tree-id75298 . -1552) (undo-tree-id75299 . -1552) (undo-tree-id75300 . -1552) (undo-tree-id75301 . -1552) (undo-tree-id75302 . -1552) (undo-tree-id75303 . -1552) (undo-tree-id75304 . -1552) (undo-tree-id75305 . -1552) (undo-tree-id75306 . -1552) (undo-tree-id75307 . -1552) (undo-tree-id75308 . -1552) (undo-tree-id75309 . -1552) (undo-tree-id75310 . -1552) (undo-tree-id75311 . -1552) (undo-tree-id75312 . -1552) (undo-tree-id75313 . -1552) (undo-tree-id75314 . -1552) (undo-tree-id75315 . -1552) (undo-tree-id75316 . -1552) (undo-tree-id75317 . -1552) (undo-tree-id75318 . -1552) (undo-tree-id75319 . -1552) (undo-tree-id75320 . -1552) (undo-tree-id75321 . -1552) (undo-tree-id75322 . -1552) (undo-tree-id75323 . -1552) (undo-tree-id75324 . -1552) (undo-tree-id75325 . -1552) (undo-tree-id75326 . -1552) (undo-tree-id75327 . -1552) (undo-tree-id75328 . -1552) (undo-tree-id75329 . -1552) (undo-tree-id75330 . -1552) (undo-tree-id75331 . -1552) (undo-tree-id75332 . -1552) (undo-tree-id75333 . -1552) (undo-tree-id75334 . -1552) (undo-tree-id75335 . -1552) (undo-tree-id75336 . -1552) (undo-tree-id75337 . -1552) (undo-tree-id75338 . -1552) (undo-tree-id75339 . -1552) (undo-tree-id75340 . -1552) (undo-tree-id75341 . -1552) (undo-tree-id75342 . -1552) (undo-tree-id75343 . -1552) (undo-tree-id75344 . -1552) (undo-tree-id75345 . -1552) (undo-tree-id75346 . -1552) (undo-tree-id75347 . -1552) (undo-tree-id75348 . -1552) (undo-tree-id75349 . -1552) (undo-tree-id75350 . -1552) (undo-tree-id75351 . -1552) (undo-tree-id75352 . -1552) (undo-tree-id75353 . -1552) (undo-tree-id75354 . -1552) (undo-tree-id75355 . -1552) (undo-tree-id75356 . -1552) (undo-tree-id75357 . -1552) (undo-tree-id75358 . -1552) (undo-tree-id75359 . -1602) (undo-tree-id75360 . -1602) (undo-tree-id75361 . -1602) (undo-tree-id75362 . -1602) (undo-tree-id75363 . -1602) (undo-tree-id75364 . -1602) (undo-tree-id75365 . -1602) (undo-tree-id75366 . -1602) (undo-tree-id75367 . -1602) (undo-tree-id75368 . -1602) (undo-tree-id75369 . -1602) (undo-tree-id75370 . -1602) (undo-tree-id75371 . -1602) (undo-tree-id75372 . -1602) (undo-tree-id75373 . -1602) (undo-tree-id75374 . -1602) (undo-tree-id75375 . -1602) (undo-tree-id75376 . -1602) (undo-tree-id75377 . -1602) (undo-tree-id75378 . -1602) (undo-tree-id75379 . -1602) (undo-tree-id75380 . 10) (undo-tree-id75381 . -1614) (undo-tree-id75382 . -1605) (undo-tree-id75383 . -1605) (undo-tree-id75384 . -1605) (undo-tree-id75385 . -1605) (undo-tree-id75386 . -1605) (undo-tree-id75387 . -1605) (undo-tree-id75388 . -1605) (undo-tree-id75389 . -1605) (undo-tree-id75390 . -1605) (undo-tree-id75391 . -1605) (undo-tree-id75392 . -1605) (undo-tree-id75393 . -1605) (undo-tree-id75394 . -1605) (undo-tree-id75395 . -1605) (undo-tree-id75396 . -1605) (undo-tree-id75397 . -1605) (undo-tree-id75398 . -1614) (undo-tree-id75399 . -1614) (undo-tree-id75400 . -1614) (undo-tree-id75401 . -1614) (undo-tree-id75402 . -1614) (undo-tree-id75403 . -1614) (undo-tree-id75404 . -1614) (undo-tree-id75405 . -1614) (undo-tree-id75406 . -1614) (undo-tree-id75407 . -1614) (undo-tree-id75408 . -1614) (undo-tree-id75409 . -1614) (undo-tree-id75410 . -1614) (undo-tree-id75411 . -1614) (undo-tree-id75412 . -1614) (undo-tree-id75413 . -1614) (undo-tree-id75414 . -1614) (undo-tree-id75415 . -1614) (undo-tree-id75416 . -1614) (undo-tree-id75417 . -1614) (undo-tree-id75418 . -1614) (undo-tree-id75419 . -1614) (undo-tree-id75420 . -1614) (undo-tree-id75421 . -1614) (undo-tree-id75422 . -1614) (undo-tree-id75423 . -1614) (undo-tree-id75424 . -1614) (undo-tree-id75425 . -1614) (undo-tree-id75426 . -1614) (undo-tree-id75427 . -1614) (undo-tree-id75428 . -1614) (undo-tree-id75429 . -1614) (undo-tree-id75430 . -1614) (undo-tree-id75431 . -1614) (undo-tree-id75432 . -1614) (undo-tree-id75433 . -1614) (undo-tree-id75434 . -1614) (undo-tree-id75435 . -1614) (undo-tree-id75436 . -1614) (undo-tree-id75437 . -1614) (undo-tree-id75438 . -1614) (undo-tree-id75439 . -1614) (undo-tree-id75440 . -1614) (undo-tree-id75441 . -1614) (undo-tree-id75442 . -1614) (undo-tree-id75443 . -1614) (undo-tree-id75444 . -1614) (undo-tree-id75445 . -1614) (undo-tree-id75446 . -1614) (undo-tree-id75447 . -1614) (undo-tree-id75448 . -1614) (undo-tree-id75449 . -1614) (undo-tree-id75450 . -1614) (undo-tree-id75451 . -1614) (undo-tree-id75452 . -1615) (undo-tree-id75453 . -1615) (undo-tree-id75454 . -1615) (undo-tree-id75455 . -1615) (undo-tree-id75456 . -1615) (undo-tree-id75457 . -1615) (undo-tree-id75458 . -1615) (undo-tree-id75459 . -1615) (undo-tree-id75460 . -1615) (undo-tree-id75461 . -1615) (undo-tree-id75462 . -1615) (undo-tree-id75463 . -1615) (undo-tree-id75464 . -1615) (undo-tree-id75465 . -1615) (undo-tree-id75466 . -1615) (undo-tree-id75467 . -1615) (undo-tree-id75468 . -1615) (undo-tree-id75469 . -1615) (undo-tree-id75470 . -1615) (undo-tree-id75471 . -1615) (undo-tree-id75472 . -1615) (undo-tree-id75473 . -1615) (undo-tree-id75474 . -1615) (undo-tree-id75475 . -1615) (undo-tree-id75476 . -1615) (undo-tree-id75477 . -1615) (undo-tree-id75478 . -1615) (undo-tree-id75479 . -1615) (undo-tree-id75480 . -1550) (7563 . 9113) (#(" one computes the multi-head self-attention, which we will discuss below, and the other one is a fully connected layer, which you have already encountered in previous chapters. Let’s first talk about the multi-head self-attention, which is a simple modification of scaled dot-product attention covered earlier in this chapter. In the scaled dot-product attention, we used three matrices (corresponding to query, value, and key) to transform the input sequence. In the context of multi-head attention, we can think of this set of three matrices as one attention head. As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the" 0 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 13 14 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 14 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 17 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 18 51 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 51 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 52 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 53 119 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 119 120 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 120 176 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 176 177 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 177 204 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 204 249 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 249 254 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 254 255 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 255 256 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 256 257 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 257 283 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 283 284 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 284 386 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 386 387 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 387 434 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 434 435 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 435 436 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 436 489 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 489 490 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 490 514 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 514 592 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 592 593 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 593 693 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 693 694 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 694 749 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 749 765 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 765 766 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 766 866 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 866 867 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 867 892 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 892 893 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 893 1003 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1003 1004 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1004 1093 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1093 1106 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1106 1107 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1107 1161 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1161 1162 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1162 1163 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1163 1164 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1164 1165 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1165 1166 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1166 1187 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1187 1188 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1188 1209 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1209 1210 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1210 1214 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1214 1215 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1215 1237 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1237 1238 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1238 1335 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1335 1336 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1336 1449 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1449 1450 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1450 1546 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1546 1547 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 7628) (7627 . 7628) (#(":" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7627) (undo-tree-id75481 . -1) (undo-tree-id75482 . -1) (undo-tree-id75483 . -1) (t 25775 880 665965 565000)) nil (25775 892 124075 803000) 0 nil])
([nil nil ((7632 . 7633) (#("o" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7632) (t 25775 892 206157 179000)) nil (25775 894 417167 118000) 0 nil])
([nil nil ((7630 . 9181) (#("- Let’s first talk about the multi-head self-attention, which is a simple modification of scaled dot-product attention covered earlier in this chapter. In the scaled dot-product attention, we used three matrices (corresponding to query, value, and key) to transform the input sequence. In the context of multi-head attention, we can think of this set of three matrices as one attention head. As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the

- One computes the multi-head self-attention, which we will discuss below, and the other one is a fully connected layer, which you have already encountered in previous chapters." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 29 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 29 74 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 74 79 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 79 80 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 80 81 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 81 82 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 82 108 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 108 109 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 109 211 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 211 212 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 212 257 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 257 259 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 259 260 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 260 261 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 261 314 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 314 315 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 315 324 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 324 339 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 339 417 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 417 418 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 418 518 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 518 519 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 519 574 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 574 590 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 590 591 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 591 691 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 691 692 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 692 717 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 717 718 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 718 828 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 828 829 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 829 918 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 918 931 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 931 932 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 932 986 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 986 987 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 987 988 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 988 989 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 989 990 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 990 991 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 991 1012 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1012 1013 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1013 1034 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1034 1035 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1035 1039 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1039 1040 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1040 1062 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1062 1063 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1063 1160 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1160 1161 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1161 1274 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1274 1275 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1275 1371 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1371 1372 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1372 1373 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1373 1374 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1374 1375 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1375 1376 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1376 1388 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1388 1389 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1389 1392 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1392 1393 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1393 1426 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1426 1427 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1427 1428 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1428 1494 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1494 1495 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1495 1551 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 7630) (undo-tree-id75484 . 175) (undo-tree-id75485 . -1376) (undo-tree-id75486 . -1376) (undo-tree-id75487 . 174) (undo-tree-id75488 . -1376) (undo-tree-id75489 . -1376) (undo-tree-id75490 . -1376) (undo-tree-id75491 . -1551) (undo-tree-id75492 . -1376) (undo-tree-id75493 . -1376) (undo-tree-id75494 . -1376) (undo-tree-id75495 . -1376) (undo-tree-id75496 . -1376) (undo-tree-id75497 . -1376) (undo-tree-id75498 . -1376) (undo-tree-id75499 . -1376) (undo-tree-id75500 . -1376) (undo-tree-id75501 . -1376) (undo-tree-id75502 . -1376) (undo-tree-id75503 . -1376) (undo-tree-id75504 . -1376) (undo-tree-id75505 . -1376) (undo-tree-id75506 . -1376) (undo-tree-id75507 . -1376) (undo-tree-id75508 . -1376) (undo-tree-id75509 . -1376) (undo-tree-id75510 . -1376) (undo-tree-id75511 . -1376) (undo-tree-id75512 . -1376) (undo-tree-id75513 . -1376) (undo-tree-id75514 . -1376) (undo-tree-id75515 . -1376) (undo-tree-id75516 . -1376) (undo-tree-id75517 . -1376) (undo-tree-id75518 . -1376) (undo-tree-id75519 . -1376) (undo-tree-id75520 . -1376) (undo-tree-id75521 . -1376) (undo-tree-id75522 . -1376) (undo-tree-id75523 . -1376) (undo-tree-id75524 . -1376) (undo-tree-id75525 . -1376) (undo-tree-id75526 . -1378) (undo-tree-id75527 . -1378) (undo-tree-id75528 . -1378) (undo-tree-id75529 . -1378) (undo-tree-id75530 . -1378) (undo-tree-id75531 . -1378) (undo-tree-id75532 . -1378) (undo-tree-id75533 . -1378) (undo-tree-id75534 . -1378) (undo-tree-id75535 . -1378) (undo-tree-id75536 . -1378) (undo-tree-id75537 . -1378) (undo-tree-id75538 . -1378) (undo-tree-id75539 . -1378) (undo-tree-id75540 . -1378) (undo-tree-id75541 . -1378) (undo-tree-id75542 . -1378) (undo-tree-id75543 . -1378) (undo-tree-id75544 . -1378) (undo-tree-id75545 . -1378) (undo-tree-id75546 . -1378) (undo-tree-id75547 . -1387) (undo-tree-id75548 . -1387) (undo-tree-id75549 . -1387) (undo-tree-id75550 . -1387) (undo-tree-id75551 . -1387) (undo-tree-id75552 . -1387) (undo-tree-id75553 . -1387) (undo-tree-id75554 . -1387) (undo-tree-id75555 . -1387) (undo-tree-id75556 . -1387) (undo-tree-id75557 . -1387) (undo-tree-id75558 . -1387) (undo-tree-id75559 . -1387) (undo-tree-id75560 . -1387) (undo-tree-id75561 . -1387) (undo-tree-id75562 . -1387) (undo-tree-id75563 . -1391) (undo-tree-id75564 . -1391) (undo-tree-id75565 . -1391) (undo-tree-id75566 . -1391) (undo-tree-id75567 . -1391) (undo-tree-id75568 . -1391) (undo-tree-id75569 . -1391) (undo-tree-id75570 . -1391) (undo-tree-id75571 . -1391) (undo-tree-id75572 . -1391) (undo-tree-id75573 . -1391) (undo-tree-id75574 . -1391) (undo-tree-id75575 . -1391) (undo-tree-id75576 . -1391) (undo-tree-id75577 . -1391) (undo-tree-id75578 . -1391) (undo-tree-id75579 . -1397) (undo-tree-id75580 . -1397) (undo-tree-id75581 . -1397) (undo-tree-id75582 . -1397) (undo-tree-id75583 . -1397) (undo-tree-id75584 . -1397) (undo-tree-id75585 . -1397) (undo-tree-id75586 . -1397) (undo-tree-id75587 . -1397) (undo-tree-id75588 . -1397) (undo-tree-id75589 . -1397) (undo-tree-id75590 . -1397) (undo-tree-id75591 . -1397) (undo-tree-id75592 . -1397) (undo-tree-id75593 . -1397) (undo-tree-id75594 . -1397) (undo-tree-id75595 . -1398) (undo-tree-id75596 . -1398) (undo-tree-id75597 . -1398) (undo-tree-id75598 . -1398) (undo-tree-id75599 . -1398) (undo-tree-id75600 . -1398) (undo-tree-id75601 . -1398) (undo-tree-id75602 . -1398) (undo-tree-id75603 . -1398) (undo-tree-id75604 . -1398) (undo-tree-id75605 . -1398) (undo-tree-id75606 . -1398) (undo-tree-id75607 . -1398) (undo-tree-id75608 . -1398) (undo-tree-id75609 . -1398) (undo-tree-id75610 . -1398) (undo-tree-id75611 . -1402) (undo-tree-id75612 . -1402) (undo-tree-id75613 . -1402) (undo-tree-id75614 . -1402) (undo-tree-id75615 . -1402) (undo-tree-id75616 . -1402) (undo-tree-id75617 . -1402) (undo-tree-id75618 . -1402) (undo-tree-id75619 . -1402) (undo-tree-id75620 . -1402) (undo-tree-id75621 . -1402) (undo-tree-id75622 . -1402) (undo-tree-id75623 . -1402) (undo-tree-id75624 . -1402) (undo-tree-id75625 . -1402) (undo-tree-id75626 . -1402) (undo-tree-id75627 . -1407) (undo-tree-id75628 . -1407) (undo-tree-id75629 . -1407) (undo-tree-id75630 . -1407) (undo-tree-id75631 . -1407) (undo-tree-id75632 . -1407) (undo-tree-id75633 . -1407) (undo-tree-id75634 . -1407) (undo-tree-id75635 . -1407) (undo-tree-id75636 . -1407) (undo-tree-id75637 . -1407) (undo-tree-id75638 . -1407) (undo-tree-id75639 . -1407) (undo-tree-id75640 . -1407) (undo-tree-id75641 . -1407) (undo-tree-id75642 . -1407) (undo-tree-id75643 . -1408) (undo-tree-id75644 . -1408) (undo-tree-id75645 . -1408) (undo-tree-id75646 . -1408) (undo-tree-id75647 . -1408) (undo-tree-id75648 . -1408) (undo-tree-id75649 . -1408) (undo-tree-id75650 . -1408) (undo-tree-id75651 . -1408) (undo-tree-id75652 . -1408) (undo-tree-id75653 . -1408) (undo-tree-id75654 . -1408) (undo-tree-id75655 . -1408) (undo-tree-id75656 . -1408) (undo-tree-id75657 . -1408) (undo-tree-id75658 . -1408) (undo-tree-id75659 . -1417) (undo-tree-id75660 . -1417) (undo-tree-id75661 . -1417) (undo-tree-id75662 . -1417) (undo-tree-id75663 . -1417) (undo-tree-id75664 . -1417) (undo-tree-id75665 . -1417) (undo-tree-id75666 . -1417) (undo-tree-id75667 . -1417) (undo-tree-id75668 . -1417) (undo-tree-id75669 . -1417) (undo-tree-id75670 . -1417) (undo-tree-id75671 . -1417) (undo-tree-id75672 . -1417) (undo-tree-id75673 . -1417) (undo-tree-id75674 . -1417) (undo-tree-id75675 . -1418) (undo-tree-id75676 . -1418) (undo-tree-id75677 . -1418) (undo-tree-id75678 . -1418) (undo-tree-id75679 . -1418) (undo-tree-id75680 . -1418) (undo-tree-id75681 . -1418) (undo-tree-id75682 . -1418) (undo-tree-id75683 . -1418) (undo-tree-id75684 . -1418) (undo-tree-id75685 . -1418) (undo-tree-id75686 . -1418) (undo-tree-id75687 . -1418) (undo-tree-id75688 . -1418) (undo-tree-id75689 . -1418) (undo-tree-id75690 . -1418) (undo-tree-id75691 . -1424) (undo-tree-id75692 . -1424) (undo-tree-id75693 . -1424) (undo-tree-id75694 . -1424) (undo-tree-id75695 . -1424) (undo-tree-id75696 . -1424) (undo-tree-id75697 . -1424) (undo-tree-id75698 . -1424) (undo-tree-id75699 . -1424) (undo-tree-id75700 . -1424) (undo-tree-id75701 . -1424) (undo-tree-id75702 . -1424) (undo-tree-id75703 . -1424) (undo-tree-id75704 . -1424) (undo-tree-id75705 . -1424) (undo-tree-id75706 . -1424) (undo-tree-id75707 . -1427) (undo-tree-id75708 . -1427) (undo-tree-id75709 . -1427) (undo-tree-id75710 . -1427) (undo-tree-id75711 . -1427) (undo-tree-id75712 . -1427) (undo-tree-id75713 . -1427) (undo-tree-id75714 . -1427) (undo-tree-id75715 . -1427) (undo-tree-id75716 . -1427) (undo-tree-id75717 . -1427) (undo-tree-id75718 . -1427) (undo-tree-id75719 . -1427) (undo-tree-id75720 . -1427) (undo-tree-id75721 . -1427) (undo-tree-id75722 . -1427) (undo-tree-id75723 . -1432) (undo-tree-id75724 . -1432) (undo-tree-id75725 . -1432) (undo-tree-id75726 . -1432) (undo-tree-id75727 . -1432) (undo-tree-id75728 . -1432) (undo-tree-id75729 . -1432) (undo-tree-id75730 . -1432) (undo-tree-id75731 . -1432) (undo-tree-id75732 . -1432) (undo-tree-id75733 . -1432) (undo-tree-id75734 . -1432) (undo-tree-id75735 . -1432) (undo-tree-id75736 . -1432) (undo-tree-id75737 . -1432) (undo-tree-id75738 . -1432) (undo-tree-id75739 . -1440) (undo-tree-id75740 . -1440) (undo-tree-id75741 . -1440) (undo-tree-id75742 . -1440) (undo-tree-id75743 . -1440) (undo-tree-id75744 . -1440) (undo-tree-id75745 . -1440) (undo-tree-id75746 . -1440) (undo-tree-id75747 . -1440) (undo-tree-id75748 . -1440) (undo-tree-id75749 . -1440) (undo-tree-id75750 . -1440) (undo-tree-id75751 . -1440) (undo-tree-id75752 . -1440) (undo-tree-id75753 . -1440) (undo-tree-id75754 . -1440) (undo-tree-id75755 . -1446) (undo-tree-id75756 . -1446) (undo-tree-id75757 . -1446) (undo-tree-id75758 . -1446) (undo-tree-id75759 . -1446) (undo-tree-id75760 . -1446) (undo-tree-id75761 . -1446) (undo-tree-id75762 . -1446) (undo-tree-id75763 . -1446) (undo-tree-id75764 . -1446) (undo-tree-id75765 . -1446) (undo-tree-id75766 . -1446) (undo-tree-id75767 . -1446) (undo-tree-id75768 . -1446) (undo-tree-id75769 . -1446) (undo-tree-id75770 . -1446) (undo-tree-id75771 . -1446) (undo-tree-id75772 . -1446) (undo-tree-id75773 . -1446) (undo-tree-id75774 . -1446) (undo-tree-id75775 . -1446) (undo-tree-id75776 . -1447) (undo-tree-id75777 . -1447) (undo-tree-id75778 . -1447) (undo-tree-id75779 . -1447) (undo-tree-id75780 . -1447) (undo-tree-id75781 . -1447) (undo-tree-id75782 . -1447) (undo-tree-id75783 . -1447) (undo-tree-id75784 . -1447) (undo-tree-id75785 . -1447) (undo-tree-id75786 . -1447) (undo-tree-id75787 . -1447) (undo-tree-id75788 . -1447) (undo-tree-id75789 . -1447) (undo-tree-id75790 . -1447) (undo-tree-id75791 . -1447) (undo-tree-id75792 . -1447) (undo-tree-id75793 . -1447) (undo-tree-id75794 . -1447) (undo-tree-id75795 . -1447) (undo-tree-id75796 . -1447) (undo-tree-id75797 . -1451) (undo-tree-id75798 . -1451) (undo-tree-id75799 . -1451) (undo-tree-id75800 . -1451) (undo-tree-id75801 . -1451) (undo-tree-id75802 . -1451) (undo-tree-id75803 . -1451) (undo-tree-id75804 . -1451) (undo-tree-id75805 . -1451) (undo-tree-id75806 . -1451) (undo-tree-id75807 . -1451) (undo-tree-id75808 . -1451) (undo-tree-id75809 . -1451) (undo-tree-id75810 . -1451) (undo-tree-id75811 . -1451) (undo-tree-id75812 . -1451) (undo-tree-id75813 . -1455) (undo-tree-id75814 . -1455) (undo-tree-id75815 . -1455) (undo-tree-id75816 . -1455) (undo-tree-id75817 . -1455) (undo-tree-id75818 . -1455) (undo-tree-id75819 . -1455) (undo-tree-id75820 . -1455) (undo-tree-id75821 . -1455) (undo-tree-id75822 . -1455) (undo-tree-id75823 . -1455) (undo-tree-id75824 . -1455) (undo-tree-id75825 . -1455) (undo-tree-id75826 . -1455) (undo-tree-id75827 . -1455) (undo-tree-id75828 . -1455) (undo-tree-id75829 . -1461) (undo-tree-id75830 . -1461) (undo-tree-id75831 . -1461) (undo-tree-id75832 . -1461) (undo-tree-id75833 . -1461) (undo-tree-id75834 . -1461) (undo-tree-id75835 . -1461) (undo-tree-id75836 . -1461) (undo-tree-id75837 . -1461) (undo-tree-id75838 . -1461) (undo-tree-id75839 . -1461) (undo-tree-id75840 . -1461) (undo-tree-id75841 . -1461) (undo-tree-id75842 . -1461) (undo-tree-id75843 . -1461) (undo-tree-id75844 . -1461) (undo-tree-id75845 . -1465) (undo-tree-id75846 . -1465) (undo-tree-id75847 . -1465) (undo-tree-id75848 . -1465) (undo-tree-id75849 . -1465) (undo-tree-id75850 . -1465) (undo-tree-id75851 . -1465) (undo-tree-id75852 . -1465) (undo-tree-id75853 . -1465) (undo-tree-id75854 . -1465) (undo-tree-id75855 . -1465) (undo-tree-id75856 . -1465) (undo-tree-id75857 . -1465) (undo-tree-id75858 . -1465) (undo-tree-id75859 . -1465) (undo-tree-id75860 . -1465) (undo-tree-id75861 . -1468) (undo-tree-id75862 . -1468) (undo-tree-id75863 . -1468) (undo-tree-id75864 . -1468) (undo-tree-id75865 . -1468) (undo-tree-id75866 . -1468) (undo-tree-id75867 . -1468) (undo-tree-id75868 . -1468) (undo-tree-id75869 . -1468) (undo-tree-id75870 . -1468) (undo-tree-id75871 . -1468) (undo-tree-id75872 . -1468) (undo-tree-id75873 . -1468) (undo-tree-id75874 . -1468) (undo-tree-id75875 . -1468) (undo-tree-id75876 . -1468) (undo-tree-id75877 . -1470) (undo-tree-id75878 . -1470) (undo-tree-id75879 . -1470) (undo-tree-id75880 . -1470) (undo-tree-id75881 . -1470) (undo-tree-id75882 . -1470) (undo-tree-id75883 . -1470) (undo-tree-id75884 . -1470) (undo-tree-id75885 . -1470) (undo-tree-id75886 . -1470) (undo-tree-id75887 . -1470) (undo-tree-id75888 . -1470) (undo-tree-id75889 . -1470) (undo-tree-id75890 . -1470) (undo-tree-id75891 . -1470) (undo-tree-id75892 . -1470) (undo-tree-id75893 . -1476) (undo-tree-id75894 . -1476) (undo-tree-id75895 . -1476) (undo-tree-id75896 . -1476) (undo-tree-id75897 . -1476) (undo-tree-id75898 . -1476) (undo-tree-id75899 . -1476) (undo-tree-id75900 . -1476) (undo-tree-id75901 . -1476) (undo-tree-id75902 . -1476) (undo-tree-id75903 . -1476) (undo-tree-id75904 . -1476) (undo-tree-id75905 . -1476) (undo-tree-id75906 . -1476) (undo-tree-id75907 . -1476) (undo-tree-id75908 . -1476) (undo-tree-id75909 . -1486) (undo-tree-id75910 . -1486) (undo-tree-id75911 . -1486) (undo-tree-id75912 . -1486) (undo-tree-id75913 . -1486) (undo-tree-id75914 . -1486) (undo-tree-id75915 . -1486) (undo-tree-id75916 . -1486) (undo-tree-id75917 . -1486) (undo-tree-id75918 . -1486) (undo-tree-id75919 . -1486) (undo-tree-id75920 . -1486) (undo-tree-id75921 . -1486) (undo-tree-id75922 . -1486) (undo-tree-id75923 . -1486) (undo-tree-id75924 . -1486) (undo-tree-id75925 . -1492) (undo-tree-id75926 . -1492) (undo-tree-id75927 . -1492) (undo-tree-id75928 . -1492) (undo-tree-id75929 . -1492) (undo-tree-id75930 . -1492) (undo-tree-id75931 . -1492) (undo-tree-id75932 . -1492) (undo-tree-id75933 . -1492) (undo-tree-id75934 . -1492) (undo-tree-id75935 . -1492) (undo-tree-id75936 . -1492) (undo-tree-id75937 . -1492) (undo-tree-id75938 . -1492) (undo-tree-id75939 . -1492) (undo-tree-id75940 . -1492) (undo-tree-id75941 . -1493) (undo-tree-id75942 . -1493) (undo-tree-id75943 . -1493) (undo-tree-id75944 . -1493) (undo-tree-id75945 . -1493) (undo-tree-id75946 . -1493) (undo-tree-id75947 . -1493) (undo-tree-id75948 . -1493) (undo-tree-id75949 . -1493) (undo-tree-id75950 . -1493) (undo-tree-id75951 . -1493) (undo-tree-id75952 . -1493) (undo-tree-id75953 . -1493) (undo-tree-id75954 . -1493) (undo-tree-id75955 . -1493) (undo-tree-id75956 . -1493) (undo-tree-id75957 . -1499) (undo-tree-id75958 . -1499) (undo-tree-id75959 . -1499) (undo-tree-id75960 . -1499) (undo-tree-id75961 . -1499) (undo-tree-id75962 . -1499) (undo-tree-id75963 . -1499) (undo-tree-id75964 . -1499) (undo-tree-id75965 . -1499) (undo-tree-id75966 . -1499) (undo-tree-id75967 . -1499) (undo-tree-id75968 . -1499) (undo-tree-id75969 . -1499) (undo-tree-id75970 . -1499) (undo-tree-id75971 . -1499) (undo-tree-id75972 . -1499) (undo-tree-id75973 . -1503) (undo-tree-id75974 . -1503) (undo-tree-id75975 . -1503) (undo-tree-id75976 . -1503) (undo-tree-id75977 . -1503) (undo-tree-id75978 . -1503) (undo-tree-id75979 . -1503) (undo-tree-id75980 . -1503) (undo-tree-id75981 . -1503) (undo-tree-id75982 . -1503) (undo-tree-id75983 . -1503) (undo-tree-id75984 . -1503) (undo-tree-id75985 . -1503) (undo-tree-id75986 . -1503) (undo-tree-id75987 . -1503) (undo-tree-id75988 . -1503) (undo-tree-id75989 . -1508) (undo-tree-id75990 . -1508) (undo-tree-id75991 . -1508) (undo-tree-id75992 . -1508) (undo-tree-id75993 . -1508) (undo-tree-id75994 . -1508) (undo-tree-id75995 . -1508) (undo-tree-id75996 . -1508) (undo-tree-id75997 . -1508) (undo-tree-id75998 . -1508) (undo-tree-id75999 . -1508) (undo-tree-id76000 . -1508) (undo-tree-id76001 . -1508) (undo-tree-id76002 . -1508) (undo-tree-id76003 . -1508) (undo-tree-id76004 . -1508) (undo-tree-id76005 . -1516) (undo-tree-id76006 . -1516) (undo-tree-id76007 . -1516) (undo-tree-id76008 . -1516) (undo-tree-id76009 . -1516) (undo-tree-id76010 . -1516) (undo-tree-id76011 . -1516) (undo-tree-id76012 . -1516) (undo-tree-id76013 . -1516) (undo-tree-id76014 . -1516) (undo-tree-id76015 . -1516) (undo-tree-id76016 . -1516) (undo-tree-id76017 . -1516) (undo-tree-id76018 . -1516) (undo-tree-id76019 . -1516) (undo-tree-id76020 . -1516) (undo-tree-id76021 . -1528) (undo-tree-id76022 . -1528) (undo-tree-id76023 . -1528) (undo-tree-id76024 . -1528) (undo-tree-id76025 . -1528) (undo-tree-id76026 . -1528) (undo-tree-id76027 . -1528) (undo-tree-id76028 . -1528) (undo-tree-id76029 . -1528) (undo-tree-id76030 . -1528) (undo-tree-id76031 . -1528) (undo-tree-id76032 . -1528) (undo-tree-id76033 . -1528) (undo-tree-id76034 . -1528) (undo-tree-id76035 . -1528) (undo-tree-id76036 . -1528) (undo-tree-id76037 . -1531) (undo-tree-id76038 . -1531) (undo-tree-id76039 . -1531) (undo-tree-id76040 . -1531) (undo-tree-id76041 . -1531) (undo-tree-id76042 . -1531) (undo-tree-id76043 . -1531) (undo-tree-id76044 . -1531) (undo-tree-id76045 . -1531) (undo-tree-id76046 . -1531) (undo-tree-id76047 . -1531) (undo-tree-id76048 . -1531) (undo-tree-id76049 . -1531) (undo-tree-id76050 . -1531) (undo-tree-id76051 . -1531) (undo-tree-id76052 . -1531) (undo-tree-id76053 . -1531) (undo-tree-id76054 . -1531) (undo-tree-id76055 . -1531) (undo-tree-id76056 . -1531) (undo-tree-id76057 . -1531) (undo-tree-id76058 . -1540) (undo-tree-id76059 . -1540) (undo-tree-id76060 . -1540) (undo-tree-id76061 . -1540) (undo-tree-id76062 . -1540) (undo-tree-id76063 . -1540) (undo-tree-id76064 . -1540) (undo-tree-id76065 . -1540) (undo-tree-id76066 . -1540) (undo-tree-id76067 . -1540) (undo-tree-id76068 . -1540) (undo-tree-id76069 . -1540) (undo-tree-id76070 . -1540) (undo-tree-id76071 . -1540) (undo-tree-id76072 . -1540) (undo-tree-id76073 . -1540) (undo-tree-id76074 . -1540) (undo-tree-id76075 . -1540) (undo-tree-id76076 . -1540) (undo-tree-id76077 . -1540) (undo-tree-id76078 . -1540) (undo-tree-id76079 . -1549) (undo-tree-id76080 . -1549) (undo-tree-id76081 . -1549) (undo-tree-id76082 . -1549) (undo-tree-id76083 . -1549) (undo-tree-id76084 . -1549) (undo-tree-id76085 . -1549) (undo-tree-id76086 . -1549) (undo-tree-id76087 . -1549) (undo-tree-id76088 . -1549) (undo-tree-id76089 . -1549) (undo-tree-id76090 . -1549) (undo-tree-id76091 . -1549) (undo-tree-id76092 . -1549) (undo-tree-id76093 . -1549) (undo-tree-id76094 . -1549) (undo-tree-id76095 . -1550) (undo-tree-id76096 . -1550) (undo-tree-id76097 . -1550) (undo-tree-id76098 . -1550) (undo-tree-id76099 . -1550) (undo-tree-id76100 . -1550) (undo-tree-id76101 . -1550) (undo-tree-id76102 . -1550) (undo-tree-id76103 . -1550) (undo-tree-id76104 . -1550) (undo-tree-id76105 . -1550) (undo-tree-id76106 . -1550) (undo-tree-id76107 . -1550) (undo-tree-id76108 . -1550) (undo-tree-id76109 . -1550) (undo-tree-id76110 . -1550) (undo-tree-id76111 . -1551) (undo-tree-id76112 . -1551) (undo-tree-id76113 . -1551) (undo-tree-id76114 . -1551) (undo-tree-id76115 . -1551) (undo-tree-id76116 . -1551) (undo-tree-id76117 . -1551) (undo-tree-id76118 . -1551) (undo-tree-id76119 . -1551) (undo-tree-id76120 . -1551) (undo-tree-id76121 . -1551) (undo-tree-id76122 . -1551) (undo-tree-id76123 . -1551) (undo-tree-id76124 . -1551) (undo-tree-id76125 . -1551) (undo-tree-id76126 . -1551) (undo-tree-id76127 . -1551) (undo-tree-id76128 . -1551) (undo-tree-id76129 . -1551) (undo-tree-id76130 . -1551) (undo-tree-id76131 . -1551) (undo-tree-id76132 . -1551) (undo-tree-id76133 . -1551) (undo-tree-id76134 . -1551) (undo-tree-id76135 . -1374) (7630 . 9004) (#(" Let’s first talk about the multi-head self-attention, which is a simple modification of scaled dot-product attention covered earlier in this chapter. In the scaled dot-product attention, we used three matrices (corresponding to query, value, and key) to transform the input sequence. In the context of multi-head attention, we can think of this set of three matrices as one attention head. As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 28 73 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 73 78 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 78 79 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 79 80 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 80 81 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 81 107 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 107 108 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 108 210 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 210 211 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 211 256 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 256 258 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 258 259 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 259 260 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 260 313 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 313 314 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 314 323 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 323 338 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 338 416 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 416 417 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 417 517 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 517 518 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 518 573 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 573 589 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 589 590 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 590 690 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 690 691 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 691 716 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 716 717 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 717 827 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 827 828 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 828 917 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 917 930 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 930 931 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 931 985 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 985 986 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 986 987 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 987 988 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 988 989 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 989 990 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 990 1011 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1011 1012 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1012 1033 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1033 1034 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1034 1038 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1038 1039 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1039 1061 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1061 1062 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1062 1159 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1159 1160 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1160 1273 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1273 1274 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1274 1370 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1370 1371 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 7807) (t 25775 894 502195 291000)) nil (25775 907 770707 645000) 0 nil])
([nil nil ((7814 . 7815) (#("’" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7814) (undo-tree-id76136 . -1) (t 25775 907 850416 791000)) nil (25775 912 178584 948000) 0 nil])
([nil nil ((#("- Six is not a magic number here but merely a hyperparameter choice made in the original transformer paper.
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 56 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 56 107 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 107 108 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7454) (undo-tree-id76138 . -107) (undo-tree-id76139 . 62) (undo-tree-id76140 . -60) (undo-tree-id76141 . -108) (undo-tree-id76142 . -108) (undo-tree-id76143 . -108) (undo-tree-id76144 . -108) (undo-tree-id76145 . -108) (undo-tree-id76146 . -108) (undo-tree-id76147 . -64) (undo-tree-id76148 . -64) (undo-tree-id76149 . -64) (undo-tree-id76150 . -64) (undo-tree-id76151 . -64) (undo-tree-id76152 . -64) (undo-tree-id76153 . -64) (undo-tree-id76154 . -64) (undo-tree-id76155 . -64) (undo-tree-id76156 . -64) (undo-tree-id76157 . -64) (undo-tree-id76158 . -64) (undo-tree-id76159 . -64) (undo-tree-id76160 . -64) (undo-tree-id76161 . -64) (undo-tree-id76162 . -64) (undo-tree-id76163 . -64) (undo-tree-id76164 . -64) (undo-tree-id76165 . -64) (undo-tree-id76166 . -64) (undo-tree-id76167 . -64) (undo-tree-id76168 . -64) (undo-tree-id76169 . -64) (undo-tree-id76170 . -64) (undo-tree-id76171 . -64) (undo-tree-id76172 . -64) (undo-tree-id76173 . -64) (undo-tree-id76174 . -64) (undo-tree-id76175 . -64) (undo-tree-id76176 . -64) (undo-tree-id76177 . -64) (undo-tree-id76178 . -64) (undo-tree-id76179 . -64) (undo-tree-id76180 . -64) (undo-tree-id76181 . -64) (undo-tree-id76182 . -64) (undo-tree-id76183 . -64) (undo-tree-id76184 . -64) (undo-tree-id76185 . -64) (undo-tree-id76186 . -64) (undo-tree-id76187 . -64) (undo-tree-id76188 . -64) (undo-tree-id76189 . -64) (undo-tree-id76190 . -64) (undo-tree-id76191 . -64) (undo-tree-id76192 . -64) (undo-tree-id76193 . -64) (undo-tree-id76194 . -64) (undo-tree-id76195 . -64) (undo-tree-id76196 . -64) (undo-tree-id76197 . -64) (undo-tree-id76198 . -64) (undo-tree-id76199 . -64) (undo-tree-id76200 . -64) (undo-tree-id76201 . -64) (undo-tree-id76202 . -64) (undo-tree-id76203 . -64) (undo-tree-id76204 . -64) (undo-tree-id76205 . -64) (undo-tree-id76206 . -64) (undo-tree-id76207 . -5) (undo-tree-id76208 . -5) (undo-tree-id76209 . -5) (undo-tree-id76210 . -5) (undo-tree-id76211 . -5) (undo-tree-id76212 . -5) (undo-tree-id76213 . -5) (undo-tree-id76214 . -5) (undo-tree-id76215 . -5) (undo-tree-id76216 . -5) (undo-tree-id76217 . -5) (undo-tree-id76218 . -5) (undo-tree-id76219 . -5) (undo-tree-id76220 . -5) (undo-tree-id76221 . -5) (undo-tree-id76222 . -5) (undo-tree-id76223 . -2) (undo-tree-id76224 . -2) (undo-tree-id76225 . -2) (undo-tree-id76226 . -2) (undo-tree-id76227 . -2) (undo-tree-id76228 . -2) (undo-tree-id76229 . -2) (undo-tree-id76230 . -2) (undo-tree-id76231 . -2) (undo-tree-id76232 . -2) (undo-tree-id76233 . -2) (undo-tree-id76234 . -2) (undo-tree-id76235 . -2) (undo-tree-id76236 . -2) (undo-tree-id76237 . -2) (undo-tree-id76238 . -2) (undo-tree-id76239 . -2) (undo-tree-id76240 . -2) (undo-tree-id76241 . -2) (undo-tree-id76242 . -2) (undo-tree-id76243 . -2) (undo-tree-id76244 . -2) (undo-tree-id76245 . -2) (undo-tree-id76246 . -2) (undo-tree-id76247 . -2) (undo-tree-id76248 . -2) (undo-tree-id76249 . -2) (undo-tree-id76250 . -2) (undo-tree-id76251 . -2) (undo-tree-id76252 . -2) (undo-tree-id76253 . -2) (undo-tree-id76254 . -2) (undo-tree-id76255 . -2) (undo-tree-id76256 . -2) (undo-tree-id76257 . -2) (undo-tree-id76258 . -2) (undo-tree-id76259 . -2) (undo-tree-id76260 . -2) (undo-tree-id76261 . -2) (undo-tree-id76262 . -2) (undo-tree-id76263 . -2) (undo-tree-id76264 . -2) (undo-tree-id76265 . -2) (undo-tree-id76266 . -2) (undo-tree-id76267 . -2) (undo-tree-id76268 . -2) (undo-tree-id76269 . -2) (undo-tree-id76270 . -2) (undo-tree-id76271 . -2) (undo-tree-id76272 . -2) (undo-tree-id76273 . -2) (undo-tree-id76274 . -2) (undo-tree-id76275 . -2) (undo-tree-id76276 . -2) (undo-tree-id76277 . -2) (undo-tree-id76278 . -2) (undo-tree-id76279 . -2) (undo-tree-id76280 . -2) (undo-tree-id76281 . -2) (undo-tree-id76282 . -2) (undo-tree-id76283 . -2) (undo-tree-id76284 . -2) (undo-tree-id76285 . -2) (undo-tree-id76286 . -2) (undo-tree-id76287 . -2) (undo-tree-id76288 . -2) (undo-tree-id76289 . -2) (undo-tree-id76290 . -2) (undo-tree-id76291 . -2) (undo-tree-id76292 . -2) (undo-tree-id76293 . -2) (undo-tree-id76294 . -2) (undo-tree-id76295 . -2) (undo-tree-id76296 . -2) (undo-tree-id76297 . -2) (undo-tree-id76298 . -108) 7456 (t 25775 912 258489 912000)) nil (25775 959 708024 16000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7454) (undo-tree-id76137 . -1)) nil (25775 985 192955 680000) 0 nil])
([nil nil ((#("which we will discuss below" 0 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 4 6 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 6 7 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 7 8 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 8 27 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 7567) (undo-tree-id76537 . -26) (undo-tree-id76538 . -4) (undo-tree-id76539 . -4) (undo-tree-id76540 . -7) (undo-tree-id76541 . -7) (undo-tree-id76542 . -7) (undo-tree-id76543 . -7) (undo-tree-id76544 . -7) (undo-tree-id76545 . -7) (undo-tree-id76546 . -7) (undo-tree-id76547 . -7) (undo-tree-id76548 . -7) (undo-tree-id76549 . -7) (undo-tree-id76550 . -7) (undo-tree-id76551 . -7) (undo-tree-id76552 . -7) (undo-tree-id76553 . -7) (undo-tree-id76554 . -7) (undo-tree-id76555 . -7) (undo-tree-id76556 . -7) (undo-tree-id76557 . -7) (undo-tree-id76558 . -7) (undo-tree-id76559 . -7) (undo-tree-id76560 . -7) (undo-tree-id76561 . -12) (undo-tree-id76562 . -12) (undo-tree-id76563 . -12) (undo-tree-id76564 . -12) (undo-tree-id76565 . -12) (undo-tree-id76566 . -12) (undo-tree-id76567 . -12) (undo-tree-id76568 . -12) (undo-tree-id76569 . -12) (undo-tree-id76570 . -12) (undo-tree-id76571 . -12) (undo-tree-id76572 . -12) (undo-tree-id76573 . -12) (undo-tree-id76574 . -12) (undo-tree-id76575 . -12) (undo-tree-id76576 . -12) (undo-tree-id76577 . -12) (undo-tree-id76578 . -12) (undo-tree-id76579 . -12) (undo-tree-id76580 . -12) (undo-tree-id76581 . -12) (undo-tree-id76582 . -20) (undo-tree-id76583 . -20) (undo-tree-id76584 . -20) (undo-tree-id76585 . -20) (undo-tree-id76586 . -20) (undo-tree-id76587 . -20) (undo-tree-id76588 . -20) (undo-tree-id76589 . -20) (undo-tree-id76590 . -20) (undo-tree-id76591 . -20) (undo-tree-id76592 . -20) (undo-tree-id76593 . -20) (undo-tree-id76594 . -20) (undo-tree-id76595 . -20) (undo-tree-id76596 . -20) (undo-tree-id76597 . -20) (undo-tree-id76598 . -20) (undo-tree-id76599 . -20) (undo-tree-id76600 . -20) (undo-tree-id76601 . -20) (undo-tree-id76602 . -20) (undo-tree-id76603 . -26) (undo-tree-id76604 . -26) (undo-tree-id76605 . -26) (undo-tree-id76606 . -26) (undo-tree-id76607 . -26) (undo-tree-id76608 . -26) (undo-tree-id76609 . -26) (undo-tree-id76610 . -26) (undo-tree-id76611 . -26) (undo-tree-id76612 . -26) (undo-tree-id76613 . -26) (undo-tree-id76614 . -26) (undo-tree-id76615 . -26) (undo-tree-id76616 . -26) (undo-tree-id76617 . -26) (undo-tree-id76618 . -26) (undo-tree-id76619 . -26) (undo-tree-id76620 . -26) (undo-tree-id76621 . -26) (undo-tree-id76622 . -26) (undo-tree-id76623 . -26) (undo-tree-id76624 . -26) (undo-tree-id76625 . -26) (undo-tree-id76626 . -26) (undo-tree-id76627 . -26) (undo-tree-id76628 . -26) (undo-tree-id76629 . -27) (undo-tree-id76630 . -27) (undo-tree-id76631 . -27) (undo-tree-id76632 . -27) (undo-tree-id76633 . -27) (undo-tree-id76634 . -27) (undo-tree-id76635 . -27) (undo-tree-id76636 . -27) (undo-tree-id76637 . -27) (undo-tree-id76638 . -27) (undo-tree-id76639 . -27) (undo-tree-id76640 . -27) (undo-tree-id76641 . -27) (undo-tree-id76642 . -27) (undo-tree-id76643 . -27) (undo-tree-id76644 . -27) (undo-tree-id76645 . -27) (undo-tree-id76646 . -27) (undo-tree-id76647 . -27) (undo-tree-id76648 . -27) (undo-tree-id76649 . -27) (undo-tree-id76650 . -4) (undo-tree-id76651 . -4) (undo-tree-id76652 . -4) (undo-tree-id76653 . -4) (undo-tree-id76654 . -4) (undo-tree-id76655 . -4) (undo-tree-id76656 . -4) (undo-tree-id76657 . -4) (undo-tree-id76658 . -4) (undo-tree-id76659 . -4) (undo-tree-id76660 . -4) (undo-tree-id76661 . -4) (undo-tree-id76662 . -4) (undo-tree-id76663 . -4) (undo-tree-id76664 . -4) (undo-tree-id76665 . -4) (undo-tree-id76666 . -4) (undo-tree-id76667 . -4) (undo-tree-id76668 . -4) (undo-tree-id76669 . -4) (undo-tree-id76670 . -4) (undo-tree-id76671 . -4) (undo-tree-id76672 . -4) (undo-tree-id76673 . -4) (undo-tree-id76674 . -4) (undo-tree-id76675 . -4) (undo-tree-id76676 . -4) (undo-tree-id76677 . -4) (undo-tree-id76678 . -4) (undo-tree-id76679 . -4) (undo-tree-id76680 . -27) (undo-tree-id76681 . -27) (undo-tree-id76682 . -27) (undo-tree-id76683 . -27) (undo-tree-id76684 . -27) (undo-tree-id76685 . -27) (undo-tree-id76686 . -27) (undo-tree-id76687 . -27) (undo-tree-id76688 . -27) (undo-tree-id76689 . -27) (undo-tree-id76690 . -27) (undo-tree-id76691 . -27) (undo-tree-id76692 . -27) (undo-tree-id76693 . -27) (undo-tree-id76694 . -27) (undo-tree-id76695 . -27) (undo-tree-id76696 . -22) (undo-tree-id76697 . -22) (undo-tree-id76698 . -22) (undo-tree-id76699 . -22) (undo-tree-id76700 . -22) (undo-tree-id76701 . -22) (undo-tree-id76702 . -22) (undo-tree-id76703 . -22) (undo-tree-id76704 . -22) (undo-tree-id76705 . -22) (undo-tree-id76706 . -22) (undo-tree-id76707 . -22) (undo-tree-id76708 . -22) (undo-tree-id76709 . -22) (undo-tree-id76710 . -22) (undo-tree-id76711 . -22) (undo-tree-id76712 . -22) (undo-tree-id76713 . -22) (undo-tree-id76714 . -22) (undo-tree-id76715 . -22) (undo-tree-id76716 . -22) (undo-tree-id76717 . -14) (undo-tree-id76718 . -14) (undo-tree-id76719 . -14) (undo-tree-id76720 . -14) (undo-tree-id76721 . -14) (undo-tree-id76722 . -14) (undo-tree-id76723 . -14) (undo-tree-id76724 . -14) (undo-tree-id76725 . -14) (undo-tree-id76726 . -14) (undo-tree-id76727 . -14) (undo-tree-id76728 . -14) (undo-tree-id76729 . -14) (undo-tree-id76730 . -14) (undo-tree-id76731 . -14) (undo-tree-id76732 . -14) (undo-tree-id76733 . -14) (undo-tree-id76734 . -14) (undo-tree-id76735 . -14) (undo-tree-id76736 . -14) (undo-tree-id76737 . -14) (undo-tree-id76738 . -14) (undo-tree-id76739 . -14) (undo-tree-id76740 . -14) (undo-tree-id76741 . -14) (undo-tree-id76742 . -14) (undo-tree-id76743 . -27)) nil (25775 1007 841952 681000) 0 nil] [nil nil ((#("h we will discuss below, " 0 2 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2 3 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 4 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 4 25 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 7571) (undo-tree-id76299 . -24) (undo-tree-id76300 . -24) (undo-tree-id76301 . -24) (undo-tree-id76302 . -24) (undo-tree-id76303 . -25) (undo-tree-id76304 . -24) (undo-tree-id76305 . -3) (undo-tree-id76306 . -3) (undo-tree-id76307 . -3) (undo-tree-id76308 . -3) (undo-tree-id76309 . -3) (undo-tree-id76310 . -3) (undo-tree-id76311 . -3) (undo-tree-id76312 . -3) (undo-tree-id76313 . -3) (undo-tree-id76314 . -3) (undo-tree-id76315 . -3) (undo-tree-id76316 . -3) (undo-tree-id76317 . -3) (undo-tree-id76318 . -3) (undo-tree-id76319 . -3) (undo-tree-id76320 . -3) (undo-tree-id76321 . -3) (undo-tree-id76322 . -3) (undo-tree-id76323 . -3) (undo-tree-id76324 . -3) (undo-tree-id76325 . -3) (undo-tree-id76326 . -8) (undo-tree-id76327 . -8) (undo-tree-id76328 . -8) (undo-tree-id76329 . -8) (undo-tree-id76330 . -8) (undo-tree-id76331 . -8) (undo-tree-id76332 . -8) (undo-tree-id76333 . -8) (undo-tree-id76334 . -8) (undo-tree-id76335 . -8) (undo-tree-id76336 . -8) (undo-tree-id76337 . -8) (undo-tree-id76338 . -8) (undo-tree-id76339 . -8) (undo-tree-id76340 . -8) (undo-tree-id76341 . -8) (undo-tree-id76342 . -8) (undo-tree-id76343 . -8) (undo-tree-id76344 . -8) (undo-tree-id76345 . -8) (undo-tree-id76346 . -8) (undo-tree-id76347 . -16) (undo-tree-id76348 . -16) (undo-tree-id76349 . -16) (undo-tree-id76350 . -16) (undo-tree-id76351 . -16) (undo-tree-id76352 . -16) (undo-tree-id76353 . -16) (undo-tree-id76354 . -16) (undo-tree-id76355 . -16) (undo-tree-id76356 . -16) (undo-tree-id76357 . -16) (undo-tree-id76358 . -16) (undo-tree-id76359 . -16) (undo-tree-id76360 . -16) (undo-tree-id76361 . -16) (undo-tree-id76362 . -16) (undo-tree-id76363 . -16) (undo-tree-id76364 . -16) (undo-tree-id76365 . -16) (undo-tree-id76366 . -16) (undo-tree-id76367 . -16) (undo-tree-id76368 . -22) (undo-tree-id76369 . -22) (undo-tree-id76370 . -22) (undo-tree-id76371 . -22) (undo-tree-id76372 . -22) (undo-tree-id76373 . -22) (undo-tree-id76374 . -22) (undo-tree-id76375 . -22) (undo-tree-id76376 . -22) (undo-tree-id76377 . -22) (undo-tree-id76378 . -22) (undo-tree-id76379 . -22) (undo-tree-id76380 . -22) (undo-tree-id76381 . -22) (undo-tree-id76382 . -22) (undo-tree-id76383 . -22) (undo-tree-id76384 . -22) (undo-tree-id76385 . -22) (undo-tree-id76386 . -22) (undo-tree-id76387 . -22) (undo-tree-id76388 . -22) (undo-tree-id76389 . -22) (undo-tree-id76390 . -22) (undo-tree-id76391 . -22) (undo-tree-id76392 . -22) (undo-tree-id76393 . -22) (undo-tree-id76394 . -23) (undo-tree-id76395 . -23) (undo-tree-id76396 . -23) (undo-tree-id76397 . -23) (undo-tree-id76398 . -23) (undo-tree-id76399 . -23) (undo-tree-id76400 . -23) (undo-tree-id76401 . -23) (undo-tree-id76402 . -23) (undo-tree-id76403 . -23) (undo-tree-id76404 . -23) (undo-tree-id76405 . -23) (undo-tree-id76406 . -23) (undo-tree-id76407 . -23) (undo-tree-id76408 . -23) (undo-tree-id76409 . -23) (undo-tree-id76410 . -23) (undo-tree-id76411 . -23) (undo-tree-id76412 . -23) (undo-tree-id76413 . -23) (undo-tree-id76414 . -23) (undo-tree-id76415 . -24) (undo-tree-id76416 . -24) (undo-tree-id76417 . -24) (undo-tree-id76418 . -24) (undo-tree-id76419 . -24) (undo-tree-id76420 . -24) (undo-tree-id76421 . -24) (undo-tree-id76422 . -24) (undo-tree-id76423 . -24) (undo-tree-id76424 . -24) (undo-tree-id76425 . -24) (undo-tree-id76426 . -24) (undo-tree-id76427 . -24) (undo-tree-id76428 . -24) (undo-tree-id76429 . -24) (undo-tree-id76430 . -24) (undo-tree-id76431 . -24) (undo-tree-id76432 . -24) (undo-tree-id76433 . -24) (undo-tree-id76434 . -24) (undo-tree-id76435 . -24) (undo-tree-id76436 . -24) (undo-tree-id76437 . -24) (undo-tree-id76438 . -24) (undo-tree-id76439 . -24) (undo-tree-id76440 . -24) (undo-tree-id76441 . -24) (undo-tree-id76442 . -25) 7595 (t 25775 959 791277 564000)) ((7571 . 7596) (t 25775 984 947693 854000)) (25775 984 866098 552000) 0 nil])
([nil nil ((#("," 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 7567) (undo-tree-id76447 . -1) (undo-tree-id76448 . -1) (undo-tree-id76449 . -1) (undo-tree-id76450 . -1) (undo-tree-id76451 . -1) (undo-tree-id76452 . -1) (undo-tree-id76453 . -1) (undo-tree-id76454 . -1) (undo-tree-id76455 . -1) (undo-tree-id76456 . -1) (undo-tree-id76457 . -1) (undo-tree-id76458 . -1) (undo-tree-id76459 . -1) (undo-tree-id76460 . -1) (undo-tree-id76461 . -1) (undo-tree-id76462 . -1) (undo-tree-id76463 . -1) (undo-tree-id76464 . -1) (undo-tree-id76465 . -1) (undo-tree-id76466 . -1) (undo-tree-id76467 . -1) (undo-tree-id76468 . -1) (undo-tree-id76469 . -1) (undo-tree-id76470 . -1) (undo-tree-id76471 . -1) (undo-tree-id76472 . -1) (undo-tree-id76473 . -1) (undo-tree-id76474 . -1) (undo-tree-id76475 . -1) (undo-tree-id76476 . -1) (undo-tree-id76477 . -1) (undo-tree-id76478 . -1) (undo-tree-id76479 . -1) (undo-tree-id76480 . -1) (undo-tree-id76481 . -1) (undo-tree-id76482 . -1) (undo-tree-id76483 . -1) (undo-tree-id76484 . -1) (undo-tree-id76485 . -1) (undo-tree-id76486 . -1) (undo-tree-id76487 . -1) (undo-tree-id76488 . -1) (undo-tree-id76489 . -1) (undo-tree-id76490 . -1) (undo-tree-id76491 . -1) (undo-tree-id76492 . -1) (undo-tree-id76493 . -1) (undo-tree-id76494 . -1) (undo-tree-id76495 . -1) (undo-tree-id76496 . -1) (undo-tree-id76497 . -1) (undo-tree-id76498 . -1) (undo-tree-id76499 . -1) (undo-tree-id76500 . -1) (undo-tree-id76501 . -1) (undo-tree-id76502 . -1) (undo-tree-id76503 . -1) (undo-tree-id76504 . -1) (undo-tree-id76505 . -1) (undo-tree-id76506 . -1) (undo-tree-id76507 . -1) (undo-tree-id76508 . -1) (undo-tree-id76509 . -1) (undo-tree-id76510 . -1) (undo-tree-id76511 . -1) (undo-tree-id76512 . -1) (undo-tree-id76513 . -1) (undo-tree-id76514 . -1) (undo-tree-id76515 . -1) (undo-tree-id76516 . -1) (undo-tree-id76517 . -1) (undo-tree-id76518 . -1) (undo-tree-id76519 . -1) (undo-tree-id76520 . -1) (undo-tree-id76521 . -1) (undo-tree-id76522 . -1) (undo-tree-id76523 . -1) (undo-tree-id76524 . -1) (undo-tree-id76525 . -1) (undo-tree-id76526 . -1) (undo-tree-id76527 . -1) (undo-tree-id76528 . -1) (undo-tree-id76529 . -1) (undo-tree-id76530 . -1) (undo-tree-id76531 . -1) (undo-tree-id76532 . -1) (undo-tree-id76533 . -1) (undo-tree-id76534 . -1) (undo-tree-id76535 . -1) (undo-tree-id76536 . -1)) nil (25775 1007 840541 477000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 7567) (undo-tree-id76445 . -1) (undo-tree-id76446 . -1)) nil (25775 1007 840422 593000) 0 nil])
([nil nil ((#(", which you have already encountered in previous chapters" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 57 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 7611) (undo-tree-id76443 . -56) (undo-tree-id76444 . -57)) nil (25775 1007 840417 433000) 0 nil])
([nil nil ((#("Let's " 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 3 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 4 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7616) (undo-tree-id77848 . 6) (undo-tree-id77849 . -5) (undo-tree-id77850 . -6) (t 25775 1007 924073 753000)) nil (25775 1035 302646 910000) 0 nil])
([nil nil ((#("first " 0 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7616) (undo-tree-id77845 . 6) (undo-tree-id77846 . -5) (undo-tree-id77847 . -6)) nil (25775 1035 302644 61000) 0 nil])
([nil nil ((#("talk " 0 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7616) (undo-tree-id77842 . 5) (undo-tree-id77843 . -4) (undo-tree-id77844 . -5)) nil (25775 1035 302641 415000) 0 nil])
([nil nil ((#("about " 0 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7616) (undo-tree-id77839 . 6) (undo-tree-id77840 . -5) (undo-tree-id77841 . -6)) nil (25775 1035 302638 614000) 0 nil])
([nil nil ((#("the " 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7616) (undo-tree-id77836 . 4) (undo-tree-id77837 . -3) (undo-tree-id77838 . -4)) nil (25775 1035 302635 847000) 0 nil])
([nil nil ((7616 . 7617) (#("m" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7616)) nil (25775 1035 302632 974000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7641) (undo-tree-id77834 . -1) (undo-tree-id77835 . -1)) nil (25775 1035 302631 716000) 0 nil])
([nil nil ((#("which " 0 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7642) (undo-tree-id77832 . -5) (undo-tree-id77833 . -6)) nil (25775 1035 302628 643000) 0 nil])
([nil nil ((#(" covered earlier in this chapter" 0 32 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7698) (undo-tree-id77703 . -31) (undo-tree-id77704 . -7) (undo-tree-id77705 . -7) (undo-tree-id77706 . -7) (undo-tree-id77707 . -7) (undo-tree-id77708 . -7) (undo-tree-id77709 . -7) (undo-tree-id77710 . -7) (undo-tree-id77711 . -7) (undo-tree-id77712 . -7) (undo-tree-id77713 . -7) (undo-tree-id77714 . -7) (undo-tree-id77715 . -7) (undo-tree-id77716 . -7) (undo-tree-id77717 . -7) (undo-tree-id77718 . -7) (undo-tree-id77719 . -7) (undo-tree-id77720 . -15) (undo-tree-id77721 . -15) (undo-tree-id77722 . -15) (undo-tree-id77723 . -15) (undo-tree-id77724 . -15) (undo-tree-id77725 . -15) (undo-tree-id77726 . -15) (undo-tree-id77727 . -15) (undo-tree-id77728 . -15) (undo-tree-id77729 . -15) (undo-tree-id77730 . -15) (undo-tree-id77731 . -15) (undo-tree-id77732 . -15) (undo-tree-id77733 . -15) (undo-tree-id77734 . -15) (undo-tree-id77735 . -15) (undo-tree-id77736 . -18) (undo-tree-id77737 . -18) (undo-tree-id77738 . -18) (undo-tree-id77739 . -18) (undo-tree-id77740 . -18) (undo-tree-id77741 . -18) (undo-tree-id77742 . -18) (undo-tree-id77743 . -18) (undo-tree-id77744 . -18) (undo-tree-id77745 . -18) (undo-tree-id77746 . -18) (undo-tree-id77747 . -18) (undo-tree-id77748 . -18) (undo-tree-id77749 . -18) (undo-tree-id77750 . -18) (undo-tree-id77751 . -18) (undo-tree-id77752 . -18) (undo-tree-id77753 . -18) (undo-tree-id77754 . -18) (undo-tree-id77755 . -18) (undo-tree-id77756 . -18) (undo-tree-id77757 . -17) (undo-tree-id77758 . -17) (undo-tree-id77759 . -17) (undo-tree-id77760 . -17) (undo-tree-id77761 . -17) (undo-tree-id77762 . -17) (undo-tree-id77763 . -17) (undo-tree-id77764 . -17) (undo-tree-id77765 . -17) (undo-tree-id77766 . -17) (undo-tree-id77767 . -17) (undo-tree-id77768 . -17) (undo-tree-id77769 . -17) (undo-tree-id77770 . -17) (undo-tree-id77771 . -17) (undo-tree-id77772 . -17) (undo-tree-id77773 . -9) (undo-tree-id77774 . -9) (undo-tree-id77775 . -9) (undo-tree-id77776 . -9) (undo-tree-id77777 . -9) (undo-tree-id77778 . -9) (undo-tree-id77779 . -9) (undo-tree-id77780 . -9) (undo-tree-id77781 . -9) (undo-tree-id77782 . -9) (undo-tree-id77783 . -9) (undo-tree-id77784 . -9) (undo-tree-id77785 . -9) (undo-tree-id77786 . -9) (undo-tree-id77787 . -9) (undo-tree-id77788 . -9) (undo-tree-id77789 . -1) (undo-tree-id77790 . -1) (undo-tree-id77791 . -1) (undo-tree-id77792 . -1) (undo-tree-id77793 . -1) (undo-tree-id77794 . -1) (undo-tree-id77795 . -1) (undo-tree-id77796 . -1) (undo-tree-id77797 . -1) (undo-tree-id77798 . -1) (undo-tree-id77799 . -1) (undo-tree-id77800 . -1) (undo-tree-id77801 . -1) (undo-tree-id77802 . -1) (undo-tree-id77803 . -1) (undo-tree-id77804 . -1) (undo-tree-id77805 . -1) (undo-tree-id77806 . -1) (undo-tree-id77807 . -1) (undo-tree-id77808 . -1) (undo-tree-id77809 . -1) (undo-tree-id77810 . -1) (undo-tree-id77811 . -1) (undo-tree-id77812 . -1) (undo-tree-id77813 . -1) (undo-tree-id77814 . -1) (undo-tree-id77815 . -1) (undo-tree-id77816 . -1) (undo-tree-id77817 . -1) (undo-tree-id77818 . -1) (undo-tree-id77819 . -1) (undo-tree-id77820 . -1) (undo-tree-id77821 . -1) (undo-tree-id77822 . -1) (undo-tree-id77823 . -1) (undo-tree-id77824 . -1) (undo-tree-id77825 . -1) (undo-tree-id77826 . -1) (undo-tree-id77827 . -1) (undo-tree-id77828 . -1) (undo-tree-id77829 . -1) (undo-tree-id77830 . -1) (undo-tree-id77831 . -32)) nil (25775 1035 302621 201000) 0 nil])
([nil nil ((7614 . 8923) (#("- In the scaled dot-product attention, we used three matrices (corresponding to query, value, and key) to transform the input sequence. In the context of multi-head attention, we can think of this set of three matrices as one attention head. As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the

- Multi-head self-attention is a simple modification of scaled dot-product attention." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 61 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 61 62 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 62 107 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 107 109 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 109 110 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 110 111 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 111 164 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 164 165 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 165 171 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 171 174 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 174 189 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 189 267 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 267 268 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 268 350 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 350 356 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 356 362 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 362 367 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 367 368 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 368 369 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 369 373 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 373 377 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 377 378 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 378 384 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 384 416 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 416 424 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 424 440 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 440 441 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 441 541 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 541 542 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 542 567 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 567 568 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 568 678 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 678 679 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 679 768 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 768 781 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 781 782 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 782 836 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 836 837 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 837 838 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 838 839 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 839 840 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 840 841 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 841 862 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 862 863 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 863 884 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 884 885 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 885 889 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 889 890 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 890 912 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 912 913 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 913 1010 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1010 1011 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1011 1124 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1124 1125 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1125 1221 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1221 1222 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1222 1223 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1223 1224 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1224 1225 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1225 1226 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1226 1264 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1264 1269 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1269 1270 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1270 1271 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1271 1272 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1272 1298 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1298 1299 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1299 1309 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 7614) (undo-tree-id76744 . 83) (undo-tree-id76745 . -1308) (undo-tree-id76746 . -1308) (undo-tree-id76747 . -1226) (undo-tree-id76748 . -1226) (undo-tree-id76749 . 82) (undo-tree-id76750 . -1226) (undo-tree-id76751 . -1226) (undo-tree-id76752 . -1309) (undo-tree-id76753 . -1226) (undo-tree-id76754 . -1226) (undo-tree-id76755 . -1226) (undo-tree-id76756 . -1226) (undo-tree-id76757 . -1226) (undo-tree-id76758 . -1226) (undo-tree-id76759 . -1226) (undo-tree-id76760 . -1226) (undo-tree-id76761 . -1226) (undo-tree-id76762 . -1226) (undo-tree-id76763 . -1226) (undo-tree-id76764 . -1226) (undo-tree-id76765 . -1226) (undo-tree-id76766 . -1226) (undo-tree-id76767 . -1226) (undo-tree-id76768 . -1226) (undo-tree-id76769 . -1226) (undo-tree-id76770 . -1226) (undo-tree-id76771 . -1226) (undo-tree-id76772 . -1226) (undo-tree-id76773 . -1226) (undo-tree-id76774 . -1226) (undo-tree-id76775 . -1226) (undo-tree-id76776 . -1226) (undo-tree-id76777 . -1226) (undo-tree-id76778 . -1226) (undo-tree-id76779 . -1226) (undo-tree-id76780 . -1226) (undo-tree-id76781 . -1226) (undo-tree-id76782 . -1226) (undo-tree-id76783 . -1226) (undo-tree-id76784 . -1226) (undo-tree-id76785 . -1226) (undo-tree-id76786 . -1226) (undo-tree-id76787 . -1226) (undo-tree-id76788 . -1226) (undo-tree-id76789 . -1226) (undo-tree-id76790 . -1226) (undo-tree-id76791 . -1226) (undo-tree-id76792 . -1226) (undo-tree-id76793 . -1226) (undo-tree-id76794 . -1226) (undo-tree-id76795 . -1226) (undo-tree-id76796 . -1226) (undo-tree-id76797 . -1226) (undo-tree-id76798 . -1226) (undo-tree-id76799 . -1226) (undo-tree-id76800 . -1226) (undo-tree-id76801 . -1226) (undo-tree-id76802 . -1226) (undo-tree-id76803 . -1226) (undo-tree-id76804 . -1226) (undo-tree-id76805 . -1226) (undo-tree-id76806 . -1226) (undo-tree-id76807 . -1226) (undo-tree-id76808 . -1226) (undo-tree-id76809 . -1226) (undo-tree-id76810 . -1226) (undo-tree-id76811 . -1226) (undo-tree-id76812 . -1226) (undo-tree-id76813 . -1226) (undo-tree-id76814 . -1226) (undo-tree-id76815 . -1226) (undo-tree-id76816 . -1226) (undo-tree-id76817 . -1226) (undo-tree-id76818 . -1226) (undo-tree-id76819 . -1226) (undo-tree-id76820 . -1226) (undo-tree-id76821 . -1226) (undo-tree-id76822 . -1226) (undo-tree-id76823 . -1226) (undo-tree-id76824 . -1226) (undo-tree-id76825 . -1226) (undo-tree-id76826 . -1226) (undo-tree-id76827 . -1226) (undo-tree-id76828 . -1226) (undo-tree-id76829 . -1226) (undo-tree-id76830 . -1226) (undo-tree-id76831 . -1226) (undo-tree-id76832 . -1226) (undo-tree-id76833 . -1226) (undo-tree-id76834 . -1226) (undo-tree-id76835 . -1226) (undo-tree-id76836 . -1226) (undo-tree-id76837 . -1226) (undo-tree-id76838 . -1226) (undo-tree-id76839 . -1226) (undo-tree-id76840 . -1226) (undo-tree-id76841 . -1226) (undo-tree-id76842 . -1226) (undo-tree-id76843 . -1226) (undo-tree-id76844 . -1226) (undo-tree-id76845 . -1226) (undo-tree-id76846 . -1226) (undo-tree-id76847 . -1226) (undo-tree-id76848 . -1226) (undo-tree-id76849 . -1226) (undo-tree-id76850 . -1226) (undo-tree-id76851 . -1226) (undo-tree-id76852 . -1226) (undo-tree-id76853 . -1226) (undo-tree-id76854 . -1226) (undo-tree-id76855 . -1226) (undo-tree-id76856 . -1226) (undo-tree-id76857 . -1226) (undo-tree-id76858 . -1226) (undo-tree-id76859 . -1226) (undo-tree-id76860 . -1226) (undo-tree-id76861 . -1226) (undo-tree-id76862 . -1226) (undo-tree-id76863 . -1226) (undo-tree-id76864 . -1226) (undo-tree-id76865 . -1226) (undo-tree-id76866 . -1226) (undo-tree-id76867 . -1226) (undo-tree-id76868 . -1226) (undo-tree-id76869 . -1226) (undo-tree-id76870 . -1226) (undo-tree-id76871 . -1226) (undo-tree-id76872 . -1226) (undo-tree-id76873 . -1226) (undo-tree-id76874 . -1226) (undo-tree-id76875 . -1226) (undo-tree-id76876 . -1226) (undo-tree-id76877 . -1226) (undo-tree-id76878 . -1226) (undo-tree-id76879 . -1226) (undo-tree-id76880 . -1226) (undo-tree-id76881 . -1226) (undo-tree-id76882 . -1226) (undo-tree-id76883 . -1226) (undo-tree-id76884 . -1226) (undo-tree-id76885 . -1226) (undo-tree-id76886 . -1226) (undo-tree-id76887 . -1226) (undo-tree-id76888 . -1226) (undo-tree-id76889 . -1226) (undo-tree-id76890 . -1226) (undo-tree-id76891 . -1226) (undo-tree-id76892 . -1226) (undo-tree-id76893 . -1226) (undo-tree-id76894 . -1226) (undo-tree-id76895 . -1226) (undo-tree-id76896 . -1226) (undo-tree-id76897 . -1226) (undo-tree-id76898 . -1226) (undo-tree-id76899 . -1226) (undo-tree-id76900 . -1226) (undo-tree-id76901 . -1226) (undo-tree-id76902 . -1226) (undo-tree-id76903 . -1226) (undo-tree-id76904 . -1226) (undo-tree-id76905 . -1226) (undo-tree-id76906 . -1226) (undo-tree-id76907 . -1226) (undo-tree-id76908 . -1226) (undo-tree-id76909 . -1226) (undo-tree-id76910 . -1226) (undo-tree-id76911 . -1226) (undo-tree-id76912 . -1226) (undo-tree-id76913 . -1226) (undo-tree-id76914 . -1226) (undo-tree-id76915 . -1226) (undo-tree-id76916 . -1226) (undo-tree-id76917 . -1226) (undo-tree-id76918 . -1226) (undo-tree-id76919 . -1226) (undo-tree-id76920 . -1226) (undo-tree-id76921 . -1226) (undo-tree-id76922 . -1226) (undo-tree-id76923 . -1226) (undo-tree-id76924 . -1226) (undo-tree-id76925 . -1226) (undo-tree-id76926 . -1226) (undo-tree-id76927 . -1226) (undo-tree-id76928 . -1226) (undo-tree-id76929 . -1226) (undo-tree-id76930 . -1226) (undo-tree-id76931 . -1226) (undo-tree-id76932 . -1226) (undo-tree-id76933 . -1226) (undo-tree-id76934 . -1226) (undo-tree-id76935 . -1226) (undo-tree-id76936 . -1226) (undo-tree-id76937 . -1226) (undo-tree-id76938 . -1226) (undo-tree-id76939 . -1226) (undo-tree-id76940 . -1226) (undo-tree-id76941 . -1226) (undo-tree-id76942 . -1226) (undo-tree-id76943 . -1226) (undo-tree-id76944 . -1226) (undo-tree-id76945 . -1226) (undo-tree-id76946 . -1226) (undo-tree-id76947 . -1226) (undo-tree-id76948 . -1226) (undo-tree-id76949 . -1226) (undo-tree-id76950 . -1226) (undo-tree-id76951 . -1226) (undo-tree-id76952 . -1226) (undo-tree-id76953 . -1226) (undo-tree-id76954 . -1226) (undo-tree-id76955 . -1226) (undo-tree-id76956 . -1226) (undo-tree-id76957 . -1226) (undo-tree-id76958 . -1226) (undo-tree-id76959 . -1226) (undo-tree-id76960 . -1226) (undo-tree-id76961 . -1226) (undo-tree-id76962 . -1226) (undo-tree-id76963 . -1226) (undo-tree-id76964 . -1226) (undo-tree-id76965 . -1226) (undo-tree-id76966 . -1226) (undo-tree-id76967 . -1226) (undo-tree-id76968 . -1226) (undo-tree-id76969 . -1226) (undo-tree-id76970 . -1226) (undo-tree-id76971 . -1230) (undo-tree-id76972 . -1230) (undo-tree-id76973 . -1230) (undo-tree-id76974 . -1230) (undo-tree-id76975 . -1230) (undo-tree-id76976 . -1230) (undo-tree-id76977 . -1230) (undo-tree-id76978 . -1230) (undo-tree-id76979 . -1230) (undo-tree-id76980 . -1230) (undo-tree-id76981 . -1230) (undo-tree-id76982 . -1230) (undo-tree-id76983 . -1230) (undo-tree-id76984 . -1230) (undo-tree-id76985 . -1230) (undo-tree-id76986 . -1230) (undo-tree-id76987 . -1231) (undo-tree-id76988 . -1231) (undo-tree-id76989 . -1231) (undo-tree-id76990 . -1231) (undo-tree-id76991 . -1231) (undo-tree-id76992 . -1231) (undo-tree-id76993 . -1231) (undo-tree-id76994 . -1231) (undo-tree-id76995 . -1231) (undo-tree-id76996 . -1231) (undo-tree-id76997 . -1231) (undo-tree-id76998 . -1231) (undo-tree-id76999 . -1231) (undo-tree-id77000 . -1231) (undo-tree-id77001 . -1231) (undo-tree-id77002 . -1231) (undo-tree-id77003 . -1235) (undo-tree-id77004 . -1235) (undo-tree-id77005 . -1235) (undo-tree-id77006 . -1235) (undo-tree-id77007 . -1235) (undo-tree-id77008 . -1235) (undo-tree-id77009 . -1235) (undo-tree-id77010 . -1235) (undo-tree-id77011 . -1235) (undo-tree-id77012 . -1235) (undo-tree-id77013 . -1235) (undo-tree-id77014 . -1235) (undo-tree-id77015 . -1235) (undo-tree-id77016 . -1235) (undo-tree-id77017 . -1235) (undo-tree-id77018 . -1235) (undo-tree-id77019 . -1240) (undo-tree-id77020 . -1240) (undo-tree-id77021 . -1240) (undo-tree-id77022 . -1240) (undo-tree-id77023 . -1240) (undo-tree-id77024 . -1240) (undo-tree-id77025 . -1240) (undo-tree-id77026 . -1240) (undo-tree-id77027 . -1240) (undo-tree-id77028 . -1240) (undo-tree-id77029 . -1240) (undo-tree-id77030 . -1240) (undo-tree-id77031 . -1240) (undo-tree-id77032 . -1240) (undo-tree-id77033 . -1240) (undo-tree-id77034 . -1240) (undo-tree-id77035 . -1241) (undo-tree-id77036 . -1241) (undo-tree-id77037 . -1241) (undo-tree-id77038 . -1241) (undo-tree-id77039 . -1241) (undo-tree-id77040 . -1241) (undo-tree-id77041 . -1241) (undo-tree-id77042 . -1241) (undo-tree-id77043 . -1241) (undo-tree-id77044 . -1241) (undo-tree-id77045 . -1241) (undo-tree-id77046 . -1241) (undo-tree-id77047 . -1241) (undo-tree-id77048 . -1241) (undo-tree-id77049 . -1241) (undo-tree-id77050 . -1241) (undo-tree-id77051 . -1242) (undo-tree-id77052 . -1242) (undo-tree-id77053 . -1242) (undo-tree-id77054 . -1242) (undo-tree-id77055 . -1242) (undo-tree-id77056 . -1242) (undo-tree-id77057 . -1242) (undo-tree-id77058 . -1242) (undo-tree-id77059 . -1242) (undo-tree-id77060 . -1242) (undo-tree-id77061 . -1242) (undo-tree-id77062 . -1242) (undo-tree-id77063 . -1242) (undo-tree-id77064 . -1242) (undo-tree-id77065 . -1242) (undo-tree-id77066 . -1242) (undo-tree-id77067 . -1243) (undo-tree-id77068 . -1243) (undo-tree-id77069 . -1243) (undo-tree-id77070 . -1243) (undo-tree-id77071 . -1243) (undo-tree-id77072 . -1243) (undo-tree-id77073 . -1243) (undo-tree-id77074 . -1243) (undo-tree-id77075 . -1243) (undo-tree-id77076 . -1243) (undo-tree-id77077 . -1243) (undo-tree-id77078 . -1243) (undo-tree-id77079 . -1243) (undo-tree-id77080 . -1243) (undo-tree-id77081 . -1243) (undo-tree-id77082 . -1243) (undo-tree-id77083 . -1244) (undo-tree-id77084 . -1244) (undo-tree-id77085 . -1244) (undo-tree-id77086 . -1244) (undo-tree-id77087 . -1244) (undo-tree-id77088 . -1244) (undo-tree-id77089 . -1244) (undo-tree-id77090 . -1244) (undo-tree-id77091 . -1244) (undo-tree-id77092 . -1244) (undo-tree-id77093 . -1244) (undo-tree-id77094 . -1244) (undo-tree-id77095 . -1244) (undo-tree-id77096 . -1244) (undo-tree-id77097 . -1244) (undo-tree-id77098 . -1244) (undo-tree-id77099 . -1245) (undo-tree-id77100 . -1245) (undo-tree-id77101 . -1245) (undo-tree-id77102 . -1245) (undo-tree-id77103 . -1245) (undo-tree-id77104 . -1245) (undo-tree-id77105 . -1245) (undo-tree-id77106 . -1245) (undo-tree-id77107 . -1245) (undo-tree-id77108 . -1245) (undo-tree-id77109 . -1245) (undo-tree-id77110 . -1245) (undo-tree-id77111 . -1245) (undo-tree-id77112 . -1245) (undo-tree-id77113 . -1245) (undo-tree-id77114 . -1245) (undo-tree-id77115 . -1245) (undo-tree-id77116 . -1245) (undo-tree-id77117 . -1245) (undo-tree-id77118 . -1245) (undo-tree-id77119 . -1245) (undo-tree-id77120 . -1246) (undo-tree-id77121 . -1246) (undo-tree-id77122 . -1246) (undo-tree-id77123 . -1246) (undo-tree-id77124 . -1246) (undo-tree-id77125 . -1246) (undo-tree-id77126 . -1246) (undo-tree-id77127 . -1246) (undo-tree-id77128 . -1246) (undo-tree-id77129 . -1246) (undo-tree-id77130 . -1246) (undo-tree-id77131 . -1246) (undo-tree-id77132 . -1246) (undo-tree-id77133 . -1246) (undo-tree-id77134 . -1246) (undo-tree-id77135 . -1246) (undo-tree-id77136 . -1247) (undo-tree-id77137 . -1247) (undo-tree-id77138 . -1247) (undo-tree-id77139 . -1247) (undo-tree-id77140 . -1247) (undo-tree-id77141 . -1247) (undo-tree-id77142 . -1247) (undo-tree-id77143 . -1247) (undo-tree-id77144 . -1247) (undo-tree-id77145 . -1247) (undo-tree-id77146 . -1247) (undo-tree-id77147 . -1247) (undo-tree-id77148 . -1247) (undo-tree-id77149 . -1247) (undo-tree-id77150 . -1247) (undo-tree-id77151 . -1247) (undo-tree-id77152 . -1248) (undo-tree-id77153 . -1248) (undo-tree-id77154 . -1248) (undo-tree-id77155 . -1248) (undo-tree-id77156 . -1248) (undo-tree-id77157 . -1248) (undo-tree-id77158 . -1248) (undo-tree-id77159 . -1248) (undo-tree-id77160 . -1248) (undo-tree-id77161 . -1248) (undo-tree-id77162 . -1248) (undo-tree-id77163 . -1248) (undo-tree-id77164 . -1248) (undo-tree-id77165 . -1248) (undo-tree-id77166 . -1248) (undo-tree-id77167 . -1248) (undo-tree-id77168 . -1249) (undo-tree-id77169 . -1249) (undo-tree-id77170 . -1249) (undo-tree-id77171 . -1249) (undo-tree-id77172 . -1249) (undo-tree-id77173 . -1249) (undo-tree-id77174 . -1249) (undo-tree-id77175 . -1249) (undo-tree-id77176 . -1249) (undo-tree-id77177 . -1249) (undo-tree-id77178 . -1249) (undo-tree-id77179 . -1249) (undo-tree-id77180 . -1249) (undo-tree-id77181 . -1249) (undo-tree-id77182 . -1249) (undo-tree-id77183 . -1249) (undo-tree-id77184 . -1250) (undo-tree-id77185 . -1250) (undo-tree-id77186 . -1250) (undo-tree-id77187 . -1250) (undo-tree-id77188 . -1250) (undo-tree-id77189 . -1250) (undo-tree-id77190 . -1250) (undo-tree-id77191 . -1250) (undo-tree-id77192 . -1250) (undo-tree-id77193 . -1250) (undo-tree-id77194 . -1250) (undo-tree-id77195 . -1250) (undo-tree-id77196 . -1250) (undo-tree-id77197 . -1250) (undo-tree-id77198 . -1250) (undo-tree-id77199 . -1250) (undo-tree-id77200 . -1251) (undo-tree-id77201 . -1251) (undo-tree-id77202 . -1251) (undo-tree-id77203 . -1251) (undo-tree-id77204 . -1251) (undo-tree-id77205 . -1251) (undo-tree-id77206 . -1251) (undo-tree-id77207 . -1251) (undo-tree-id77208 . -1251) (undo-tree-id77209 . -1251) (undo-tree-id77210 . -1251) (undo-tree-id77211 . -1251) (undo-tree-id77212 . -1251) (undo-tree-id77213 . -1251) (undo-tree-id77214 . -1251) (undo-tree-id77215 . -1251) (undo-tree-id77216 . -1251) (undo-tree-id77217 . -1251) (undo-tree-id77218 . -1251) (undo-tree-id77219 . -1251) (undo-tree-id77220 . -1251) (undo-tree-id77221 . -1251) (undo-tree-id77222 . -1251) (undo-tree-id77223 . -1251) (undo-tree-id77224 . -1251) (undo-tree-id77225 . -1251) (undo-tree-id77226 . -1251) (undo-tree-id77227 . -1251) (undo-tree-id77228 . -1251) (undo-tree-id77229 . -1251) (undo-tree-id77230 . -1251) (undo-tree-id77231 . -1251) (undo-tree-id77232 . -1251) (undo-tree-id77233 . -1251) (undo-tree-id77234 . -1251) (undo-tree-id77235 . -1251) (undo-tree-id77236 . -1251) (undo-tree-id77237 . -1251) (undo-tree-id77238 . -1251) (undo-tree-id77239 . -1251) (undo-tree-id77240 . -1251) (undo-tree-id77241 . -1251) (undo-tree-id77242 . -1251) (undo-tree-id77243 . -1252) (undo-tree-id77244 . -1252) (undo-tree-id77245 . -1252) (undo-tree-id77246 . -1252) (undo-tree-id77247 . -1252) (undo-tree-id77248 . -1252) (undo-tree-id77249 . -1252) (undo-tree-id77250 . -1252) (undo-tree-id77251 . -1252) (undo-tree-id77252 . -1252) (undo-tree-id77253 . -1252) (undo-tree-id77254 . -1252) (undo-tree-id77255 . -1252) (undo-tree-id77256 . -1252) (undo-tree-id77257 . -1252) (undo-tree-id77258 . -1252) (undo-tree-id77259 . -1252) (undo-tree-id77260 . -1252) (undo-tree-id77261 . -1252) (undo-tree-id77262 . -1252) (undo-tree-id77263 . -1252) (undo-tree-id77264 . -1252) (undo-tree-id77265 . -1252) (undo-tree-id77266 . -1252) (undo-tree-id77267 . -1252) (undo-tree-id77268 . -1252) (undo-tree-id77269 . -1252) (undo-tree-id77270 . -1252) (undo-tree-id77271 . -1252) (undo-tree-id77272 . -1252) (undo-tree-id77273 . -1252) (undo-tree-id77274 . -1252) (undo-tree-id77275 . -1252) (undo-tree-id77276 . -1252) (undo-tree-id77277 . -1252) (undo-tree-id77278 . -1252) (undo-tree-id77279 . -1252) (undo-tree-id77280 . -1252) (undo-tree-id77281 . -1252) (undo-tree-id77282 . -1252) (undo-tree-id77283 . -1252) (undo-tree-id77284 . -1252) (undo-tree-id77285 . -1252) (undo-tree-id77286 . -1252) (undo-tree-id77287 . -1252) (undo-tree-id77288 . -1252) (undo-tree-id77289 . -1252) (undo-tree-id77290 . -1252) (undo-tree-id77291 . -1252) (undo-tree-id77292 . -1252) (undo-tree-id77293 . -1252) (undo-tree-id77294 . -1253) (undo-tree-id77295 . -1253) (undo-tree-id77296 . -1253) (undo-tree-id77297 . -1253) (undo-tree-id77298 . -1253) (undo-tree-id77299 . -1253) (undo-tree-id77300 . -1253) (undo-tree-id77301 . -1253) (undo-tree-id77302 . -1253) (undo-tree-id77303 . -1253) (undo-tree-id77304 . -1253) (undo-tree-id77305 . -1253) (undo-tree-id77306 . -1253) (undo-tree-id77307 . -1253) (undo-tree-id77308 . -1253) (undo-tree-id77309 . -1253) (undo-tree-id77310 . -1255) (undo-tree-id77311 . -1255) (undo-tree-id77312 . -1255) (undo-tree-id77313 . -1255) (undo-tree-id77314 . -1255) (undo-tree-id77315 . -1255) (undo-tree-id77316 . -1255) (undo-tree-id77317 . -1255) (undo-tree-id77318 . -1255) (undo-tree-id77319 . -1255) (undo-tree-id77320 . -1255) (undo-tree-id77321 . -1255) (undo-tree-id77322 . -1255) (undo-tree-id77323 . -1255) (undo-tree-id77324 . -1255) (undo-tree-id77325 . -1255) (undo-tree-id77326 . -1262) (undo-tree-id77327 . -1262) (undo-tree-id77328 . -1262) (undo-tree-id77329 . -1262) (undo-tree-id77330 . -1262) (undo-tree-id77331 . -1262) (undo-tree-id77332 . -1262) (undo-tree-id77333 . -1262) (undo-tree-id77334 . -1262) (undo-tree-id77335 . -1262) (undo-tree-id77336 . -1262) (undo-tree-id77337 . -1262) (undo-tree-id77338 . -1262) (undo-tree-id77339 . -1262) (undo-tree-id77340 . -1262) (undo-tree-id77341 . -1262) (undo-tree-id77342 . -1275) (undo-tree-id77343 . -1275) (undo-tree-id77344 . -1275) (undo-tree-id77345 . -1275) (undo-tree-id77346 . -1275) (undo-tree-id77347 . -1275) (undo-tree-id77348 . -1275) (undo-tree-id77349 . -1275) (undo-tree-id77350 . -1275) (undo-tree-id77351 . -1275) (undo-tree-id77352 . -1275) (undo-tree-id77353 . -1275) (undo-tree-id77354 . -1275) (undo-tree-id77355 . -1275) (undo-tree-id77356 . -1275) (undo-tree-id77357 . -1275) (undo-tree-id77358 . -1275) (undo-tree-id77359 . -1275) (undo-tree-id77360 . -1275) (undo-tree-id77361 . -1275) (undo-tree-id77362 . -1275) (undo-tree-id77363 . -1278) (undo-tree-id77364 . -1278) (undo-tree-id77365 . -1278) (undo-tree-id77366 . -1278) (undo-tree-id77367 . -1278) (undo-tree-id77368 . -1278) (undo-tree-id77369 . -1278) (undo-tree-id77370 . -1278) (undo-tree-id77371 . -1278) (undo-tree-id77372 . -1278) (undo-tree-id77373 . -1278) (undo-tree-id77374 . -1278) (undo-tree-id77375 . -1278) (undo-tree-id77376 . -1278) (undo-tree-id77377 . -1278) (undo-tree-id77378 . -1278) (undo-tree-id77379 . -1278) (undo-tree-id77380 . -1278) (undo-tree-id77381 . -1278) (undo-tree-id77382 . -1278) (undo-tree-id77383 . -1278) (undo-tree-id77384 . -1285) (undo-tree-id77385 . -1285) (undo-tree-id77386 . -1285) (undo-tree-id77387 . -1285) (undo-tree-id77388 . -1285) (undo-tree-id77389 . -1285) (undo-tree-id77390 . -1285) (undo-tree-id77391 . -1285) (undo-tree-id77392 . -1285) (undo-tree-id77393 . -1285) (undo-tree-id77394 . -1285) (undo-tree-id77395 . -1285) (undo-tree-id77396 . -1285) (undo-tree-id77397 . -1285) (undo-tree-id77398 . -1285) (undo-tree-id77399 . -1285) (undo-tree-id77400 . -1289) (undo-tree-id77401 . -1289) (undo-tree-id77402 . -1289) (undo-tree-id77403 . -1289) (undo-tree-id77404 . -1289) (undo-tree-id77405 . -1289) (undo-tree-id77406 . -1289) (undo-tree-id77407 . -1289) (undo-tree-id77408 . -1289) (undo-tree-id77409 . -1289) (undo-tree-id77410 . -1289) (undo-tree-id77411 . -1289) (undo-tree-id77412 . -1289) (undo-tree-id77413 . -1289) (undo-tree-id77414 . -1289) (undo-tree-id77415 . -1289) (undo-tree-id77416 . -1290) (undo-tree-id77417 . -1290) (undo-tree-id77418 . -1290) (undo-tree-id77419 . -1290) (undo-tree-id77420 . -1290) (undo-tree-id77421 . -1290) (undo-tree-id77422 . -1290) (undo-tree-id77423 . -1290) (undo-tree-id77424 . -1290) (undo-tree-id77425 . -1290) (undo-tree-id77426 . -1290) (undo-tree-id77427 . -1290) (undo-tree-id77428 . -1290) (undo-tree-id77429 . -1290) (undo-tree-id77430 . -1290) (undo-tree-id77431 . -1290) (undo-tree-id77432 . -1297) (undo-tree-id77433 . -1297) (undo-tree-id77434 . -1297) (undo-tree-id77435 . -1297) (undo-tree-id77436 . -1297) (undo-tree-id77437 . -1297) (undo-tree-id77438 . -1297) (undo-tree-id77439 . -1297) (undo-tree-id77440 . -1297) (undo-tree-id77441 . -1297) (undo-tree-id77442 . -1297) (undo-tree-id77443 . -1297) (undo-tree-id77444 . -1297) (undo-tree-id77445 . -1297) (undo-tree-id77446 . -1297) (undo-tree-id77447 . -1297) (undo-tree-id77448 . -1307) (undo-tree-id77449 . -1307) (undo-tree-id77450 . -1307) (undo-tree-id77451 . -1307) (undo-tree-id77452 . -1307) (undo-tree-id77453 . -1307) (undo-tree-id77454 . -1307) (undo-tree-id77455 . -1307) (undo-tree-id77456 . -1307) (undo-tree-id77457 . -1307) (undo-tree-id77458 . -1307) (undo-tree-id77459 . -1307) (undo-tree-id77460 . -1307) (undo-tree-id77461 . -1307) (undo-tree-id77462 . -1307) (undo-tree-id77463 . -1307) (undo-tree-id77464 . -1308) (undo-tree-id77465 . -1308) (undo-tree-id77466 . -1308) (undo-tree-id77467 . -1308) (undo-tree-id77468 . -1308) (undo-tree-id77469 . -1308) (undo-tree-id77470 . -1308) (undo-tree-id77471 . -1308) (undo-tree-id77472 . -1308) (undo-tree-id77473 . -1308) (undo-tree-id77474 . -1308) (undo-tree-id77475 . -1308) (undo-tree-id77476 . -1308) (undo-tree-id77477 . -1308) (undo-tree-id77478 . -1308) (undo-tree-id77479 . -1308) (undo-tree-id77480 . -1308) (undo-tree-id77481 . -1308) (undo-tree-id77482 . -1308) (undo-tree-id77483 . -1308) (undo-tree-id77484 . -1308) (undo-tree-id77485 . -1308) (undo-tree-id77486 . -1308) (undo-tree-id77487 . -1308) (undo-tree-id77488 . -1308) (undo-tree-id77489 . -1308) (undo-tree-id77490 . -1308) (undo-tree-id77491 . -1308) (undo-tree-id77492 . -1308) (undo-tree-id77493 . -1308) (undo-tree-id77494 . -1308) (undo-tree-id77495 . -1308) (undo-tree-id77496 . -1308) (undo-tree-id77497 . -1308) (undo-tree-id77498 . -1308) (undo-tree-id77499 . -1308) (undo-tree-id77500 . -1308) (undo-tree-id77501 . -1308) (undo-tree-id77502 . -1308) (undo-tree-id77503 . -1308) (undo-tree-id77504 . -1308) (undo-tree-id77505 . -1308) (undo-tree-id77506 . -1308) (undo-tree-id77507 . -1308) (undo-tree-id77508 . -1308) (undo-tree-id77509 . -1308) (undo-tree-id77510 . -1308) (undo-tree-id77511 . -1308) (undo-tree-id77512 . -1308) (undo-tree-id77513 . -1308) (undo-tree-id77514 . -1308) (undo-tree-id77515 . -1308) (undo-tree-id77516 . -1308) (undo-tree-id77517 . -1308) (undo-tree-id77518 . -1308) (undo-tree-id77519 . -1308) (undo-tree-id77520 . -1308) (undo-tree-id77521 . -1308) (undo-tree-id77522 . -1308) (undo-tree-id77523 . -1308) (undo-tree-id77524 . -1308) (undo-tree-id77525 . -1308) (undo-tree-id77526 . -1308) (undo-tree-id77527 . -1308) (undo-tree-id77528 . -1308) (undo-tree-id77529 . -1308) (undo-tree-id77530 . -1308) (undo-tree-id77531 . -1308) (undo-tree-id77532 . -1308) (undo-tree-id77533 . -1308) (undo-tree-id77534 . -1308) (undo-tree-id77535 . -1308) (undo-tree-id77536 . -1308) (undo-tree-id77537 . -1308) (undo-tree-id77538 . -1308) (undo-tree-id77539 . -1308) (undo-tree-id77540 . -1308) (undo-tree-id77541 . -1308) (undo-tree-id77542 . -1308) (undo-tree-id77543 . -1308) (undo-tree-id77544 . -1308) (undo-tree-id77545 . -1308) (undo-tree-id77546 . -1308) (undo-tree-id77547 . -1308) (undo-tree-id77548 . -1308) (undo-tree-id77549 . -1308) (undo-tree-id77550 . -1308) (undo-tree-id77551 . -1308) (undo-tree-id77552 . -1308) (undo-tree-id77553 . -1308) (undo-tree-id77554 . -1308) (undo-tree-id77555 . -1308) (undo-tree-id77556 . -1308) (undo-tree-id77557 . -1308) (undo-tree-id77558 . -1308) (undo-tree-id77559 . -1308) (undo-tree-id77560 . -1308) (undo-tree-id77561 . -1308) (undo-tree-id77562 . -1308) (undo-tree-id77563 . -1308) (undo-tree-id77564 . -1308) (undo-tree-id77565 . -1299) (undo-tree-id77566 . -1299) (undo-tree-id77567 . -1299) (undo-tree-id77568 . -1299) (undo-tree-id77569 . -1299) (undo-tree-id77570 . -1299) (undo-tree-id77571 . -1299) (undo-tree-id77572 . -1299) (undo-tree-id77573 . -1299) (undo-tree-id77574 . -1299) (undo-tree-id77575 . -1299) (undo-tree-id77576 . -1299) (undo-tree-id77577 . -1299) (undo-tree-id77578 . -1299) (undo-tree-id77579 . -1299) (undo-tree-id77580 . -1299) (undo-tree-id77581 . -1308) (undo-tree-id77582 . -1308) (undo-tree-id77583 . -1308) (undo-tree-id77584 . -1308) (undo-tree-id77585 . -1308) (undo-tree-id77586 . -1308) (undo-tree-id77587 . -1308) (undo-tree-id77588 . -1308) (undo-tree-id77589 . -1308) (undo-tree-id77590 . -1308) (undo-tree-id77591 . -1308) (undo-tree-id77592 . -1308) (undo-tree-id77593 . -1308) (undo-tree-id77594 . -1308) (undo-tree-id77595 . -1308) (undo-tree-id77596 . -1308) (undo-tree-id77597 . -1308) (undo-tree-id77598 . -1308) (undo-tree-id77599 . -1308) (undo-tree-id77600 . -1308) (undo-tree-id77601 . -1308) (undo-tree-id77602 . -1308) (undo-tree-id77603 . -1308) (undo-tree-id77604 . -1308) (undo-tree-id77605 . -1308) (undo-tree-id77606 . -1308) (undo-tree-id77607 . -1308) (undo-tree-id77608 . -1308) (undo-tree-id77609 . -1308) (undo-tree-id77610 . -1308) (undo-tree-id77611 . -1308) (undo-tree-id77612 . -1308) (undo-tree-id77613 . -1308) (undo-tree-id77614 . -1308) (undo-tree-id77615 . -1308) (undo-tree-id77616 . -1308) (undo-tree-id77617 . -1308) (undo-tree-id77618 . -1308) (undo-tree-id77619 . -1308) (undo-tree-id77620 . -1308) (undo-tree-id77621 . -1308) (undo-tree-id77622 . -1308) (undo-tree-id77623 . -1308) (undo-tree-id77624 . -1308) (undo-tree-id77625 . -1308) (undo-tree-id77626 . -1308) (undo-tree-id77627 . -1308) (undo-tree-id77628 . -1308) (undo-tree-id77629 . -1308) (undo-tree-id77630 . -1308) (undo-tree-id77631 . -1308) (undo-tree-id77632 . -1308) (undo-tree-id77633 . -1308) (undo-tree-id77634 . -1308) (undo-tree-id77635 . -1308) (undo-tree-id77636 . -1308) (undo-tree-id77637 . -1308) (undo-tree-id77638 . -1308) (undo-tree-id77639 . -1308) (undo-tree-id77640 . -1308) (undo-tree-id77641 . -1308) (undo-tree-id77642 . -1308) (undo-tree-id77643 . -1308) (undo-tree-id77644 . -1308) (undo-tree-id77645 . -1308) (undo-tree-id77646 . -1308) (undo-tree-id77647 . -1308) (undo-tree-id77648 . -1308) (undo-tree-id77649 . -1308) (undo-tree-id77650 . -1308) (undo-tree-id77651 . -1308) (undo-tree-id77652 . -1308) (undo-tree-id77653 . -1308) (undo-tree-id77654 . -1308) (undo-tree-id77655 . -1308) (undo-tree-id77656 . -1308) (undo-tree-id77657 . -1308) (undo-tree-id77658 . -1308) (undo-tree-id77659 . -1308) (undo-tree-id77660 . -1308) (undo-tree-id77661 . -1308) (undo-tree-id77662 . -1308) (undo-tree-id77663 . -1308) (undo-tree-id77664 . -1308) (undo-tree-id77665 . -1308) (undo-tree-id77666 . -1308) (undo-tree-id77667 . -1308) (undo-tree-id77668 . -1308) (undo-tree-id77669 . -1308) (undo-tree-id77670 . -1308) (undo-tree-id77671 . -1308) (undo-tree-id77672 . -1308) (undo-tree-id77673 . -1308) (undo-tree-id77674 . -1308) (undo-tree-id77675 . -1308) (undo-tree-id77676 . -1308) (undo-tree-id77677 . -1308) (undo-tree-id77678 . -1309) (undo-tree-id77679 . -1309) (undo-tree-id77680 . -1309) (undo-tree-id77681 . -1309) (undo-tree-id77682 . -1309) (undo-tree-id77683 . -1309) (undo-tree-id77684 . -1309) (undo-tree-id77685 . -1309) (undo-tree-id77686 . -1309) (undo-tree-id77687 . -1309) (undo-tree-id77688 . -1309) (undo-tree-id77689 . -1309) (undo-tree-id77690 . -1309) (undo-tree-id77691 . -1309) (undo-tree-id77692 . -1309) (undo-tree-id77693 . -1309) (undo-tree-id77694 . -1309) (undo-tree-id77695 . -1309) (undo-tree-id77696 . -1309) (undo-tree-id77697 . -1309) (undo-tree-id77698 . -1309) (undo-tree-id77699 . -1309) (undo-tree-id77700 . -1309) (undo-tree-id77701 . -1309) (undo-tree-id77702 . -1224) (7614 . 8838) (#(" In the scaled dot-product attention, we used three matrices (corresponding to query, value, and key) to transform the input sequence. In the context of multi-head attention, we can think of this set of three matrices as one attention head. As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the" 0 60 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 60 61 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 61 106 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 106 108 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 108 109 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 109 110 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 110 163 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 163 164 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 164 170 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 170 173 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 173 188 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 188 266 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 266 267 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 267 349 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 349 355 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 355 361 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 361 366 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 366 367 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 367 368 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 368 372 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 372 376 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 376 377 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 377 383 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 383 415 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 415 423 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 423 439 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 439 440 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 440 540 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 540 541 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 541 566 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 566 567 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 567 677 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 677 678 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 678 767 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 767 780 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 780 781 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 781 835 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 835 836 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 836 837 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 837 838 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 838 839 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 839 840 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 840 861 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 861 862 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 862 883 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 883 884 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 884 888 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 888 889 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 889 911 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 911 912 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 912 1009 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1009 1010 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1010 1123 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1123 1124 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1124 1220 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1220 1221 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 7699)) nil (25775 1035 302499 170000) 0 nil])
([nil nil ((7701 . 8926) (#("- In the context of multi-head attention, we can think of this set of three matrices as one attention head. As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the

- In the scaled dot-product attention, we used three matrices (corresponding to query, value, and key) to transform the input sequence." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 30 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 30 31 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 31 37 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 37 40 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 40 55 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 55 133 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 133 134 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 134 216 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 216 222 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 222 228 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 228 233 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 233 234 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 234 235 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 235 239 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 239 243 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 243 244 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 244 250 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 250 279 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 279 282 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 282 290 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 290 306 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 306 307 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 307 407 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 407 408 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 408 433 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 433 434 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 434 544 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 544 545 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 545 634 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 634 647 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 647 648 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 648 702 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 702 703 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 703 704 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 704 705 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 705 706 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 706 707 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 707 728 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 728 729 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 729 750 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 750 751 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 751 755 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 755 756 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 756 778 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 778 779 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 779 876 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 876 877 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 877 990 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 990 991 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 991 1087 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1087 1088 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1088 1089 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1089 1090 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1090 1091 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 1091 1092 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1092 1151 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1151 1152 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1152 1197 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1197 1199 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1199 1200 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1200 1201 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1201 1225 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 7701) (undo-tree-id77851 . 133) (undo-tree-id77852 . -1091) (undo-tree-id77853 . -1091) (undo-tree-id77854 . -1091) (undo-tree-id77855 . -1091) (undo-tree-id77856 . -1091) (undo-tree-id77857 . -1091) (undo-tree-id77858 . -1091) (undo-tree-id77859 . -1091) (undo-tree-id77860 . -1091) (undo-tree-id77861 . -1091) (undo-tree-id77862 . -1091) (undo-tree-id77863 . -1091) (undo-tree-id77864 . -1091) (undo-tree-id77865 . -1091) (undo-tree-id77866 . -1091) (undo-tree-id77867 . -1091) (undo-tree-id77868 . -1091) (undo-tree-id77869 . -1091) (undo-tree-id77870 . -1091) (undo-tree-id77871 . -1091) (undo-tree-id77872 . -1091) (undo-tree-id77873 . -1091) (undo-tree-id77874 . -1091) (undo-tree-id77875 . -1091) (undo-tree-id77876 . -1091) (undo-tree-id77877 . -1091) (undo-tree-id77878 . -1091) (undo-tree-id77879 . -1091) (undo-tree-id77880 . -1091) (undo-tree-id77881 . -1091) (undo-tree-id77882 . -1091) (undo-tree-id77883 . -1091) (undo-tree-id77884 . -1091) (undo-tree-id77885 . -1091) (undo-tree-id77886 . -1092) (undo-tree-id77887 . -1092) (undo-tree-id77888 . -1092) (undo-tree-id77889 . -1092) (undo-tree-id77890 . -1092) (undo-tree-id77891 . -1092) (undo-tree-id77892 . -1092) (undo-tree-id77893 . -1092) (undo-tree-id77894 . -1092) (undo-tree-id77895 . -1092) (undo-tree-id77896 . -1092) (undo-tree-id77897 . -1092) (undo-tree-id77898 . -1092) (undo-tree-id77899 . -1092) (undo-tree-id77900 . -1092) (undo-tree-id77901 . -1092) (undo-tree-id77902 . -1092) (undo-tree-id77903 . -1092) (undo-tree-id77904 . -1092) (undo-tree-id77905 . -1092) (undo-tree-id77906 . -1092) (undo-tree-id77907 . -1092) (undo-tree-id77908 . -1092) (undo-tree-id77909 . -1092) (undo-tree-id77910 . -1092) (undo-tree-id77911 . -1092) (undo-tree-id77912 . -1092) (undo-tree-id77913 . -1092) (undo-tree-id77914 . -1092) (undo-tree-id77915 . -1092) (undo-tree-id77916 . -1092) (undo-tree-id77917 . -1092) (undo-tree-id77918 . -1092) (undo-tree-id77919 . -1092) (undo-tree-id77920 . -1225) (undo-tree-id77921 . -1092) (undo-tree-id77922 . -1092) (undo-tree-id77923 . -1092) (undo-tree-id77924 . -1092) (undo-tree-id77925 . -1092) (undo-tree-id77926 . -1092) (undo-tree-id77927 . -1092) (undo-tree-id77928 . -1092) (undo-tree-id77929 . -1092) (undo-tree-id77930 . -1092) (undo-tree-id77931 . -1092) (undo-tree-id77932 . -1092) (undo-tree-id77933 . -1092) (undo-tree-id77934 . -1092) (undo-tree-id77935 . -1092) (undo-tree-id77936 . -1092) (undo-tree-id77937 . -1092) (undo-tree-id77938 . -1092) (undo-tree-id77939 . -1092) (undo-tree-id77940 . -1092) (undo-tree-id77941 . -1092) (undo-tree-id77942 . -1092) (undo-tree-id77943 . -1092) (undo-tree-id77944 . -1092) (undo-tree-id77945 . -1092) (undo-tree-id77946 . -1092) (undo-tree-id77947 . -1092) (undo-tree-id77948 . -1092) (undo-tree-id77949 . -1092) (undo-tree-id77950 . -1092) (undo-tree-id77951 . -1092) (undo-tree-id77952 . -1092) (undo-tree-id77953 . -1092) (undo-tree-id77954 . -1092) (undo-tree-id77955 . -1092) (undo-tree-id77956 . -1092) (undo-tree-id77957 . -1092) (undo-tree-id77958 . -1092) (undo-tree-id77959 . -1092) (undo-tree-id77960 . -1092) (undo-tree-id77961 . -1092) (undo-tree-id77962 . -1092) (undo-tree-id77963 . -1092) (undo-tree-id77964 . -1092) (undo-tree-id77965 . -1092) (undo-tree-id77966 . -1092) (undo-tree-id77967 . -1092) (undo-tree-id77968 . -1092) (undo-tree-id77969 . -1092) (undo-tree-id77970 . -1092) (undo-tree-id77971 . -1092) (undo-tree-id77972 . -1092) (undo-tree-id77973 . -1092) (undo-tree-id77974 . -1092) (undo-tree-id77975 . -1092) (undo-tree-id77976 . -1092) (undo-tree-id77977 . -1092) (undo-tree-id77978 . -1092) (undo-tree-id77979 . -1092) (undo-tree-id77980 . -1092) (undo-tree-id77981 . -1092) (undo-tree-id77982 . -1092) (undo-tree-id77983 . -1092) (undo-tree-id77984 . -1092) (undo-tree-id77985 . -1224) (undo-tree-id77986 . -1224) (undo-tree-id77987 . -1224) (undo-tree-id77988 . -1224) (undo-tree-id77989 . -1224) (undo-tree-id77990 . -1224) (undo-tree-id77991 . -1224) (undo-tree-id77992 . -1224) (undo-tree-id77993 . -1224) (undo-tree-id77994 . -1224) (undo-tree-id77995 . -1224) (undo-tree-id77996 . -1224) (undo-tree-id77997 . -1224) (undo-tree-id77998 . -1224) (undo-tree-id77999 . -1224) (undo-tree-id78000 . -1224) (undo-tree-id78001 . -1225) (undo-tree-id78002 . -1225) (undo-tree-id78003 . -1225) (undo-tree-id78004 . -1225) (undo-tree-id78005 . -1225) (undo-tree-id78006 . -1225) (undo-tree-id78007 . -1225) (undo-tree-id78008 . -1225) (undo-tree-id78009 . -1225) (undo-tree-id78010 . -1225) (undo-tree-id78011 . -1225) (undo-tree-id78012 . -1225) (undo-tree-id78013 . -1225) (undo-tree-id78014 . -1225) (undo-tree-id78015 . -1225) (undo-tree-id78016 . -1225) (undo-tree-id78017 . -1225) (undo-tree-id78018 . -1225) (undo-tree-id78019 . -1225) (undo-tree-id78020 . -1225) (undo-tree-id78021 . -1225) (undo-tree-id78022 . -1225) (undo-tree-id78023 . -1225) (undo-tree-id78024 . -1225) (undo-tree-id78025 . -1090) (7701 . 8791) (#(" In the context of multi-head attention, we can think of this set of three matrices as one attention head. As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the" 0 29 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 29 30 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 30 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 36 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 39 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 54 132 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 132 133 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 133 215 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 215 221 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 221 227 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 227 232 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 232 233 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 233 234 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 234 238 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 238 242 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 242 243 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 243 249 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 249 278 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 278 281 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 281 289 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 289 305 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 305 306 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 306 406 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 406 407 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 407 432 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 432 433 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 433 543 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 543 544 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 544 633 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 633 646 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 646 647 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 647 701 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 701 702 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 702 703 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 703 704 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 704 705 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 705 706 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 706 727 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 727 728 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 728 749 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 749 750 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 750 754 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 754 755 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 755 777 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 777 778 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 778 875 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 875 876 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 876 989 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 989 990 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 990 1086 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1086 1087 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 7836) (t 25775 1035 380527 347000)) nil (25775 1048 403809 483000) 0 nil])
([nil nil ((7838 . 8929) (#("- As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the

- In the context of multi-head attention, we can think of this set of three matrices as one attention head." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 27 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 27 28 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 28 110 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 110 116 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 116 122 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 122 127 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 127 128 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 128 129 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 129 133 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 133 137 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 137 138 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 138 144 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 144 173 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 173 176 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 176 184 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 184 200 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 200 201 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 201 257 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 257 301 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 301 302 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 302 327 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 327 328 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 328 438 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 438 439 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 439 528 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 528 541 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 541 542 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 542 596 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 596 597 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 597 598 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 598 599 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 599 600 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 600 601 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 601 622 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 622 623 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 623 644 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 644 645 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 645 649 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 649 650 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 650 672 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 672 673 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 673 770 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 770 771 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 771 884 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 884 885 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 885 981 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 981 982 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 982 983 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 983 984 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 984 985 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 985 986 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 986 1014 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1014 1015 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1015 1021 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1021 1024 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1024 1039 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 1039 1091 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 7838) (undo-tree-id78026 . 105) (undo-tree-id78027 . -985) (undo-tree-id78028 . -1091) (undo-tree-id78029 . -985) (undo-tree-id78030 . -985) (undo-tree-id78031 . -985) (undo-tree-id78032 . -985) (undo-tree-id78033 . -985) (undo-tree-id78034 . -985) (undo-tree-id78035 . -985) (undo-tree-id78036 . -985) (undo-tree-id78037 . -985) (undo-tree-id78038 . -985) (undo-tree-id78039 . -985) (undo-tree-id78040 . -985) (undo-tree-id78041 . -985) (undo-tree-id78042 . -985) (undo-tree-id78043 . -985) (undo-tree-id78044 . -985) (undo-tree-id78045 . -985) (undo-tree-id78046 . -985) (undo-tree-id78047 . -985) (undo-tree-id78048 . -985) (undo-tree-id78049 . -985) (undo-tree-id78050 . -985) (undo-tree-id78051 . -985) (undo-tree-id78052 . -985) (undo-tree-id78053 . -985) (undo-tree-id78054 . -985) (undo-tree-id78055 . -985) (undo-tree-id78056 . -985) (undo-tree-id78057 . -985) (undo-tree-id78058 . -985) (undo-tree-id78059 . -985) (undo-tree-id78060 . -985) (undo-tree-id78061 . -985) (undo-tree-id78062 . -985) (undo-tree-id78063 . -985) (undo-tree-id78064 . -985) (undo-tree-id78065 . -985) (undo-tree-id78066 . -985) (undo-tree-id78067 . -985) (undo-tree-id78068 . -985) (undo-tree-id78069 . -985) (undo-tree-id78070 . -985) (undo-tree-id78071 . -985) (undo-tree-id78072 . -985) (undo-tree-id78073 . -985) (undo-tree-id78074 . -985) (undo-tree-id78075 . -985) (undo-tree-id78076 . -985) (undo-tree-id78077 . -985) (undo-tree-id78078 . -985) (undo-tree-id78079 . -985) (undo-tree-id78080 . -985) (undo-tree-id78081 . -985) (undo-tree-id78082 . -985) (undo-tree-id78083 . -985) (undo-tree-id78084 . -985) (undo-tree-id78085 . -985) (undo-tree-id78086 . -985) (undo-tree-id78087 . -985) (undo-tree-id78088 . -985) (undo-tree-id78089 . -985) (undo-tree-id78090 . -985) (undo-tree-id78091 . -985) (undo-tree-id78092 . -985) (undo-tree-id78093 . -985) (undo-tree-id78094 . -985) (undo-tree-id78095 . -985) (undo-tree-id78096 . -985) (undo-tree-id78097 . -985) (undo-tree-id78098 . -1090) (undo-tree-id78099 . -1090) (undo-tree-id78100 . -1090) (undo-tree-id78101 . -1090) (undo-tree-id78102 . -1090) (undo-tree-id78103 . -1090) (undo-tree-id78104 . -1090) (undo-tree-id78105 . -1090) (undo-tree-id78106 . -1090) (undo-tree-id78107 . -1090) (undo-tree-id78108 . -1090) (undo-tree-id78109 . -1090) (undo-tree-id78110 . -1090) (undo-tree-id78111 . -1090) (undo-tree-id78112 . -1090) (undo-tree-id78113 . -1090) (undo-tree-id78114 . -1091) (undo-tree-id78115 . -1091) (undo-tree-id78116 . -1091) (undo-tree-id78117 . -1091) (undo-tree-id78118 . -1091) (undo-tree-id78119 . -1091) (undo-tree-id78120 . -1091) (undo-tree-id78121 . -1091) (undo-tree-id78122 . -1091) (undo-tree-id78123 . -1091) (undo-tree-id78124 . -1091) (undo-tree-id78125 . -1091) (undo-tree-id78126 . -1091) (undo-tree-id78127 . -1091) (undo-tree-id78128 . -1091) (undo-tree-id78129 . -1091) (undo-tree-id78130 . -1091) (undo-tree-id78131 . -1091) (undo-tree-id78132 . -1091) (undo-tree-id78133 . -1091) (undo-tree-id78134 . -1091) (undo-tree-id78135 . -1091) (undo-tree-id78136 . -1091) (undo-tree-id78137 . -1091) (undo-tree-id78138 . -1091) (undo-tree-id78139 . -1091) (undo-tree-id78140 . -1091) (undo-tree-id78141 . -1091) (undo-tree-id78142 . -1091) (undo-tree-id78143 . -984) (7838 . 8822) (#(" As indicated by its name, in multi-head attention, we now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels. To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the" 0 26 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 26 27 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 27 109 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 109 115 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 115 121 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 121 126 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 126 127 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 127 128 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 128 132 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 132 136 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 136 137 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 137 143 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 143 172 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 172 175 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 175 183 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 183 199 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 199 200 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 200 256 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 256 300 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 300 301 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 301 326 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 326 327 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 327 437 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 437 438 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 438 527 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 527 540 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 540 541 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 541 595 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 595 596 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 596 597 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 597 598 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 598 599 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 599 600 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 600 621 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 621 622 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 622 643 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 643 644 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 644 648 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 648 649 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 649 671 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 671 672 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 672 769 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 769 770 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 770 883 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 883 884 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 884 980 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 980 981 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 7945) (t 25775 1048 496743 892000)) nil (25775 1057 95099 651000) 0 nil])
([nil nil ((#("As indicated by its name" 0 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7949) (undo-tree-id78938 . 24) (undo-tree-id78939 . -23) (undo-tree-id78940 . -24) (t 25775 1057 172887 83000)) nil (25775 1091 402003 571000) 0 nil])
([nil nil ((#(", in multi-head attention" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 25 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7949) (undo-tree-id78935 . 25) (undo-tree-id78936 . -24) (undo-tree-id78937 . -25)) nil (25775 1091 402000 716000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7949) (undo-tree-id78932 . 2) (undo-tree-id78933 . -1) (undo-tree-id78934 . -2)) nil (25775 1091 401997 588000) 0 nil])
([nil nil ((7949 . 7950) (#("w" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 7949)) nil (25775 1091 401994 239000) 0 nil])
([nil nil ((7947 . 8881) (#("- To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the

- We now have multiple of such heads (sets of query, value, and key matrices) similar to how convolutional neural networks can have multiple kernels." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 58 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 58 102 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 102 103 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 103 128 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 128 129 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 129 192 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 192 239 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 239 240 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 240 325 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 325 329 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 329 342 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 342 343 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 343 350 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 350 352 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 352 397 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 397 398 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 398 399 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 399 400 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 400 401 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 401 402 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 402 423 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 423 424 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 424 445 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 445 446 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 446 450 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 450 451 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 451 473 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 473 474 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 474 571 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 571 572 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 572 685 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 685 686 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 686 782 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 782 783 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 783 784 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 784 785 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 785 786 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 786 787 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 787 844 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 844 850 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 850 856 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 856 861 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 861 862 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 862 863 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 863 867 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 867 871 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 871 872 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 872 878 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 878 907 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 907 910 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 910 918 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 918 934 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 7947) (undo-tree-id78144 . 147) (undo-tree-id78145 . -787) (undo-tree-id78146 . -787) (undo-tree-id78147 . -787) (undo-tree-id78148 . -787) (undo-tree-id78149 . 146) (undo-tree-id78150 . -787) (undo-tree-id78151 . -787) (undo-tree-id78152 . -786) (undo-tree-id78153 . -934) (undo-tree-id78154 . -786) (undo-tree-id78155 . -786) (undo-tree-id78156 . -786) (undo-tree-id78157 . -786) (undo-tree-id78158 . -786) (undo-tree-id78159 . -786) (undo-tree-id78160 . -786) (undo-tree-id78161 . -786) (undo-tree-id78162 . -786) (undo-tree-id78163 . -786) (undo-tree-id78164 . -786) (undo-tree-id78165 . -786) (undo-tree-id78166 . -786) (undo-tree-id78167 . -786) (undo-tree-id78168 . -786) (undo-tree-id78169 . -786) (undo-tree-id78170 . -786) (undo-tree-id78171 . -786) (undo-tree-id78172 . -786) (undo-tree-id78173 . -786) (undo-tree-id78174 . -786) (undo-tree-id78175 . -786) (undo-tree-id78176 . -786) (undo-tree-id78177 . -786) (undo-tree-id78178 . -786) (undo-tree-id78179 . -786) (undo-tree-id78180 . -786) (undo-tree-id78181 . -786) (undo-tree-id78182 . -786) (undo-tree-id78183 . -786) (undo-tree-id78184 . -786) (undo-tree-id78185 . -786) (undo-tree-id78186 . -786) (undo-tree-id78187 . -786) (undo-tree-id78188 . -786) (undo-tree-id78189 . -786) (undo-tree-id78190 . -786) (undo-tree-id78191 . -786) (undo-tree-id78192 . -786) (undo-tree-id78193 . -786) (undo-tree-id78194 . -786) (undo-tree-id78195 . -786) (undo-tree-id78196 . -786) (undo-tree-id78197 . -786) (undo-tree-id78198 . -786) (undo-tree-id78199 . -786) (undo-tree-id78200 . -786) (undo-tree-id78201 . -786) (undo-tree-id78202 . -786) (undo-tree-id78203 . -786) (undo-tree-id78204 . -786) (undo-tree-id78205 . -786) (undo-tree-id78206 . -786) (undo-tree-id78207 . -786) (undo-tree-id78208 . -786) (undo-tree-id78209 . -786) (undo-tree-id78210 . -786) (undo-tree-id78211 . -786) (undo-tree-id78212 . -786) (undo-tree-id78213 . -786) (undo-tree-id78214 . -786) (undo-tree-id78215 . -786) (undo-tree-id78216 . -786) (undo-tree-id78217 . -786) (undo-tree-id78218 . -787) (undo-tree-id78219 . -787) (undo-tree-id78220 . -787) (undo-tree-id78221 . -787) (undo-tree-id78222 . -787) (undo-tree-id78223 . -787) (undo-tree-id78224 . -787) (undo-tree-id78225 . -787) (undo-tree-id78226 . -787) (undo-tree-id78227 . -787) (undo-tree-id78228 . -787) (undo-tree-id78229 . -787) (undo-tree-id78230 . -787) (undo-tree-id78231 . -787) (undo-tree-id78232 . -787) (undo-tree-id78233 . -787) (undo-tree-id78234 . -787) (undo-tree-id78235 . -787) (undo-tree-id78236 . -787) (undo-tree-id78237 . -787) (undo-tree-id78238 . -787) (undo-tree-id78239 . -787) (undo-tree-id78240 . -787) (undo-tree-id78241 . -787) (undo-tree-id78242 . -787) (undo-tree-id78243 . -787) (undo-tree-id78244 . -787) (undo-tree-id78245 . -787) (undo-tree-id78246 . -787) (undo-tree-id78247 . -787) (undo-tree-id78248 . -787) (undo-tree-id78249 . -787) (undo-tree-id78250 . -787) (undo-tree-id78251 . -787) (undo-tree-id78252 . -787) (undo-tree-id78253 . -787) (undo-tree-id78254 . -787) (undo-tree-id78255 . -787) (undo-tree-id78256 . -787) (undo-tree-id78257 . -787) (undo-tree-id78258 . -787) (undo-tree-id78259 . -787) (undo-tree-id78260 . -787) (undo-tree-id78261 . -787) (undo-tree-id78262 . -787) (undo-tree-id78263 . -787) (undo-tree-id78264 . -787) (undo-tree-id78265 . -787) (undo-tree-id78266 . -787) (undo-tree-id78267 . -787) (undo-tree-id78268 . -787) (undo-tree-id78269 . -787) (undo-tree-id78270 . -787) (undo-tree-id78271 . -787) (undo-tree-id78272 . -787) (undo-tree-id78273 . -787) (undo-tree-id78274 . -787) (undo-tree-id78275 . -787) (undo-tree-id78276 . -787) (undo-tree-id78277 . -787) (undo-tree-id78278 . -787) (undo-tree-id78279 . -787) (undo-tree-id78280 . -787) (undo-tree-id78281 . -787) (undo-tree-id78282 . -787) (undo-tree-id78283 . -787) (undo-tree-id78284 . -787) (undo-tree-id78285 . -787) (undo-tree-id78286 . -787) (undo-tree-id78287 . -787) (undo-tree-id78288 . -787) (undo-tree-id78289 . -787) (undo-tree-id78290 . -787) (undo-tree-id78291 . -787) (undo-tree-id78292 . -787) (undo-tree-id78293 . -787) (undo-tree-id78294 . -787) (undo-tree-id78295 . -787) (undo-tree-id78296 . -787) (undo-tree-id78297 . -787) (undo-tree-id78298 . -787) (undo-tree-id78299 . -787) (undo-tree-id78300 . -787) (undo-tree-id78301 . -787) (undo-tree-id78302 . -787) (undo-tree-id78303 . -787) (undo-tree-id78304 . -787) (undo-tree-id78305 . -787) (undo-tree-id78306 . -787) (undo-tree-id78307 . -787) (undo-tree-id78308 . -787) (undo-tree-id78309 . -787) (undo-tree-id78310 . -787) (undo-tree-id78311 . -787) (undo-tree-id78312 . -787) (undo-tree-id78313 . -787) (undo-tree-id78314 . -787) (undo-tree-id78315 . -787) (undo-tree-id78316 . -787) (undo-tree-id78317 . -787) (undo-tree-id78318 . -787) (undo-tree-id78319 . -787) (undo-tree-id78320 . -787) (undo-tree-id78321 . -787) (undo-tree-id78322 . -787) (undo-tree-id78323 . -787) (undo-tree-id78324 . -787) (undo-tree-id78325 . -787) (undo-tree-id78326 . -787) (undo-tree-id78327 . -787) (undo-tree-id78328 . -787) (undo-tree-id78329 . -787) (undo-tree-id78330 . -787) (undo-tree-id78331 . -787) (undo-tree-id78332 . -787) (undo-tree-id78333 . -787) (undo-tree-id78334 . -787) (undo-tree-id78335 . -787) (undo-tree-id78336 . -787) (undo-tree-id78337 . -787) (undo-tree-id78338 . -787) (undo-tree-id78339 . -787) (undo-tree-id78340 . -787) (undo-tree-id78341 . -787) (undo-tree-id78342 . -787) (undo-tree-id78343 . -787) (undo-tree-id78344 . -787) (undo-tree-id78345 . -787) (undo-tree-id78346 . -787) (undo-tree-id78347 . -787) (undo-tree-id78348 . -787) (undo-tree-id78349 . -787) (undo-tree-id78350 . -787) (undo-tree-id78351 . -787) (undo-tree-id78352 . -787) (undo-tree-id78353 . -787) (undo-tree-id78354 . -787) (undo-tree-id78355 . -787) (undo-tree-id78356 . -787) (undo-tree-id78357 . -787) (undo-tree-id78358 . -787) (undo-tree-id78359 . -787) (undo-tree-id78360 . -787) (undo-tree-id78361 . -787) (undo-tree-id78362 . -787) (undo-tree-id78363 . -787) (undo-tree-id78364 . -787) (undo-tree-id78365 . -787) (undo-tree-id78366 . -787) (undo-tree-id78367 . -787) (undo-tree-id78368 . -787) (undo-tree-id78369 . -787) (undo-tree-id78370 . -787) (undo-tree-id78371 . -787) (undo-tree-id78372 . -787) (undo-tree-id78373 . -787) (undo-tree-id78374 . -787) (undo-tree-id78375 . -787) (undo-tree-id78376 . -787) (undo-tree-id78377 . -787) (undo-tree-id78378 . -787) (undo-tree-id78379 . -787) (undo-tree-id78380 . -787) (undo-tree-id78381 . -787) (undo-tree-id78382 . -787) (undo-tree-id78383 . -787) (undo-tree-id78384 . -787) (undo-tree-id78385 . -787) (undo-tree-id78386 . -787) (undo-tree-id78387 . -787) (undo-tree-id78388 . -787) (undo-tree-id78389 . -787) (undo-tree-id78390 . -787) (undo-tree-id78391 . -787) (undo-tree-id78392 . -787) (undo-tree-id78393 . -787) (undo-tree-id78394 . -787) (undo-tree-id78395 . -787) (undo-tree-id78396 . -787) (undo-tree-id78397 . -787) (undo-tree-id78398 . -787) (undo-tree-id78399 . -787) (undo-tree-id78400 . -787) (undo-tree-id78401 . -787) (undo-tree-id78402 . -787) (undo-tree-id78403 . -787) (undo-tree-id78404 . -787) (undo-tree-id78405 . -787) (undo-tree-id78406 . -787) (undo-tree-id78407 . -787) (undo-tree-id78408 . -787) (undo-tree-id78409 . -787) (undo-tree-id78410 . -787) (undo-tree-id78411 . -788) (undo-tree-id78412 . -788) (undo-tree-id78413 . -788) (undo-tree-id78414 . -788) (undo-tree-id78415 . -788) (undo-tree-id78416 . -788) (undo-tree-id78417 . -788) (undo-tree-id78418 . -788) (undo-tree-id78419 . -788) (undo-tree-id78420 . -788) (undo-tree-id78421 . -788) (undo-tree-id78422 . -788) (undo-tree-id78423 . -788) (undo-tree-id78424 . -788) (undo-tree-id78425 . -788) (undo-tree-id78426 . -788) (undo-tree-id78427 . -792) (undo-tree-id78428 . -792) (undo-tree-id78429 . -792) (undo-tree-id78430 . -792) (undo-tree-id78431 . -792) (undo-tree-id78432 . -792) (undo-tree-id78433 . -792) (undo-tree-id78434 . -792) (undo-tree-id78435 . -792) (undo-tree-id78436 . -792) (undo-tree-id78437 . -792) (undo-tree-id78438 . -792) (undo-tree-id78439 . -792) (undo-tree-id78440 . -792) (undo-tree-id78441 . -792) (undo-tree-id78442 . -792) (undo-tree-id78443 . -792) (undo-tree-id78444 . -792) (undo-tree-id78445 . -792) (undo-tree-id78446 . -792) (undo-tree-id78447 . -792) (undo-tree-id78448 . -792) (undo-tree-id78449 . -792) (undo-tree-id78450 . -792) (undo-tree-id78451 . -792) (undo-tree-id78452 . -792) (undo-tree-id78453 . -792) (undo-tree-id78454 . -792) (undo-tree-id78455 . -792) (undo-tree-id78456 . -792) (undo-tree-id78457 . -792) (undo-tree-id78458 . -797) (undo-tree-id78459 . -797) (undo-tree-id78460 . -797) (undo-tree-id78461 . -797) (undo-tree-id78462 . -797) (undo-tree-id78463 . -797) (undo-tree-id78464 . -797) (undo-tree-id78465 . -797) (undo-tree-id78466 . -797) (undo-tree-id78467 . -797) (undo-tree-id78468 . -797) (undo-tree-id78469 . -797) (undo-tree-id78470 . -797) (undo-tree-id78471 . -797) (undo-tree-id78472 . -797) (undo-tree-id78473 . -797) (undo-tree-id78474 . -806) (undo-tree-id78475 . -806) (undo-tree-id78476 . -806) (undo-tree-id78477 . -806) (undo-tree-id78478 . -806) (undo-tree-id78479 . -806) (undo-tree-id78480 . -806) (undo-tree-id78481 . -806) (undo-tree-id78482 . -806) (undo-tree-id78483 . -806) (undo-tree-id78484 . -806) (undo-tree-id78485 . -806) (undo-tree-id78486 . -806) (undo-tree-id78487 . -806) (undo-tree-id78488 . -806) (undo-tree-id78489 . -806) (undo-tree-id78490 . -809) (undo-tree-id78491 . -809) (undo-tree-id78492 . -809) (undo-tree-id78493 . -809) (undo-tree-id78494 . -809) (undo-tree-id78495 . -809) (undo-tree-id78496 . -809) (undo-tree-id78497 . -809) (undo-tree-id78498 . -809) (undo-tree-id78499 . -809) (undo-tree-id78500 . -809) (undo-tree-id78501 . -809) (undo-tree-id78502 . -809) (undo-tree-id78503 . -809) (undo-tree-id78504 . -809) (undo-tree-id78505 . -809) (undo-tree-id78506 . -809) (undo-tree-id78507 . -809) (undo-tree-id78508 . -809) (undo-tree-id78509 . -809) (undo-tree-id78510 . -809) (undo-tree-id78511 . -814) (undo-tree-id78512 . -814) (undo-tree-id78513 . -814) (undo-tree-id78514 . -814) (undo-tree-id78515 . -814) (undo-tree-id78516 . -814) (undo-tree-id78517 . -814) (undo-tree-id78518 . -814) (undo-tree-id78519 . -814) (undo-tree-id78520 . -814) (undo-tree-id78521 . -814) (undo-tree-id78522 . -814) (undo-tree-id78523 . -814) (undo-tree-id78524 . -814) (undo-tree-id78525 . -814) (undo-tree-id78526 . -814) (undo-tree-id78527 . -820) (undo-tree-id78528 . -820) (undo-tree-id78529 . -820) (undo-tree-id78530 . -820) (undo-tree-id78531 . -820) (undo-tree-id78532 . -820) (undo-tree-id78533 . -820) (undo-tree-id78534 . -820) (undo-tree-id78535 . -820) (undo-tree-id78536 . -820) (undo-tree-id78537 . -820) (undo-tree-id78538 . -820) (undo-tree-id78539 . -820) (undo-tree-id78540 . -820) (undo-tree-id78541 . -820) (undo-tree-id78542 . -820) (undo-tree-id78543 . -822) (undo-tree-id78544 . -822) (undo-tree-id78545 . -822) (undo-tree-id78546 . -822) (undo-tree-id78547 . -822) (undo-tree-id78548 . -822) (undo-tree-id78549 . -822) (undo-tree-id78550 . -822) (undo-tree-id78551 . -822) (undo-tree-id78552 . -822) (undo-tree-id78553 . -822) (undo-tree-id78554 . -822) (undo-tree-id78555 . -822) (undo-tree-id78556 . -822) (undo-tree-id78557 . -822) (undo-tree-id78558 . -822) (undo-tree-id78559 . -826) (undo-tree-id78560 . -826) (undo-tree-id78561 . -826) (undo-tree-id78562 . -826) (undo-tree-id78563 . -826) (undo-tree-id78564 . -826) (undo-tree-id78565 . -826) (undo-tree-id78566 . -826) (undo-tree-id78567 . -826) (undo-tree-id78568 . -826) (undo-tree-id78569 . -826) (undo-tree-id78570 . -826) (undo-tree-id78571 . -826) (undo-tree-id78572 . -826) (undo-tree-id78573 . -826) (undo-tree-id78574 . -826) (undo-tree-id78575 . -829) (undo-tree-id78576 . -829) (undo-tree-id78577 . -829) (undo-tree-id78578 . -829) (undo-tree-id78579 . -829) (undo-tree-id78580 . -829) (undo-tree-id78581 . -829) (undo-tree-id78582 . -829) (undo-tree-id78583 . -829) (undo-tree-id78584 . -829) (undo-tree-id78585 . -829) (undo-tree-id78586 . -829) (undo-tree-id78587 . -829) (undo-tree-id78588 . -829) (undo-tree-id78589 . -829) (undo-tree-id78590 . -829) (undo-tree-id78591 . -835) (undo-tree-id78592 . -835) (undo-tree-id78593 . -835) (undo-tree-id78594 . -835) (undo-tree-id78595 . -835) (undo-tree-id78596 . -835) (undo-tree-id78597 . -835) (undo-tree-id78598 . -835) (undo-tree-id78599 . -835) (undo-tree-id78600 . -835) (undo-tree-id78601 . -835) (undo-tree-id78602 . -835) (undo-tree-id78603 . -835) (undo-tree-id78604 . -835) (undo-tree-id78605 . -835) (undo-tree-id78606 . -835) (undo-tree-id78607 . -836) (undo-tree-id78608 . -836) (undo-tree-id78609 . -836) (undo-tree-id78610 . -836) (undo-tree-id78611 . -836) (undo-tree-id78612 . -836) (undo-tree-id78613 . -836) (undo-tree-id78614 . -836) (undo-tree-id78615 . -836) (undo-tree-id78616 . -836) (undo-tree-id78617 . -836) (undo-tree-id78618 . -836) (undo-tree-id78619 . -836) (undo-tree-id78620 . -836) (undo-tree-id78621 . -836) (undo-tree-id78622 . -836) (undo-tree-id78623 . -836) (undo-tree-id78624 . -836) (undo-tree-id78625 . -836) (undo-tree-id78626 . -836) (undo-tree-id78627 . -836) (undo-tree-id78628 . -842) (undo-tree-id78629 . -842) (undo-tree-id78630 . -842) (undo-tree-id78631 . -842) (undo-tree-id78632 . -842) (undo-tree-id78633 . -842) (undo-tree-id78634 . -842) (undo-tree-id78635 . -842) (undo-tree-id78636 . -842) (undo-tree-id78637 . -842) (undo-tree-id78638 . -842) (undo-tree-id78639 . -842) (undo-tree-id78640 . -842) (undo-tree-id78641 . -842) (undo-tree-id78642 . -842) (undo-tree-id78643 . -842) (undo-tree-id78644 . -843) (undo-tree-id78645 . -843) (undo-tree-id78646 . -843) (undo-tree-id78647 . -843) (undo-tree-id78648 . -843) (undo-tree-id78649 . -843) (undo-tree-id78650 . -843) (undo-tree-id78651 . -843) (undo-tree-id78652 . -843) (undo-tree-id78653 . -843) (undo-tree-id78654 . -843) (undo-tree-id78655 . -843) (undo-tree-id78656 . -843) (undo-tree-id78657 . -843) (undo-tree-id78658 . -843) (undo-tree-id78659 . -843) (undo-tree-id78660 . -847) (undo-tree-id78661 . -847) (undo-tree-id78662 . -847) (undo-tree-id78663 . -847) (undo-tree-id78664 . -847) (undo-tree-id78665 . -847) (undo-tree-id78666 . -847) (undo-tree-id78667 . -847) (undo-tree-id78668 . -847) (undo-tree-id78669 . -847) (undo-tree-id78670 . -847) (undo-tree-id78671 . -847) (undo-tree-id78672 . -847) (undo-tree-id78673 . -847) (undo-tree-id78674 . -847) (undo-tree-id78675 . -847) (undo-tree-id78676 . -851) (undo-tree-id78677 . -851) (undo-tree-id78678 . -851) (undo-tree-id78679 . -851) (undo-tree-id78680 . -851) (undo-tree-id78681 . -851) (undo-tree-id78682 . -851) (undo-tree-id78683 . -851) (undo-tree-id78684 . -851) (undo-tree-id78685 . -851) (undo-tree-id78686 . -851) (undo-tree-id78687 . -851) (undo-tree-id78688 . -851) (undo-tree-id78689 . -851) (undo-tree-id78690 . -851) (undo-tree-id78691 . -851) (undo-tree-id78692 . -851) (undo-tree-id78693 . -851) (undo-tree-id78694 . -851) (undo-tree-id78695 . -851) (undo-tree-id78696 . -851) (undo-tree-id78697 . -860) (undo-tree-id78698 . -860) (undo-tree-id78699 . -860) (undo-tree-id78700 . -860) (undo-tree-id78701 . -860) (undo-tree-id78702 . -860) (undo-tree-id78703 . -860) (undo-tree-id78704 . -860) (undo-tree-id78705 . -860) (undo-tree-id78706 . -860) (undo-tree-id78707 . -860) (undo-tree-id78708 . -860) (undo-tree-id78709 . -860) (undo-tree-id78710 . -860) (undo-tree-id78711 . -860) (undo-tree-id78712 . -860) (undo-tree-id78713 . -861) (undo-tree-id78714 . -861) (undo-tree-id78715 . -861) (undo-tree-id78716 . -861) (undo-tree-id78717 . -861) (undo-tree-id78718 . -861) (undo-tree-id78719 . -861) (undo-tree-id78720 . -861) (undo-tree-id78721 . -861) (undo-tree-id78722 . -861) (undo-tree-id78723 . -861) (undo-tree-id78724 . -861) (undo-tree-id78725 . -861) (undo-tree-id78726 . -861) (undo-tree-id78727 . -861) (undo-tree-id78728 . -861) (undo-tree-id78729 . -869) (undo-tree-id78730 . -869) (undo-tree-id78731 . -869) (undo-tree-id78732 . -869) (undo-tree-id78733 . -869) (undo-tree-id78734 . -869) (undo-tree-id78735 . -869) (undo-tree-id78736 . -869) (undo-tree-id78737 . -869) (undo-tree-id78738 . -869) (undo-tree-id78739 . -869) (undo-tree-id78740 . -869) (undo-tree-id78741 . -869) (undo-tree-id78742 . -869) (undo-tree-id78743 . -869) (undo-tree-id78744 . -869) (undo-tree-id78745 . -872) (undo-tree-id78746 . -872) (undo-tree-id78747 . -872) (undo-tree-id78748 . -872) (undo-tree-id78749 . -872) (undo-tree-id78750 . -872) (undo-tree-id78751 . -872) (undo-tree-id78752 . -872) (undo-tree-id78753 . -872) (undo-tree-id78754 . -872) (undo-tree-id78755 . -872) (undo-tree-id78756 . -872) (undo-tree-id78757 . -872) (undo-tree-id78758 . -872) (undo-tree-id78759 . -872) (undo-tree-id78760 . -872) (undo-tree-id78761 . -876) (undo-tree-id78762 . -876) (undo-tree-id78763 . -876) (undo-tree-id78764 . -876) (undo-tree-id78765 . -876) (undo-tree-id78766 . -876) (undo-tree-id78767 . -876) (undo-tree-id78768 . -876) (undo-tree-id78769 . -876) (undo-tree-id78770 . -876) (undo-tree-id78771 . -876) (undo-tree-id78772 . -876) (undo-tree-id78773 . -876) (undo-tree-id78774 . -876) (undo-tree-id78775 . -876) (undo-tree-id78776 . -876) (undo-tree-id78777 . 56) (undo-tree-id78778 . -891) (undo-tree-id78779 . -890) (undo-tree-id78780 . -890) (undo-tree-id78781 . -890) (undo-tree-id78782 . -890) (undo-tree-id78783 . -890) (undo-tree-id78784 . -890) (undo-tree-id78785 . -890) (undo-tree-id78786 . -890) (undo-tree-id78787 . -890) (undo-tree-id78788 . -890) (undo-tree-id78789 . -890) (undo-tree-id78790 . -890) (undo-tree-id78791 . -890) (undo-tree-id78792 . -890) (undo-tree-id78793 . -890) (undo-tree-id78794 . -890) (undo-tree-id78795 . -897) (undo-tree-id78796 . -897) (undo-tree-id78797 . -897) (undo-tree-id78798 . -897) (undo-tree-id78799 . -897) (undo-tree-id78800 . -897) (undo-tree-id78801 . -897) (undo-tree-id78802 . -897) (undo-tree-id78803 . -897) (undo-tree-id78804 . -897) (undo-tree-id78805 . -897) (undo-tree-id78806 . -897) (undo-tree-id78807 . -897) (undo-tree-id78808 . -897) (undo-tree-id78809 . -897) (undo-tree-id78810 . -897) (undo-tree-id78811 . -906) (undo-tree-id78812 . -906) (undo-tree-id78813 . -906) (undo-tree-id78814 . -906) (undo-tree-id78815 . -906) (undo-tree-id78816 . -906) (undo-tree-id78817 . -906) (undo-tree-id78818 . -906) (undo-tree-id78819 . -906) (undo-tree-id78820 . -906) (undo-tree-id78821 . -906) (undo-tree-id78822 . -906) (undo-tree-id78823 . -906) (undo-tree-id78824 . -906) (undo-tree-id78825 . -906) (undo-tree-id78826 . -906) (undo-tree-id78827 . -910) (undo-tree-id78828 . -910) (undo-tree-id78829 . -910) (undo-tree-id78830 . -910) (undo-tree-id78831 . -910) (undo-tree-id78832 . -910) (undo-tree-id78833 . -910) (undo-tree-id78834 . -910) (undo-tree-id78835 . -910) (undo-tree-id78836 . -910) (undo-tree-id78837 . -910) (undo-tree-id78838 . -910) (undo-tree-id78839 . -910) (undo-tree-id78840 . -910) (undo-tree-id78841 . -910) (undo-tree-id78842 . -910) (undo-tree-id78843 . -915) (undo-tree-id78844 . -915) (undo-tree-id78845 . -915) (undo-tree-id78846 . -915) (undo-tree-id78847 . -915) (undo-tree-id78848 . -915) (undo-tree-id78849 . -915) (undo-tree-id78850 . -915) (undo-tree-id78851 . -915) (undo-tree-id78852 . -915) (undo-tree-id78853 . -915) (undo-tree-id78854 . -915) (undo-tree-id78855 . -915) (undo-tree-id78856 . -915) (undo-tree-id78857 . -915) (undo-tree-id78858 . -915) (undo-tree-id78859 . -924) (undo-tree-id78860 . -924) (undo-tree-id78861 . -924) (undo-tree-id78862 . -924) (undo-tree-id78863 . -924) (undo-tree-id78864 . -924) (undo-tree-id78865 . -924) (undo-tree-id78866 . -924) (undo-tree-id78867 . -924) (undo-tree-id78868 . -924) (undo-tree-id78869 . -924) (undo-tree-id78870 . -924) (undo-tree-id78871 . -924) (undo-tree-id78872 . -924) (undo-tree-id78873 . -924) (undo-tree-id78874 . -924) (undo-tree-id78875 . -932) (undo-tree-id78876 . -932) (undo-tree-id78877 . -932) (undo-tree-id78878 . -932) (undo-tree-id78879 . -932) (undo-tree-id78880 . -932) (undo-tree-id78881 . -932) (undo-tree-id78882 . -932) (undo-tree-id78883 . -932) (undo-tree-id78884 . -932) (undo-tree-id78885 . -932) (undo-tree-id78886 . -932) (undo-tree-id78887 . -932) (undo-tree-id78888 . -932) (undo-tree-id78889 . -932) (undo-tree-id78890 . -932) (undo-tree-id78891 . -933) (undo-tree-id78892 . -933) (undo-tree-id78893 . -933) (undo-tree-id78894 . -933) (undo-tree-id78895 . -933) (undo-tree-id78896 . -933) (undo-tree-id78897 . -933) (undo-tree-id78898 . -933) (undo-tree-id78899 . -933) (undo-tree-id78900 . -933) (undo-tree-id78901 . -933) (undo-tree-id78902 . -933) (undo-tree-id78903 . -933) (undo-tree-id78904 . -933) (undo-tree-id78905 . -933) (undo-tree-id78906 . -933) (undo-tree-id78907 . -934) (undo-tree-id78908 . -934) (undo-tree-id78909 . -934) (undo-tree-id78910 . -934) (undo-tree-id78911 . -934) (undo-tree-id78912 . -934) (undo-tree-id78913 . -934) (undo-tree-id78914 . -934) (undo-tree-id78915 . -934) (undo-tree-id78916 . -934) (undo-tree-id78917 . -934) (undo-tree-id78918 . -934) (undo-tree-id78919 . -934) (undo-tree-id78920 . -934) (undo-tree-id78921 . -934) (undo-tree-id78922 . -934) (undo-tree-id78923 . -934) (undo-tree-id78924 . -934) (undo-tree-id78925 . -934) (undo-tree-id78926 . -934) (undo-tree-id78927 . -934) (undo-tree-id78928 . -934) (undo-tree-id78929 . -934) (undo-tree-id78930 . -934) (undo-tree-id78931 . -785) (7947 . 8732) (#(" To explain the concept of multi-head self-attention with ℎ heads in more detail, let’s break it down into the following steps. First, we read in the sequential input 𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) ). Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 1 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 57 101 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 101 102 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 102 127 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 127 128 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 128 191 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 191 238 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 238 239 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 239 324 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 324 328 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 328 341 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 341 342 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 342 349 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 349 351 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 351 396 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 396 397 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 397 398 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 398 399 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 399 400 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 400 401 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 401 422 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 422 423 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 423 444 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 444 445 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 445 449 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 449 450 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 450 472 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 472 473 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 473 570 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 570 571 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 571 684 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 684 685 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 685 781 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 781 782 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 8096)) nil (25775 1091 401963 905000) 0 nil])
([nil nil ((#("To explain the concept of multi-head self-attention with ℎ heads in more detail" 0 56 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 56 79 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 8100) (undo-tree-id78950 . 79) (undo-tree-id78951 . -78) (undo-tree-id78952 . -1) (undo-tree-id78953 . -1) (undo-tree-id78954 . -1) (undo-tree-id78955 . -1) (undo-tree-id78956 . -1) (undo-tree-id78957 . -1) (undo-tree-id78958 . -1) (undo-tree-id78959 . -1) (undo-tree-id78960 . -1) (undo-tree-id78961 . -1) (undo-tree-id78962 . -1) (undo-tree-id78963 . -1) (undo-tree-id78964 . -1) (undo-tree-id78965 . -1) (undo-tree-id78966 . -1) (undo-tree-id78967 . -1) (undo-tree-id78968 . -1) (undo-tree-id78969 . -1) (undo-tree-id78970 . -1) (undo-tree-id78971 . -1) (undo-tree-id78972 . -1) (undo-tree-id78973 . -1) (undo-tree-id78974 . -1) (undo-tree-id78975 . -1) (undo-tree-id78976 . -1) (undo-tree-id78977 . -1) (undo-tree-id78978 . -1) (undo-tree-id78979 . -1) (undo-tree-id78980 . -1) (undo-tree-id78981 . -1) (undo-tree-id78982 . -1) (undo-tree-id78983 . -1) (undo-tree-id78984 . -1) (undo-tree-id78985 . -1) (undo-tree-id78986 . -1) (undo-tree-id78987 . -1) (undo-tree-id78988 . -79) (t 25775 1091 481452 937000)) nil (25775 1116 655828 752000) 0 nil])
([nil nil ((#(", " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 8100) (undo-tree-id78947 . 2) (undo-tree-id78948 . -1) (undo-tree-id78949 . -2)) nil (25775 1116 655020 649000) 0 nil])
([nil nil ((#("let’s break it down into the following steps" 0 19 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 19 20 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 20 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 8100) (undo-tree-id78944 . 44) (undo-tree-id78945 . -43) (undo-tree-id78946 . -44)) nil (25775 1116 655012 345000) 0 nil])
([nil nil ((#(". " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 8100) (undo-tree-id78941 . 2) (undo-tree-id78942 . -1) (undo-tree-id78943 . -2)) nil (25775 1116 655004 654000) 0 nil])
([nil nil ((#("𝑿𝑿 𝑿 𝑿𝑿𝑿(1) , 𝒙𝒙(2) , … , 𝒙𝒙(𝑇𝑇) )" 0 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 24 34 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 8139) (undo-tree-id79454 . -33) (undo-tree-id79455 . -34) (t 25775 1116 737869 132000)) nil (25775 1129 234833 629000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 8138) (undo-tree-id79371 . -1) (undo-tree-id79372 . -1) (undo-tree-id79373 . -1) (undo-tree-id79374 . -1) (undo-tree-id79375 . -1) (undo-tree-id79376 . -1) (undo-tree-id79377 . -1) (undo-tree-id79378 . -1) (undo-tree-id79379 . -1) (undo-tree-id79380 . -1) (undo-tree-id79381 . -1) (undo-tree-id79382 . -1) (undo-tree-id79383 . -1) (undo-tree-id79384 . -1) (undo-tree-id79385 . -1) (undo-tree-id79386 . -1) (undo-tree-id79387 . -1) (undo-tree-id79388 . -1) (undo-tree-id79389 . -1) (undo-tree-id79390 . -1) (undo-tree-id79391 . -1) (undo-tree-id79392 . -1) (undo-tree-id79393 . -1) (undo-tree-id79394 . -1) (undo-tree-id79395 . -1) (undo-tree-id79396 . -1) (undo-tree-id79397 . -1) (undo-tree-id79398 . -1) (undo-tree-id79399 . -1) (undo-tree-id79400 . -1) (undo-tree-id79401 . -1) (undo-tree-id79402 . -1) (undo-tree-id79403 . -1) (undo-tree-id79404 . -1) (undo-tree-id79405 . -1) (undo-tree-id79406 . -1) (undo-tree-id79407 . -1) (undo-tree-id79408 . -1) (undo-tree-id79409 . -1) (undo-tree-id79410 . -1) (undo-tree-id79411 . -1) (undo-tree-id79412 . -1) (undo-tree-id79413 . -1) (undo-tree-id79414 . -1) (undo-tree-id79415 . -1) (undo-tree-id79416 . -1) (undo-tree-id79417 . -1) (undo-tree-id79418 . -1) (undo-tree-id79419 . -1) (undo-tree-id79420 . -1) (undo-tree-id79421 . -1) (undo-tree-id79422 . -1) (undo-tree-id79423 . -1) (undo-tree-id79424 . -1) (undo-tree-id79425 . -1) (undo-tree-id79426 . -1) (undo-tree-id79427 . -1) (undo-tree-id79428 . -1) (undo-tree-id79429 . -1) (undo-tree-id79430 . -1) (undo-tree-id79431 . -1) (undo-tree-id79432 . -1) (undo-tree-id79433 . -1) (undo-tree-id79434 . -1) (undo-tree-id79435 . -1) (undo-tree-id79436 . -1) (undo-tree-id79437 . -1) (undo-tree-id79438 . -1) (undo-tree-id79439 . -1) (undo-tree-id79440 . -1) (undo-tree-id79441 . -1) (undo-tree-id79442 . -1) (undo-tree-id79443 . -1) (undo-tree-id79444 . -1) (undo-tree-id79445 . -1) (undo-tree-id79446 . -1) (undo-tree-id79447 . -1) (undo-tree-id79448 . -1) (undo-tree-id79449 . -1) (undo-tree-id79450 . -1) (undo-tree-id79451 . -1) (undo-tree-id79452 . -1) (undo-tree-id79453 . -1)) nil (25775 1129 234828 469000) 0 nil])
([nil nil ((8098 . 8722) (#("- Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the

- First, we read in the sequential input." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 37 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 37 38 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 38 123 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 123 127 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 127 140 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 140 141 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 141 147 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 147 148 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 148 150 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 150 195 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 195 196 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 196 197 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 197 198 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 198 199 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 199 200 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 200 221 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 221 222 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 222 243 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 243 244 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 244 248 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 248 249 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 249 271 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 271 272 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 272 369 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 369 370 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 370 377 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 377 379 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 379 423 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 423 425 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 425 459 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 459 460 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 460 483 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 483 484 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 484 580 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 580 581 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 581 582 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 582 583 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 583 584 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 584 585 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 585 623 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 623 624 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 8098) (undo-tree-id78989 . 39) (undo-tree-id78990 . -623) (undo-tree-id78991 . -623) (undo-tree-id78992 . -585) (undo-tree-id78993 . -585) (undo-tree-id78994 . -585) (undo-tree-id78995 . -585) (undo-tree-id78996 . -585) (undo-tree-id78997 . -585) (undo-tree-id78998 . -585) (undo-tree-id78999 . -585) (undo-tree-id79000 . -585) (undo-tree-id79001 . -585) (undo-tree-id79002 . -585) (undo-tree-id79003 . -585) (undo-tree-id79004 . -585) (undo-tree-id79005 . -585) (undo-tree-id79006 . -585) (undo-tree-id79007 . -585) (undo-tree-id79008 . -585) (undo-tree-id79009 . -585) (undo-tree-id79010 . -585) (undo-tree-id79011 . -585) (undo-tree-id79012 . -585) (undo-tree-id79013 . -585) (undo-tree-id79014 . -585) (undo-tree-id79015 . -585) (undo-tree-id79016 . -585) (undo-tree-id79017 . -585) (undo-tree-id79018 . -585) (undo-tree-id79019 . -585) (undo-tree-id79020 . -585) (undo-tree-id79021 . -585) (undo-tree-id79022 . -585) (undo-tree-id79023 . -585) (undo-tree-id79024 . -585) (undo-tree-id79025 . -585) (undo-tree-id79026 . -585) (undo-tree-id79027 . -585) (undo-tree-id79028 . -585) (undo-tree-id79029 . -624) (undo-tree-id79030 . -585) (undo-tree-id79031 . -585) (undo-tree-id79032 . -585) (undo-tree-id79033 . -585) (undo-tree-id79034 . -585) (undo-tree-id79035 . -585) (undo-tree-id79036 . -585) (undo-tree-id79037 . -585) (undo-tree-id79038 . -585) (undo-tree-id79039 . -585) (undo-tree-id79040 . -585) (undo-tree-id79041 . -585) (undo-tree-id79042 . -585) (undo-tree-id79043 . -585) (undo-tree-id79044 . -585) (undo-tree-id79045 . -585) (undo-tree-id79046 . -585) (undo-tree-id79047 . -585) (undo-tree-id79048 . -585) (undo-tree-id79049 . -585) (undo-tree-id79050 . -585) (undo-tree-id79051 . -585) (undo-tree-id79052 . -585) (undo-tree-id79053 . -585) (undo-tree-id79054 . -585) (undo-tree-id79055 . -585) (undo-tree-id79056 . -585) (undo-tree-id79057 . -585) (undo-tree-id79058 . -585) (undo-tree-id79059 . -585) (undo-tree-id79060 . -585) (undo-tree-id79061 . -585) (undo-tree-id79062 . -585) (undo-tree-id79063 . -585) (undo-tree-id79064 . -585) (undo-tree-id79065 . -585) (undo-tree-id79066 . -585) (undo-tree-id79067 . -585) (undo-tree-id79068 . -585) (undo-tree-id79069 . -589) (undo-tree-id79070 . -589) (undo-tree-id79071 . -589) (undo-tree-id79072 . -589) (undo-tree-id79073 . -589) (undo-tree-id79074 . -589) (undo-tree-id79075 . -589) (undo-tree-id79076 . -589) (undo-tree-id79077 . -589) (undo-tree-id79078 . -589) (undo-tree-id79079 . -589) (undo-tree-id79080 . -589) (undo-tree-id79081 . -589) (undo-tree-id79082 . -589) (undo-tree-id79083 . -589) (undo-tree-id79084 . -589) (undo-tree-id79085 . -590) (undo-tree-id79086 . -590) (undo-tree-id79087 . -590) (undo-tree-id79088 . -590) (undo-tree-id79089 . -590) (undo-tree-id79090 . -590) (undo-tree-id79091 . -590) (undo-tree-id79092 . -590) (undo-tree-id79093 . -590) (undo-tree-id79094 . -590) (undo-tree-id79095 . -590) (undo-tree-id79096 . -590) (undo-tree-id79097 . -590) (undo-tree-id79098 . -590) (undo-tree-id79099 . -590) (undo-tree-id79100 . -590) (undo-tree-id79101 . -590) (undo-tree-id79102 . -590) (undo-tree-id79103 . -590) (undo-tree-id79104 . -590) (undo-tree-id79105 . -590) (undo-tree-id79106 . -590) (undo-tree-id79107 . -590) (undo-tree-id79108 . -590) (undo-tree-id79109 . -590) (undo-tree-id79110 . -590) (undo-tree-id79111 . -590) (undo-tree-id79112 . -590) (undo-tree-id79113 . -590) (undo-tree-id79114 . -590) (undo-tree-id79115 . -590) (undo-tree-id79116 . -590) (undo-tree-id79117 . -590) (undo-tree-id79118 . -590) (undo-tree-id79119 . -590) (undo-tree-id79120 . -590) (undo-tree-id79121 . -590) (undo-tree-id79122 . -590) (undo-tree-id79123 . -590) (undo-tree-id79124 . -590) (undo-tree-id79125 . -590) (undo-tree-id79126 . -593) (undo-tree-id79127 . -593) (undo-tree-id79128 . -593) (undo-tree-id79129 . -593) (undo-tree-id79130 . -593) (undo-tree-id79131 . -593) (undo-tree-id79132 . -593) (undo-tree-id79133 . -593) (undo-tree-id79134 . -593) (undo-tree-id79135 . -593) (undo-tree-id79136 . -593) (undo-tree-id79137 . -593) (undo-tree-id79138 . -593) (undo-tree-id79139 . -593) (undo-tree-id79140 . -593) (undo-tree-id79141 . -593) (undo-tree-id79142 . -598) (undo-tree-id79143 . -598) (undo-tree-id79144 . -598) (undo-tree-id79145 . -598) (undo-tree-id79146 . -598) (undo-tree-id79147 . -598) (undo-tree-id79148 . -598) (undo-tree-id79149 . -598) (undo-tree-id79150 . -598) (undo-tree-id79151 . -598) (undo-tree-id79152 . -598) (undo-tree-id79153 . -598) (undo-tree-id79154 . -598) (undo-tree-id79155 . -598) (undo-tree-id79156 . -598) (undo-tree-id79157 . -598) (undo-tree-id79158 . -601) (undo-tree-id79159 . -601) (undo-tree-id79160 . -601) (undo-tree-id79161 . -601) (undo-tree-id79162 . -601) (undo-tree-id79163 . -601) (undo-tree-id79164 . -601) (undo-tree-id79165 . -601) (undo-tree-id79166 . -601) (undo-tree-id79167 . -601) (undo-tree-id79168 . -601) (undo-tree-id79169 . -601) (undo-tree-id79170 . -601) (undo-tree-id79171 . -601) (undo-tree-id79172 . -601) (undo-tree-id79173 . -601) (undo-tree-id79174 . -605) (undo-tree-id79175 . -605) (undo-tree-id79176 . -605) (undo-tree-id79177 . -605) (undo-tree-id79178 . -605) (undo-tree-id79179 . -605) (undo-tree-id79180 . -605) (undo-tree-id79181 . -605) (undo-tree-id79182 . -605) (undo-tree-id79183 . -605) (undo-tree-id79184 . -605) (undo-tree-id79185 . -605) (undo-tree-id79186 . -605) (undo-tree-id79187 . -605) (undo-tree-id79188 . -605) (undo-tree-id79189 . -605) (undo-tree-id79190 . -616) (undo-tree-id79191 . -616) (undo-tree-id79192 . -616) (undo-tree-id79193 . -616) (undo-tree-id79194 . -616) (undo-tree-id79195 . -616) (undo-tree-id79196 . -616) (undo-tree-id79197 . -616) (undo-tree-id79198 . -616) (undo-tree-id79199 . -616) (undo-tree-id79200 . -616) (undo-tree-id79201 . -616) (undo-tree-id79202 . -616) (undo-tree-id79203 . -616) (undo-tree-id79204 . -616) (undo-tree-id79205 . -616) (undo-tree-id79206 . -622) (undo-tree-id79207 . -622) (undo-tree-id79208 . -622) (undo-tree-id79209 . -622) (undo-tree-id79210 . -622) (undo-tree-id79211 . -622) (undo-tree-id79212 . -622) (undo-tree-id79213 . -622) (undo-tree-id79214 . -622) (undo-tree-id79215 . -622) (undo-tree-id79216 . -622) (undo-tree-id79217 . -622) (undo-tree-id79218 . -622) (undo-tree-id79219 . -622) (undo-tree-id79220 . -622) (undo-tree-id79221 . -622) (undo-tree-id79222 . -622) (undo-tree-id79223 . -622) (undo-tree-id79224 . -622) (undo-tree-id79225 . -622) (undo-tree-id79226 . -622) (undo-tree-id79227 . -622) (undo-tree-id79228 . -622) (undo-tree-id79229 . -622) (undo-tree-id79230 . -622) (undo-tree-id79231 . -622) (undo-tree-id79232 . -623) (undo-tree-id79233 . -623) (undo-tree-id79234 . -623) (undo-tree-id79235 . -623) (undo-tree-id79236 . -623) (undo-tree-id79237 . -623) (undo-tree-id79238 . -623) (undo-tree-id79239 . -623) (undo-tree-id79240 . -623) (undo-tree-id79241 . -623) (undo-tree-id79242 . -623) (undo-tree-id79243 . -623) (undo-tree-id79244 . -623) (undo-tree-id79245 . -623) (undo-tree-id79246 . -623) (undo-tree-id79247 . -623) (undo-tree-id79248 . -623) (undo-tree-id79249 . -623) (undo-tree-id79250 . -623) (undo-tree-id79251 . -623) (undo-tree-id79252 . -623) (undo-tree-id79253 . -623) (undo-tree-id79254 . -623) (undo-tree-id79255 . -623) (undo-tree-id79256 . -623) (undo-tree-id79257 . -623) (undo-tree-id79258 . -623) (undo-tree-id79259 . -623) (undo-tree-id79260 . -623) (undo-tree-id79261 . -623) (undo-tree-id79262 . -623) (undo-tree-id79263 . -623) (undo-tree-id79264 . -623) (undo-tree-id79265 . -623) (undo-tree-id79266 . -623) (undo-tree-id79267 . -623) (undo-tree-id79268 . -623) (undo-tree-id79269 . -623) (undo-tree-id79270 . -623) (undo-tree-id79271 . -623) (undo-tree-id79272 . -623) (undo-tree-id79273 . -623) (undo-tree-id79274 . -623) (undo-tree-id79275 . -623) (undo-tree-id79276 . -623) (undo-tree-id79277 . -623) (undo-tree-id79278 . -623) (undo-tree-id79279 . -623) (undo-tree-id79280 . -623) (undo-tree-id79281 . -623) (undo-tree-id79282 . -623) (undo-tree-id79283 . -623) (undo-tree-id79284 . -623) (undo-tree-id79285 . -623) (undo-tree-id79286 . -623) (undo-tree-id79287 . -623) (undo-tree-id79288 . -623) (undo-tree-id79289 . -623) (undo-tree-id79290 . -623) (undo-tree-id79291 . -623) (undo-tree-id79292 . -623) (undo-tree-id79293 . -623) (undo-tree-id79294 . -623) (undo-tree-id79295 . -623) (undo-tree-id79296 . -623) (undo-tree-id79297 . -623) (undo-tree-id79298 . -623) (undo-tree-id79299 . -623) (undo-tree-id79300 . -623) (undo-tree-id79301 . -623) (undo-tree-id79302 . -623) (undo-tree-id79303 . -623) (undo-tree-id79304 . -623) (undo-tree-id79305 . -623) (undo-tree-id79306 . -623) (undo-tree-id79307 . -623) (undo-tree-id79308 . -623) (undo-tree-id79309 . -623) (undo-tree-id79310 . -623) (undo-tree-id79311 . -623) (undo-tree-id79312 . -623) (undo-tree-id79313 . -623) (undo-tree-id79314 . -623) (undo-tree-id79315 . -623) (undo-tree-id79316 . -623) (undo-tree-id79317 . -623) (undo-tree-id79318 . -623) (undo-tree-id79319 . -623) (undo-tree-id79320 . -623) (undo-tree-id79321 . -623) (undo-tree-id79322 . -623) (undo-tree-id79323 . -623) (undo-tree-id79324 . -623) (undo-tree-id79325 . -623) (undo-tree-id79326 . -623) (undo-tree-id79327 . -623) (undo-tree-id79328 . -623) (undo-tree-id79329 . -623) (undo-tree-id79330 . -623) (undo-tree-id79331 . -623) (undo-tree-id79332 . -623) (undo-tree-id79333 . -623) (undo-tree-id79334 . -623) (undo-tree-id79335 . -623) (undo-tree-id79336 . -623) (undo-tree-id79337 . -623) (undo-tree-id79338 . -623) (undo-tree-id79339 . -623) (undo-tree-id79340 . -623) (undo-tree-id79341 . -623) (undo-tree-id79342 . -623) (undo-tree-id79343 . -623) (undo-tree-id79344 . -623) (undo-tree-id79345 . -623) (undo-tree-id79346 . -624) (undo-tree-id79347 . -624) (undo-tree-id79348 . -624) (undo-tree-id79349 . -624) (undo-tree-id79350 . -624) (undo-tree-id79351 . -624) (undo-tree-id79352 . -624) (undo-tree-id79353 . -624) (undo-tree-id79354 . -624) (undo-tree-id79355 . -624) (undo-tree-id79356 . -624) (undo-tree-id79357 . -624) (undo-tree-id79358 . -624) (undo-tree-id79359 . -624) (undo-tree-id79360 . -624) (undo-tree-id79361 . -624) (undo-tree-id79362 . -624) (undo-tree-id79363 . -624) (undo-tree-id79364 . -624) (undo-tree-id79365 . -624) (undo-tree-id79366 . -624) (undo-tree-id79367 . -624) (undo-tree-id79368 . -624) (undo-tree-id79369 . -624) (undo-tree-id79370 . -583) (8098 . 8681) (#(" Suppose each element is embedded by a vector of length d. Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the" 0 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 36 37 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 37 122 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 122 126 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 126 139 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 139 140 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 140 146 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 146 147 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 147 149 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 149 194 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 194 195 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 195 196 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 196 197 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 197 198 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 198 199 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 199 220 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 220 221 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 221 242 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 242 243 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 243 247 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 247 248 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 248 270 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 270 271 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 271 368 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 368 369 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 369 376 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 376 378 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 378 422 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 422 424 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 424 458 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 458 459 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 459 482 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 482 483 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 483 579 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 579 580 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 8139)) nil (25775 1129 234758 642000) 0 nil])
([nil nil ((8141 . 8725) (#("- Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the

- Suppose each element is embedded by a vector of length d." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 65 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 65 69 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 69 82 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 82 83 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 83 89 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 89 90 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 90 92 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 92 137 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 137 138 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 138 139 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 139 140 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 140 141 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 141 142 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 142 163 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 163 164 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 164 185 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 185 186 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 186 190 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 190 191 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 191 213 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 213 214 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 214 311 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 311 312 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 312 319 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 319 321 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 321 365 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 365 367 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 367 399 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 399 401 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 401 402 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 402 425 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 425 426 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 426 522 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 522 523 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 523 524 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 524 525 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 525 526 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 526 527 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 527 562 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 562 563 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 563 584 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 8141) (undo-tree-id79456 . 57) (undo-tree-id79457 . -526) (undo-tree-id79458 . -584) (undo-tree-id79459 . -526) (undo-tree-id79460 . -526) (undo-tree-id79461 . -526) (undo-tree-id79462 . -526) (undo-tree-id79463 . -526) (undo-tree-id79464 . -526) (undo-tree-id79465 . -526) (undo-tree-id79466 . -526) (undo-tree-id79467 . -526) (undo-tree-id79468 . -526) (undo-tree-id79469 . -526) (undo-tree-id79470 . -526) (undo-tree-id79471 . -526) (undo-tree-id79472 . -526) (undo-tree-id79473 . -526) (undo-tree-id79474 . -526) (undo-tree-id79475 . -526) (undo-tree-id79476 . -526) (undo-tree-id79477 . -526) (undo-tree-id79478 . -526) (undo-tree-id79479 . -526) (undo-tree-id79480 . -526) (undo-tree-id79481 . -526) (undo-tree-id79482 . -526) (undo-tree-id79483 . -526) (undo-tree-id79484 . -526) (undo-tree-id79485 . -526) (undo-tree-id79486 . -526) (undo-tree-id79487 . -526) (undo-tree-id79488 . -526) (undo-tree-id79489 . -526) (undo-tree-id79490 . -526) (undo-tree-id79491 . -526) (undo-tree-id79492 . -526) (undo-tree-id79493 . -526) (undo-tree-id79494 . -526) (undo-tree-id79495 . -526) (undo-tree-id79496 . -526) (undo-tree-id79497 . -526) (undo-tree-id79498 . -526) (undo-tree-id79499 . -526) (undo-tree-id79500 . -526) (undo-tree-id79501 . -526) (undo-tree-id79502 . -526) (undo-tree-id79503 . -526) (undo-tree-id79504 . -526) (undo-tree-id79505 . -526) (undo-tree-id79506 . -526) (undo-tree-id79507 . -526) (undo-tree-id79508 . -526) (undo-tree-id79509 . -526) (undo-tree-id79510 . -526) (undo-tree-id79511 . -526) (undo-tree-id79512 . -526) (undo-tree-id79513 . -526) (undo-tree-id79514 . -526) (undo-tree-id79515 . -526) (undo-tree-id79516 . -526) (undo-tree-id79517 . -526) (undo-tree-id79518 . -526) (undo-tree-id79519 . -526) (undo-tree-id79520 . -526) (undo-tree-id79521 . -526) (undo-tree-id79522 . -526) (undo-tree-id79523 . -583) (undo-tree-id79524 . -583) (undo-tree-id79525 . -583) (undo-tree-id79526 . -583) (undo-tree-id79527 . -583) (undo-tree-id79528 . -583) (undo-tree-id79529 . -583) (undo-tree-id79530 . -583) (undo-tree-id79531 . -583) (undo-tree-id79532 . -583) (undo-tree-id79533 . -583) (undo-tree-id79534 . -583) (undo-tree-id79535 . -583) (undo-tree-id79536 . -583) (undo-tree-id79537 . -583) (undo-tree-id79538 . -583) (undo-tree-id79539 . -584) (undo-tree-id79540 . -584) (undo-tree-id79541 . -584) (undo-tree-id79542 . -584) (undo-tree-id79543 . -584) (undo-tree-id79544 . -584) (undo-tree-id79545 . -584) (undo-tree-id79546 . -584) (undo-tree-id79547 . -584) (undo-tree-id79548 . -584) (undo-tree-id79549 . -584) (undo-tree-id79550 . -584) (undo-tree-id79551 . -584) (undo-tree-id79552 . -584) (undo-tree-id79553 . -584) (undo-tree-id79554 . -584) (undo-tree-id79555 . -584) (undo-tree-id79556 . -584) (undo-tree-id79557 . -584) (undo-tree-id79558 . -584) (undo-tree-id79559 . -584) (undo-tree-id79560 . -584) (undo-tree-id79561 . -584) (undo-tree-id79562 . -584) (undo-tree-id79563 . -525) (8141 . 8666) (#(" Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix. Then, we create ℎ sets of the query, key, and value learning parameter matrices: • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the" 0 64 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 64 68 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 68 81 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 81 82 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 82 88 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 88 89 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 89 91 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 91 136 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 136 137 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 137 138 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 138 139 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 139 140 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 140 141 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 141 162 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 162 163 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 163 184 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 184 185 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 185 189 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 189 190 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 190 212 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 212 213 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 213 310 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 310 311 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 311 318 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 318 320 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 320 364 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 364 366 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 366 398 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 398 400 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 400 401 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 401 424 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 424 425 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 425 521 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 521 522 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 8200) (t 25775 1129 314076 271000)) nil (25775 1134 606089 298000) 0 nil])
([nil nil ((#("Here, the input can be embedded into a 𝑇𝑇 𝑇 𝑇𝑇 matrix" 0 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 8204) (undo-tree-id79567 . 53) (undo-tree-id79568 . -52) (undo-tree-id79569 . -53) (t 25775 1134 690164 797000)) nil (25775 1157 919004 564000) 0 nil])
([nil nil ((#(". " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 8204) (undo-tree-id79564 . 2) (undo-tree-id79565 . -1) (undo-tree-id79566 . -2)) nil (25775 1157 918997 844000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9303 . 9304) (nil fontified nil 9277 . 9304) (nil fontified nil 9178 . 9277) (nil fontified nil 9077 . 9178) (nil fontified nil 8979 . 9077) (nil fontified nil 8875 . 8979) (nil fontified nil 8769 . 8875) (nil fontified nil 8671 . 8769) (8671 . 9304) (t 25775 1158 2548 542000)) nil (25775 10723 911542 461000) 0 nil])
([nil nil ((8671 . 8673)) nil (25775 10723 911537 702000) 0 nil])
([nil nil ((9278 . 9279) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -9278) (undo-tree-id79966 . -1) (9179 . 9180) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -9179) (undo-tree-id79967 . -1) (9078 . 9079) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -9078) (undo-tree-id79968 . -1) (8980 . 8981) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -8980) (undo-tree-id79969 . -1) (8876 . 8877) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -8876) (undo-tree-id79970 . -1) (8770 . 8771) (#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . -8770) (undo-tree-id79971 . -1) 8672) nil (25775 10723 911535 103000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8671) (undo-tree-id79956 . -2) (undo-tree-id79957 . -2) (undo-tree-id79958 . -2) (undo-tree-id79959 . -2) (undo-tree-id79960 . -2) (undo-tree-id79961 . -2) (undo-tree-id79962 . -2) (undo-tree-id79963 . -2) (undo-tree-id79964 . -2) (undo-tree-id79965 . -2) 8673 (8671 . 8673) (8671 . 8672) 8673) nil (25775 10723 911523 507000) 0 nil])
([nil nil ((#("ℎ " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t)) . 8220) (undo-tree-id79954 . -1) (undo-tree-id79955 . -2)) nil (25775 10723 911512 966000) 0 nil])
([nil nil ((8202 . 8672) (#("- : • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the

- Then, we create sets of the query, key, and value learning parameter matrices" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 4 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 5 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 5 6 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 6 7 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 7 8 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 8 29 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 29 30 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 30 51 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 51 52 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 52 56 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 56 57 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 57 79 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 79 80 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 80 177 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 177 178 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 178 185 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 185 187 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 187 231 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 231 233 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 233 265 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 265 267 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 267 268 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 268 291 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 291 292 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 292 305 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 305 388 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 388 389 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 389 390 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 390 391 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 391 392 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 392 393 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 393 401 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 401 405 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 405 416 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 416 417 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 417 423 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 423 424 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 424 426 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 426 470 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 8202) (undo-tree-id79573 . -409) (undo-tree-id79574 . -409) (undo-tree-id79575 . -470) (undo-tree-id79576 . -393) (undo-tree-id79577 . -393) (undo-tree-id79578 . -393) (undo-tree-id79579 . -393) (undo-tree-id79580 . -393) (undo-tree-id79581 . -393) (undo-tree-id79582 . -393) (undo-tree-id79583 . -393) (undo-tree-id79584 . -393) (undo-tree-id79585 . -393) (undo-tree-id79586 . -393) (undo-tree-id79587 . -393) (undo-tree-id79588 . -393) (undo-tree-id79589 . -393) (undo-tree-id79590 . -393) (undo-tree-id79591 . -393) (undo-tree-id79592 . -393) (undo-tree-id79593 . -393) (undo-tree-id79594 . -393) (undo-tree-id79595 . -393) (undo-tree-id79596 . -393) (undo-tree-id79597 . -393) (undo-tree-id79598 . -393) (undo-tree-id79599 . -393) (undo-tree-id79600 . -393) (undo-tree-id79601 . -393) (undo-tree-id79602 . -393) (undo-tree-id79603 . -393) (undo-tree-id79604 . -393) (undo-tree-id79605 . -393) (undo-tree-id79606 . -393) (undo-tree-id79607 . -393) (undo-tree-id79608 . -393) (undo-tree-id79609 . -393) (undo-tree-id79610 . -393) (undo-tree-id79611 . -393) (undo-tree-id79612 . -397) (undo-tree-id79613 . -397) (undo-tree-id79614 . -397) (undo-tree-id79615 . -397) (undo-tree-id79616 . -397) (undo-tree-id79617 . -397) (undo-tree-id79618 . -397) (undo-tree-id79619 . -397) (undo-tree-id79620 . -397) (undo-tree-id79621 . -397) (undo-tree-id79622 . -397) (undo-tree-id79623 . -397) (undo-tree-id79624 . -397) (undo-tree-id79625 . -397) (undo-tree-id79626 . -397) (undo-tree-id79627 . -397) (undo-tree-id79628 . -399) (undo-tree-id79629 . -399) (undo-tree-id79630 . -399) (undo-tree-id79631 . -399) (undo-tree-id79632 . -399) (undo-tree-id79633 . -399) (undo-tree-id79634 . -399) (undo-tree-id79635 . -399) (undo-tree-id79636 . -399) (undo-tree-id79637 . -399) (undo-tree-id79638 . -399) (undo-tree-id79639 . -399) (undo-tree-id79640 . -399) (undo-tree-id79641 . -399) (undo-tree-id79642 . -399) (undo-tree-id79643 . -399) (undo-tree-id79644 . -402) (undo-tree-id79645 . -402) (undo-tree-id79646 . -402) (undo-tree-id79647 . -402) (undo-tree-id79648 . -402) (undo-tree-id79649 . -402) (undo-tree-id79650 . -402) (undo-tree-id79651 . -402) (undo-tree-id79652 . -402) (undo-tree-id79653 . -402) (undo-tree-id79654 . -402) (undo-tree-id79655 . -402) (undo-tree-id79656 . -402) (undo-tree-id79657 . -402) (undo-tree-id79658 . -402) (undo-tree-id79659 . -402) (undo-tree-id79660 . -409) (undo-tree-id79661 . -409) (undo-tree-id79662 . -409) (undo-tree-id79663 . -409) (undo-tree-id79664 . -409) (undo-tree-id79665 . -409) (undo-tree-id79666 . -409) (undo-tree-id79667 . -409) (undo-tree-id79668 . -409) (undo-tree-id79669 . -409) (undo-tree-id79670 . -409) (undo-tree-id79671 . -409) (undo-tree-id79672 . -409) (undo-tree-id79673 . -409) (undo-tree-id79674 . -409) (undo-tree-id79675 . -409) (undo-tree-id79676 . -409) (undo-tree-id79677 . -409) (undo-tree-id79678 . -409) (undo-tree-id79679 . -409) (undo-tree-id79680 . -409) (undo-tree-id79681 . -409) (undo-tree-id79682 . -409) (undo-tree-id79683 . -409) (undo-tree-id79684 . -409) (undo-tree-id79685 . -409) (undo-tree-id79686 . -409) (undo-tree-id79687 . -409) (undo-tree-id79688 . -409) (undo-tree-id79689 . -409) (undo-tree-id79690 . -409) (undo-tree-id79691 . -409) (undo-tree-id79692 . -409) (undo-tree-id79693 . -409) (undo-tree-id79694 . -409) (undo-tree-id79695 . -409) (undo-tree-id79696 . -409) (undo-tree-id79697 . -409) (undo-tree-id79698 . -409) (undo-tree-id79699 . -409) (undo-tree-id79700 . -409) (undo-tree-id79701 . -409) (undo-tree-id79702 . -409) (undo-tree-id79703 . -409) (undo-tree-id79704 . -409) (undo-tree-id79705 . -409) (undo-tree-id79706 . -409) (undo-tree-id79707 . -409) (undo-tree-id79708 . -409) (undo-tree-id79709 . -409) (undo-tree-id79710 . -409) (undo-tree-id79711 . -412) (undo-tree-id79712 . -412) (undo-tree-id79713 . -412) (undo-tree-id79714 . -412) (undo-tree-id79715 . -412) (undo-tree-id79716 . -412) (undo-tree-id79717 . -412) (undo-tree-id79718 . -412) (undo-tree-id79719 . -412) (undo-tree-id79720 . -412) (undo-tree-id79721 . -412) (undo-tree-id79722 . -412) (undo-tree-id79723 . -412) (undo-tree-id79724 . -412) (undo-tree-id79725 . -412) (undo-tree-id79726 . -412) (undo-tree-id79727 . -415) (undo-tree-id79728 . -415) (undo-tree-id79729 . -415) (undo-tree-id79730 . -415) (undo-tree-id79731 . -415) (undo-tree-id79732 . -415) (undo-tree-id79733 . -415) (undo-tree-id79734 . -415) (undo-tree-id79735 . -415) (undo-tree-id79736 . -415) (undo-tree-id79737 . -415) (undo-tree-id79738 . -415) (undo-tree-id79739 . -415) (undo-tree-id79740 . -415) (undo-tree-id79741 . -415) (undo-tree-id79742 . -415) (undo-tree-id79743 . -419) (undo-tree-id79744 . -419) (undo-tree-id79745 . -419) (undo-tree-id79746 . -419) (undo-tree-id79747 . -419) (undo-tree-id79748 . -419) (undo-tree-id79749 . -419) (undo-tree-id79750 . -419) (undo-tree-id79751 . -419) (undo-tree-id79752 . -419) (undo-tree-id79753 . -419) (undo-tree-id79754 . -419) (undo-tree-id79755 . -419) (undo-tree-id79756 . -419) (undo-tree-id79757 . -419) (undo-tree-id79758 . -419) (undo-tree-id79759 . -425) (undo-tree-id79760 . -425) (undo-tree-id79761 . -425) (undo-tree-id79762 . -425) (undo-tree-id79763 . -425) (undo-tree-id79764 . -425) (undo-tree-id79765 . -425) (undo-tree-id79766 . -425) (undo-tree-id79767 . -425) (undo-tree-id79768 . -425) (undo-tree-id79769 . -425) (undo-tree-id79770 . -425) (undo-tree-id79771 . -425) (undo-tree-id79772 . -425) (undo-tree-id79773 . -425) (undo-tree-id79774 . -425) (undo-tree-id79775 . -426) (undo-tree-id79776 . -426) (undo-tree-id79777 . -426) (undo-tree-id79778 . -426) (undo-tree-id79779 . -426) (undo-tree-id79780 . -426) (undo-tree-id79781 . -426) (undo-tree-id79782 . -426) (undo-tree-id79783 . -426) (undo-tree-id79784 . -426) (undo-tree-id79785 . -426) (undo-tree-id79786 . -426) (undo-tree-id79787 . -426) (undo-tree-id79788 . -426) (undo-tree-id79789 . -426) (undo-tree-id79790 . -426) (undo-tree-id79791 . -430) (undo-tree-id79792 . -430) (undo-tree-id79793 . -430) (undo-tree-id79794 . -430) (undo-tree-id79795 . -430) (undo-tree-id79796 . -430) (undo-tree-id79797 . -430) (undo-tree-id79798 . -430) (undo-tree-id79799 . -430) (undo-tree-id79800 . -430) (undo-tree-id79801 . -430) (undo-tree-id79802 . -430) (undo-tree-id79803 . -430) (undo-tree-id79804 . -430) (undo-tree-id79805 . -430) (undo-tree-id79806 . -430) (undo-tree-id79807 . -431) (undo-tree-id79808 . -431) (undo-tree-id79809 . -431) (undo-tree-id79810 . -431) (undo-tree-id79811 . -431) (undo-tree-id79812 . -431) (undo-tree-id79813 . -431) (undo-tree-id79814 . -431) (undo-tree-id79815 . -431) (undo-tree-id79816 . -431) (undo-tree-id79817 . -431) (undo-tree-id79818 . -431) (undo-tree-id79819 . -431) (undo-tree-id79820 . -431) (undo-tree-id79821 . -431) (undo-tree-id79822 . -431) (undo-tree-id79823 . -435) (undo-tree-id79824 . -435) (undo-tree-id79825 . -435) (undo-tree-id79826 . -435) (undo-tree-id79827 . -435) (undo-tree-id79828 . -435) (undo-tree-id79829 . -435) (undo-tree-id79830 . -435) (undo-tree-id79831 . -435) (undo-tree-id79832 . -435) (undo-tree-id79833 . -435) (undo-tree-id79834 . -435) (undo-tree-id79835 . -435) (undo-tree-id79836 . -435) (undo-tree-id79837 . -435) (undo-tree-id79838 . -435) (undo-tree-id79839 . -441) (undo-tree-id79840 . -441) (undo-tree-id79841 . -441) (undo-tree-id79842 . -441) (undo-tree-id79843 . -441) (undo-tree-id79844 . -441) (undo-tree-id79845 . -441) (undo-tree-id79846 . -441) (undo-tree-id79847 . -441) (undo-tree-id79848 . -441) (undo-tree-id79849 . -441) (undo-tree-id79850 . -441) (undo-tree-id79851 . -441) (undo-tree-id79852 . -441) (undo-tree-id79853 . -441) (undo-tree-id79854 . -441) (undo-tree-id79855 . -450) (undo-tree-id79856 . -450) (undo-tree-id79857 . -450) (undo-tree-id79858 . -450) (undo-tree-id79859 . -450) (undo-tree-id79860 . -450) (undo-tree-id79861 . -450) (undo-tree-id79862 . -450) (undo-tree-id79863 . -450) (undo-tree-id79864 . -450) (undo-tree-id79865 . -450) (undo-tree-id79866 . -450) (undo-tree-id79867 . -450) (undo-tree-id79868 . -450) (undo-tree-id79869 . -450) (undo-tree-id79870 . -450) (undo-tree-id79871 . -460) (undo-tree-id79872 . -460) (undo-tree-id79873 . -460) (undo-tree-id79874 . -460) (undo-tree-id79875 . -460) (undo-tree-id79876 . -460) (undo-tree-id79877 . -460) (undo-tree-id79878 . -460) (undo-tree-id79879 . -460) (undo-tree-id79880 . -460) (undo-tree-id79881 . -460) (undo-tree-id79882 . -460) (undo-tree-id79883 . -460) (undo-tree-id79884 . -460) (undo-tree-id79885 . -460) (undo-tree-id79886 . -460) (undo-tree-id79887 . -469) (undo-tree-id79888 . -469) (undo-tree-id79889 . -469) (undo-tree-id79890 . -469) (undo-tree-id79891 . -469) (undo-tree-id79892 . -469) (undo-tree-id79893 . -469) (undo-tree-id79894 . -469) (undo-tree-id79895 . -469) (undo-tree-id79896 . -469) (undo-tree-id79897 . -469) (undo-tree-id79898 . -469) (undo-tree-id79899 . -469) (undo-tree-id79900 . -469) (undo-tree-id79901 . -469) (undo-tree-id79902 . -469) (undo-tree-id79903 . -470) (undo-tree-id79904 . -470) (undo-tree-id79905 . -470) (undo-tree-id79906 . -470) (undo-tree-id79907 . -470) (undo-tree-id79908 . -470) (undo-tree-id79909 . -470) (undo-tree-id79910 . -470) (undo-tree-id79911 . -470) (undo-tree-id79912 . -470) (undo-tree-id79913 . -470) (undo-tree-id79914 . -470) (undo-tree-id79915 . -470) (undo-tree-id79916 . -470) (undo-tree-id79917 . -470) (undo-tree-id79918 . -470) (undo-tree-id79919 . -470) (undo-tree-id79920 . -470) (undo-tree-id79921 . -470) (undo-tree-id79922 . -470) (undo-tree-id79923 . -470) (undo-tree-id79924 . -470) (undo-tree-id79925 . -470) (undo-tree-id79926 . -470) (undo-tree-id79927 . -470) (undo-tree-id79928 . -470) (undo-tree-id79929 . -470) (undo-tree-id79930 . -470) (undo-tree-id79931 . -470) (undo-tree-id79932 . -470) (undo-tree-id79933 . -470) (undo-tree-id79934 . -470) (undo-tree-id79935 . -470) (undo-tree-id79936 . -470) (undo-tree-id79937 . -470) (undo-tree-id79938 . -470) (undo-tree-id79939 . -470) (undo-tree-id79940 . -470) (undo-tree-id79941 . -470) (undo-tree-id79942 . -470) (undo-tree-id79943 . -470) (undo-tree-id79944 . -470) (undo-tree-id79945 . -470) (undo-tree-id79946 . -470) (undo-tree-id79947 . -470) (undo-tree-id79948 . -470) (undo-tree-id79949 . -470) (undo-tree-id79950 . -470) (undo-tree-id79951 . -470) (undo-tree-id79952 . -470) (undo-tree-id79953 . -391) (8202 . 8593) (#(": • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 3 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 4 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 5 6 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 6 27 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 27 28 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 28 49 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 49 50 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 50 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 54 55 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 55 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 77 78 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 78 175 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 175 176 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 176 183 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 183 185 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 185 229 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 229 231 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 231 263 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 263 265 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 265 266 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 266 289 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 289 290 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 290 303 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 303 386 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 386 387 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 8281)) nil (25775 10723 911473 531000) 0 nil])
([nil nil ((#(": • • 𝑼𝑼𝒒𝒒1 , 𝑼𝑼𝒌𝒌1 , 𝑼𝑼𝒗𝒗1 𝑼𝑼𝒒𝒒2 , 𝑼𝑼𝒌𝒌2 , 𝑼𝑼𝒗𝒗2 •... •𝑼𝑼𝒒𝒒ℎ , 𝑼𝑼𝒌𝒌ℎ , 𝑼𝑼𝒗𝒗ℎ " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 3 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 4 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 5 6 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 6 27 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 27 28 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 28 49 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 49 50 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 50 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 54 55 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 55 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 77 78 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 8285) (undo-tree-id79570 . 78) (undo-tree-id79571 . -77) (undo-tree-id79572 . -78)) nil (25775 10723 907609 297000) 0 nil])
([nil nil ((9231 . 9232)) nil (25775 10723 907591 54000) 0 nil])
([nil nil ((#("- Because we are using these weight matrices to project each element 𝒙𝒙(𝑖𝑖) for the required dimen- sion-matching in the matrix multiplications, both 𝑼𝑼𝒒𝒒𝑗𝑗 and 𝑼𝑼𝒌𝒌𝑗𝑗 have the shape 𝑑𝑑𝑘𝑘 × 𝑑𝑑 , and 𝑼𝑼𝑣𝑣𝑗𝑗 has the shape 𝑑𝑑𝑣𝑣 × 𝑑𝑑. As a result, both resulting sequences, query and key, have length 𝑑𝑑𝑘𝑘 , and the
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t composition (0 1 [8226])) 1 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 99 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 99 100 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 100 107 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 107 109 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 109 153 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 153 155 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 155 187 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 187 189 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 189 190 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 190 213 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 213 214 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 214 227 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 227 310 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 310 311 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 311 312 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 8283) (undo-tree-id79974 . 310) (undo-tree-id79975 . -311) (undo-tree-id79976 . -312) (undo-tree-id79977 . -312) (undo-tree-id79978 . -312) (undo-tree-id79979 . -312) (undo-tree-id79980 . -312) (undo-tree-id79981 . -312) (undo-tree-id79982 . -312) (undo-tree-id79983 . -312) (undo-tree-id79984 . -312) (undo-tree-id79985 . -312) (undo-tree-id79986 . -312) (undo-tree-id79987 . -312) (undo-tree-id79988 . -312) (undo-tree-id79989 . -312) (undo-tree-id79990 . -2) (undo-tree-id79991 . -2) (undo-tree-id79992 . -2) (undo-tree-id79993 . -2) (undo-tree-id79994 . -2) (undo-tree-id79995 . -2) (undo-tree-id79996 . -2) (undo-tree-id79997 . -2) (undo-tree-id79998 . -2) (undo-tree-id79999 . -2) (undo-tree-id80000 . -2) (undo-tree-id80001 . -2) (undo-tree-id80002 . -2) (undo-tree-id80003 . -2) (undo-tree-id80004 . -2) (undo-tree-id80005 . -2) (undo-tree-id80006 . -2) (undo-tree-id80007 . -2) (undo-tree-id80008 . -2) (undo-tree-id80009 . -2) (undo-tree-id80010 . -2) (undo-tree-id80011 . -2) (undo-tree-id80012 . -2) (undo-tree-id80013 . -2) (undo-tree-id80014 . -2) (undo-tree-id80015 . -2) (undo-tree-id80016 . -2) (undo-tree-id80017 . -2) (undo-tree-id80018 . -2) (undo-tree-id80019 . -2) (undo-tree-id80020 . -2) (undo-tree-id80021 . -2) (undo-tree-id80022 . -2) (undo-tree-id80023 . -2) (undo-tree-id80024 . -2) (undo-tree-id80025 . -2) (undo-tree-id80026 . -2) (undo-tree-id80027 . -2) (undo-tree-id80028 . -2) (undo-tree-id80029 . -2) (undo-tree-id80030 . -2) (undo-tree-id80031 . -2) (undo-tree-id80032 . -2) (undo-tree-id80033 . -2) (undo-tree-id80034 . -2) (undo-tree-id80035 . -2) (undo-tree-id80036 . -2) (undo-tree-id80037 . -2) (undo-tree-id80038 . -2) (undo-tree-id80039 . -2) (undo-tree-id80040 . -2) (undo-tree-id80041 . -2) (undo-tree-id80042 . -2) (undo-tree-id80043 . -2) (undo-tree-id80044 . -2) (undo-tree-id80045 . -2) (undo-tree-id80046 . -61) (undo-tree-id80047 . -61) (undo-tree-id80048 . -61) (undo-tree-id80049 . -61) (undo-tree-id80050 . -61) (undo-tree-id80051 . -61) (undo-tree-id80052 . -61) (undo-tree-id80053 . -61) (undo-tree-id80054 . -61) (undo-tree-id80055 . -61) (undo-tree-id80056 . -61) (undo-tree-id80057 . -61) (undo-tree-id80058 . -61) (undo-tree-id80059 . -61) (undo-tree-id80060 . -61) (undo-tree-id80061 . -61) (undo-tree-id80062 . -61) (undo-tree-id80063 . -61) (undo-tree-id80064 . -61) (undo-tree-id80065 . -61) (undo-tree-id80066 . -61) (undo-tree-id80067 . -61) (undo-tree-id80068 . -61) (undo-tree-id80069 . -61) (undo-tree-id80070 . -61) (undo-tree-id80071 . -61) (undo-tree-id80072 . -61) (undo-tree-id80073 . -61) (undo-tree-id80074 . -61) (undo-tree-id80075 . -61) (undo-tree-id80076 . -61) (undo-tree-id80077 . -61) (undo-tree-id80078 . -61) (undo-tree-id80079 . -61) (undo-tree-id80080 . -61) (undo-tree-id80081 . -61) (undo-tree-id80082 . -2) (undo-tree-id80083 . -2) (undo-tree-id80084 . -2) (undo-tree-id80085 . -2) (undo-tree-id80086 . -2) (undo-tree-id80087 . -2) (undo-tree-id80088 . -2) (undo-tree-id80089 . -2) (undo-tree-id80090 . -2) (undo-tree-id80091 . -2) (undo-tree-id80092 . -2) (undo-tree-id80093 . -2) (undo-tree-id80094 . -2) (undo-tree-id80095 . -2) (undo-tree-id80096 . -2) (undo-tree-id80097 . -2) (undo-tree-id80098 . -2) (undo-tree-id80099 . -2) (undo-tree-id80100 . -2) (undo-tree-id80101 . -2) (undo-tree-id80102 . -2) (undo-tree-id80103 . -2) (undo-tree-id80104 . -2) (undo-tree-id80105 . -2) (undo-tree-id80106 . -2) (undo-tree-id80107 . -2) (undo-tree-id80108 . -2) (undo-tree-id80109 . -2) (undo-tree-id80110 . -2) (undo-tree-id80111 . -2) (undo-tree-id80112 . -2) (undo-tree-id80113 . -2) (undo-tree-id80114 . -2) (undo-tree-id80115 . -2) (undo-tree-id80116 . -2) (undo-tree-id80117 . -2) (undo-tree-id80118 . -2) (undo-tree-id80119 . -2) (undo-tree-id80120 . -2) (undo-tree-id80121 . -312) 8285 (t 25775 10723 989505 165000)) nil (25775 10736 390784 134000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 8283) (undo-tree-id79972 . 1) (undo-tree-id79973 . -1)) nil (25775 10745 411983 351000) 0 nil])
([nil nil ((8283 . 8921) (#("- It works very well in practice because the multiple heads help the model to capture information from different parts of the input, which is very similar to how the multiple kernels produce multiple channels in a convolutional network, where each channel can capture different feature information. Lastly, while multi-head attention sounds computationally expensive, note that the computation can all be done in parallel because there are no dependencies between the multiple heads.

- To summarize, multi-head self-attention is repeating the scaled dot-product attention computation multiple times in parallel and combining the results." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 53 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 53 54 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 54 157 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 157 158 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 158 255 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 255 256 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 256 348 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 348 350 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 350 356 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 356 357 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 357 455 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 455 456 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 456 482 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 482 483 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 483 484 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 484 485 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 485 486 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 486 487 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 487 584 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 584 585 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 585 638 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 8283) (undo-tree-id80262 . 153) (undo-tree-id80263 . -638) (undo-tree-id80264 . -638) (undo-tree-id80265 . -638) (undo-tree-id80266 . -638) (undo-tree-id80267 . -638) (undo-tree-id80268 . -515) (undo-tree-id80269 . -515) (undo-tree-id80270 . -515) (undo-tree-id80271 . -515) (undo-tree-id80272 . -515) (undo-tree-id80273 . -515) (undo-tree-id80274 . -515) (undo-tree-id80275 . -515) (undo-tree-id80276 . -515) (undo-tree-id80277 . -515) (undo-tree-id80278 . -515) (undo-tree-id80279 . -515) (undo-tree-id80280 . -515) (undo-tree-id80281 . -515) (undo-tree-id80282 . -515) (undo-tree-id80283 . -515) (undo-tree-id80284 . -515) (undo-tree-id80285 . -515) (undo-tree-id80286 . -515) (undo-tree-id80287 . -515) (undo-tree-id80288 . -515) (undo-tree-id80289 . -515) (undo-tree-id80290 . -515) (undo-tree-id80291 . -515) (undo-tree-id80292 . -515) (undo-tree-id80293 . -515) (undo-tree-id80294 . -515) (undo-tree-id80295 . -515) (undo-tree-id80296 . -515) (undo-tree-id80297 . -515) (undo-tree-id80298 . -515) (undo-tree-id80299 . -515) (undo-tree-id80300 . -515) (undo-tree-id80301 . -515) (undo-tree-id80302 . -515) (undo-tree-id80303 . -515) (undo-tree-id80304 . -515) (undo-tree-id80305 . -515) (undo-tree-id80306 . -515) (undo-tree-id80307 . -515) (undo-tree-id80308 . -515) (undo-tree-id80309 . -515) (undo-tree-id80310 . -515) (undo-tree-id80311 . -515) (undo-tree-id80312 . -515) (undo-tree-id80313 . -515) (undo-tree-id80314 . -515) (undo-tree-id80315 . -515) (undo-tree-id80316 . -515) (undo-tree-id80317 . -515) (undo-tree-id80318 . -515) (undo-tree-id80319 . -515) (undo-tree-id80320 . -515) (undo-tree-id80321 . -515) (undo-tree-id80322 . -515) (undo-tree-id80323 . -515) (undo-tree-id80324 . -515) (undo-tree-id80325 . -515) (undo-tree-id80326 . -515) (undo-tree-id80327 . -515) (undo-tree-id80328 . -637) (undo-tree-id80329 . -637) (undo-tree-id80330 . -637) (undo-tree-id80331 . -637) (undo-tree-id80332 . -637) (undo-tree-id80333 . -637) (undo-tree-id80334 . -637) (undo-tree-id80335 . -637) (undo-tree-id80336 . -637) (undo-tree-id80337 . -637) (undo-tree-id80338 . -637) (undo-tree-id80339 . -637) (undo-tree-id80340 . -637) (undo-tree-id80341 . -637) (undo-tree-id80342 . -637) (undo-tree-id80343 . -637) (undo-tree-id80344 . -638) (undo-tree-id80345 . -638) (undo-tree-id80346 . -638) (undo-tree-id80347 . -638) (undo-tree-id80348 . -638) (undo-tree-id80349 . -638) (undo-tree-id80350 . -638) (undo-tree-id80351 . -638) (undo-tree-id80352 . -638) (undo-tree-id80353 . -638) (undo-tree-id80354 . -638) (undo-tree-id80355 . -638) (undo-tree-id80356 . -638) (undo-tree-id80357 . -638) (undo-tree-id80358 . -638) (undo-tree-id80359 . -638) (undo-tree-id80360 . -638) (undo-tree-id80361 . -638) (undo-tree-id80362 . -638) (undo-tree-id80363 . -638) (undo-tree-id80364 . -638) (undo-tree-id80365 . -638) (undo-tree-id80366 . -638) (undo-tree-id80367 . -638) (undo-tree-id80368 . -485) (8283 . 8768) (#(" It works very well in practice because the multiple heads help the model to capture information from different parts of the input, which is very similar to how the multiple kernels produce multiple channels in a convolutional network, where each channel can capture different feature information. Lastly, while multi-head attention sounds computationally expensive, note that the computation can all be done in parallel because there are no dependencies between the multiple heads." 0 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 52 53 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 53 156 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 156 157 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 157 254 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 254 255 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 255 347 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 347 349 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 349 355 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 355 356 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 356 454 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 454 455 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 455 481 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 481 482 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 8436) (undo-tree-id80369 . -482) (undo-tree-id80370 . -454) (undo-tree-id80371 . -481) (undo-tree-id80372 . -355) (t 25775 10736 477699 885000)) nil (25775 10751 438768 429000) 0 nil] [nil nil ((#("- To summarize, multi-head self-attention is repeating the scaled dot-product attention computation multiple times in parallel and combining the results. It works very well in practice because the multiple heads help the model to capture information from different parts of the input, which is very similar to how the multiple kernels produce multiple channels in a convolutional network, where each channel can capture different feature information. Lastly, while multi-head attention sounds computationally expensive, note that the computation can all be done in parallel because there are no dependencies between the multiple heads.
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) composition (0 1 [8226])) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 99 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 99 100 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 100 205 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 205 206 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 206 309 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 309 310 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 310 407 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 407 408 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 408 500 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 500 502 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 502 508 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 508 509 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 509 607 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 607 608 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 608 634 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 634 635 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t) 635 636 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 8283) (undo-tree-id80122 . 636) (undo-tree-id80123 . -635) (undo-tree-id80124 . -607) (undo-tree-id80125 . -634) (undo-tree-id80126 . -508) (undo-tree-id80127 . -30) (undo-tree-id80128 . -30) (undo-tree-id80129 . -30) (undo-tree-id80130 . -30) (undo-tree-id80131 . -30) (undo-tree-id80132 . -30) (undo-tree-id80133 . -30) (undo-tree-id80134 . -30) (undo-tree-id80135 . -30) (undo-tree-id80136 . -30) (undo-tree-id80137 . -30) (undo-tree-id80138 . -30) (undo-tree-id80139 . -30) (undo-tree-id80140 . -30) (undo-tree-id80141 . -30) (undo-tree-id80142 . -30) (undo-tree-id80143 . -30) (undo-tree-id80144 . -30) (undo-tree-id80145 . -30) (undo-tree-id80146 . -636) 8313 (t 25775 10736 477699 885000)) ((8283 . 8919)) (25775 10745 411484 183000) 0 nil])
([nil nil ((8438 . 8924) (#("- Lastly, while multi-head attention sounds computationally expensive, note that the computation can all be done in parallel because there are no dependencies between the multiple heads.

- It works very well in practice because the multiple heads help the model to capture information from different parts of the input, which is very similar to how the multiple kernels produce multiple channels in a convolutional network, where each channel can capture different feature information." 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 2 48 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 48 51 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 51 53 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 53 59 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 59 60 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 60 158 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 158 159 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 159 185 (fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 185 186 (rear-nonsticky t fontified nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 186 187 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 187 188 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 188 189 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil composition (0 1 [8226])) 189 190 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 190 241 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 241 242 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 242 345 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 345 346 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 346 443 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil) 443 444 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 444 486 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil)) . 8438) (undo-tree-id80147 . 296) (undo-tree-id80148 . -486) (undo-tree-id80149 . -190) (undo-tree-id80150 . -190) (undo-tree-id80151 . -190) (undo-tree-id80152 . -190) (undo-tree-id80153 . -190) (undo-tree-id80154 . -190) (undo-tree-id80155 . -190) (undo-tree-id80156 . -190) (undo-tree-id80157 . -190) (undo-tree-id80158 . -190) (undo-tree-id80159 . -190) (undo-tree-id80160 . -190) (undo-tree-id80161 . -190) (undo-tree-id80162 . -190) (undo-tree-id80163 . -190) (undo-tree-id80164 . -190) (undo-tree-id80165 . -190) (undo-tree-id80166 . -190) (undo-tree-id80167 . -190) (undo-tree-id80168 . -190) (undo-tree-id80169 . -190) (undo-tree-id80170 . -190) (undo-tree-id80171 . -190) (undo-tree-id80172 . -190) (undo-tree-id80173 . -190) (undo-tree-id80174 . -190) (undo-tree-id80175 . -190) (undo-tree-id80176 . -189) (undo-tree-id80177 . -189) (undo-tree-id80178 . -189) (undo-tree-id80179 . -189) (undo-tree-id80180 . -189) (undo-tree-id80181 . -189) (undo-tree-id80182 . -189) (undo-tree-id80183 . -189) (undo-tree-id80184 . -189) (undo-tree-id80185 . -189) (undo-tree-id80186 . -189) (undo-tree-id80187 . -189) (undo-tree-id80188 . -189) (undo-tree-id80189 . -189) (undo-tree-id80190 . -189) (undo-tree-id80191 . -189) (undo-tree-id80192 . -189) (undo-tree-id80193 . -189) (undo-tree-id80194 . -189) (undo-tree-id80195 . -189) (undo-tree-id80196 . -189) (undo-tree-id80197 . -189) (undo-tree-id80198 . -189) (undo-tree-id80199 . -189) (undo-tree-id80200 . -189) (undo-tree-id80201 . -189) (undo-tree-id80202 . -189) (undo-tree-id80203 . -189) (undo-tree-id80204 . -189) (undo-tree-id80205 . -189) (undo-tree-id80206 . -189) (undo-tree-id80207 . -189) (undo-tree-id80208 . -189) (undo-tree-id80209 . -189) (undo-tree-id80210 . -189) (undo-tree-id80211 . -189) (undo-tree-id80212 . -189) (undo-tree-id80213 . -189) (undo-tree-id80214 . -189) (undo-tree-id80215 . -189) (undo-tree-id80216 . -189) (undo-tree-id80217 . -189) (undo-tree-id80218 . -189) (undo-tree-id80219 . -189) (undo-tree-id80220 . -189) (undo-tree-id80221 . -485) (undo-tree-id80222 . -485) (undo-tree-id80223 . -485) (undo-tree-id80224 . -485) (undo-tree-id80225 . -485) (undo-tree-id80226 . -485) (undo-tree-id80227 . -485) (undo-tree-id80228 . -485) (undo-tree-id80229 . -485) (undo-tree-id80230 . -485) (undo-tree-id80231 . -485) (undo-tree-id80232 . -485) (undo-tree-id80233 . -485) (undo-tree-id80234 . -485) (undo-tree-id80235 . -485) (undo-tree-id80236 . -485) (undo-tree-id80237 . -486) (undo-tree-id80238 . -486) (undo-tree-id80239 . -486) (undo-tree-id80240 . -486) (undo-tree-id80241 . -486) (undo-tree-id80242 . -486) (undo-tree-id80243 . -486) (undo-tree-id80244 . -486) (undo-tree-id80245 . -486) (undo-tree-id80246 . -486) (undo-tree-id80247 . -486) (undo-tree-id80248 . -486) (undo-tree-id80249 . -486) (undo-tree-id80250 . -486) (undo-tree-id80251 . -486) (undo-tree-id80252 . -486) (undo-tree-id80253 . -486) (undo-tree-id80254 . -486) (undo-tree-id80255 . -486) (undo-tree-id80256 . -486) (undo-tree-id80257 . -486) (undo-tree-id80258 . -486) (undo-tree-id80259 . -486) (undo-tree-id80260 . -486) (undo-tree-id80261 . -188) (8438 . 8626) (#(" Lastly, while multi-head attention sounds computationally expensive, note that the computation can all be done in parallel because there are no dependencies between the multiple heads." 0 47 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 47 50 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 50 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 52 58 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 58 59 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 59 157 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 157 158 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 158 184 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t) 184 185 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t)) . 8736)) nil (25775 10751 438656 896000) 0 nil])
nil
([nil nil ((#("To summarize," 0 13 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 8285) (undo-tree-id80396 . -12) (undo-tree-id80397 . -13) (t 25775 10751 525934 689000)) nil (25775 10760 145150 775000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 8285) (undo-tree-id80373 . -1) (undo-tree-id80374 . -1) (undo-tree-id80375 . -1) (undo-tree-id80376 . -1) (undo-tree-id80377 . -1) (undo-tree-id80378 . -1) (undo-tree-id80379 . -1) (undo-tree-id80380 . -1) (undo-tree-id80381 . -1) (undo-tree-id80382 . -1) (undo-tree-id80383 . -1) (undo-tree-id80384 . -1) (undo-tree-id80385 . -1) (undo-tree-id80386 . -1) (undo-tree-id80387 . -1) (undo-tree-id80388 . -1) (undo-tree-id80389 . -1) (undo-tree-id80390 . -1) (undo-tree-id80391 . -1) (undo-tree-id80392 . -1) (undo-tree-id80393 . -1) (undo-tree-id80394 . -1) (undo-tree-id80395 . -1)) nil (25775 10760 145146 217000) 0 nil])
([nil nil ((8285 . 8286) (#("m" 0 1 (fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 8285)) nil (25775 10760 145116 466000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 7187) (undo-tree-id80398 . -1) (undo-tree-id80399 . -1) (undo-tree-id80400 . -1) (undo-tree-id80401 . -1) (undo-tree-id80402 . -1) (undo-tree-id80403 . -1) (undo-tree-id80404 . -1) (undo-tree-id80405 . -1) (t 25775 10760 234070 645000)) nil (25775 10801 343336 313000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) composition (0 1 [8226]))) . 83) (undo-tree-id80429 . -1) (undo-tree-id80430 . -1) (undo-tree-id80431 . -1) (undo-tree-id80432 . -1) (undo-tree-id80433 . -1) (undo-tree-id80434 . -1) (undo-tree-id80435 . -1) (undo-tree-id80436 . -1) (undo-tree-id80437 . -1) (undo-tree-id80438 . -1) (undo-tree-id80439 . -1) (undo-tree-id80440 . -1) (undo-tree-id80441 . -1) (undo-tree-id80442 . -1) (undo-tree-id80443 . -1) (undo-tree-id80444 . -1) (undo-tree-id80445 . -1) (undo-tree-id80446 . -1) (t 25775 10801 434714 675000)) nil (25775 16442 905156 907000) 0 nil])
([nil current ((#(" " 0 1 (wrap-prefix #("   " 0 2 (face org-indent) 2 3 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 83) (undo-tree-id80406 . -1) (undo-tree-id80407 . -1) (undo-tree-id80408 . -1) (undo-tree-id80409 . -1) (undo-tree-id80410 . -1) (undo-tree-id80411 . -1) (undo-tree-id80412 . -1) (undo-tree-id80413 . -1) (undo-tree-id80414 . -1) (undo-tree-id80415 . -1) (undo-tree-id80416 . -1) (undo-tree-id80417 . -1) (undo-tree-id80418 . -1) (undo-tree-id80419 . -1) (undo-tree-id80420 . -1) (undo-tree-id80421 . -1) (undo-tree-id80422 . -1) (undo-tree-id80423 . -1) (undo-tree-id80424 . -1) (undo-tree-id80425 . -1) (undo-tree-id80426 . -1) (undo-tree-id80427 . -1) (undo-tree-id80428 . -1)) nil (25775 16442 905138 12000) 0 nil])
nil
