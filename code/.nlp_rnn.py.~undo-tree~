(undo-tree-save-format-version . 1)
"5551fa5558e190b83647b29e11db4d76e69713d1"
[nil nil nil nil (25759 39481 556930 654000) 0 nil]
([nil nil ((#(" " 0 1 (fontified t)) . -2) (undo-tree-id1 . -1) 3 (1 . 3) (t 25759 39481 557365 616000)) nil (25759 39486 940161 185000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 1) (undo-tree-id0 . -1)) nil (25759 39486 940155 661000) 0 nil])
([nil nil ((1 . 2) (t 25759 39486 945161 471000)) nil (25759 39494 846598 592000) 0 nil])
([nil nil ((20 . 21) (15 . 20) (14 . 15) (13 . 14) (#("y" 0 1 (fontified t)) . -13) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#(" " 0 1 (fontified t)) . -14) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("a" 0 1 (fontified t)) . -15) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . -16) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#(" " 0 1 (fontified t)) . -17) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#("n" 0 1 (fontified t)) . -18) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) 19 (15 . 19) (14 . 15) (8 . 14) (2 . 8) (#("i" 0 1 (fontified nil)) . -2) (2 . 3) (#("import" 0 6 (fontified nil)) . -2) (2 . 8) (#("imp" 0 3 (fontified t)) . -2) (undo-tree-id205 . -3) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -3) (undo-tree-id215 . -3) (undo-tree-id216 . -3) (undo-tree-id217 . -3) (undo-tree-id218 . -3) (undo-tree-id219 . -3) (undo-tree-id220 . -3) (undo-tree-id221 . -3) (undo-tree-id222 . -3) 5 (2 . 5) (t 25759 39494 848866 829000)) nil (25759 39511 30022 637000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (t 25759 39511 36280 925000)) nil (25759 39514 807263 139000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1561 . 1562) (nil fontified nil 20 . 1562) (20 . 1562) (t 25759 39514 812147 597000)) nil (25759 39575 485703 634000) 0 nil])
([nil nil ((#("# Python ≥3.5 is required
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 26 (fontified t face font-lock-comment-face)) . 20) (undo-tree-id489 . -25) (undo-tree-id490 . -26)) nil (25759 39575 485701 754000) 0 nil])
([nil nil ((#("import sys
" 0 6 (fontified t face font-lock-keyword-face) 6 10 (fontified t) 10 11 (fontified t)) . 20) (undo-tree-id486 . -10) (undo-tree-id487 . -10) (undo-tree-id488 . -11)) nil (25759 39575 485699 262000) 0 nil])
([nil nil ((#("assert sys.version_info >= (3, 5)
" 0 6 (fontified t face font-lock-keyword-face) 6 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-1-face)) 28 32 (fontified t) 32 33 (fontified t face (rainbow-delimiters-depth-1-face)) 33 34 (fontified t)) . 20) (undo-tree-id483 . -33) (undo-tree-id484 . -33) (undo-tree-id485 . -34)) nil (25759 39575 485695 880000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20) (undo-tree-id482 . -1)) nil (25759 39575 485692 945000) 0 nil])
([nil nil ((#("# Is this notebook running on Colab or Kaggle?
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 46 (fontified t face font-lock-comment-face) 46 47 (fontified t face font-lock-comment-face)) . 20) (undo-tree-id475 . -46) (undo-tree-id476 . -47) (undo-tree-id477 . -47) (undo-tree-id478 . -47) (undo-tree-id479 . -47) (undo-tree-id480 . -46) (undo-tree-id481 . -47)) nil (25759 39575 485691 16000) 0 nil])
([nil nil ((#("IS_COLAB = \"google.colab\" in sys.modules
" 0 8 (fontified t face font-lock-variable-name-face) 8 11 (fontified t) 11 25 (fontified t face font-lock-string-face) 25 26 (fontified t) 26 28 (fontified t face font-lock-keyword-face) 28 40 (fontified t) 40 41 (fontified t)) . 20) (undo-tree-id465 . -40) (undo-tree-id466 . -11) (undo-tree-id467 . -41) (undo-tree-id468 . -41) (undo-tree-id469 . -11) (undo-tree-id470 . -41) (undo-tree-id471 . -41) (undo-tree-id472 . -11) (undo-tree-id473 . -40) (undo-tree-id474 . -41)) nil (25759 39575 485680 833000) 0 nil])
([nil nil ((#("IS_KAGGLE = \"kaggle_secrets\" in sys.modules
" 0 9 (fontified t face font-lock-variable-name-face) 9 12 (fontified t) 12 28 (fontified t face font-lock-string-face) 28 29 (fontified t) 29 31 (fontified t face font-lock-keyword-face) 31 43 (fontified t) 43 44 (fontified t)) . 20) (undo-tree-id459 . -43) (undo-tree-id460 . -12) (undo-tree-id461 . -12) (undo-tree-id462 . -12) (undo-tree-id463 . -43) (undo-tree-id464 . -44)) nil (25759 39575 485669 735000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20) (undo-tree-id458 . -1)) nil (25759 39575 485664 246000) 0 nil])
([nil nil ((#("# Scikit-Learn ≥0.20 is required
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 32 (fontified t face font-lock-comment-face) 32 33 (fontified t face font-lock-comment-face)) . 20) (undo-tree-id455 . -32) (undo-tree-id456 . -32) (undo-tree-id457 . -33)) nil (25759 39575 485662 422000) 0 nil])
([nil nil ((#("assert sklearn.__version__ >= \"0.20\"
" 0 6 (fontified t face font-lock-keyword-face) 6 30 (fontified t) 30 36 (fontified t face font-lock-string-face) 36 37 (fontified t)) . 35) (undo-tree-id453 . -36) (undo-tree-id454 . -37)) nil (25759 39575 485656 441000) 0 nil])
([nil nil ((#("# TensorFlow ≥2.0 is required
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 30 (fontified t face font-lock-comment-face)) . 36) (undo-tree-id451 . -29) (undo-tree-id452 . -30)) nil (25759 39575 485110 740000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 35) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1)) nil (25759 39575 485107 691000) 0 nil])
([nil nil ((#("assert tf.__version__ >= \"2.0\"
" 0 6 (fontified t face font-lock-keyword-face) 6 25 (fontified t) 25 30 (fontified t face font-lock-string-face) 30 31 (fontified t)) . 88) (undo-tree-id439 . -30) (undo-tree-id440 . -31)) nil (25759 39575 485100 640000) 0 nil])
([nil nil ((#("if not tf.config.list_physical_devices('GPU'):
    print(\"No GPU was detected. LSTMs and CNNs can be very slow without a GPU.\")
    if IS_COLAB:
        print(\"Go to Runtime > Change runtime and select a GPU hardware accelerator.\")
    if IS_KAGGLE:
        print(\"Go to Settings > Accelerator and select GPU.\")

#" 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 6 (fontified t face font-lock-keyword-face) 6 38 (fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-1-face)) 39 44 (fontified t face font-lock-string-face) 44 45 (fontified t face (rainbow-delimiters-depth-1-face)) 45 51 (fontified t) 51 56 (fontified t face font-lock-keyword-face) 56 57 (fontified t face (rainbow-delimiters-depth-1-face)) 57 94 (fontified t face font-lock-string-face) 94 126 (fontified t face font-lock-string-face) 126 127 (fontified t face (rainbow-delimiters-depth-1-face)) 127 128 (fontified t) 128 131 (fontified t) 131 132 (fontified t) 132 134 (fontified t face font-lock-keyword-face) 134 145 (fontified t) 145 153 (fontified t) 153 158 (fontified t face font-lock-keyword-face) 158 159 (fontified t face (rainbow-delimiters-depth-1-face)) 159 230 (fontified t face font-lock-string-face) 230 231 (fontified t face (rainbow-delimiters-depth-1-face)) 231 236 (fontified t) 236 238 (fontified t face font-lock-keyword-face) 238 258 (fontified t) 258 263 (fontified t face font-lock-keyword-face) 263 264 (fontified t face (rainbow-delimiters-depth-1-face)) 264 310 (fontified t face font-lock-string-face) 310 311 (fontified t face (rainbow-delimiters-depth-1-face)) 311 313 (fontified t) 313 314 (fontified t face font-lock-comment-delimiter-face)) . 89) (undo-tree-id382 . -313) (undo-tree-id383 . -313) (undo-tree-id384 . -313) (undo-tree-id385 . -51) (undo-tree-id386 . -51) (undo-tree-id387 . -153) (undo-tree-id388 . -153) (undo-tree-id389 . -258) (undo-tree-id390 . -258) (undo-tree-id391 . -51) (undo-tree-id392 . -51) (undo-tree-id393 . -153) (undo-tree-id394 . -153) (undo-tree-id395 . -258) (undo-tree-id396 . -258) (undo-tree-id397 . -51) (undo-tree-id398 . -51) (undo-tree-id399 . -153) (undo-tree-id400 . -153) (undo-tree-id401 . -258) (undo-tree-id402 . -258) (undo-tree-id403 . -51) (undo-tree-id404 . -51) (undo-tree-id405 . -153) (undo-tree-id406 . -153) (undo-tree-id407 . -258) (undo-tree-id408 . -258) (undo-tree-id409 . -51) (undo-tree-id410 . -51) (undo-tree-id411 . -153) (undo-tree-id412 . -153) (undo-tree-id413 . -258) (undo-tree-id414 . -258) (undo-tree-id415 . -51) (undo-tree-id416 . -51) (undo-tree-id417 . -153) (undo-tree-id418 . -153) (undo-tree-id419 . -258) (undo-tree-id420 . -258) (undo-tree-id421 . -314) (undo-tree-id422 . -313) (undo-tree-id423 . -47) (undo-tree-id424 . -128) (undo-tree-id425 . -145) (undo-tree-id426 . -228) (undo-tree-id427 . -232) (undo-tree-id428 . -250) (undo-tree-id429 . -312) (undo-tree-id430 . -313) (undo-tree-id431 . -313) (undo-tree-id432 . -313) (undo-tree-id433 . -313) (undo-tree-id434 . -313) (undo-tree-id435 . -313) (undo-tree-id436 . -313) (undo-tree-id437 . -313) (undo-tree-id438 . -314) 402) nil (25759 39575 485096 386000) 0 nil])
([nil nil ((#(" Common imports
" 0 1 (fontified t) 1 16 (fontified t)) . 89) (undo-tree-id379 . -15) (undo-tree-id380 . 16) (undo-tree-id381 . -16)) nil (25759 39575 484966 156000) 0 nil])
([nil nil ((#("import numpy as np
" 0 2 (fontified t face font-lock-keyword-face) 2 6 (fontified t face font-lock-keyword-face) 6 13 (fontified t) 13 15 (fontified t face font-lock-keyword-face) 15 18 (fontified t) 18 19 (fontified t)) . 89) (undo-tree-id375 . -18) (undo-tree-id376 . 19) (undo-tree-id377 . -18) (undo-tree-id378 . -19)) nil (25759 39575 484960 983000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 88) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1)) nil (25759 39575 484946 167000) 0 nil])
([nil nil ((#("import os
" 0 6 (fontified t face font-lock-keyword-face) 6 9 (fontified t) 9 10 (fontified t)) . 88) (undo-tree-id262 . -9) (undo-tree-id263 . 10) (undo-tree-id264 . -9) (undo-tree-id265 . -9) (undo-tree-id266 . -10)) nil (25759 39575 484457 372000) 0 nil])
([nil nil ((#("# to make this notebook's output stable across runs
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 52 (fontified t face font-lock-comment-face)) . 114) (undo-tree-id260 . -51) (undo-tree-id261 . -52)) nil (25759 39575 484453 282000) 0 nil])
([nil nil ((#("# To plot pretty figures
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 20 (fontified t face font-lock-comment-face) 20 25 (fontified t face font-lock-comment-face)) . 157) (undo-tree-id258 . -24) (undo-tree-id259 . -25)) nil (25759 39575 484451 204000) 0 nil])
([nil nil ((#("%matplotlib inline
" 0 18 (fontified t) 18 19 (fontified t)) . 157) (undo-tree-id253 . -18) (undo-tree-id254 . -1) (undo-tree-id255 . -11) (undo-tree-id256 . -18) (undo-tree-id257 . -19)) nil (25759 39575 484447 706000) 0 nil])
([nil nil ((769 . 770)) nil (25759 39575 484433 673000) 0 nil])
([nil nil ((#("# Where to save the figures
PROJECT_ROOT_DIR = \".\"
CHAPTER_ID = \"rnn\"
IMAGES_PATH = os.path.join(PROJECT_ROOT_DIR, \"images\", CHAPTER_ID)
os.makedirs(IMAGES_PATH, exist_ok=True)

def save_fig(fig_id, tight_layout=True, fig_extension=\"png\", resolution=300):
    path = os.path.join(IMAGES_PATH, fig_id + \".\" + fig_extension)
    print(\"Saving figure\", fig_id)
    if tight_layout:
        plt.tight_layout()
    plt.savefig(path, format=fig_extension, dpi=resolution)
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 28 (fontified t face font-lock-comment-face) 28 44 (fontified t face font-lock-variable-name-face) 44 47 (fontified t) 47 50 (fontified t face font-lock-string-face) 50 51 (fontified t) 51 61 (fontified t face font-lock-variable-name-face) 61 64 (fontified t) 64 69 (fontified t face font-lock-string-face) 69 70 (fontified t) 70 81 (fontified t face font-lock-variable-name-face) 81 96 (fontified t) 96 97 (fontified t face (rainbow-delimiters-depth-1-face)) 97 115 (fontified t) 115 123 (fontified t face font-lock-string-face) 123 135 (fontified t) 135 136 (fontified t face (rainbow-delimiters-depth-1-face)) 136 148 (fontified t) 148 149 (fontified t face (rainbow-delimiters-depth-1-face)) 149 159 (fontified t) 159 171 (fontified t) 171 175 (fontified t face font-lock-constant-face) 175 176 (fontified t face (rainbow-delimiters-depth-1-face)) 176 177 (fontified t) 177 178 (fontified t) 178 181 (fontified t face font-lock-keyword-face) 181 182 (fontified t) 182 188 (fontified t face font-lock-function-name-face) 188 190 (fontified t face font-lock-function-name-face) 190 191 (fontified t face (rainbow-delimiters-depth-1-face)) 191 212 (fontified t) 212 213 (fontified t face font-lock-constant-face) 213 214 (fontified t face font-lock-constant-face) 214 216 (fontified t face font-lock-constant-face) 216 232 (fontified t) 232 237 (fontified t face font-lock-string-face) 237 253 (fontified t) 253 254 (fontified t face (rainbow-delimiters-depth-1-face)) 254 256 (fontified t) 256 260 (fontified t) 260 264 (fontified t face font-lock-variable-name-face) 264 279 (fontified t) 279 280 (fontified t face (rainbow-delimiters-depth-1-face)) 280 285 (fontified t) 285 302 (fontified t) 302 305 (fontified t face font-lock-string-face) 305 321 (fontified t) 321 322 (fontified t face (rainbow-delimiters-depth-1-face)) 322 323 (fontified t) 323 327 (fontified t) 327 332 (fontified t face font-lock-keyword-face) 332 333 (fontified t face (rainbow-delimiters-depth-1-face)) 333 334 (fontified t face font-lock-string-face) 334 348 (fontified t face font-lock-string-face) 348 353 (fontified t) 353 356 (fontified t) 356 357 (fontified t face (rainbow-delimiters-depth-1-face)) 357 358 (fontified t) 358 362 (fontified t) 362 364 (fontified t face font-lock-keyword-face) 364 378 (fontified t) 378 379 (fontified t) 379 403 (fontified t) 403 404 (fontified t face (rainbow-delimiters-depth-1-face)) 404 405 (fontified t face (rainbow-delimiters-depth-1-face)) 405 406 (fontified t) 406 421 (fontified t) 421 422 (fontified t face (rainbow-delimiters-depth-1-face)) 422 428 (fontified t) 428 434 (fontified t face font-lock-builtin-face) 434 464 (fontified t) 464 465 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face)) 465 466 (fontified t)) . 304) (undo-tree-id491 . -465) (undo-tree-id492 . -406) (undo-tree-id493 . -464) (undo-tree-id494 . -464) (undo-tree-id495 . -406) (undo-tree-id496 . -84) (undo-tree-id497 . -86) (undo-tree-id498 . -137) (undo-tree-id499 . -139) (undo-tree-id500 . -178) (undo-tree-id501 . -181) (undo-tree-id502 . -267) (undo-tree-id503 . -269) (undo-tree-id504 . -28) (undo-tree-id505 . -28) (undo-tree-id506 . -28) (undo-tree-id507 . -28) (undo-tree-id508 . -28) (undo-tree-id509 . -28) (undo-tree-id510 . -28) (undo-tree-id511 . -28) (undo-tree-id512 . -466) (undo-tree-id513 . -406) (undo-tree-id514 . -28) (undo-tree-id515 . -28) (undo-tree-id516 . -28) (undo-tree-id517 . -28) (undo-tree-id518 . -28) (undo-tree-id519 . -28) (undo-tree-id520 . -28) (undo-tree-id521 . -28) (undo-tree-id522 . -51) (undo-tree-id523 . -70) (undo-tree-id524 . -137) (undo-tree-id525 . -177) (undo-tree-id526 . -178) (undo-tree-id527 . -256) (undo-tree-id528 . -323) (undo-tree-id529 . -358) (undo-tree-id530 . -379) (undo-tree-id531 . -406) (undo-tree-id532 . -406) (undo-tree-id533 . -406) (undo-tree-id534 . -406) (undo-tree-id535 . -406) (undo-tree-id536 . -406) (undo-tree-id537 . -406) (undo-tree-id538 . -466) 710 (t 25759 39575 486169 140000)) nil (25759 39604 555334 130000) 0 nil])
([nil nil ((#("
np.random.seed(42)
tf.random.set_seed(42)
" 0 1 (fontified t) 1 3 (fontified t) 3 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-1-face)) 16 18 (fontified t) 18 19 (fontified t face (rainbow-delimiters-depth-1-face)) 19 20 (fontified t) 20 38 (fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-1-face)) 39 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-1-face)) 42 43 (fontified t)) . 113) (undo-tree-id656 . -42) (undo-tree-id657 . -43) (undo-tree-id658 . -20) (undo-tree-id659 . -1) (undo-tree-id660 . -12) (undo-tree-id661 . -12) (undo-tree-id662 . -12) (undo-tree-id663 . -12) (undo-tree-id664 . -31) (undo-tree-id665 . -31) (undo-tree-id666 . -31) (undo-tree-id667 . -43) (undo-tree-id668 . -43) (undo-tree-id669 . -43) (undo-tree-id670 . -31) (undo-tree-id671 . -12) (undo-tree-id672 . -43) (t 25759 39585 397873 907000)) nil (25759 39611 453700 19000) 0 nil] [nil nil ((#("
np.random.seed(42)
tf.random.set_seed(42)

import matplotlib as mpl
import matplotlib.pyplot as plt
mpl.rc('axes', labelsize=14)
mpl.rc('xtick', labelsize=12)
mpl.rc('ytick', labelsize=12)

" 0 1 (fontified t) 1 3 (fontified t) 3 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-1-face)) 16 18 (fontified t) 18 19 (fontified t face (rainbow-delimiters-depth-1-face)) 19 20 (fontified t) 20 38 (fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-1-face)) 39 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-1-face)) 42 44 (fontified t) 44 50 (fontified t face font-lock-keyword-face) 50 62 (fontified t) 62 64 (fontified t face font-lock-keyword-face) 64 68 (fontified t) 68 69 (fontified t) 69 75 (fontified t face font-lock-keyword-face) 75 94 (fontified t) 94 96 (fontified t face font-lock-keyword-face) 96 107 (fontified t) 107 108 (fontified t face (rainbow-delimiters-depth-1-face)) 108 114 (fontified t face font-lock-string-face) 114 128 (fontified t) 128 129 (fontified t face (rainbow-delimiters-depth-1-face)) 129 136 (fontified t) 136 137 (fontified t face (rainbow-delimiters-depth-1-face)) 137 144 (fontified t face font-lock-string-face) 144 148 (fontified t) 148 158 (fontified t) 158 159 (fontified t face (rainbow-delimiters-depth-1-face)) 159 160 (fontified t) 160 165 (fontified t) 165 166 (fontified t) 166 167 (fontified t face (rainbow-delimiters-depth-1-face)) 167 174 (fontified t face font-lock-string-face) 174 188 (fontified t) 188 189 (fontified t face (rainbow-delimiters-depth-1-face)) 189 190 (fontified t) 190 191 (fontified t)) . 113) (undo-tree-id539 . -190) (undo-tree-id540 . -191) (undo-tree-id541 . -191) (undo-tree-id542 . -191) (undo-tree-id543 . -191) (undo-tree-id544 . -191) (undo-tree-id545 . -191) (undo-tree-id546 . -191) (undo-tree-id547 . -191) (undo-tree-id548 . -191) (undo-tree-id549 . -191) (undo-tree-id550 . -191) (undo-tree-id551 . -191) (undo-tree-id552 . -191) (undo-tree-id553 . -191) (undo-tree-id554 . -191) (undo-tree-id555 . -191) (undo-tree-id556 . -191) (undo-tree-id557 . -191) (undo-tree-id558 . -191) (undo-tree-id559 . -191) (undo-tree-id560 . -191) (undo-tree-id561 . -191) (undo-tree-id562 . -191) (undo-tree-id563 . -191) (undo-tree-id564 . -191) (undo-tree-id565 . -191) (undo-tree-id566 . -191) (undo-tree-id567 . -191) (undo-tree-id568 . -191) (undo-tree-id569 . -191) (undo-tree-id570 . -191) (undo-tree-id571 . -191) (undo-tree-id572 . -191) (undo-tree-id573 . -191) (undo-tree-id574 . -191) (undo-tree-id575 . -191) (undo-tree-id576 . -191) (undo-tree-id577 . -44) (undo-tree-id578 . -50) (undo-tree-id579 . -69) (undo-tree-id580 . -75) (undo-tree-id581 . -69) (undo-tree-id582 . -75) (undo-tree-id583 . -190) (undo-tree-id584 . -191) (undo-tree-id585 . -191) (undo-tree-id586 . -191) (undo-tree-id587 . -191) (undo-tree-id588 . -190) (undo-tree-id589 . -190) (undo-tree-id590 . -160) (undo-tree-id591 . -160) (undo-tree-id592 . -160) (undo-tree-id593 . -160) (undo-tree-id594 . -160) (undo-tree-id595 . -160) (undo-tree-id596 . -160) (undo-tree-id597 . -160) (undo-tree-id598 . -160) (undo-tree-id599 . -130) (undo-tree-id600 . -101) (undo-tree-id601 . -69) (undo-tree-id602 . -44) (undo-tree-id603 . -43) (undo-tree-id604 . -20) (undo-tree-id605 . -1) (undo-tree-id606 . -12) (undo-tree-id607 . -12) (undo-tree-id608 . -12) (undo-tree-id609 . -12) (undo-tree-id610 . -44) (undo-tree-id611 . -50) (undo-tree-id612 . -69) (undo-tree-id613 . -75) (undo-tree-id614 . -69) (undo-tree-id615 . -75) (undo-tree-id616 . -190) (undo-tree-id617 . -191) (undo-tree-id618 . -31) (undo-tree-id619 . -31) (undo-tree-id620 . -31) (undo-tree-id621 . -43) (undo-tree-id622 . -55) (undo-tree-id623 . -55) (undo-tree-id624 . -55) (undo-tree-id625 . -55) (undo-tree-id626 . -55) (undo-tree-id627 . -55) (undo-tree-id628 . -55) (undo-tree-id629 . -55) (undo-tree-id630 . -55) (undo-tree-id631 . -55) (undo-tree-id632 . -55) (undo-tree-id633 . -55) (undo-tree-id634 . -55) (undo-tree-id635 . -55) (undo-tree-id636 . -55) (undo-tree-id637 . -55) (undo-tree-id638 . -55) (undo-tree-id639 . -55) (undo-tree-id640 . -55) (undo-tree-id641 . -55) (undo-tree-id642 . -43) (undo-tree-id643 . -43) (undo-tree-id644 . -31) (undo-tree-id645 . -12) (undo-tree-id646 . -191) (t 25759 39585 397873 907000)) ((113 . 304)) (25759 39604 554756 134000) 0 nil])
([nil nil ((nil rear-nonsticky nil 260 . 261) (#("
" 0 1 (fontified nil)) . -303) (260 . 304)) nil (25759 39611 453685 96000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 113) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1)) nil (25759 39611 453680 20000) 0 nil])
([nil nil ((nil rear-nonsticky nil 742 . 743) (nil fontified nil 303 . 743) (303 . 743) (t 25759 39611 457132 868000)) nil (25759 39670 946083 333000) 0 nil])
([nil nil ((1 . 3) (1 . 2) 18) nil (25759 39670 946081 55000) 0 nil])
([nil nil ((746 . 747)) nil (25759 39670 946074 753000) 0 nil])
([nil nil ((305 . 306) (t 25759 39670 955620 508000) 283) nil (25759 39985 61192 132000) 0 nil])
([nil nil ((748 . 749) (t 25759 39985 62864 930000) 748) nil (25759 40077 514892 842000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1002 . 1003) (nil fontified nil 749 . 1003) (749 . 1003)) nil (25759 40077 514890 930000) 0 nil])
([nil nil ((1003 . 1004)) nil (25759 40077 514885 399000) 0 nil])
([nil nil ((1004 . 1005) (t 25759 40077 522230 163000)) nil (25759 40253 343191 642000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1032 . 1033) (nil fontified nil 1005 . 1033) (1005 . 1033)) nil (25759 40253 343190 455000) 0 nil])
([nil nil ((1005 . 1011)) nil (25759 40253 343189 55000) 0 nil])
([nil nil ((1039 . 1040)) nil (25759 40253 343187 685000) 0 nil])
([nil nil ((1040 . 1041)) nil (25759 40253 343182 846000) 0 nil])
([nil nil ((1041 . 1042) (1040 . 1041) (t 25759 40253 349674 30000) 1039) nil (25759 40255 921177 139000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1942 . 1943) (nil fontified nil 1043 . 1943) (1043 . 1943) (t 25759 40255 969671 136000)) nil (25759 40353 147642 826000) 0 nil])
([nil nil ((#("save_fig(\"time_series_plot\")
" 0 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-1-face)) 9 27 (fontified t face font-lock-string-face) 27 28 (fontified t face (rainbow-delimiters-depth-1-face)) 28 29 (fontified t)) . 1904) (undo-tree-id673 . -28) (undo-tree-id674 . -28) (undo-tree-id675 . -27) (undo-tree-id676 . 2) (undo-tree-id677 . -28) (undo-tree-id678 . 21) (undo-tree-id679 . -9) (undo-tree-id680 . -8) (undo-tree-id681 . -28) (undo-tree-id682 . -28) (undo-tree-id683 . -27) (undo-tree-id684 . -27) (undo-tree-id685 . -27) (undo-tree-id686 . -27) (undo-tree-id687 . -27) (undo-tree-id688 . -27) (undo-tree-id689 . -27) (undo-tree-id690 . -29) 1931) nil (25759 40353 147639 517000) 0 nil])
([nil nil ((1914 . 1915)) nil (25759 40353 147615 720000) 0 nil])
([nil nil ((1551 . 1552) (#("-" 0 1 (fontified t)) . 1551) (undo-tree-id691 . -1) (t 25759 40353 197657 182000)) nil (25759 40423 561394 575000) 0 nil])
([nil nil ((1915 . 1916) (t 25759 40423 569748 734000) 1915) nil (25759 40652 391150 615000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1996 . 1997) (nil fontified nil 1916 . 1997) (1916 . 1997)) nil (25759 40652 391148 879000) 0 nil])
([nil nil ((1997 . 1998)) nil (25759 40652 391143 349000) 0 nil])
([nil nil ((1998 . 1999) (1997 . 1998) (t 25759 40652 398504 652000) 1996) nil (25759 40654 448892 731000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2067 . 2068) (nil fontified nil 1999 . 2068) (1999 . 2068) (t 25759 40654 450514 32000)) nil (25759 40704 598014 517000) 0 nil])
([nil nil ((2068 . 2070)) nil (25759 40704 598012 850000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2371 . 2372) (nil fontified nil 2070 . 2372) (2070 . 2372)) nil (25759 40704 598007 765000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2404 . 2405) (nil fontified nil 2373 . 2405) (2373 . 2405) (t 25759 40704 606755 186000)) nil (25759 40741 583582 766000) 0 nil])
([nil nil ((2372 . 2373) 2348) nil (25759 40741 583581 400000) 0 nil])
([nil nil ((2373 . 2374) 2373) nil (25759 40741 583579 858000) 0 nil])
([nil nil ((2407 . 2408)) nil (25759 40741 583574 805000) 0 nil])
([nil nil ((2408 . 2410) (2407 . 2408) (t 25759 40741 590946 835000) 2375) nil (25759 40744 354175 282000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2902 . 2903) (nil fontified nil 2411 . 2903) (2411 . 2903) (t 25759 40744 362961 645000)) nil (25759 40767 93091 330000) 0 nil])
([nil nil ((2903 . 2904)) nil (25759 40767 93085 689000) 0 nil])
([nil nil ((2904 . 2905) (t 25759 40767 99085 369000)) nil (25759 40804 279967 932000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3005 . 3006) (nil fontified nil 2905 . 3006) (2905 . 3006)) nil (25759 40804 279966 397000) 0 nil])
([nil nil ((3006 . 3007)) nil (25759 40804 279960 998000) 0 nil])
([nil nil ((10 . 20) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -10) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) 11 (2 . 11) (t 25759 40804 287296 45000)) nil (25759 40852 13981 579000) 0 nil])
([nil nil ((19 . 20)) nil (25759 40852 13974 223000) 0 nil])
([nil nil ((282 . 283)) nil (25759 40852 13973 483000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 282) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1)) nil (25759 40852 13971 409000) 0 nil])
([nil nil ((nil rear-nonsticky nil 360 . 361) (nil fontified nil 360 . 361) (360 . 361) (nil rear-nonsticky nil 359 . 360) (nil fontified nil 359 . 360) (359 . 360) (nil rear-nonsticky nil 358 . 359) (nil fontified nil 358 . 359) (358 . 359) (nil rear-nonsticky nil 357 . 358) (nil fontified nil 357 . 358) (357 . 358) (nil rear-nonsticky nil 356 . 357) (nil fontified nil 356 . 357) (356 . 357) (nil rear-nonsticky nil 355 . 356) (nil fontified nil 355 . 356) (355 . 356) (nil rear-nonsticky nil 354 . 355) (nil fontified nil 354 . 355) (354 . 355) (nil rear-nonsticky nil 353 . 354) (nil fontified nil 353 . 354) (353 . 354) (nil rear-nonsticky nil 352 . 353) (nil fontified nil 352 . 353) (352 . 353) (nil rear-nonsticky nil 351 . 352) (nil fontified nil 351 . 352) (351 . 352) (nil rear-nonsticky nil 350 . 351) (nil fontified nil 350 . 351) (350 . 351) (nil rear-nonsticky nil 349 . 350) (nil fontified nil 349 . 350) (349 . 350) (nil rear-nonsticky nil 348 . 349) (nil fontified nil 348 . 349) (348 . 349) (nil rear-nonsticky nil 347 . 348) (nil fontified nil 347 . 348) (347 . 348) (nil rear-nonsticky nil 346 . 347) (nil fontified nil 346 . 347) (346 . 347) (nil rear-nonsticky nil 345 . 346) (nil fontified nil 345 . 346) (345 . 346) (nil rear-nonsticky nil 344 . 345) (nil fontified nil 344 . 345) (344 . 345) (nil rear-nonsticky nil 343 . 344) (nil fontified nil 343 . 344) (343 . 344) (nil rear-nonsticky nil 342 . 343) (nil fontified nil 342 . 343) (342 . 343) (nil rear-nonsticky nil 341 . 342) (nil fontified nil 341 . 342) (341 . 342) (nil rear-nonsticky nil 340 . 341) (nil fontified nil 340 . 341) (340 . 341) (nil rear-nonsticky nil 339 . 340) (nil fontified nil 339 . 340) (339 . 340) (nil rear-nonsticky nil 338 . 339) (nil fontified nil 338 . 339) (338 . 339) (nil rear-nonsticky nil 337 . 338) (nil fontified nil 337 . 338) (337 . 338) (nil rear-nonsticky nil 336 . 337) (nil fontified nil 336 . 337) (336 . 337) (nil rear-nonsticky nil 335 . 336) (nil fontified nil 335 . 336) (335 . 336) (nil rear-nonsticky nil 334 . 335) (nil fontified nil 334 . 335) (334 . 335) (nil rear-nonsticky nil 333 . 334) (nil fontified nil 333 . 334) (333 . 334) (nil rear-nonsticky nil 332 . 333) (nil fontified nil 332 . 333) (332 . 333) (nil rear-nonsticky nil 331 . 332) (nil fontified nil 331 . 332) (331 . 332) (nil rear-nonsticky nil 330 . 331) (nil fontified nil 330 . 331) (330 . 331) (nil rear-nonsticky nil 329 . 330) (nil fontified nil 329 . 330) (329 . 330) (nil rear-nonsticky nil 328 . 329) (nil fontified nil 328 . 329) (328 . 329) (nil rear-nonsticky nil 327 . 328) (nil fontified nil 327 . 328) (327 . 328) (nil rear-nonsticky nil 326 . 327) (nil fontified nil 326 . 327) (326 . 327) (nil rear-nonsticky nil 325 . 326) (nil fontified nil 325 . 326) (325 . 326) (nil rear-nonsticky nil 324 . 325) (nil fontified nil 324 . 325) (324 . 325) (nil rear-nonsticky nil 323 . 324) (nil fontified nil 323 . 324) (323 . 324) (nil rear-nonsticky nil 322 . 323) (nil fontified nil 322 . 323) (322 . 323) (nil rear-nonsticky nil 321 . 322) (nil fontified nil 321 . 322) (321 . 322) (nil rear-nonsticky nil 320 . 321) (nil fontified nil 320 . 321) (320 . 321) (nil rear-nonsticky nil 319 . 320) (nil fontified nil 319 . 320) (319 . 320) (nil rear-nonsticky nil 318 . 319) (nil fontified nil 318 . 319) (318 . 319) (nil rear-nonsticky nil 317 . 318) (nil fontified nil 317 . 318) (317 . 318) (nil rear-nonsticky nil 316 . 317) (nil fontified nil 316 . 317) (316 . 317) (nil rear-nonsticky nil 315 . 316) (nil fontified nil 315 . 316) (315 . 316) (nil rear-nonsticky nil 314 . 315) (nil fontified nil 314 . 315) (314 . 315) (nil rear-nonsticky nil 313 . 314) (nil fontified nil 313 . 314) (313 . 314) (nil rear-nonsticky nil 312 . 313) (nil fontified nil 312 . 313) (312 . 313) (nil rear-nonsticky nil 311 . 312) (nil fontified nil 311 . 312) (311 . 312) (nil rear-nonsticky nil 310 . 311) (nil fontified nil 310 . 311) (310 . 311) (nil rear-nonsticky nil 309 . 310) (nil fontified nil 309 . 310) (309 . 310) (nil rear-nonsticky nil 308 . 309) (nil fontified nil 308 . 309) (308 . 309) (nil rear-nonsticky nil 307 . 308) (nil fontified nil 307 . 308) (307 . 308) (nil rear-nonsticky nil 306 . 307) (nil fontified nil 306 . 307) (306 . 307) (nil rear-nonsticky nil 305 . 306) (nil fontified nil 305 . 306) (305 . 306) (nil rear-nonsticky nil 304 . 305) (nil fontified nil 304 . 305) (304 . 305) (nil rear-nonsticky nil 303 . 304) (nil fontified nil 303 . 304) (303 . 304) (nil rear-nonsticky nil 302 . 303) (nil fontified nil 302 . 303) (302 . 303) (nil rear-nonsticky nil 301 . 302) (nil fontified nil 301 . 302) (301 . 302) (nil rear-nonsticky nil 300 . 301) (nil fontified nil 300 . 301) (300 . 301) (nil rear-nonsticky nil 299 . 300) (nil fontified nil 299 . 300) (299 . 300) (nil rear-nonsticky nil 298 . 299) (nil fontified nil 298 . 299) (298 . 299) (nil rear-nonsticky nil 297 . 298) (nil fontified nil 297 . 298) (297 . 298) (nil rear-nonsticky nil 296 . 297) (nil fontified nil 296 . 297) (296 . 297) (nil rear-nonsticky nil 295 . 296) (nil fontified nil 295 . 296) (295 . 296) (nil rear-nonsticky nil 294 . 295) (nil fontified nil 294 . 295) (294 . 295) (nil rear-nonsticky nil 293 . 294) (nil fontified nil 293 . 294) (293 . 294) (nil rear-nonsticky nil 292 . 293) (nil fontified nil 292 . 293) (292 . 293) (nil rear-nonsticky nil 291 . 292) (nil fontified nil 291 . 292) (291 . 292) (nil rear-nonsticky nil 290 . 291) (nil fontified nil 290 . 291) (290 . 291) (nil rear-nonsticky nil 289 . 290) (nil fontified nil 289 . 290) (289 . 290) (nil rear-nonsticky nil 288 . 289) (nil fontified nil 288 . 289) (288 . 289) (nil rear-nonsticky nil 287 . 288) (nil fontified nil 287 . 288) (287 . 288) (nil rear-nonsticky nil 286 . 287) (nil fontified nil 286 . 287) (286 . 287) (nil rear-nonsticky nil 285 . 286) (nil fontified nil 285 . 286) (285 . 286) (nil rear-nonsticky nil 284 . 285) (nil fontified nil 284 . 285) (284 . 285) (nil rear-nonsticky nil 283 . 284) (nil fontified nil 283 . 284) (283 . 284) (nil rear-nonsticky nil 282 . 283) (nil fontified nil 282 . 283) (282 . 283)) nil (25759 40852 13949 868000) 0 nil])
([nil nil ((nil rear-nonsticky nil 404 . 405) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -484) (404 . 485) (t 25759 40852 23580 572000)) nil (25759 40875 802217 311000) 0 nil])
([nil nil ((nil rear-nonsticky nil 926 . 927) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -1006) (926 . 1007)) nil (25759 40875 802214 906000) 0 nil])
([nil nil ((502 . 503) (497 . 502) (495 . 497) (485 . 495) (484 . 485) 405) nil (25759 40875 802208 992000) 0 nil])
([nil nil ((503 . 504) (t 25759 40875 811727 868000) 502) nil (25759 40877 858274 392000) 0 nil])
([nil nil ((#("def plot_series(series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True):
    plt.plot(series, \".-\")
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")
    plt.grid(True)
    if x_label:
        plt.xlabel(x_label, fontsize=16)
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)
    plt.hlines(0, 0, 100, linewidth=1)
    plt.axis([0, n_steps + 1, -1, 1])
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t face (rainbow-delimiters-depth-1-face)) 16 26 (fontified t) 26 30 (fontified t face font-lock-constant-face) 30 39 (fontified t) 39 43 (fontified t face font-lock-constant-face) 43 53 (fontified t) 53 58 (fontified t face font-lock-string-face) 58 68 (fontified t) 68 76 (fontified t face font-lock-string-face) 76 85 (fontified t) 85 89 (fontified t face font-lock-constant-face) 89 90 (fontified t face (rainbow-delimiters-depth-1-face)) 90 104 (fontified t) 104 105 (fontified t face (rainbow-delimiters-depth-1-face)) 105 113 (fontified t) 113 117 (fontified t face font-lock-string-face) 117 118 (fontified t face (rainbow-delimiters-depth-1-face)) 118 123 (fontified t) 123 125 (fontified t face font-lock-keyword-face) 125 128 (fontified t) 128 130 (fontified t face font-lock-keyword-face) 130 131 (fontified t) 131 134 (fontified t face font-lock-keyword-face) 134 135 (fontified t) 135 139 (fontified t face font-lock-constant-face) 139 157 (fontified t) 157 158 (fontified t face (rainbow-delimiters-depth-1-face)) 158 170 (fontified t) 170 174 (fontified t face font-lock-string-face) 174 182 (fontified t) 182 190 (fontified t face font-lock-string-face) 190 191 (fontified t face (rainbow-delimiters-depth-1-face)) 191 196 (fontified t) 196 198 (fontified t face font-lock-keyword-face) 198 206 (fontified t) 206 208 (face font-lock-keyword-face fontified t) 208 209 (fontified t) 209 212 (face font-lock-keyword-face fontified t) 212 213 (fontified t) 213 217 (face font-lock-constant-face fontified t) 217 219 (fontified t) 219 235 (fontified t) 235 236 (fontified t face (rainbow-delimiters-depth-1-face)) 236 253 (fontified t) 253 257 (fontified t face font-lock-string-face) 257 269 (fontified t) 269 280 (fontified t) 280 292 (fontified t face font-lock-string-face) 292 293 (fontified t face (rainbow-delimiters-depth-1-face)) 293 294 (fontified t) 294 306 (fontified t) 306 307 (fontified t face (rainbow-delimiters-depth-1-face)) 307 311 (fontified t face font-lock-constant-face) 311 312 (fontified t face (rainbow-delimiters-depth-1-face)) 312 317 (fontified t) 317 319 (fontified t face font-lock-keyword-face) 319 347 (fontified t) 347 348 (fontified t face (rainbow-delimiters-depth-1-face)) 348 368 (fontified t) 368 369 (fontified t face (rainbow-delimiters-depth-1-face)) 369 374 (fontified t) 374 376 (fontified t face font-lock-keyword-face) 376 404 (fontified t) 404 405 (fontified t face (rainbow-delimiters-depth-1-face)) 405 437 (fontified t) 437 438 (fontified t face (rainbow-delimiters-depth-1-face)) 438 453 (fontified t) 453 454 (fontified t face (rainbow-delimiters-depth-1-face)) 454 476 (fontified t) 476 477 (fontified t face (rainbow-delimiters-depth-1-face)) 477 478 (fontified t) 478 490 (fontified t) 490 491 (fontified t face (rainbow-delimiters-depth-1-face)) 491 492 (fontified t face (rainbow-delimiters-depth-2-face)) 492 498 (fontified t) 498 500 (fontified t) 500 508 (fontified t) 508 509 (fontified t) 509 513 (fontified t) 513 514 (fontified t face (rainbow-delimiters-depth-2-face)) 514 515 (fontified t face (rainbow-delimiters-depth-1-face)) 515 516 (fontified t) 516 520 (fontified t) 520 522 (fontified t face font-lock-keyword-face) 522 530 (fontified t) 530 533 (fontified t face font-lock-keyword-face) 533 534 (fontified t) 534 535 (fontified t face (rainbow-delimiters-depth-1-face)) 535 537 (fontified t) 537 539 (fontified t face font-lock-keyword-face) 539 546 (fontified t) 546 547 (fontified t face (rainbow-delimiters-depth-1-face)) 547 567 (fontified t) 567 568 (fontified t face (rainbow-delimiters-depth-1-face)) 568 585 (fontified t) 585 597 (fontified t face font-lock-string-face) 597 598 (fontified t face (rainbow-delimiters-depth-1-face)) 598 599 (fontified t)) . 1321) (undo-tree-id705 . -598) (undo-tree-id706 . -549) (undo-tree-id707 . -78) (undo-tree-id708 . -84) (undo-tree-id709 . -78) (undo-tree-id710 . -84) (undo-tree-id711 . -549) (undo-tree-id712 . -227) (undo-tree-id713 . -227) (undo-tree-id714 . -227) (undo-tree-id715 . -227) (undo-tree-id716 . -557) (undo-tree-id717 . -557) (undo-tree-id718 . -85) (undo-tree-id719 . -92) (undo-tree-id720 . -119) (undo-tree-id721 . -141) (undo-tree-id722 . -192) (undo-tree-id723 . -219) (undo-tree-id724 . -294) (undo-tree-id725 . -313) (undo-tree-id726 . -329) (undo-tree-id727 . -370) (undo-tree-id728 . -386) (undo-tree-id729 . -386) (undo-tree-id730 . -386) (undo-tree-id731 . -439) (undo-tree-id732 . -478) (undo-tree-id733 . -516) (undo-tree-id734 . -549) (undo-tree-id735 . -599) (undo-tree-id736 . -599) (undo-tree-id737 . -599) (undo-tree-id738 . -599) (undo-tree-id739 . -599) (undo-tree-id740 . -599) (undo-tree-id741 . -599) (undo-tree-id742 . -549) (undo-tree-id743 . -516) (undo-tree-id744 . -478) (undo-tree-id745 . -439) (undo-tree-id746 . -386) (undo-tree-id747 . -370) (undo-tree-id748 . -329) (undo-tree-id749 . -313) (undo-tree-id750 . -294) (undo-tree-id751 . -219) (undo-tree-id752 . -192) (undo-tree-id753 . -141) (undo-tree-id754 . -119) (undo-tree-id755 . -92) (undo-tree-id756 . -85) (undo-tree-id757 . -599) (undo-tree-id758 . -549) (undo-tree-id759 . -85) (undo-tree-id760 . -85) (undo-tree-id761 . -85) (undo-tree-id762 . -85) (undo-tree-id763 . -85) (undo-tree-id764 . -85) (undo-tree-id765 . -92) (undo-tree-id766 . -119) (undo-tree-id767 . -141) (undo-tree-id768 . -192) (undo-tree-id769 . -219) (undo-tree-id770 . -294) (undo-tree-id771 . -313) (undo-tree-id772 . -329) (undo-tree-id773 . -370) (undo-tree-id774 . -386) (undo-tree-id775 . -439) (undo-tree-id776 . -478) (undo-tree-id777 . -516) (undo-tree-id778 . -549) (undo-tree-id779 . -549) (undo-tree-id780 . -549) (undo-tree-id781 . -549) (undo-tree-id782 . -549) (undo-tree-id783 . -549) (undo-tree-id784 . -549) (undo-tree-id785 . -599) 1870 (t 25759 40877 859740 713000)) nil (25759 40894 57128 296000) 0 nil])
([nil nil ((nil rear-nonsticky nil 946 . 947) (#("
" 0 1 (fontified nil)) . -1545) (946 . 1546)) nil (25759 40894 57055 95000) 0 nil])
([nil nil ((946 . 947) (t 25759 40894 67843 254000)) nil (25759 40905 646610 773000) 0 nil])
([nil nil ((1 . 3277) (#("# import libraries   
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt
mpl.rc('axes', labelsize=14)
mpl.rc('xtick', labelsize=12)
mpl.rc('ytick', labelsize=12)

###############################################################################
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions

def generate_time_series(batch_size, n_steps):
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)
    time = np.linspace(0, 1, n_steps)
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  #   wave 1
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20)) # + wave 2
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)   # + noise
    return series[..., np.newaxis].astype(np.float32)


def plot_series(series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True):
    plt.plot(series, \".-\")
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")
    plt.grid(True)
    if x_label:
        plt.xlabel(x_label, fontsize=16)
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)
    plt.hlines(0, 0, 100, linewidth=1)
    plt.axis([0, n_steps + 1, -1, 1])
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")
###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]

print(X_train.shape, y_train.shape)



fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(X_valid[col, :, 0], y_valid[col, 0],
                y_label=(\"$x(t)$\" if col==0 else None),
                legend=(col == 0))
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential([
    keras.layers.Flatten(input_shape=[50, 1]),
    keras.layers.Dense(1)
])

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20,
                    validation_data=(X_valid, y_valid))


model.evaluate(X_valid, y_valid)



def plot_learning_curves(loss, val_loss):
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))
    plt.axis([1, 20, 0, 0.05])
    plt.legend(fontsize=14)
    plt.xlabel(\"Epochs\")
    plt.ylabel(\"Loss\")
    plt.grid(True)

plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 28 (fontified t face font-lock-keyword-face) 28 35 (fontified t) 35 37 (fontified t face font-lock-keyword-face) 37 41 (fontified t) 41 47 (fontified t face font-lock-keyword-face) 47 55 (fontified t) 55 56 (fontified t) 56 62 (fontified t face font-lock-keyword-face) 62 74 (fontified t) 74 76 (fontified t face font-lock-keyword-face) 76 79 (fontified t) 79 80 (fontified t) 80 84 (fontified t face font-lock-keyword-face) 84 96 (fontified t) 96 102 (fontified t face font-lock-keyword-face) 102 109 (fontified t) 109 113 (fontified t face font-lock-keyword-face) 113 122 (fontified t) 122 128 (fontified t face font-lock-keyword-face) 128 133 (fontified t) 133 134 (fontified t) 134 140 (fontified t face font-lock-keyword-face) 140 152 (fontified t) 152 154 (fontified t face font-lock-keyword-face) 154 158 (fontified t) 158 159 (fontified t) 159 165 (fontified t face font-lock-keyword-face) 165 184 (fontified t) 184 186 (fontified t face font-lock-keyword-face) 186 197 (fontified t) 197 198 (fontified t face (rainbow-delimiters-depth-1-face)) 198 204 (fontified t face font-lock-string-face) 204 218 (fontified t) 218 219 (fontified t face (rainbow-delimiters-depth-1-face)) 219 226 (fontified t) 226 227 (fontified t face (rainbow-delimiters-depth-1-face)) 227 234 (fontified t face font-lock-string-face) 234 238 (fontified t) 238 248 (fontified t) 248 249 (fontified t face (rainbow-delimiters-depth-1-face)) 249 250 (fontified t) 250 255 (fontified t) 255 256 (fontified t) 256 257 (fontified t face (rainbow-delimiters-depth-1-face)) 257 264 (fontified t face font-lock-string-face) 264 278 (fontified t) 278 279 (fontified t face (rainbow-delimiters-depth-1-face)) 279 280 (fontified t) 280 281 (rear-nonsticky t fontified t) 281 282 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 282 283 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 283 284 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 284 285 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 285 286 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 286 287 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 287 288 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 288 289 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 289 290 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 290 291 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 291 292 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 292 293 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 293 294 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 294 295 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 295 296 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 296 297 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 297 298 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 298 299 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 299 300 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 300 301 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 301 302 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 302 303 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 303 304 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 304 305 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 305 306 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 306 307 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 307 308 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 308 309 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 309 310 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 310 311 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 311 312 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 312 313 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 313 314 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 314 315 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 315 316 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 316 317 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 317 318 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 318 319 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 319 320 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 320 321 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 321 322 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 322 323 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 323 324 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 324 325 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 325 326 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 326 327 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 327 328 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 328 329 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 329 330 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 330 331 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 331 332 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 332 333 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 333 334 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 334 335 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 335 336 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 336 337 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 337 338 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 338 339 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 339 340 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 340 341 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 341 342 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 342 343 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 343 344 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 344 345 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 345 346 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 346 347 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 347 348 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 348 349 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 349 350 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 350 351 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 351 352 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 352 353 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 353 354 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 354 355 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 355 356 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 356 357 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 357 358 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 358 359 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 359 360 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 360 361 (fontified t face font-lock-comment-face) 361 363 (fontified t) 363 375 (fontified t) 375 376 (fontified t face (rainbow-delimiters-depth-1-face)) 376 378 (fontified t) 378 379 (fontified t face (rainbow-delimiters-depth-1-face)) 379 380 (fontified t) 380 398 (fontified t) 398 399 (fontified t face (rainbow-delimiters-depth-1-face)) 399 401 (fontified t) 401 402 (fontified t face (rainbow-delimiters-depth-1-face)) 402 403 (fontified t) 403 404 (fontified t rear-nonsticky t) 404 405 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 405 406 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 406 407 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 407 408 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 408 409 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 409 410 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 410 411 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 411 412 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 412 413 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 413 414 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 414 415 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 415 416 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 416 417 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 417 418 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 418 419 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 419 420 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 420 421 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 421 422 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 422 423 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 423 424 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 424 425 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 425 426 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 426 427 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 427 428 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 428 429 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 429 430 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 430 431 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 431 432 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 432 433 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 433 434 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 434 435 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 435 436 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 436 437 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 437 438 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 438 439 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 439 440 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 440 441 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 441 442 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 442 443 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 443 444 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 444 445 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 445 446 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 446 447 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 447 448 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 448 449 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 449 450 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 450 451 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 451 452 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 452 453 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 453 454 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 454 455 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 455 456 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 456 457 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 457 458 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 458 459 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 459 460 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 460 461 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 461 462 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 462 463 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 463 464 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 464 465 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 465 466 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 466 467 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 467 468 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 468 469 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 469 470 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 470 471 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 471 472 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 472 473 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 473 474 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 474 475 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 475 476 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 476 477 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 477 478 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 478 479 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 479 480 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 480 481 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 481 482 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 482 483 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 483 484 (fontified t face font-lock-comment-face) 484 486 (fontified t face font-lock-comment-delimiter-face) 486 496 (fontified t face font-lock-comment-face) 496 502 (fontified t face font-lock-comment-face) 502 503 (fontified t face font-lock-comment-face) 503 504 (fontified t) 504 507 (fontified t face font-lock-keyword-face) 507 508 (fontified t) 508 528 (fontified t face font-lock-function-name-face) 528 529 (fontified t face (rainbow-delimiters-depth-1-face)) 529 548 (fontified t) 548 549 (fontified t face (rainbow-delimiters-depth-1-face)) 549 555 (fontified t) 555 560 (fontified t face font-lock-variable-name-face) 560 562 (fontified t) 562 567 (fontified t face font-lock-variable-name-face) 567 569 (fontified t) 569 577 (fontified t face font-lock-variable-name-face) 577 579 (fontified t) 579 587 (fontified t face font-lock-variable-name-face) 587 604 (fontified t) 604 605 (fontified t face (rainbow-delimiters-depth-1-face)) 605 621 (fontified t) 621 622 (fontified t face (rainbow-delimiters-depth-1-face)) 622 627 (fontified t) 627 631 (fontified t face font-lock-variable-name-face) 631 645 (fontified t) 645 646 (fontified t face (rainbow-delimiters-depth-1-face)) 646 659 (fontified t) 659 660 (fontified t face (rainbow-delimiters-depth-1-face)) 660 665 (fontified t) 665 671 (fontified t face font-lock-variable-name-face) 671 686 (fontified t) 686 687 (fontified t face (rainbow-delimiters-depth-1-face)) 687 688 (fontified t face (rainbow-delimiters-depth-2-face)) 688 701 (fontified t) 701 702 (fontified t) 702 703 (fontified t) 703 704 (fontified t face (rainbow-delimiters-depth-2-face)) 704 707 (fontified t) 707 708 (fontified t face (rainbow-delimiters-depth-2-face)) 708 721 (fontified t) 721 723 (fontified t) 723 724 (fontified t face (rainbow-delimiters-depth-2-face)) 724 725 (fontified t face (rainbow-delimiters-depth-1-face)) 725 727 (fontified t) 727 731 (fontified t face font-lock-comment-delimiter-face) 731 738 (fontified t face font-lock-comment-face) 738 742 (fontified t) 742 748 (fontified t face font-lock-variable-name-face) 748 764 (fontified t) 764 765 (fontified t face (rainbow-delimiters-depth-1-face)) 765 766 (fontified t face (rainbow-delimiters-depth-2-face)) 766 781 (fontified t) 781 782 (fontified t face (rainbow-delimiters-depth-2-face)) 782 785 (fontified t) 785 786 (fontified t face (rainbow-delimiters-depth-2-face)) 786 801 (fontified t) 801 802 (fontified t face (rainbow-delimiters-depth-2-face)) 802 803 (fontified t face (rainbow-delimiters-depth-1-face)) 803 804 (fontified t) 804 806 (fontified t face font-lock-comment-delimiter-face) 806 815 (fontified t face font-lock-comment-face) 815 819 (fontified t) 819 825 (fontified t face font-lock-variable-name-face) 825 835 (fontified t) 835 836 (fontified t face (rainbow-delimiters-depth-1-face)) 836 850 (fontified t) 850 851 (fontified t face (rainbow-delimiters-depth-2-face)) 851 870 (fontified t) 870 871 (fontified t face (rainbow-delimiters-depth-2-face)) 871 877 (fontified t) 877 878 (fontified t face (rainbow-delimiters-depth-1-face)) 878 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 891 (fontified t face font-lock-comment-face) 891 895 (fontified t) 895 901 (fontified t face font-lock-keyword-face) 901 908 (fontified t) 908 909 (fontified t face (rainbow-delimiters-depth-1-face)) 909 924 (fontified t) 924 925 (fontified t face (rainbow-delimiters-depth-1-face)) 925 932 (fontified t) 932 933 (fontified t face (rainbow-delimiters-depth-1-face)) 933 943 (fontified t) 943 944 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face)) 944 945 (fontified t) 945 946 (fontified t) 946 947 (fontified t rear-nonsticky t) 947 950 (fontified t face font-lock-keyword-face) 950 951 (fontified t) 951 962 (fontified t face font-lock-function-name-face) 962 963 (fontified t face (rainbow-delimiters-depth-1-face)) 963 973 (fontified t) 973 977 (fontified t face font-lock-constant-face) 977 986 (fontified t) 986 990 (fontified t face font-lock-constant-face) 990 1000 (fontified t) 1000 1005 (fontified t face font-lock-string-face) 1005 1015 (fontified t) 1015 1023 (fontified t face font-lock-string-face) 1023 1032 (fontified t) 1032 1036 (fontified t face font-lock-constant-face) 1036 1037 (fontified t face (rainbow-delimiters-depth-1-face)) 1037 1051 (fontified t) 1051 1052 (fontified t face (rainbow-delimiters-depth-1-face)) 1052 1060 (fontified t) 1060 1064 (fontified t face font-lock-string-face) 1064 1065 (fontified t face (rainbow-delimiters-depth-1-face)) 1065 1070 (fontified t) 1070 1072 (fontified t face font-lock-keyword-face) 1072 1075 (fontified t) 1075 1077 (fontified t face font-lock-keyword-face) 1077 1078 (fontified t) 1078 1081 (fontified t face font-lock-keyword-face) 1081 1082 (fontified t) 1082 1086 (fontified t face font-lock-constant-face) 1086 1104 (fontified t) 1104 1105 (fontified t face (rainbow-delimiters-depth-1-face)) 1105 1117 (fontified t) 1117 1121 (fontified t face font-lock-string-face) 1121 1129 (fontified t) 1129 1137 (fontified t face font-lock-string-face) 1137 1138 (fontified t face (rainbow-delimiters-depth-1-face)) 1138 1143 (fontified t) 1143 1145 (fontified t face font-lock-keyword-face) 1145 1153 (fontified t) 1153 1155 (fontified t face font-lock-keyword-face) 1155 1156 (fontified t) 1156 1159 (fontified t face font-lock-keyword-face) 1159 1160 (fontified t) 1160 1164 (fontified t face font-lock-constant-face) 1164 1166 (fontified t) 1166 1182 (fontified t) 1182 1183 (fontified t face (rainbow-delimiters-depth-1-face)) 1183 1200 (fontified t) 1200 1204 (fontified t face font-lock-string-face) 1204 1216 (fontified t) 1216 1227 (fontified t) 1227 1239 (fontified t face font-lock-string-face) 1239 1240 (fontified t face (rainbow-delimiters-depth-1-face)) 1240 1241 (fontified t) 1241 1253 (fontified t) 1253 1254 (fontified t face (rainbow-delimiters-depth-1-face)) 1254 1258 (fontified t face font-lock-constant-face) 1258 1259 (fontified t face (rainbow-delimiters-depth-1-face)) 1259 1264 (fontified t) 1264 1266 (fontified t face font-lock-keyword-face) 1266 1294 (fontified t) 1294 1295 (fontified t face (rainbow-delimiters-depth-1-face)) 1295 1315 (fontified t) 1315 1316 (fontified t face (rainbow-delimiters-depth-1-face)) 1316 1321 (fontified t) 1321 1323 (fontified t face font-lock-keyword-face) 1323 1351 (fontified t) 1351 1352 (fontified t face (rainbow-delimiters-depth-1-face)) 1352 1384 (fontified t) 1384 1385 (fontified t face (rainbow-delimiters-depth-1-face)) 1385 1400 (fontified t) 1400 1401 (fontified t face (rainbow-delimiters-depth-1-face)) 1401 1423 (fontified t) 1423 1424 (fontified t face (rainbow-delimiters-depth-1-face)) 1424 1425 (fontified t) 1425 1437 (fontified t) 1437 1438 (fontified t face (rainbow-delimiters-depth-1-face)) 1438 1439 (fontified t face (rainbow-delimiters-depth-2-face)) 1439 1445 (fontified t) 1445 1446 (fontified t) 1446 1447 (fontified t) 1447 1455 (fontified t) 1455 1456 (fontified t) 1456 1460 (fontified t) 1460 1461 (face (rainbow-delimiters-depth-2-face) fontified t) 1461 1462 (face (rainbow-delimiters-depth-1-face) fontified t) 1462 1463 (fontified t) 1463 1467 (fontified t) 1467 1469 (fontified t face font-lock-keyword-face) 1469 1477 (fontified t) 1477 1480 (fontified t face font-lock-keyword-face) 1480 1481 (fontified t) 1481 1482 (fontified t face (rainbow-delimiters-depth-1-face)) 1482 1484 (fontified t) 1484 1486 (fontified t face font-lock-keyword-face) 1486 1493 (fontified t) 1493 1494 (fontified t face (rainbow-delimiters-depth-1-face)) 1494 1514 (fontified t) 1514 1515 (fontified t face (rainbow-delimiters-depth-1-face)) 1515 1532 (fontified t) 1532 1544 (fontified t face font-lock-string-face) 1544 1545 (fontified t face (rainbow-delimiters-depth-1-face)) 1545 1546 (rear-nonsticky t fontified t) 1546 1547 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1547 1548 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1548 1549 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1549 1550 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1550 1551 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1551 1552 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1552 1553 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1553 1554 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1554 1555 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1555 1556 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1556 1557 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1557 1558 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1558 1559 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1559 1560 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1560 1561 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1561 1562 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1562 1563 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1563 1564 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1564 1565 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1565 1566 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1566 1567 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1567 1568 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1568 1569 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1569 1570 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1570 1571 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1571 1572 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1572 1573 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1573 1574 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1574 1575 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1575 1576 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1576 1577 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1577 1578 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1578 1579 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1579 1580 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1580 1581 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1581 1582 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1582 1583 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1583 1584 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1584 1585 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1585 1586 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1586 1587 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1587 1588 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1588 1589 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1589 1590 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1590 1591 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1591 1592 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1592 1593 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1593 1594 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1594 1595 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1595 1596 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1596 1597 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1597 1598 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1598 1599 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1599 1600 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1600 1601 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1601 1602 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1602 1603 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1603 1604 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1604 1605 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1605 1606 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1606 1607 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1607 1608 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1608 1609 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1609 1610 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1610 1611 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1611 1612 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1612 1613 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1613 1614 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1614 1615 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1615 1616 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1616 1617 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1617 1618 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1618 1619 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1619 1620 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1620 1621 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1621 1622 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1622 1623 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1623 1624 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1624 1625 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 1625 1626 (fontified t face font-lock-comment-face) 1626 1633 (fontified t face font-lock-variable-name-face) 1633 1639 (fontified t) 1639 1641 (fontified t face font-lock-variable-name-face) 1641 1645 (fontified t face font-lock-variable-name-face) 1645 1668 (fontified t) 1668 1669 (fontified t face (rainbow-delimiters-depth-1-face)) 1669 1684 (fontified t) 1684 1687 (fontified t) 1687 1688 (fontified t face (rainbow-delimiters-depth-1-face)) 1688 1689 (fontified t) 1689 1696 (fontified t face font-lock-variable-name-face) 1696 1698 (fontified t) 1698 1705 (fontified t face font-lock-variable-name-face) 1705 1714 (fontified t) 1714 1715 (fontified t face (rainbow-delimiters-depth-1-face)) 1715 1730 (fontified t) 1730 1731 (fontified t face (rainbow-delimiters-depth-1-face)) 1731 1739 (fontified t) 1739 1740 (fontified t face (rainbow-delimiters-depth-1-face)) 1740 1749 (fontified t) 1749 1750 (fontified t face (rainbow-delimiters-depth-1-face)) 1750 1751 (fontified t) 1751 1758 (fontified t face font-lock-variable-name-face) 1758 1760 (fontified t) 1760 1767 (fontified t face font-lock-variable-name-face) 1767 1776 (fontified t) 1776 1777 (fontified t face (rainbow-delimiters-depth-1-face)) 1777 1796 (fontified t) 1796 1797 (fontified t face (rainbow-delimiters-depth-1-face)) 1797 1805 (fontified t) 1805 1806 (fontified t face (rainbow-delimiters-depth-1-face)) 1806 1819 (fontified t) 1819 1820 (fontified t face (rainbow-delimiters-depth-1-face)) 1820 1821 (fontified t) 1821 1827 (fontified t face font-lock-variable-name-face) 1827 1829 (fontified t) 1829 1835 (fontified t face font-lock-variable-name-face) 1835 1844 (fontified t) 1844 1845 (fontified t face (rainbow-delimiters-depth-1-face)) 1845 1860 (fontified t) 1860 1861 (fontified t face (rainbow-delimiters-depth-1-face)) 1861 1869 (fontified t) 1869 1870 (fontified t face (rainbow-delimiters-depth-1-face)) 1870 1879 (fontified t) 1879 1880 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face)) 1880 1881 (fontified t) 1881 1882 (fontified t) 1882 1887 (fontified t face font-lock-keyword-face) 1887 1888 (fontified t face (rainbow-delimiters-depth-1-face)) 1888 1915 (fontified t) 1915 1916 (rear-nonsticky t fontified t) 1916 1917 (fontified t face (rainbow-delimiters-depth-1-face)) 1917 1918 (fontified t) 1918 1919 (fontified t) 1919 1920 (fontified t) 1920 1921 (fontified t) 1921 1924 (fontified t face font-lock-variable-name-face) 1924 1926 (fontified t) 1926 1930 (fontified t face font-lock-variable-name-face) 1930 1945 (fontified t) 1945 1946 (fontified t face (rainbow-delimiters-depth-1-face)) 1946 1963 (fontified t) 1963 1971 (fontified t) 1971 1975 (face font-lock-constant-face fontified t) 1975 1985 (fontified t) 1985 1986 (face (rainbow-delimiters-depth-2-face) fontified t) 1986 1991 (fontified t) 1991 1992 (face (rainbow-delimiters-depth-2-face) fontified t) 1992 1993 (face (rainbow-delimiters-depth-1-face) fontified t) 1993 1994 (fontified t) 1994 1997 (face font-lock-keyword-face) 2002 2004 (face font-lock-keyword-face) 2005 2010 (face font-lock-builtin-face) 2010 2011 (face (rainbow-delimiters-depth-1-face)) 2012 2013 (face (rainbow-delimiters-depth-1-face)) 2026 2027 (face (rainbow-delimiters-depth-1-face)) 2031 2032 (face (rainbow-delimiters-depth-2-face)) 2035 2036 (face (rainbow-delimiters-depth-2-face)) 2036 2037 (face (rainbow-delimiters-depth-1-face)) 2053 2054 (face (rainbow-delimiters-depth-1-face)) 2061 2062 (face (rainbow-delimiters-depth-2-face)) 2071 2072 (face (rainbow-delimiters-depth-2-face)) 2081 2082 (face (rainbow-delimiters-depth-2-face)) 2088 2089 (face (rainbow-delimiters-depth-2-face)) 2115 2116 (face (rainbow-delimiters-depth-2-face)) 2116 2124 (face font-lock-string-face) 2125 2127 (face font-lock-keyword-face) 2135 2139 (face font-lock-keyword-face) 2140 2144 (face font-lock-constant-face) 2144 2145 (face (rainbow-delimiters-depth-2-face)) 2170 2171 (face (rainbow-delimiters-depth-2-face)) 2179 2180 (face (rainbow-delimiters-depth-2-face)) 2180 2181 (face (rainbow-delimiters-depth-1-face)) 2190 2191 (face (rainbow-delimiters-depth-1-face)) 2191 2192 (rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 2194 2200 (face font-lock-variable-name-face) 2210 2211 (face (rainbow-delimiters-depth-1-face)) 2216 2217 (face (rainbow-delimiters-depth-1-face)) 2225 2226 (face (rainbow-delimiters-depth-1-face)) 2257 2258 (face (rainbow-delimiters-depth-2-face)) 2273 2274 (face (rainbow-delimiters-depth-2-face)) 2274 2275 (rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 2288 2289 (face (rainbow-delimiters-depth-1-face)) 2296 2297 (face (rainbow-delimiters-depth-2-face)) 2304 2305 (face (rainbow-delimiters-depth-2-face)) 2314 2315 (face (rainbow-delimiters-depth-2-face)) 2319 2320 (face (rainbow-delimiters-depth-2-face)) 2328 2329 (face (rainbow-delimiters-depth-2-face)) 2333 2334 (face (rainbow-delimiters-depth-2-face)) 2334 2335 (face (rainbow-delimiters-depth-1-face)) 2344 2345 (face (rainbow-delimiters-depth-1-face)) 2345 2346 (rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 2362 2363 (face (rainbow-delimiters-depth-1-face)) 2365 2366 (face (rainbow-delimiters-depth-1-face)) 2385 2386 (face (rainbow-delimiters-depth-1-face)) 2388 2389 (face (rainbow-delimiters-depth-1-face)) 2391 2396 (face font-lock-variable-name-face) 2422 2423 (face (rainbow-delimiters-depth-1-face)) 2423 2424 (face (rainbow-delimiters-depth-2-face)) 2449 2450 (face (rainbow-delimiters-depth-3-face)) 2462 2463 (face (rainbow-delimiters-depth-4-face)) 2468 2469 (face (rainbow-delimiters-depth-4-face)) 2469 2470 (face (rainbow-delimiters-depth-3-face)) 2494 2495 (face (rainbow-delimiters-depth-3-face)) 2496 2497 (face (rainbow-delimiters-depth-3-face)) 2498 2499 (face (rainbow-delimiters-depth-2-face)) 2499 2500 (face (rainbow-delimiters-depth-1-face)) 2508 2515 (face font-lock-builtin-face) 2515 2516 (face (rainbow-delimiters-depth-1-face)) 2521 2526 (face font-lock-string-face) 2538 2544 (face font-lock-string-face) 2544 2545 (face (rainbow-delimiters-depth-1-face)) 2546 2553 (face font-lock-variable-name-face) 2565 2566 (face (rainbow-delimiters-depth-1-face)) 2631 2632 (face (rainbow-delimiters-depth-2-face)) 2648 2649 (face (rainbow-delimiters-depth-2-face)) 2649 2650 (rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 2667 2668 (face (rainbow-delimiters-depth-1-face)) 2684 2685 (rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 2689 2692 (face font-lock-keyword-face) 2693 2713 (face font-lock-function-name-face) 2713 2714 (face (rainbow-delimiters-depth-1-face)) 2728 2729 (face (rainbow-delimiters-depth-1-face)) 2743 2744 (face (rainbow-delimiters-depth-1-face)) 2753 2754 (face (rainbow-delimiters-depth-2-face)) 2754 2757 (face font-lock-builtin-face) 2757 2758 (face (rainbow-delimiters-depth-3-face)) 2762 2763 (face (rainbow-delimiters-depth-3-face)) 2763 2764 (face (rainbow-delimiters-depth-2-face)) 2778 2783 (face font-lock-string-face) 2791 2806 (face font-lock-string-face) 2806 2807 (face (rainbow-delimiters-depth-1-face)) 2820 2821 (face (rainbow-delimiters-depth-1-face)) 2830 2831 (face (rainbow-delimiters-depth-2-face)) 2831 2834 (face font-lock-builtin-face) 2834 2835 (face (rainbow-delimiters-depth-3-face)) 2843 2844 (face (rainbow-delimiters-depth-3-face)) 2844 2845 (face (rainbow-delimiters-depth-2-face)) 2861 2866 (face font-lock-string-face) 2874 2891 (face font-lock-string-face) 2891 2892 (face (rainbow-delimiters-depth-1-face)) 2904 2905 (face (rainbow-delimiters-depth-1-face)) 2905 2906 (face (rainbow-delimiters-depth-1-face)) 2930 2931 (face (rainbow-delimiters-depth-1-face)) 2953 2954 (face (rainbow-delimiters-depth-2-face)) 2962 2966 (face font-lock-constant-face) 2966 2967 (face (rainbow-delimiters-depth-2-face)) 2967 2968 (face (rainbow-delimiters-depth-1-face)) 2981 2982 (face (rainbow-delimiters-depth-1-face)) 2982 2983 (face (rainbow-delimiters-depth-2-face)) 2997 2998 (face (rainbow-delimiters-depth-2-face)) 2998 2999 (face (rainbow-delimiters-depth-1-face)) 3014 3015 (face (rainbow-delimiters-depth-1-face)) 3026 3027 (face (rainbow-delimiters-depth-1-face)) 3042 3043 (face (rainbow-delimiters-depth-1-face)) 3043 3051 (face font-lock-string-face) 3051 3052 (face (rainbow-delimiters-depth-1-face)) 3067 3068 (face (rainbow-delimiters-depth-1-face)) 3068 3074 (face font-lock-string-face) 3074 3075 (face (rainbow-delimiters-depth-1-face)) 3088 3089 (face (rainbow-delimiters-depth-1-face)) 3089 3093 (face font-lock-constant-face) 3093 3094 (face (rainbow-delimiters-depth-1-face)) 3116 3117 (face (rainbow-delimiters-depth-1-face)) 3132 3133 (face (rainbow-delimiters-depth-2-face)) 3133 3139 (face font-lock-string-face) 3139 3140 (face (rainbow-delimiters-depth-2-face)) 3157 3158 (face (rainbow-delimiters-depth-2-face)) 3158 3168 (face font-lock-string-face) 3168 3169 (face (rainbow-delimiters-depth-2-face)) 3169 3170 (face (rainbow-delimiters-depth-1-face)) 3179 3180 (face (rainbow-delimiters-depth-1-face)) 3180 3181 (rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 3183 3189 (face font-lock-variable-name-face) 3205 3206 (face (rainbow-delimiters-depth-1-face)) 3213 3214 (face (rainbow-delimiters-depth-1-face)) 3226 3227 (face (rainbow-delimiters-depth-1-face)) 3234 3235 (face (rainbow-delimiters-depth-2-face)) 3242 3243 (face (rainbow-delimiters-depth-2-face)) 3252 3253 (face (rainbow-delimiters-depth-2-face)) 3257 3258 (face (rainbow-delimiters-depth-2-face)) 3266 3267 (face (rainbow-delimiters-depth-2-face)) 3271 3272 (face (rainbow-delimiters-depth-2-face)) 3272 3273 (face (rainbow-delimiters-depth-1-face)) 3282 3283 (face (rainbow-delimiters-depth-1-face)) 3283 3284 (rear-nonsticky t face (rainbow-delimiters-depth-1-face))) . 1) (undo-tree-id786 . 2339) (undo-tree-id787 . -3285) (undo-tree-id788 . -3285) (undo-tree-id789 . -495) (undo-tree-id790 . -1545) (undo-tree-id791 . -1920) (undo-tree-id792 . 1365) (undo-tree-id793 . -41) (undo-tree-id794 . -504) (undo-tree-id795 . -944) (undo-tree-id796 . -945) (undo-tree-id797 . -1881) (undo-tree-id798 . -1888) (undo-tree-id799 . -1920) (undo-tree-id800 . -2193) (undo-tree-id801 . -2277) (undo-tree-id802 . -2346) (undo-tree-id803 . -2653) (undo-tree-id804 . -2653) (undo-tree-id805 . -2689) (undo-tree-id806 . -3182) (undo-tree-id807 . -3182) (undo-tree-id808 . -3183) (undo-tree-id809 . -3283) (undo-tree-id810 . -3183) (undo-tree-id811 . -3183) (undo-tree-id812 . -3183) (undo-tree-id813 . -1920) (undo-tree-id814 . -1920) (undo-tree-id815 . -1920) (undo-tree-id816 . -1920) (undo-tree-id817 . -1920) (undo-tree-id818 . -1920) (undo-tree-id819 . -1920) (undo-tree-id820 . -1920) (undo-tree-id821 . -1920) (undo-tree-id822 . -1920) (undo-tree-id823 . -1920) (undo-tree-id824 . -1920) (undo-tree-id825 . -1920) (undo-tree-id826 . -1920) (undo-tree-id827 . -1920) (undo-tree-id828 . -1920) (undo-tree-id829 . -1920) (undo-tree-id830 . -1920) (undo-tree-id831 . -1920) (undo-tree-id832 . -1920) (undo-tree-id833 . -1920) (undo-tree-id834 . -1920) (undo-tree-id835 . -1920) (undo-tree-id836 . -1920) (undo-tree-id837 . -1920) (undo-tree-id838 . -1920) (undo-tree-id839 . -1920) (undo-tree-id840 . -1920) (undo-tree-id841 . -1920) (undo-tree-id842 . -1920) (undo-tree-id843 . -1920) (undo-tree-id844 . -1920) (undo-tree-id845 . -1920) (undo-tree-id846 . -1920) (undo-tree-id847 . -1920) (undo-tree-id848 . -1920) (undo-tree-id849 . -1920) (undo-tree-id850 . -1920) (undo-tree-id851 . -1920) (undo-tree-id852 . -1920) (undo-tree-id853 . -1920) (undo-tree-id854 . -1920) (undo-tree-id855 . -1920) (undo-tree-id856 . -1920) (undo-tree-id857 . -1920) (undo-tree-id858 . -1920) (undo-tree-id859 . -1920) (undo-tree-id860 . -1920) (undo-tree-id861 . -1920) (undo-tree-id862 . -1920) (undo-tree-id863 . -1920) (undo-tree-id864 . -1920) (undo-tree-id865 . -1920) (undo-tree-id866 . -1920) (undo-tree-id867 . -1920) (undo-tree-id868 . -1920) (undo-tree-id869 . -1920) (undo-tree-id870 . -1920) (undo-tree-id871 . -1920) (undo-tree-id872 . -1920) (undo-tree-id873 . -1920) (undo-tree-id874 . -1920) (undo-tree-id875 . -1920) (undo-tree-id876 . -1920) (undo-tree-id877 . -1920) (undo-tree-id878 . -1920) (undo-tree-id879 . -1920) (undo-tree-id880 . -1920) (undo-tree-id881 . -1920) (undo-tree-id882 . -18) (undo-tree-id883 . -19) (undo-tree-id884 . -41) (undo-tree-id885 . -47) (undo-tree-id886 . -109) (undo-tree-id887 . -113) (undo-tree-id888 . -504) (undo-tree-id889 . -507) (undo-tree-id890 . -727) (undo-tree-id891 . -728) (undo-tree-id892 . -803) (undo-tree-id893 . -804) (undo-tree-id894 . -947) (undo-tree-id895 . -950) (undo-tree-id896 . -1025) (undo-tree-id897 . -1031) (undo-tree-id898 . -1626) (undo-tree-id899 . -1633) (undo-tree-id900 . -1921) (undo-tree-id901 . -1924) (undo-tree-id902 . -2131) (undo-tree-id903 . -2132) (undo-tree-id904 . -2689) (undo-tree-id905 . -2692) (undo-tree-id906 . -2886) (undo-tree-id907 . -2890) (undo-tree-id908 . -3096) (undo-tree-id909 . -3116) (undo-tree-id910 . -947) (undo-tree-id911 . -947) (undo-tree-id912 . -947) (undo-tree-id913 . -947) (undo-tree-id914 . -2042) (undo-tree-id915 . -2042) (undo-tree-id916 . -2042) (undo-tree-id917 . -2502) (undo-tree-id918 . -2502) (undo-tree-id919 . -2502) (undo-tree-id920 . -2502) (undo-tree-id921 . -1032) (undo-tree-id922 . -1032) (undo-tree-id923 . -1032) (undo-tree-id924 . -1032) (undo-tree-id925 . -1032) (undo-tree-id926 . -1032) (undo-tree-id927 . -1036) (undo-tree-id928 . -1043) (undo-tree-id929 . -1043) (undo-tree-id930 . -1043) (undo-tree-id931 . -1043) (undo-tree-id932 . -1043) (undo-tree-id933 . -1043) (undo-tree-id934 . -1036) (undo-tree-id935 . -1036) (undo-tree-id936 . -1036) (undo-tree-id937 . -1036) (undo-tree-id938 . -951) (undo-tree-id939 . -951) (undo-tree-id940 . -951) (undo-tree-id941 . -951) (undo-tree-id942 . -951) (undo-tree-id943 . -951) (undo-tree-id944 . -951) (undo-tree-id945 . -951) (undo-tree-id946 . -951) (undo-tree-id947 . -951) (undo-tree-id948 . -951) (undo-tree-id949 . -951) (undo-tree-id950 . -951) (undo-tree-id951 . -951) (undo-tree-id952 . -951) (undo-tree-id953 . -951) (undo-tree-id954 . -380) (undo-tree-id955 . -951) (undo-tree-id956 . -951) (undo-tree-id957 . -951) (undo-tree-id958 . -951) (undo-tree-id959 . -951) (undo-tree-id960 . -951) (undo-tree-id961 . -951) (undo-tree-id962 . -951) (undo-tree-id963 . -951) (undo-tree-id964 . -951) (undo-tree-id965 . -945) (undo-tree-id966 . -945) (undo-tree-id967 . -945) (undo-tree-id968 . -945) (undo-tree-id969 . -945) (undo-tree-id970 . -945) (undo-tree-id971 . -945) (undo-tree-id972 . -945) (undo-tree-id973 . -945) (undo-tree-id974 . -945) (undo-tree-id975 . -945) (undo-tree-id976 . -945) (undo-tree-id977 . -945) (undo-tree-id978 . 2340) (undo-tree-id979 . -946) (undo-tree-id980 . -895) (undo-tree-id981 . -895) (undo-tree-id982 . -946) (undo-tree-id983 . -946) (undo-tree-id984 . -946) (undo-tree-id985 . -946) (undo-tree-id986 . -946) (undo-tree-id987 . -946) (undo-tree-id988 . -946) (undo-tree-id989 . -946) (undo-tree-id990 . -946) (undo-tree-id991 . -947) (undo-tree-id992 . -947) (undo-tree-id993 . -947) (undo-tree-id994 . -947) (undo-tree-id995 . -1043) (undo-tree-id996 . -1043) (undo-tree-id997 . -1096) (undo-tree-id998 . -1096) (undo-tree-id999 . -1096) (undo-tree-id1000 . -1096) (undo-tree-id1001 . -1174) (undo-tree-id1002 . -1174) (undo-tree-id1003 . -1174) (undo-tree-id1004 . -1174) (undo-tree-id1005 . -1504) (undo-tree-id1006 . -1504) (undo-tree-id1007 . -946) (undo-tree-id1008 . -946) (undo-tree-id1009 . -946) (undo-tree-id1010 . -946) (undo-tree-id1011 . -946) (undo-tree-id1012 . -946) (undo-tree-id1013 . -946) (undo-tree-id1014 . -380) (undo-tree-id1015 . -946) (undo-tree-id1016 . -946) (undo-tree-id1017 . -18) (undo-tree-id1018 . -19) (undo-tree-id1019 . -1) (undo-tree-id1020 . -41) (undo-tree-id1021 . -47) (undo-tree-id1022 . -109) (undo-tree-id1023 . -113) (undo-tree-id1024 . -109) (undo-tree-id1025 . -113) (undo-tree-id1026 . -541) (undo-tree-id1027 . -548) (undo-tree-id1028 . -504) (undo-tree-id1029 . -507) (undo-tree-id1030 . -665) (undo-tree-id1031 . -671) (undo-tree-id1032 . -946) (undo-tree-id1033 . -947) (undo-tree-id1034 . -946) (undo-tree-id1035 . -947) (undo-tree-id1036 . -946) (undo-tree-id1037 . -947) (undo-tree-id1038 . -946) (undo-tree-id1039 . -947) (undo-tree-id1040 . -946) (undo-tree-id1041 . -947) (undo-tree-id1042 . -1546) (undo-tree-id1043 . -1547) (undo-tree-id1044 . -2502) (undo-tree-id1045 . -2507) (undo-tree-id1046 . -2688) (undo-tree-id1047 . -2689) (undo-tree-id1048 . -945) (undo-tree-id1049 . -945) (undo-tree-id1050 . -503) (undo-tree-id1051 . -503) (undo-tree-id1052 . -403) (undo-tree-id1053 . -403) (undo-tree-id1054 . -502) (undo-tree-id1055 . -502) (undo-tree-id1056 . -660) (undo-tree-id1057 . -660) (undo-tree-id1058 . -18) (undo-tree-id1059 . -19) (undo-tree-id1060 . -41) (undo-tree-id1061 . -47) (undo-tree-id1062 . -109) (undo-tree-id1063 . -113) (undo-tree-id1064 . -504) (undo-tree-id1065 . -507) (undo-tree-id1066 . -727) (undo-tree-id1067 . -728) (undo-tree-id1068 . -803) (undo-tree-id1069 . -804) (undo-tree-id1070 . -1025) (undo-tree-id1071 . -1031) (undo-tree-id1072 . -1626) (undo-tree-id1073 . -1633) (undo-tree-id1074 . -1921) (undo-tree-id1075 . -1924) (undo-tree-id1076 . -2131) (undo-tree-id1077 . -2132) (undo-tree-id1078 . -2689) (undo-tree-id1079 . -2692) (undo-tree-id1080 . -2886) (undo-tree-id1081 . -2890) (undo-tree-id1082 . -3096) (undo-tree-id1083 . -3116) (undo-tree-id1084 . -380) (undo-tree-id1085 . -946) (undo-tree-id1086 . -946) (undo-tree-id1087 . -946) (undo-tree-id1088 . -946)) nil (25759 40905 646595 482000) 0 nil])
([nil nil ((381 . 382) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -381) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) 382 (378 . 382) (365 . 378) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -365) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -366) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) 367 (360 . 367) (359 . 360) (t 25759 40905 651917 489000) 297) nil (25759 40963 416413 808000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1950 . 1951) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -2030) (1950 . 2031) (t 25759 40963 428298 902000)) nil (25759 41001 589999 760000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2395 . 2396) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -2475) (2395 . 2476)) nil (25759 41001 589998 439000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3270 . 3271) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -3350) (3270 . 3351)) nil (25759 41001 589997 205000) 0 nil])
([nil nil ((#("def plot_learning_curves(loss, val_loss):
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))
    plt.axis([1, 20, 0, 0.05])
    plt.legend(fontsize=14)
    plt.xlabel(\"Epochs\")
    plt.ylabel(\"Loss\")
    plt.grid(True)
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 39 (fontified t) 39 40 (fontified t face (rainbow-delimiters-depth-1-face)) 40 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-1-face)) 55 64 (fontified t) 64 65 (fontified t face (rainbow-delimiters-depth-2-face)) 65 68 (fontified t face font-lock-builtin-face) 68 69 (fontified t face (rainbow-delimiters-depth-3-face)) 69 73 (fontified t) 73 74 (fontified t face (rainbow-delimiters-depth-3-face)) 74 75 (fontified t face (rainbow-delimiters-depth-2-face)) 75 89 (fontified t) 89 94 (fontified t face font-lock-string-face) 94 102 (fontified t) 102 113 (fontified t face font-lock-string-face) 113 117 (face font-lock-string-face fontified t) 117 118 (face (rainbow-delimiters-depth-1-face) fontified t) 118 119 (fontified t) 119 131 (fontified t) 131 132 (fontified t face (rainbow-delimiters-depth-1-face)) 132 141 (fontified t) 141 142 (fontified t face (rainbow-delimiters-depth-2-face)) 142 145 (fontified t face font-lock-builtin-face) 145 146 (fontified t face (rainbow-delimiters-depth-3-face)) 146 154 (fontified t) 154 155 (fontified t face (rainbow-delimiters-depth-3-face)) 155 156 (fontified t face (rainbow-delimiters-depth-2-face)) 156 172 (fontified t) 172 177 (fontified t face font-lock-string-face) 177 185 (fontified t) 185 202 (fontified t face font-lock-string-face) 202 203 (fontified t face (rainbow-delimiters-depth-1-face)) 203 215 (fontified t) 215 216 (fontified t face (rainbow-delimiters-depth-1-face)) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 241 (fontified t) 241 242 (fontified t face (rainbow-delimiters-depth-1-face)) 242 260 (fontified t) 260 264 (fontified t) 264 265 (fontified t face (rainbow-delimiters-depth-2-face)) 265 273 (fontified t) 273 277 (fontified t face font-lock-constant-face) 277 278 (fontified t face (rainbow-delimiters-depth-2-face)) 278 279 (fontified t face (rainbow-delimiters-depth-1-face)) 279 280 (fontified t) 280 292 (fontified t) 292 293 (fontified t face (rainbow-delimiters-depth-1-face)) 293 294 (fontified t face (rainbow-delimiters-depth-2-face)) 294 308 (fontified t) 308 309 (fontified t face (rainbow-delimiters-depth-2-face)) 309 310 (fontified t face (rainbow-delimiters-depth-1-face)) 310 325 (fontified t) 325 326 (fontified t face (rainbow-delimiters-depth-1-face)) 326 337 (fontified t) 337 338 (fontified t face (rainbow-delimiters-depth-1-face)) 338 353 (fontified t) 353 354 (fontified t face (rainbow-delimiters-depth-1-face)) 354 362 (fontified t face font-lock-string-face) 362 363 (fontified t face (rainbow-delimiters-depth-1-face)) 363 378 (fontified t) 378 379 (fontified t face (rainbow-delimiters-depth-1-face)) 379 385 (fontified t face font-lock-string-face) 385 386 (fontified t face (rainbow-delimiters-depth-1-face)) 386 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 404 (fontified t face font-lock-constant-face) 404 405 (fontified t face (rainbow-delimiters-depth-1-face)) 405 406 (fontified t)) . 2863) (undo-tree-id1674 . -405) (undo-tree-id1675 . -387) (undo-tree-id1676 . -387) (undo-tree-id1677 . -46) (undo-tree-id1678 . -46) (undo-tree-id1679 . -46) (undo-tree-id1680 . -46) (undo-tree-id1681 . -123) (undo-tree-id1682 . -123) (undo-tree-id1683 . -123) (undo-tree-id1684 . -123) (undo-tree-id1685 . -197) (undo-tree-id1686 . -201) (undo-tree-id1687 . -46) (undo-tree-id1688 . -46) (undo-tree-id1689 . -46) (undo-tree-id1690 . -46) (undo-tree-id1691 . -123) (undo-tree-id1692 . -123) (undo-tree-id1693 . -123) (undo-tree-id1694 . -123) (undo-tree-id1695 . -343) (undo-tree-id1696 . -343) (undo-tree-id1697 . -368) (undo-tree-id1698 . -368) (undo-tree-id1699 . -46) (undo-tree-id1700 . -46) (undo-tree-id1701 . -46) (undo-tree-id1702 . -46) (undo-tree-id1703 . -123) (undo-tree-id1704 . -123) (undo-tree-id1705 . -123) (undo-tree-id1706 . -123) (undo-tree-id1707 . -343) (undo-tree-id1708 . -343) (undo-tree-id1709 . -368) (undo-tree-id1710 . -368) (undo-tree-id1711 . -42) (undo-tree-id1712 . -119) (undo-tree-id1713 . -204) (undo-tree-id1714 . -204) (undo-tree-id1715 . -204) (undo-tree-id1716 . -280) (undo-tree-id1717 . -311) (undo-tree-id1718 . -339) (undo-tree-id1719 . -364) (undo-tree-id1720 . -387) (undo-tree-id1721 . -387) (undo-tree-id1722 . -387) (undo-tree-id1723 . -387) (undo-tree-id1724 . -387) (undo-tree-id1725 . -406) (undo-tree-id1726 . -406) (undo-tree-id1727 . -387) (undo-tree-id1728 . -197) (undo-tree-id1729 . -201) (undo-tree-id1730 . -364) (undo-tree-id1731 . -364) (undo-tree-id1732 . -364) (undo-tree-id1733 . -339) (undo-tree-id1734 . -311) (undo-tree-id1735 . -280) (undo-tree-id1736 . -204) (undo-tree-id1737 . -119) (undo-tree-id1738 . -42) (undo-tree-id1739 . -406) (undo-tree-id1740 . -387) (undo-tree-id1741 . -42) (undo-tree-id1742 . -42) (undo-tree-id1743 . -42) (undo-tree-id1744 . -42) (undo-tree-id1745 . -42) (undo-tree-id1746 . -119) (undo-tree-id1747 . -204) (undo-tree-id1748 . -280) (undo-tree-id1749 . -311) (undo-tree-id1750 . -339) (undo-tree-id1751 . -364) (undo-tree-id1752 . -387) (undo-tree-id1753 . -387) (undo-tree-id1754 . -387) (undo-tree-id1755 . -406) 3250) nil (25759 41001 589993 173000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1575 . 1576) (#("
" 0 1 (fontified nil)) . -1981) (1575 . 1982)) nil (25759 41001 589928 291000) 0 nil])
([nil nil ((1 . 3540) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)
    time = np.linspace(0, 1, n_steps)
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  #   wave 1
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    plt.plot(series, \".-\")
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")
    plt.grid(True)
    if x_label:
        plt.xlabel(x_label, fontsize=16)
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)
    plt.hlines(0, 0, 100, linewidth=1)
    plt.axis([0, n_steps + 1, -1, 1])
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")

def plot_learning_curves(loss, val_loss):
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))
    plt.axis([1, 20, 0, 0.05])
    plt.legend(fontsize=14)
    plt.xlabel(\"Epochs\")
    plt.ylabel(\"Loss\")
    plt.grid(True)

###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]

print(X_train.shape, y_train.shape)


###############################################################################
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential(
    [keras.layers.Flatten(input_shape=[50, 1]), keras.layers.Dense(1)]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))


model.evaluate(X_valid, y_valid)




###############################################################################
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 296 (fontified t face font-lock-comment-delimiter-face) 296 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 381 (fontified t face font-lock-comment-face) 381 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 401 (fontified t) 401 403 (fontified t) 403 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 582 (fontified t face font-lock-variable-name-face) 582 584 (fontified t) 584 589 (fontified t face font-lock-variable-name-face) 589 591 (fontified t) 591 599 (fontified t face font-lock-variable-name-face) 599 601 (fontified t) 601 609 (fontified t face font-lock-variable-name-face) 609 626 (fontified t) 626 627 (fontified t face (rainbow-delimiters-depth-1-face)) 627 643 (fontified t) 643 644 (fontified t face (rainbow-delimiters-depth-1-face)) 644 649 (fontified t) 649 653 (fontified t face font-lock-variable-name-face) 653 667 (fontified t) 667 668 (fontified t face (rainbow-delimiters-depth-1-face)) 668 681 (fontified t) 681 682 (fontified t face (rainbow-delimiters-depth-1-face)) 682 687 (fontified t) 687 693 (fontified t face font-lock-variable-name-face) 693 708 (fontified t) 708 709 (fontified t face (rainbow-delimiters-depth-1-face)) 709 710 (fontified t face (rainbow-delimiters-depth-2-face)) 710 725 (fontified t) 725 726 (fontified t face (rainbow-delimiters-depth-2-face)) 726 729 (fontified t) 729 730 (fontified t face (rainbow-delimiters-depth-2-face)) 730 745 (fontified t) 745 746 (fontified t face (rainbow-delimiters-depth-2-face)) 746 747 (fontified t face (rainbow-delimiters-depth-1-face)) 747 749 (fontified t) 749 753 (fontified t face font-lock-comment-delimiter-face) 753 760 (fontified t face font-lock-comment-face) 760 764 (fontified t) 764 770 (fontified t face font-lock-variable-name-face) 770 786 (fontified t) 786 787 (fontified t face (rainbow-delimiters-depth-1-face)) 787 788 (fontified t face (rainbow-delimiters-depth-2-face)) 788 803 (fontified t) 803 804 (fontified t face (rainbow-delimiters-depth-2-face)) 804 807 (fontified t) 807 808 (fontified t face (rainbow-delimiters-depth-2-face)) 808 823 (fontified t) 823 824 (fontified t face (rainbow-delimiters-depth-2-face)) 824 825 (fontified t face (rainbow-delimiters-depth-1-face)) 825 827 (fontified t) 827 829 (fontified t face font-lock-comment-delimiter-face) 829 838 (fontified t face font-lock-comment-face) 838 842 (fontified t) 842 848 (fontified t face font-lock-variable-name-face) 848 858 (fontified t) 858 859 (fontified t face (rainbow-delimiters-depth-1-face)) 859 873 (fontified t) 873 874 (fontified t face (rainbow-delimiters-depth-2-face)) 874 882 (fontified t) 882 893 (fontified t) 893 894 (face (rainbow-delimiters-depth-2-face) fontified t) 894 900 (fontified t) 900 901 (face (rainbow-delimiters-depth-1-face) fontified t) 901 903 (fontified t) 903 905 (face font-lock-comment-delimiter-face fontified t) 905 913 (face font-lock-comment-face fontified t) 913 917 (fontified t) 917 923 (fontified t face font-lock-keyword-face) 923 930 (fontified t) 930 931 (fontified t face (rainbow-delimiters-depth-1-face)) 931 946 (fontified t) 946 947 (fontified t face (rainbow-delimiters-depth-1-face)) 947 954 (fontified t) 954 955 (fontified t face (rainbow-delimiters-depth-1-face)) 955 965 (fontified t) 965 966 (fontified t face (rainbow-delimiters-depth-1-face)) 966 969 (fontified t) 969 972 (fontified t face font-lock-keyword-face) 972 973 (fontified t) 973 984 (fontified t face font-lock-function-name-face) 984 985 (fontified t face (rainbow-delimiters-depth-1-face)) 985 1000 (fontified t) 1000 1004 (fontified t face font-lock-constant-face) 1004 1013 (fontified t) 1013 1017 (fontified t face font-lock-constant-face) 1017 1027 (fontified t) 1027 1032 (fontified t face font-lock-string-face) 1032 1042 (fontified t) 1042 1050 (fontified t face font-lock-string-face) 1050 1059 (fontified t) 1059 1063 (fontified t face font-lock-constant-face) 1063 1064 (fontified t) 1064 1065 (fontified t face (rainbow-delimiters-depth-1-face)) 1065 1079 (fontified t) 1079 1080 (fontified t face (rainbow-delimiters-depth-1-face)) 1080 1088 (fontified t) 1088 1092 (fontified t face font-lock-string-face) 1092 1093 (fontified t face (rainbow-delimiters-depth-1-face)) 1093 1098 (fontified t) 1098 1100 (fontified t face font-lock-keyword-face) 1100 1103 (fontified t) 1103 1105 (fontified t face font-lock-keyword-face) 1105 1106 (fontified t) 1106 1109 (fontified t face font-lock-keyword-face) 1109 1110 (fontified t) 1110 1114 (fontified t face font-lock-constant-face) 1114 1132 (fontified t) 1132 1133 (fontified t face (rainbow-delimiters-depth-1-face)) 1133 1145 (fontified t) 1145 1149 (fontified t face font-lock-string-face) 1149 1157 (fontified t) 1157 1165 (fontified t face font-lock-string-face) 1165 1166 (fontified t face (rainbow-delimiters-depth-1-face)) 1166 1171 (fontified t) 1171 1173 (fontified t face font-lock-keyword-face) 1173 1181 (fontified t) 1181 1183 (fontified t face font-lock-keyword-face) 1183 1184 (fontified t) 1184 1187 (fontified t face font-lock-keyword-face) 1187 1188 (fontified t) 1188 1192 (fontified t face font-lock-constant-face) 1192 1210 (fontified t) 1210 1211 (fontified t face (rainbow-delimiters-depth-1-face)) 1211 1228 (fontified t) 1228 1232 (fontified t face font-lock-string-face) 1232 1255 (fontified t) 1255 1267 (fontified t face font-lock-string-face) 1267 1268 (fontified t face (rainbow-delimiters-depth-1-face)) 1268 1281 (fontified t) 1281 1282 (fontified t face (rainbow-delimiters-depth-1-face)) 1282 1286 (fontified t face font-lock-constant-face) 1286 1287 (fontified t face (rainbow-delimiters-depth-1-face)) 1287 1292 (fontified t) 1292 1294 (fontified t face font-lock-keyword-face) 1294 1322 (fontified t) 1322 1323 (fontified t face (rainbow-delimiters-depth-1-face)) 1323 1343 (fontified t) 1343 1344 (fontified t face (rainbow-delimiters-depth-1-face)) 1344 1349 (fontified t) 1349 1351 (fontified t face font-lock-keyword-face) 1351 1379 (fontified t) 1379 1380 (fontified t face (rainbow-delimiters-depth-1-face)) 1380 1412 (fontified t) 1412 1413 (fontified t face (rainbow-delimiters-depth-1-face)) 1413 1414 (fontified t) 1414 1428 (fontified t) 1428 1429 (fontified t face (rainbow-delimiters-depth-1-face)) 1429 1451 (fontified t) 1451 1452 (fontified t face (rainbow-delimiters-depth-1-face)) 1452 1465 (fontified t) 1465 1466 (fontified t face (rainbow-delimiters-depth-1-face)) 1466 1467 (fontified t face (rainbow-delimiters-depth-2-face)) 1467 1488 (fontified t) 1488 1489 (fontified t face (rainbow-delimiters-depth-2-face)) 1489 1490 (fontified t face (rainbow-delimiters-depth-1-face)) 1490 1495 (fontified t) 1495 1497 (fontified t face font-lock-keyword-face) 1497 1505 (fontified t) 1505 1508 (fontified t face font-lock-keyword-face) 1508 1509 (fontified t) 1509 1510 (fontified t face (rainbow-delimiters-depth-1-face)) 1510 1512 (fontified t) 1512 1514 (fontified t face font-lock-keyword-face) 1514 1521 (fontified t) 1521 1522 (fontified t face (rainbow-delimiters-depth-1-face)) 1522 1542 (fontified t) 1542 1543 (fontified t face (rainbow-delimiters-depth-1-face)) 1543 1560 (fontified t) 1560 1572 (fontified t face font-lock-string-face) 1572 1573 (fontified t face (rainbow-delimiters-depth-1-face)) 1573 1574 (fontified t) 1574 1575 (fontified t rear-nonsticky t) 1575 1578 (fontified t face font-lock-keyword-face) 1578 1579 (fontified t) 1579 1599 (fontified t face font-lock-function-name-face) 1599 1600 (fontified t face (rainbow-delimiters-depth-1-face)) 1600 1614 (fontified t) 1614 1615 (fontified t face (rainbow-delimiters-depth-1-face)) 1615 1629 (fontified t) 1629 1630 (fontified t face (rainbow-delimiters-depth-1-face)) 1630 1639 (fontified t) 1639 1640 (fontified t face (rainbow-delimiters-depth-2-face)) 1640 1643 (fontified t face font-lock-builtin-face) 1643 1644 (fontified t face (rainbow-delimiters-depth-3-face)) 1644 1648 (fontified t) 1648 1649 (fontified t face (rainbow-delimiters-depth-3-face)) 1649 1650 (fontified t face (rainbow-delimiters-depth-2-face)) 1650 1664 (fontified t) 1664 1669 (fontified t face font-lock-string-face) 1669 1677 (fontified t) 1677 1688 (fontified t face font-lock-string-face) 1688 1692 (fontified t face font-lock-string-face) 1692 1693 (fontified t face (rainbow-delimiters-depth-1-face)) 1693 1694 (fontified t) 1694 1706 (fontified t) 1706 1707 (fontified t face (rainbow-delimiters-depth-1-face)) 1707 1716 (fontified t) 1716 1717 (fontified t face (rainbow-delimiters-depth-2-face)) 1717 1720 (fontified t face font-lock-builtin-face) 1720 1721 (fontified t face (rainbow-delimiters-depth-3-face)) 1721 1729 (fontified t) 1729 1730 (fontified t face (rainbow-delimiters-depth-3-face)) 1730 1731 (fontified t face (rainbow-delimiters-depth-2-face)) 1731 1747 (fontified t) 1747 1752 (fontified t face font-lock-string-face) 1752 1760 (fontified t) 1760 1777 (fontified t face font-lock-string-face) 1777 1778 (fontified t face (rainbow-delimiters-depth-1-face)) 1778 1790 (fontified t) 1790 1791 (fontified t face (rainbow-delimiters-depth-1-face)) 1791 1792 (fontified t face (rainbow-delimiters-depth-1-face)) 1792 1816 (fontified t) 1816 1817 (fontified t face (rainbow-delimiters-depth-1-face)) 1817 1835 (fontified t) 1835 1839 (fontified t) 1839 1840 (fontified t face (rainbow-delimiters-depth-2-face)) 1840 1848 (fontified t) 1848 1852 (fontified t face font-lock-constant-face) 1852 1853 (fontified t face (rainbow-delimiters-depth-2-face)) 1853 1854 (fontified t face (rainbow-delimiters-depth-1-face)) 1854 1855 (fontified t) 1855 1867 (fontified t) 1867 1868 (fontified t face (rainbow-delimiters-depth-1-face)) 1868 1869 (fontified t face (rainbow-delimiters-depth-2-face)) 1869 1883 (fontified t) 1883 1884 (fontified t face (rainbow-delimiters-depth-2-face)) 1884 1885 (fontified t face (rainbow-delimiters-depth-1-face)) 1885 1900 (fontified t) 1900 1901 (fontified t face (rainbow-delimiters-depth-1-face)) 1901 1912 (fontified t) 1912 1913 (fontified t face (rainbow-delimiters-depth-1-face)) 1913 1928 (fontified t) 1928 1929 (fontified t face (rainbow-delimiters-depth-1-face)) 1929 1937 (fontified t face font-lock-string-face) 1937 1938 (fontified t face (rainbow-delimiters-depth-1-face)) 1938 1953 (fontified t) 1953 1954 (fontified t face (rainbow-delimiters-depth-1-face)) 1954 1960 (fontified t face font-lock-string-face) 1960 1961 (fontified t face (rainbow-delimiters-depth-1-face)) 1961 1974 (fontified t) 1974 1975 (fontified t face (rainbow-delimiters-depth-1-face)) 1975 1979 (fontified t face font-lock-constant-face) 1979 1980 (fontified t face (rainbow-delimiters-depth-1-face)) 1980 1981 (fontified t) 1981 1982 (fontified t) 1982 2061 (fontified t face font-lock-comment-delimiter-face) 2061 2062 (fontified t face font-lock-comment-face) 2062 2069 (fontified t face font-lock-variable-name-face) 2069 2075 (fontified t) 2075 2081 (fontified t face font-lock-variable-name-face) 2081 2104 (fontified t) 2104 2105 (fontified t face (rainbow-delimiters-depth-1-face)) 2105 2123 (fontified t) 2123 2124 (fontified t face (rainbow-delimiters-depth-1-face)) 2124 2125 (fontified t) 2125 2132 (fontified t face font-lock-variable-name-face) 2132 2134 (fontified t) 2134 2141 (fontified t face font-lock-variable-name-face) 2141 2150 (fontified t) 2150 2151 (fontified t face (rainbow-delimiters-depth-1-face)) 2151 2166 (fontified t) 2166 2167 (fontified t face (rainbow-delimiters-depth-1-face)) 2167 2175 (fontified t) 2175 2176 (fontified t face (rainbow-delimiters-depth-1-face)) 2176 2185 (fontified t) 2185 2186 (fontified t face (rainbow-delimiters-depth-1-face)) 2186 2187 (fontified t) 2187 2194 (fontified t face font-lock-variable-name-face) 2194 2196 (fontified t) 2196 2203 (fontified t face font-lock-variable-name-face) 2203 2212 (fontified t) 2212 2213 (fontified t face (rainbow-delimiters-depth-1-face)) 2213 2232 (fontified t) 2232 2233 (fontified t face (rainbow-delimiters-depth-1-face)) 2233 2241 (fontified t) 2241 2242 (fontified t face (rainbow-delimiters-depth-1-face)) 2242 2255 (fontified t) 2255 2256 (fontified t face (rainbow-delimiters-depth-1-face)) 2256 2257 (fontified t) 2257 2263 (fontified t face font-lock-variable-name-face) 2263 2265 (fontified t) 2265 2271 (fontified t face font-lock-variable-name-face) 2271 2280 (fontified t) 2280 2281 (fontified t face (rainbow-delimiters-depth-1-face)) 2281 2296 (fontified t) 2296 2297 (fontified t face (rainbow-delimiters-depth-1-face)) 2297 2305 (fontified t) 2305 2306 (fontified t face (rainbow-delimiters-depth-1-face)) 2306 2315 (fontified t) 2315 2316 (fontified t face (rainbow-delimiters-depth-1-face)) 2316 2318 (fontified t) 2318 2320 (fontified t face font-lock-keyword-face) 2320 2323 (fontified t face font-lock-keyword-face) 2323 2324 (fontified t face (rainbow-delimiters-depth-1-face)) 2324 2352 (fontified t) 2352 2353 (fontified t face (rainbow-delimiters-depth-1-face)) 2353 2354 (fontified t) 2354 2355 (fontified t) 2355 2356 (rear-nonsticky t fontified t) 2356 2435 (fontified t face font-lock-comment-delimiter-face) 2435 2436 (fontified t face font-lock-comment-face) 2436 2439 (fontified t face font-lock-variable-name-face) 2439 2441 (fontified t) 2441 2445 (fontified t face font-lock-variable-name-face) 2445 2460 (fontified t) 2460 2461 (fontified t face (rainbow-delimiters-depth-1-face)) 2461 2481 (fontified t) 2481 2486 (fontified t) 2486 2490 (face font-lock-constant-face fontified t) 2490 2500 (fontified t) 2500 2501 (face (rainbow-delimiters-depth-2-face) fontified t) 2501 2506 (fontified t) 2506 2507 (face (rainbow-delimiters-depth-2-face) fontified t) 2507 2508 (face (rainbow-delimiters-depth-1-face) fontified t) 2508 2509 (fontified t) 2509 2512 (face font-lock-keyword-face) 2517 2519 (face font-lock-keyword-face) 2520 2525 (face font-lock-builtin-face) 2525 2526 (face (rainbow-delimiters-depth-1-face)) 2527 2528 (face (rainbow-delimiters-depth-1-face)) 2541 2542 (face (rainbow-delimiters-depth-1-face)) 2546 2547 (face (rainbow-delimiters-depth-2-face)) 2550 2551 (face (rainbow-delimiters-depth-2-face)) 2551 2552 (face (rainbow-delimiters-depth-1-face)) 2568 2569 (face (rainbow-delimiters-depth-1-face)) 2585 2586 (face (rainbow-delimiters-depth-2-face)) 2595 2596 (face (rainbow-delimiters-depth-2-face)) 2613 2614 (face (rainbow-delimiters-depth-2-face)) 2620 2621 (face (rainbow-delimiters-depth-2-face)) 2639 2640 (face (rainbow-delimiters-depth-2-face)) 2640 2648 (face font-lock-string-face) 2649 2651 (face font-lock-keyword-face) 2661 2665 (face font-lock-keyword-face) 2666 2670 (face font-lock-constant-face) 2670 2671 (face (rainbow-delimiters-depth-2-face)) 2688 2689 (face (rainbow-delimiters-depth-2-face)) 2697 2698 (face (rainbow-delimiters-depth-2-face)) 2704 2705 (face (rainbow-delimiters-depth-1-face)) 2714 2715 (face (rainbow-delimiters-depth-1-face)) 2715 2716 (face (rainbow-delimiters-depth-1-face)) 2718 2724 (face font-lock-variable-name-face) 2734 2735 (face (rainbow-delimiters-depth-1-face)) 2740 2741 (face (rainbow-delimiters-depth-1-face)) 2749 2750 (face (rainbow-delimiters-depth-1-face)) 2781 2782 (face (rainbow-delimiters-depth-2-face)) 2797 2798 (face (rainbow-delimiters-depth-2-face)) 2798 2799 (face (rainbow-delimiters-depth-1-face)) 2800 2801 (rear-nonsticky t) 2801 2880 (face font-lock-comment-delimiter-face) 2880 2881 (face font-lock-comment-face) 2892 2893 (face (rainbow-delimiters-depth-1-face)) 2900 2901 (face (rainbow-delimiters-depth-2-face)) 2908 2909 (face (rainbow-delimiters-depth-2-face)) 2918 2919 (face (rainbow-delimiters-depth-2-face)) 2923 2924 (face (rainbow-delimiters-depth-2-face)) 2932 2933 (face (rainbow-delimiters-depth-2-face)) 2937 2938 (face (rainbow-delimiters-depth-2-face)) 2938 2939 (face (rainbow-delimiters-depth-1-face)) 2948 2949 (face (rainbow-delimiters-depth-1-face)) 2949 2950 (face (rainbow-delimiters-depth-1-face)) 2966 2967 (face (rainbow-delimiters-depth-1-face)) 2969 2970 (face (rainbow-delimiters-depth-1-face)) 2989 2990 (face (rainbow-delimiters-depth-1-face)) 2992 2993 (face (rainbow-delimiters-depth-1-face)) 2995 3000 (face font-lock-variable-name-face) 3026 3027 (face (rainbow-delimiters-depth-1-face)) 3032 3033 (face (rainbow-delimiters-depth-2-face)) 3053 3054 (face (rainbow-delimiters-depth-3-face)) 3066 3067 (face (rainbow-delimiters-depth-4-face)) 3072 3073 (face (rainbow-delimiters-depth-4-face)) 3073 3074 (face (rainbow-delimiters-depth-3-face)) 3094 3095 (face (rainbow-delimiters-depth-3-face)) 3096 3097 (face (rainbow-delimiters-depth-3-face)) 3097 3098 (face (rainbow-delimiters-depth-2-face)) 3099 3100 (face (rainbow-delimiters-depth-1-face)) 3108 3115 (face font-lock-builtin-face) 3115 3116 (face (rainbow-delimiters-depth-1-face)) 3121 3126 (face font-lock-string-face) 3138 3144 (face font-lock-string-face) 3144 3145 (face (rainbow-delimiters-depth-1-face)) 3146 3153 (face font-lock-variable-name-face) 3165 3166 (face (rainbow-delimiters-depth-1-face)) 3211 3212 (face (rainbow-delimiters-depth-2-face)) 3228 3229 (face (rainbow-delimiters-depth-2-face)) 3229 3230 (face (rainbow-delimiters-depth-1-face)) 3247 3248 (face (rainbow-delimiters-depth-1-face)) 3264 3265 (face (rainbow-delimiters-depth-1-face)) 3269 3270 (rear-nonsticky t) 3270 3349 (face font-lock-comment-delimiter-face) 3349 3350 (face font-lock-comment-face) 3370 3371 (face (rainbow-delimiters-depth-1-face)) 3386 3387 (face (rainbow-delimiters-depth-2-face)) 3387 3393 (face font-lock-string-face) 3393 3394 (face (rainbow-delimiters-depth-2-face)) 3411 3412 (face (rainbow-delimiters-depth-2-face)) 3412 3422 (face font-lock-string-face) 3422 3423 (face (rainbow-delimiters-depth-2-face)) 3423 3424 (face (rainbow-delimiters-depth-1-face)) 3433 3434 (face (rainbow-delimiters-depth-1-face)) 3434 3435 (face (rainbow-delimiters-depth-1-face)) 3437 3443 (face font-lock-variable-name-face) 3459 3460 (face (rainbow-delimiters-depth-1-face)) 3467 3468 (face (rainbow-delimiters-depth-1-face)) 3480 3481 (face (rainbow-delimiters-depth-1-face)) 3488 3489 (face (rainbow-delimiters-depth-2-face)) 3496 3497 (face (rainbow-delimiters-depth-2-face)) 3506 3507 (face (rainbow-delimiters-depth-2-face)) 3511 3512 (face (rainbow-delimiters-depth-2-face)) 3520 3521 (face (rainbow-delimiters-depth-2-face)) 3525 3526 (face (rainbow-delimiters-depth-2-face)) 3526 3527 (face (rainbow-delimiters-depth-1-face)) 3536 3537 (face (rainbow-delimiters-depth-1-face)) 3537 3538 (face (rainbow-delimiters-depth-1-face))) . 1) (undo-tree-id1112 . 3158) (undo-tree-id1113 . -1575) (undo-tree-id1114 . -1980) (undo-tree-id1115 . -379) (undo-tree-id1116 . -1980) (undo-tree-id1117 . -3268) (undo-tree-id1118 . 271) (undo-tree-id1119 . -986) (undo-tree-id1120 . -986) (undo-tree-id1121 . -1269) (undo-tree-id1122 . -1269) (undo-tree-id1123 . -364) (undo-tree-id1124 . -364) (undo-tree-id1125 . -364) (undo-tree-id1126 . -364) (undo-tree-id1127 . -364) (undo-tree-id1128 . -364) (undo-tree-id1129 . -364) (undo-tree-id1130 . -380) (undo-tree-id1131 . -380) (undo-tree-id1132 . -380) (undo-tree-id1133 . -380) (undo-tree-id1134 . -380) (undo-tree-id1135 . -380) (undo-tree-id1136 . -380) (undo-tree-id1137 . -380) (undo-tree-id1138 . -380) (undo-tree-id1139 . -380) (undo-tree-id1140 . -380) (undo-tree-id1141 . -380) (undo-tree-id1142 . -399) (undo-tree-id1143 . -399) (undo-tree-id1144 . -399) (undo-tree-id1145 . -422) (undo-tree-id1146 . -424) (undo-tree-id1147 . -424) (undo-tree-id1148 . -424) (undo-tree-id1149 . -424) (undo-tree-id1150 . -424) (undo-tree-id1151 . -446) (undo-tree-id1152 . -1532) (undo-tree-id1153 . -1532) (undo-tree-id1154 . -522) (undo-tree-id1155 . -524) (undo-tree-id1156 . -525) (undo-tree-id1157 . -547) (undo-tree-id1158 . -594) (undo-tree-id1159 . -666) (undo-tree-id1160 . -2557) (undo-tree-id1161 . -2557) (undo-tree-id1162 . -2557) (undo-tree-id1163 . -704) (undo-tree-id1164 . -781) (undo-tree-id1165 . -859) (undo-tree-id1166 . -934) (undo-tree-id1167 . -967) (undo-tree-id1168 . -968) (undo-tree-id1169 . -984) (undo-tree-id1170 . -1007) (undo-tree-id1171 . -1007) (undo-tree-id1172 . -1007) (undo-tree-id1173 . -1065) (undo-tree-id1174 . -1088) (undo-tree-id1175 . -1114) (undo-tree-id1176 . -1137) (undo-tree-id1177 . -1188) (undo-tree-id1178 . -1215) (undo-tree-id1179 . -1286) (undo-tree-id1180 . -1302) (undo-tree-id1181 . -1325) (undo-tree-id1182 . -1302) (undo-tree-id1183 . -1302) (undo-tree-id1184 . -1302) (undo-tree-id1185 . -1302) (undo-tree-id1186 . -1302) (undo-tree-id1187 . -1302) (undo-tree-id1188 . -1302) (undo-tree-id1189 . -1302) (undo-tree-id1190 . -1286) (undo-tree-id1191 . -1215) (undo-tree-id1192 . -1188) (undo-tree-id1193 . -1137) (undo-tree-id1194 . -1114) (undo-tree-id1195 . -1088) (undo-tree-id1196 . -1065) (undo-tree-id1197 . -1007) (undo-tree-id1198 . -984) (undo-tree-id1199 . -968) (undo-tree-id1200 . -967) (undo-tree-id1201 . -934) (undo-tree-id1202 . -859) (undo-tree-id1203 . -781) (undo-tree-id1204 . -704) (undo-tree-id1205 . -666) (undo-tree-id1206 . -594) (undo-tree-id1207 . -547) (undo-tree-id1208 . -525) (undo-tree-id1209 . -524) (undo-tree-id1210 . -522) (undo-tree-id1211 . -446) (undo-tree-id1212 . -446) (undo-tree-id1213 . -446) (undo-tree-id1214 . -446) (undo-tree-id1215 . -446) (undo-tree-id1216 . -446) (undo-tree-id1217 . -446) (undo-tree-id1218 . -446) (undo-tree-id1219 . -446) (undo-tree-id1220 . -446) (undo-tree-id1221 . -446) (undo-tree-id1222 . -522) (undo-tree-id1223 . -522) (undo-tree-id1224 . -522) (undo-tree-id1225 . -522) (undo-tree-id1226 . -522) (undo-tree-id1227 . -522) (undo-tree-id1228 . -524) (undo-tree-id1229 . -525) (undo-tree-id1230 . -547) (undo-tree-id1231 . -594) (undo-tree-id1232 . -666) (undo-tree-id1233 . -704) (undo-tree-id1234 . -781) (undo-tree-id1235 . -859) (undo-tree-id1236 . -934) (undo-tree-id1237 . -967) (undo-tree-id1238 . -968) (undo-tree-id1239 . -984) (undo-tree-id1240 . -1007) (undo-tree-id1241 . -1065) (undo-tree-id1242 . -1088) (undo-tree-id1243 . -1114) (undo-tree-id1244 . -1137) (undo-tree-id1245 . -1188) (undo-tree-id1246 . -1215) (undo-tree-id1247 . -1286) (undo-tree-id1248 . -1302) (undo-tree-id1249 . -1325) (undo-tree-id1250 . -1359) (undo-tree-id1251 . -1382) (undo-tree-id1252 . -1435) (undo-tree-id1253 . -1474) (undo-tree-id1254 . -1512) (undo-tree-id1255 . -1545) (undo-tree-id1256 . -1574) (undo-tree-id1257 . -1574) (undo-tree-id1258 . -1574) (undo-tree-id1259 . -1981) (undo-tree-id1260 . -2003) (undo-tree-id1261 . -3102) (undo-tree-id1262 . -3102) (undo-tree-id1263 . -3102) (undo-tree-id1264 . -3102) (undo-tree-id1265 . -3268) (undo-tree-id1266 . -3268) (undo-tree-id1267 . -3268) (undo-tree-id1268 . -3268) (undo-tree-id1269 . -3268) (undo-tree-id1270 . -3268) (undo-tree-id1271 . -3268) (undo-tree-id1272 . -3268) (undo-tree-id1273 . -2073) (undo-tree-id1274 . -2096) (undo-tree-id1275 . -2146) (undo-tree-id1276 . -2208) (undo-tree-id1277 . -2278) (undo-tree-id1278 . -2278) (undo-tree-id1279 . -2278) (undo-tree-id1280 . -2278) (undo-tree-id1281 . -2278) (undo-tree-id1282 . -2208) (undo-tree-id1283 . -2208) (undo-tree-id1284 . -2208) (undo-tree-id1285 . -2208) (undo-tree-id1286 . -2208) (undo-tree-id1287 . -2208) (undo-tree-id1288 . -2146) (undo-tree-id1289 . -2146) (undo-tree-id1290 . -2146) (undo-tree-id1291 . -2146) (undo-tree-id1292 . -2096) (undo-tree-id1293 . -2073) (undo-tree-id1294 . -2003) (undo-tree-id1295 . -1981) (undo-tree-id1296 . -1981) (undo-tree-id1297 . -1981) (undo-tree-id1298 . -1981) (undo-tree-id1299 . -1981) (undo-tree-id1300 . -2003) (undo-tree-id1301 . -2003) (undo-tree-id1302 . -2003) (undo-tree-id1303 . -2003) (undo-tree-id1304 . -2003) (undo-tree-id1305 . -2003) (undo-tree-id1306 . -2073) (undo-tree-id1307 . -2096) (undo-tree-id1308 . -2146) (undo-tree-id1309 . -2208) (undo-tree-id1310 . -2278) (undo-tree-id1311 . -2278) (undo-tree-id1312 . -2278) (undo-tree-id1313 . -2278) (undo-tree-id1314 . -2278) (undo-tree-id1315 . -2278) (undo-tree-id1316 . -2278) (undo-tree-id1317 . -2278) (undo-tree-id1318 . -2317) (undo-tree-id1319 . -2339) (undo-tree-id1320 . -2339) (undo-tree-id1321 . -2339) (undo-tree-id1322 . -2339) (undo-tree-id1323 . -2339) (undo-tree-id1324 . -2339) (undo-tree-id1325 . -2339) (undo-tree-id1326 . -2339) (undo-tree-id1327 . -2339) (undo-tree-id1328 . -2339) (undo-tree-id1329 . -2354) (undo-tree-id1330 . -2354) (undo-tree-id1331 . -2354) (undo-tree-id1332 . -2354) (undo-tree-id1333 . -2354) (undo-tree-id1334 . -2355) (undo-tree-id1335 . -2355) (undo-tree-id1336 . -2355) (undo-tree-id1337 . -2355) (undo-tree-id1338 . -2355) (undo-tree-id1339 . -2356) (undo-tree-id1340 . -2356) (undo-tree-id1341 . -38) (undo-tree-id1342 . -44) (undo-tree-id1343 . -106) (undo-tree-id1344 . -110) (undo-tree-id1345 . -749) (undo-tree-id1346 . -750) (undo-tree-id1347 . -3221) (undo-tree-id1348 . -3228) (undo-tree-id1349 . -3268) (undo-tree-id1350 . -3268) (undo-tree-id1351 . -2356) (undo-tree-id1352 . -2356) (undo-tree-id1353 . -2356) (undo-tree-id1354 . -2436) (undo-tree-id1355 . -2557) (undo-tree-id1356 . -2557) (undo-tree-id1357 . -2557) (undo-tree-id1358 . -2436) (undo-tree-id1359 . -2436) (undo-tree-id1360 . -2436) (undo-tree-id1361 . -2436) (undo-tree-id1362 . -3102) (undo-tree-id1363 . -3102) (undo-tree-id1364 . -3102) (undo-tree-id1365 . -3102) (undo-tree-id1366 . -3268) (undo-tree-id1367 . -3268) (undo-tree-id1368 . -3268) (undo-tree-id1369 . -3268) (undo-tree-id1370 . -3268) (undo-tree-id1371 . -3268) (undo-tree-id1372 . -3268) (undo-tree-id1373 . -3268) (undo-tree-id1374 . -2509) (undo-tree-id1375 . -2530) (undo-tree-id1376 . -2530) (undo-tree-id1377 . -2530) (undo-tree-id1378 . -2530) (undo-tree-id1379 . -2553) (undo-tree-id1380 . -2553) (undo-tree-id1381 . -2553) (undo-tree-id1382 . -2570) (undo-tree-id1383 . -2598) (undo-tree-id1384 . -2623) (undo-tree-id1385 . -3268) (undo-tree-id1386 . -3268) (undo-tree-id1387 . -3268) (undo-tree-id1388 . -3268) (undo-tree-id1389 . -3350) (undo-tree-id1390 . -3350) (undo-tree-id1391 . -3350) (undo-tree-id1392 . -3350) (undo-tree-id1393 . -2673) (undo-tree-id1394 . -2700) (undo-tree-id1395 . -2706) (undo-tree-id1396 . -2717) (undo-tree-id1397 . -2718) (undo-tree-id1398 . -2742) (undo-tree-id1399 . -2800) (undo-tree-id1400 . -2881) (undo-tree-id1401 . -2940) (undo-tree-id1402 . -2881) (undo-tree-id1403 . -2800) (undo-tree-id1404 . -2742) (undo-tree-id1405 . -2718) (undo-tree-id1406 . -2717) (undo-tree-id1407 . -2717) (undo-tree-id1408 . -2717) (undo-tree-id1409 . -2717) (undo-tree-id1410 . -2717) (undo-tree-id1411 . -2718) (undo-tree-id1412 . -2742) (undo-tree-id1413 . -2800) (undo-tree-id1414 . -2800) (undo-tree-id1415 . -2800) (undo-tree-id1416 . -2800) (undo-tree-id1417 . -2800) (undo-tree-id1418 . -2881) (undo-tree-id1419 . -2800) (undo-tree-id1420 . -2801) (undo-tree-id1421 . -2801) (undo-tree-id1422 . -3102) (undo-tree-id1423 . -3102) (undo-tree-id1424 . -3102) (undo-tree-id1425 . -3102) (undo-tree-id1426 . -3268) (undo-tree-id1427 . -3268) (undo-tree-id1428 . -3268) (undo-tree-id1429 . -3268) (undo-tree-id1430 . -2801) (undo-tree-id1431 . -2801) (undo-tree-id1432 . -2801) (undo-tree-id1433 . -2801) (undo-tree-id1434 . -2801) (undo-tree-id1435 . -2801) (undo-tree-id1436 . -2801) (undo-tree-id1437 . -3268) (undo-tree-id1438 . -3268) (undo-tree-id1439 . -3268) (undo-tree-id1440 . -3268) (undo-tree-id1441 . -3268) (undo-tree-id1442 . -3268) (undo-tree-id1443 . -3268) (undo-tree-id1444 . -3268) (undo-tree-id1445 . -3350) (undo-tree-id1446 . -3350) (undo-tree-id1447 . -3350) (undo-tree-id1448 . -3350) (undo-tree-id1449 . -2881) (undo-tree-id1450 . -2881) (undo-tree-id1451 . -2881) (undo-tree-id1452 . -2881) (undo-tree-id1453 . -2881) (undo-tree-id1454 . -2881) (undo-tree-id1455 . -2940) (undo-tree-id1456 . -2951) (undo-tree-id1457 . -2952) (undo-tree-id1458 . -2971) (undo-tree-id1459 . -2971) (undo-tree-id1460 . -2971) (undo-tree-id1461 . -2994) (undo-tree-id1462 . -2995) (undo-tree-id1463 . -3028) (undo-tree-id1464 . -3099) (undo-tree-id1465 . -3101) (undo-tree-id1466 . -3102) (undo-tree-id1467 . -3146) (undo-tree-id1468 . -3231) (undo-tree-id1469 . -3231) (undo-tree-id1470 . -3232) (undo-tree-id1471 . -3232) (undo-tree-id1472 . -3232) (undo-tree-id1473 . -3232) (undo-tree-id1474 . -3232) (undo-tree-id1475 . -3233) (undo-tree-id1476 . -3266) (undo-tree-id1477 . -3267) (undo-tree-id1478 . -3268) (undo-tree-id1479 . -3268) (undo-tree-id1480 . -3268) (undo-tree-id1481 . -3268) (undo-tree-id1482 . -3268) (undo-tree-id1483 . -3268) (undo-tree-id1484 . -3268) (undo-tree-id1485 . -3268) (undo-tree-id1486 . -3268) (undo-tree-id1487 . -3268) (undo-tree-id1488 . -3268) (undo-tree-id1489 . -3268) (undo-tree-id1490 . -3268) (undo-tree-id1491 . -3268) (undo-tree-id1492 . -3268) (undo-tree-id1493 . -3268) (undo-tree-id1494 . -3269) (undo-tree-id1495 . -3270) (undo-tree-id1496 . -3270) (undo-tree-id1497 . -3269) (undo-tree-id1498 . -3350) (undo-tree-id1499 . -3350) (undo-tree-id1500 . -3350) (undo-tree-id1501 . -3350) (undo-tree-id1502 . -3269) (undo-tree-id1503 . -3269) (undo-tree-id1504 . -3269) (undo-tree-id1505 . -1) (undo-tree-id1506 . -38) (undo-tree-id1507 . -44) (undo-tree-id1508 . -106) (undo-tree-id1509 . -110) (undo-tree-id1510 . -106) (undo-tree-id1511 . -110) (undo-tree-id1512 . -563) (undo-tree-id1513 . -570) (undo-tree-id1514 . -526) (undo-tree-id1515 . -529) (undo-tree-id1516 . -687) (undo-tree-id1517 . -693) (undo-tree-id1518 . -969) (undo-tree-id1519 . -972) (undo-tree-id1520 . -969) (undo-tree-id1521 . -972) (undo-tree-id1522 . -990) (undo-tree-id1523 . -996) (undo-tree-id1524 . -1006) (undo-tree-id1525 . -1012) (undo-tree-id1526 . -998) (undo-tree-id1527 . -999) (undo-tree-id1528 . -2062) (undo-tree-id1529 . -2069) (undo-tree-id1530 . -3102) (undo-tree-id1531 . -3107) (undo-tree-id1532 . -3267) (undo-tree-id1533 . -3268) (undo-tree-id1534 . -3269) (undo-tree-id1535 . -3269) (undo-tree-id1536 . -3269) (undo-tree-id1537 . -3268) (undo-tree-id1538 . -3268) (undo-tree-id1539 . -38) (undo-tree-id1540 . -44) (undo-tree-id1541 . -106) (undo-tree-id1542 . -110) (undo-tree-id1543 . -749) (undo-tree-id1544 . -750) (undo-tree-id1545 . -3221) (undo-tree-id1546 . -3228) (undo-tree-id1547 . -3268) (undo-tree-id1548 . -3268) (undo-tree-id1549 . -3268) (undo-tree-id1550 . -3268) (undo-tree-id1551 . -3268) (undo-tree-id1552 . -3268) (undo-tree-id1553 . -3268) (undo-tree-id1554 . -3268) (undo-tree-id1555 . -3268) (undo-tree-id1556 . -3268) (undo-tree-id1557 . -3268) (undo-tree-id1558 . -3268) (undo-tree-id1559 . -3267) (undo-tree-id1560 . -3267) (undo-tree-id1561 . -3267) (undo-tree-id1562 . -3267) (undo-tree-id1563 . -3267) (undo-tree-id1564 . -3268) (undo-tree-id1565 . -3268) (undo-tree-id1566 . -3268) (undo-tree-id1567 . -3268) (undo-tree-id1568 . -3268) (undo-tree-id1569 . -3268) (undo-tree-id1570 . -3268) (undo-tree-id1571 . -3268) (undo-tree-id1572 . -3268) (undo-tree-id1573 . -3268) (undo-tree-id1574 . -3268) (undo-tree-id1575 . -3268) (undo-tree-id1576 . -3268) (undo-tree-id1577 . -3268) (undo-tree-id1578 . -3268) (undo-tree-id1579 . -3268) (undo-tree-id1580 . -3268) (undo-tree-id1581 . -3268) (undo-tree-id1582 . -3268) (undo-tree-id1583 . -3268) (undo-tree-id1584 . -3268) (undo-tree-id1585 . -3268) (undo-tree-id1586 . -3268) (undo-tree-id1587 . -3268) (undo-tree-id1588 . -3268) (undo-tree-id1589 . -3268) (undo-tree-id1590 . -3268) (undo-tree-id1591 . -3268) (undo-tree-id1592 . -3268) (undo-tree-id1593 . -3350) (undo-tree-id1594 . -3350) (undo-tree-id1595 . -3350) (undo-tree-id1596 . -3350) (undo-tree-id1597 . -3268) (undo-tree-id1598 . -3268) (undo-tree-id1599 . -3268) (undo-tree-id1600 . -3268) (undo-tree-id1601 . -3268) (undo-tree-id1602 . -3268) (undo-tree-id1603 . -424) (undo-tree-id1604 . -424) (undo-tree-id1605 . -424) (undo-tree-id1606 . -424) (undo-tree-id1607 . -424) (undo-tree-id1608 . -424) (undo-tree-id1609 . -424) (undo-tree-id1610 . -424) (undo-tree-id1611 . -1067) (undo-tree-id1612 . -1067) (undo-tree-id1613 . -1067) (undo-tree-id1614 . -1067) (undo-tree-id1615 . -1067) (undo-tree-id1616 . -1067) (undo-tree-id1617 . -1067) (undo-tree-id1618 . -1067) (undo-tree-id1619 . -1094) (undo-tree-id1620 . -1094) (undo-tree-id1621 . -1094) (undo-tree-id1622 . -1094) (undo-tree-id1623 . -1094) (undo-tree-id1624 . -1116) (undo-tree-id1625 . -1167) (undo-tree-id1626 . -1194) (undo-tree-id1627 . -1269) (undo-tree-id1628 . -1288) (undo-tree-id1629 . -1304) (undo-tree-id1630 . -1345) (undo-tree-id1631 . -1361) (undo-tree-id1632 . -1414) (undo-tree-id1633 . -1453) (undo-tree-id1634 . -1491) (undo-tree-id1635 . -1524) (undo-tree-id1636 . -1574) (undo-tree-id1637 . -1574) (undo-tree-id1638 . -1574) (undo-tree-id1639 . -1574) (undo-tree-id1640 . -1574) (undo-tree-id1641 . -1575) (undo-tree-id1642 . -1621) (undo-tree-id1643 . -1621) (undo-tree-id1644 . -1621) (undo-tree-id1645 . -1621) (undo-tree-id1646 . -1698) (undo-tree-id1647 . -1698) (undo-tree-id1648 . -1698) (undo-tree-id1649 . -1698) (undo-tree-id1650 . -1918) (undo-tree-id1651 . -1918) (undo-tree-id1652 . -1943) (undo-tree-id1653 . -1943) (undo-tree-id1654 . -1575) (undo-tree-id1655 . -1575) (undo-tree-id1656 . -1575) (undo-tree-id1657 . -1575) (undo-tree-id1658 . -1575) (undo-tree-id1659 . -1575) (undo-tree-id1660 . -1575) (undo-tree-id1661 . -1575) (undo-tree-id1662 . -1575) (undo-tree-id1663 . -1575) (undo-tree-id1664 . -1575) (undo-tree-id1665 . -1575) (undo-tree-id1666 . -1067) (undo-tree-id1667 . -1575) (undo-tree-id1668 . -1575) (undo-tree-id1669 . -1067) (undo-tree-id1670 . -1575) (undo-tree-id1671 . -1575) (undo-tree-id1672 . -1575) (undo-tree-id1673 . -1575)) nil (25759 41001 589900 201000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2320) (undo-tree-id1756 . -1) (t 25759 41001 592560 359000)) nil (25759 41083 109351 374000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2356)) ((2356 . 2357) (t 25759 41013 960646 603000)) (25759 41089 62778 298000) 0 nil])
([nil nil ((527 . 970) (#("def generate_time_series(batch_size, n_steps):
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)
    time = np.linspace(0, 1, n_steps)
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  #   wave 1
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise
    return series[..., np.newaxis].astype(np.float32)

" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 44 (fontified t) 44 45 (fontified t face (rainbow-delimiters-depth-1-face)) 45 51 (fontified t) 51 56 (fontified t face font-lock-variable-name-face) 56 58 (fontified t) 58 63 (fontified t face font-lock-variable-name-face) 63 65 (fontified t) 65 73 (fontified t face font-lock-variable-name-face) 73 75 (fontified t) 75 83 (fontified t face font-lock-variable-name-face) 83 100 (fontified t) 100 101 (fontified t face (rainbow-delimiters-depth-1-face)) 101 117 (fontified t) 117 118 (fontified t face (rainbow-delimiters-depth-1-face)) 118 123 (fontified t) 123 127 (fontified t face font-lock-variable-name-face) 127 141 (fontified t) 141 142 (fontified t face (rainbow-delimiters-depth-1-face)) 142 155 (fontified t) 155 156 (fontified t face (rainbow-delimiters-depth-1-face)) 156 161 (fontified t) 161 167 (fontified t face font-lock-variable-name-face) 167 182 (fontified t) 182 183 (fontified t face (rainbow-delimiters-depth-1-face)) 183 184 (fontified t face (rainbow-delimiters-depth-2-face)) 184 199 (fontified t) 199 200 (fontified t face (rainbow-delimiters-depth-2-face)) 200 203 (fontified t) 203 204 (fontified t face (rainbow-delimiters-depth-2-face)) 204 219 (fontified t) 219 220 (fontified t face (rainbow-delimiters-depth-2-face)) 220 221 (fontified t face (rainbow-delimiters-depth-1-face)) 221 223 (fontified t) 223 227 (fontified t face font-lock-comment-delimiter-face) 227 234 (fontified t face font-lock-comment-face) 234 238 (fontified t) 238 244 (fontified t face font-lock-variable-name-face) 244 260 (fontified t) 260 261 (fontified t face (rainbow-delimiters-depth-1-face)) 261 262 (fontified t face (rainbow-delimiters-depth-2-face)) 262 277 (fontified t) 277 278 (fontified t face (rainbow-delimiters-depth-2-face)) 278 281 (fontified t) 281 282 (fontified t face (rainbow-delimiters-depth-2-face)) 282 297 (fontified t) 297 298 (fontified t face (rainbow-delimiters-depth-2-face)) 298 299 (fontified t face (rainbow-delimiters-depth-1-face)) 299 301 (fontified t) 301 303 (fontified t face font-lock-comment-delimiter-face) 303 312 (fontified t face font-lock-comment-face) 312 316 (fontified t) 316 322 (fontified t face font-lock-variable-name-face) 322 332 (fontified t) 332 333 (fontified t face (rainbow-delimiters-depth-1-face)) 333 347 (fontified t) 347 348 (fontified t face (rainbow-delimiters-depth-2-face)) 348 367 (fontified t) 367 368 (fontified t face (rainbow-delimiters-depth-2-face)) 368 374 (fontified t) 374 375 (fontified t face (rainbow-delimiters-depth-1-face)) 375 377 (fontified t) 377 379 (fontified t face font-lock-comment-delimiter-face) 379 387 (fontified t face font-lock-comment-face) 387 391 (fontified t) 391 397 (fontified t face font-lock-keyword-face) 397 404 (fontified t) 404 405 (fontified t face (rainbow-delimiters-depth-1-face)) 405 420 (fontified t) 420 421 (fontified t face (rainbow-delimiters-depth-1-face)) 421 428 (fontified t) 428 429 (fontified t face (rainbow-delimiters-depth-1-face)) 429 439 (fontified t) 439 440 (fontified t face (rainbow-delimiters-depth-1-face)) 440 441 (fontified t) 441 442 (fontified t)) . 527) (undo-tree-id2123 . -441) (undo-tree-id2124 . -442) (undo-tree-id2125 . -47) (undo-tree-id2126 . -119) (undo-tree-id2127 . -157) (undo-tree-id2128 . -234) (undo-tree-id2129 . -312) (undo-tree-id2130 . -387) (undo-tree-id2131 . -441) (undo-tree-id2132 . -442) (undo-tree-id2133 . -442) (undo-tree-id2134 . -442) (undo-tree-id2135 . -441) (undo-tree-id2136 . -387) (undo-tree-id2137 . -312) (undo-tree-id2138 . -234) (undo-tree-id2139 . -157) (undo-tree-id2140 . -119) (undo-tree-id2141 . -119) (undo-tree-id2142 . -47) (undo-tree-id2143 . -47) (undo-tree-id2144 . -119) (undo-tree-id2145 . -157) (undo-tree-id2146 . -234) (undo-tree-id2147 . -312) (undo-tree-id2148 . -387) (undo-tree-id2149 . -47) (undo-tree-id2150 . -47) (undo-tree-id2151 . -47) (undo-tree-id2152 . -47) (undo-tree-id2153 . -47) (undo-tree-id2154 . -119) (undo-tree-id2155 . -157) (undo-tree-id2156 . -234) (undo-tree-id2157 . -312) (undo-tree-id2158 . -387) (undo-tree-id2159 . -441) (undo-tree-id2160 . -441) (undo-tree-id2161 . -441) (undo-tree-id2162 . -441) (undo-tree-id2163 . -441) (undo-tree-id2164 . -441) (undo-tree-id2165 . -441) (undo-tree-id2166 . -223) (undo-tree-id2167 . -224) (undo-tree-id2168 . -441) (undo-tree-id2169 . -441) (undo-tree-id2170 . -441) (undo-tree-id2171 . -441) (undo-tree-id2172 . -441) (undo-tree-id2173 . -441) (undo-tree-id2174 . -37) (undo-tree-id2175 . -44) (undo-tree-id2176 . -3) (undo-tree-id2177 . -161) (undo-tree-id2178 . -167) (undo-tree-id2179 . -223) (undo-tree-id2180 . -224) (undo-tree-id2181 . -442) (undo-tree-id2182 . -441) (undo-tree-id2183 . -47) (undo-tree-id2184 . -119) (undo-tree-id2185 . -157) (undo-tree-id2186 . -234) (undo-tree-id2187 . -312) (undo-tree-id2188 . -387) (undo-tree-id2189 . -441) (undo-tree-id2190 . -441) (undo-tree-id2191 . -441) (undo-tree-id2192 . -441) (undo-tree-id2193 . -441) (undo-tree-id2194 . -442) (undo-tree-id2195 . -442) (undo-tree-id2196 . -442) 969 (t 25759 41013 960646 603000)) nil (25759 41105 40687 206000) 0 nil] [nil nil ((#("def generate_time_series(batch_size, n_steps):
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)
    time = np.linspace(0, 1, n_steps)
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  #   wave 1
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise
    return series[..., np.newaxis].astype(np.float32)

" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 44 (fontified t) 44 45 (fontified t face (rainbow-delimiters-depth-1-face)) 45 51 (fontified t) 51 56 (fontified t face font-lock-variable-name-face) 56 58 (fontified t) 58 63 (fontified t face font-lock-variable-name-face) 63 65 (fontified t) 65 73 (fontified t face font-lock-variable-name-face) 73 75 (fontified t) 75 83 (fontified t face font-lock-variable-name-face) 83 100 (fontified t) 100 101 (fontified t face (rainbow-delimiters-depth-1-face)) 101 117 (fontified t) 117 118 (fontified t face (rainbow-delimiters-depth-1-face)) 118 123 (fontified t) 123 127 (fontified t face font-lock-variable-name-face) 127 141 (fontified t) 141 142 (fontified t face (rainbow-delimiters-depth-1-face)) 142 155 (fontified t) 155 156 (fontified t face (rainbow-delimiters-depth-1-face)) 156 161 (fontified t) 161 167 (fontified t face font-lock-variable-name-face) 167 182 (fontified t) 182 183 (fontified t face (rainbow-delimiters-depth-1-face)) 183 184 (fontified t face (rainbow-delimiters-depth-2-face)) 184 199 (fontified t) 199 200 (fontified t face (rainbow-delimiters-depth-2-face)) 200 203 (fontified t) 203 204 (fontified t face (rainbow-delimiters-depth-2-face)) 204 219 (fontified t) 219 220 (fontified t face (rainbow-delimiters-depth-2-face)) 220 221 (fontified t face (rainbow-delimiters-depth-1-face)) 221 223 (fontified t) 223 227 (fontified t face font-lock-comment-delimiter-face) 227 234 (fontified t face font-lock-comment-face) 234 238 (fontified t) 238 244 (fontified t face font-lock-variable-name-face) 244 260 (fontified t) 260 261 (fontified t face (rainbow-delimiters-depth-1-face)) 261 262 (fontified t face (rainbow-delimiters-depth-2-face)) 262 277 (fontified t) 277 278 (fontified t face (rainbow-delimiters-depth-2-face)) 278 281 (fontified t) 281 282 (fontified t face (rainbow-delimiters-depth-2-face)) 282 297 (fontified t) 297 298 (fontified t face (rainbow-delimiters-depth-2-face)) 298 299 (fontified t face (rainbow-delimiters-depth-1-face)) 299 301 (fontified t) 301 303 (fontified t face font-lock-comment-delimiter-face) 303 312 (fontified t face font-lock-comment-face) 312 316 (fontified t) 316 322 (fontified t face font-lock-variable-name-face) 322 332 (fontified t) 332 333 (fontified t face (rainbow-delimiters-depth-1-face)) 333 347 (fontified t) 347 348 (fontified t face (rainbow-delimiters-depth-2-face)) 348 367 (fontified t) 367 368 (fontified t face (rainbow-delimiters-depth-2-face)) 368 374 (fontified t) 374 375 (fontified t face (rainbow-delimiters-depth-1-face)) 375 377 (fontified t) 377 379 (fontified t face font-lock-comment-delimiter-face) 379 387 (fontified t face font-lock-comment-face) 387 391 (fontified t) 391 397 (fontified t face font-lock-keyword-face) 397 404 (fontified t) 404 405 (fontified t face (rainbow-delimiters-depth-1-face)) 405 420 (fontified t) 420 421 (fontified t face (rainbow-delimiters-depth-1-face)) 421 428 (fontified t) 428 429 (fontified t face (rainbow-delimiters-depth-1-face)) 429 439 (fontified t) 439 440 (fontified t face (rainbow-delimiters-depth-1-face)) 440 442 (fontified t)) . 527) (undo-tree-id1758 . -441) (undo-tree-id1759 . -441) (undo-tree-id1760 . -441) (undo-tree-id1761 . -223) (undo-tree-id1762 . -224) (undo-tree-id1763 . -47) (undo-tree-id1764 . -119) (undo-tree-id1765 . -157) (undo-tree-id1766 . -234) (undo-tree-id1767 . -312) (undo-tree-id1768 . -387) (undo-tree-id1769 . -441) (undo-tree-id1770 . -442) (undo-tree-id1771 . -442) (undo-tree-id1772 . -442) (undo-tree-id1773 . -441) (undo-tree-id1774 . -387) (undo-tree-id1775 . -312) (undo-tree-id1776 . -234) (undo-tree-id1777 . -157) (undo-tree-id1778 . -119) (undo-tree-id1779 . -119) (undo-tree-id1780 . -47) (undo-tree-id1781 . -47) (undo-tree-id1782 . -119) (undo-tree-id1783 . -157) (undo-tree-id1784 . -234) (undo-tree-id1785 . -312) (undo-tree-id1786 . -387) (undo-tree-id1787 . -37) (undo-tree-id1788 . -44) (undo-tree-id1789 . -3) (undo-tree-id1790 . -161) (undo-tree-id1791 . -167) (undo-tree-id1792 . -442) (undo-tree-id1793 . -441) (undo-tree-id1794 . -47) (undo-tree-id1795 . -47) (undo-tree-id1796 . -47) (undo-tree-id1797 . -47) (undo-tree-id1798 . -47) (undo-tree-id1799 . -119) (undo-tree-id1800 . -157) (undo-tree-id1801 . -234) (undo-tree-id1802 . -312) (undo-tree-id1803 . -387) (undo-tree-id1804 . -441) (undo-tree-id1805 . -441) (undo-tree-id1806 . -441) (undo-tree-id1807 . -441) (undo-tree-id1808 . -441) (undo-tree-id1809 . -441) (undo-tree-id1810 . -441) (undo-tree-id1811 . -442) 968 (t 25759 41013 960646 603000)) ((527 . 969)) (25759 41082 916267 476000) 0 nil])
([nil nil ((1 . 3538) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions



def generate_time_series(batch_size, n_steps):
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)
    time = np.linspace(0, 1, n_steps)
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  #   wave 1
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    plt.plot(series, \".-\")
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")
    plt.grid(True)
    if x_label:
        plt.xlabel(x_label, fontsize=16)
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)
    plt.hlines(0, 0, 100, linewidth=1)
    plt.axis([0, n_steps + 1, -1, 1])
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))
    plt.axis([1, 20, 0, 0.05])
    plt.legend(fontsize=14)
    plt.xlabel(\"Epochs\")
    plt.ylabel(\"Loss\")
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential(
    [keras.layers.Flatten(input_shape=[50, 1]), keras.layers.Dense(1)]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))


model.evaluate(X_valid, y_valid)


###############################################################################
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 527 (fontified t) 527 530 (fontified t face font-lock-keyword-face) 530 531 (fontified t) 531 551 (fontified t face font-lock-function-name-face) 551 552 (fontified t face (rainbow-delimiters-depth-1-face)) 552 571 (fontified t) 571 572 (fontified t face (rainbow-delimiters-depth-1-face)) 572 578 (fontified t) 578 583 (fontified t face font-lock-variable-name-face) 583 585 (fontified t) 585 590 (fontified t face font-lock-variable-name-face) 590 592 (fontified t) 592 600 (fontified t face font-lock-variable-name-face) 600 602 (fontified t) 602 610 (fontified t face font-lock-variable-name-face) 610 627 (fontified t) 627 628 (fontified t face (rainbow-delimiters-depth-1-face)) 628 644 (fontified t) 644 645 (fontified t face (rainbow-delimiters-depth-1-face)) 645 650 (fontified t) 650 654 (fontified t face font-lock-variable-name-face) 654 668 (fontified t) 668 669 (fontified t face (rainbow-delimiters-depth-1-face)) 669 682 (fontified t) 682 683 (fontified t face (rainbow-delimiters-depth-1-face)) 683 688 (fontified t) 688 694 (fontified t face font-lock-variable-name-face) 694 709 (fontified t) 709 710 (fontified t face (rainbow-delimiters-depth-1-face)) 710 711 (fontified t face (rainbow-delimiters-depth-2-face)) 711 726 (fontified t) 726 727 (fontified t face (rainbow-delimiters-depth-2-face)) 727 730 (fontified t) 730 731 (fontified t face (rainbow-delimiters-depth-2-face)) 731 746 (fontified t) 746 747 (fontified t face (rainbow-delimiters-depth-2-face)) 747 748 (fontified t face (rainbow-delimiters-depth-1-face)) 748 750 (fontified t) 750 754 (fontified t face font-lock-comment-delimiter-face) 754 761 (fontified t face font-lock-comment-face) 761 765 (fontified t) 765 771 (fontified t face font-lock-variable-name-face) 771 787 (fontified t) 787 788 (fontified t face (rainbow-delimiters-depth-1-face)) 788 789 (fontified t face (rainbow-delimiters-depth-2-face)) 789 804 (fontified t) 804 805 (fontified t face (rainbow-delimiters-depth-2-face)) 805 808 (fontified t) 808 809 (fontified t face (rainbow-delimiters-depth-2-face)) 809 824 (fontified t) 824 825 (fontified t face (rainbow-delimiters-depth-2-face)) 825 826 (fontified t face (rainbow-delimiters-depth-1-face)) 826 828 (fontified t) 828 830 (fontified t face font-lock-comment-delimiter-face) 830 839 (fontified t face font-lock-comment-face) 839 843 (fontified t) 843 849 (fontified t face font-lock-variable-name-face) 849 859 (fontified t) 859 860 (fontified t face (rainbow-delimiters-depth-1-face)) 860 874 (fontified t) 874 875 (fontified t face (rainbow-delimiters-depth-2-face)) 875 894 (fontified t) 894 895 (fontified t face (rainbow-delimiters-depth-2-face)) 895 901 (fontified t) 901 902 (fontified t face (rainbow-delimiters-depth-1-face)) 902 904 (fontified t) 904 906 (fontified t face font-lock-comment-delimiter-face) 906 914 (fontified t face font-lock-comment-face) 914 918 (fontified t) 918 924 (fontified t face font-lock-keyword-face) 924 931 (fontified t) 931 932 (fontified t face (rainbow-delimiters-depth-1-face)) 932 947 (fontified t) 947 948 (fontified t face (rainbow-delimiters-depth-1-face)) 948 955 (fontified t) 955 956 (fontified t face (rainbow-delimiters-depth-1-face)) 956 966 (fontified t) 966 967 (fontified t face (rainbow-delimiters-depth-1-face)) 967 969 (fontified t) 969 970 (fontified t) 970 973 (fontified t face font-lock-keyword-face) 973 974 (fontified t) 974 985 (fontified t face font-lock-function-name-face) 985 986 (fontified t face (rainbow-delimiters-depth-1-face)) 986 1001 (fontified t) 1001 1005 (fontified t face font-lock-constant-face) 1005 1006 (fontified t) 1006 1014 (fontified t) 1014 1018 (fontified t face font-lock-constant-face) 1018 1028 (fontified t) 1028 1033 (fontified t face font-lock-string-face) 1033 1043 (fontified t) 1043 1051 (fontified t face font-lock-string-face) 1051 1060 (fontified t) 1060 1064 (fontified t face font-lock-constant-face) 1064 1065 (fontified t) 1065 1066 (fontified t face (rainbow-delimiters-depth-1-face)) 1066 1068 (fontified t) 1068 1080 (fontified t) 1080 1081 (fontified t face (rainbow-delimiters-depth-1-face)) 1081 1089 (fontified t) 1089 1093 (fontified t face font-lock-string-face) 1093 1094 (fontified t face (rainbow-delimiters-depth-1-face)) 1094 1099 (fontified t) 1099 1101 (fontified t face font-lock-keyword-face) 1101 1104 (fontified t) 1104 1106 (fontified t face font-lock-keyword-face) 1106 1107 (fontified t) 1107 1110 (fontified t face font-lock-keyword-face) 1110 1111 (fontified t) 1111 1115 (fontified t face font-lock-constant-face) 1115 1133 (fontified t) 1133 1134 (fontified t face (rainbow-delimiters-depth-1-face)) 1134 1146 (fontified t) 1146 1150 (fontified t face font-lock-string-face) 1150 1158 (fontified t) 1158 1166 (fontified t face font-lock-string-face) 1166 1167 (fontified t face (rainbow-delimiters-depth-1-face)) 1167 1172 (fontified t) 1172 1174 (fontified t face font-lock-keyword-face) 1174 1182 (fontified t) 1182 1184 (fontified t face font-lock-keyword-face) 1184 1185 (fontified t) 1185 1188 (fontified t face font-lock-keyword-face) 1188 1189 (fontified t) 1189 1193 (fontified t face font-lock-constant-face) 1193 1211 (fontified t) 1211 1212 (fontified t face (rainbow-delimiters-depth-1-face)) 1212 1229 (fontified t) 1229 1233 (fontified t face font-lock-string-face) 1233 1256 (fontified t) 1256 1268 (fontified t face font-lock-string-face) 1268 1269 (fontified t face (rainbow-delimiters-depth-1-face)) 1269 1282 (fontified t) 1282 1283 (fontified t face (rainbow-delimiters-depth-1-face)) 1283 1287 (fontified t face font-lock-constant-face) 1287 1288 (fontified t face (rainbow-delimiters-depth-1-face)) 1288 1293 (fontified t) 1293 1295 (fontified t face font-lock-keyword-face) 1295 1323 (fontified t) 1323 1324 (fontified t face (rainbow-delimiters-depth-1-face)) 1324 1344 (fontified t) 1344 1345 (fontified t face (rainbow-delimiters-depth-1-face)) 1345 1350 (fontified t) 1350 1352 (fontified t face font-lock-keyword-face) 1352 1380 (fontified t) 1380 1381 (fontified t face (rainbow-delimiters-depth-1-face)) 1381 1413 (fontified t) 1413 1414 (fontified t face (rainbow-delimiters-depth-1-face)) 1414 1415 (fontified t) 1415 1429 (fontified t) 1429 1430 (fontified t face (rainbow-delimiters-depth-1-face)) 1430 1452 (fontified t) 1452 1453 (fontified t face (rainbow-delimiters-depth-1-face)) 1453 1466 (fontified t) 1466 1467 (fontified t face (rainbow-delimiters-depth-1-face)) 1467 1468 (fontified t face (rainbow-delimiters-depth-2-face)) 1468 1470 (fontified t) 1470 1489 (fontified t) 1489 1490 (face (rainbow-delimiters-depth-2-face) fontified t) 1490 1491 (face (rainbow-delimiters-depth-1-face) fontified t) 1491 1492 (fontified t) 1496 1498 (face font-lock-keyword-face) 1506 1509 (face font-lock-keyword-face) 1510 1511 (face (rainbow-delimiters-depth-1-face)) 1513 1515 (face font-lock-keyword-face) 1522 1523 (face (rainbow-delimiters-depth-1-face)) 1543 1544 (face (rainbow-delimiters-depth-1-face)) 1561 1568 (face font-lock-string-face) 1568 1573 (face font-lock-string-face) 1573 1574 (face (rainbow-delimiters-depth-1-face)) 1577 1580 (face font-lock-keyword-face) 1581 1601 (face font-lock-function-name-face) 1601 1602 (face (rainbow-delimiters-depth-1-face)) 1616 1617 (face (rainbow-delimiters-depth-1-face)) 1631 1632 (face (rainbow-delimiters-depth-1-face)) 1641 1642 (face (rainbow-delimiters-depth-2-face)) 1642 1645 (face font-lock-builtin-face) 1645 1646 (face (rainbow-delimiters-depth-3-face)) 1650 1651 (face (rainbow-delimiters-depth-3-face)) 1651 1652 (face (rainbow-delimiters-depth-2-face)) 1666 1671 (face font-lock-string-face) 1679 1694 (face font-lock-string-face) 1694 1695 (face (rainbow-delimiters-depth-1-face)) 1708 1709 (face (rainbow-delimiters-depth-1-face)) 1718 1719 (face (rainbow-delimiters-depth-2-face)) 1719 1722 (face font-lock-builtin-face) 1722 1723 (face (rainbow-delimiters-depth-3-face)) 1731 1732 (face (rainbow-delimiters-depth-3-face)) 1732 1733 (face (rainbow-delimiters-depth-2-face)) 1749 1754 (face font-lock-string-face) 1762 1779 (face font-lock-string-face) 1779 1780 (face (rainbow-delimiters-depth-1-face)) 1792 1793 (face (rainbow-delimiters-depth-1-face)) 1793 1794 (face (rainbow-delimiters-depth-1-face)) 1818 1819 (face (rainbow-delimiters-depth-1-face)) 1841 1842 (face (rainbow-delimiters-depth-2-face)) 1850 1854 (face font-lock-constant-face) 1854 1855 (face (rainbow-delimiters-depth-2-face)) 1855 1856 (face (rainbow-delimiters-depth-1-face)) 1869 1870 (face (rainbow-delimiters-depth-1-face)) 1870 1871 (face (rainbow-delimiters-depth-2-face)) 1885 1886 (face (rainbow-delimiters-depth-2-face)) 1886 1887 (face (rainbow-delimiters-depth-1-face)) 1902 1903 (face (rainbow-delimiters-depth-1-face)) 1914 1915 (face (rainbow-delimiters-depth-1-face)) 1930 1931 (face (rainbow-delimiters-depth-1-face)) 1931 1939 (face font-lock-string-face) 1939 1940 (face (rainbow-delimiters-depth-1-face)) 1955 1956 (face (rainbow-delimiters-depth-1-face)) 1956 1962 (face font-lock-string-face) 1962 1963 (face (rainbow-delimiters-depth-1-face)) 1976 1977 (face (rainbow-delimiters-depth-1-face)) 1977 1981 (face font-lock-constant-face) 1981 1982 (face (rainbow-delimiters-depth-1-face)) 1985 1992 (face font-lock-comment-delimiter-face) 1992 2064 (face font-lock-comment-delimiter-face) 2064 2065 (face font-lock-comment-face) 2065 2072 (face font-lock-variable-name-face) 2078 2084 (face font-lock-variable-name-face) 2107 2108 (face (rainbow-delimiters-depth-1-face)) 2126 2127 (face (rainbow-delimiters-depth-1-face)) 2128 2135 (face font-lock-variable-name-face) 2137 2144 (face font-lock-variable-name-face) 2153 2154 (face (rainbow-delimiters-depth-1-face)) 2169 2170 (face (rainbow-delimiters-depth-1-face)) 2178 2179 (face (rainbow-delimiters-depth-1-face)) 2188 2189 (face (rainbow-delimiters-depth-1-face)) 2190 2196 (face font-lock-variable-name-face) 2196 2197 (face font-lock-variable-name-face) 2199 2206 (face font-lock-variable-name-face) 2215 2216 (face (rainbow-delimiters-depth-1-face)) 2235 2236 (face (rainbow-delimiters-depth-1-face)) 2244 2245 (face (rainbow-delimiters-depth-1-face)) 2258 2259 (face (rainbow-delimiters-depth-1-face)) 2260 2266 (face font-lock-variable-name-face) 2268 2274 (face font-lock-variable-name-face) 2283 2284 (face (rainbow-delimiters-depth-1-face)) 2299 2300 (face (rainbow-delimiters-depth-1-face)) 2308 2309 (face (rainbow-delimiters-depth-1-face)) 2318 2319 (face (rainbow-delimiters-depth-1-face)) 2320 2325 (face font-lock-keyword-face) 2325 2326 (face (rainbow-delimiters-depth-1-face)) 2354 2355 (face (rainbow-delimiters-depth-1-face)) 2357 2436 (face font-lock-comment-delimiter-face) 2436 2437 (face font-lock-comment-face) 2437 2440 (face font-lock-variable-name-face) 2442 2446 (face font-lock-variable-name-face) 2461 2462 (face (rainbow-delimiters-depth-1-face)) 2487 2491 (face font-lock-constant-face) 2501 2502 (face (rainbow-delimiters-depth-2-face)) 2507 2508 (face (rainbow-delimiters-depth-2-face)) 2508 2509 (face (rainbow-delimiters-depth-1-face)) 2510 2513 (face font-lock-keyword-face) 2518 2520 (face font-lock-keyword-face) 2521 2526 (face font-lock-builtin-face) 2526 2527 (face (rainbow-delimiters-depth-1-face)) 2528 2529 (face (rainbow-delimiters-depth-1-face)) 2542 2543 (face (rainbow-delimiters-depth-1-face)) 2547 2548 (face (rainbow-delimiters-depth-2-face)) 2551 2552 (face (rainbow-delimiters-depth-2-face)) 2552 2553 (face (rainbow-delimiters-depth-1-face)) 2569 2570 (face (rainbow-delimiters-depth-1-face)) 2586 2587 (face (rainbow-delimiters-depth-2-face)) 2596 2597 (face (rainbow-delimiters-depth-2-face)) 2614 2615 (face (rainbow-delimiters-depth-2-face)) 2621 2622 (face (rainbow-delimiters-depth-2-face)) 2640 2641 (face (rainbow-delimiters-depth-2-face)) 2641 2649 (face font-lock-string-face) 2650 2652 (face font-lock-keyword-face) 2662 2666 (face font-lock-keyword-face) 2667 2671 (face font-lock-constant-face) 2671 2672 (face (rainbow-delimiters-depth-2-face)) 2689 2690 (face (rainbow-delimiters-depth-2-face)) 2698 2699 (face (rainbow-delimiters-depth-2-face)) 2705 2706 (face (rainbow-delimiters-depth-1-face)) 2715 2716 (face (rainbow-delimiters-depth-1-face)) 2716 2717 (face (rainbow-delimiters-depth-1-face)) 2719 2725 (face font-lock-variable-name-face) 2735 2736 (face (rainbow-delimiters-depth-1-face)) 2741 2742 (face (rainbow-delimiters-depth-1-face)) 2750 2751 (face (rainbow-delimiters-depth-1-face)) 2782 2783 (face (rainbow-delimiters-depth-2-face)) 2798 2799 (face (rainbow-delimiters-depth-2-face)) 2799 2800 (face (rainbow-delimiters-depth-1-face)) 2802 2857 (face font-lock-comment-delimiter-face) 2857 2881 (face font-lock-comment-delimiter-face) 2881 2882 (face font-lock-comment-face) 2893 2894 (face (rainbow-delimiters-depth-1-face)) 2901 2902 (face (rainbow-delimiters-depth-2-face)) 2909 2910 (face (rainbow-delimiters-depth-2-face)) 2919 2920 (face (rainbow-delimiters-depth-2-face)) 2924 2925 (face (rainbow-delimiters-depth-2-face)) 2933 2934 (face (rainbow-delimiters-depth-2-face)) 2938 2939 (face (rainbow-delimiters-depth-2-face)) 2939 2940 (face (rainbow-delimiters-depth-1-face)) 2949 2950 (face (rainbow-delimiters-depth-1-face)) 2950 2951 (face (rainbow-delimiters-depth-1-face)) 2967 2968 (face (rainbow-delimiters-depth-1-face)) 2970 2971 (face (rainbow-delimiters-depth-1-face)) 2990 2991 (face (rainbow-delimiters-depth-1-face)) 2993 2994 (face (rainbow-delimiters-depth-1-face)) 2996 3001 (face font-lock-variable-name-face) 3027 3028 (face (rainbow-delimiters-depth-1-face)) 3033 3034 (face (rainbow-delimiters-depth-2-face)) 3054 3055 (face (rainbow-delimiters-depth-3-face)) 3067 3068 (face (rainbow-delimiters-depth-4-face)) 3073 3074 (face (rainbow-delimiters-depth-4-face)) 3074 3075 (face (rainbow-delimiters-depth-3-face)) 3095 3096 (face (rainbow-delimiters-depth-3-face)) 3097 3098 (face (rainbow-delimiters-depth-3-face)) 3098 3099 (face (rainbow-delimiters-depth-2-face)) 3100 3101 (face (rainbow-delimiters-depth-1-face)) 3109 3116 (face font-lock-builtin-face) 3116 3117 (face (rainbow-delimiters-depth-1-face)) 3122 3127 (face font-lock-string-face) 3139 3145 (face font-lock-string-face) 3145 3146 (face (rainbow-delimiters-depth-1-face)) 3147 3154 (face font-lock-variable-name-face) 3166 3167 (face (rainbow-delimiters-depth-1-face)) 3212 3213 (face (rainbow-delimiters-depth-2-face)) 3229 3230 (face (rainbow-delimiters-depth-2-face)) 3230 3231 (face (rainbow-delimiters-depth-1-face)) 3248 3249 (face (rainbow-delimiters-depth-1-face)) 3265 3266 (face (rainbow-delimiters-depth-1-face)) 3269 3301 (face font-lock-comment-delimiter-face) 3301 3348 (face font-lock-comment-delimiter-face) 3348 3349 (face font-lock-comment-face) 3369 3370 (face (rainbow-delimiters-depth-1-face)) 3385 3386 (face (rainbow-delimiters-depth-2-face)) 3386 3392 (face font-lock-string-face) 3392 3393 (face (rainbow-delimiters-depth-2-face)) 3410 3411 (face (rainbow-delimiters-depth-2-face)) 3411 3421 (face font-lock-string-face) 3421 3422 (face (rainbow-delimiters-depth-2-face)) 3422 3423 (face (rainbow-delimiters-depth-1-face)) 3432 3433 (face (rainbow-delimiters-depth-1-face)) 3433 3434 (face (rainbow-delimiters-depth-1-face)) 3436 3442 (face font-lock-variable-name-face) 3458 3459 (face (rainbow-delimiters-depth-1-face)) 3466 3467 (face (rainbow-delimiters-depth-1-face)) 3479 3480 (face (rainbow-delimiters-depth-1-face)) 3487 3488 (face (rainbow-delimiters-depth-2-face)) 3495 3496 (face (rainbow-delimiters-depth-2-face)) 3505 3506 (face (rainbow-delimiters-depth-2-face)) 3510 3511 (face (rainbow-delimiters-depth-2-face)) 3519 3520 (face (rainbow-delimiters-depth-2-face)) 3524 3525 (face (rainbow-delimiters-depth-2-face)) 3525 3526 (face (rainbow-delimiters-depth-1-face)) 3535 3536 (face (rainbow-delimiters-depth-1-face)) 3536 3537 (face (rainbow-delimiters-depth-1-face))) . 1) (undo-tree-id1812 . -527) (undo-tree-id1813 . -968) (undo-tree-id1814 . -969) (undo-tree-id1815 . -526) (undo-tree-id1816 . 2569) (undo-tree-id1817 . -2356) (undo-tree-id1818 . -2356) (undo-tree-id1819 . -526) (undo-tree-id1820 . -526) (undo-tree-id1821 . -526) (undo-tree-id1822 . -526) (undo-tree-id1823 . -526) (undo-tree-id1824 . -526) (undo-tree-id1825 . -526) (undo-tree-id1826 . -526) (undo-tree-id1827 . -526) (undo-tree-id1828 . -526) (undo-tree-id1829 . -526) (undo-tree-id1830 . -526) (undo-tree-id1831 . -526) (undo-tree-id1832 . -526) (undo-tree-id1833 . -526) (undo-tree-id1834 . -526) (undo-tree-id1835 . -526) (undo-tree-id1836 . -526) (undo-tree-id1837 . -526) (undo-tree-id1838 . -526) (undo-tree-id1839 . -526) (undo-tree-id1840 . -526) (undo-tree-id1841 . -526) (undo-tree-id1842 . -526) (undo-tree-id1843 . -526) (undo-tree-id1844 . -526) (undo-tree-id1845 . -526) (undo-tree-id1846 . -526) (undo-tree-id1847 . -526) (undo-tree-id1848 . -526) (undo-tree-id1849 . -526) (undo-tree-id1850 . -526) (undo-tree-id1851 . -526) (undo-tree-id1852 . -526) (undo-tree-id1853 . -526) (undo-tree-id1854 . -526) (undo-tree-id1855 . -526) (undo-tree-id1856 . -526) (undo-tree-id1857 . -526) (undo-tree-id1858 . -1492) (undo-tree-id1859 . -526) (undo-tree-id1860 . -526) (undo-tree-id1861 . -38) (undo-tree-id1862 . -44) (undo-tree-id1863 . -106) (undo-tree-id1864 . -110) (undo-tree-id1865 . -526) (undo-tree-id1866 . -526) (undo-tree-id1867 . -1774) (undo-tree-id1868 . -1778) (undo-tree-id1869 . -3222) (undo-tree-id1870 . -3229) (undo-tree-id1871 . -526) (undo-tree-id1872 . -526) (undo-tree-id1873 . -526) (undo-tree-id1874 . -526) (undo-tree-id1875 . -2356) (undo-tree-id1876 . -2356) (undo-tree-id1877 . -2356) (undo-tree-id1878 . -1700) (undo-tree-id1879 . -1700) (undo-tree-id1880 . -1700) (undo-tree-id1881 . -1700) (undo-tree-id1882 . -1920) (undo-tree-id1883 . -1920) (undo-tree-id1884 . -1945) (undo-tree-id1885 . -1945) (undo-tree-id1886 . -2558) (undo-tree-id1887 . -2558) (undo-tree-id1888 . -2558) (undo-tree-id1889 . -3103) (undo-tree-id1890 . -3103) (undo-tree-id1891 . -3103) (undo-tree-id1892 . -3103) (undo-tree-id1893 . -2356) (undo-tree-id1894 . -2356) (undo-tree-id1895 . -2356) (undo-tree-id1896 . -2356) (undo-tree-id1897 . -2356) (undo-tree-id1898 . -2356) (undo-tree-id1899 . -2356) (undo-tree-id1900 . -2356) (undo-tree-id1901 . -2356) (undo-tree-id1902 . -2356) (undo-tree-id1903 . -2356) (undo-tree-id1904 . -2356) (undo-tree-id1905 . -2356) (undo-tree-id1906 . -2356) (undo-tree-id1907 . -2356) (undo-tree-id1908 . -2356) (undo-tree-id1909 . -2356) (undo-tree-id1910 . -2356) (undo-tree-id1911 . -2356) (undo-tree-id1912 . -2356) (undo-tree-id1913 . -2356) (undo-tree-id1914 . -2356) (undo-tree-id1915 . -2356) (undo-tree-id1916 . -2356) (undo-tree-id1917 . -2356) (undo-tree-id1918 . -2356) (undo-tree-id1919 . -2356) (undo-tree-id1920 . -2356) (undo-tree-id1921 . -2356) (undo-tree-id1922 . -2356) (undo-tree-id1923 . -2356) (undo-tree-id1924 . -2356) (undo-tree-id1925 . -2356) (undo-tree-id1926 . -2356) (undo-tree-id1927 . -2356) (undo-tree-id1928 . -2356) (undo-tree-id1929 . -2356) (undo-tree-id1930 . -2356) (undo-tree-id1931 . -2356) (undo-tree-id1932 . -2356) (undo-tree-id1933 . -2356) (undo-tree-id1934 . -2356) (undo-tree-id1935 . -2356) (undo-tree-id1936 . -2356) (undo-tree-id1937 . -2356) (undo-tree-id1938 . -2356) (undo-tree-id1939 . -2356) (undo-tree-id1940 . -2356) (undo-tree-id1941 . -2356) (undo-tree-id1942 . -2356) (undo-tree-id1943 . -2356) (undo-tree-id1944 . -2356) (undo-tree-id1945 . -2356) (undo-tree-id1946 . -2356) (undo-tree-id1947 . -2356) (undo-tree-id1948 . -2356) (undo-tree-id1949 . -2356) (undo-tree-id1950 . -2356) (undo-tree-id1951 . -2356) (undo-tree-id1952 . -2356) (undo-tree-id1953 . -2356) (undo-tree-id1954 . -2356) (undo-tree-id1955 . -2356) (undo-tree-id1956 . -2356) (undo-tree-id1957 . -2356) (undo-tree-id1958 . -2356) (undo-tree-id1959 . -2356) (undo-tree-id1960 . -2356) (undo-tree-id1961 . -2356) (undo-tree-id1962 . -2356) (undo-tree-id1963 . -2356) (undo-tree-id1964 . -2356) (undo-tree-id1965 . -2356) (undo-tree-id1966 . -2356) (undo-tree-id1967 . -2356) (undo-tree-id1968 . -2356) (undo-tree-id1969 . -2356) (undo-tree-id1970 . -2356) (undo-tree-id1971 . -2558) (undo-tree-id1972 . -2558) (undo-tree-id1973 . -2558) (undo-tree-id1974 . -2356) (undo-tree-id1975 . -2356) (undo-tree-id1976 . -2356) (undo-tree-id1977 . -2356) (undo-tree-id1978 . -2356) (undo-tree-id1979 . -2356) (undo-tree-id1980 . -2356) (undo-tree-id1981 . -1696) (undo-tree-id1982 . -2356) (undo-tree-id1983 . -2356) (undo-tree-id1984 . -2356) (undo-tree-id1985 . -2356) (undo-tree-id1986 . -2356) (undo-tree-id1987 . -526) (undo-tree-id1988 . -2356) (undo-tree-id1989 . -2356) (undo-tree-id1990 . -970) (undo-tree-id1991 . -970) (undo-tree-id1992 . -970) (undo-tree-id1993 . -970) (undo-tree-id1994 . -970) (undo-tree-id1995 . -970) (undo-tree-id1996 . -1072) (undo-tree-id1997 . -1072) (undo-tree-id1998 . -1125) (undo-tree-id1999 . -1125) (undo-tree-id2000 . -1125) (undo-tree-id2001 . -1125) (undo-tree-id2002 . -1203) (undo-tree-id2003 . -1203) (undo-tree-id2004 . -1203) (undo-tree-id2005 . -1203) (undo-tree-id2006 . -2356) (undo-tree-id2007 . -1) (undo-tree-id2008 . -38) (undo-tree-id2009 . -44) (undo-tree-id2010 . -106) (undo-tree-id2011 . -110) (undo-tree-id2012 . -106) (undo-tree-id2013 . -110) (undo-tree-id2014 . -526) (undo-tree-id2015 . -526) (undo-tree-id2016 . -526) (undo-tree-id2017 . -526) (undo-tree-id2018 . -526) (undo-tree-id2019 . -526) (undo-tree-id2020 . -970) (undo-tree-id2021 . -973) (undo-tree-id2022 . -970) (undo-tree-id2023 . -973) (undo-tree-id2024 . -991) (undo-tree-id2025 . -997) (undo-tree-id2026 . -1007) (undo-tree-id2027 . -1013) (undo-tree-id2028 . -999) (undo-tree-id2029 . -1000) (undo-tree-id2030 . -1577) (undo-tree-id2031 . -1580) (undo-tree-id2032 . -2065) (undo-tree-id2033 . -2072) (undo-tree-id2034 . -3147) (undo-tree-id2035 . -3154) (undo-tree-id2036 . -38) (undo-tree-id2037 . -44) (undo-tree-id2038 . -106) (undo-tree-id2039 . -110) (undo-tree-id2040 . -526) (undo-tree-id2041 . -526) (undo-tree-id2042 . -1774) (undo-tree-id2043 . -1778) (undo-tree-id2044 . -3222) (undo-tree-id2045 . -3229) (undo-tree-id2046 . -524) (undo-tree-id2047 . -524) (undo-tree-id2048 . -524) (undo-tree-id2049 . -524) (undo-tree-id2050 . -525) (undo-tree-id2051 . -525) (undo-tree-id2052 . -525) (undo-tree-id2053 . -524) (undo-tree-id2054 . -525) (undo-tree-id2055 . -525) (undo-tree-id2056 . -525) (undo-tree-id2057 . -525) (undo-tree-id2058 . -525) (undo-tree-id2059 . -525) (undo-tree-id2060 . -525) (undo-tree-id2061 . -525) (undo-tree-id2062 . -526) (undo-tree-id2063 . -526) (undo-tree-id2064 . -526) (undo-tree-id2065 . -526) (undo-tree-id2066 . -526) (undo-tree-id2067 . -526) (undo-tree-id2068 . -526) (undo-tree-id2069 . -526) (undo-tree-id2070 . -526) (undo-tree-id2071 . -526) (undo-tree-id2072 . -526) (undo-tree-id2073 . -526) (undo-tree-id2074 . -526) (undo-tree-id2075 . -526) (undo-tree-id2076 . -526) (undo-tree-id2077 . -526) (undo-tree-id2078 . -526) (undo-tree-id2079 . -526) (undo-tree-id2080 . -526) (undo-tree-id2081 . -526) (undo-tree-id2082 . -526) (undo-tree-id2083 . -526) (undo-tree-id2084 . -526) (undo-tree-id2085 . -526) (undo-tree-id2086 . -526) (undo-tree-id2087 . -527) (undo-tree-id2088 . -527) (undo-tree-id2089 . -527) (undo-tree-id2090 . -527) (undo-tree-id2091 . -970) (undo-tree-id2092 . -970) (undo-tree-id2093 . -970) (undo-tree-id2094 . -970) (undo-tree-id2095 . -970) (undo-tree-id2096 . -970) (undo-tree-id2097 . -1072) (undo-tree-id2098 . -1072) (undo-tree-id2099 . -1125) (undo-tree-id2100 . -1125) (undo-tree-id2101 . -1125) (undo-tree-id2102 . -1125) (undo-tree-id2103 . -1203) (undo-tree-id2104 . -1203) (undo-tree-id2105 . -1203) (undo-tree-id2106 . -1203) (undo-tree-id2107 . -527) (undo-tree-id2108 . -527) (undo-tree-id2109 . -527) (undo-tree-id2110 . -527) (undo-tree-id2111 . -527) (undo-tree-id2112 . -527) (undo-tree-id2113 . -527) (undo-tree-id2114 . -527) (undo-tree-id2115 . -527) (undo-tree-id2116 . -527) (undo-tree-id2117 . -527) (undo-tree-id2118 . -527) (undo-tree-id2119 . -527) (undo-tree-id2120 . -527) (undo-tree-id2121 . -527) (undo-tree-id2122 . -527)) nil (25759 41105 40616 486000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1642 . 1643) (nil fontified nil 526 . 1643) (526 . 1643) (t 25759 41105 49302 581000)) nil (25759 41121 904078 28000) 0 nil])
([nil nil ((1643 . 1644)) nil (25759 41121 904076 684000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2761 . 2762) (nil fontified nil 1645 . 2762) (1645 . 2762) (#("def generate_time_series(batch_size, n_steps):
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)
    time = np.linspace(0, 1, n_steps)
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  #   wave 1
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise
    return series[..., np.newaxis].astype(np.float32)

" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 44 (fontified t) 44 45 (fontified t face (rainbow-delimiters-depth-1-face)) 45 51 (fontified t) 51 56 (fontified t face font-lock-variable-name-face) 56 58 (fontified t) 58 63 (fontified t face font-lock-variable-name-face) 63 65 (fontified t) 65 73 (fontified t face font-lock-variable-name-face) 73 75 (fontified t) 75 83 (fontified t face font-lock-variable-name-face) 83 100 (fontified t) 100 101 (fontified t face (rainbow-delimiters-depth-1-face)) 101 117 (fontified t) 117 118 (fontified t face (rainbow-delimiters-depth-1-face)) 118 123 (fontified t) 123 127 (fontified t face font-lock-variable-name-face) 127 141 (fontified t) 141 142 (fontified t face (rainbow-delimiters-depth-1-face)) 142 155 (fontified t) 155 156 (fontified t face (rainbow-delimiters-depth-1-face)) 156 161 (fontified t) 161 167 (fontified t face font-lock-variable-name-face) 167 182 (fontified t) 182 183 (fontified t face (rainbow-delimiters-depth-1-face)) 183 184 (fontified t face (rainbow-delimiters-depth-2-face)) 184 199 (fontified t) 199 200 (fontified t face (rainbow-delimiters-depth-2-face)) 200 203 (fontified t) 203 204 (fontified t face (rainbow-delimiters-depth-2-face)) 204 219 (fontified t) 219 220 (fontified t face (rainbow-delimiters-depth-2-face)) 220 221 (fontified t face (rainbow-delimiters-depth-1-face)) 221 223 (fontified t) 223 227 (fontified t face font-lock-comment-delimiter-face) 227 234 (fontified t face font-lock-comment-face) 234 238 (fontified t) 238 244 (fontified t face font-lock-variable-name-face) 244 260 (fontified t) 260 261 (fontified t face (rainbow-delimiters-depth-1-face)) 261 262 (fontified t face (rainbow-delimiters-depth-2-face)) 262 277 (fontified t) 277 278 (fontified t face (rainbow-delimiters-depth-2-face)) 278 281 (fontified t) 281 282 (fontified t face (rainbow-delimiters-depth-2-face)) 282 297 (fontified t) 297 298 (fontified t face (rainbow-delimiters-depth-2-face)) 298 299 (fontified t face (rainbow-delimiters-depth-1-face)) 299 301 (fontified t) 301 303 (fontified t face font-lock-comment-delimiter-face) 303 312 (fontified t face font-lock-comment-face) 312 316 (fontified t) 316 322 (fontified t face font-lock-variable-name-face) 322 332 (fontified t) 332 333 (fontified t face (rainbow-delimiters-depth-1-face)) 333 347 (fontified t) 347 348 (fontified t face (rainbow-delimiters-depth-2-face)) 348 367 (fontified t) 367 368 (fontified t face (rainbow-delimiters-depth-2-face)) 368 374 (fontified t) 374 375 (fontified t face (rainbow-delimiters-depth-1-face)) 375 377 (fontified t) 377 379 (fontified t face font-lock-comment-delimiter-face) 379 387 (fontified t face font-lock-comment-face) 387 391 (fontified t) 391 397 (fontified t face font-lock-keyword-face) 397 404 (fontified t) 404 405 (fontified t face (rainbow-delimiters-depth-1-face)) 405 420 (fontified t) 420 421 (fontified t face (rainbow-delimiters-depth-1-face)) 421 428 (fontified t) 428 429 (fontified t face (rainbow-delimiters-depth-1-face)) 429 439 (fontified t) 439 440 (fontified t face (rainbow-delimiters-depth-1-face)) 440 442 (fontified t)) . 1645) (undo-tree-id2516 . -441) (undo-tree-id2517 . -442) (undo-tree-id2518 . -441) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -48) (undo-tree-id2528 . -48) (undo-tree-id2529 . -48) (undo-tree-id2530 . -48) (undo-tree-id2531 . -48) (undo-tree-id2532 . -1) (undo-tree-id2533 . -223) (undo-tree-id2534 . -224) (undo-tree-id2535 . -442) (undo-tree-id2536 . -441) (undo-tree-id2537 . -47) (undo-tree-id2538 . -119) (undo-tree-id2539 . -157) (undo-tree-id2540 . -234) (undo-tree-id2541 . -312) (undo-tree-id2542 . -387) (undo-tree-id2543 . -441) (undo-tree-id2544 . -441) (undo-tree-id2545 . -442) (undo-tree-id2546 . -441) (undo-tree-id2547 . -441) (undo-tree-id2548 . -442) (undo-tree-id2549 . -442) (undo-tree-id2550 . -442) 2087) nil (25759 41121 904073 795000) 0 nil])
([nil nil ((1 . 5295) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions

def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)
    
    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)
    
    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1
    
    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2
    
    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise
    
    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)

def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)
    
    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)
    
    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1
    
    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2
    
    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise
    
    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)
def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    plt.plot(series, \".-\")
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")
    plt.grid(True)
    if x_label:
        plt.xlabel(x_label, fontsize=16)
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)
    plt.hlines(0, 0, 100, linewidth=1)
    plt.axis([0, n_steps + 1, -1, 1])
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))
    plt.axis([1, 20, 0, 0.05])
    plt.legend(fontsize=14)
    plt.xlabel(\"Epochs\")
    plt.ylabel(\"Loss\")
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential(
    [keras.layers.Flatten(input_shape=[50, 1]), keras.layers.Dense(1)]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))


model.evaluate(X_valid, y_valid)


###############################################################################
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 525 (fontified t) 525 528 (fontified t face font-lock-keyword-face) 528 529 (fontified t) 529 549 (fontified t face font-lock-function-name-face) 549 550 (fontified t face (rainbow-delimiters-depth-1-face)) 550 569 (fontified t) 569 570 (fontified t face (rainbow-delimiters-depth-1-face)) 570 576 (fontified t) 576 578 (fontified t face font-lock-comment-delimiter-face) 578 629 (fontified t face font-lock-comment-face) 629 633 (fontified t) 633 638 (fontified t face font-lock-variable-name-face) 638 640 (fontified t) 640 645 (fontified t face font-lock-variable-name-face) 645 647 (fontified t) 647 655 (fontified t face font-lock-variable-name-face) 655 657 (fontified t) 657 665 (fontified t face font-lock-variable-name-face) 665 682 (fontified t) 682 683 (fontified t face (rainbow-delimiters-depth-1-face)) 683 699 (fontified t) 699 700 (fontified t face (rainbow-delimiters-depth-1-face)) 700 710 (fontified t) 710 712 (fontified t face font-lock-comment-delimiter-face) 712 759 (fontified t face font-lock-comment-face) 759 763 (fontified t) 763 767 (fontified t face font-lock-variable-name-face) 767 781 (fontified t) 781 782 (fontified t face (rainbow-delimiters-depth-1-face)) 782 795 (fontified t) 795 796 (fontified t face (rainbow-delimiters-depth-1-face)) 796 806 (fontified t) 806 808 (fontified t face font-lock-comment-delimiter-face) 808 884 (fontified t face font-lock-comment-face) 884 888 (fontified t) 888 890 (fontified t face font-lock-comment-delimiter-face) 890 950 (fontified t face font-lock-comment-face) 950 954 (fontified t) 954 960 (fontified t face font-lock-variable-name-face) 960 975 (fontified t) 975 976 (fontified t face (rainbow-delimiters-depth-1-face)) 976 977 (fontified t face (rainbow-delimiters-depth-2-face)) 977 992 (fontified t) 992 993 (fontified t face (rainbow-delimiters-depth-2-face)) 993 996 (fontified t) 996 997 (fontified t face (rainbow-delimiters-depth-2-face)) 997 1012 (fontified t) 1012 1013 (fontified t face (rainbow-delimiters-depth-2-face)) 1013 1014 (fontified t face (rainbow-delimiters-depth-1-face)) 1014 1016 (fontified t) 1016 1018 (fontified t face font-lock-comment-delimiter-face) 1018 1025 (fontified t face font-lock-comment-face) 1025 1034 (fontified t) 1034 1036 (fontified t face font-lock-comment-delimiter-face) 1036 1119 (fontified t face font-lock-comment-face) 1119 1123 (fontified t) 1123 1125 (fontified t face font-lock-comment-delimiter-face) 1125 1208 (fontified t face font-lock-comment-face) 1208 1212 (fontified t) 1212 1218 (fontified t face font-lock-variable-name-face) 1218 1234 (fontified t) 1234 1235 (fontified t face (rainbow-delimiters-depth-1-face)) 1235 1236 (fontified t face (rainbow-delimiters-depth-2-face)) 1236 1251 (fontified t) 1251 1252 (fontified t face (rainbow-delimiters-depth-2-face)) 1252 1255 (fontified t) 1255 1256 (fontified t face (rainbow-delimiters-depth-2-face)) 1256 1271 (fontified t) 1271 1272 (fontified t face (rainbow-delimiters-depth-2-face)) 1272 1273 (fontified t face (rainbow-delimiters-depth-1-face)) 1273 1275 (fontified t) 1275 1277 (fontified t face font-lock-comment-delimiter-face) 1277 1286 (fontified t face font-lock-comment-face) 1286 1295 (fontified t) 1295 1297 (fontified t face font-lock-comment-delimiter-face) 1297 1389 (fontified t face font-lock-comment-face) 1389 1393 (fontified t) 1393 1399 (fontified t face font-lock-variable-name-face) 1399 1409 (fontified t) 1409 1410 (fontified t face (rainbow-delimiters-depth-1-face)) 1410 1424 (fontified t) 1424 1425 (fontified t face (rainbow-delimiters-depth-2-face)) 1425 1444 (fontified t) 1444 1445 (fontified t face (rainbow-delimiters-depth-2-face)) 1445 1451 (fontified t) 1451 1452 (fontified t face (rainbow-delimiters-depth-1-face)) 1452 1454 (fontified t) 1454 1456 (fontified t face font-lock-comment-delimiter-face) 1456 1464 (fontified t face font-lock-comment-face) 1464 1473 (fontified t) 1473 1475 (fontified t face font-lock-comment-delimiter-face) 1475 1525 (fontified t face font-lock-comment-face) 1525 1543 (fontified t face font-lock-comment-face) 1543 1547 (fontified t) 1547 1549 (fontified t face font-lock-comment-delimiter-face) 1549 1589 (fontified t face font-lock-comment-face) 1589 1593 (fontified t) 1593 1599 (fontified t face font-lock-keyword-face) 1599 1606 (fontified t) 1606 1607 (fontified t face (rainbow-delimiters-depth-1-face)) 1607 1622 (fontified t) 1622 1623 (fontified t face (rainbow-delimiters-depth-1-face)) 1623 1630 (fontified t) 1630 1631 (fontified t face (rainbow-delimiters-depth-1-face)) 1631 1641 (fontified t) 1641 1642 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 1642 1643 (fontified t) 1643 1644 (fontified t) 1644 1647 (fontified t face font-lock-keyword-face) 1647 1648 (fontified t) 1648 1668 (fontified t face font-lock-function-name-face) 1668 1669 (fontified t face (rainbow-delimiters-depth-1-face)) 1669 1688 (fontified t) 1688 1689 (fontified t face (rainbow-delimiters-depth-1-face)) 1689 1695 (fontified t) 1695 1697 (fontified t face font-lock-comment-delimiter-face) 1697 1748 (fontified t face font-lock-comment-face) 1748 1752 (fontified t) 1752 1757 (fontified t face font-lock-variable-name-face) 1757 1759 (fontified t) 1759 1764 (fontified t face font-lock-variable-name-face) 1764 1766 (fontified t) 1766 1774 (fontified t face font-lock-variable-name-face) 1774 1776 (fontified t) 1776 1784 (fontified t face font-lock-variable-name-face) 1784 1801 (fontified t) 1801 1802 (fontified t face (rainbow-delimiters-depth-1-face)) 1802 1818 (fontified t) 1818 1819 (fontified t face (rainbow-delimiters-depth-1-face)) 1819 1829 (fontified t) 1829 1831 (fontified t face font-lock-comment-delimiter-face) 1831 1878 (fontified t face font-lock-comment-face) 1878 1882 (fontified t) 1882 1886 (fontified t face font-lock-variable-name-face) 1886 1900 (fontified t) 1900 1901 (fontified t face (rainbow-delimiters-depth-1-face)) 1901 1914 (fontified t) 1914 1915 (fontified t face (rainbow-delimiters-depth-1-face)) 1915 1925 (fontified t) 1925 1927 (fontified t face font-lock-comment-delimiter-face) 1927 2003 (fontified t face font-lock-comment-face) 2003 2007 (fontified t) 2007 2009 (fontified t face font-lock-comment-delimiter-face) 2009 2069 (fontified t face font-lock-comment-face) 2069 2073 (fontified t) 2073 2079 (fontified t face font-lock-variable-name-face) 2079 2094 (fontified t) 2094 2095 (fontified t face (rainbow-delimiters-depth-1-face)) 2095 2096 (fontified t face (rainbow-delimiters-depth-2-face)) 2096 2111 (fontified t) 2111 2112 (fontified t face (rainbow-delimiters-depth-2-face)) 2112 2115 (fontified t) 2115 2116 (fontified t face (rainbow-delimiters-depth-2-face)) 2116 2131 (fontified t) 2131 2132 (fontified t face (rainbow-delimiters-depth-2-face)) 2132 2133 (fontified t face (rainbow-delimiters-depth-1-face)) 2133 2135 (fontified t) 2135 2137 (fontified t face font-lock-comment-delimiter-face) 2137 2144 (fontified t face font-lock-comment-face) 2144 2153 (fontified t) 2153 2155 (fontified t face font-lock-comment-delimiter-face) 2155 2238 (fontified t face font-lock-comment-face) 2238 2242 (fontified t) 2242 2244 (fontified t face font-lock-comment-delimiter-face) 2244 2327 (fontified t face font-lock-comment-face) 2327 2331 (fontified t) 2331 2337 (fontified t face font-lock-variable-name-face) 2337 2353 (fontified t) 2353 2354 (fontified t face (rainbow-delimiters-depth-1-face)) 2354 2355 (fontified t face (rainbow-delimiters-depth-2-face)) 2355 2370 (fontified t) 2370 2371 (fontified t face (rainbow-delimiters-depth-2-face)) 2371 2374 (fontified t) 2374 2375 (fontified t face (rainbow-delimiters-depth-2-face)) 2375 2390 (fontified t) 2390 2391 (fontified t face (rainbow-delimiters-depth-2-face)) 2391 2392 (fontified t face (rainbow-delimiters-depth-1-face)) 2392 2394 (fontified t) 2394 2396 (fontified t face font-lock-comment-delimiter-face) 2396 2405 (fontified t face font-lock-comment-face) 2405 2414 (fontified t) 2414 2416 (fontified t face font-lock-comment-delimiter-face) 2416 2508 (fontified t face font-lock-comment-face) 2508 2512 (fontified t) 2512 2518 (fontified t face font-lock-variable-name-face) 2518 2528 (fontified t) 2528 2529 (fontified t face (rainbow-delimiters-depth-1-face)) 2529 2543 (fontified t) 2543 2544 (fontified t face (rainbow-delimiters-depth-2-face)) 2544 2563 (fontified t) 2563 2564 (fontified t face (rainbow-delimiters-depth-2-face)) 2564 2570 (fontified t) 2570 2571 (fontified t face (rainbow-delimiters-depth-1-face)) 2571 2573 (fontified t) 2573 2575 (fontified t face font-lock-comment-delimiter-face) 2575 2583 (fontified t face font-lock-comment-face) 2583 2592 (fontified t) 2592 2594 (fontified t face font-lock-comment-delimiter-face) 2594 2644 (fontified t face font-lock-comment-face) 2644 2662 (fontified t face font-lock-comment-face) 2662 2666 (fontified t) 2666 2668 (fontified t face font-lock-comment-delimiter-face) 2668 2708 (fontified t face font-lock-comment-face) 2708 2712 (fontified t) 2712 2718 (fontified t face font-lock-keyword-face) 2718 2725 (fontified t) 2725 2726 (fontified t face (rainbow-delimiters-depth-1-face)) 2726 2741 (fontified t) 2741 2742 (fontified t face (rainbow-delimiters-depth-1-face)) 2742 2749 (fontified t) 2749 2750 (fontified t face (rainbow-delimiters-depth-1-face)) 2750 2760 (fontified t) 2760 2761 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 2761 2762 (fontified t) 2762 2765 (fontified t face font-lock-keyword-face) 2765 2766 (fontified t) 2766 2777 (fontified t face font-lock-function-name-face) 2777 2778 (fontified t face (rainbow-delimiters-depth-1-face)) 2778 2793 (fontified t) 2793 2797 (fontified t face font-lock-constant-face) 2797 2798 (fontified t) 2798 2806 (fontified t) 2806 2810 (fontified t face font-lock-constant-face) 2810 2819 (fontified t) 2819 2820 (fontified t) 2820 2825 (fontified t face font-lock-string-face) 2825 2835 (fontified t) 2835 2843 (fontified t face font-lock-string-face) 2843 2852 (fontified t) 2852 2856 (fontified t face font-lock-constant-face) 2856 2857 (fontified t) 2857 2858 (fontified t face (rainbow-delimiters-depth-1-face)) 2858 2872 (fontified t) 2872 2873 (fontified t face (rainbow-delimiters-depth-1-face)) 2873 2881 (fontified t) 2881 2885 (fontified t face font-lock-string-face) 2885 2886 (fontified t face (rainbow-delimiters-depth-1-face)) 2886 2891 (fontified t) 2891 2893 (fontified t face font-lock-keyword-face) 2893 2896 (fontified t) 2896 2898 (fontified t face font-lock-keyword-face) 2898 2899 (fontified t) 2899 2902 (fontified t face font-lock-keyword-face) 2902 2903 (fontified t) 2903 2907 (fontified t face font-lock-constant-face) 2907 2925 (fontified t) 2925 2926 (fontified t face (rainbow-delimiters-depth-1-face)) 2926 2938 (fontified t) 2938 2942 (fontified t face font-lock-string-face) 2942 2950 (fontified t) 2950 2958 (fontified t face font-lock-string-face) 2958 2959 (fontified t face (rainbow-delimiters-depth-1-face)) 2959 2964 (fontified t) 2964 2966 (fontified t face font-lock-keyword-face) 2966 2974 (fontified t) 2974 2976 (fontified t face font-lock-keyword-face) 2976 2977 (fontified t) 2977 2980 (fontified t face font-lock-keyword-face) 2980 2981 (fontified t) 2981 2985 (fontified t face font-lock-constant-face) 2985 3003 (fontified t) 3003 3004 (fontified t face (rainbow-delimiters-depth-1-face)) 3004 3021 (fontified t) 3021 3025 (fontified t face font-lock-string-face) 3025 3048 (fontified t) 3048 3060 (fontified t face font-lock-string-face) 3060 3061 (fontified t face (rainbow-delimiters-depth-1-face)) 3061 3074 (fontified t) 3074 3075 (fontified t face (rainbow-delimiters-depth-1-face)) 3075 3079 (fontified t face font-lock-constant-face) 3079 3080 (fontified t face (rainbow-delimiters-depth-1-face)) 3080 3085 (fontified t) 3085 3087 (fontified t face font-lock-keyword-face) 3087 3115 (fontified t) 3115 3116 (fontified t face (rainbow-delimiters-depth-1-face)) 3116 3136 (fontified t) 3136 3137 (fontified t face (rainbow-delimiters-depth-1-face)) 3137 3142 (fontified t) 3142 3144 (fontified t face font-lock-keyword-face) 3144 3172 (fontified t) 3172 3173 (fontified t face (rainbow-delimiters-depth-1-face)) 3173 3205 (fontified t) 3205 3206 (fontified t face (rainbow-delimiters-depth-1-face)) 3206 3221 (fontified t) 3221 3222 (fontified t face (rainbow-delimiters-depth-1-face)) 3222 3244 (fontified t) 3244 3245 (fontified t face (rainbow-delimiters-depth-1-face)) 3245 3258 (fontified t) 3258 3259 (fontified t face (rainbow-delimiters-depth-1-face)) 3259 3260 (fontified t face (rainbow-delimiters-depth-2-face)) 3260 3262 (fontified t) 3262 3281 (fontified t) 3281 3282 (face (rainbow-delimiters-depth-2-face) fontified t) 3282 3283 (face (rainbow-delimiters-depth-1-face) fontified t) 3283 3284 (fontified t) 3288 3290 (face font-lock-keyword-face) 3298 3301 (face font-lock-keyword-face) 3302 3303 (face (rainbow-delimiters-depth-1-face)) 3305 3307 (face font-lock-keyword-face) 3314 3315 (face (rainbow-delimiters-depth-1-face)) 3335 3336 (face (rainbow-delimiters-depth-1-face)) 3353 3357 (face font-lock-string-face) 3357 3365 (face font-lock-string-face) 3365 3366 (face (rainbow-delimiters-depth-1-face)) 3369 3372 (face font-lock-keyword-face) 3373 3393 (face font-lock-function-name-face) 3393 3394 (face (rainbow-delimiters-depth-1-face)) 3408 3409 (face (rainbow-delimiters-depth-1-face)) 3423 3424 (face (rainbow-delimiters-depth-1-face)) 3433 3434 (face (rainbow-delimiters-depth-2-face)) 3434 3437 (face font-lock-builtin-face) 3437 3438 (face (rainbow-delimiters-depth-3-face)) 3442 3443 (face (rainbow-delimiters-depth-3-face)) 3443 3444 (face (rainbow-delimiters-depth-2-face)) 3458 3463 (face font-lock-string-face) 3471 3486 (face font-lock-string-face) 3486 3487 (face (rainbow-delimiters-depth-1-face)) 3500 3501 (face (rainbow-delimiters-depth-1-face)) 3510 3511 (face (rainbow-delimiters-depth-2-face)) 3511 3514 (face font-lock-builtin-face) 3514 3515 (face (rainbow-delimiters-depth-3-face)) 3523 3524 (face (rainbow-delimiters-depth-3-face)) 3524 3525 (face (rainbow-delimiters-depth-2-face)) 3541 3546 (face font-lock-string-face) 3554 3571 (face font-lock-string-face) 3571 3572 (face (rainbow-delimiters-depth-1-face)) 3584 3585 (face (rainbow-delimiters-depth-1-face)) 3585 3586 (face (rainbow-delimiters-depth-1-face)) 3610 3611 (face (rainbow-delimiters-depth-1-face)) 3633 3634 (face (rainbow-delimiters-depth-2-face)) 3642 3646 (face font-lock-constant-face) 3646 3647 (face (rainbow-delimiters-depth-2-face)) 3647 3648 (face (rainbow-delimiters-depth-1-face)) 3661 3662 (face (rainbow-delimiters-depth-1-face)) 3662 3663 (face (rainbow-delimiters-depth-2-face)) 3677 3678 (face (rainbow-delimiters-depth-2-face)) 3678 3679 (face (rainbow-delimiters-depth-1-face)) 3694 3695 (face (rainbow-delimiters-depth-1-face)) 3706 3707 (face (rainbow-delimiters-depth-1-face)) 3722 3723 (face (rainbow-delimiters-depth-1-face)) 3723 3731 (face font-lock-string-face) 3731 3732 (face (rainbow-delimiters-depth-1-face)) 3747 3748 (face (rainbow-delimiters-depth-1-face)) 3748 3754 (face font-lock-string-face) 3754 3755 (face (rainbow-delimiters-depth-1-face)) 3768 3769 (face (rainbow-delimiters-depth-1-face)) 3769 3773 (face font-lock-constant-face) 3773 3774 (face (rainbow-delimiters-depth-1-face)) 3777 3856 (face font-lock-comment-delimiter-face) 3856 3857 (face font-lock-comment-face) 3857 3864 (face font-lock-variable-name-face)) . 1) (undo-tree-id2197 . 3687) (undo-tree-id2198 . -1644) (undo-tree-id2199 . -2760) (undo-tree-id2200 . -1644) (undo-tree-id2201 . -1644) (undo-tree-id2202 . 2569) (undo-tree-id2203 . -2864) (undo-tree-id2204 . -2864) (undo-tree-id2205 . -2917) (undo-tree-id2206 . -2917) (undo-tree-id2207 . -2917) (undo-tree-id2208 . -2917) (undo-tree-id2209 . -2995) (undo-tree-id2210 . -2995) (undo-tree-id2211 . -2995) (undo-tree-id2212 . -2995) (undo-tree-id2213 . -3325) (undo-tree-id2214 . -3325) (undo-tree-id2215 . -1644) (undo-tree-id2216 . -1644) (undo-tree-id2217 . -1644) (undo-tree-id2218 . -1644) (undo-tree-id2219 . -1644) (undo-tree-id2220 . -1644) (undo-tree-id2221 . -1644) (undo-tree-id2222 . -1644) (undo-tree-id2223 . -3415) (undo-tree-id2224 . -3415) (undo-tree-id2225 . -3415) (undo-tree-id2226 . -3415) (undo-tree-id2227 . -3492) (undo-tree-id2228 . -3492) (undo-tree-id2229 . -3492) (undo-tree-id2230 . -3492) (undo-tree-id2231 . -3712) (undo-tree-id2232 . -3712) (undo-tree-id2233 . -3737) (undo-tree-id2234 . -3737) (undo-tree-id2235 . -1644) (undo-tree-id2236 . -1644) (undo-tree-id2237 . -1644) (undo-tree-id2238 . -1644) (undo-tree-id2239 . -1644) (undo-tree-id2240 . -1644) (undo-tree-id2241 . -525) (undo-tree-id2242 . -525) (undo-tree-id2243 . -525) (undo-tree-id2244 . -525) (undo-tree-id2245 . -525) (undo-tree-id2246 . -525) (undo-tree-id2247 . -38) (undo-tree-id2248 . -44) (undo-tree-id2249 . -106) (undo-tree-id2250 . -110) (undo-tree-id2251 . -1644) (undo-tree-id2252 . -1644) (undo-tree-id2253 . -3566) (undo-tree-id2254 . -3570) (undo-tree-id2255 . -5014) (undo-tree-id2256 . -5021) (undo-tree-id2257 . -525) (undo-tree-id2258 . -525) (undo-tree-id2259 . -525) (undo-tree-id2260 . -525) (undo-tree-id2261 . -525) (undo-tree-id2262 . -525) (undo-tree-id2263 . -525) (undo-tree-id2264 . -525) (undo-tree-id2265 . -525) (undo-tree-id2266 . -525) (undo-tree-id2267 . -525) (undo-tree-id2268 . -525) (undo-tree-id2269 . -525) (undo-tree-id2270 . -525) (undo-tree-id2271 . -525) (undo-tree-id2272 . -525) (undo-tree-id2273 . -525) (undo-tree-id2274 . -525) (undo-tree-id2275 . -525) (undo-tree-id2276 . -525) (undo-tree-id2277 . -525) (undo-tree-id2278 . -525) (undo-tree-id2279 . -525) (undo-tree-id2280 . -525) (undo-tree-id2281 . -525) (undo-tree-id2282 . -525) (undo-tree-id2283 . -525) (undo-tree-id2284 . -525) (undo-tree-id2285 . -525) (undo-tree-id2286 . -525) (undo-tree-id2287 . -525) (undo-tree-id2288 . -525) (undo-tree-id2289 . -525) (undo-tree-id2290 . -525) (undo-tree-id2291 . -525) (undo-tree-id2292 . -525) (undo-tree-id2293 . -525) (undo-tree-id2294 . -525) (undo-tree-id2295 . -525) (undo-tree-id2296 . -525) (undo-tree-id2297 . -525) (undo-tree-id2298 . -525) (undo-tree-id2299 . -525) (undo-tree-id2300 . -525) (undo-tree-id2301 . -525) (undo-tree-id2302 . -525) (undo-tree-id2303 . -525) (undo-tree-id2304 . -525) (undo-tree-id2305 . -525) (undo-tree-id2306 . -525) (undo-tree-id2307 . -525) (undo-tree-id2308 . -525) (undo-tree-id2309 . -525) (undo-tree-id2310 . -525) (undo-tree-id2311 . -525) (undo-tree-id2312 . -525) (undo-tree-id2313 . -525) (undo-tree-id2314 . -525) (undo-tree-id2315 . -1641) (undo-tree-id2316 . -1641) (undo-tree-id2317 . -1641) (undo-tree-id2318 . -1641) (undo-tree-id2319 . -1641) (undo-tree-id2320 . -1641) (undo-tree-id2321 . -1641) (undo-tree-id2322 . -1641) (undo-tree-id2323 . -1641) (undo-tree-id2324 . -1641) (undo-tree-id2325 . -1641) (undo-tree-id2326 . -1641) (undo-tree-id2327 . -1641) (undo-tree-id2328 . -1641) (undo-tree-id2329 . -2762) (undo-tree-id2330 . -2762) (undo-tree-id2331 . -2762) (undo-tree-id2332 . -2762) (undo-tree-id2333 . -2762) (undo-tree-id2334 . -2762) (undo-tree-id2335 . -2864) (undo-tree-id2336 . -2864) (undo-tree-id2337 . -2917) (undo-tree-id2338 . -2917) (undo-tree-id2339 . -2917) (undo-tree-id2340 . -2917) (undo-tree-id2341 . -2995) (undo-tree-id2342 . -2995) (undo-tree-id2343 . -2995) (undo-tree-id2344 . -2995) (undo-tree-id2345 . -3325) (undo-tree-id2346 . -3325) (undo-tree-id2347 . -1641) (undo-tree-id2348 . -1641) (undo-tree-id2349 . -1641) (undo-tree-id2350 . -1641) (undo-tree-id2351 . -1641) (undo-tree-id2352 . -1641) (undo-tree-id2353 . -1641) (undo-tree-id2354 . -1642) (undo-tree-id2355 . -1642) (undo-tree-id2356 . -1642) (undo-tree-id2357 . -1642) (undo-tree-id2358 . -1642) (undo-tree-id2359 . -1642) (undo-tree-id2360 . -1642) (undo-tree-id2361 . 3688) (undo-tree-id2362 . -1643) (undo-tree-id2363 . -1593) (undo-tree-id2364 . -1593) (undo-tree-id2365 . -1643) (undo-tree-id2366 . -1643) (undo-tree-id2367 . -1643) (undo-tree-id2368 . -1643) (undo-tree-id2369 . -1643) (undo-tree-id2370 . -1643) (undo-tree-id2371 . -1643) (undo-tree-id2372 . -1643) (undo-tree-id2373 . -2762) (undo-tree-id2374 . -2762) (undo-tree-id2375 . -2762) (undo-tree-id2376 . -2762) (undo-tree-id2377 . -2762) (undo-tree-id2378 . -2762) (undo-tree-id2379 . -2864) (undo-tree-id2380 . -2864) (undo-tree-id2381 . -2917) (undo-tree-id2382 . -2917) (undo-tree-id2383 . -2917) (undo-tree-id2384 . -2917) (undo-tree-id2385 . -2995) (undo-tree-id2386 . -2995) (undo-tree-id2387 . -2995) (undo-tree-id2388 . -2995) (undo-tree-id2389 . -3325) (undo-tree-id2390 . -3325) (undo-tree-id2391 . -1643) (undo-tree-id2392 . -1643) (undo-tree-id2393 . -1643) (undo-tree-id2394 . -1643) (undo-tree-id2395 . -1644) (undo-tree-id2396 . -1644) (undo-tree-id2397 . -1644) (undo-tree-id2398 . -1644) (undo-tree-id2399 . -1644) (undo-tree-id2400 . -1644) (undo-tree-id2401 . -1644) (undo-tree-id2402 . -1644) (undo-tree-id2403 . -1644) (undo-tree-id2404 . -1644) (undo-tree-id2405 . -1) (undo-tree-id2406 . -38) (undo-tree-id2407 . -44) (undo-tree-id2408 . -106) (undo-tree-id2409 . -110) (undo-tree-id2410 . -106) (undo-tree-id2411 . -110) (undo-tree-id2412 . -605) (undo-tree-id2413 . -616) (undo-tree-id2414 . -572) (undo-tree-id2415 . -573) (undo-tree-id2416 . -710) (undo-tree-id2417 . -711) (undo-tree-id2418 . -1025) (undo-tree-id2419 . -1026) (undo-tree-id2420 . -1025) (undo-tree-id2421 . -1026) (undo-tree-id2422 . -1034) (undo-tree-id2423 . -1035) (undo-tree-id2424 . -1049) (undo-tree-id2425 . -1055) (undo-tree-id2426 . -1036) (undo-tree-id2427 . -1044) (undo-tree-id2428 . -1644) (undo-tree-id2429 . -1644) (undo-tree-id2430 . -3097) (undo-tree-id2431 . -3098) (undo-tree-id2432 . -4391) (undo-tree-id2433 . -4392) (undo-tree-id2434 . -1644) (undo-tree-id2435 . -1644) (undo-tree-id2436 . -1644) (undo-tree-id2437 . -1644) (undo-tree-id2438 . -2708) (undo-tree-id2439 . -2760) (undo-tree-id2440 . -2760) (undo-tree-id2441 . -2760) (undo-tree-id2442 . -38) (undo-tree-id2443 . -44) (undo-tree-id2444 . -106) (undo-tree-id2445 . -110) (undo-tree-id2446 . -525) (undo-tree-id2447 . -528) (undo-tree-id2448 . -701) (undo-tree-id2449 . -702) (undo-tree-id2450 . -797) (undo-tree-id2451 . -798) (undo-tree-id2452 . -878) (undo-tree-id2453 . -883) (undo-tree-id2454 . -1025) (undo-tree-id2455 . -1026) (undo-tree-id2456 . -1108) (undo-tree-id2457 . -1112) (undo-tree-id2458 . -1198) (undo-tree-id2459 . -1199) (undo-tree-id2460 . -1286) (undo-tree-id2461 . -1287) (undo-tree-id2462 . -1370) (undo-tree-id2463 . -1371) (undo-tree-id2464 . -1464) (undo-tree-id2465 . -1465) (undo-tree-id2466 . -1644) (undo-tree-id2467 . -1647) (undo-tree-id2468 . -1644) (undo-tree-id2469 . -1647) (undo-tree-id2470 . -1824) (undo-tree-id2471 . -1825) (undo-tree-id2472 . -3096) (undo-tree-id2473 . -3097) (undo-tree-id2474 . -4673) (undo-tree-id2475 . -4674) (undo-tree-id2476 . -2760) (undo-tree-id2477 . -2760) (undo-tree-id2478 . -2760) (undo-tree-id2479 . -2762) (undo-tree-id2480 . -2762) (undo-tree-id2481 . -2762) (undo-tree-id2482 . -2762) (undo-tree-id2483 . -2762) (undo-tree-id2484 . -2762) (undo-tree-id2485 . -2864) (undo-tree-id2486 . -2864) (undo-tree-id2487 . -2917) (undo-tree-id2488 . -2917) (undo-tree-id2489 . -2917) (undo-tree-id2490 . -2917) (undo-tree-id2491 . -2995) (undo-tree-id2492 . -2995) (undo-tree-id2493 . -2995) (undo-tree-id2494 . -2995) (undo-tree-id2495 . -2760) (undo-tree-id2496 . -2760) (undo-tree-id2497 . -2760) (undo-tree-id2498 . -2760) (undo-tree-id2499 . -2753) (undo-tree-id2500 . -2760) (undo-tree-id2501 . -2760) (undo-tree-id2502 . -2760) (undo-tree-id2503 . -2760) (undo-tree-id2504 . -2760) (undo-tree-id2505 . -2760) (undo-tree-id2506 . -2760) (undo-tree-id2507 . -2760) (undo-tree-id2508 . -1916) (undo-tree-id2509 . -2760) (undo-tree-id2510 . -2760) (undo-tree-id2511 . -1916) (undo-tree-id2512 . -2760) (undo-tree-id2513 . -2760) (undo-tree-id2514 . -2760) (undo-tree-id2515 . -2760)) nil (25759 41121 904025 43000) 0 nil])
([nil nil ((#("the" 0 3 (fontified t face font-lock-comment-face)) . 2135) (undo-tree-id2551 . -2) (undo-tree-id2552 . -2) (undo-tree-id2553 . -2) (undo-tree-id2554 . -3) (undo-tree-id2555 . -2) (undo-tree-id2556 . -2) (undo-tree-id2557 . -2) (undo-tree-id2558 . -2) (undo-tree-id2559 . -2) (undo-tree-id2560 . -2) (undo-tree-id2561 . -2) (undo-tree-id2562 . -2) (undo-tree-id2563 . -3) 2137 (t 25759 41121 909427 715000)) nil (25759 41188 45295 707000) 0 nil])
([nil nil ((#("the" 0 3 (fontified t face font-lock-comment-face)) . 2223) (undo-tree-id2564 . -2) (undo-tree-id2565 . -2) (undo-tree-id2566 . -2) (undo-tree-id2567 . -3) (undo-tree-id2568 . -2) (undo-tree-id2569 . -2) (undo-tree-id2570 . -2) (undo-tree-id2571 . -2) (undo-tree-id2572 . -2) (undo-tree-id2573 . -2) (undo-tree-id2574 . -2) (undo-tree-id2575 . -2) (undo-tree-id2576 . -2) (undo-tree-id2577 . -2) (undo-tree-id2578 . -3) 2225 (t 25759 41188 59607 397000)) nil (25759 41201 532538 444000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 2223) (undo-tree-id2587 . 1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (t 25759 41201 589395 181000)) nil (25759 41212 104100 172000) 0 nil])
([nil nil ((#("the" 0 3 (fontified t face font-lock-comment-face)) . 2396) (undo-tree-id2579 . -2) (undo-tree-id2580 . -2) (undo-tree-id2581 . -2) (undo-tree-id2582 . -3) (undo-tree-id2583 . -2) (undo-tree-id2584 . -2) (undo-tree-id2585 . -2) (undo-tree-id2586 . -3) 2398) nil (25759 41212 104087 361000) 0 nil])
([nil nil ((#("to  series" 0 10 (fontified t face font-lock-comment-face)) . 2393) (undo-tree-id2598 . -9) (undo-tree-id2599 . -9) (undo-tree-id2600 . -3) (undo-tree-id2601 . -3) (undo-tree-id2602 . -9) (undo-tree-id2603 . -3) (undo-tree-id2604 . -3) (undo-tree-id2605 . -3) (undo-tree-id2606 . -3) (undo-tree-id2607 . -4) (undo-tree-id2608 . -4) (undo-tree-id2609 . -4) (undo-tree-id2610 . -4) (undo-tree-id2611 . -4) (undo-tree-id2612 . -4) (undo-tree-id2613 . -4) (undo-tree-id2614 . -10) (undo-tree-id2615 . -9) (undo-tree-id2616 . -1) (undo-tree-id2617 . -9) (undo-tree-id2618 . -9) (undo-tree-id2619 . -9) (undo-tree-id2620 . -9) (undo-tree-id2621 . -9) (undo-tree-id2622 . -9) (undo-tree-id2623 . -9) (undo-tree-id2624 . -10) 2402 (t 25759 41212 118761 372000)) nil (25759 41386 535835 427000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3711 . 3712) (nil fontified nil 2707 . 3712) (2707 . 3712) (#("def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    plt.plot(series, \".-\")
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")
    plt.grid(True)
    if x_label:
        plt.xlabel(x_label, fontsize=16)
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)
    plt.hlines(0, 0, 100, linewidth=1)
    plt.axis([0, n_steps + 1, -1, 1])
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")

" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t face (rainbow-delimiters-depth-1-face)) 16 31 (fontified t) 31 35 (fontified t face font-lock-constant-face) 35 44 (fontified t) 44 48 (fontified t face font-lock-constant-face) 48 58 (fontified t) 58 63 (fontified t face font-lock-string-face) 63 71 (fontified t) 71 73 (fontified t) 73 81 (fontified t face font-lock-string-face) 81 90 (fontified t) 90 94 (fontified t face font-lock-constant-face) 94 95 (fontified t) 95 96 (fontified t face (rainbow-delimiters-depth-1-face)) 96 110 (fontified t) 110 111 (fontified t face (rainbow-delimiters-depth-1-face)) 111 119 (fontified t) 119 123 (fontified t face font-lock-string-face) 123 124 (fontified t face (rainbow-delimiters-depth-1-face)) 124 129 (fontified t) 129 131 (fontified t face font-lock-keyword-face) 131 134 (fontified t) 134 136 (fontified t face font-lock-keyword-face) 136 137 (fontified t) 137 140 (fontified t face font-lock-keyword-face) 140 141 (fontified t) 141 145 (fontified t face font-lock-constant-face) 145 163 (fontified t) 163 164 (fontified t face (rainbow-delimiters-depth-1-face)) 164 176 (fontified t) 176 180 (fontified t face font-lock-string-face) 180 188 (fontified t) 188 196 (fontified t face font-lock-string-face) 196 197 (fontified t face (rainbow-delimiters-depth-1-face)) 197 202 (fontified t) 202 204 (fontified t face font-lock-keyword-face) 204 212 (fontified t) 212 214 (fontified t face font-lock-keyword-face) 214 215 (fontified t) 215 218 (fontified t face font-lock-keyword-face) 218 219 (fontified t) 219 223 (fontified t face font-lock-constant-face) 223 225 (fontified t) 225 241 (fontified t) 241 242 (fontified t face (rainbow-delimiters-depth-1-face)) 242 248 (fontified t) 248 259 (fontified t) 259 263 (fontified t face font-lock-string-face) 263 286 (fontified t) 286 298 (fontified t face font-lock-string-face) 298 299 (fontified t face (rainbow-delimiters-depth-1-face)) 299 300 (fontified t) 300 312 (fontified t) 312 313 (fontified t face (rainbow-delimiters-depth-1-face)) 313 317 (fontified t face font-lock-constant-face) 317 318 (fontified t face (rainbow-delimiters-depth-1-face)) 318 323 (fontified t) 323 325 (fontified t face font-lock-keyword-face) 325 353 (fontified t) 353 354 (fontified t face (rainbow-delimiters-depth-1-face)) 354 374 (fontified t) 374 375 (fontified t face (rainbow-delimiters-depth-1-face)) 375 380 (fontified t) 380 382 (fontified t face font-lock-keyword-face) 382 392 (fontified t) 392 410 (fontified t) 410 411 (fontified t face (rainbow-delimiters-depth-1-face)) 411 443 (fontified t) 443 444 (fontified t face (rainbow-delimiters-depth-1-face)) 444 445 (fontified t) 445 459 (fontified t) 459 460 (fontified t face (rainbow-delimiters-depth-1-face)) 460 482 (fontified t) 482 483 (fontified t face (rainbow-delimiters-depth-1-face)) 483 496 (fontified t) 496 497 (fontified t face (rainbow-delimiters-depth-1-face)) 497 498 (fontified t face (rainbow-delimiters-depth-2-face)) 498 500 (fontified t) 500 519 (fontified t) 519 520 (fontified t face (rainbow-delimiters-depth-2-face)) 520 521 (fontified t face (rainbow-delimiters-depth-1-face)) 521 522 (fontified t) 522 526 (fontified t) 526 528 (fontified t face font-lock-keyword-face) 528 536 (fontified t) 536 539 (fontified t face font-lock-keyword-face) 539 540 (fontified t) 540 541 (fontified t face (rainbow-delimiters-depth-1-face)) 541 543 (fontified t) 543 545 (fontified t face font-lock-keyword-face) 545 552 (fontified t) 552 553 (fontified t face (rainbow-delimiters-depth-1-face)) 553 555 (fontified t) 555 573 (fontified t) 573 574 (fontified t face (rainbow-delimiters-depth-1-face)) 574 591 (fontified t) 591 595 (fontified t face font-lock-string-face) 595 603 (fontified t face font-lock-string-face) 603 604 (fontified t face (rainbow-delimiters-depth-1-face)) 604 605 (fontified t) 605 606 (fontified t)) . 2707) (undo-tree-id4952 . 571) (undo-tree-id4953 . -605) (undo-tree-id4954 . -606) (undo-tree-id4955 . -563) (undo-tree-id4956 . -563) (undo-tree-id4957 . -17) (undo-tree-id4958 . -17) (undo-tree-id4959 . -21) (undo-tree-id4960 . -21) (undo-tree-id4961 . -21) (undo-tree-id4962 . -21) (undo-tree-id4963 . -21) (undo-tree-id4964 . -96) (undo-tree-id4965 . -96) (undo-tree-id4966 . -96) (undo-tree-id4967 . -96) (undo-tree-id4968 . -96) (undo-tree-id4969 . -96) (undo-tree-id4970 . -96) (undo-tree-id4971 . -96) (undo-tree-id4972 . -96) (undo-tree-id4973 . -96) (undo-tree-id4974 . -21) (undo-tree-id4975 . -21) (undo-tree-id4976 . -21) (undo-tree-id4977 . -21) (undo-tree-id4978 . -21) (undo-tree-id4979 . -21) (undo-tree-id4980 . -21) (undo-tree-id4981 . -21) (undo-tree-id4982 . -96) (undo-tree-id4983 . -96) (undo-tree-id4984 . -96) (undo-tree-id4985 . -96) (undo-tree-id4986 . -96) (undo-tree-id4987 . -96) (undo-tree-id4988 . -96) (undo-tree-id4989 . -102) (undo-tree-id4990 . -129) (undo-tree-id4991 . -151) (undo-tree-id4992 . -202) (undo-tree-id4993 . -229) (undo-tree-id4994 . -229) (undo-tree-id4995 . -229) (undo-tree-id4996 . -304) (undo-tree-id4997 . -323) (undo-tree-id4998 . -339) (undo-tree-id4999 . -380) (undo-tree-id5000 . -396) (undo-tree-id5001 . -449) (undo-tree-id5002 . -488) (undo-tree-id5003 . -488) (undo-tree-id5004 . -488) (undo-tree-id5005 . -526) (undo-tree-id5006 . -559) (undo-tree-id5007 . -605) (undo-tree-id5008 . -605) (undo-tree-id5009 . -605) (undo-tree-id5010 . -605) (undo-tree-id5011 . -605) (undo-tree-id5012 . -605) (undo-tree-id5013 . -559) (undo-tree-id5014 . -526) (undo-tree-id5015 . -488) (undo-tree-id5016 . -449) (undo-tree-id5017 . -396) (undo-tree-id5018 . -380) (undo-tree-id5019 . -339) (undo-tree-id5020 . -323) (undo-tree-id5021 . -304) (undo-tree-id5022 . -229) (undo-tree-id5023 . -202) (undo-tree-id5024 . -151) (undo-tree-id5025 . -129) (undo-tree-id5026 . -102) (undo-tree-id5027 . -96) (undo-tree-id5028 . -21) (undo-tree-id5029 . -4) (undo-tree-id5030 . -17) (undo-tree-id5031 . -17) (undo-tree-id5032 . -17) (undo-tree-id5033 . -17) (undo-tree-id5034 . -17) (undo-tree-id5035 . -17) (undo-tree-id5036 . -95) (undo-tree-id5037 . -95) (undo-tree-id5038 . -98) (undo-tree-id5039 . -125) (undo-tree-id5040 . -147) (undo-tree-id5041 . -198) (undo-tree-id5042 . -198) (undo-tree-id5043 . -198) (undo-tree-id5044 . -198) (undo-tree-id5045 . -198) (undo-tree-id5046 . -225) (undo-tree-id5047 . -225) (undo-tree-id5048 . -225) (undo-tree-id5049 . -225) (undo-tree-id5050 . -225) (undo-tree-id5051 . -300) (undo-tree-id5052 . -319) (undo-tree-id5053 . -335) (undo-tree-id5054 . -376) (undo-tree-id5055 . -392) (undo-tree-id5056 . -392) (undo-tree-id5057 . -392) (undo-tree-id5058 . -392) (undo-tree-id5059 . -392) (undo-tree-id5060 . -445) (undo-tree-id5061 . -484) (undo-tree-id5062 . -484) (undo-tree-id5063 . -484) (undo-tree-id5064 . -484) (undo-tree-id5065 . -484) (undo-tree-id5066 . -522) (undo-tree-id5067 . -522) (undo-tree-id5068 . -522) (undo-tree-id5069 . -522) (undo-tree-id5070 . -522) (undo-tree-id5071 . -555) (undo-tree-id5072 . -605) (undo-tree-id5073 . -605) (undo-tree-id5074 . -555) (undo-tree-id5075 . -522) (undo-tree-id5076 . -484) (undo-tree-id5077 . -445) (undo-tree-id5078 . -392) (undo-tree-id5079 . -376) (undo-tree-id5080 . -335) (undo-tree-id5081 . -319) (undo-tree-id5082 . -300) (undo-tree-id5083 . -225) (undo-tree-id5084 . -198) (undo-tree-id5085 . -147) (undo-tree-id5086 . -125) (undo-tree-id5087 . -98) (undo-tree-id5088 . -95) (undo-tree-id5089 . -17) (undo-tree-id5090 . -17) (undo-tree-id5091 . -17) (undo-tree-id5092 . -17) (undo-tree-id5093 . -17) (undo-tree-id5094 . -17) (undo-tree-id5095 . -95) (undo-tree-id5096 . -98) (undo-tree-id5097 . -125) (undo-tree-id5098 . -147) (undo-tree-id5099 . -198) (undo-tree-id5100 . -225) (undo-tree-id5101 . -300) (undo-tree-id5102 . -319) (undo-tree-id5103 . -335) (undo-tree-id5104 . -376) (undo-tree-id5105 . -392) (undo-tree-id5106 . -445) (undo-tree-id5107 . -484) (undo-tree-id5108 . -522) (undo-tree-id5109 . -555) (undo-tree-id5110 . -605) (undo-tree-id5111 . -605) (undo-tree-id5112 . -605) (undo-tree-id5113 . -605) (undo-tree-id5114 . -563) (undo-tree-id5115 . -563) (undo-tree-id5116 . -605) (undo-tree-id5117 . -605) (undo-tree-id5118 . -605) (undo-tree-id5119 . -605) (undo-tree-id5120 . -605) (undo-tree-id5121 . -605) (undo-tree-id5122 . -605) (undo-tree-id5123 . -605) (undo-tree-id5124 . -605) (undo-tree-id5125 . -605) (undo-tree-id5126 . -233) (undo-tree-id5127 . -233) (undo-tree-id5128 . -233) (undo-tree-id5129 . -233) (undo-tree-id5130 . -102) (undo-tree-id5131 . -102) (undo-tree-id5132 . -155) (undo-tree-id5133 . -155) (undo-tree-id5134 . -155) (undo-tree-id5135 . -155) (undo-tree-id5136 . -605) (undo-tree-id5137 . -605) (undo-tree-id5138 . -605) (undo-tree-id5139 . -605) (undo-tree-id5140 . -605) (undo-tree-id5141 . -605) (undo-tree-id5142 . -605) (undo-tree-id5143 . -605) (undo-tree-id5144 . -605) (undo-tree-id5145 . -605) (undo-tree-id5146 . -605) (undo-tree-id5147 . -605) (undo-tree-id5148 . -605) (undo-tree-id5149 . -555) (undo-tree-id5150 . -555) (undo-tree-id5151 . -555) (undo-tree-id5152 . -555) (undo-tree-id5153 . -555) (undo-tree-id5154 . -522) (undo-tree-id5155 . -484) (undo-tree-id5156 . -445) (undo-tree-id5157 . -392) (undo-tree-id5158 . -376) (undo-tree-id5159 . -335) (undo-tree-id5160 . -319) (undo-tree-id5161 . -300) (undo-tree-id5162 . -225) (undo-tree-id5163 . -198) (undo-tree-id5164 . -147) (undo-tree-id5165 . -125) (undo-tree-id5166 . -98) (undo-tree-id5167 . -95) (undo-tree-id5168 . -17) (undo-tree-id5169 . -17) (undo-tree-id5170 . -17) (undo-tree-id5171 . -17) (undo-tree-id5172 . -17) (undo-tree-id5173 . -17) (undo-tree-id5174 . -95) (undo-tree-id5175 . -98) (undo-tree-id5176 . -125) (undo-tree-id5177 . -147) (undo-tree-id5178 . -198) (undo-tree-id5179 . -225) (undo-tree-id5180 . -300) (undo-tree-id5181 . -319) (undo-tree-id5182 . -335) (undo-tree-id5183 . -376) (undo-tree-id5184 . -392) (undo-tree-id5185 . -445) (undo-tree-id5186 . -484) (undo-tree-id5187 . -522) (undo-tree-id5188 . -605) (undo-tree-id5189 . -605) (undo-tree-id5190 . -563) (undo-tree-id5191 . -563) (undo-tree-id5192 . -102) (undo-tree-id5193 . -102) (undo-tree-id5194 . -155) (undo-tree-id5195 . -155) (undo-tree-id5196 . -155) (undo-tree-id5197 . -155) (undo-tree-id5198 . -233) (undo-tree-id5199 . -233) (undo-tree-id5200 . -233) (undo-tree-id5201 . -233) (undo-tree-id5202 . -605) (undo-tree-id5203 . -605) (undo-tree-id5204 . -605) (undo-tree-id5205 . -605) (undo-tree-id5206 . -605) (undo-tree-id5207 . -563) (undo-tree-id5208 . -563) (undo-tree-id5209 . -605) (undo-tree-id5210 . -605) (undo-tree-id5211 . -605) (undo-tree-id5212 . -605) (undo-tree-id5213 . -605) (undo-tree-id5214 . -605) (undo-tree-id5215 . -605) (undo-tree-id5216 . -605) (undo-tree-id5217 . -605) (undo-tree-id5218 . -605) (undo-tree-id5219 . -605) (undo-tree-id5220 . -605) (undo-tree-id5221 . -605) (undo-tree-id5222 . -605) (undo-tree-id5223 . -605) (undo-tree-id5224 . -605) (undo-tree-id5225 . -605) (undo-tree-id5226 . -605) (undo-tree-id5227 . -605) (undo-tree-id5228 . -605) (undo-tree-id5229 . -605) (undo-tree-id5230 . -605) (undo-tree-id5231 . -605) (undo-tree-id5232 . -605) (undo-tree-id5233 . -605) (undo-tree-id5234 . -605) (undo-tree-id5235 . -605) (undo-tree-id5236 . -605) (undo-tree-id5237 . -605) (undo-tree-id5238 . -605) (undo-tree-id5239 . -605) (undo-tree-id5240 . -605) (undo-tree-id5241 . -605) (undo-tree-id5242 . -605) (undo-tree-id5243 . -605) (undo-tree-id5244 . -605) (undo-tree-id5245 . -605) (undo-tree-id5246 . -605) (undo-tree-id5247 . -605) (undo-tree-id5248 . -605) (undo-tree-id5249 . -605) (undo-tree-id5250 . -605) (undo-tree-id5251 . -605) (undo-tree-id5252 . -605) (undo-tree-id5253 . -605) (undo-tree-id5254 . -605) (undo-tree-id5255 . -605) (undo-tree-id5256 . -605) (undo-tree-id5257 . -605) (undo-tree-id5258 . -16) (undo-tree-id5259 . -16) (undo-tree-id5260 . -16) (undo-tree-id5261 . -16) (undo-tree-id5262 . -16) (undo-tree-id5263 . -16) (undo-tree-id5264 . -16) (undo-tree-id5265 . -16) (undo-tree-id5266 . -16) (undo-tree-id5267 . -15) (undo-tree-id5268 . -15) (undo-tree-id5269 . -15) (undo-tree-id5270 . -15) (undo-tree-id5271 . -15) (undo-tree-id5272 . -15) (undo-tree-id5273 . -15) (undo-tree-id5274 . -15) (undo-tree-id5275 . -606) (undo-tree-id5276 . -605) (undo-tree-id5277 . -17) (undo-tree-id5278 . -17) (undo-tree-id5279 . -17) (undo-tree-id5280 . -17) (undo-tree-id5281 . -17) (undo-tree-id5282 . -95) (undo-tree-id5283 . -98) (undo-tree-id5284 . -125) (undo-tree-id5285 . -147) (undo-tree-id5286 . -198) (undo-tree-id5287 . -225) (undo-tree-id5288 . -300) (undo-tree-id5289 . -319) (undo-tree-id5290 . -335) (undo-tree-id5291 . -376) (undo-tree-id5292 . -392) (undo-tree-id5293 . -445) (undo-tree-id5294 . -484) (undo-tree-id5295 . -522) (undo-tree-id5296 . -555) (undo-tree-id5297 . -605) (undo-tree-id5298 . -605) (undo-tree-id5299 . -605) (undo-tree-id5300 . -605) (undo-tree-id5301 . -605) (undo-tree-id5302 . -606) (undo-tree-id5303 . -606) (undo-tree-id5304 . -606) 3313) nil (25759 41396 629875 676000) 0 nil] [nil nil ((nil rear-nonsticky nil 3113 . 3114) (nil fontified nil 2707 . 3114) (2707 . 3114) (#("def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    plt.plot(series, \".-\")
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")
    plt.grid(True)
    if x_label:
        plt.xlabel(x_label, fontsize=16)
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)
    plt.hlines(0, 0, 100, linewidth=1)
    plt.axis([0, n_steps + 1, -1, 1])
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 15 (fontified t face font-lock-function-name-face) 15 16 (fontified t face (rainbow-delimiters-depth-1-face)) 16 31 (fontified t) 31 35 (fontified t face font-lock-constant-face) 35 44 (fontified t) 44 48 (fontified t face font-lock-constant-face) 48 58 (fontified t) 58 63 (fontified t face font-lock-string-face) 63 71 (fontified t) 71 73 (fontified t) 73 81 (fontified t face font-lock-string-face) 81 90 (fontified t) 90 94 (fontified t face font-lock-constant-face) 94 95 (fontified t) 95 96 (fontified t face (rainbow-delimiters-depth-1-face)) 96 110 (fontified t) 110 111 (fontified t face (rainbow-delimiters-depth-1-face)) 111 119 (fontified t) 119 123 (fontified t face font-lock-string-face) 123 124 (fontified t face (rainbow-delimiters-depth-1-face)) 124 129 (fontified t) 129 131 (fontified t face font-lock-keyword-face) 131 134 (fontified t) 134 136 (fontified t face font-lock-keyword-face) 136 137 (fontified t) 137 140 (fontified t face font-lock-keyword-face) 140 141 (fontified t) 141 145 (fontified t face font-lock-constant-face) 145 163 (fontified t) 163 164 (fontified t face (rainbow-delimiters-depth-1-face)) 164 176 (fontified t) 176 180 (fontified t face font-lock-string-face) 180 188 (fontified t) 188 196 (fontified t face font-lock-string-face) 196 197 (fontified t face (rainbow-delimiters-depth-1-face)) 197 202 (fontified t) 202 204 (fontified t face font-lock-keyword-face) 204 212 (fontified t) 212 214 (fontified t face font-lock-keyword-face) 214 215 (fontified t) 215 218 (fontified t face font-lock-keyword-face) 218 219 (fontified t) 219 223 (fontified t face font-lock-constant-face) 223 225 (fontified t) 225 241 (fontified t) 241 242 (fontified t face (rainbow-delimiters-depth-1-face)) 242 248 (fontified t) 248 259 (fontified t) 259 263 (fontified t face font-lock-string-face) 263 286 (fontified t) 286 298 (fontified t face font-lock-string-face) 298 299 (fontified t face (rainbow-delimiters-depth-1-face)) 299 300 (fontified t) 300 312 (fontified t) 312 313 (fontified t face (rainbow-delimiters-depth-1-face)) 313 317 (fontified t face font-lock-constant-face) 317 318 (fontified t face (rainbow-delimiters-depth-1-face)) 318 323 (fontified t) 323 325 (fontified t face font-lock-keyword-face) 325 353 (fontified t) 353 354 (fontified t face (rainbow-delimiters-depth-1-face)) 354 374 (fontified t) 374 375 (fontified t face (rainbow-delimiters-depth-1-face)) 375 380 (fontified t) 380 382 (fontified t face font-lock-keyword-face) 382 392 (fontified t) 392 410 (fontified t) 410 411 (fontified t face (rainbow-delimiters-depth-1-face)) 411 443 (fontified t) 443 444 (fontified t face (rainbow-delimiters-depth-1-face)) 444 445 (fontified t) 445 459 (fontified t) 459 460 (fontified t face (rainbow-delimiters-depth-1-face)) 460 482 (fontified t) 482 483 (fontified t face (rainbow-delimiters-depth-1-face)) 483 496 (fontified t) 496 497 (fontified t face (rainbow-delimiters-depth-1-face)) 497 498 (fontified t face (rainbow-delimiters-depth-2-face)) 498 519 (fontified t) 519 520 (fontified t face (rainbow-delimiters-depth-2-face)) 520 521 (fontified t face (rainbow-delimiters-depth-1-face)) 521 526 (fontified t) 526 528 (fontified t face font-lock-keyword-face) 528 536 (fontified t) 536 539 (fontified t face font-lock-keyword-face) 539 540 (fontified t) 540 541 (fontified t face (rainbow-delimiters-depth-1-face)) 541 543 (fontified t) 543 545 (fontified t face font-lock-keyword-face) 545 552 (fontified t) 552 553 (fontified t face (rainbow-delimiters-depth-1-face)) 553 573 (fontified t) 573 574 (fontified t face (rainbow-delimiters-depth-1-face)) 574 591 (fontified t) 591 595 (fontified t face font-lock-string-face) 595 603 (fontified t face font-lock-string-face) 603 604 (fontified t face (rainbow-delimiters-depth-1-face)) 604 605 (fontified t)) . 2707) (undo-tree-id4206 . 570) (undo-tree-id4207 . -604) (undo-tree-id4208 . -605) (undo-tree-id4209 . -563) (undo-tree-id4210 . -563) (undo-tree-id4211 . -17) (undo-tree-id4212 . -17) (undo-tree-id4213 . -21) (undo-tree-id4214 . -21) (undo-tree-id4215 . -21) (undo-tree-id4216 . -21) (undo-tree-id4217 . -21) (undo-tree-id4218 . -96) (undo-tree-id4219 . -96) (undo-tree-id4220 . -96) (undo-tree-id4221 . -96) (undo-tree-id4222 . -96) (undo-tree-id4223 . -96) (undo-tree-id4224 . -96) (undo-tree-id4225 . -96) (undo-tree-id4226 . -96) (undo-tree-id4227 . -96) (undo-tree-id4228 . -21) (undo-tree-id4229 . -21) (undo-tree-id4230 . -21) (undo-tree-id4231 . -21) (undo-tree-id4232 . -21) (undo-tree-id4233 . -21) (undo-tree-id4234 . -21) (undo-tree-id4235 . -21) (undo-tree-id4236 . -96) (undo-tree-id4237 . -96) (undo-tree-id4238 . -96) (undo-tree-id4239 . -96) (undo-tree-id4240 . -96) (undo-tree-id4241 . -96) (undo-tree-id4242 . -96) (undo-tree-id4243 . -102) (undo-tree-id4244 . -129) (undo-tree-id4245 . -151) (undo-tree-id4246 . -202) (undo-tree-id4247 . -229) (undo-tree-id4248 . -229) (undo-tree-id4249 . -229) (undo-tree-id4250 . -304) (undo-tree-id4251 . -323) (undo-tree-id4252 . -339) (undo-tree-id4253 . -380) (undo-tree-id4254 . -396) (undo-tree-id4255 . -449) (undo-tree-id4256 . -488) (undo-tree-id4257 . -488) (undo-tree-id4258 . -488) (undo-tree-id4259 . -526) (undo-tree-id4260 . -559) (undo-tree-id4261 . -605) (undo-tree-id4262 . -605) (undo-tree-id4263 . -605) (undo-tree-id4264 . -605) (undo-tree-id4265 . -605) (undo-tree-id4266 . -605) (undo-tree-id4267 . -559) (undo-tree-id4268 . -526) (undo-tree-id4269 . -488) (undo-tree-id4270 . -449) (undo-tree-id4271 . -396) (undo-tree-id4272 . -380) (undo-tree-id4273 . -339) (undo-tree-id4274 . -323) (undo-tree-id4275 . -304) (undo-tree-id4276 . -229) (undo-tree-id4277 . -202) (undo-tree-id4278 . -151) (undo-tree-id4279 . -129) (undo-tree-id4280 . -102) (undo-tree-id4281 . -96) (undo-tree-id4282 . -21) (undo-tree-id4283 . -4) (undo-tree-id4284 . -17) (undo-tree-id4285 . -17) (undo-tree-id4286 . -17) (undo-tree-id4287 . -17) (undo-tree-id4288 . -17) (undo-tree-id4289 . -17) (undo-tree-id4290 . -95) (undo-tree-id4291 . -95) (undo-tree-id4292 . -98) (undo-tree-id4293 . -125) (undo-tree-id4294 . -147) (undo-tree-id4295 . -198) (undo-tree-id4296 . -198) (undo-tree-id4297 . -198) (undo-tree-id4298 . -198) (undo-tree-id4299 . -198) (undo-tree-id4300 . -225) (undo-tree-id4301 . -225) (undo-tree-id4302 . -225) (undo-tree-id4303 . -225) (undo-tree-id4304 . -225) (undo-tree-id4305 . -300) (undo-tree-id4306 . -319) (undo-tree-id4307 . -335) (undo-tree-id4308 . -376) (undo-tree-id4309 . -392) (undo-tree-id4310 . -392) (undo-tree-id4311 . -392) (undo-tree-id4312 . -392) (undo-tree-id4313 . -392) (undo-tree-id4314 . -445) (undo-tree-id4315 . -484) (undo-tree-id4316 . -484) (undo-tree-id4317 . -484) (undo-tree-id4318 . -484) (undo-tree-id4319 . -484) (undo-tree-id4320 . -522) (undo-tree-id4321 . -522) (undo-tree-id4322 . -522) (undo-tree-id4323 . -522) (undo-tree-id4324 . -522) (undo-tree-id4325 . -555) (undo-tree-id4326 . -605) (undo-tree-id4327 . -605) (undo-tree-id4328 . -555) (undo-tree-id4329 . -522) (undo-tree-id4330 . -484) (undo-tree-id4331 . -445) (undo-tree-id4332 . -392) (undo-tree-id4333 . -376) (undo-tree-id4334 . -335) (undo-tree-id4335 . -319) (undo-tree-id4336 . -300) (undo-tree-id4337 . -225) (undo-tree-id4338 . -198) (undo-tree-id4339 . -147) (undo-tree-id4340 . -125) (undo-tree-id4341 . -98) (undo-tree-id4342 . -95) (undo-tree-id4343 . -17) (undo-tree-id4344 . -17) (undo-tree-id4345 . -17) (undo-tree-id4346 . -17) (undo-tree-id4347 . -17) (undo-tree-id4348 . -17) (undo-tree-id4349 . -95) (undo-tree-id4350 . -98) (undo-tree-id4351 . -125) (undo-tree-id4352 . -147) (undo-tree-id4353 . -198) (undo-tree-id4354 . -225) (undo-tree-id4355 . -300) (undo-tree-id4356 . -319) (undo-tree-id4357 . -335) (undo-tree-id4358 . -376) (undo-tree-id4359 . -392) (undo-tree-id4360 . -445) (undo-tree-id4361 . -484) (undo-tree-id4362 . -522) (undo-tree-id4363 . -555) (undo-tree-id4364 . -605) (undo-tree-id4365 . -605) (undo-tree-id4366 . -605) (undo-tree-id4367 . -605) (undo-tree-id4368 . -555) (undo-tree-id4369 . -563) (undo-tree-id4370 . -563) (undo-tree-id4371 . -605) (undo-tree-id4372 . -605) (undo-tree-id4373 . -605) (undo-tree-id4374 . -605) (undo-tree-id4375 . -605) (undo-tree-id4376 . -605) (undo-tree-id4377 . -605) (undo-tree-id4378 . -605) (undo-tree-id4379 . -605) (undo-tree-id4380 . -605) (undo-tree-id4381 . -233) (undo-tree-id4382 . -233) (undo-tree-id4383 . -233) (undo-tree-id4384 . -233) (undo-tree-id4385 . -102) (undo-tree-id4386 . -102) (undo-tree-id4387 . -155) (undo-tree-id4388 . -155) (undo-tree-id4389 . -155) (undo-tree-id4390 . -155) (undo-tree-id4391 . -605) (undo-tree-id4392 . -605) (undo-tree-id4393 . -605) (undo-tree-id4394 . -605) (undo-tree-id4395 . -605) (undo-tree-id4396 . -605) (undo-tree-id4397 . -605) (undo-tree-id4398 . -605) (undo-tree-id4399 . -605) (undo-tree-id4400 . -605) (undo-tree-id4401 . -605) (undo-tree-id4402 . -605) (undo-tree-id4403 . -605) (undo-tree-id4404 . -555) (undo-tree-id4405 . -555) (undo-tree-id4406 . -555) (undo-tree-id4407 . -555) (undo-tree-id4408 . -555) (undo-tree-id4409 . -522) (undo-tree-id4410 . -484) (undo-tree-id4411 . -445) (undo-tree-id4412 . -392) (undo-tree-id4413 . -376) (undo-tree-id4414 . -335) (undo-tree-id4415 . -319) (undo-tree-id4416 . -300) (undo-tree-id4417 . -225) (undo-tree-id4418 . -198) (undo-tree-id4419 . -147) (undo-tree-id4420 . -125) (undo-tree-id4421 . -98) (undo-tree-id4422 . -95) (undo-tree-id4423 . -17) (undo-tree-id4424 . -605) (undo-tree-id4425 . -555) (undo-tree-id4426 . -17) (undo-tree-id4427 . -17) (undo-tree-id4428 . -17) (undo-tree-id4429 . -17) (undo-tree-id4430 . -17) (undo-tree-id4431 . -95) (undo-tree-id4432 . -98) (undo-tree-id4433 . -125) (undo-tree-id4434 . -147) (undo-tree-id4435 . -198) (undo-tree-id4436 . -225) (undo-tree-id4437 . -300) (undo-tree-id4438 . -319) (undo-tree-id4439 . -335) (undo-tree-id4440 . -376) (undo-tree-id4441 . -392) (undo-tree-id4442 . -445) (undo-tree-id4443 . -484) (undo-tree-id4444 . -522) (undo-tree-id4445 . -555) (undo-tree-id4446 . -605) (undo-tree-id4447 . -605) (undo-tree-id4448 . -605) 3312) ((2707 . 3312) (#("def plot_learning_curves(loss, val_loss):
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))
    plt.axis([1, 20, 0, 0.05])
    plt.legend(fontsize=14)
    plt.xlabel(\"Epochs\")
    plt.ylabel(\"Loss\")
    plt.grid(True)

" 0 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil) 4 24 (fontified nil face font-lock-function-name-face) 24 25 (fontified nil face (rainbow-delimiters-depth-1-face)) 25 39 (fontified nil) 39 40 (fontified nil face (rainbow-delimiters-depth-1-face)) 40 54 (fontified nil) 54 55 (fontified nil face (rainbow-delimiters-depth-1-face)) 55 64 (fontified nil) 64 65 (fontified nil face (rainbow-delimiters-depth-2-face)) 65 68 (fontified nil face font-lock-builtin-face) 68 69 (fontified nil face (rainbow-delimiters-depth-3-face)) 69 73 (fontified nil) 73 74 (fontified nil face (rainbow-delimiters-depth-3-face)) 74 75 (fontified nil face (rainbow-delimiters-depth-2-face)) 75 89 (fontified nil) 89 94 (fontified nil face font-lock-string-face) 94 102 (fontified nil) 102 117 (fontified nil face font-lock-string-face) 117 118 (fontified nil face (rainbow-delimiters-depth-1-face)) 118 131 (fontified nil) 131 132 (fontified nil face (rainbow-delimiters-depth-1-face)) 132 141 (fontified nil) 141 142 (fontified nil face (rainbow-delimiters-depth-2-face)) 142 145 (fontified nil face font-lock-builtin-face) 145 146 (fontified nil face (rainbow-delimiters-depth-3-face)) 146 154 (fontified nil) 154 155 (fontified nil face (rainbow-delimiters-depth-3-face)) 155 156 (fontified nil face (rainbow-delimiters-depth-2-face)) 156 172 (fontified nil) 172 177 (fontified nil face font-lock-string-face) 177 185 (fontified nil) 185 202 (fontified nil face font-lock-string-face) 202 203 (fontified nil face (rainbow-delimiters-depth-1-face)) 203 215 (fontified nil) 215 216 (fontified nil face (rainbow-delimiters-depth-1-face)) 216 217 (fontified nil face (rainbow-delimiters-depth-1-face)) 217 241 (fontified nil) 241 242 (fontified nil face (rainbow-delimiters-depth-1-face)) 242 264 (fontified nil) 264 265 (fontified nil face (rainbow-delimiters-depth-2-face)) 265 273 (fontified nil) 273 277 (fontified nil face font-lock-constant-face) 277 278 (fontified nil face (rainbow-delimiters-depth-2-face)) 278 279 (fontified nil face (rainbow-delimiters-depth-1-face)) 279 292 (fontified nil) 292 293 (fontified nil face (rainbow-delimiters-depth-1-face)) 293 294 (fontified nil face (rainbow-delimiters-depth-2-face)) 294 308 (fontified nil) 308 309 (fontified nil face (rainbow-delimiters-depth-2-face)) 309 310 (fontified nil face (rainbow-delimiters-depth-1-face)) 310 325 (fontified nil) 325 326 (fontified nil face (rainbow-delimiters-depth-1-face)) 326 337 (fontified nil) 337 338 (fontified nil face (rainbow-delimiters-depth-1-face)) 338 353 (fontified nil) 353 354 (fontified nil face (rainbow-delimiters-depth-1-face)) 354 362 (fontified nil face font-lock-string-face) 362 363 (fontified nil face (rainbow-delimiters-depth-1-face)) 363 378 (fontified nil) 378 379 (fontified nil face (rainbow-delimiters-depth-1-face)) 379 385 (fontified nil face font-lock-string-face) 385 386 (fontified nil face (rainbow-delimiters-depth-1-face)) 386 387 (fontified nil) 387 399 (fontified nil) 399 400 (fontified nil face (rainbow-delimiters-depth-1-face)) 400 404 (fontified nil face font-lock-constant-face) 404 405 (fontified nil face (rainbow-delimiters-depth-1-face)) 405 406 (fontified nil) 406 407 (rear-nonsticky nil fontified nil)) . 2707) (undo-tree-id4449 . -406) (undo-tree-id4450 . -406) (undo-tree-id4451 . -387) (undo-tree-id4452 . -197) (undo-tree-id4453 . -201) (undo-tree-id4454 . -387) (undo-tree-id4455 . -387) (undo-tree-id4456 . -387) (nil fontified t 3112 . 3113) (nil fontified t 3111 . 3112) (nil fontified t 3107 . 3111) (nil fontified t 3106 . 3107) (nil fontified t 3094 . 3106) (nil fontified t 3093 . 3094) (nil fontified t 3092 . 3093) (nil fontified t 3086 . 3092) (nil fontified t 3085 . 3086) (nil fontified t 3070 . 3085) (nil fontified t 3069 . 3070) (nil fontified t 3061 . 3069) (nil fontified t 3060 . 3061) (nil fontified t 3045 . 3060) (nil fontified t 3044 . 3045) (nil fontified t 3033 . 3044) (nil fontified t 3032 . 3033) (nil fontified t 3017 . 3032) (nil fontified t 3016 . 3017) (nil fontified t 3015 . 3016) (nil fontified t 3001 . 3015) (nil fontified t 3000 . 3001) (nil fontified t 2999 . 3000) (nil fontified t 2986 . 2999) (nil fontified t 2985 . 2986) (nil fontified t 2984 . 2985) (nil fontified t 2980 . 2984) (nil fontified t 2972 . 2980) (nil fontified t 2971 . 2972) (nil fontified t 2949 . 2971) (nil fontified t 2948 . 2949) (nil fontified t 2924 . 2948) (nil fontified t 2923 . 2924) (nil fontified t 2922 . 2923) (nil fontified t 2910 . 2922) (nil fontified t 2909 . 2910) (nil fontified t 2892 . 2909) (nil fontified t 2884 . 2892) (nil fontified t 2879 . 2884) (nil fontified t 2863 . 2879) (nil fontified t 2862 . 2863) (nil fontified t 2861 . 2862) (nil fontified t 2853 . 2861) (nil fontified t 2852 . 2853) (nil fontified t 2849 . 2852) (nil fontified t 2848 . 2849) (nil fontified t 2839 . 2848) (nil fontified t 2838 . 2839) (nil fontified t 2825 . 2838) (nil fontified t 2824 . 2825) (nil fontified t 2809 . 2824) (nil fontified t 2801 . 2809) (nil fontified t 2796 . 2801) (nil fontified t 2782 . 2796) (nil fontified t 2781 . 2782) (nil fontified t 2780 . 2781) (nil fontified t 2776 . 2780) (nil fontified t 2775 . 2776) (nil fontified t 2772 . 2775) (nil fontified t 2771 . 2772) (nil fontified t 2762 . 2771) (nil fontified t 2761 . 2762) (nil fontified t 2747 . 2761) (nil fontified t 2746 . 2747) (nil fontified t 2732 . 2746) (nil fontified t 2731 . 2732) (nil fontified t 2711 . 2731) (nil fontified t 2710 . 2711) (nil fontified t 2707 . 2710) (nil rear-nonsticky t 3113 . 3114)) (25759 41386 533624 398000) 0 nil] [nil nil ((nil rear-nonsticky nil 4318 . 4319) (nil fontified nil 3314 . 4319) (3314 . 4319) (#("def plot_learning_curves(loss, val_loss):
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))
    plt.axis([1, 20, 0, 0.05])
    plt.legend(fontsize=14)
    plt.xlabel(\"Epochs\")
    plt.ylabel(\"Loss\")
    plt.grid(True)

" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 39 (fontified t) 39 40 (fontified t face (rainbow-delimiters-depth-1-face)) 40 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-1-face)) 55 64 (fontified t) 64 65 (fontified t face (rainbow-delimiters-depth-2-face)) 65 68 (fontified t face font-lock-builtin-face) 68 69 (fontified t face (rainbow-delimiters-depth-3-face)) 69 73 (fontified t) 73 74 (fontified t face (rainbow-delimiters-depth-3-face)) 74 75 (fontified t face (rainbow-delimiters-depth-2-face)) 75 89 (fontified t) 89 94 (fontified t face font-lock-string-face) 94 102 (fontified t) 102 117 (fontified t face font-lock-string-face) 117 118 (fontified t face (rainbow-delimiters-depth-1-face)) 118 131 (fontified t) 131 132 (fontified t face (rainbow-delimiters-depth-1-face)) 132 141 (fontified t) 141 142 (fontified t face (rainbow-delimiters-depth-2-face)) 142 145 (fontified t face font-lock-builtin-face) 145 146 (fontified t face (rainbow-delimiters-depth-3-face)) 146 154 (fontified t) 154 155 (fontified t face (rainbow-delimiters-depth-3-face)) 155 156 (fontified t face (rainbow-delimiters-depth-2-face)) 156 172 (fontified t) 172 177 (fontified t face font-lock-string-face) 177 185 (fontified t) 185 193 (fontified t face font-lock-string-face) 193 202 (face font-lock-string-face fontified t) 202 203 (face (rainbow-delimiters-depth-1-face) fontified t) 203 204 (fontified t) 204 215 (fontified t) 215 216 (fontified t face (rainbow-delimiters-depth-1-face)) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 241 (fontified t) 241 242 (fontified t face (rainbow-delimiters-depth-1-face)) 242 264 (fontified t) 264 265 (fontified t face (rainbow-delimiters-depth-2-face)) 265 273 (fontified t) 273 277 (fontified t face font-lock-constant-face) 277 278 (fontified t face (rainbow-delimiters-depth-2-face)) 278 279 (fontified t face (rainbow-delimiters-depth-1-face)) 279 292 (fontified t) 292 293 (fontified t face (rainbow-delimiters-depth-1-face)) 293 294 (fontified t face (rainbow-delimiters-depth-2-face)) 294 308 (fontified t) 308 309 (fontified t face (rainbow-delimiters-depth-2-face)) 309 310 (fontified t face (rainbow-delimiters-depth-1-face)) 310 325 (fontified t) 325 326 (fontified t face (rainbow-delimiters-depth-1-face)) 326 337 (fontified t) 337 338 (fontified t face (rainbow-delimiters-depth-1-face)) 338 353 (fontified t) 353 354 (fontified t face (rainbow-delimiters-depth-1-face)) 354 362 (fontified t face font-lock-string-face) 362 363 (fontified t face (rainbow-delimiters-depth-1-face)) 363 378 (fontified t) 378 379 (fontified t face (rainbow-delimiters-depth-1-face)) 379 385 (fontified t face font-lock-string-face) 385 386 (fontified t face (rainbow-delimiters-depth-1-face)) 386 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 404 (fontified t face font-lock-constant-face) 404 405 (fontified t face (rainbow-delimiters-depth-1-face)) 405 407 (fontified t)) . 3314) (undo-tree-id3456 . -406) (undo-tree-id3457 . -407) (undo-tree-id3458 . -46) (undo-tree-id3459 . -46) (undo-tree-id3460 . -46) (undo-tree-id3461 . -46) (undo-tree-id3462 . -123) (undo-tree-id3463 . -123) (undo-tree-id3464 . -123) (undo-tree-id3465 . -123) (undo-tree-id3466 . -343) (undo-tree-id3467 . -343) (undo-tree-id3468 . -368) (undo-tree-id3469 . -368) (undo-tree-id3470 . -197) (undo-tree-id3471 . -201) (undo-tree-id3472 . -3) (undo-tree-id3473 . -406) (undo-tree-id3474 . -42) (undo-tree-id3475 . -42) (undo-tree-id3476 . -42) (undo-tree-id3477 . -42) (undo-tree-id3478 . -42) (undo-tree-id3479 . -42) (undo-tree-id3480 . -407) (undo-tree-id3481 . -406) (undo-tree-id3482 . -42) (undo-tree-id3483 . -42) (undo-tree-id3484 . -42) (undo-tree-id3485 . -42) (undo-tree-id3486 . -42) (undo-tree-id3487 . -119) (undo-tree-id3488 . -204) (undo-tree-id3489 . -280) (undo-tree-id3490 . -311) (undo-tree-id3491 . -339) (undo-tree-id3492 . -364) (undo-tree-id3493 . -387) (undo-tree-id3494 . -406) (undo-tree-id3495 . -407) (undo-tree-id3496 . -407) (undo-tree-id3497 . -407) 3721 (t 25759 41223 812253 373000)) ((3314 . 3721) (#("def plot_series(series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True):
    # Plot the series
    plt.plot(series, \".-\")
    
    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")
    
    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")
    
    # Enable grid lines on the plot
    plt.grid(True)
    
    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)
    
    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)
    
    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)
    
    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])
    
    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")" 0 3 (face font-lock-keyword-face fontified nil) 3 4 (fontified nil) 4 15 (face font-lock-function-name-face fontified nil) 15 16 (face (rainbow-delimiters-depth-1-face) fontified nil) 16 26 (fontified nil) 26 30 (face font-lock-constant-face fontified nil) 30 39 (fontified nil) 39 43 (face font-lock-constant-face fontified nil) 43 53 (fontified nil) 53 58 (face font-lock-string-face fontified nil) 58 68 (fontified nil) 68 76 (face font-lock-string-face fontified nil) 76 85 (fontified nil) 85 89 (face font-lock-constant-face fontified nil) 89 90 (face (rainbow-delimiters-depth-1-face) fontified nil) 90 96 (fontified nil) 96 98 (face font-lock-comment-delimiter-face fontified nil) 98 114 (face font-lock-comment-face fontified nil) 114 126 (fontified nil) 126 127 (face (rainbow-delimiters-depth-1-face) fontified nil) 127 135 (fontified nil) 135 139 (face font-lock-string-face fontified nil) 139 140 (face (rainbow-delimiters-depth-1-face) fontified nil) 140 150 (fontified nil) 150 152 (face font-lock-comment-delimiter-face fontified nil) 152 187 (face font-lock-comment-face fontified nil) 187 191 (fontified nil) 191 193 (face font-lock-keyword-face fontified nil) 193 196 (fontified nil) 196 198 (face font-lock-keyword-face fontified nil) 198 199 (fontified nil) 199 202 (face font-lock-keyword-face fontified nil) 202 203 (fontified nil) 203 207 (face font-lock-constant-face fontified nil) 207 225 (fontified nil) 225 226 (face (rainbow-delimiters-depth-1-face) fontified nil) 226 238 (fontified nil) 238 242 (face font-lock-string-face fontified nil) 242 250 (fontified nil) 250 258 (face font-lock-string-face fontified nil) 258 259 (face (rainbow-delimiters-depth-1-face) fontified nil) 259 269 (fontified nil) 269 271 (face font-lock-comment-delimiter-face fontified nil) 271 309 (face font-lock-comment-face fontified nil) 309 313 (fontified nil) 313 315 (face font-lock-keyword-face fontified nil) 315 323 (fontified nil) 323 325 (face font-lock-keyword-face fontified nil) 325 326 (fontified nil) 326 329 (face font-lock-keyword-face fontified nil) 329 330 (fontified nil) 330 334 (face font-lock-constant-face fontified nil) 334 352 (fontified nil) 352 353 (face (rainbow-delimiters-depth-1-face) fontified nil) 353 370 (fontified nil) 370 374 (face font-lock-string-face fontified nil) 374 397 (fontified nil) 397 409 (face font-lock-string-face fontified nil) 409 410 (face (rainbow-delimiters-depth-1-face) fontified nil) 410 420 (fontified nil) 420 422 (face font-lock-comment-delimiter-face fontified nil) 422 452 (face font-lock-comment-face fontified nil) 452 464 (fontified nil) 464 465 (face (rainbow-delimiters-depth-1-face) fontified nil) 465 469 (face font-lock-constant-face fontified nil) 469 470 (face (rainbow-delimiters-depth-1-face) fontified nil) 470 480 (fontified nil) 480 482 (face font-lock-comment-delimiter-face fontified nil) 482 500 (face font-lock-comment-face fontified nil) 500 515 (face font-lock-comment-face fontified nil) 515 519 (fontified nil) 519 521 (face font-lock-keyword-face fontified nil) 521 549 (fontified nil) 549 550 (face (rainbow-delimiters-depth-1-face) fontified nil) 550 570 (fontified nil) 570 571 (face (rainbow-delimiters-depth-1-face) fontified nil) 571 581 (fontified nil) 581 583 (face font-lock-comment-delimiter-face fontified nil) 583 616 (face font-lock-comment-face fontified nil) 616 620 (fontified nil) 620 622 (face font-lock-keyword-face fontified nil) 622 650 (fontified nil) 650 651 (face (rainbow-delimiters-depth-1-face) fontified nil) 651 683 (fontified nil) 683 684 (face (rainbow-delimiters-depth-1-face) fontified nil) 684 694 (fontified nil) 694 696 (face font-lock-comment-delimiter-face fontified nil) 696 725 (face font-lock-comment-face fontified nil) 725 739 (fontified nil) 739 740 (face (rainbow-delimiters-depth-1-face) fontified nil) 740 762 (fontified nil) 762 763 (face (rainbow-delimiters-depth-1-face) fontified nil) 763 773 (fontified nil) 773 775 (face font-lock-comment-delimiter-face fontified nil) 775 808 (face font-lock-comment-face fontified nil) 808 820 (fontified nil) 820 821 (face (rainbow-delimiters-depth-1-face) fontified nil) 821 822 (face (rainbow-delimiters-depth-2-face) fontified nil) 822 843 (fontified nil) 843 844 (face (rainbow-delimiters-depth-2-face) fontified nil) 844 845 (face (rainbow-delimiters-depth-1-face) fontified nil) 845 855 (fontified nil) 855 857 (face font-lock-comment-delimiter-face fontified nil) 857 923 (face font-lock-comment-face fontified nil) 923 927 (fontified nil) 927 929 (face font-lock-keyword-face fontified nil) 929 937 (fontified nil) 937 940 (face font-lock-keyword-face fontified nil) 940 941 (fontified nil) 941 942 (face (rainbow-delimiters-depth-1-face) fontified nil) 942 944 (fontified nil) 944 946 (face font-lock-keyword-face fontified nil) 946 953 (fontified nil) 953 954 (face (rainbow-delimiters-depth-1-face) fontified nil) 954 956 (fontified nil) 956 974 (fontified nil) 974 975 (face (rainbow-delimiters-depth-1-face) fontified nil) 975 992 (fontified nil) 992 1004 (face font-lock-string-face fontified nil) 1004 1005 (rear-nonsticky nil face (rainbow-delimiters-depth-1-face) fontified nil)) . 3314) (undo-tree-id4154 . -1004) (undo-tree-id4155 . -118) (undo-tree-id4156 . -118) (undo-tree-id4157 . -217) (undo-tree-id4158 . -217) (undo-tree-id4159 . -217) (undo-tree-id4160 . -217) (undo-tree-id4161 . -344) (undo-tree-id4162 . -344) (undo-tree-id4163 . -344) (undo-tree-id4164 . -344) (undo-tree-id4165 . -964) (undo-tree-id4166 . -964) (undo-tree-id4167 . -1004) (undo-tree-id4168 . -1004) (undo-tree-id4169 . -1004) (undo-tree-id4170 . -1004) (undo-tree-id4171 . -1004) (undo-tree-id4172 . -1004) (undo-tree-id4173 . -1004) (undo-tree-id4174 . -1004) (undo-tree-id4175 . -1004) (undo-tree-id4176 . -1004) (undo-tree-id4177 . -1004) (undo-tree-id4178 . -1004) (undo-tree-id4179 . -1004) (undo-tree-id4180 . -1004) (undo-tree-id4181 . -1004) (undo-tree-id4182 . -476) (undo-tree-id4183 . -1004) (undo-tree-id4184 . -1004) (undo-tree-id4185 . -1004) (undo-tree-id4186 . -1004) (undo-tree-id4187 . -3) (undo-tree-id4188 . -78) (undo-tree-id4189 . -84) (undo-tree-id4190 . -141) (undo-tree-id4191 . -142) (undo-tree-id4192 . -260) (undo-tree-id4193 . -261) (undo-tree-id4194 . -411) (undo-tree-id4195 . -412) (undo-tree-id4196 . -471) (undo-tree-id4197 . -472) (undo-tree-id4198 . -572) (undo-tree-id4199 . -573) (undo-tree-id4200 . -685) (undo-tree-id4201 . -686) (undo-tree-id4202 . -764) (undo-tree-id4203 . -765) (undo-tree-id4204 . -846) (undo-tree-id4205 . -847) (nil fontified nil 4268 . 4270) (nil fontified nil 4267 . 4268) (nil fontified nil 4260 . 4267) (nil fontified nil 4258 . 4260) (nil fontified nil 4256 . 4258) (nil fontified nil 4255 . 4256) (nil fontified nil 4254 . 4255) (nil fontified nil 4251 . 4254) (nil fontified nil 4243 . 4251) (nil fontified nil 4241 . 4243) (nil fontified nil 4237 . 4241) (nil fontified nil 4171 . 4237) (nil fontified nil 4169 . 4171) (nil fontified nil 4159 . 4169) (nil fontified nil 4158 . 4159) (nil fontified nil 4157 . 4158) (nil fontified nil 4136 . 4157) (nil fontified nil 4135 . 4136) (nil fontified nil 4134 . 4135) (nil fontified nil 4122 . 4134) (nil fontified nil 4089 . 4122) (nil fontified nil 4087 . 4089) (nil fontified nil 4077 . 4087) (nil fontified nil 4076 . 4077) (nil fontified nil 4054 . 4076) (nil fontified nil 4053 . 4054) (nil fontified nil 4039 . 4053) (nil fontified nil 4010 . 4039) (nil fontified nil 4008 . 4010) (nil fontified nil 3998 . 4008) (nil fontified nil 3997 . 3998) (nil fontified nil 3965 . 3997) (nil fontified nil 3964 . 3965) (nil fontified nil 3936 . 3964) (nil fontified nil 3934 . 3936) (nil fontified nil 3930 . 3934) (nil fontified nil 3897 . 3930) (nil fontified nil 3895 . 3897) (nil fontified nil 3885 . 3895) (nil fontified nil 3884 . 3885) (nil fontified nil 3864 . 3884) (nil fontified nil 3863 . 3864) (nil fontified nil 3835 . 3863) (nil fontified nil 3833 . 3835) (nil fontified nil 3829 . 3833) (nil fontified nil 3814 . 3829) (nil fontified nil 3796 . 3814) (nil fontified nil 3794 . 3796) (nil fontified nil 3784 . 3794) (nil fontified nil 3783 . 3784) (nil fontified nil 3779 . 3783) (nil fontified nil 3778 . 3779) (nil fontified nil 3766 . 3778) (nil fontified nil 3736 . 3766) (nil fontified nil 3734 . 3736) (nil fontified nil 3724 . 3734) (nil fontified nil 3723 . 3724) (nil fontified nil 3711 . 3723) (nil fontified nil 3688 . 3711) (nil fontified nil 3684 . 3688) (nil fontified nil 3667 . 3684) (nil fontified nil 3666 . 3667) (nil fontified nil 3648 . 3666) (nil fontified nil 3644 . 3648) (nil fontified nil 3643 . 3644) (nil fontified nil 3640 . 3643) (nil fontified nil 3639 . 3640) (nil fontified nil 3637 . 3639) (nil fontified nil 3629 . 3637) (nil fontified nil 3627 . 3629) (nil fontified nil 3623 . 3627) (nil fontified nil 3585 . 3623) (nil fontified nil 3583 . 3585) (nil fontified nil 3573 . 3583) (nil fontified nil 3572 . 3573) (nil fontified nil 3564 . 3572) (nil fontified nil 3556 . 3564) (nil fontified nil 3552 . 3556) (nil fontified nil 3540 . 3552) (nil fontified nil 3539 . 3540) (nil fontified nil 3521 . 3539) (nil fontified nil 3517 . 3521) (nil fontified nil 3516 . 3517) (nil fontified nil 3513 . 3516) (nil fontified nil 3512 . 3513) (nil fontified nil 3510 . 3512) (nil fontified nil 3507 . 3510) (nil fontified nil 3505 . 3507) (nil fontified nil 3501 . 3505) (nil fontified nil 3466 . 3501) (nil fontified nil 3464 . 3466) (nil fontified nil 3454 . 3464) (nil fontified nil 3453 . 3454) (nil fontified nil 3449 . 3453) (nil fontified nil 3441 . 3449) (nil fontified nil 3440 . 3441) (nil fontified nil 3428 . 3440) (nil fontified nil 3412 . 3428) (nil fontified nil 3410 . 3412) (nil fontified nil 3404 . 3410) (nil fontified nil 3403 . 3404) (nil fontified nil 3399 . 3403) (nil fontified nil 3390 . 3399) (nil fontified nil 3382 . 3390) (nil fontified nil 3372 . 3382) (nil fontified nil 3367 . 3372) (nil fontified nil 3357 . 3367) (nil fontified nil 3353 . 3357) (nil fontified nil 3344 . 3353) (nil fontified nil 3340 . 3344) (nil fontified nil 3330 . 3340) (nil fontified nil 3329 . 3330) (nil fontified nil 3318 . 3329) (nil fontified nil 3317 . 3318) (nil fontified nil 3314 . 3317) (nil rear-nonsticky t 4318 . 4319)) (25759 41371 312909 500000) 0 nil])
([nil nil ((1 . 5650) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate  second wave by applying another sinusoidal function to the time array
    # Similar to first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise  by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True):
    # Plot the series
    plt.plot(series, \".-\")
    
    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")
    
    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")
    
    # Enable grid lines on the plot
    plt.grid(True)
    
    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)
    
    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)
    
    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)
    
    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])
    
    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")
def plot_learning_curves(loss, val_loss):
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))
    plt.axis([1, 20, 0, 0.05])
    plt.legend(fontsize=14)
    plt.xlabel(\"Epochs\")
    plt.ylabel(\"Loss\")
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential(
    [keras.layers.Flatten(input_shape=[50, 1]), keras.layers.Dense(1)]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))


model.evaluate(X_valid, y_valid)


###############################################################################
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 1018 1023 (fontified t) 1023 1025 (fontified t face font-lock-comment-delimiter-face) 1025 1108 (fontified t face font-lock-comment-face) 1108 1112 (fontified t) 1112 1114 (fontified t face font-lock-comment-delimiter-face) 1114 1197 (fontified t face font-lock-comment-face) 1197 1201 (fontified t) 1201 1207 (fontified t face font-lock-variable-name-face) 1207 1223 (fontified t) 1223 1224 (fontified t face (rainbow-delimiters-depth-1-face)) 1224 1225 (fontified t face (rainbow-delimiters-depth-2-face)) 1225 1240 (fontified t) 1240 1241 (fontified t face (rainbow-delimiters-depth-2-face)) 1241 1244 (fontified t) 1244 1245 (fontified t face (rainbow-delimiters-depth-2-face)) 1245 1260 (fontified t) 1260 1261 (fontified t face (rainbow-delimiters-depth-2-face)) 1261 1262 (fontified t face (rainbow-delimiters-depth-1-face)) 1262 1264 (fontified t) 1264 1266 (fontified t face font-lock-comment-delimiter-face) 1266 1275 (fontified t face font-lock-comment-face) 1275 1280 (fontified t) 1280 1282 (fontified t face font-lock-comment-delimiter-face) 1282 1374 (fontified t face font-lock-comment-face) 1374 1378 (fontified t) 1378 1384 (fontified t face font-lock-variable-name-face) 1384 1394 (fontified t) 1394 1395 (fontified t face (rainbow-delimiters-depth-1-face)) 1395 1409 (fontified t) 1409 1410 (fontified t face (rainbow-delimiters-depth-2-face)) 1410 1429 (fontified t) 1429 1430 (fontified t face (rainbow-delimiters-depth-2-face)) 1430 1436 (fontified t) 1436 1437 (fontified t face (rainbow-delimiters-depth-1-face)) 1437 1439 (fontified t) 1439 1441 (fontified t face font-lock-comment-delimiter-face) 1441 1449 (fontified t face font-lock-comment-face) 1449 1454 (fontified t) 1454 1456 (fontified t face font-lock-comment-delimiter-face) 1456 1518 (fontified t face font-lock-comment-face) 1518 1524 (fontified t face font-lock-comment-face) 1528 1530 (face font-lock-comment-delimiter-face) 1530 1570 (face font-lock-comment-face) 1574 1580 (face font-lock-keyword-face) 1587 1588 (face (rainbow-delimiters-depth-1-face)) 1603 1604 (face (rainbow-delimiters-depth-1-face)) 1611 1612 (face (rainbow-delimiters-depth-1-face)) 1622 1623 (face (rainbow-delimiters-depth-1-face)) 1626 1629 (face font-lock-keyword-face) 1630 1650 (face font-lock-function-name-face) 1650 1651 (face (rainbow-delimiters-depth-1-face)) 1670 1671 (face (rainbow-delimiters-depth-1-face)) 1677 1679 (face font-lock-comment-delimiter-face) 1679 1697 (face font-lock-comment-face) 1697 1730 (face font-lock-comment-face) 1734 1739 (face font-lock-variable-name-face) 1741 1746 (face font-lock-variable-name-face) 1748 1756 (face font-lock-variable-name-face) 1758 1766 (face font-lock-variable-name-face) 1783 1784 (face (rainbow-delimiters-depth-1-face)) 1800 1801 (face (rainbow-delimiters-depth-1-face)) 1807 1809 (face font-lock-comment-delimiter-face) 1809 1856 (face font-lock-comment-face) 1860 1864 (face font-lock-variable-name-face) 1878 1879 (face (rainbow-delimiters-depth-1-face)) 1892 1893 (face (rainbow-delimiters-depth-1-face)) 1899 1901 (face font-lock-comment-delimiter-face) 1901 1916 (face font-lock-comment-face) 1916 1977 (face font-lock-comment-face) 1981 1983 (face font-lock-comment-delimiter-face) 1983 2043 (face font-lock-comment-face) 2047 2053 (face font-lock-variable-name-face) 2068 2069 (face (rainbow-delimiters-depth-1-face)) 2069 2070 (face (rainbow-delimiters-depth-2-face)) 2085 2086 (face (rainbow-delimiters-depth-2-face)) 2089 2090 (face (rainbow-delimiters-depth-2-face)) 2105 2106 (face (rainbow-delimiters-depth-2-face)) 2106 2107 (face (rainbow-delimiters-depth-1-face)) 2109 2111 (face font-lock-comment-delimiter-face) 2111 2118 (face font-lock-comment-face) 2123 2125 (face font-lock-comment-delimiter-face) 2125 2205 (face font-lock-comment-face) 2209 2211 (face font-lock-comment-delimiter-face) 2211 2290 (face font-lock-comment-face) 2294 2300 (face font-lock-variable-name-face) 2316 2317 (face (rainbow-delimiters-depth-1-face)) 2317 2318 (face (rainbow-delimiters-depth-2-face)) 2333 2334 (face (rainbow-delimiters-depth-2-face)) 2337 2338 (face (rainbow-delimiters-depth-2-face)) 2353 2354 (face (rainbow-delimiters-depth-2-face)) 2354 2355 (face (rainbow-delimiters-depth-1-face)) 2357 2359 (face font-lock-comment-delimiter-face) 2359 2368 (face font-lock-comment-face) 2373 2375 (face font-lock-comment-delimiter-face) 2375 2388 (face font-lock-comment-face) 2388 2396 (face font-lock-comment-face) 2396 2454 (face font-lock-comment-face) 2458 2464 (face font-lock-variable-name-face) 2474 2475 (face (rainbow-delimiters-depth-1-face)) 2489 2490 (face (rainbow-delimiters-depth-2-face)) 2509 2510 (face (rainbow-delimiters-depth-2-face)) 2516 2517 (face (rainbow-delimiters-depth-1-face)) 2519 2521 (face font-lock-comment-delimiter-face) 2521 2529 (face font-lock-comment-face) 2534 2536 (face font-lock-comment-delimiter-face) 2536 2604 (face font-lock-comment-face) 2608 2610 (face font-lock-comment-delimiter-face) 2610 2650 (face font-lock-comment-face) 2654 2660 (face font-lock-keyword-face) 2667 2668 (face (rainbow-delimiters-depth-1-face)) 2683 2684 (face (rainbow-delimiters-depth-1-face)) 2691 2692 (face (rainbow-delimiters-depth-1-face)) 2702 2703 (face (rainbow-delimiters-depth-1-face)) 2704 2706 (fontified t) 2706 2709 (fontified t face font-lock-keyword-face) 2709 2710 (fontified t) 2710 2721 (fontified t face font-lock-function-name-face) 2721 2722 (fontified t face (rainbow-delimiters-depth-1-face)) 2722 2732 (fontified t) 2732 2736 (fontified t face font-lock-constant-face) 2736 2745 (fontified t) 2745 2749 (fontified t face font-lock-constant-face) 2749 2759 (fontified t) 2759 2764 (fontified t face font-lock-string-face) 2764 2774 (fontified t) 2774 2782 (fontified t face font-lock-string-face) 2782 2791 (fontified t) 2791 2795 (fontified t face font-lock-constant-face) 2795 2796 (fontified t face (rainbow-delimiters-depth-1-face)) 2796 2802 (fontified t) 2802 2804 (fontified t face font-lock-comment-delimiter-face) 2804 2820 (fontified t face font-lock-comment-face) 2820 2832 (fontified t) 2832 2833 (fontified t face (rainbow-delimiters-depth-1-face)) 2833 2841 (fontified t) 2841 2845 (fontified t face font-lock-string-face) 2845 2846 (fontified t face (rainbow-delimiters-depth-1-face)) 2846 2856 (fontified t) 2856 2858 (fontified t face font-lock-comment-delimiter-face) 2858 2893 (fontified t face font-lock-comment-face) 2893 2897 (fontified t) 2897 2899 (fontified t face font-lock-keyword-face) 2899 2902 (fontified t) 2902 2904 (fontified t face font-lock-keyword-face) 2904 2905 (fontified t) 2905 2908 (fontified t face font-lock-keyword-face) 2908 2909 (fontified t) 2909 2913 (fontified t face font-lock-constant-face) 2913 2931 (fontified t) 2931 2932 (fontified t face (rainbow-delimiters-depth-1-face)) 2932 2944 (fontified t) 2944 2948 (fontified t face font-lock-string-face) 2948 2956 (fontified t) 2956 2964 (fontified t face font-lock-string-face) 2964 2965 (fontified t face (rainbow-delimiters-depth-1-face)) 2965 2975 (fontified t) 2975 2977 (fontified t face font-lock-comment-delimiter-face) 2977 3015 (fontified t face font-lock-comment-face) 3015 3019 (fontified t) 3019 3021 (fontified t face font-lock-keyword-face) 3021 3029 (fontified t) 3029 3031 (fontified t face font-lock-keyword-face) 3031 3032 (fontified t) 3032 3035 (fontified t face font-lock-keyword-face) 3035 3036 (fontified t) 3036 3040 (fontified t face font-lock-constant-face) 3040 3058 (fontified t) 3058 3059 (fontified t face (rainbow-delimiters-depth-1-face)) 3059 3076 (fontified t) 3076 3080 (fontified t face font-lock-string-face) 3080 3103 (fontified t) 3103 3115 (fontified t face font-lock-string-face) 3115 3116 (fontified t face (rainbow-delimiters-depth-1-face)) 3116 3126 (fontified t) 3126 3128 (fontified t face font-lock-comment-delimiter-face) 3128 3158 (fontified t face font-lock-comment-face) 3158 3170 (fontified t) 3170 3171 (fontified t face (rainbow-delimiters-depth-1-face)) 3171 3175 (fontified t face font-lock-constant-face) 3175 3176 (fontified t face (rainbow-delimiters-depth-1-face)) 3176 3186 (fontified t) 3186 3188 (fontified t face font-lock-comment-delimiter-face) 3188 3206 (fontified t face font-lock-comment-face) 3206 3221 (fontified t face font-lock-comment-face) 3221 3225 (fontified t) 3225 3227 (fontified t face font-lock-keyword-face) 3227 3255 (fontified t) 3255 3256 (fontified t face (rainbow-delimiters-depth-1-face)) 3256 3276 (fontified t) 3276 3277 (fontified t face (rainbow-delimiters-depth-1-face)) 3277 3287 (fontified t) 3287 3289 (fontified t face font-lock-comment-delimiter-face) 3289 3322 (fontified t face font-lock-comment-face) 3322 3326 (fontified t) 3326 3328 (fontified t face font-lock-keyword-face) 3328 3356 (fontified t) 3356 3357 (fontified t face (rainbow-delimiters-depth-1-face)) 3357 3389 (fontified t) 3389 3390 (fontified t face (rainbow-delimiters-depth-1-face)) 3390 3400 (fontified t) 3400 3402 (fontified t face font-lock-comment-delimiter-face) 3402 3431 (fontified t face font-lock-comment-face) 3431 3445 (fontified t) 3445 3446 (fontified t face (rainbow-delimiters-depth-1-face)) 3446 3468 (fontified t) 3468 3469 (fontified t face (rainbow-delimiters-depth-1-face)) 3469 3479 (fontified t) 3479 3481 (fontified t face font-lock-comment-delimiter-face) 3481 3514 (fontified t face font-lock-comment-face) 3514 3526 (fontified t) 3526 3527 (fontified t face (rainbow-delimiters-depth-1-face)) 3527 3528 (fontified t face (rainbow-delimiters-depth-2-face)) 3528 3549 (fontified t) 3549 3550 (fontified t face (rainbow-delimiters-depth-2-face)) 3550 3551 (fontified t face (rainbow-delimiters-depth-1-face)) 3551 3561 (fontified t) 3561 3563 (fontified t face font-lock-comment-delimiter-face) 3563 3629 (fontified t face font-lock-comment-face) 3629 3633 (fontified t) 3633 3635 (fontified t face font-lock-keyword-face) 3635 3643 (fontified t) 3643 3646 (fontified t face font-lock-keyword-face) 3646 3647 (fontified t) 3647 3648 (fontified t face (rainbow-delimiters-depth-1-face)) 3648 3650 (fontified t) 3650 3652 (fontified t face font-lock-keyword-face) 3652 3659 (fontified t) 3659 3660 (fontified t face (rainbow-delimiters-depth-1-face)) 3660 3680 (fontified t) 3680 3681 (fontified t face (rainbow-delimiters-depth-1-face)) 3681 3698 (fontified t) 3698 3710 (fontified t face font-lock-string-face) 3710 3711 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 3711 3712 (fontified t) 3712 3715 (fontified t face font-lock-keyword-face) 3715 3716 (fontified t) 3716 3736 (fontified t face font-lock-function-name-face) 3736 3737 (fontified t face (rainbow-delimiters-depth-1-face)) 3737 3751 (fontified t) 3751 3752 (fontified t face (rainbow-delimiters-depth-1-face)) 3752 3766 (fontified t) 3766 3767 (fontified t face (rainbow-delimiters-depth-1-face)) 3767 3776 (fontified t) 3776 3777 (fontified t face (rainbow-delimiters-depth-2-face)) 3777 3780 (fontified t face font-lock-builtin-face) 3780 3781 (fontified t face (rainbow-delimiters-depth-3-face)) 3781 3785 (fontified t) 3785 3786 (fontified t face (rainbow-delimiters-depth-3-face)) 3786 3787 (fontified t face (rainbow-delimiters-depth-2-face)) 3787 3801 (fontified t) 3801 3806 (fontified t face font-lock-string-face) 3806 3814 (fontified t) 3814 3829 (fontified t face font-lock-string-face) 3829 3830 (fontified t face (rainbow-delimiters-depth-1-face)) 3830 3843 (fontified t) 3843 3844 (fontified t face (rainbow-delimiters-depth-1-face)) 3844 3853 (fontified t) 3853 3854 (fontified t face (rainbow-delimiters-depth-2-face)) 3854 3857 (fontified t face font-lock-builtin-face) 3857 3858 (fontified t face (rainbow-delimiters-depth-3-face)) 3858 3866 (fontified t) 3866 3867 (fontified t face (rainbow-delimiters-depth-3-face)) 3867 3868 (fontified t face (rainbow-delimiters-depth-2-face)) 3868 3884 (fontified t) 3884 3889 (fontified t face font-lock-string-face) 3889 3897 (fontified t) 3897 3905 (fontified t face font-lock-string-face) 3905 3914 (fontified t face font-lock-string-face) 3914 3915 (fontified t face (rainbow-delimiters-depth-1-face)) 3915 3916 (fontified t) 3916 3927 (fontified t) 3927 3928 (fontified t face (rainbow-delimiters-depth-1-face)) 3928 3929 (fontified t face (rainbow-delimiters-depth-1-face)) 3929 3953 (fontified t) 3953 3954 (fontified t face (rainbow-delimiters-depth-1-face)) 3954 3976 (fontified t) 3976 3977 (fontified t face (rainbow-delimiters-depth-2-face)) 3977 3985 (fontified t) 3985 3989 (fontified t face font-lock-constant-face) 3989 3990 (fontified t face (rainbow-delimiters-depth-2-face)) 3990 3991 (fontified t face (rainbow-delimiters-depth-1-face)) 3991 4004 (fontified t) 4004 4005 (fontified t face (rainbow-delimiters-depth-1-face)) 4005 4006 (fontified t face (rainbow-delimiters-depth-2-face)) 4006 4020 (fontified t) 4020 4021 (fontified t face (rainbow-delimiters-depth-2-face)) 4021 4022 (fontified t face (rainbow-delimiters-depth-1-face)) 4022 4037 (fontified t) 4037 4038 (fontified t face (rainbow-delimiters-depth-1-face)) 4038 4049 (fontified t) 4049 4050 (fontified t face (rainbow-delimiters-depth-1-face)) 4050 4051 (fontified t) 4051 4065 (fontified t) 4065 4066 (fontified t face (rainbow-delimiters-depth-1-face)) 4066 4074 (fontified t face font-lock-string-face) 4074 4075 (fontified t face (rainbow-delimiters-depth-1-face)) 4075 4090 (fontified t) 4090 4091 (fontified t face (rainbow-delimiters-depth-1-face)) 4091 4097 (fontified t face font-lock-string-face) 4097 4098 (fontified t face (rainbow-delimiters-depth-1-face)) 4098 4111 (fontified t) 4111 4112 (fontified t face (rainbow-delimiters-depth-1-face)) 4112 4116 (fontified t face font-lock-constant-face) 4116 4117 (fontified t face (rainbow-delimiters-depth-1-face)) 4117 4118 (fontified t) 4118 4119 (fontified t) 4119 4120 (fontified t) 4120 4160 (fontified t face font-lock-comment-delimiter-face) 4160 4190 (fontified t face font-lock-comment-delimiter-face) 4190 4199 (fontified t face font-lock-comment-delimiter-face) 4199 4200 (fontified t face font-lock-comment-face) 4200 4207 (fontified t face font-lock-variable-name-face) 4207 4210 (fontified t) 4210 4212 (fontified t) 4212 4213 (fontified t) 4213 4219 (fontified t face font-lock-variable-name-face) 4219 4242 (fontified t) 4242 4243 (fontified t face (rainbow-delimiters-depth-1-face)) 4243 4261 (fontified t) 4261 4262 (fontified t face (rainbow-delimiters-depth-1-face)) 4262 4263 (fontified t) 4263 4270 (fontified t face font-lock-variable-name-face) 4270 4272 (fontified t) 4272 4279 (fontified t face font-lock-variable-name-face) 4279 4288 (fontified t) 4288 4289 (fontified t face (rainbow-delimiters-depth-1-face)) 4289 4304 (fontified t) 4304 4305 (fontified t face (rainbow-delimiters-depth-1-face)) 4305 4313 (fontified t) 4313 4314 (fontified t face (rainbow-delimiters-depth-1-face)) 4314 4323 (fontified t) 4323 4324 (fontified t face (rainbow-delimiters-depth-1-face)) 4324 4325 (fontified t) 4325 4332 (fontified t face font-lock-variable-name-face) 4332 4334 (fontified t) 4334 4341 (fontified t face font-lock-variable-name-face) 4341 4350 (fontified t) 4350 4351 (fontified t face (rainbow-delimiters-depth-1-face)) 4351 4370 (fontified t) 4370 4371 (fontified t face (rainbow-delimiters-depth-1-face)) 4371 4379 (fontified t) 4379 4380 (fontified t face (rainbow-delimiters-depth-1-face)) 4380 4393 (fontified t) 4393 4394 (fontified t face (rainbow-delimiters-depth-1-face)) 4394 4395 (fontified t) 4395 4401 (fontified t face font-lock-variable-name-face) 4401 4403 (fontified t) 4403 4409 (fontified t face font-lock-variable-name-face) 4409 4416 (fontified t) 4416 4418 (fontified t) 4418 4419 (fontified t face (rainbow-delimiters-depth-1-face)) 4419 4434 (fontified t) 4434 4435 (fontified t face (rainbow-delimiters-depth-1-face)) 4435 4443 (fontified t) 4443 4444 (fontified t face (rainbow-delimiters-depth-1-face)) 4444 4453 (fontified t) 4453 4454 (fontified t face (rainbow-delimiters-depth-1-face)) 4454 4455 (fontified t) 4455 4460 (fontified t face font-lock-keyword-face) 4460 4461 (fontified t face (rainbow-delimiters-depth-1-face)) 4461 4489 (fontified t) 4489 4490 (fontified t face (rainbow-delimiters-depth-1-face)) 4490 4492 (fontified t) 4492 4571 (fontified t face font-lock-comment-delimiter-face) 4571 4572 (fontified t face font-lock-comment-face) 4572 4575 (fontified t face font-lock-variable-name-face) 4575 4577 (fontified t) 4577 4581 (fontified t face font-lock-variable-name-face) 4581 4596 (fontified t) 4596 4597 (fontified t face (rainbow-delimiters-depth-1-face)) 4597 4618 (fontified t) 4618 4619 (fontified t) 4619 4620 (fontified t) 4620 4622 (fontified t) 4622 4626 (fontified t face font-lock-constant-face) 4626 4636 (fontified t) 4636 4637 (fontified t face (rainbow-delimiters-depth-2-face)) 4637 4642 (fontified t) 4642 4643 (fontified t face (rainbow-delimiters-depth-2-face)) 4643 4644 (fontified t face (rainbow-delimiters-depth-1-face)) 4644 4645 (fontified t) 4645 4648 (fontified t face font-lock-keyword-face) 4648 4653 (fontified t) 4653 4655 (fontified t face font-lock-keyword-face) 4655 4656 (fontified t) 4656 4661 (fontified t face font-lock-builtin-face) 4661 4662 (fontified t face (rainbow-delimiters-depth-1-face)) 4662 4663 (fontified t) 4663 4664 (fontified t face (rainbow-delimiters-depth-1-face)) 4664 4677 (fontified t) 4677 4678 (fontified t face (rainbow-delimiters-depth-1-face)) 4678 4682 (fontified t) 4682 4683 (fontified t face (rainbow-delimiters-depth-2-face)) 4683 4686 (fontified t) 4686 4687 (fontified t face (rainbow-delimiters-depth-2-face)) 4687 4688 (fontified t face (rainbow-delimiters-depth-1-face)) 4688 4700 (fontified t) 4700 4704 (fontified t) 4704 4705 (fontified t face (rainbow-delimiters-depth-1-face)) 4705 4706 (fontified t) 4706 4713 (fontified t) 4713 4721 (fontified t) 4721 4722 (face (rainbow-delimiters-depth-2-face) fontified t) 4722 4731 (fontified t) 4731 4732 (face (rainbow-delimiters-depth-2-face) fontified t) 4732 4734 (fontified t) 4749 4750 (face (rainbow-delimiters-depth-2-face)) 4756 4757 (face (rainbow-delimiters-depth-2-face)) 4775 4776 (face (rainbow-delimiters-depth-2-face)) 4776 4784 (face font-lock-string-face) 4785 4787 (face font-lock-keyword-face) 4797 4801 (face font-lock-keyword-face) 4802 4806 (face font-lock-constant-face) 4806 4807 (face (rainbow-delimiters-depth-2-face)) 4824 4825 (face (rainbow-delimiters-depth-2-face)) 4833 4834 (face (rainbow-delimiters-depth-2-face)) 4840 4841 (face (rainbow-delimiters-depth-1-face)) 4850 4851 (face (rainbow-delimiters-depth-1-face)) 4851 4852 (face (rainbow-delimiters-depth-1-face)) 4854 4860 (face font-lock-variable-name-face) 4870 4871 (face (rainbow-delimiters-depth-1-face)) 4876 4877 (face (rainbow-delimiters-depth-1-face)) 4885 4886 (face (rainbow-delimiters-depth-1-face)) 4917 4918 (face (rainbow-delimiters-depth-2-face)) 4933 4934 (face (rainbow-delimiters-depth-2-face)) 4934 4935 (face (rainbow-delimiters-depth-1-face)) 4937 4955 (face font-lock-comment-delimiter-face) 4955 5016 (face font-lock-comment-delimiter-face) 5016 5017 (face font-lock-comment-face) 5028 5029 (face (rainbow-delimiters-depth-1-face)) 5036 5037 (face (rainbow-delimiters-depth-2-face)) 5044 5045 (face (rainbow-delimiters-depth-2-face)) 5054 5055 (face (rainbow-delimiters-depth-2-face)) 5059 5060 (face (rainbow-delimiters-depth-2-face)) 5068 5069 (face (rainbow-delimiters-depth-2-face)) 5073 5074 (face (rainbow-delimiters-depth-2-face)) 5074 5075 (face (rainbow-delimiters-depth-1-face)) 5084 5085 (face (rainbow-delimiters-depth-1-face)) 5085 5086 (face (rainbow-delimiters-depth-1-face)) 5102 5103 (face (rainbow-delimiters-depth-1-face)) 5105 5106 (face (rainbow-delimiters-depth-1-face)) 5125 5126 (face (rainbow-delimiters-depth-1-face)) 5128 5129 (face (rainbow-delimiters-depth-1-face)) 5131 5136 (face font-lock-variable-name-face) 5162 5163 (face (rainbow-delimiters-depth-1-face))) . 1) (undo-tree-id4457 . 1962) (undo-tree-id4458 . -2706) (undo-tree-id4459 . -3710) (undo-tree-id4460 . -2706) (undo-tree-id4461 . -2706) (undo-tree-id4462 . 1962) (undo-tree-id4463 . -2706) (undo-tree-id4464 . -2706) (undo-tree-id4465 . -2706) (undo-tree-id4466 . -2706) (undo-tree-id4467 . -2706) (undo-tree-id4468 . -2706) (undo-tree-id4469 . -2706) (undo-tree-id4470 . -2706) (undo-tree-id4471 . -2706) (undo-tree-id4472 . -2706) (undo-tree-id4473 . -2706) (undo-tree-id4474 . -2706) (undo-tree-id4475 . -2706) (undo-tree-id4476 . -2706) (undo-tree-id4477 . -2706) (undo-tree-id4478 . -2706) (undo-tree-id4479 . -2706) (undo-tree-id4480 . -2706) (undo-tree-id4481 . -2706) (undo-tree-id4482 . -2706) (undo-tree-id4483 . -2706) (undo-tree-id4484 . -2706) (undo-tree-id4485 . -2706) (undo-tree-id4486 . -2706) (undo-tree-id4487 . -2706) (undo-tree-id4488 . -2706) (undo-tree-id4489 . -2706) (undo-tree-id4490 . -2706) (undo-tree-id4491 . -2706) (undo-tree-id4492 . -2706) (undo-tree-id4493 . -2706) (undo-tree-id4494 . -2706) (undo-tree-id4495 . -2706) (undo-tree-id4496 . -2706) (undo-tree-id4497 . -2706) (undo-tree-id4498 . -2706) (undo-tree-id4499 . -2706) (undo-tree-id4500 . -2706) (undo-tree-id4501 . -2706) (undo-tree-id4502 . -2706) (undo-tree-id4503 . -2706) (undo-tree-id4504 . -2706) (undo-tree-id4505 . -2706) (undo-tree-id4506 . -2706) (undo-tree-id4507 . -2706) (undo-tree-id4508 . -2706) (undo-tree-id4509 . -2706) (undo-tree-id4510 . -2706) (undo-tree-id4511 . -2706) (undo-tree-id4512 . -2706) (undo-tree-id4513 . -2706) (undo-tree-id4514 . -2706) (undo-tree-id4515 . -2706) (undo-tree-id4516 . -2706) (undo-tree-id4517 . -2706) (undo-tree-id4518 . -2706) (undo-tree-id4519 . -2706) (undo-tree-id4520 . -2706) (undo-tree-id4521 . -2706) (undo-tree-id4522 . -2706) (undo-tree-id4523 . -2706) (undo-tree-id4524 . -2706) (undo-tree-id4525 . -2706) (undo-tree-id4526 . -2706) (undo-tree-id4527 . -2706) (undo-tree-id4528 . -2706) (undo-tree-id4529 . -2706) (undo-tree-id4530 . -2706) (undo-tree-id4531 . -2706) (undo-tree-id4532 . -2706) (undo-tree-id4533 . -2706) (undo-tree-id4534 . -2706) (undo-tree-id4535 . -2706) (undo-tree-id4536 . -2706) (undo-tree-id4537 . -2706) (undo-tree-id4538 . -2706) (undo-tree-id4539 . -2706) (undo-tree-id4540 . -2706) (undo-tree-id4541 . -2706) (undo-tree-id4542 . -2706) (undo-tree-id4543 . -2706) (undo-tree-id4544 . -2706) (undo-tree-id4545 . -2706) (undo-tree-id4546 . -2706) (undo-tree-id4547 . -2706) (undo-tree-id4548 . -2706) (undo-tree-id4549 . -2706) (undo-tree-id4550 . -2706) (undo-tree-id4551 . -2706) (undo-tree-id4552 . -2706) (undo-tree-id4553 . -2706) (undo-tree-id4554 . -2706) (undo-tree-id4555 . -2706) (undo-tree-id4556 . -2706) (undo-tree-id4557 . -2706) (undo-tree-id4558 . -2706) (undo-tree-id4559 . -2706) (undo-tree-id4560 . -2706) (undo-tree-id4561 . -2706) (undo-tree-id4562 . -2706) (undo-tree-id4563 . -2706) (undo-tree-id4564 . -2706) (undo-tree-id4565 . -2706) (undo-tree-id4566 . -2706) (undo-tree-id4567 . -2706) (undo-tree-id4568 . -2706) (undo-tree-id4569 . -2706) (undo-tree-id4570 . -2706) (undo-tree-id4571 . -2706) (undo-tree-id4572 . -2706) (undo-tree-id4573 . -2706) (undo-tree-id4574 . -2706) (undo-tree-id4575 . -2706) (undo-tree-id4576 . -2706) (undo-tree-id4577 . -2706) (undo-tree-id4578 . -2706) (undo-tree-id4579 . -2706) (undo-tree-id4580 . -2706) (undo-tree-id4581 . -2706) (undo-tree-id4582 . -2706) (undo-tree-id4583 . -2706) (undo-tree-id4584 . -2706) (undo-tree-id4585 . -2706) (undo-tree-id4586 . -2706) (undo-tree-id4587 . -2706) (undo-tree-id4588 . -2706) (undo-tree-id4589 . -2706) (undo-tree-id4590 . -2706) (undo-tree-id4591 . -2706) (undo-tree-id4592 . -2706) (undo-tree-id4593 . -2706) (undo-tree-id4594 . -2706) (undo-tree-id4595 . -2706) (undo-tree-id4596 . -2706) (undo-tree-id4597 . -2706) (undo-tree-id4598 . -2706) (undo-tree-id4599 . -2706) (undo-tree-id4600 . -2706) (undo-tree-id4601 . -2706) (undo-tree-id4602 . -2706) (undo-tree-id4603 . -2706) (undo-tree-id4604 . -2706) (undo-tree-id4605 . -2706) (undo-tree-id4606 . -2706) (undo-tree-id4607 . -2706) (undo-tree-id4608 . -2706) (undo-tree-id4609 . -2706) (undo-tree-id4610 . -2706) (undo-tree-id4611 . -2706) (undo-tree-id4612 . -2706) (undo-tree-id4613 . -2706) (undo-tree-id4614 . -2706) (undo-tree-id4615 . -2706) (undo-tree-id4616 . -2706) (undo-tree-id4617 . -2706) (undo-tree-id4618 . -2706) (undo-tree-id4619 . -2706) (undo-tree-id4620 . -2706) (undo-tree-id4621 . -2706) (undo-tree-id4622 . -3712) (undo-tree-id4623 . -4119) (undo-tree-id4624 . -2706) (undo-tree-id4625 . -2706) (undo-tree-id4626 . -2706) (undo-tree-id4627 . -2706) (undo-tree-id4628 . -2706) (undo-tree-id4629 . -2706) (undo-tree-id4630 . -2706) (undo-tree-id4631 . -2706) (undo-tree-id4632 . -2706) (undo-tree-id4633 . -2706) (undo-tree-id4634 . -2706) (undo-tree-id4635 . -2706) (undo-tree-id4636 . -2706) (undo-tree-id4637 . -2706) (undo-tree-id4638 . -2706) (undo-tree-id4639 . -2706) (undo-tree-id4640 . -2706) (undo-tree-id4641 . -2706) (undo-tree-id4642 . -2706) (undo-tree-id4643 . -2706) (undo-tree-id4644 . -2706) (undo-tree-id4645 . -2706) (undo-tree-id4646 . -2706) (undo-tree-id4647 . -2706) (undo-tree-id4648 . -2706) (undo-tree-id4649 . -2706) (undo-tree-id4650 . -2706) (undo-tree-id4651 . -2706) (undo-tree-id4652 . -2706) (undo-tree-id4653 . -2706) (undo-tree-id4654 . -2706) (undo-tree-id4655 . -2706) (undo-tree-id4656 . -2706) (undo-tree-id4657 . -2706) (undo-tree-id4658 . -2706) (undo-tree-id4659 . -2706) (undo-tree-id4660 . -2706) (undo-tree-id4661 . -2706) (undo-tree-id4662 . -2706) (undo-tree-id4663 . -2706) (undo-tree-id4664 . -2706) (undo-tree-id4665 . -2706) (undo-tree-id4666 . -2706) (undo-tree-id4667 . -2706) (undo-tree-id4668 . -2706) (undo-tree-id4669 . -2706) (undo-tree-id4670 . -2706) (undo-tree-id4671 . -2706) (undo-tree-id4672 . -2706) (undo-tree-id4673 . -2706) (undo-tree-id4674 . -2706) (undo-tree-id4675 . -2706) (undo-tree-id4676 . -2706) (undo-tree-id4677 . -2706) (undo-tree-id4678 . -2706) (undo-tree-id4679 . -2706) (undo-tree-id4680 . -2706) (undo-tree-id4681 . -2706) (undo-tree-id4682 . -2706) (undo-tree-id4683 . -2706) (undo-tree-id4684 . -2706) (undo-tree-id4685 . -2706) (undo-tree-id4686 . -2706) (undo-tree-id4687 . -2706) (undo-tree-id4688 . -2706) (undo-tree-id4689 . -2706) (undo-tree-id4690 . -2706) (undo-tree-id4691 . -2706) (undo-tree-id4692 . -2706) (undo-tree-id4693 . -2706) (undo-tree-id4694 . -2706) (undo-tree-id4695 . -2706) (undo-tree-id4696 . -2706) (undo-tree-id4697 . -2706) (undo-tree-id4698 . -2706) (undo-tree-id4699 . -2706) (undo-tree-id4700 . -38) (undo-tree-id4701 . -44) (undo-tree-id4702 . -106) (undo-tree-id4703 . -110) (undo-tree-id4704 . -871) (undo-tree-id4705 . -876) (undo-tree-id4706 . -1097) (undo-tree-id4707 . -1101) (undo-tree-id4708 . -1187) (undo-tree-id4709 . -1188) (undo-tree-id4710 . -1355) (undo-tree-id4711 . -1356) (undo-tree-id4712 . -1626) (undo-tree-id4713 . -1629) (undo-tree-id4714 . -1971) (undo-tree-id4715 . -1976) (undo-tree-id4716 . -2198) (undo-tree-id4717 . -2199) (undo-tree-id4718 . -2284) (undo-tree-id4719 . -2285) (undo-tree-id4720 . -2447) (undo-tree-id4721 . -2449) (undo-tree-id4722 . -2706) (undo-tree-id4723 . -2706) (undo-tree-id4724 . -3712) (undo-tree-id4725 . -3715) (undo-tree-id4726 . -3712) (undo-tree-id4727 . -3715) (undo-tree-id4728 . -3909) (undo-tree-id4729 . -3913) (undo-tree-id4730 . -4693) (undo-tree-id4731 . -4704) (undo-tree-id4732 . -5017) (undo-tree-id4733 . -5028) (undo-tree-id4734 . -5357) (undo-tree-id4735 . -5364) (undo-tree-id4736 . -5603) (undo-tree-id4737 . -5614) (undo-tree-id4738 . -2706) (undo-tree-id4739 . -2706) (undo-tree-id4740 . -2706) (undo-tree-id4741 . -2706) (undo-tree-id4742 . -2706) (undo-tree-id4743 . -2706) (undo-tree-id4744 . -2706) (undo-tree-id4745 . -2706) (undo-tree-id4746 . -2706) (undo-tree-id4747 . -2706) (undo-tree-id4748 . -2706) (undo-tree-id4749 . -2706) (undo-tree-id4750 . -2706) (undo-tree-id4751 . -2706) (undo-tree-id4752 . -2706) (undo-tree-id4753 . -2706) (undo-tree-id4754 . -2706) (undo-tree-id4755 . -2706) (undo-tree-id4756 . -2706) (undo-tree-id4757 . -2706) (undo-tree-id4758 . -2706) (undo-tree-id4759 . -38) (undo-tree-id4760 . -44) (undo-tree-id4761 . -106) (undo-tree-id4762 . -110) (undo-tree-id4763 . -871) (undo-tree-id4764 . -876) (undo-tree-id4765 . -1097) (undo-tree-id4766 . -1101) (undo-tree-id4767 . -1187) (undo-tree-id4768 . -1188) (undo-tree-id4769 . -1355) (undo-tree-id4770 . -1356) (undo-tree-id4771 . -1626) (undo-tree-id4772 . -1629) (undo-tree-id4773 . -1971) (undo-tree-id4774 . -1976) (undo-tree-id4775 . -2198) (undo-tree-id4776 . -2199) (undo-tree-id4777 . -2284) (undo-tree-id4778 . -2285) (undo-tree-id4779 . -2447) (undo-tree-id4780 . -2449) (undo-tree-id4781 . -3909) (undo-tree-id4782 . -3913) (undo-tree-id4783 . -5357) (undo-tree-id4784 . -5364) (undo-tree-id4785 . -2706) (undo-tree-id4786 . -2706) (undo-tree-id4787 . -2706) (undo-tree-id4788 . -2706) (undo-tree-id4789 . -2706) (undo-tree-id4790 . -3758) (undo-tree-id4791 . -3758) (undo-tree-id4792 . -3758) (undo-tree-id4793 . -3758) (undo-tree-id4794 . -3835) (undo-tree-id4795 . -3835) (undo-tree-id4796 . -3835) (undo-tree-id4797 . -3835) (undo-tree-id4798 . -4055) (undo-tree-id4799 . -4055) (undo-tree-id4800 . -4080) (undo-tree-id4801 . -4080) (undo-tree-id4802 . -2706) (undo-tree-id4803 . -2706) (undo-tree-id4804 . -2706) (undo-tree-id4805 . -2706) (undo-tree-id4806 . -2706) (undo-tree-id4807 . -2706) (undo-tree-id4808 . -2706) (undo-tree-id4809 . -2706) (undo-tree-id4810 . -2706) (undo-tree-id4811 . -2706) (undo-tree-id4812 . -2706) (undo-tree-id4813 . -2706) (undo-tree-id4814 . -2706) (undo-tree-id4815 . -2706) (undo-tree-id4816 . -2706) (undo-tree-id4817 . -2706) (undo-tree-id4818 . -2706) (undo-tree-id4819 . -2706) (undo-tree-id4820 . -2706) (undo-tree-id4821 . -2706) (undo-tree-id4822 . -2706) (undo-tree-id4823 . -2706) (undo-tree-id4824 . -2706) (undo-tree-id4825 . -2706) (undo-tree-id4826 . -2706) (undo-tree-id4827 . -2706) (undo-tree-id4828 . -2706) (undo-tree-id4829 . -2706) (undo-tree-id4830 . -2706) (undo-tree-id4831 . -2706) (undo-tree-id4832 . -2706) (undo-tree-id4833 . -2706) (undo-tree-id4834 . -2706) (undo-tree-id4835 . -2706) (undo-tree-id4836 . -2706) (undo-tree-id4837 . -2706) (undo-tree-id4838 . -2706) (undo-tree-id4839 . -2706) (undo-tree-id4840 . -2706) (undo-tree-id4841 . -2706) (undo-tree-id4842 . -2706) (undo-tree-id4843 . -2706) (undo-tree-id4844 . -2706) (undo-tree-id4845 . -2706) (undo-tree-id4846 . -2706) (undo-tree-id4847 . -2706) (undo-tree-id4848 . -2706) (undo-tree-id4849 . -2706) (undo-tree-id4850 . -2706) (undo-tree-id4851 . -2706) (undo-tree-id4852 . -2706) (undo-tree-id4853 . -2706) (undo-tree-id4854 . -2706) (undo-tree-id4855 . -2706) (undo-tree-id4856 . -2706) (undo-tree-id4857 . -2706) (undo-tree-id4858 . -2706) (undo-tree-id4859 . -2706) (undo-tree-id4860 . -2706) (undo-tree-id4861 . -2706) (undo-tree-id4862 . -2706) (undo-tree-id4863 . -2706) (undo-tree-id4864 . -2706) (undo-tree-id4865 . -2706) (undo-tree-id4866 . -2706) (undo-tree-id4867 . -2706) (undo-tree-id4868 . -2705) (undo-tree-id4869 . -2705) (undo-tree-id4870 . -2706) (undo-tree-id4871 . -2706) (undo-tree-id4872 . -2706) (undo-tree-id4873 . -2706) (undo-tree-id4874 . -2706) (undo-tree-id4875 . -2706) (undo-tree-id4876 . -2706) (undo-tree-id4877 . -2706) (undo-tree-id4878 . -2706) (undo-tree-id4879 . -2706) (undo-tree-id4880 . -2706) (undo-tree-id4881 . -2706) (undo-tree-id4882 . -2706) (undo-tree-id4883 . -2706) (undo-tree-id4884 . -2706) (undo-tree-id4885 . -2706) (undo-tree-id4886 . -2706) (undo-tree-id4887 . -2706) (undo-tree-id4888 . -2706) (undo-tree-id4889 . -2706) (undo-tree-id4890 . -2706) (undo-tree-id4891 . -2706) (undo-tree-id4892 . -2706) (undo-tree-id4893 . -2706) (undo-tree-id4894 . -2706) (undo-tree-id4895 . -2706) (undo-tree-id4896 . -2706) (undo-tree-id4897 . -2706) (undo-tree-id4898 . -2706) (undo-tree-id4899 . -2706) (undo-tree-id4900 . -3662) (undo-tree-id4901 . -2706) (undo-tree-id4902 . -2706) (undo-tree-id4903 . -2706) (undo-tree-id4904 . -2706) (undo-tree-id4905 . -2824) (undo-tree-id4906 . -2824) (undo-tree-id4907 . -2923) (undo-tree-id4908 . -2923) (undo-tree-id4909 . -2923) (undo-tree-id4910 . -2923) (undo-tree-id4911 . -3050) (undo-tree-id4912 . -3050) (undo-tree-id4913 . -3050) (undo-tree-id4914 . -3050) (undo-tree-id4915 . -3670) (undo-tree-id4916 . -3670) (undo-tree-id4917 . -3710) (undo-tree-id4918 . -3710) (undo-tree-id4919 . -3710) (undo-tree-id4920 . -3710) (undo-tree-id4921 . -3758) (undo-tree-id4922 . -3758) (undo-tree-id4923 . -3758) (undo-tree-id4924 . -3758) (undo-tree-id4925 . -3835) (undo-tree-id4926 . -3835) (undo-tree-id4927 . -3835) (undo-tree-id4928 . -3835) (undo-tree-id4929 . -4055) (undo-tree-id4930 . -4055) (undo-tree-id4931 . -4080) (undo-tree-id4932 . -4080) (undo-tree-id4933 . -3710) (undo-tree-id4934 . -3710) (undo-tree-id4935 . -3710) (undo-tree-id4936 . -3710) (undo-tree-id4937 . -3710) (undo-tree-id4938 . -3710) (undo-tree-id4939 . -3710) (undo-tree-id4940 . -3710) (undo-tree-id4941 . -3710) (undo-tree-id4942 . -3710) (undo-tree-id4943 . -3710) (undo-tree-id4944 . -3182) (undo-tree-id4945 . -3710) (undo-tree-id4946 . -3710) (undo-tree-id4947 . -3182) (undo-tree-id4948 . -3710) (undo-tree-id4949 . -3710) (undo-tree-id4950 . -3710) (undo-tree-id4951 . -3710)) nil (25759 41399 848060 692000) 0 nil])
nil
([nil nil ((1 . 5849) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate  second wave by applying another sinusoidal function to the time array
    # Similar to first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise  by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    plt.plot(series, \".-\")
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")
    plt.grid(True)
    if x_label:
        plt.xlabel(x_label, fontsize=16)
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)
    plt.hlines(0, 0, 100, linewidth=1)
    plt.axis([0, n_steps + 1, -1, 1])
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_series(series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True):
    # Plot the series
    plt.plot(series, \".-\")
    
    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")
    
    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")
    
    # Enable grid lines on the plot
    plt.grid(True)
    
    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)
    
    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)
    
    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)
    
    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])
    
    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")
###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential(
    [keras.layers.Flatten(input_shape=[50, 1]), keras.layers.Dense(1)]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))


model.evaluate(X_valid, y_valid)


###############################################################################
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()
" 1197 1201 (fontified t) 1201 1207 (fontified t face font-lock-variable-name-face) 1207 1223 (fontified t) 1223 1224 (fontified t face (rainbow-delimiters-depth-1-face)) 1224 1225 (fontified t face (rainbow-delimiters-depth-2-face)) 1225 1240 (fontified t) 1240 1241 (fontified t face (rainbow-delimiters-depth-2-face)) 1241 1244 (fontified t) 1244 1245 (fontified t face (rainbow-delimiters-depth-2-face)) 1245 1260 (fontified t) 1260 1261 (fontified t face (rainbow-delimiters-depth-2-face)) 1261 1262 (fontified t face (rainbow-delimiters-depth-1-face)) 1262 1264 (fontified t) 1264 1266 (fontified t face font-lock-comment-delimiter-face) 1266 1275 (fontified t face font-lock-comment-face) 1275 1280 (fontified t) 1280 1282 (fontified t face font-lock-comment-delimiter-face) 1282 1374 (fontified t face font-lock-comment-face) 1374 1378 (fontified t) 1378 1384 (fontified t face font-lock-variable-name-face) 1384 1394 (fontified t) 1394 1395 (fontified t face (rainbow-delimiters-depth-1-face)) 1395 1409 (fontified t) 1409 1410 (fontified t face (rainbow-delimiters-depth-2-face)) 1410 1429 (fontified t) 1429 1430 (fontified t face (rainbow-delimiters-depth-2-face)) 1430 1436 (fontified t) 1436 1437 (fontified t face (rainbow-delimiters-depth-1-face)) 1437 1439 (fontified t) 1439 1441 (fontified t face font-lock-comment-delimiter-face) 1441 1449 (fontified t face font-lock-comment-face) 1449 1454 (fontified t) 1454 1456 (fontified t face font-lock-comment-delimiter-face) 1456 1524 (fontified t face font-lock-comment-face) 1524 1528 (fontified t) 1528 1530 (fontified t face font-lock-comment-delimiter-face) 1530 1570 (fontified t face font-lock-comment-face) 1570 1574 (fontified t) 1574 1580 (fontified t face font-lock-keyword-face) 1580 1587 (fontified t) 1587 1588 (fontified t face (rainbow-delimiters-depth-1-face)) 1588 1603 (fontified t) 1603 1604 (fontified t face (rainbow-delimiters-depth-1-face)) 1604 1611 (fontified t) 1611 1612 (fontified t face (rainbow-delimiters-depth-1-face)) 1612 1622 (fontified t) 1622 1623 (fontified t face (rainbow-delimiters-depth-1-face)) 1623 1626 (fontified t) 1626 1629 (fontified t face font-lock-keyword-face) 1629 1630 (fontified t) 1630 1650 (fontified t face font-lock-function-name-face) 1650 1651 (fontified t face (rainbow-delimiters-depth-1-face)) 1651 1670 (fontified t) 1670 1671 (fontified t face (rainbow-delimiters-depth-1-face)) 1671 1677 (fontified t) 1677 1679 (fontified t face font-lock-comment-delimiter-face) 1679 1697 (fontified t face font-lock-comment-face) 1697 1730 (face font-lock-comment-face fontified t) 1730 1734 (fontified t) 1734 1739 (fontified t face font-lock-variable-name-face) 1739 1741 (fontified t) 1741 1746 (fontified t face font-lock-variable-name-face) 1746 1748 (fontified t) 1748 1756 (fontified t face font-lock-variable-name-face) 1756 1758 (fontified t) 1758 1766 (fontified t face font-lock-variable-name-face) 1766 1783 (fontified t) 1783 1784 (fontified t face (rainbow-delimiters-depth-1-face)) 1784 1800 (fontified t) 1800 1801 (fontified t face (rainbow-delimiters-depth-1-face)) 1801 1807 (fontified t) 1807 1809 (fontified t face font-lock-comment-delimiter-face) 1809 1856 (fontified t face font-lock-comment-face) 1856 1860 (fontified t) 1860 1864 (fontified t face font-lock-variable-name-face) 1864 1878 (fontified t) 1878 1879 (fontified t face (rainbow-delimiters-depth-1-face)) 1879 1892 (fontified t) 1892 1893 (fontified t face (rainbow-delimiters-depth-1-face)) 1893 1894 (fontified t) 1894 1895 (fontified t) 1895 1899 (fontified t) 1899 1901 (fontified t face font-lock-comment-delimiter-face) 1901 1916 (fontified t face font-lock-comment-face) 1916 1977 (fontified t face font-lock-comment-face) 1977 1981 (fontified t) 1981 1983 (fontified t face font-lock-comment-delimiter-face) 1983 2043 (fontified t face font-lock-comment-face) 2043 2047 (fontified t) 2047 2053 (fontified t face font-lock-variable-name-face) 2053 2068 (fontified t) 2068 2069 (fontified t face (rainbow-delimiters-depth-1-face)) 2069 2070 (fontified t face (rainbow-delimiters-depth-2-face)) 2070 2085 (fontified t) 2085 2086 (fontified t face (rainbow-delimiters-depth-2-face)) 2086 2089 (fontified t) 2089 2090 (fontified t face (rainbow-delimiters-depth-2-face)) 2090 2105 (fontified t) 2105 2106 (fontified t face (rainbow-delimiters-depth-2-face)) 2106 2107 (fontified t face (rainbow-delimiters-depth-1-face)) 2107 2109 (fontified t) 2109 2111 (fontified t face font-lock-comment-delimiter-face) 2111 2118 (fontified t face font-lock-comment-face) 2118 2119 (fontified t) 2119 2123 (fontified t) 2123 2125 (fontified t face font-lock-comment-delimiter-face) 2125 2205 (fontified t face font-lock-comment-face) 2205 2209 (fontified t) 2209 2211 (fontified t face font-lock-comment-delimiter-face) 2211 2290 (fontified t face font-lock-comment-face) 2290 2294 (fontified t) 2294 2300 (fontified t face font-lock-variable-name-face) 2300 2316 (fontified t) 2316 2317 (fontified t face (rainbow-delimiters-depth-1-face)) 2317 2318 (fontified t face (rainbow-delimiters-depth-2-face)) 2318 2333 (fontified t) 2333 2334 (fontified t face (rainbow-delimiters-depth-2-face)) 2334 2337 (fontified t) 2337 2338 (fontified t face (rainbow-delimiters-depth-2-face)) 2338 2353 (fontified t) 2353 2354 (fontified t face (rainbow-delimiters-depth-2-face)) 2354 2355 (fontified t face (rainbow-delimiters-depth-1-face)) 2355 2357 (fontified t) 2357 2359 (fontified t face font-lock-comment-delimiter-face) 2359 2368 (fontified t face font-lock-comment-face) 2368 2369 (fontified t) 2369 2373 (fontified t) 2373 2375 (fontified t face font-lock-comment-delimiter-face) 2375 2388 (fontified t face font-lock-comment-face) 2388 2396 (fontified t face font-lock-comment-face) 2396 2454 (fontified t face font-lock-comment-face) 2454 2458 (fontified t) 2458 2464 (fontified t face font-lock-variable-name-face) 2464 2474 (fontified t) 2474 2475 (fontified t face (rainbow-delimiters-depth-1-face)) 2475 2489 (fontified t) 2489 2490 (fontified t face (rainbow-delimiters-depth-2-face)) 2490 2509 (fontified t) 2509 2510 (fontified t face (rainbow-delimiters-depth-2-face)) 2510 2516 (fontified t) 2516 2517 (fontified t face (rainbow-delimiters-depth-1-face)) 2517 2519 (fontified t) 2519 2521 (fontified t face font-lock-comment-delimiter-face) 2521 2529 (fontified t face font-lock-comment-face) 2529 2534 (fontified t) 2534 2536 (fontified t face font-lock-comment-delimiter-face) 2536 2604 (fontified t face font-lock-comment-face) 2604 2608 (fontified t) 2608 2610 (fontified t face font-lock-comment-delimiter-face) 2610 2650 (fontified t face font-lock-comment-face) 2650 2654 (fontified t) 2654 2660 (fontified t face font-lock-keyword-face) 2660 2667 (fontified t) 2667 2668 (fontified t face (rainbow-delimiters-depth-1-face)) 2668 2683 (fontified t) 2683 2684 (fontified t face (rainbow-delimiters-depth-1-face)) 2684 2688 (fontified t) 2688 2691 (fontified t) 2691 2692 (fontified t face (rainbow-delimiters-depth-1-face)) 2692 2702 (fontified t) 2702 2703 (fontified t face (rainbow-delimiters-depth-1-face)) 2703 2704 (fontified t) 2704 2706 (fontified t) 2706 2709 (fontified t face font-lock-keyword-face) 2709 2710 (fontified t) 2710 2721 (fontified t face font-lock-function-name-face) 2721 2722 (fontified t face (rainbow-delimiters-depth-1-face)) 2722 2737 (fontified t) 2737 2741 (fontified t face font-lock-constant-face) 2741 2750 (fontified t) 2750 2754 (fontified t face font-lock-constant-face) 2754 2764 (fontified t) 2764 2769 (fontified t face font-lock-string-face) 2769 2777 (fontified t) 2777 2779 (fontified t) 2779 2787 (fontified t face font-lock-string-face) 2787 2796 (fontified t) 2796 2800 (fontified t face font-lock-constant-face) 2800 2801 (fontified t) 2801 2802 (fontified t face (rainbow-delimiters-depth-1-face)) 2802 2816 (fontified t) 2816 2817 (fontified t face (rainbow-delimiters-depth-1-face)) 2817 2825 (fontified t) 2825 2829 (fontified t face font-lock-string-face) 2829 2830 (fontified t face (rainbow-delimiters-depth-1-face)) 2830 2835 (fontified t) 2835 2837 (fontified t face font-lock-keyword-face) 2837 2840 (fontified t) 2840 2842 (fontified t face font-lock-keyword-face) 2842 2843 (fontified t) 2843 2846 (fontified t face font-lock-keyword-face) 2846 2847 (fontified t) 2847 2851 (fontified t face font-lock-constant-face) 2851 2869 (fontified t) 2869 2870 (fontified t face (rainbow-delimiters-depth-1-face)) 2870 2882 (fontified t) 2882 2886 (fontified t face font-lock-string-face) 2886 2894 (fontified t) 2894 2902 (fontified t face font-lock-string-face) 2902 2903 (fontified t face (rainbow-delimiters-depth-1-face)) 2903 2908 (fontified t) 2908 2910 (fontified t face font-lock-keyword-face) 2910 2918 (fontified t) 2918 2920 (fontified t face font-lock-keyword-face) 2920 2921 (fontified t) 2921 2924 (fontified t face font-lock-keyword-face) 2924 2925 (fontified t) 2925 2929 (fontified t face font-lock-constant-face) 2929 2947 (fontified t) 2947 2948 (fontified t face (rainbow-delimiters-depth-1-face)) 2948 2954 (fontified t) 2954 2965 (fontified t) 2965 2969 (face font-lock-string-face fontified t) 2969 2992 (fontified t) 2992 3004 (face font-lock-string-face fontified t) 3004 3005 (face (rainbow-delimiters-depth-1-face) fontified t) 3005 3006 (fontified t) 3006 3018 (fontified t) 3018 3019 (fontified t face (rainbow-delimiters-depth-1-face)) 3019 3023 (fontified t face font-lock-constant-face) 3023 3024 (fontified t face (rainbow-delimiters-depth-1-face)) 3024 3029 (fontified t) 3029 3031 (fontified t face font-lock-keyword-face) 3031 3059 (fontified t) 3059 3060 (fontified t face (rainbow-delimiters-depth-1-face)) 3060 3080 (fontified t) 3080 3081 (fontified t face (rainbow-delimiters-depth-1-face)) 3081 3086 (fontified t) 3086 3088 (fontified t face font-lock-keyword-face) 3088 3116 (fontified t) 3116 3117 (fontified t face (rainbow-delimiters-depth-1-face)) 3117 3149 (fontified t) 3149 3150 (fontified t face (rainbow-delimiters-depth-1-face)) 3150 3165 (fontified t) 3165 3166 (fontified t face (rainbow-delimiters-depth-1-face)) 3166 3188 (fontified t) 3188 3189 (fontified t face (rainbow-delimiters-depth-1-face)) 3189 3202 (fontified t) 3202 3203 (fontified t face (rainbow-delimiters-depth-1-face)) 3203 3204 (fontified t face (rainbow-delimiters-depth-2-face)) 3204 3225 (fontified t) 3225 3226 (fontified t face (rainbow-delimiters-depth-2-face)) 3226 3227 (fontified t face (rainbow-delimiters-depth-1-face)) 3227 3232 (fontified t) 3232 3234 (fontified t face font-lock-keyword-face) 3234 3242 (fontified t) 3242 3245 (fontified t face font-lock-keyword-face) 3245 3246 (fontified t) 3246 3247 (fontified t face (rainbow-delimiters-depth-1-face)) 3247 3249 (fontified t) 3249 3251 (fontified t face font-lock-keyword-face) 3251 3258 (fontified t) 3258 3259 (fontified t face (rainbow-delimiters-depth-1-face)) 3259 3279 (fontified t) 3279 3280 (fontified t face (rainbow-delimiters-depth-1-face)) 3280 3297 (fontified t) 3297 3301 (fontified t face font-lock-string-face) 3301 3309 (fontified t face font-lock-string-face) 3309 3310 (fontified t face (rainbow-delimiters-depth-1-face)) 3310 3311 (fontified t) 3311 3313 (fontified t) 3313 3316 (fontified t face font-lock-keyword-face) 3316 3317 (fontified t) 3317 3328 (fontified t face font-lock-function-name-face) 3328 3329 (fontified t face (rainbow-delimiters-depth-1-face)) 3329 3339 (fontified t) 3339 3343 (fontified t face font-lock-constant-face) 3343 3352 (fontified t) 3352 3356 (fontified t face font-lock-constant-face) 3356 3366 (fontified t) 3366 3371 (fontified t face font-lock-string-face) 3371 3381 (fontified t) 3381 3389 (fontified t face font-lock-string-face) 3389 3398 (fontified t) 3398 3402 (fontified t face font-lock-constant-face) 3402 3403 (fontified t face (rainbow-delimiters-depth-1-face)) 3403 3409 (fontified t) 3409 3411 (fontified t face font-lock-comment-delimiter-face) 3411 3427 (fontified t face font-lock-comment-face) 3427 3439 (fontified t) 3439 3440 (fontified t face (rainbow-delimiters-depth-1-face)) 3440 3448 (fontified t) 3448 3452 (fontified t face font-lock-string-face) 3452 3453 (fontified t face (rainbow-delimiters-depth-1-face)) 3453 3463 (fontified t) 3463 3465 (fontified t face font-lock-comment-delimiter-face) 3465 3500 (fontified t face font-lock-comment-face) 3500 3504 (fontified t) 3504 3506 (fontified t face font-lock-keyword-face) 3506 3509 (fontified t) 3509 3511 (fontified t face font-lock-keyword-face) 3511 3512 (fontified t) 3512 3515 (fontified t face font-lock-keyword-face) 3515 3516 (fontified t) 3516 3520 (fontified t face font-lock-constant-face) 3520 3538 (fontified t) 3538 3539 (fontified t face (rainbow-delimiters-depth-1-face)) 3539 3551 (fontified t) 3551 3555 (fontified t face font-lock-string-face) 3555 3563 (fontified t) 3563 3571 (fontified t face font-lock-string-face) 3571 3572 (fontified t face (rainbow-delimiters-depth-1-face)) 3572 3582 (fontified t) 3582 3584 (fontified t face font-lock-comment-delimiter-face) 3584 3622 (fontified t face font-lock-comment-face) 3622 3626 (fontified t) 3626 3628 (fontified t face font-lock-keyword-face) 3628 3636 (fontified t) 3636 3638 (fontified t face font-lock-keyword-face) 3638 3639 (fontified t) 3639 3642 (fontified t face font-lock-keyword-face) 3642 3643 (fontified t) 3643 3647 (fontified t face font-lock-constant-face) 3647 3665 (fontified t) 3665 3666 (fontified t face (rainbow-delimiters-depth-1-face)) 3666 3683 (fontified t) 3683 3687 (fontified t face font-lock-string-face) 3687 3710 (fontified t) 3710 3722 (fontified t face font-lock-string-face) 3722 3723 (fontified t face (rainbow-delimiters-depth-1-face)) 3723 3733 (fontified t) 3733 3735 (fontified t face font-lock-comment-delimiter-face) 3735 3765 (fontified t face font-lock-comment-face) 3765 3777 (fontified t) 3777 3778 (fontified t face (rainbow-delimiters-depth-1-face)) 3778 3782 (fontified t face font-lock-constant-face) 3782 3783 (fontified t face (rainbow-delimiters-depth-1-face)) 3783 3793 (fontified t) 3793 3795 (fontified t face font-lock-comment-delimiter-face) 3795 3813 (fontified t face font-lock-comment-face) 3813 3828 (fontified t face font-lock-comment-face) 3828 3832 (fontified t) 3832 3834 (fontified t face font-lock-keyword-face) 3834 3862 (fontified t) 3862 3863 (fontified t face (rainbow-delimiters-depth-1-face)) 3863 3883 (fontified t) 3883 3884 (fontified t face (rainbow-delimiters-depth-1-face)) 3884 3894 (fontified t) 3894 3896 (fontified t face font-lock-comment-delimiter-face) 3896 3929 (fontified t face font-lock-comment-face) 3929 3933 (fontified t) 3933 3935 (fontified t face font-lock-keyword-face) 3935 3963 (fontified t) 3963 3964 (fontified t face (rainbow-delimiters-depth-1-face)) 3964 3996 (fontified t) 3996 3997 (fontified t face (rainbow-delimiters-depth-1-face)) 3997 4007 (fontified t) 4007 4009 (fontified t face font-lock-comment-delimiter-face) 4009 4038 (fontified t face font-lock-comment-face) 4038 4052 (fontified t) 4052 4053 (fontified t face (rainbow-delimiters-depth-1-face)) 4053 4075 (fontified t) 4075 4076 (fontified t face (rainbow-delimiters-depth-1-face)) 4076 4086 (fontified t) 4086 4088 (fontified t face font-lock-comment-delimiter-face) 4088 4121 (fontified t face font-lock-comment-face) 4121 4133 (fontified t) 4133 4134 (fontified t face (rainbow-delimiters-depth-1-face)) 4134 4135 (fontified t face (rainbow-delimiters-depth-2-face)) 4135 4156 (fontified t) 4156 4157 (fontified t face (rainbow-delimiters-depth-2-face)) 4157 4158 (fontified t face (rainbow-delimiters-depth-1-face)) 4158 4168 (fontified t) 4168 4170 (fontified t face font-lock-comment-delimiter-face) 4170 4236 (fontified t face font-lock-comment-face) 4236 4240 (fontified t) 4240 4242 (fontified t face font-lock-keyword-face) 4242 4250 (fontified t) 4250 4253 (fontified t face font-lock-keyword-face) 4253 4254 (fontified t) 4254 4255 (fontified t face (rainbow-delimiters-depth-1-face)) 4255 4257 (fontified t) 4257 4259 (fontified t face font-lock-keyword-face) 4259 4266 (fontified t) 4266 4267 (fontified t face (rainbow-delimiters-depth-1-face)) 4267 4287 (fontified t) 4287 4288 (fontified t face (rainbow-delimiters-depth-1-face)) 4288 4305 (fontified t) 4305 4317 (fontified t face font-lock-string-face) 4317 4318 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 4318 4319 (fontified t) 4319 4398 (fontified t face font-lock-comment-delimiter-face) 4398 4399 (fontified t face font-lock-comment-face) 4399 4406 (fontified t face font-lock-variable-name-face) 4406 4409 (fontified t) 4409 4412 (fontified t) 4412 4418 (fontified t face font-lock-variable-name-face) 4418 4441 (fontified t) 4441 4442 (fontified t face (rainbow-delimiters-depth-1-face)) 4442 4460 (fontified t) 4460 4461 (fontified t face (rainbow-delimiters-depth-1-face)) 4461 4462 (fontified t) 4462 4469 (fontified t face font-lock-variable-name-face) 4469 4471 (fontified t) 4471 4478 (fontified t face font-lock-variable-name-face) 4478 4487 (fontified t) 4487 4488 (fontified t face (rainbow-delimiters-depth-1-face)) 4488 4503 (fontified t) 4503 4504 (fontified t face (rainbow-delimiters-depth-1-face)) 4504 4512 (fontified t) 4512 4513 (fontified t face (rainbow-delimiters-depth-1-face)) 4513 4522 (fontified t) 4522 4523 (fontified t face (rainbow-delimiters-depth-1-face)) 4523 4524 (fontified t) 4524 4531 (fontified t face font-lock-variable-name-face) 4531 4533 (fontified t) 4533 4540 (fontified t face font-lock-variable-name-face) 4540 4549 (fontified t) 4549 4550 (fontified t face (rainbow-delimiters-depth-1-face)) 4550 4569 (fontified t) 4569 4570 (fontified t face (rainbow-delimiters-depth-1-face)) 4570 4578 (fontified t) 4578 4579 (fontified t face (rainbow-delimiters-depth-1-face)) 4579 4592 (fontified t) 4592 4593 (fontified t face (rainbow-delimiters-depth-1-face)) 4593 4594 (fontified t) 4594 4600 (fontified t face font-lock-variable-name-face) 4600 4602 (fontified t) 4602 4608 (fontified t face font-lock-variable-name-face) 4608 4615 (fontified t) 4615 4617 (fontified t) 4617 4618 (fontified t face (rainbow-delimiters-depth-1-face)) 4618 4633 (fontified t) 4633 4634 (fontified t face (rainbow-delimiters-depth-1-face)) 4634 4642 (fontified t) 4642 4643 (fontified t face (rainbow-delimiters-depth-1-face)) 4643 4652 (fontified t) 4652 4653 (fontified t face (rainbow-delimiters-depth-1-face)) 4653 4654 (fontified t) 4654 4659 (fontified t face font-lock-keyword-face) 4659 4660 (fontified t face (rainbow-delimiters-depth-1-face)) 4660 4688 (fontified t) 4688 4689 (fontified t face (rainbow-delimiters-depth-1-face)) 4689 4691 (fontified t) 4691 4770 (fontified t face font-lock-comment-delimiter-face) 4770 4771 (fontified t face font-lock-comment-face) 4771 4774 (fontified t face font-lock-variable-name-face) 4774 4776 (fontified t) 4776 4780 (fontified t face font-lock-variable-name-face) 4780 4795 (fontified t) 4795 4796 (fontified t face (rainbow-delimiters-depth-1-face)) 4796 4819 (fontified t) 4819 4821 (fontified t) 4821 4825 (face font-lock-constant-face fontified t) 4825 4835 (fontified t) 4835 4836 (face (rainbow-delimiters-depth-2-face) fontified t) 4836 4841 (fontified t) 4841 4842 (face (rainbow-delimiters-depth-2-face) fontified t) 4842 4843 (face (rainbow-delimiters-depth-1-face) fontified t) 4843 4844 (fontified t) 4844 4847 (fontified t face font-lock-keyword-face) 4847 4852 (fontified t) 4852 4854 (fontified t face font-lock-keyword-face) 4854 4855 (fontified t) 4855 4860 (fontified t face font-lock-builtin-face) 4860 4861 (fontified t face (rainbow-delimiters-depth-1-face)) 4861 4862 (fontified t) 4862 4863 (fontified t face (rainbow-delimiters-depth-1-face)) 4863 4876 (fontified t) 4876 4877 (fontified t face (rainbow-delimiters-depth-1-face)) 4877 4881 (fontified t) 4881 4882 (fontified t face (rainbow-delimiters-depth-2-face)) 4882 4885 (fontified t) 4885 4886 (fontified t face (rainbow-delimiters-depth-2-face)) 4886 4887 (fontified t face (rainbow-delimiters-depth-1-face)) 4887 4903 (fontified t) 4903 4904 (fontified t face (rainbow-delimiters-depth-1-face)) 4904 4920 (fontified t) 4920 4921 (fontified t face (rainbow-delimiters-depth-2-face)) 4921 4930 (fontified t) 4930 4931 (fontified t face (rainbow-delimiters-depth-2-face)) 4931 4948 (fontified t) 4948 4949 (fontified t face (rainbow-delimiters-depth-2-face)) 4949 4955 (fontified t) 4955 4956 (fontified t face (rainbow-delimiters-depth-2-face)) 4956 4974 (fontified t) 4974 4975 (fontified t face (rainbow-delimiters-depth-2-face)) 4975 4983 (fontified t face font-lock-string-face) 4983 4984 (fontified t) 4984 4986 (fontified t face font-lock-keyword-face) 4986 4996 (fontified t) 4996 5000 (fontified t face font-lock-keyword-face) 5000 5001 (fontified t) 5001 5005 (fontified t face font-lock-constant-face) 5005 5006 (fontified t face (rainbow-delimiters-depth-2-face)) 5006 5023 (fontified t) 5023 5024 (fontified t face (rainbow-delimiters-depth-2-face)) 5024 5032 (fontified t) 5032 5033 (fontified t face (rainbow-delimiters-depth-2-face)) 5033 5039 (fontified t) 5039 5040 (fontified t face (rainbow-delimiters-depth-1-face)) 5040 5049 (fontified t) 5049 5050 (fontified t face (rainbow-delimiters-depth-1-face)) 5050 5051 (fontified t face (rainbow-delimiters-depth-1-face)) 5051 5053 (fontified t) 5053 5059 (fontified t face font-lock-variable-name-face) 5059 5069 (fontified t) 5069 5070 (fontified t face (rainbow-delimiters-depth-1-face)) 5070 5075 (fontified t) 5075 5076 (fontified t face (rainbow-delimiters-depth-1-face)) 5076 5084 (fontified t) 5084 5085 (fontified t face (rainbow-delimiters-depth-1-face)) 5085 5116 (fontified t) 5116 5117 (fontified t face (rainbow-delimiters-depth-2-face)) 5117 5132 (fontified t) 5132 5133 (fontified t face (rainbow-delimiters-depth-2-face)) 5133 5134 (fontified t face (rainbow-delimiters-depth-1-face)) 5134 5136 (fontified t) 5136 5154 (fontified t face font-lock-comment-delimiter-face) 5154 5215 (fontified t face font-lock-comment-delimiter-face) 5215 5216 (fontified t face font-lock-comment-face) 5216 5227 (fontified t) 5227 5228 (fontified t face (rainbow-delimiters-depth-1-face)) 5228 5235 (fontified t) 5235 5236 (fontified t face (rainbow-delimiters-depth-2-face)) 5236 5243 (fontified t) 5243 5244 (fontified t face (rainbow-delimiters-depth-2-face)) 5244 5253 (fontified t) 5253 5254 (fontified t face (rainbow-delimiters-depth-2-face)) 5254 5258 (fontified t) 5258 5259 (fontified t face (rainbow-delimiters-depth-2-face)) 5259 5267 (fontified t) 5267 5268 (fontified t face (rainbow-delimiters-depth-2-face)) 5268 5272 (fontified t) 5272 5273 (fontified t face (rainbow-delimiters-depth-2-face)) 5273 5274 (fontified t face (rainbow-delimiters-depth-1-face)) 5274 5283 (fontified t) 5283 5284 (fontified t face (rainbow-delimiters-depth-1-face)) 5284 5285 (fontified t face (rainbow-delimiters-depth-1-face)) 5285 5301 (fontified t) 5301 5302 (fontified t face (rainbow-delimiters-depth-1-face)) 5302 5304 (fontified t) 5304 5305 (fontified t face (rainbow-delimiters-depth-1-face)) 5305 5324 (fontified t) 5324 5325 (fontified t face (rainbow-delimiters-depth-1-face)) 5325 5327 (fontified t) 5327 5328 (fontified t face (rainbow-delimiters-depth-1-face)) 5328 5330 (fontified t) 5330 5335 (fontified t face font-lock-variable-name-face) 5335 5344 (fontified t) 5344 5361 (fontified t) 5361 5362 (face (rainbow-delimiters-depth-1-face) fontified t) 5362 5363 (fontified t)) . 1) (undo-tree-id2625 . 3131) (undo-tree-id2626 . -3313) (undo-tree-id2627 . -4317) (undo-tree-id2628 . -3313) (undo-tree-id2629 . -3313) (undo-tree-id2630 . 1554) (undo-tree-id2631 . -2392) (undo-tree-id2632 . -2392) (undo-tree-id2633 . -2392) (undo-tree-id2634 . -2392) (undo-tree-id2635 . -2392) (undo-tree-id2636 . -2392) (undo-tree-id2637 . -2392) (undo-tree-id2638 . -2392) (undo-tree-id2639 . -2392) (undo-tree-id2640 . -2392) (undo-tree-id2641 . -2392) (undo-tree-id2642 . -2392) (undo-tree-id2643 . -2392) (undo-tree-id2644 . -2392) (undo-tree-id2645 . -2392) (undo-tree-id2646 . -2392) (undo-tree-id2647 . -2392) (undo-tree-id2648 . -2392) (undo-tree-id2649 . -2392) (undo-tree-id2650 . -2392) (undo-tree-id2651 . -2392) (undo-tree-id2652 . -2392) (undo-tree-id2653 . -2392) (undo-tree-id2654 . -3269) (undo-tree-id2655 . -3269) (undo-tree-id2656 . -3313) (undo-tree-id2657 . -3313) (undo-tree-id2658 . -3313) (undo-tree-id2659 . -3313) (undo-tree-id2660 . -3313) (undo-tree-id2661 . -3313) (undo-tree-id2662 . -3313) (undo-tree-id2663 . -3313) (undo-tree-id2664 . -3313) (undo-tree-id2665 . -3313) (undo-tree-id2666 . -3313) (undo-tree-id2667 . -3313) (undo-tree-id2668 . -2477) (undo-tree-id2669 . -2477) (undo-tree-id2670 . -2529) (undo-tree-id2671 . -2553) (undo-tree-id2672 . -2627) (undo-tree-id2673 . -2673) (undo-tree-id2674 . -2704) (undo-tree-id2675 . -2704) (undo-tree-id2676 . -2704) (undo-tree-id2677 . -2704) (undo-tree-id2678 . -2704) (undo-tree-id2679 . -2704) (undo-tree-id2680 . -2704) (undo-tree-id2681 . -2704) (undo-tree-id2682 . -2704) (undo-tree-id2683 . -2704) (undo-tree-id2684 . -2704) (undo-tree-id2685 . -2704) (undo-tree-id2686 . -2704) (undo-tree-id2687 . -2704) (undo-tree-id2688 . -1856) (undo-tree-id2689 . -2704) (undo-tree-id2690 . -2704) (undo-tree-id2691 . -2704) (undo-tree-id2692 . -2704) (undo-tree-id2693 . -2704) (undo-tree-id2694 . -2704) (undo-tree-id2695 . -2650) (undo-tree-id2696 . -2604) (undo-tree-id2697 . -2530) (undo-tree-id2698 . -2534) (undo-tree-id2699 . -2534) (undo-tree-id2700 . -2534) (undo-tree-id2701 . -2534) (undo-tree-id2702 . -2534) (undo-tree-id2703 . -2534) (undo-tree-id2704 . -2542) (undo-tree-id2705 . -2546) (undo-tree-id2706 . -2553) (undo-tree-id2707 . -2556) (undo-tree-id2708 . -2561) (undo-tree-id2709 . -2564) (undo-tree-id2710 . -2564) (undo-tree-id2711 . -2564) (undo-tree-id2712 . -2564) (undo-tree-id2713 . -2564) (undo-tree-id2714 . -2564) (undo-tree-id2715 . -2575) (undo-tree-id2716 . -2585) (undo-tree-id2717 . -2591) (undo-tree-id2718 . -2594) (undo-tree-id2719 . -2594) (undo-tree-id2720 . -2594) (undo-tree-id2721 . -2594) (undo-tree-id2722 . -2594) (undo-tree-id2723 . -2594) (undo-tree-id2724 . -2595) (undo-tree-id2725 . -2602) (undo-tree-id2726 . -2608) (undo-tree-id2727 . -2612) (undo-tree-id2728 . -2612) (undo-tree-id2729 . -2612) (undo-tree-id2730 . -2612) (undo-tree-id2731 . -2612) (undo-tree-id2732 . -2612) (undo-tree-id2733 . -2620) (undo-tree-id2734 . -2623) (undo-tree-id2735 . -2626) (undo-tree-id2736 . -2630) (undo-tree-id2737 . -2638) (undo-tree-id2738 . -2643) (undo-tree-id2739 . -2648) (undo-tree-id2740 . -2659) (undo-tree-id2741 . -2666) (undo-tree-id2742 . -2671) (undo-tree-id2743 . -2671) (undo-tree-id2744 . -2671) (undo-tree-id2745 . -2671) (undo-tree-id2746 . -2671) (undo-tree-id2747 . -2671) (undo-tree-id2748 . -2674) (undo-tree-id2749 . -2675) (undo-tree-id2750 . -2682) (undo-tree-id2751 . -2682) (undo-tree-id2752 . -2682) (undo-tree-id2753 . -2684) (undo-tree-id2754 . -2690) (undo-tree-id2755 . -2691) (undo-tree-id2756 . -2693) (undo-tree-id2757 . -2694) (undo-tree-id2758 . -2701) (undo-tree-id2759 . -2702) (undo-tree-id2760 . -2704) (undo-tree-id2761 . -2705) (undo-tree-id2762 . -2705) (undo-tree-id2763 . -2705) (undo-tree-id2764 . -2705) (undo-tree-id2765 . -2705) (undo-tree-id2766 . -2705) (undo-tree-id2767 . -2705) (undo-tree-id2768 . -2705) (undo-tree-id2769 . -1856) (undo-tree-id2770 . -2705) (undo-tree-id2771 . -2705) (undo-tree-id2772 . -2705) (undo-tree-id2773 . -2705) (undo-tree-id2774 . -2705) (undo-tree-id2775 . -2705) (undo-tree-id2776 . -2705) (undo-tree-id2777 . -2705) (undo-tree-id2778 . -2705) (undo-tree-id2779 . -2705) (undo-tree-id2780 . -2704) (undo-tree-id2781 . -2650) (undo-tree-id2782 . -2654) (undo-tree-id2783 . -2654) (undo-tree-id2784 . -2654) (undo-tree-id2785 . -2654) (undo-tree-id2786 . -2654) (undo-tree-id2787 . -2654) (undo-tree-id2788 . -2608) (undo-tree-id2789 . -2608) (undo-tree-id2790 . -2608) (undo-tree-id2791 . -2608) (undo-tree-id2792 . -2608) (undo-tree-id2793 . -2608) (undo-tree-id2794 . -2534) (undo-tree-id2795 . -2529) (undo-tree-id2796 . -2458) (undo-tree-id2797 . -2373) (undo-tree-id2798 . -2368) (undo-tree-id2799 . -2294) (undo-tree-id2800 . -2209) (undo-tree-id2801 . -2123) (undo-tree-id2802 . -2118) (undo-tree-id2803 . -2047) (undo-tree-id2804 . -1981) (undo-tree-id2805 . -1899) (undo-tree-id2806 . -1894) (undo-tree-id2807 . -1894) (undo-tree-id2808 . -1894) (undo-tree-id2809 . -1894) (undo-tree-id2810 . -1894) (undo-tree-id2811 . -1899) (undo-tree-id2812 . -1899) (undo-tree-id2813 . -1899) (undo-tree-id2814 . -1899) (undo-tree-id2815 . -1899) (undo-tree-id2816 . -1899) (undo-tree-id2817 . -1981) (undo-tree-id2818 . -1981) (undo-tree-id2819 . -2047) (undo-tree-id2820 . -2118) (undo-tree-id2821 . -2123) (undo-tree-id2822 . -2209) (undo-tree-id2823 . -2294) (undo-tree-id2824 . -2368) (undo-tree-id2825 . -2373) (undo-tree-id2826 . -2458) (undo-tree-id2827 . -2458) (undo-tree-id2828 . -2529) (undo-tree-id2829 . -2534) (undo-tree-id2830 . -2608) (undo-tree-id2831 . -2654) (undo-tree-id2832 . -2661) (undo-tree-id2833 . -2667) (undo-tree-id2834 . -2673) (undo-tree-id2835 . -2673) (undo-tree-id2836 . -2673) (undo-tree-id2837 . -2673) (undo-tree-id2838 . -2673) (undo-tree-id2839 . -2673) (undo-tree-id2840 . -2673) (undo-tree-id2841 . -2673) (undo-tree-id2842 . -2675) (undo-tree-id2843 . -2676) (undo-tree-id2844 . -2683) (undo-tree-id2845 . -2683) (undo-tree-id2846 . -2683) (undo-tree-id2847 . -2683) (undo-tree-id2848 . -2683) (undo-tree-id2849 . -2683) (undo-tree-id2850 . -2683) (undo-tree-id2851 . -2683) (undo-tree-id2852 . -2685) (undo-tree-id2853 . -2691) (undo-tree-id2854 . -2691) (undo-tree-id2855 . -2691) (undo-tree-id2856 . -2691) (undo-tree-id2857 . -2691) (undo-tree-id2858 . -2691) (undo-tree-id2859 . -2691) (undo-tree-id2860 . -2691) (undo-tree-id2861 . -2692) (undo-tree-id2862 . -2694) (undo-tree-id2863 . -2695) (undo-tree-id2864 . -2702) (undo-tree-id2865 . -2702) (undo-tree-id2866 . -2702) (undo-tree-id2867 . -2702) (undo-tree-id2868 . -2702) (undo-tree-id2869 . -2702) (undo-tree-id2870 . -2702) (undo-tree-id2871 . -2702) (undo-tree-id2872 . -2704) (undo-tree-id2873 . -2704) (undo-tree-id2874 . -2704) (undo-tree-id2875 . -2704) (undo-tree-id2876 . -2704) (undo-tree-id2877 . -2704) (undo-tree-id2878 . -2704) (undo-tree-id2879 . -2704) (undo-tree-id2880 . -1856) (undo-tree-id2881 . -2704) (undo-tree-id2882 . -2704) (undo-tree-id2883 . -2704) (undo-tree-id2884 . -2704) (undo-tree-id2885 . -2704) (undo-tree-id2886 . -2704) (undo-tree-id2887 . -2704) (undo-tree-id2888 . -2704) (undo-tree-id2889 . -2704) (undo-tree-id2890 . -2704) (undo-tree-id2891 . -2705) (undo-tree-id2892 . -2706) (undo-tree-id2893 . -2723) (undo-tree-id2894 . -2723) (undo-tree-id2895 . -2727) (undo-tree-id2896 . -2727) (undo-tree-id2897 . -2727) (undo-tree-id2898 . -2727) (undo-tree-id2899 . -2727) (undo-tree-id2900 . -2802) (undo-tree-id2901 . -2802) (undo-tree-id2902 . -2802) (undo-tree-id2903 . -2802) (undo-tree-id2904 . -2802) (undo-tree-id2905 . -2802) (undo-tree-id2906 . -2802) (undo-tree-id2907 . -2802) (undo-tree-id2908 . -2802) (undo-tree-id2909 . -2802) (undo-tree-id2910 . -2727) (undo-tree-id2911 . -2727) (undo-tree-id2912 . -2727) (undo-tree-id2913 . -2727) (undo-tree-id2914 . -2727) (undo-tree-id2915 . -2727) (undo-tree-id2916 . -2727) (undo-tree-id2917 . -2727) (undo-tree-id2918 . -2802) (undo-tree-id2919 . -2802) (undo-tree-id2920 . -2802) (undo-tree-id2921 . -2802) (undo-tree-id2922 . -2802) (undo-tree-id2923 . -2802) (undo-tree-id2924 . -2802) (undo-tree-id2925 . -2808) (undo-tree-id2926 . -2835) (undo-tree-id2927 . -2857) (undo-tree-id2928 . -4892) (undo-tree-id2929 . -4892) (undo-tree-id2930 . -4892) (undo-tree-id2931 . -2908) (undo-tree-id2932 . -2935) (undo-tree-id2933 . -2935) (undo-tree-id2934 . -2935) (undo-tree-id2935 . -3010) (undo-tree-id2936 . -3029) (undo-tree-id2937 . -3045) (undo-tree-id2938 . -3086) (undo-tree-id2939 . -3102) (undo-tree-id2940 . -3155) (undo-tree-id2941 . -3194) (undo-tree-id2942 . -3194) (undo-tree-id2943 . -3194) (undo-tree-id2944 . -3232) (undo-tree-id2945 . -3265) (undo-tree-id2946 . -3311) (undo-tree-id2947 . -3312) (undo-tree-id2948 . -3312) (undo-tree-id2949 . -3312) (undo-tree-id2950 . -3312) (undo-tree-id2951 . -3312) (undo-tree-id2952 . -3311) (undo-tree-id2953 . -3311) (undo-tree-id2954 . -3311) (undo-tree-id2955 . -3311) (undo-tree-id2956 . -3311) (undo-tree-id2957 . -3265) (undo-tree-id2958 . -3232) (undo-tree-id2959 . -3194) (undo-tree-id2960 . -3155) (undo-tree-id2961 . -3102) (undo-tree-id2962 . -3086) (undo-tree-id2963 . -3045) (undo-tree-id2964 . -3029) (undo-tree-id2965 . -3010) (undo-tree-id2966 . -2935) (undo-tree-id2967 . -2908) (undo-tree-id2968 . -2857) (undo-tree-id2969 . -2835) (undo-tree-id2970 . -2808) (undo-tree-id2971 . -2802) (undo-tree-id2972 . -2727) (undo-tree-id2973 . -2710) (undo-tree-id2974 . -2705) (undo-tree-id2975 . -2706) (undo-tree-id2976 . -2706) (undo-tree-id2977 . -2706) (undo-tree-id2978 . -2706) (undo-tree-id2979 . -2706) (undo-tree-id2980 . -2706) (undo-tree-id2981 . -2706) (undo-tree-id2982 . -2706) (undo-tree-id2983 . -2706) (undo-tree-id2984 . -2704) (undo-tree-id2985 . -2706) (undo-tree-id2986 . -2706) (undo-tree-id2987 . -2706) (undo-tree-id2988 . -2706) (undo-tree-id2989 . -2706) (undo-tree-id2990 . -2706) (undo-tree-id2991 . -2706) (undo-tree-id2992 . -2706) (undo-tree-id2993 . -2706) (undo-tree-id2994 . -2706) (undo-tree-id2995 . -2723) (undo-tree-id2996 . -2723) (undo-tree-id2997 . -2723) (undo-tree-id2998 . -2723) (undo-tree-id2999 . -2723) (undo-tree-id3000 . -2723) (undo-tree-id3001 . -2801) (undo-tree-id3002 . -2801) (undo-tree-id3003 . -2804) (undo-tree-id3004 . -2831) (undo-tree-id3005 . -2853) (undo-tree-id3006 . -2904) (undo-tree-id3007 . -2904) (undo-tree-id3008 . -2904) (undo-tree-id3009 . -2904) (undo-tree-id3010 . -2904) (undo-tree-id3011 . -2931) (undo-tree-id3012 . -2931) (undo-tree-id3013 . -2931) (undo-tree-id3014 . -2931) (undo-tree-id3015 . -2931) (undo-tree-id3016 . -3006) (undo-tree-id3017 . -3025) (undo-tree-id3018 . -3041) (undo-tree-id3019 . -3082) (undo-tree-id3020 . -3098) (undo-tree-id3021 . -3098) (undo-tree-id3022 . -3098) (undo-tree-id3023 . -3098) (undo-tree-id3024 . -3098) (undo-tree-id3025 . -3151) (undo-tree-id3026 . -3190) (undo-tree-id3027 . -3190) (undo-tree-id3028 . -3190) (undo-tree-id3029 . -3190) (undo-tree-id3030 . -3190) (undo-tree-id3031 . -3228) (undo-tree-id3032 . -3228) (undo-tree-id3033 . -3228) (undo-tree-id3034 . -3228) (undo-tree-id3035 . -3228) (undo-tree-id3036 . -3261) (undo-tree-id3037 . -3311) (undo-tree-id3038 . -3312) (undo-tree-id3039 . -3313) (undo-tree-id3040 . -3313) (undo-tree-id3041 . -3313) (undo-tree-id3042 . -3313) (undo-tree-id3043 . -3313) (undo-tree-id3044 . -3313) (undo-tree-id3045 . -3313) (undo-tree-id3046 . -3313) (undo-tree-id3047 . -3313) (undo-tree-id3048 . -3313) (undo-tree-id3049 . -3313) (undo-tree-id3050 . -3313) (undo-tree-id3051 . -3313) (undo-tree-id3052 . -3313) (undo-tree-id3053 . -3313) (undo-tree-id3054 . -3313) (undo-tree-id3055 . -3313) (undo-tree-id3056 . -3313) (undo-tree-id3057 . -3312) (undo-tree-id3058 . -3312) (undo-tree-id3059 . -3312) (undo-tree-id3060 . -3312) (undo-tree-id3061 . -3312) (undo-tree-id3062 . -3312) (undo-tree-id3063 . -3311) (undo-tree-id3064 . -3261) (undo-tree-id3065 . -3228) (undo-tree-id3066 . -3190) (undo-tree-id3067 . -3151) (undo-tree-id3068 . -3098) (undo-tree-id3069 . -3082) (undo-tree-id3070 . -3041) (undo-tree-id3071 . -3025) (undo-tree-id3072 . -3006) (undo-tree-id3073 . -2931) (undo-tree-id3074 . -2904) (undo-tree-id3075 . -2853) (undo-tree-id3076 . -2831) (undo-tree-id3077 . -2804) (undo-tree-id3078 . -2801) (undo-tree-id3079 . -2723) (undo-tree-id3080 . -2706) (undo-tree-id3081 . -2705) (undo-tree-id3082 . -2705) (undo-tree-id3083 . -2705) (undo-tree-id3084 . -2706) (undo-tree-id3085 . -2706) (undo-tree-id3086 . -2706) (undo-tree-id3087 . -2706) (undo-tree-id3088 . -2706) (undo-tree-id3089 . -2706) (undo-tree-id3090 . -2706) (undo-tree-id3091 . -2706) (undo-tree-id3092 . -2706) (undo-tree-id3093 . -2706) (undo-tree-id3094 . -2706) (undo-tree-id3095 . -2706) (undo-tree-id3096 . -2706) (undo-tree-id3097 . -2706) (undo-tree-id3098 . -2706) (undo-tree-id3099 . -2723) (undo-tree-id3100 . -2723) (undo-tree-id3101 . -2723) (undo-tree-id3102 . -2723) (undo-tree-id3103 . -2723) (undo-tree-id3104 . -2801) (undo-tree-id3105 . -2804) (undo-tree-id3106 . -2831) (undo-tree-id3107 . -2853) (undo-tree-id3108 . -2904) (undo-tree-id3109 . -2931) (undo-tree-id3110 . -3006) (undo-tree-id3111 . -3025) (undo-tree-id3112 . -3041) (undo-tree-id3113 . -3082) (undo-tree-id3114 . -3098) (undo-tree-id3115 . -3151) (undo-tree-id3116 . -3190) (undo-tree-id3117 . -3228) (undo-tree-id3118 . -3261) (undo-tree-id3119 . -2706) (undo-tree-id3120 . -2706) (undo-tree-id3121 . -2706) (undo-tree-id3122 . -2706) (undo-tree-id3123 . -2706) (undo-tree-id3124 . -2706) (undo-tree-id3125 . -2706) (undo-tree-id3126 . -2706) (undo-tree-id3127 . -2706) (undo-tree-id3128 . -2706) (undo-tree-id3129 . -2706) (undo-tree-id3130 . -2706) (undo-tree-id3131 . -2706) (undo-tree-id3132 . -2706) (undo-tree-id3133 . -2706) (undo-tree-id3134 . -2706) (undo-tree-id3135 . -2706) (undo-tree-id3136 . -2706) (undo-tree-id3137 . -2706) (undo-tree-id3138 . -2706) (undo-tree-id3139 . -2706) (undo-tree-id3140 . -2706) (undo-tree-id3141 . -2706) (undo-tree-id3142 . -2706) (undo-tree-id3143 . -2706) (undo-tree-id3144 . -2706) (undo-tree-id3145 . -2706) (undo-tree-id3146 . -2706) (undo-tree-id3147 . -2706) (undo-tree-id3148 . -2706) (undo-tree-id3149 . -2706) (undo-tree-id3150 . -2706) (undo-tree-id3151 . -2706) (undo-tree-id3152 . -2706) (undo-tree-id3153 . -2706) (undo-tree-id3154 . -2706) (undo-tree-id3155 . -2706) (undo-tree-id3156 . -2706) (undo-tree-id3157 . -2706) (undo-tree-id3158 . -2706) (undo-tree-id3159 . -2706) (undo-tree-id3160 . -2706) (undo-tree-id3161 . -2706) (undo-tree-id3162 . -2706) (undo-tree-id3163 . -2706) (undo-tree-id3164 . -2706) (undo-tree-id3165 . -2706) (undo-tree-id3166 . -2706) (undo-tree-id3167 . -2706) (undo-tree-id3168 . -2706) (undo-tree-id3169 . -2706) (undo-tree-id3170 . -2706) (undo-tree-id3171 . -2706) (undo-tree-id3172 . -2706) (undo-tree-id3173 . -2706) (undo-tree-id3174 . -2706) (undo-tree-id3175 . -2706) (undo-tree-id3176 . -2706) (undo-tree-id3177 . -2706) (undo-tree-id3178 . -2706) (undo-tree-id3179 . -2706) (undo-tree-id3180 . -2706) (undo-tree-id3181 . -2706) (undo-tree-id3182 . -2706) (undo-tree-id3183 . -2706) (undo-tree-id3184 . -2706) (undo-tree-id3185 . -2706) (undo-tree-id3186 . -2706) (undo-tree-id3187 . -2706) (undo-tree-id3188 . -2706) (undo-tree-id3189 . -2706) (undo-tree-id3190 . -2706) (undo-tree-id3191 . -2706) (undo-tree-id3192 . -2706) (undo-tree-id3193 . -2706) (undo-tree-id3194 . -2706) (undo-tree-id3195 . -2706) (undo-tree-id3196 . -2706) (undo-tree-id3197 . -2706) (undo-tree-id3198 . -2706) (undo-tree-id3199 . -2706) (undo-tree-id3200 . -2706) (undo-tree-id3201 . -2706) (undo-tree-id3202 . -2706) (undo-tree-id3203 . -2706) (undo-tree-id3204 . -2706) (undo-tree-id3205 . -2706) (undo-tree-id3206 . -2706) (undo-tree-id3207 . -2706) (undo-tree-id3208 . -2706) (undo-tree-id3209 . -2706) (undo-tree-id3210 . -2706) (undo-tree-id3211 . -2706) (undo-tree-id3212 . -2706) (undo-tree-id3213 . -2706) (undo-tree-id3214 . -2706) (undo-tree-id3215 . -2706) (undo-tree-id3216 . -2706) (undo-tree-id3217 . -2706) (undo-tree-id3218 . -2706) (undo-tree-id3219 . -2706) (undo-tree-id3220 . -2706) (undo-tree-id3221 . -2706) (undo-tree-id3222 . -2706) (undo-tree-id3223 . -2706) (undo-tree-id3224 . -2706) (undo-tree-id3225 . -2706) (undo-tree-id3226 . -2706) (undo-tree-id3227 . -2706) (undo-tree-id3228 . -2706) (undo-tree-id3229 . -2706) (undo-tree-id3230 . -2706) (undo-tree-id3231 . -2706) (undo-tree-id3232 . -2706) (undo-tree-id3233 . -2706) (undo-tree-id3234 . -2706) (undo-tree-id3235 . -2706) (undo-tree-id3236 . -2706) (undo-tree-id3237 . -2706) (undo-tree-id3238 . -2706) (undo-tree-id3239 . -2706) (undo-tree-id3240 . -2706) (undo-tree-id3241 . -2706) (undo-tree-id3242 . -2706) (undo-tree-id3243 . -2706) (undo-tree-id3244 . -2706) (undo-tree-id3245 . -2706) (undo-tree-id3246 . -2706) (undo-tree-id3247 . -2706) (undo-tree-id3248 . -2706) (undo-tree-id3249 . -2706) (undo-tree-id3250 . -2706) (undo-tree-id3251 . -2706) (undo-tree-id3252 . -2706) (undo-tree-id3253 . -2706) (undo-tree-id3254 . -2706) (undo-tree-id3255 . -2706) (undo-tree-id3256 . -2706) (undo-tree-id3257 . -2706) (undo-tree-id3258 . -2706) (undo-tree-id3259 . -2706) (undo-tree-id3260 . -2706) (undo-tree-id3261 . -2706) (undo-tree-id3262 . -2706) (undo-tree-id3263 . -2706) (undo-tree-id3264 . -2706) (undo-tree-id3265 . -2706) (undo-tree-id3266 . -2706) (undo-tree-id3267 . -2706) (undo-tree-id3268 . -2706) (undo-tree-id3269 . -2706) (undo-tree-id3270 . -2706) (undo-tree-id3271 . -2706) (undo-tree-id3272 . -2706) (undo-tree-id3273 . -2706) (undo-tree-id3274 . -2706) (undo-tree-id3275 . -2706) (undo-tree-id3276 . -2706) (undo-tree-id3277 . -2706) (undo-tree-id3278 . -2706) (undo-tree-id3279 . -2706) (undo-tree-id3280 . -2706) (undo-tree-id3281 . -2706) (undo-tree-id3282 . -2706) (undo-tree-id3283 . -2706) (undo-tree-id3284 . -2706) (undo-tree-id3285 . -2706) (undo-tree-id3286 . -2706) (undo-tree-id3287 . -2706) (undo-tree-id3288 . -2706) (undo-tree-id3289 . -2706) (undo-tree-id3290 . -2706) (undo-tree-id3291 . -2706) (undo-tree-id3292 . -2706) (undo-tree-id3293 . -2706) (undo-tree-id3294 . -2706) (undo-tree-id3295 . -2706) (undo-tree-id3296 . -2706) (undo-tree-id3297 . -2706) (undo-tree-id3298 . -2706) (undo-tree-id3299 . -2706) (undo-tree-id3300 . -2706) (undo-tree-id3301 . -2706) (undo-tree-id3302 . -2706) (undo-tree-id3303 . -2706) (undo-tree-id3304 . -2706) (undo-tree-id3305 . -2706) (undo-tree-id3306 . -2706) (undo-tree-id3307 . -2706) (undo-tree-id3308 . -2706) (undo-tree-id3309 . -2706) (undo-tree-id3310 . -2706) (undo-tree-id3311 . -2706) (undo-tree-id3312 . -2706) (undo-tree-id3313 . -2706) (undo-tree-id3314 . -2706) (undo-tree-id3315 . -2706) (undo-tree-id3316 . -2706) (undo-tree-id3317 . -2706) (undo-tree-id3318 . -2706) (undo-tree-id3319 . -2706) (undo-tree-id3320 . -2706) (undo-tree-id3321 . -2706) (undo-tree-id3322 . -2706) (undo-tree-id3323 . -2706) (undo-tree-id3324 . -2706) (undo-tree-id3325 . -3311) (undo-tree-id3326 . -3311) (undo-tree-id3327 . -3311) (undo-tree-id3328 . -3311) (undo-tree-id3329 . -3313) (undo-tree-id3330 . -3312) (undo-tree-id3331 . -3313) (undo-tree-id3332 . -3313) (undo-tree-id3333 . -3313) (undo-tree-id3334 . -3313) (undo-tree-id3335 . -3313) (undo-tree-id3336 . -3313) (undo-tree-id3337 . -3313) (undo-tree-id3338 . -3313) (undo-tree-id3339 . -3313) (undo-tree-id3340 . -3313) (undo-tree-id3341 . -3313) (undo-tree-id3342 . -3313) (undo-tree-id3343 . -3312) (undo-tree-id3344 . -3312) (undo-tree-id3345 . -3312) (undo-tree-id3346 . -3312) (undo-tree-id3347 . -3313) (undo-tree-id3348 . -3313) (undo-tree-id3349 . -3313) (undo-tree-id3350 . -3313) (undo-tree-id3351 . -3313) (undo-tree-id3352 . -3313) (undo-tree-id3353 . -3313) (undo-tree-id3354 . -3313) (undo-tree-id3355 . -3313) (undo-tree-id3356 . -3313) (undo-tree-id3357 . -3313) (undo-tree-id3358 . -3313) (undo-tree-id3359 . -3313) (undo-tree-id3360 . -3313) (undo-tree-id3361 . -3313) (undo-tree-id3362 . -3313) (undo-tree-id3363 . -3313) (undo-tree-id3364 . -3313) (undo-tree-id3365 . -4269) (undo-tree-id3366 . -3313) (undo-tree-id3367 . -3313) (undo-tree-id3368 . -3313) (undo-tree-id3369 . -3313) (undo-tree-id3370 . -3431) (undo-tree-id3371 . -3431) (undo-tree-id3372 . -3530) (undo-tree-id3373 . -3530) (undo-tree-id3374 . -3530) (undo-tree-id3375 . -3530) (undo-tree-id3376 . -3657) (undo-tree-id3377 . -3657) (undo-tree-id3378 . -3657) (undo-tree-id3379 . -3657) (undo-tree-id3380 . -4277) (undo-tree-id3381 . -4277) (undo-tree-id3382 . -4317) (undo-tree-id3383 . -4317) (undo-tree-id3384 . -4317) (undo-tree-id3385 . -38) (undo-tree-id3386 . -44) (undo-tree-id3387 . -106) (undo-tree-id3388 . -110) (undo-tree-id3389 . -871) (undo-tree-id3390 . -876) (undo-tree-id3391 . -1097) (undo-tree-id3392 . -1101) (undo-tree-id3393 . -1187) (undo-tree-id3394 . -1188) (undo-tree-id3395 . -1355) (undo-tree-id3396 . -1356) (undo-tree-id3397 . -1626) (undo-tree-id3398 . -1629) (undo-tree-id3399 . -1971) (undo-tree-id3400 . -1976) (undo-tree-id3401 . -2198) (undo-tree-id3402 . -2199) (undo-tree-id3403 . -2284) (undo-tree-id3404 . -2285) (undo-tree-id3405 . -2447) (undo-tree-id3406 . -2449) (undo-tree-id3407 . -3313) (undo-tree-id3408 . -3316) (undo-tree-id3409 . -3391) (undo-tree-id3410 . -3397) (undo-tree-id3411 . -3454) (undo-tree-id3412 . -3455) (undo-tree-id3413 . -3573) (undo-tree-id3414 . -3574) (undo-tree-id3415 . -3724) (undo-tree-id3416 . -3725) (undo-tree-id3417 . -3784) (undo-tree-id3418 . -3785) (undo-tree-id3419 . -3885) (undo-tree-id3420 . -3886) (undo-tree-id3421 . -3998) (undo-tree-id3422 . -3999) (undo-tree-id3423 . -4077) (undo-tree-id3424 . -4078) (undo-tree-id3425 . -4159) (undo-tree-id3426 . -4160) (undo-tree-id3427 . -4399) (undo-tree-id3428 . -4406) (undo-tree-id3429 . -5556) (undo-tree-id3430 . -5563) (undo-tree-id3431 . -5683) (undo-tree-id3432 . -5703) (undo-tree-id3433 . -4317) (undo-tree-id3434 . -4317) (undo-tree-id3435 . -4317) (undo-tree-id3436 . -4892) (undo-tree-id3437 . -4892) (undo-tree-id3438 . -4892) (undo-tree-id3439 . -4317) (undo-tree-id3440 . -4317) (undo-tree-id3441 . -4317) (undo-tree-id3442 . -4317) (undo-tree-id3443 . -4317) (undo-tree-id3444 . -4317) (undo-tree-id3445 . -4317) (undo-tree-id3446 . -4317) (undo-tree-id3447 . -4317) (undo-tree-id3448 . -3789) (undo-tree-id3449 . -4317) (undo-tree-id3450 . -4317) (undo-tree-id3451 . -3789) (undo-tree-id3452 . -4317) (undo-tree-id3453 . -4317) (undo-tree-id3454 . -4317) (undo-tree-id3455 . -4317)) ((1 . 5873) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate  second wave by applying another sinusoidal function to the time array
    # Similar to first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise  by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    plt.plot(series, \".-\")
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")
    plt.grid(True)
    if x_label:
        plt.xlabel(x_label, fontsize=16)
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)
    plt.hlines(0, 0, 100, linewidth=1)
    plt.axis([0, n_steps + 1, -1, 1])
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential(
    [keras.layers.Flatten(input_shape=[50, 1]), keras.layers.Dense(1)]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))


model.evaluate(X_valid, y_valid)


###############################################################################
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 278 (fontified t) 278 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 703 (fontified t) 703 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 1018 1023 (fontified t) 1023 1025 (fontified t face font-lock-comment-delimiter-face) 1025 1108 (fontified t face font-lock-comment-face) 1108 1112 (fontified t) 1112 1114 (fontified t face font-lock-comment-delimiter-face) 1114 1197 (fontified t face font-lock-comment-face) 1197 1201 (fontified t) 1201 1207 (fontified t face font-lock-variable-name-face) 1207 1223 (fontified t) 1223 1224 (fontified t face (rainbow-delimiters-depth-1-face)) 1224 1225 (fontified t face (rainbow-delimiters-depth-2-face)) 1225 1240 (fontified t) 1240 1241 (fontified t face (rainbow-delimiters-depth-2-face)) 1241 1244 (fontified t) 1244 1245 (fontified t face (rainbow-delimiters-depth-2-face)) 1245 1260 (fontified t) 1260 1261 (fontified t face (rainbow-delimiters-depth-2-face)) 1261 1262 (fontified t face (rainbow-delimiters-depth-1-face)) 1262 1264 (fontified t) 1264 1266 (fontified t face font-lock-comment-delimiter-face) 1266 1275 (fontified t face font-lock-comment-face) 1275 1280 (fontified t) 1280 1282 (fontified t face font-lock-comment-delimiter-face) 1282 1374 (fontified t face font-lock-comment-face) 1374 1378 (fontified t) 1378 1384 (fontified t face font-lock-variable-name-face) 1384 1394 (fontified t) 1394 1395 (fontified t face (rainbow-delimiters-depth-1-face)) 1395 1409 (fontified t) 1409 1410 (fontified t face (rainbow-delimiters-depth-2-face)) 1410 1429 (fontified t) 1429 1430 (fontified t face (rainbow-delimiters-depth-2-face)) 1430 1436 (fontified t) 1436 1437 (fontified t face (rainbow-delimiters-depth-1-face)) 1437 1439 (fontified t) 1439 1441 (fontified t face font-lock-comment-delimiter-face) 1441 1449 (fontified t face font-lock-comment-face) 1449 1450 (fontified t) 1450 1454 (fontified t) 1454 1456 (fontified t face font-lock-comment-delimiter-face) 1456 1524 (fontified t face font-lock-comment-face) 1524 1528 (fontified t) 1528 1530 (fontified t face font-lock-comment-delimiter-face) 1530 1570 (fontified t face font-lock-comment-face) 1570 1574 (fontified t) 1574 1580 (fontified t face font-lock-keyword-face) 1580 1587 (fontified t) 1587 1588 (fontified t face (rainbow-delimiters-depth-1-face)) 1588 1603 (fontified t) 1603 1604 (fontified t face (rainbow-delimiters-depth-1-face)) 1604 1611 (fontified t) 1611 1612 (fontified t face (rainbow-delimiters-depth-1-face)) 1612 1622 (fontified t) 1622 1623 (fontified t face (rainbow-delimiters-depth-1-face)) 1623 1626 (fontified t) 1626 1629 (fontified t face font-lock-keyword-face) 1629 1630 (fontified t) 1630 1650 (fontified t face font-lock-function-name-face) 1650 1651 (fontified t face (rainbow-delimiters-depth-1-face)) 1651 1670 (fontified t) 1670 1671 (fontified t face (rainbow-delimiters-depth-1-face)) 1671 1677 (fontified t) 1677 1679 (fontified t face font-lock-comment-delimiter-face) 1679 1730 (fontified t face font-lock-comment-face) 1730 1734 (fontified t) 1734 1739 (fontified t face font-lock-variable-name-face) 1739 1741 (fontified t) 1741 1746 (fontified t face font-lock-variable-name-face) 1746 1748 (fontified t) 1748 1756 (fontified t face font-lock-variable-name-face) 1756 1758 (fontified t) 1758 1766 (fontified t face font-lock-variable-name-face) 1766 1783 (fontified t) 1783 1784 (fontified t face (rainbow-delimiters-depth-1-face)) 1784 1800 (fontified t) 1800 1801 (fontified t face (rainbow-delimiters-depth-1-face)) 1801 1807 (fontified t) 1807 1809 (fontified t face font-lock-comment-delimiter-face) 1809 1856 (fontified t face font-lock-comment-face) 1856 1860 (fontified t) 1860 1864 (fontified t face font-lock-variable-name-face) 1864 1878 (fontified t) 1878 1879 (fontified t face (rainbow-delimiters-depth-1-face)) 1879 1892 (fontified t) 1892 1893 (fontified t face (rainbow-delimiters-depth-1-face)) 1893 1899 (fontified t) 1899 1901 (fontified t face font-lock-comment-delimiter-face) 1901 1950 (fontified t face font-lock-comment-face) 1950 1977 (face font-lock-comment-face fontified t) 1977 1981 (fontified t) 1981 1983 (fontified t face font-lock-comment-delimiter-face) 1983 2043 (fontified t face font-lock-comment-face) 2043 2047 (fontified t) 2047 2053 (fontified t face font-lock-variable-name-face) 2053 2068 (fontified t) 2068 2069 (fontified t face (rainbow-delimiters-depth-1-face)) 2069 2070 (fontified t face (rainbow-delimiters-depth-2-face)) 2070 2085 (fontified t) 2085 2086 (fontified t face (rainbow-delimiters-depth-2-face)) 2086 2089 (fontified t) 2089 2090 (fontified t face (rainbow-delimiters-depth-2-face)) 2090 2105 (fontified t) 2105 2106 (fontified t face (rainbow-delimiters-depth-2-face)) 2106 2107 (fontified t face (rainbow-delimiters-depth-1-face)) 2107 2109 (fontified t) 2109 2111 (fontified t face font-lock-comment-delimiter-face) 2111 2118 (fontified t face font-lock-comment-face) 2118 2123 (fontified t) 2123 2125 (fontified t face font-lock-comment-delimiter-face) 2125 2205 (fontified t face font-lock-comment-face) 2205 2209 (fontified t) 2209 2211 (fontified t face font-lock-comment-delimiter-face) 2211 2290 (fontified t face font-lock-comment-face) 2290 2294 (fontified t) 2294 2300 (fontified t face font-lock-variable-name-face) 2300 2316 (fontified t) 2316 2317 (fontified t face (rainbow-delimiters-depth-1-face)) 2317 2318 (fontified t face (rainbow-delimiters-depth-2-face)) 2318 2333 (fontified t) 2333 2334 (fontified t face (rainbow-delimiters-depth-2-face)) 2334 2337 (fontified t) 2337 2338 (fontified t face (rainbow-delimiters-depth-2-face)) 2338 2353 (fontified t) 2353 2354 (fontified t face (rainbow-delimiters-depth-2-face)) 2354 2355 (fontified t face (rainbow-delimiters-depth-1-face)) 2355 2357 (fontified t) 2357 2359 (fontified t face font-lock-comment-delimiter-face) 2359 2368 (fontified t face font-lock-comment-face) 2368 2373 (fontified t) 2373 2375 (fontified t face font-lock-comment-delimiter-face) 2375 2454 (fontified t face font-lock-comment-face) 2454 2458 (fontified t) 2458 2464 (fontified t face font-lock-variable-name-face) 2464 2474 (fontified t) 2474 2475 (fontified t face (rainbow-delimiters-depth-1-face)) 2475 2489 (fontified t) 2489 2490 (fontified t face (rainbow-delimiters-depth-2-face)) 2490 2509 (fontified t) 2509 2510 (fontified t face (rainbow-delimiters-depth-2-face)) 2510 2516 (fontified t) 2516 2517 (fontified t face (rainbow-delimiters-depth-1-face)) 2517 2519 (fontified t) 2519 2521 (fontified t face font-lock-comment-delimiter-face) 2521 2529 (fontified t face font-lock-comment-face) 2529 2534 (fontified t) 2534 2536 (fontified t face font-lock-comment-delimiter-face) 2536 2604 (fontified t face font-lock-comment-face) 2604 2608 (fontified t) 2608 2610 (fontified t face font-lock-comment-delimiter-face) 2610 2650 (fontified t face font-lock-comment-face) 2650 2654 (fontified t) 2654 2660 (fontified t face font-lock-keyword-face) 2660 2667 (fontified t) 2667 2668 (fontified t face (rainbow-delimiters-depth-1-face)) 2668 2683 (fontified t) 2683 2684 (fontified t face (rainbow-delimiters-depth-1-face)) 2684 2691 (fontified t) 2691 2692 (fontified t face (rainbow-delimiters-depth-1-face)) 2692 2702 (fontified t) 2702 2703 (fontified t face (rainbow-delimiters-depth-1-face)) 2703 2706 (fontified t) 2706 2709 (fontified t face font-lock-keyword-face) 2709 2710 (fontified t) 2710 2721 (fontified t face font-lock-function-name-face) 2721 2722 (fontified t face (rainbow-delimiters-depth-1-face)) 2722 2723 (fontified t) 2723 2737 (fontified t) 2737 2741 (fontified t face font-lock-constant-face) 2741 2750 (fontified t) 2750 2754 (fontified t face font-lock-constant-face) 2754 2764 (fontified t) 2764 2769 (fontified t face font-lock-string-face) 2769 2779 (fontified t) 2779 2787 (fontified t face font-lock-string-face) 2787 2796 (fontified t) 2796 2800 (fontified t face font-lock-constant-face) 2800 2801 (fontified t) 2801 2802 (fontified t face (rainbow-delimiters-depth-1-face)) 2802 2816 (fontified t) 2816 2817 (fontified t face (rainbow-delimiters-depth-1-face)) 2817 2825 (fontified t) 2825 2829 (fontified t face font-lock-string-face) 2829 2830 (fontified t face (rainbow-delimiters-depth-1-face)) 2830 2835 (fontified t) 2835 2837 (fontified t face font-lock-keyword-face) 2837 2840 (fontified t) 2840 2842 (fontified t face font-lock-keyword-face) 2842 2843 (fontified t) 2843 2846 (fontified t face font-lock-keyword-face) 2846 2847 (fontified t) 2847 2851 (fontified t face font-lock-constant-face) 2851 2869 (fontified t) 2869 2870 (fontified t face (rainbow-delimiters-depth-1-face)) 2870 2882 (fontified t) 2882 2886 (fontified t face font-lock-string-face) 2886 2894 (fontified t) 2894 2902 (fontified t face font-lock-string-face) 2902 2903 (fontified t face (rainbow-delimiters-depth-1-face)) 2903 2908 (fontified t) 2908 2910 (fontified t face font-lock-keyword-face) 2910 2918 (fontified t) 2918 2920 (fontified t face font-lock-keyword-face) 2920 2921 (fontified t) 2921 2924 (fontified t face font-lock-keyword-face) 2924 2925 (fontified t) 2925 2929 (fontified t face font-lock-constant-face) 2929 2947 (fontified t) 2947 2948 (fontified t face (rainbow-delimiters-depth-1-face)) 2948 2965 (fontified t) 2965 2969 (fontified t face font-lock-string-face) 2969 2992 (fontified t) 2992 3004 (fontified t face font-lock-string-face) 3004 3005 (fontified t face (rainbow-delimiters-depth-1-face)) 3005 3018 (fontified t) 3018 3019 (fontified t face (rainbow-delimiters-depth-1-face)) 3019 3023 (fontified t face font-lock-constant-face) 3023 3024 (fontified t face (rainbow-delimiters-depth-1-face)) 3024 3029 (fontified t) 3029 3031 (fontified t face font-lock-keyword-face) 3031 3059 (fontified t) 3059 3060 (fontified t face (rainbow-delimiters-depth-1-face)) 3060 3080 (fontified t) 3080 3081 (fontified t face (rainbow-delimiters-depth-1-face)) 3081 3086 (fontified t) 3086 3088 (fontified t face font-lock-keyword-face) 3088 3116 (fontified t) 3116 3117 (fontified t face (rainbow-delimiters-depth-1-face)) 3117 3149 (fontified t) 3149 3150 (fontified t face (rainbow-delimiters-depth-1-face)) 3150 3165 (fontified t) 3165 3166 (fontified t face (rainbow-delimiters-depth-1-face)) 3166 3188 (fontified t) 3188 3189 (fontified t face (rainbow-delimiters-depth-1-face)) 3189 3202 (fontified t) 3202 3203 (fontified t face (rainbow-delimiters-depth-1-face)) 3203 3204 (fontified t face (rainbow-delimiters-depth-2-face)) 3204 3225 (fontified t) 3225 3226 (fontified t face (rainbow-delimiters-depth-2-face)) 3226 3227 (fontified t face (rainbow-delimiters-depth-1-face)) 3227 3232 (fontified t) 3232 3234 (fontified t face font-lock-keyword-face) 3234 3242 (fontified t) 3242 3245 (fontified t face font-lock-keyword-face) 3245 3246 (fontified t) 3246 3247 (fontified t face (rainbow-delimiters-depth-1-face)) 3247 3249 (fontified t) 3249 3251 (fontified t face font-lock-keyword-face) 3251 3258 (fontified t) 3258 3259 (fontified t face (rainbow-delimiters-depth-1-face)) 3259 3279 (fontified t) 3279 3280 (fontified t face (rainbow-delimiters-depth-1-face)) 3280 3297 (fontified t) 3297 3301 (fontified t face font-lock-string-face) 3301 3309 (face font-lock-string-face fontified t) 3309 3310 (face (rainbow-delimiters-depth-1-face) fontified t) 3310 3311 (fontified t) 3311 3312 (fontified t) 3312 3313 (fontified t) 3313 3316 (fontified t face font-lock-keyword-face) 3316 3317 (fontified t) 3317 3328 (fontified t face font-lock-function-name-face) 3328 3329 (fontified t face (rainbow-delimiters-depth-1-face)) 3329 3344 (fontified t) 3344 3348 (fontified t face font-lock-constant-face) 3348 3357 (fontified t) 3357 3361 (fontified t face font-lock-constant-face) 3361 3371 (fontified t) 3371 3376 (fontified t face font-lock-string-face) 3376 3386 (fontified t) 3386 3394 (fontified t face font-lock-string-face) 3394 3403 (fontified t) 3403 3407 (fontified t face font-lock-constant-face) 3407 3408 (fontified t) 3408 3409 (fontified t face (rainbow-delimiters-depth-1-face)) 3409 3415 (fontified t) 3415 3417 (fontified t face font-lock-comment-delimiter-face) 3417 3433 (fontified t face font-lock-comment-face) 3433 3445 (fontified t) 3445 3446 (fontified t face (rainbow-delimiters-depth-1-face)) 3446 3454 (fontified t) 3454 3458 (fontified t face font-lock-string-face) 3458 3459 (fontified t face (rainbow-delimiters-depth-1-face)) 3459 3465 (fontified t) 3465 3467 (fontified t face font-lock-comment-delimiter-face) 3467 3502 (fontified t face font-lock-comment-face) 3502 3506 (fontified t) 3506 3508 (fontified t face font-lock-keyword-face) 3508 3511 (fontified t) 3511 3513 (fontified t face font-lock-keyword-face) 3513 3514 (fontified t) 3514 3517 (fontified t face font-lock-keyword-face) 3517 3518 (fontified t) 3518 3522 (fontified t face font-lock-constant-face) 3522 3540 (fontified t) 3540 3541 (fontified t face (rainbow-delimiters-depth-1-face)) 3541 3553 (fontified t) 3553 3557 (fontified t face font-lock-string-face) 3557 3565 (fontified t) 3565 3573 (fontified t face font-lock-string-face) 3573 3574 (fontified t face (rainbow-delimiters-depth-1-face)) 3574 3580 (fontified t) 3580 3582 (fontified t face font-lock-comment-delimiter-face) 3582 3620 (fontified t face font-lock-comment-face) 3620 3624 (fontified t) 3624 3626 (fontified t face font-lock-keyword-face) 3626 3634 (fontified t) 3634 3636 (fontified t face font-lock-keyword-face) 3636 3637 (fontified t) 3637 3640 (fontified t face font-lock-keyword-face) 3640 3641 (fontified t) 3641 3645 (fontified t face font-lock-constant-face) 3645 3663 (fontified t) 3663 3664 (fontified t face (rainbow-delimiters-depth-1-face)) 3664 3681 (fontified t) 3681 3685 (fontified t face font-lock-string-face) 3685 3708 (fontified t) 3708 3720 (fontified t face font-lock-string-face) 3720 3721 (fontified t face (rainbow-delimiters-depth-1-face)) 3721 3727 (fontified t) 3727 3729 (fontified t face font-lock-comment-delimiter-face) 3729 3759 (fontified t face font-lock-comment-face) 3759 3771 (fontified t) 3771 3772 (fontified t face (rainbow-delimiters-depth-1-face)) 3772 3776 (fontified t face font-lock-constant-face) 3776 3777 (fontified t face (rainbow-delimiters-depth-1-face)) 3777 3778 (fontified t) 3778 3779 (fontified t) 3779 3783 (fontified t) 3783 3785 (fontified t face font-lock-comment-delimiter-face) 3785 3789 (fontified t face font-lock-comment-face) 3789 3818 (fontified t face font-lock-comment-face) 3818 3822 (fontified t) 3822 3824 (fontified t face font-lock-keyword-face) 3824 3852 (fontified t) 3852 3853 (fontified t face (rainbow-delimiters-depth-1-face)) 3853 3873 (fontified t) 3873 3874 (fontified t face (rainbow-delimiters-depth-1-face)) 3874 3880 (fontified t) 3880 3882 (fontified t face font-lock-comment-delimiter-face) 3882 3915 (fontified t face font-lock-comment-face) 3915 3919 (fontified t) 3919 3921 (fontified t face font-lock-keyword-face) 3921 3949 (fontified t) 3949 3950 (fontified t face (rainbow-delimiters-depth-1-face)) 3950 3982 (fontified t) 3982 3983 (fontified t face (rainbow-delimiters-depth-1-face)) 3983 3989 (fontified t) 3989 3991 (fontified t face font-lock-comment-delimiter-face) 3991 4020 (fontified t face font-lock-comment-face) 4020 4034 (fontified t) 4034 4035 (fontified t face (rainbow-delimiters-depth-1-face)) 4035 4057 (fontified t) 4057 4058 (fontified t face (rainbow-delimiters-depth-1-face)) 4058 4064 (fontified t) 4064 4066 (fontified t face font-lock-comment-delimiter-face) 4066 4099 (fontified t face font-lock-comment-face) 4099 4111 (fontified t) 4111 4112 (fontified t face (rainbow-delimiters-depth-1-face)) 4112 4113 (fontified t face (rainbow-delimiters-depth-2-face)) 4113 4134 (fontified t) 4134 4135 (fontified t face (rainbow-delimiters-depth-2-face)) 4135 4136 (fontified t face (rainbow-delimiters-depth-1-face)) 4136 4142 (fontified t) 4142 4144 (fontified t face font-lock-comment-delimiter-face) 4144 4210 (fontified t face font-lock-comment-face) 4210 4214 (fontified t) 4214 4216 (fontified t face font-lock-keyword-face) 4216 4224 (fontified t) 4224 4227 (fontified t face font-lock-keyword-face) 4227 4228 (fontified t) 4228 4229 (fontified t face (rainbow-delimiters-depth-1-face)) 4229 4231 (fontified t) 4231 4233 (fontified t face font-lock-keyword-face) 4233 4240 (fontified t) 4240 4241 (fontified t face (rainbow-delimiters-depth-1-face)) 4241 4261 (fontified t) 4261 4262 (fontified t face (rainbow-delimiters-depth-1-face)) 4262 4279 (fontified t) 4279 4289 (face font-lock-string-face fontified t) 4289 4291 (face font-lock-string-face fontified t) 4291 4292 (face (rainbow-delimiters-depth-1-face) fontified t) 4292 4293 (fontified t) 4293 4295 (fontified t) 4295 4374 (fontified t face font-lock-comment-delimiter-face) 4374 4375 (fontified t face font-lock-comment-face) 4375 4382 (fontified t face font-lock-variable-name-face) 4382 4388 (fontified t) 4388 4394 (fontified t face font-lock-variable-name-face) 4394 4417 (fontified t) 4417 4418 (fontified t face (rainbow-delimiters-depth-1-face)) 4418 4436 (fontified t) 4436 4437 (fontified t face (rainbow-delimiters-depth-1-face)) 4437 4438 (fontified t) 4438 4445 (fontified t face font-lock-variable-name-face) 4445 4447 (fontified t) 4447 4454 (fontified t face font-lock-variable-name-face) 4454 4463 (fontified t) 4463 4464 (fontified t face (rainbow-delimiters-depth-1-face)) 4464 4479 (fontified t) 4479 4480 (fontified t face (rainbow-delimiters-depth-1-face)) 4480 4488 (fontified t) 4488 4489 (fontified t face (rainbow-delimiters-depth-1-face)) 4489 4498 (fontified t) 4498 4499 (fontified t face (rainbow-delimiters-depth-1-face)) 4499 4500 (fontified t) 4500 4507 (fontified t face font-lock-variable-name-face) 4507 4509 (fontified t) 4509 4516 (fontified t face font-lock-variable-name-face) 4516 4525 (fontified t) 4525 4526 (fontified t face (rainbow-delimiters-depth-1-face)) 4526 4545 (fontified t) 4545 4546 (fontified t face (rainbow-delimiters-depth-1-face)) 4546 4554 (fontified t) 4554 4555 (fontified t face (rainbow-delimiters-depth-1-face)) 4555 4568 (fontified t) 4568 4569 (fontified t face (rainbow-delimiters-depth-1-face)) 4569 4570 (fontified t) 4570 4576 (fontified t face font-lock-variable-name-face) 4576 4578 (fontified t) 4578 4584 (fontified t face font-lock-variable-name-face) 4584 4593 (fontified t) 4593 4594 (fontified t face (rainbow-delimiters-depth-1-face)) 4594 4609 (fontified t) 4609 4610 (fontified t face (rainbow-delimiters-depth-1-face)) 4610 4618 (fontified t) 4618 4619 (fontified t face (rainbow-delimiters-depth-1-face)) 4619 4628 (fontified t) 4628 4629 (fontified t face (rainbow-delimiters-depth-1-face)) 4629 4630 (fontified t) 4630 4635 (fontified t face font-lock-keyword-face) 4635 4636 (fontified t face (rainbow-delimiters-depth-1-face)) 4636 4664 (fontified t) 4664 4665 (fontified t face (rainbow-delimiters-depth-1-face)) 4665 4667 (fontified t) 4667 4746 (fontified t face font-lock-comment-delimiter-face) 4746 4747 (fontified t face font-lock-comment-face) 4747 4750 (fontified t face font-lock-variable-name-face) 4750 4752 (fontified t) 4752 4756 (fontified t face font-lock-variable-name-face) 4756 4771 (fontified t) 4771 4772 (fontified t face (rainbow-delimiters-depth-1-face)) 4772 4793 (fontified t) 4793 4797 (fontified t) 4797 4801 (face font-lock-constant-face fontified t) 4801 4811 (fontified t) 4811 4812 (face (rainbow-delimiters-depth-2-face) fontified t) 4812 4817 (fontified t) 4817 4818 (face (rainbow-delimiters-depth-2-face) fontified t) 4818 4819 (face (rainbow-delimiters-depth-1-face) fontified t) 4819 4820 (fontified t) 4820 4823 (fontified t face font-lock-keyword-face) 4823 4828 (fontified t) 4828 4830 (fontified t face font-lock-keyword-face) 4830 4831 (fontified t) 4831 4836 (fontified t face font-lock-builtin-face) 4836 4837 (fontified t face (rainbow-delimiters-depth-1-face)) 4837 4838 (fontified t) 4838 4839 (fontified t face (rainbow-delimiters-depth-1-face)) 4839 4852 (fontified t) 4852 4853 (fontified t face (rainbow-delimiters-depth-1-face)) 4853 4857 (fontified t) 4857 4858 (fontified t face (rainbow-delimiters-depth-2-face)) 4858 4861 (fontified t) 4861 4862 (fontified t face (rainbow-delimiters-depth-2-face)) 4862 4863 (fontified t face (rainbow-delimiters-depth-1-face)) 4863 4879 (fontified t) 4879 4880 (fontified t face (rainbow-delimiters-depth-1-face)) 4880 4896 (fontified t) 4896 4897 (fontified t face (rainbow-delimiters-depth-2-face)) 4897 4906 (fontified t) 4906 4907 (fontified t face (rainbow-delimiters-depth-2-face)) 4907 4924 (fontified t) 4924 4925 (fontified t face (rainbow-delimiters-depth-2-face)) 4925 4931 (fontified t) 4931 4932 (fontified t face (rainbow-delimiters-depth-2-face)) 4932 4950 (fontified t) 4950 4951 (fontified t face (rainbow-delimiters-depth-2-face)) 4951 4959 (fontified t face font-lock-string-face) 4959 4960 (fontified t) 4960 4962 (fontified t face font-lock-keyword-face) 4962 4972 (fontified t) 4972 4976 (fontified t face font-lock-keyword-face) 4976 4977 (fontified t) 4977 4981 (fontified t face font-lock-constant-face) 4981 4982 (fontified t face (rainbow-delimiters-depth-2-face)) 4982 4999 (fontified t) 4999 5000 (fontified t face (rainbow-delimiters-depth-2-face)) 5000 5008 (fontified t) 5008 5009 (fontified t face (rainbow-delimiters-depth-2-face)) 5009 5015 (fontified t) 5015 5016 (fontified t face (rainbow-delimiters-depth-1-face)) 5016 5025 (fontified t) 5025 5026 (fontified t face (rainbow-delimiters-depth-1-face)) 5026 5027 (fontified t face (rainbow-delimiters-depth-1-face)) 5027 5029 (fontified t) 5029 5035 (fontified t face font-lock-variable-name-face) 5035 5045 (fontified t) 5045 5046 (fontified t face (rainbow-delimiters-depth-1-face)) 5046 5051 (fontified t) 5051 5052 (fontified t face (rainbow-delimiters-depth-1-face)) 5052 5060 (fontified t) 5060 5061 (fontified t face (rainbow-delimiters-depth-1-face)) 5061 5092 (fontified t) 5092 5093 (fontified t face (rainbow-delimiters-depth-2-face)) 5093 5108 (fontified t) 5108 5109 (fontified t face (rainbow-delimiters-depth-2-face)) 5109 5110 (fontified t face (rainbow-delimiters-depth-1-face)) 5110 5112 (fontified t) 5112 5191 (fontified t face font-lock-comment-delimiter-face) 5191 5192 (fontified t face font-lock-comment-face) 5192 5203 (fontified t) 5203 5204 (fontified t face (rainbow-delimiters-depth-1-face)) 5204 5211 (fontified t) 5211 5212 (fontified t face (rainbow-delimiters-depth-2-face)) 5212 5219 (fontified t) 5219 5220 (fontified t face (rainbow-delimiters-depth-2-face)) 5220 5229 (fontified t) 5229 5230 (fontified t face (rainbow-delimiters-depth-2-face)) 5230 5234 (fontified t) 5234 5235 (fontified t face (rainbow-delimiters-depth-2-face)) 5235 5243 (fontified t) 5243 5244 (fontified t face (rainbow-delimiters-depth-2-face)) 5244 5248 (fontified t) 5248 5249 (fontified t face (rainbow-delimiters-depth-2-face)) 5249 5250 (fontified t face (rainbow-delimiters-depth-1-face)) 5250 5259 (fontified t) 5259 5260 (fontified t face (rainbow-delimiters-depth-1-face)) 5260 5261 (fontified t face (rainbow-delimiters-depth-1-face)) 5261 5277 (fontified t) 5277 5278 (fontified t face (rainbow-delimiters-depth-1-face)) 5278 5280 (fontified t) 5280 5281 (fontified t face (rainbow-delimiters-depth-1-face)) 5281 5300 (fontified t) 5300 5301 (fontified t face (rainbow-delimiters-depth-1-face)) 5301 5303 (fontified t) 5303 5304 (fontified t face (rainbow-delimiters-depth-1-face)) 5304 5306 (fontified t) 5306 5311 (fontified t face font-lock-variable-name-face) 5311 5320 (fontified t) 5320 5337 (fontified t) 5337 5338 (face (rainbow-delimiters-depth-1-face) fontified t) 5338 5339 (fontified t) 5339 5343 (fontified t) 5343 5344 (fontified t face (rainbow-delimiters-depth-2-face)) 5344 5364 (fontified t) 5364 5365 (fontified t face (rainbow-delimiters-depth-3-face)) 5365 5377 (fontified t) 5377 5378 (fontified t face (rainbow-delimiters-depth-4-face)) 5378 5383 (fontified t) 5383 5384 (fontified t face (rainbow-delimiters-depth-4-face)) 5384 5385 (fontified t face (rainbow-delimiters-depth-3-face)) 5385 5405 (fontified t) 5405 5406 (fontified t face (rainbow-delimiters-depth-3-face)) 5406 5407 (fontified t) 5407 5408 (fontified t face (rainbow-delimiters-depth-3-face)) 5408 5409 (fontified t face (rainbow-delimiters-depth-2-face)) 5409 5410 (fontified t) 5410 5411 (fontified t face (rainbow-delimiters-depth-1-face)) 5411 5419 (fontified t) 5419 5426 (fontified t face font-lock-builtin-face) 5426 5427 (fontified t face (rainbow-delimiters-depth-1-face)) 5427 5432 (fontified t) 5432 5437 (fontified t face font-lock-string-face) 5437 5449 (fontified t) 5449 5455 (fontified t face font-lock-string-face) 5455 5456 (fontified t face (rainbow-delimiters-depth-1-face)) 5456 5457 (fontified t) 5457 5464 (fontified t face font-lock-variable-name-face) 5464 5476 (fontified t) 5476 5477 (fontified t face (rainbow-delimiters-depth-1-face)) 5477 5522 (fontified t) 5522 5523 (fontified t face (rainbow-delimiters-depth-2-face)) 5523 5539 (fontified t) 5539 5540 (fontified t face (rainbow-delimiters-depth-2-face)) 5540 5541 (fontified t face (rainbow-delimiters-depth-1-face)) 5541 5558 (fontified t) 5558 5559 (fontified t face (rainbow-delimiters-depth-1-face)) 5559 5575 (fontified t) 5575 5576 (fontified t face (rainbow-delimiters-depth-1-face)) 5576 5579 (fontified t) 5579 5658 (fontified t face font-lock-comment-delimiter-face) 5658 5659 (fontified t face font-lock-comment-face) 5659 5679 (fontified t) 5679 5680 (fontified t face (rainbow-delimiters-depth-1-face)) 5680 5695 (fontified t) 5695 5696 (fontified t face (rainbow-delimiters-depth-2-face)) 5696 5702 (fontified t face font-lock-string-face) 5702 5703 (fontified t face (rainbow-delimiters-depth-2-face)) 5703 5720 (fontified t) 5720 5721 (fontified t face (rainbow-delimiters-depth-2-face)) 5721 5731 (fontified t face font-lock-string-face) 5731 5732 (fontified t face (rainbow-delimiters-depth-2-face)) 5732 5733 (fontified t face (rainbow-delimiters-depth-1-face)) 5733 5742 (fontified t) 5742 5743 (fontified t face (rainbow-delimiters-depth-1-face)) 5743 5744 (fontified t face (rainbow-delimiters-depth-1-face)) 5744 5746 (fontified t) 5746 5752 (fontified t face font-lock-variable-name-face) 5752 5768 (fontified t) 5768 5769 (fontified t face (rainbow-delimiters-depth-1-face)) 5769 5776 (fontified t) 5776 5777 (fontified t face (rainbow-delimiters-depth-1-face)) 5777 5789 (fontified t) 5789 5790 (fontified t face (rainbow-delimiters-depth-1-face)) 5790 5797 (fontified t) 5797 5798 (fontified t face (rainbow-delimiters-depth-2-face)) 5798 5805 (fontified t) 5805 5806 (fontified t face (rainbow-delimiters-depth-2-face)) 5806 5815 (fontified t) 5815 5816 (fontified t face (rainbow-delimiters-depth-2-face)) 5816 5820 (fontified t) 5820 5821 (fontified t face (rainbow-delimiters-depth-2-face)) 5821 5829 (fontified t) 5829 5830 (fontified t face (rainbow-delimiters-depth-2-face)) 5830 5834 (fontified t) 5834 5835 (fontified t face (rainbow-delimiters-depth-2-face)) 5835 5836 (fontified t face (rainbow-delimiters-depth-1-face)) 5836 5839 (fontified t) 5839 5845 (fontified t) 5845 5846 (face (rainbow-delimiters-depth-1-face) fontified t) 5846 5847 (face (rainbow-delimiters-depth-1-face) fontified t) 5847 5848 (fontified t)) . 1) (undo-tree-id3498 . -5848) (undo-tree-id3499 . -5848) (undo-tree-id3500 . -4293) (undo-tree-id3501 . -3779) (undo-tree-id3502 . -3789) (undo-tree-id3503 . -4317) (undo-tree-id3504 . -4317) (undo-tree-id3505 . -4317) (undo-tree-id3506 . -4317) (undo-tree-id3507 . -4317) (undo-tree-id3508 . -38) (undo-tree-id3509 . -44) (undo-tree-id3510 . -106) (undo-tree-id3511 . -110) (undo-tree-id3512 . -871) (undo-tree-id3513 . -876) (undo-tree-id3514 . -1097) (undo-tree-id3515 . -1101) (undo-tree-id3516 . -1187) (undo-tree-id3517 . -1188) (undo-tree-id3518 . -1355) (undo-tree-id3519 . -1356) (undo-tree-id3520 . -1626) (undo-tree-id3521 . -1629) (undo-tree-id3522 . -1971) (undo-tree-id3523 . -1976) (undo-tree-id3524 . -2198) (undo-tree-id3525 . -2199) (undo-tree-id3526 . -2284) (undo-tree-id3527 . -2285) (undo-tree-id3528 . -2447) (undo-tree-id3529 . -2449) (undo-tree-id3530 . -3313) (undo-tree-id3531 . -3316) (undo-tree-id3532 . -5532) (undo-tree-id3533 . -5539) (undo-tree-id3534 . -5659) (undo-tree-id3535 . -5679) (undo-tree-id3536 . -4317) (undo-tree-id3537 . -4317) (undo-tree-id3538 . -4317) (undo-tree-id3539 . -4251) (undo-tree-id3540 . -4251) (undo-tree-id3541 . -4868) (undo-tree-id3542 . -4868) (undo-tree-id3543 . -4868) (undo-tree-id3544 . -4317) (undo-tree-id3545 . -4317) (undo-tree-id3546 . -4317) (undo-tree-id3547 . -4317) (undo-tree-id3548 . -4317) (undo-tree-id3549 . -4294) (undo-tree-id3550 . -4294) (undo-tree-id3551 . -4294) (undo-tree-id3552 . -4294) (undo-tree-id3553 . -4294) (undo-tree-id3554 . -4293) (undo-tree-id3555 . -4265) (undo-tree-id3556 . -4232) (undo-tree-id3557 . -4160) (undo-tree-id3558 . -4137) (undo-tree-id3559 . -4121) (undo-tree-id3560 . -4082) (undo-tree-id3561 . -4059) (undo-tree-id3562 . -4042) (undo-tree-id3563 . -4007) (undo-tree-id3564 . -3984) (undo-tree-id3565 . -3953) (undo-tree-id3566 . -3929) (undo-tree-id3567 . -3898) (undo-tree-id3568 . -3875) (undo-tree-id3569 . -3856) (undo-tree-id3570 . -3832) (undo-tree-id3571 . -3801) (undo-tree-id3572 . -3313) (undo-tree-id3573 . -3313) (undo-tree-id3574 . -3313) (undo-tree-id3575 . -3313) (undo-tree-id3576 . -3313) (undo-tree-id3577 . -3313) (undo-tree-id3578 . -3437) (undo-tree-id3579 . -3437) (undo-tree-id3580 . -3532) (undo-tree-id3581 . -3532) (undo-tree-id3582 . -3532) (undo-tree-id3583 . -3532) (undo-tree-id3584 . -3655) (undo-tree-id3585 . -3655) (undo-tree-id3586 . -3655) (undo-tree-id3587 . -3655) (undo-tree-id3588 . -3778) (undo-tree-id3589 . -3778) (undo-tree-id3590 . -3778) (undo-tree-id3591 . -3776) (undo-tree-id3592 . -3745) (undo-tree-id3593 . -3722) (undo-tree-id3594 . -3669) (undo-tree-id3595 . -3642) (undo-tree-id3596 . -3598) (undo-tree-id3597 . -3575) (undo-tree-id3598 . -3546) (undo-tree-id3599 . -3522) (undo-tree-id3600 . -3483) (undo-tree-id3601 . -3460) (undo-tree-id3602 . -3455) (undo-tree-id3603 . -3431) (undo-tree-id3604 . -3409) (undo-tree-id3605 . -3352) (undo-tree-id3606 . -3328) (undo-tree-id3607 . -2808) (undo-tree-id3608 . -2808) (undo-tree-id3609 . -2861) (undo-tree-id3610 . -2861) (undo-tree-id3611 . -2861) (undo-tree-id3612 . -2861) (undo-tree-id3613 . -2939) (undo-tree-id3614 . -2939) (undo-tree-id3615 . -2939) (undo-tree-id3616 . -2939) (undo-tree-id3617 . -3269) (undo-tree-id3618 . -3269) (undo-tree-id3619 . -3312) (undo-tree-id3620 . -3312) (undo-tree-id3621 . -3312) (undo-tree-id3622 . -3313) (undo-tree-id3623 . -3313) (undo-tree-id3624 . -3313) (undo-tree-id3625 . -3313) (undo-tree-id3626 . -3313) (undo-tree-id3627 . -3313) (undo-tree-id3628 . -3313) (undo-tree-id3629 . -3313) (undo-tree-id3630 . -3313) (undo-tree-id3631 . -2801) (undo-tree-id3632 . -3313) (undo-tree-id3633 . -3313) (undo-tree-id3634 . -3576) (undo-tree-id3635 . -3313) (undo-tree-id3636 . -4293) (undo-tree-id3637 . -3313) (undo-tree-id3638 . -3313) (undo-tree-id3639 . -3313) (undo-tree-id3640 . -3313) (undo-tree-id3641 . -3315) (undo-tree-id3642 . -3320) (undo-tree-id3643 . -3321) (undo-tree-id3644 . -3327) (undo-tree-id3645 . -3328) (undo-tree-id3646 . -3339) (undo-tree-id3647 . -3339) (undo-tree-id3648 . -3340) (undo-tree-id3649 . -3342) (undo-tree-id3650 . -3342) (undo-tree-id3651 . -3342) (undo-tree-id3652 . -3342) (undo-tree-id3653 . -3342) (undo-tree-id3654 . -3343) (undo-tree-id3655 . -3343) (undo-tree-id3656 . -3343) (undo-tree-id3657 . -3343) (undo-tree-id3658 . -3347) (undo-tree-id3659 . -3348) (undo-tree-id3660 . -3350) (undo-tree-id3661 . -3351) (undo-tree-id3662 . -3355) (undo-tree-id3663 . -3356) (undo-tree-id3664 . -3360) (undo-tree-id3665 . -3361) (undo-tree-id3666 . -3363) (undo-tree-id3667 . -3364) (undo-tree-id3668 . -3369) (undo-tree-id3669 . -3372) (undo-tree-id3670 . -3373) (undo-tree-id3671 . -3376) (undo-tree-id3672 . -3378) (undo-tree-id3673 . -3379) (undo-tree-id3674 . -3384) (undo-tree-id3675 . -3387) (undo-tree-id3676 . -3388) (undo-tree-id3677 . -3389) (undo-tree-id3678 . -3390) (undo-tree-id3679 . -3394) (undo-tree-id3680 . -3401) (undo-tree-id3681 . -3402) (undo-tree-id3682 . -3406) (undo-tree-id3683 . -3409) (undo-tree-id3684 . -3415) (undo-tree-id3685 . -3420) (undo-tree-id3686 . -3424) (undo-tree-id3687 . -3431) (undo-tree-id3688 . -3439) (undo-tree-id3689 . -3440) (undo-tree-id3690 . -3440) (undo-tree-id3691 . -3440) (undo-tree-id3692 . -3440) (undo-tree-id3693 . -3440) (undo-tree-id3694 . -3440) (undo-tree-id3695 . -3440) (undo-tree-id3696 . -3440) (undo-tree-id3697 . -3440) (undo-tree-id3698 . -2706) (undo-tree-id3699 . -2706) (undo-tree-id3700 . -2706) (undo-tree-id3701 . -2706) (undo-tree-id3702 . -2706) (undo-tree-id3703 . -2706) (undo-tree-id3704 . -3440) (undo-tree-id3705 . -3440) (undo-tree-id3706 . -3440) (undo-tree-id3707 . -3440) (undo-tree-id3708 . -3312) (undo-tree-id3709 . -3312) (undo-tree-id3710 . -3312) (undo-tree-id3711 . -3312) (undo-tree-id3712 . -2804) (undo-tree-id3713 . -2804) (undo-tree-id3714 . -2804) (undo-tree-id3715 . -2804) (undo-tree-id3716 . -2804) (undo-tree-id3717 . -2804) (undo-tree-id3718 . -2804) (undo-tree-id3719 . -2704) (undo-tree-id3720 . -2119) (undo-tree-id3721 . -2119) (undo-tree-id3722 . -2119) (undo-tree-id3723 . -2119) (undo-tree-id3724 . -1524) (undo-tree-id3725 . -1524) (undo-tree-id3726 . -1524) (undo-tree-id3727 . -1524) (undo-tree-id3728 . -189) (undo-tree-id3729 . -189) (undo-tree-id3730 . -218) (undo-tree-id3731 . -218) (undo-tree-id3732 . -248) (undo-tree-id3733 . -248) (undo-tree-id3734 . -943) (undo-tree-id3735 . -943) (undo-tree-id3736 . -943) (undo-tree-id3737 . -943) (undo-tree-id3738 . -943) (undo-tree-id3739 . -943) (undo-tree-id3740 . -943) (undo-tree-id3741 . -943) (undo-tree-id3742 . -943) (undo-tree-id3743 . -943) (undo-tree-id3744 . -943) (undo-tree-id3745 . -943) (undo-tree-id3746 . -943) (undo-tree-id3747 . -943) (undo-tree-id3748 . -943) (undo-tree-id3749 . -943) (undo-tree-id3750 . -943) (undo-tree-id3751 . -943) (undo-tree-id3752 . -943) (undo-tree-id3753 . -943) (undo-tree-id3754 . -943) (undo-tree-id3755 . -943) (undo-tree-id3756 . -943) (undo-tree-id3757 . -943) (undo-tree-id3758 . -1108) (undo-tree-id3759 . -1108) (undo-tree-id3760 . -1108) (undo-tree-id3761 . -1108) (undo-tree-id3762 . -1108) (undo-tree-id3763 . -1361) (undo-tree-id3764 . -1361) (undo-tree-id3765 . -1361) (undo-tree-id3766 . -1361) (undo-tree-id3767 . -1361) (undo-tree-id3768 . -1730) (undo-tree-id3769 . -1730) (undo-tree-id3770 . -1730) (undo-tree-id3771 . -1730) (undo-tree-id3772 . -2529) (undo-tree-id3773 . -2529) (undo-tree-id3774 . -2529) (undo-tree-id3775 . -2529) (undo-tree-id3776 . -2529) (undo-tree-id3777 . -2529) (undo-tree-id3778 . -3190) (undo-tree-id3779 . -3190) (undo-tree-id3780 . -3190) (undo-tree-id3781 . -3190) (undo-tree-id3782 . -3875) (undo-tree-id3783 . -3875) (undo-tree-id3784 . -3875) (undo-tree-id3785 . -3875) (undo-tree-id3786 . -4909) (undo-tree-id3787 . -4909) (undo-tree-id3788 . -5413) (undo-tree-id3789 . -5413) (undo-tree-id3790 . -5413) (undo-tree-id3791 . -5413) (undo-tree-id3792 . -5659) (undo-tree-id3793 . -5659) (undo-tree-id3794 . -5659) (undo-tree-id3795 . -5659) (undo-tree-id3796 . -4909) (undo-tree-id3797 . -4909) (undo-tree-id3798 . -4909) (undo-tree-id3799 . -4909) (undo-tree-id3800 . -4909) (undo-tree-id3801 . -4909) (undo-tree-id3802 . -4909) (undo-tree-id3803 . -4909) (undo-tree-id3804 . -4909) (undo-tree-id3805 . -4909) (undo-tree-id3806 . -4909) (undo-tree-id3807 . -4909) (undo-tree-id3808 . -4909) (undo-tree-id3809 . -4909) (undo-tree-id3810 . -4909) (undo-tree-id3811 . -4909) (undo-tree-id3812 . -4909) (undo-tree-id3813 . -4909) (undo-tree-id3814 . -4909) (undo-tree-id3815 . -4909) (undo-tree-id3816 . -4909) (undo-tree-id3817 . -4909) (undo-tree-id3818 . -4909) (undo-tree-id3819 . -4909) (undo-tree-id3820 . -4909) (undo-tree-id3821 . -4909) (undo-tree-id3822 . -4909) (undo-tree-id3823 . -4909) (undo-tree-id3824 . -4909) (undo-tree-id3825 . -4909) (undo-tree-id3826 . -4909) (undo-tree-id3827 . -4909) (undo-tree-id3828 . -4909) (undo-tree-id3829 . -4909) (undo-tree-id3830 . -4909) (undo-tree-id3831 . -4909) (undo-tree-id3832 . -4909) (undo-tree-id3833 . -4909) (undo-tree-id3834 . -4909) (undo-tree-id3835 . -4909) (undo-tree-id3836 . -4909) (undo-tree-id3837 . -4909) (undo-tree-id3838 . -4909) (undo-tree-id3839 . -4909) (undo-tree-id3840 . -4909) (undo-tree-id3841 . -4909) (undo-tree-id3842 . -4909) (undo-tree-id3843 . -4909) (undo-tree-id3844 . -4909) (undo-tree-id3845 . -4909) (undo-tree-id3846 . -4909) (undo-tree-id3847 . -4909) (undo-tree-id3848 . -4909) (undo-tree-id3849 . -4909) (undo-tree-id3850 . -4909) (undo-tree-id3851 . -4909) (undo-tree-id3852 . -4909) (undo-tree-id3853 . -4909) (undo-tree-id3854 . -4909) (undo-tree-id3855 . -4909) (undo-tree-id3856 . -4909) (undo-tree-id3857 . -4909) (undo-tree-id3858 . -4909) (undo-tree-id3859 . -4909) (undo-tree-id3860 . -4909) (undo-tree-id3861 . -4909) (undo-tree-id3862 . -4909) (undo-tree-id3863 . -4909) (undo-tree-id3864 . -4909) (undo-tree-id3865 . -4909) (undo-tree-id3866 . -4909) (undo-tree-id3867 . -4909) (undo-tree-id3868 . -4909) (undo-tree-id3869 . -4820) (undo-tree-id3870 . -4820) (undo-tree-id3871 . -4820) (undo-tree-id3872 . -4820) (undo-tree-id3873 . -4570) (undo-tree-id3874 . -4570) (undo-tree-id3875 . -4570) (undo-tree-id3876 . -4570) (undo-tree-id3877 . -4295) (undo-tree-id3878 . -4295) (undo-tree-id3879 . -4295) (undo-tree-id3880 . -4295) (undo-tree-id3881 . -4295) (undo-tree-id3882 . -4295) (undo-tree-id3883 . -4295) (undo-tree-id3884 . -4295) (undo-tree-id3885 . -4295) (undo-tree-id3886 . -4295) (undo-tree-id3887 . -4295) (undo-tree-id3888 . -4295) (undo-tree-id3889 . -4295) (undo-tree-id3890 . -4295) (undo-tree-id3891 . -4295) (undo-tree-id3892 . -4295) (undo-tree-id3893 . -4295) (undo-tree-id3894 . -4295) (undo-tree-id3895 . -4295) (undo-tree-id3896 . -4295) (undo-tree-id3897 . -4295) (undo-tree-id3898 . -4295) (undo-tree-id3899 . -4295) (undo-tree-id3900 . -4295) (undo-tree-id3901 . -4295) (undo-tree-id3902 . -4295) (undo-tree-id3903 . -4295) (undo-tree-id3904 . -4295) (undo-tree-id3905 . -4295) (undo-tree-id3906 . -4295) (undo-tree-id3907 . -4295) (undo-tree-id3908 . -4295) (undo-tree-id3909 . -4295) (undo-tree-id3910 . -4295) (undo-tree-id3911 . -4295) (undo-tree-id3912 . -4295) (undo-tree-id3913 . -4295) (undo-tree-id3914 . -4295) (undo-tree-id3915 . -4295) (undo-tree-id3916 . -4295) (undo-tree-id3917 . -4295) (undo-tree-id3918 . -4295) (undo-tree-id3919 . -4295) (undo-tree-id3920 . -4295) (undo-tree-id3921 . -4295) (undo-tree-id3922 . -4295) (undo-tree-id3923 . -4295) (undo-tree-id3924 . -4295) (undo-tree-id3925 . -4295) (undo-tree-id3926 . -4295) (undo-tree-id3927 . -4295) (undo-tree-id3928 . -4295) (undo-tree-id3929 . -4295) (undo-tree-id3930 . -4295) (undo-tree-id3931 . -4295) (undo-tree-id3932 . -4295) (undo-tree-id3933 . -4295) (undo-tree-id3934 . -4295) (undo-tree-id3935 . -4295) (undo-tree-id3936 . -4295) (undo-tree-id3937 . -4295) (undo-tree-id3938 . -4295) (undo-tree-id3939 . -4295) (undo-tree-id3940 . -4295) (undo-tree-id3941 . -4295) (undo-tree-id3942 . -4295) (undo-tree-id3943 . -4295) (undo-tree-id3944 . -4295) (undo-tree-id3945 . -4295) (undo-tree-id3946 . -4295) (undo-tree-id3947 . -4295) (undo-tree-id3948 . -4295) (undo-tree-id3949 . -4295) (undo-tree-id3950 . -4295) (undo-tree-id3951 . -4295) (undo-tree-id3952 . -4138) (undo-tree-id3953 . -4138) (undo-tree-id3954 . -4138) (undo-tree-id3955 . -4138) (undo-tree-id3956 . -4138) (undo-tree-id3957 . -4138) (undo-tree-id3958 . -4138) (undo-tree-id3959 . -4138) (undo-tree-id3960 . -4020) (undo-tree-id3961 . -4020) (undo-tree-id3962 . -4020) (undo-tree-id3963 . -4020) (undo-tree-id3964 . -3778) (undo-tree-id3965 . -3778) (undo-tree-id3966 . -3778) (undo-tree-id3967 . -3778) (undo-tree-id3968 . -3778) (undo-tree-id3969 . -3778) (undo-tree-id3970 . -3778) (undo-tree-id3971 . -3778) (undo-tree-id3972 . -3778) (undo-tree-id3973 . -3778) (undo-tree-id3974 . -3778) (undo-tree-id3975 . -3778) (undo-tree-id3976 . -3778) (undo-tree-id3977 . -3778) (undo-tree-id3978 . -3778) (undo-tree-id3979 . -3778) (undo-tree-id3980 . -3778) (undo-tree-id3981 . -3778) (undo-tree-id3982 . -3778) (undo-tree-id3983 . -3778) (undo-tree-id3984 . -3778) (undo-tree-id3985 . -3778) (undo-tree-id3986 . -4294) (undo-tree-id3987 . -4294) (undo-tree-id3988 . -4294) (undo-tree-id3989 . -4294) (undo-tree-id3990 . -5192) (undo-tree-id3991 . -5192) (undo-tree-id3992 . -5192) (undo-tree-id3993 . -5192) (undo-tree-id3994 . -5192) (undo-tree-id3995 . -5192) (undo-tree-id3996 . -5192) (undo-tree-id3997 . -5192) (undo-tree-id3998 . -5192) (undo-tree-id3999 . -5192) (undo-tree-id4000 . -5192) (undo-tree-id4001 . -5192) (undo-tree-id4002 . -5192) (undo-tree-id4003 . -5192) (undo-tree-id4004 . -5192) (undo-tree-id4005 . -5192) (undo-tree-id4006 . -5192) (undo-tree-id4007 . -5192) (undo-tree-id4008 . -5192) (undo-tree-id4009 . -5192) (undo-tree-id4010 . -5192) (undo-tree-id4011 . -5192) (undo-tree-id4012 . -5192) (undo-tree-id4013 . -5192) (undo-tree-id4014 . -5192) (undo-tree-id4015 . -5192) (undo-tree-id4016 . -5192) (undo-tree-id4017 . -5192) (undo-tree-id4018 . -5192) (undo-tree-id4019 . -5192) (undo-tree-id4020 . -5192) (undo-tree-id4021 . -5192) (undo-tree-id4022 . -5192) (undo-tree-id4023 . -5192) (undo-tree-id4024 . -5192) (undo-tree-id4025 . -5192) (undo-tree-id4026 . -5192) (undo-tree-id4027 . -5192) (undo-tree-id4028 . -5192) (undo-tree-id4029 . -5192) (undo-tree-id4030 . -5192) (undo-tree-id4031 . -5192) (undo-tree-id4032 . -4820) (undo-tree-id4033 . -4820) (undo-tree-id4034 . -4820) (undo-tree-id4035 . -4820) (undo-tree-id4036 . -4820) (undo-tree-id4037 . -4820) (undo-tree-id4038 . -4820) (undo-tree-id4039 . -4820) (undo-tree-id4040 . -4820) (undo-tree-id4041 . -4820) (undo-tree-id4042 . -4820) (undo-tree-id4043 . -4820) (undo-tree-id4044 . -4820) (undo-tree-id4045 . -4820) (undo-tree-id4046 . -4820) (undo-tree-id4047 . -4820) (undo-tree-id4048 . -4820) (undo-tree-id4049 . -4820) (undo-tree-id4050 . -4820) (undo-tree-id4051 . -4820) (undo-tree-id4052 . -4820) (undo-tree-id4053 . -4820) (undo-tree-id4054 . -4820) (undo-tree-id4055 . -4820) (undo-tree-id4056 . -4820) (undo-tree-id4057 . -4820) (undo-tree-id4058 . -4820) (undo-tree-id4059 . -4820) (undo-tree-id4060 . -4138) (undo-tree-id4061 . -4138) (undo-tree-id4062 . -4138) (undo-tree-id4063 . -4138) (undo-tree-id4064 . -3620) (undo-tree-id4065 . -3620) (undo-tree-id4066 . -3620) (undo-tree-id4067 . -3620) (undo-tree-id4068 . -2853) (undo-tree-id4069 . -2853) (undo-tree-id4070 . -2853) (undo-tree-id4071 . -2853) (undo-tree-id4072 . -2853) (undo-tree-id4073 . -2853) (undo-tree-id4074 . -2853) (undo-tree-id4075 . -2853) (undo-tree-id4076 . -2853) (undo-tree-id4077 . -2853) (undo-tree-id4078 . -2706) (undo-tree-id4079 . -2706) (undo-tree-id4080 . -2706) (undo-tree-id4081 . -2706) (undo-tree-id4082 . -2706) (undo-tree-id4083 . -2706) (undo-tree-id4084 . -2706) (undo-tree-id4085 . -2706) (undo-tree-id4086 . -2706) (undo-tree-id4087 . -2706) (undo-tree-id4088 . -2706) (undo-tree-id4089 . -2706) (undo-tree-id4090 . -2706) (undo-tree-id4091 . -2706) (undo-tree-id4092 . -2706) (undo-tree-id4093 . -2706) (undo-tree-id4094 . -2706) (undo-tree-id4095 . -2706) (undo-tree-id4096 . -2706) (undo-tree-id4097 . -2706) (undo-tree-id4098 . -2706) (undo-tree-id4099 . -2706) (undo-tree-id4100 . -3313) (undo-tree-id4101 . -3313) (undo-tree-id4102 . -3313) (undo-tree-id4103 . -3313) (undo-tree-id4104 . -3313) (undo-tree-id4105 . -3313) (undo-tree-id4106 . -3313) (undo-tree-id4107 . -3313) (undo-tree-id4108 . -3313) (undo-tree-id4109 . -3313) (undo-tree-id4110 . -3313) (undo-tree-id4111 . -3313) (undo-tree-id4112 . -3313) (undo-tree-id4113 . -3313) (undo-tree-id4114 . -3313) (undo-tree-id4115 . -3313) (undo-tree-id4116 . -3313) (undo-tree-id4117 . -3313) (undo-tree-id4118 . -3313) (undo-tree-id4119 . -3313) (undo-tree-id4120 . -3313) (undo-tree-id4121 . -3313) (undo-tree-id4122 . -3313) (undo-tree-id4123 . -3576) (undo-tree-id4124 . -3576) (undo-tree-id4125 . -3576) (undo-tree-id4126 . -3576) (undo-tree-id4127 . -3576) (undo-tree-id4128 . -3576) (undo-tree-id4129 . -3576) (undo-tree-id4130 . -3576) (undo-tree-id4131 . -3576) (undo-tree-id4132 . -3576) (undo-tree-id4133 . -3576) (undo-tree-id4134 . -3576) (undo-tree-id4135 . -3576) (undo-tree-id4136 . -3576) (undo-tree-id4137 . -3576) (undo-tree-id4138 . -3576) (undo-tree-id4139 . -3576) (undo-tree-id4140 . -3576) (undo-tree-id4141 . -3576) (undo-tree-id4142 . -4293) (undo-tree-id4143 . -4293) (undo-tree-id4144 . -4293) (undo-tree-id4145 . -4293) (undo-tree-id4146 . -4293) (undo-tree-id4147 . -4293) (undo-tree-id4148 . -4293) (undo-tree-id4149 . -4293) (undo-tree-id4150 . -4293) (undo-tree-id4151 . -4293) (undo-tree-id4152 . -4293) (undo-tree-id4153 . -4293) (t 25759 41333 793093 326000)) (25759 41333 787968 53000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4592 . 4593) (nil fontified nil 3689 . 4593) (3689 . 4593) (#("def plot_learning_curves(loss, val_loss):
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))
    plt.axis([1, 20, 0, 0.05])
    plt.legend(fontsize=14)
    plt.xlabel(\"Epochs\")
    plt.ylabel(\"Loss\")
    plt.grid(True)

" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 39 (fontified t) 39 40 (fontified t face (rainbow-delimiters-depth-1-face)) 40 42 (fontified t) 42 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-1-face)) 55 64 (fontified t) 64 65 (fontified t face (rainbow-delimiters-depth-2-face)) 65 68 (fontified t face font-lock-builtin-face) 68 69 (fontified t face (rainbow-delimiters-depth-3-face)) 69 73 (fontified t) 73 74 (fontified t face (rainbow-delimiters-depth-3-face)) 74 75 (fontified t face (rainbow-delimiters-depth-2-face)) 75 89 (fontified t) 89 94 (fontified t face font-lock-string-face) 94 102 (fontified t) 102 117 (fontified t face font-lock-string-face) 117 118 (fontified t face (rainbow-delimiters-depth-1-face)) 118 131 (fontified t) 131 132 (fontified t face (rainbow-delimiters-depth-1-face)) 132 141 (fontified t) 141 142 (fontified t face (rainbow-delimiters-depth-2-face)) 142 145 (fontified t face font-lock-builtin-face) 145 146 (fontified t face (rainbow-delimiters-depth-3-face)) 146 154 (fontified t) 154 155 (fontified t face (rainbow-delimiters-depth-3-face)) 155 156 (fontified t face (rainbow-delimiters-depth-2-face)) 156 172 (fontified t) 172 177 (fontified t face font-lock-string-face) 177 185 (fontified t) 185 202 (fontified t face font-lock-string-face) 202 203 (fontified t face (rainbow-delimiters-depth-1-face)) 203 215 (fontified t) 215 216 (fontified t face (rainbow-delimiters-depth-1-face)) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 241 (fontified t) 241 242 (fontified t face (rainbow-delimiters-depth-1-face)) 242 264 (fontified t) 264 265 (fontified t face (rainbow-delimiters-depth-2-face)) 265 273 (fontified t) 273 277 (fontified t face font-lock-constant-face) 277 278 (fontified t face (rainbow-delimiters-depth-2-face)) 278 279 (fontified t face (rainbow-delimiters-depth-1-face)) 279 292 (fontified t) 292 293 (fontified t face (rainbow-delimiters-depth-1-face)) 293 294 (fontified t face (rainbow-delimiters-depth-2-face)) 294 308 (fontified t) 308 309 (fontified t face (rainbow-delimiters-depth-2-face)) 309 310 (fontified t face (rainbow-delimiters-depth-1-face)) 310 325 (fontified t) 325 326 (fontified t face (rainbow-delimiters-depth-1-face)) 326 337 (fontified t) 337 338 (fontified t face (rainbow-delimiters-depth-1-face)) 338 353 (fontified t) 353 354 (fontified t face (rainbow-delimiters-depth-1-face)) 354 362 (fontified t face font-lock-string-face) 362 363 (fontified t face (rainbow-delimiters-depth-1-face)) 363 378 (fontified t) 378 379 (fontified t face (rainbow-delimiters-depth-1-face)) 379 385 (fontified t face font-lock-string-face) 385 386 (fontified t face (rainbow-delimiters-depth-1-face)) 386 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 404 (fontified t face font-lock-constant-face) 404 405 (fontified t face (rainbow-delimiters-depth-1-face)) 405 407 (fontified t)) . 3689) (undo-tree-id5763 . 384) (undo-tree-id5764 . -406) (undo-tree-id5765 . -407) (undo-tree-id5766 . 384) (undo-tree-id5767 . -23) (undo-tree-id5768 . -23) (undo-tree-id5769 . -197) (undo-tree-id5770 . -201) (undo-tree-id5771 . -23) (undo-tree-id5772 . -23) (undo-tree-id5773 . -23) (undo-tree-id5774 . -23) (undo-tree-id5775 . -46) (undo-tree-id5776 . -46) (undo-tree-id5777 . -46) (undo-tree-id5778 . -46) (undo-tree-id5779 . -123) (undo-tree-id5780 . -123) (undo-tree-id5781 . -123) (undo-tree-id5782 . -123) (undo-tree-id5783 . -343) (undo-tree-id5784 . -343) (undo-tree-id5785 . -368) (undo-tree-id5786 . -368) (undo-tree-id5787 . -23) (undo-tree-id5788 . -23) (undo-tree-id5789 . -23) (undo-tree-id5790 . -23) (undo-tree-id5791 . -23) (undo-tree-id5792 . -23) (undo-tree-id5793 . -23) (undo-tree-id5794 . -23) (undo-tree-id5795 . -23) (undo-tree-id5796 . -23) (undo-tree-id5797 . -23) (undo-tree-id5798 . -23) (undo-tree-id5799 . -23) (undo-tree-id5800 . -23) (undo-tree-id5801 . -23) (undo-tree-id5802 . -23) (undo-tree-id5803 . -23) (undo-tree-id5804 . -65) (undo-tree-id5805 . -65) (undo-tree-id5806 . -65) (undo-tree-id5807 . -65) (undo-tree-id5808 . -65) (undo-tree-id5809 . -23) (undo-tree-id5810 . -42) (undo-tree-id5811 . -42) (undo-tree-id5812 . -42) (undo-tree-id5813 . -119) (undo-tree-id5814 . -204) (undo-tree-id5815 . -280) (undo-tree-id5816 . -311) (undo-tree-id5817 . -339) (undo-tree-id5818 . -364) (undo-tree-id5819 . -387) (undo-tree-id5820 . -387) (undo-tree-id5821 . -387) (undo-tree-id5822 . -387) (undo-tree-id5823 . -387) (undo-tree-id5824 . -387) (undo-tree-id5825 . -387) (undo-tree-id5826 . -387) (undo-tree-id5827 . -406) (undo-tree-id5828 . -407) (undo-tree-id5829 . -406) (undo-tree-id5830 . -42) (undo-tree-id5831 . -119) (undo-tree-id5832 . -119) (undo-tree-id5833 . -119) (undo-tree-id5834 . -119) (undo-tree-id5835 . -119) (undo-tree-id5836 . -204) (undo-tree-id5837 . -280) (undo-tree-id5838 . -311) (undo-tree-id5839 . -339) (undo-tree-id5840 . -364) (undo-tree-id5841 . -387) (undo-tree-id5842 . -406) (undo-tree-id5843 . -406) (undo-tree-id5844 . -406) (undo-tree-id5845 . -406) (undo-tree-id5846 . -406) (undo-tree-id5847 . -407) (undo-tree-id5848 . -407) (undo-tree-id5849 . -407) 4096 (t 25759 41396 691576 205000)) nil (25759 41448 897509 186000) 0 nil] [nil nil ((#("k" 0 1 (fontified t face font-lock-function-name-face)) . -3724) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) 3725 (3712 . 3725) (t 25759 41396 691576 205000)) ((#("kkkkkkkkkkkkk" 0 12 (fontified nil face font-lock-function-name-face) 12 13 (fontified nil face font-lock-function-name-face)) . 3712) (undo-tree-id5309 . -11) (undo-tree-id5310 . -13) (undo-tree-id5311 . -13) (undo-tree-id5312 . -11) (undo-tree-id5313 . -11) (3724 . 3725)) (25759 41399 847562 917000) 0 nil])
nil
([nil nil ((1 . 6117) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate  second wave by applying another sinusoidal function to the time array
    # Similar to first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise  by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.
    
    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")
    
    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")
    
    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))
    
    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])
    
    # Add a legend to the plot
    plt.legend(fontsize=14)
    
    # Set the x-axis label
    plt.xlabel(\"Epochs\")
    
    # Set the y-axis label
    plt.ylabel(\"Loss\")
    
    # Enable grid lines on the plot
    plt.grid(True)
###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential(
    [keras.layers.Flatten(input_shape=[50, 1]), keras.layers.Dense(1)]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))


model.evaluate(X_valid, y_valid)


###############################################################################
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()
" 1894 1899 (fontified t) 1899 1901 (fontified t face font-lock-comment-delimiter-face) 1901 1977 (fontified t face font-lock-comment-face) 1977 1981 (fontified t) 1981 1983 (fontified t face font-lock-comment-delimiter-face) 1983 2043 (fontified t face font-lock-comment-face) 2043 2047 (fontified t) 2047 2053 (fontified t face font-lock-variable-name-face) 2053 2068 (fontified t) 2068 2069 (fontified t face (rainbow-delimiters-depth-1-face)) 2069 2070 (fontified t face (rainbow-delimiters-depth-2-face)) 2070 2085 (fontified t) 2085 2086 (fontified t face (rainbow-delimiters-depth-2-face)) 2086 2089 (fontified t) 2089 2090 (fontified t face (rainbow-delimiters-depth-2-face)) 2090 2105 (fontified t) 2105 2106 (fontified t face (rainbow-delimiters-depth-2-face)) 2106 2107 (fontified t face (rainbow-delimiters-depth-1-face)) 2107 2109 (fontified t) 2109 2111 (fontified t face font-lock-comment-delimiter-face) 2111 2118 (fontified t face font-lock-comment-face) 2118 2123 (fontified t) 2123 2125 (fontified t face font-lock-comment-delimiter-face) 2125 2205 (fontified t face font-lock-comment-face) 2205 2209 (fontified t) 2209 2211 (fontified t face font-lock-comment-delimiter-face) 2211 2290 (fontified t face font-lock-comment-face) 2290 2294 (fontified t) 2294 2300 (fontified t face font-lock-variable-name-face) 2300 2316 (fontified t) 2316 2317 (fontified t face (rainbow-delimiters-depth-1-face)) 2317 2318 (fontified t face (rainbow-delimiters-depth-2-face)) 2318 2333 (fontified t) 2333 2334 (fontified t face (rainbow-delimiters-depth-2-face)) 2334 2337 (fontified t) 2337 2338 (fontified t face (rainbow-delimiters-depth-2-face)) 2338 2353 (fontified t) 2353 2354 (fontified t face (rainbow-delimiters-depth-2-face)) 2354 2355 (fontified t face (rainbow-delimiters-depth-1-face)) 2355 2357 (fontified t) 2357 2359 (fontified t face font-lock-comment-delimiter-face) 2359 2368 (fontified t face font-lock-comment-face) 2368 2373 (fontified t) 2373 2375 (fontified t face font-lock-comment-delimiter-face) 2375 2394 (fontified t face font-lock-comment-face) 2394 2454 (face font-lock-comment-face fontified t) 2454 2458 (fontified t) 2458 2464 (fontified t face font-lock-variable-name-face) 2464 2474 (fontified t) 2474 2475 (fontified t face (rainbow-delimiters-depth-1-face)) 2475 2489 (fontified t) 2489 2490 (fontified t face (rainbow-delimiters-depth-2-face)) 2490 2509 (fontified t) 2509 2510 (fontified t face (rainbow-delimiters-depth-2-face)) 2510 2516 (fontified t) 2516 2517 (fontified t face (rainbow-delimiters-depth-1-face)) 2517 2519 (fontified t) 2519 2521 (fontified t face font-lock-comment-delimiter-face) 2521 2529 (fontified t face font-lock-comment-face) 2529 2534 (fontified t) 2534 2536 (fontified t face font-lock-comment-delimiter-face) 2536 2604 (fontified t face font-lock-comment-face) 2604 2608 (fontified t) 2608 2610 (fontified t face font-lock-comment-delimiter-face) 2610 2650 (fontified t face font-lock-comment-face) 2650 2654 (fontified t) 2654 2660 (fontified t face font-lock-keyword-face) 2660 2667 (fontified t) 2667 2668 (fontified t face (rainbow-delimiters-depth-1-face)) 2668 2683 (fontified t) 2683 2684 (fontified t face (rainbow-delimiters-depth-1-face)) 2684 2691 (fontified t) 2691 2692 (fontified t face (rainbow-delimiters-depth-1-face)) 2692 2702 (fontified t) 2702 2703 (fontified t face (rainbow-delimiters-depth-1-face)) 2703 2704 (fontified t) 2704 2705 (fontified t) 2705 2706 (fontified t) 2706 2709 (fontified t face font-lock-keyword-face) 2709 2710 (fontified t) 2710 2721 (fontified t face font-lock-function-name-face) 2721 2722 (fontified t face (rainbow-delimiters-depth-1-face)) 2722 2737 (fontified t) 2737 2741 (fontified t face font-lock-constant-face) 2741 2750 (fontified t) 2750 2754 (fontified t face font-lock-constant-face) 2754 2764 (fontified t) 2764 2769 (fontified t face font-lock-string-face) 2769 2779 (fontified t) 2779 2787 (fontified t face font-lock-string-face) 2787 2796 (fontified t) 2796 2800 (fontified t face font-lock-constant-face) 2800 2801 (fontified t) 2801 2802 (fontified t face (rainbow-delimiters-depth-1-face)) 2802 2808 (fontified t) 2808 2810 (fontified t face font-lock-comment-delimiter-face) 2810 2826 (fontified t face font-lock-comment-face) 2826 2838 (fontified t) 2838 2839 (fontified t face (rainbow-delimiters-depth-1-face)) 2839 2847 (fontified t) 2847 2851 (fontified t face font-lock-string-face) 2851 2852 (fontified t face (rainbow-delimiters-depth-1-face)) 2852 2858 (fontified t) 2858 2860 (fontified t face font-lock-comment-delimiter-face) 2860 2895 (fontified t face font-lock-comment-face) 2895 2899 (fontified t) 2899 2901 (fontified t face font-lock-keyword-face) 2901 2904 (fontified t) 2904 2906 (fontified t face font-lock-keyword-face) 2906 2907 (fontified t) 2907 2910 (fontified t face font-lock-keyword-face) 2910 2911 (fontified t) 2911 2915 (fontified t face font-lock-constant-face) 2915 2933 (fontified t) 2933 2934 (fontified t face (rainbow-delimiters-depth-1-face)) 2934 2946 (fontified t) 2946 2950 (fontified t face font-lock-string-face) 2950 2958 (fontified t) 2958 2966 (fontified t face font-lock-string-face) 2966 2967 (fontified t face (rainbow-delimiters-depth-1-face)) 2967 2973 (fontified t) 2973 2975 (fontified t face font-lock-comment-delimiter-face) 2975 3013 (fontified t face font-lock-comment-face) 3013 3017 (fontified t) 3017 3019 (fontified t face font-lock-keyword-face) 3019 3027 (fontified t) 3027 3029 (fontified t face font-lock-keyword-face) 3029 3030 (fontified t) 3030 3033 (fontified t face font-lock-keyword-face) 3033 3034 (fontified t) 3034 3038 (fontified t face font-lock-constant-face) 3038 3056 (fontified t) 3056 3057 (fontified t face (rainbow-delimiters-depth-1-face)) 3057 3074 (fontified t) 3074 3078 (fontified t face font-lock-string-face) 3078 3101 (fontified t) 3101 3113 (fontified t face font-lock-string-face) 3113 3114 (fontified t face (rainbow-delimiters-depth-1-face)) 3114 3120 (fontified t) 3120 3122 (fontified t face font-lock-comment-delimiter-face) 3122 3152 (fontified t face font-lock-comment-face) 3152 3164 (fontified t) 3164 3165 (fontified t face (rainbow-delimiters-depth-1-face)) 3165 3169 (fontified t face font-lock-constant-face) 3169 3170 (fontified t face (rainbow-delimiters-depth-1-face)) 3170 3171 (fontified t) 3171 3172 (fontified t) 3172 3176 (fontified t) 3176 3178 (fontified t face font-lock-comment-delimiter-face) 3178 3182 (fontified t face font-lock-comment-face) 3182 3211 (fontified t face font-lock-comment-face) 3211 3215 (fontified t) 3215 3217 (fontified t face font-lock-keyword-face) 3217 3245 (fontified t) 3245 3246 (fontified t face (rainbow-delimiters-depth-1-face)) 3246 3266 (fontified t) 3266 3267 (fontified t face (rainbow-delimiters-depth-1-face)) 3267 3273 (fontified t) 3273 3275 (fontified t face font-lock-comment-delimiter-face) 3275 3308 (fontified t face font-lock-comment-face) 3308 3312 (fontified t) 3312 3314 (fontified t face font-lock-keyword-face) 3314 3342 (fontified t) 3342 3343 (fontified t face (rainbow-delimiters-depth-1-face)) 3343 3375 (fontified t) 3375 3376 (fontified t face (rainbow-delimiters-depth-1-face)) 3376 3382 (fontified t) 3382 3384 (fontified t face font-lock-comment-delimiter-face) 3384 3413 (fontified t face font-lock-comment-face) 3413 3427 (fontified t) 3427 3428 (fontified t face (rainbow-delimiters-depth-1-face)) 3428 3450 (fontified t) 3450 3451 (fontified t face (rainbow-delimiters-depth-1-face)) 3451 3457 (fontified t) 3457 3459 (fontified t face font-lock-comment-delimiter-face) 3459 3492 (fontified t face font-lock-comment-face) 3492 3504 (fontified t) 3504 3505 (fontified t face (rainbow-delimiters-depth-1-face)) 3505 3506 (fontified t face (rainbow-delimiters-depth-2-face)) 3506 3527 (fontified t) 3527 3528 (fontified t face (rainbow-delimiters-depth-2-face)) 3528 3529 (fontified t face (rainbow-delimiters-depth-1-face)) 3529 3535 (fontified t) 3535 3537 (fontified t face font-lock-comment-delimiter-face) 3537 3603 (fontified t face font-lock-comment-face) 3603 3607 (fontified t) 3607 3609 (fontified t face font-lock-keyword-face) 3609 3617 (fontified t) 3617 3620 (fontified t face font-lock-keyword-face) 3620 3621 (fontified t) 3621 3622 (fontified t face (rainbow-delimiters-depth-1-face)) 3622 3624 (fontified t) 3624 3626 (fontified t face font-lock-keyword-face) 3626 3633 (fontified t) 3633 3634 (fontified t face (rainbow-delimiters-depth-1-face)) 3634 3654 (fontified t) 3654 3655 (fontified t face (rainbow-delimiters-depth-1-face)) 3655 3672 (fontified t) 3672 3682 (face font-lock-string-face fontified t) 3682 3684 (face font-lock-string-face fontified t) 3684 3685 (face (rainbow-delimiters-depth-1-face) fontified t) 3685 3686 (fontified t) 3686 3688 (fontified t) 3688 3691 (fontified t face font-lock-keyword-face) 3691 3692 (fontified t) 3692 3712 (fontified t face font-lock-function-name-face) 3712 3713 (fontified t face (rainbow-delimiters-depth-1-face)) 3713 3727 (fontified t) 3727 3728 (fontified t face (rainbow-delimiters-depth-1-face)) 3728 3734 (fontified t) 3734 3735 (fontified t syntax-table (15) face font-lock-doc-face) 3735 3914 (fontified t face font-lock-doc-face) 3914 3915 (fontified t syntax-table (15) face font-lock-doc-face) 3915 3920 (fontified t) 3920 3922 (fontified t face font-lock-comment-delimiter-face) 3922 3951 (fontified t face font-lock-comment-face) 3951 3963 (fontified t) 3963 3964 (fontified t face (rainbow-delimiters-depth-1-face)) 3964 3973 (fontified t) 3973 3974 (fontified t face (rainbow-delimiters-depth-2-face)) 3974 3977 (fontified t face font-lock-builtin-face) 3977 3978 (fontified t face (rainbow-delimiters-depth-3-face)) 3978 3982 (fontified t) 3982 3983 (fontified t face (rainbow-delimiters-depth-3-face)) 3983 3984 (fontified t face (rainbow-delimiters-depth-2-face)) 3984 3998 (fontified t) 3998 4003 (fontified t face font-lock-string-face) 4003 4011 (fontified t) 4011 4026 (fontified t face font-lock-string-face) 4026 4027 (fontified t face (rainbow-delimiters-depth-1-face)) 4027 4037 (fontified t) 4037 4039 (fontified t face font-lock-comment-delimiter-face) 4039 4070 (fontified t face font-lock-comment-face) 4070 4082 (fontified t) 4082 4083 (fontified t face (rainbow-delimiters-depth-1-face)) 4083 4092 (fontified t) 4092 4093 (fontified t face (rainbow-delimiters-depth-2-face)) 4093 4096 (fontified t face font-lock-builtin-face) 4096 4097 (fontified t face (rainbow-delimiters-depth-3-face)) 4097 4105 (fontified t) 4105 4106 (fontified t face (rainbow-delimiters-depth-3-face)) 4106 4107 (fontified t face (rainbow-delimiters-depth-2-face)) 4107 4123 (fontified t) 4123 4128 (fontified t face font-lock-string-face) 4128 4136 (fontified t) 4136 4153 (fontified t face font-lock-string-face) 4153 4154 (fontified t face (rainbow-delimiters-depth-1-face)) 4154 4164 (fontified t) 4164 4166 (fontified t face font-lock-comment-delimiter-face) 4166 4188 (fontified t face font-lock-comment-face) 4188 4206 (fontified t face font-lock-comment-face) 4206 4217 (fontified t) 4217 4218 (fontified t face (rainbow-delimiters-depth-1-face)) 4218 4219 (fontified t face (rainbow-delimiters-depth-1-face)) 4219 4243 (fontified t) 4243 4244 (fontified t face (rainbow-delimiters-depth-1-face)) 4244 4266 (fontified t) 4266 4267 (fontified t face (rainbow-delimiters-depth-2-face)) 4267 4275 (fontified t) 4275 4279 (fontified t face font-lock-constant-face) 4279 4280 (fontified t face (rainbow-delimiters-depth-2-face)) 4280 4281 (fontified t face (rainbow-delimiters-depth-1-face)) 4281 4291 (fontified t) 4291 4293 (fontified t face font-lock-comment-delimiter-face) 4293 4326 (fontified t face font-lock-comment-face) 4326 4338 (fontified t) 4338 4339 (fontified t face (rainbow-delimiters-depth-1-face)) 4339 4340 (fontified t face (rainbow-delimiters-depth-2-face)) 4340 4354 (fontified t) 4354 4355 (fontified t face (rainbow-delimiters-depth-2-face)) 4355 4356 (fontified t face (rainbow-delimiters-depth-1-face)) 4356 4366 (fontified t) 4366 4368 (fontified t face font-lock-comment-delimiter-face) 4368 4393 (fontified t face font-lock-comment-face) 4393 4407 (fontified t) 4407 4408 (fontified t face (rainbow-delimiters-depth-1-face)) 4408 4419 (fontified t) 4419 4420 (fontified t face (rainbow-delimiters-depth-1-face)) 4420 4430 (fontified t) 4430 4432 (fontified t face font-lock-comment-delimiter-face) 4432 4453 (fontified t face font-lock-comment-face) 4453 4467 (fontified t) 4467 4468 (fontified t face (rainbow-delimiters-depth-1-face)) 4468 4476 (fontified t face font-lock-string-face) 4476 4477 (fontified t face (rainbow-delimiters-depth-1-face)) 4477 4487 (fontified t) 4487 4489 (fontified t face font-lock-comment-delimiter-face) 4489 4510 (fontified t face font-lock-comment-face) 4510 4524 (fontified t) 4524 4525 (fontified t face (rainbow-delimiters-depth-1-face)) 4525 4531 (fontified t face font-lock-string-face) 4531 4532 (fontified t face (rainbow-delimiters-depth-1-face)) 4532 4542 (fontified t) 4542 4544 (fontified t face font-lock-comment-delimiter-face) 4544 4574 (fontified t face font-lock-comment-face) 4574 4586 (fontified t) 4586 4587 (fontified t face (rainbow-delimiters-depth-1-face)) 4587 4591 (fontified t face font-lock-constant-face) 4591 4592 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 4592 4593 (fontified t) 4593 4672 (fontified t face font-lock-comment-delimiter-face) 4672 4673 (fontified t face font-lock-comment-face) 4673 4680 (fontified t face font-lock-variable-name-face) 4680 4683 (fontified t) 4683 4686 (fontified t) 4686 4692 (fontified t face font-lock-variable-name-face) 4692 4715 (fontified t) 4715 4716 (fontified t face (rainbow-delimiters-depth-1-face)) 4716 4727 (fontified t) 4727 4734 (fontified t) 4734 4735 (fontified t face (rainbow-delimiters-depth-1-face)) 4735 4736 (fontified t) 4736 4743 (fontified t face font-lock-variable-name-face) 4743 4745 (fontified t) 4745 4752 (fontified t face font-lock-variable-name-face) 4752 4761 (fontified t) 4761 4762 (fontified t face (rainbow-delimiters-depth-1-face)) 4762 4777 (fontified t) 4777 4778 (fontified t face (rainbow-delimiters-depth-1-face)) 4778 4786 (fontified t) 4786 4787 (fontified t face (rainbow-delimiters-depth-1-face)) 4787 4796 (fontified t) 4796 4797 (fontified t face (rainbow-delimiters-depth-1-face)) 4797 4798 (fontified t) 4798 4805 (fontified t face font-lock-variable-name-face) 4805 4807 (fontified t) 4807 4814 (fontified t face font-lock-variable-name-face) 4814 4823 (fontified t) 4823 4824 (fontified t face (rainbow-delimiters-depth-1-face)) 4824 4843 (fontified t) 4843 4844 (fontified t face (rainbow-delimiters-depth-1-face)) 4844 4852 (fontified t) 4852 4853 (fontified t face (rainbow-delimiters-depth-1-face)) 4853 4866 (fontified t) 4866 4867 (fontified t face (rainbow-delimiters-depth-1-face)) 4867 4868 (fontified t) 4868 4874 (fontified t face font-lock-variable-name-face) 4874 4876 (fontified t) 4876 4882 (fontified t face font-lock-variable-name-face) 4882 4891 (fontified t) 4891 4892 (fontified t face (rainbow-delimiters-depth-1-face)) 4892 4907 (fontified t) 4907 4908 (fontified t face (rainbow-delimiters-depth-1-face)) 4908 4916 (fontified t) 4916 4917 (fontified t face (rainbow-delimiters-depth-1-face)) 4917 4926 (fontified t) 4926 4927 (fontified t face (rainbow-delimiters-depth-1-face)) 4927 4928 (fontified t) 4928 4933 (fontified t face font-lock-keyword-face) 4933 4934 (fontified t face (rainbow-delimiters-depth-1-face)) 4934 4962 (fontified t) 4962 4963 (fontified t face (rainbow-delimiters-depth-1-face)) 4963 4965 (fontified t) 4965 5044 (fontified t face font-lock-comment-delimiter-face) 5044 5045 (fontified t face font-lock-comment-face) 5045 5048 (fontified t face font-lock-variable-name-face) 5048 5050 (fontified t) 5050 5054 (fontified t face font-lock-variable-name-face) 5054 5069 (fontified t) 5069 5070 (fontified t face (rainbow-delimiters-depth-1-face)) 5070 5093 (fontified t) 5093 5095 (fontified t) 5095 5099 (face font-lock-constant-face fontified t) 5099 5109 (fontified t) 5109 5110 (face (rainbow-delimiters-depth-2-face) fontified t) 5110 5115 (fontified t) 5115 5116 (face (rainbow-delimiters-depth-2-face) fontified t) 5116 5117 (face (rainbow-delimiters-depth-1-face) fontified t) 5117 5118 (fontified t) 5118 5121 (fontified t face font-lock-keyword-face) 5121 5126 (fontified t) 5126 5128 (fontified t face font-lock-keyword-face) 5128 5129 (fontified t) 5129 5134 (fontified t face font-lock-builtin-face) 5134 5135 (fontified t face (rainbow-delimiters-depth-1-face)) 5135 5136 (fontified t) 5136 5137 (fontified t face (rainbow-delimiters-depth-1-face)) 5137 5150 (fontified t) 5150 5151 (fontified t face (rainbow-delimiters-depth-1-face)) 5151 5155 (fontified t) 5155 5156 (fontified t face (rainbow-delimiters-depth-2-face)) 5156 5159 (fontified t) 5159 5160 (fontified t face (rainbow-delimiters-depth-2-face)) 5160 5161 (fontified t face (rainbow-delimiters-depth-1-face)) 5161 5177 (fontified t) 5177 5178 (fontified t face (rainbow-delimiters-depth-1-face)) 5178 5186 (fontified t) 5186 5194 (fontified t) 5194 5195 (fontified t face (rainbow-delimiters-depth-2-face)) 5195 5204 (fontified t) 5204 5205 (fontified t face (rainbow-delimiters-depth-2-face)) 5205 5207 (fontified t) 5207 5222 (fontified t) 5222 5223 (fontified t face (rainbow-delimiters-depth-2-face)) 5223 5229 (fontified t) 5229 5230 (fontified t face (rainbow-delimiters-depth-2-face)) 5230 5236 (fontified t) 5236 5248 (fontified t) 5248 5249 (fontified t face (rainbow-delimiters-depth-2-face)) 5249 5257 (fontified t face font-lock-string-face) 5257 5258 (fontified t) 5258 5260 (fontified t face font-lock-keyword-face) 5260 5270 (fontified t) 5270 5274 (fontified t face font-lock-keyword-face) 5274 5275 (fontified t) 5275 5279 (fontified t face font-lock-constant-face) 5279 5280 (fontified t face (rainbow-delimiters-depth-2-face)) 5280 5282 (fontified t) 5282 5297 (fontified t) 5297 5298 (fontified t face (rainbow-delimiters-depth-2-face)) 5298 5306 (fontified t) 5306 5307 (fontified t face (rainbow-delimiters-depth-2-face)) 5307 5313 (fontified t) 5313 5314 (fontified t face (rainbow-delimiters-depth-1-face)) 5314 5323 (fontified t) 5323 5324 (fontified t face (rainbow-delimiters-depth-1-face)) 5324 5325 (fontified t face (rainbow-delimiters-depth-1-face)) 5325 5327 (fontified t) 5327 5333 (fontified t face font-lock-variable-name-face) 5333 5343 (fontified t) 5343 5344 (fontified t face (rainbow-delimiters-depth-1-face)) 5344 5349 (fontified t) 5349 5350 (fontified t face (rainbow-delimiters-depth-1-face)) 5350 5358 (fontified t) 5358 5359 (fontified t face (rainbow-delimiters-depth-1-face)) 5359 5390 (fontified t) 5390 5391 (fontified t face (rainbow-delimiters-depth-2-face)) 5391 5406 (fontified t) 5406 5407 (fontified t face (rainbow-delimiters-depth-2-face)) 5407 5408 (fontified t face (rainbow-delimiters-depth-1-face)) 5408 5410 (fontified t) 5410 5489 (fontified t face font-lock-comment-delimiter-face) 5489 5490 (fontified t face font-lock-comment-face) 5490 5501 (fontified t) 5501 5502 (fontified t face (rainbow-delimiters-depth-1-face)) 5502 5509 (fontified t) 5509 5510 (fontified t face (rainbow-delimiters-depth-2-face)) 5510 5517 (fontified t) 5517 5518 (fontified t face (rainbow-delimiters-depth-2-face)) 5518 5527 (fontified t) 5527 5528 (fontified t face (rainbow-delimiters-depth-2-face)) 5528 5532 (fontified t) 5532 5533 (fontified t face (rainbow-delimiters-depth-2-face)) 5533 5541 (fontified t) 5541 5542 (fontified t face (rainbow-delimiters-depth-2-face)) 5542 5546 (fontified t) 5546 5547 (fontified t face (rainbow-delimiters-depth-2-face)) 5547 5548 (fontified t face (rainbow-delimiters-depth-1-face)) 5548 5557 (fontified t) 5557 5558 (fontified t face (rainbow-delimiters-depth-1-face)) 5558 5559 (fontified t face (rainbow-delimiters-depth-1-face)) 5559 5575 (fontified t) 5575 5576 (fontified t face (rainbow-delimiters-depth-1-face)) 5576 5578 (fontified t) 5578 5579 (fontified t face (rainbow-delimiters-depth-1-face)) 5579 5598 (fontified t) 5598 5599 (fontified t face (rainbow-delimiters-depth-1-face)) 5599 5601 (fontified t) 5601 5602 (fontified t face (rainbow-delimiters-depth-1-face)) 5602 5604 (fontified t) 5604 5609 (fontified t face font-lock-variable-name-face) 5609 5618 (fontified t) 5618 5635 (fontified t) 5635 5636 (face (rainbow-delimiters-depth-1-face) fontified t) 5636 5637 (fontified t) 5641 5642 (face (rainbow-delimiters-depth-2-face)) 5662 5663 (face (rainbow-delimiters-depth-3-face)) 5675 5676 (face (rainbow-delimiters-depth-4-face)) 5681 5682 (face (rainbow-delimiters-depth-4-face)) 5682 5683 (face (rainbow-delimiters-depth-3-face)) 5703 5704 (face (rainbow-delimiters-depth-3-face)) 5705 5706 (face (rainbow-delimiters-depth-3-face)) 5706 5707 (face (rainbow-delimiters-depth-2-face)) 5708 5709 (face (rainbow-delimiters-depth-1-face)) 5717 5724 (face font-lock-builtin-face) 5724 5725 (face (rainbow-delimiters-depth-1-face)) 5730 5735 (face font-lock-string-face) 5747 5753 (face font-lock-string-face) 5753 5754 (face (rainbow-delimiters-depth-1-face)) 5755 5762 (face font-lock-variable-name-face) 5774 5775 (face (rainbow-delimiters-depth-1-face)) 5820 5821 (face (rainbow-delimiters-depth-2-face)) 5837 5838 (face (rainbow-delimiters-depth-2-face)) 5838 5839 (face (rainbow-delimiters-depth-1-face))) . 1) (undo-tree-id5314 . 1554) (undo-tree-id5315 . -3688) (undo-tree-id5316 . -4591) (undo-tree-id5317 . -3688) (undo-tree-id5318 . -3688) (undo-tree-id5319 . 1554) (undo-tree-id5320 . 1554) (undo-tree-id5321 . -3688) (undo-tree-id5322 . -3688) (undo-tree-id5323 . -38) (undo-tree-id5324 . -44) (undo-tree-id5325 . -106) (undo-tree-id5326 . -110) (undo-tree-id5327 . -871) (undo-tree-id5328 . -876) (undo-tree-id5329 . -1097) (undo-tree-id5330 . -1101) (undo-tree-id5331 . -1187) (undo-tree-id5332 . -1188) (undo-tree-id5333 . -1355) (undo-tree-id5334 . -1356) (undo-tree-id5335 . -1626) (undo-tree-id5336 . -1629) (undo-tree-id5337 . -1971) (undo-tree-id5338 . -1976) (undo-tree-id5339 . -2198) (undo-tree-id5340 . -2199) (undo-tree-id5341 . -2284) (undo-tree-id5342 . -2285) (undo-tree-id5343 . -2447) (undo-tree-id5344 . -2449) (undo-tree-id5345 . -3688) (undo-tree-id5346 . -3688) (undo-tree-id5347 . -5830) (undo-tree-id5348 . -5837) (undo-tree-id5349 . -5957) (undo-tree-id5350 . -5977) (undo-tree-id5351 . -3688) (undo-tree-id5352 . -3688) (undo-tree-id5353 . -3688) (undo-tree-id5354 . -3688) (undo-tree-id5355 . -3688) (undo-tree-id5356 . -3688) (undo-tree-id5357 . -3688) (undo-tree-id5358 . -3688) (undo-tree-id5359 . -3688) (undo-tree-id5360 . -3688) (undo-tree-id5361 . -3688) (undo-tree-id5362 . -3688) (undo-tree-id5363 . -3688) (undo-tree-id5364 . -3688) (undo-tree-id5365 . -3688) (undo-tree-id5366 . -3688) (undo-tree-id5367 . -3688) (undo-tree-id5368 . -3688) (undo-tree-id5369 . -3688) (undo-tree-id5370 . -3688) (undo-tree-id5371 . -3688) (undo-tree-id5372 . -3688) (undo-tree-id5373 . -3688) (undo-tree-id5374 . -3688) (undo-tree-id5375 . -3688) (undo-tree-id5376 . -3688) (undo-tree-id5377 . -3172) (undo-tree-id5378 . -3688) (undo-tree-id5379 . -3688) (undo-tree-id5380 . -3688) (undo-tree-id5381 . -3688) (undo-tree-id5382 . -3688) (undo-tree-id5383 . -3688) (undo-tree-id5384 . -3687) (undo-tree-id5385 . -3687) (undo-tree-id5386 . -3687) (undo-tree-id5387 . -3687) (undo-tree-id5388 . -3687) (undo-tree-id5389 . -3686) (undo-tree-id5390 . -3659) (undo-tree-id5391 . -3626) (undo-tree-id5392 . -5166) (undo-tree-id5393 . -5166) (undo-tree-id5394 . -5166) (undo-tree-id5395 . -5711) (undo-tree-id5396 . -5711) (undo-tree-id5397 . -5711) (undo-tree-id5398 . -5711) (undo-tree-id5399 . -3554) (undo-tree-id5400 . -3530) (undo-tree-id5401 . -3515) (undo-tree-id5402 . -3476) (undo-tree-id5403 . -3452) (undo-tree-id5404 . -3436) (undo-tree-id5405 . -3401) (undo-tree-id5406 . -3377) (undo-tree-id5407 . -3347) (undo-tree-id5408 . -3322) (undo-tree-id5409 . -3292) (undo-tree-id5410 . -3268) (undo-tree-id5411 . -3250) (undo-tree-id5412 . -3225) (undo-tree-id5413 . -3195) (undo-tree-id5414 . -2706) (undo-tree-id5415 . -2706) (undo-tree-id5416 . -2706) (undo-tree-id5417 . -2706) (undo-tree-id5418 . -2706) (undo-tree-id5419 . -2706) (undo-tree-id5420 . -2830) (undo-tree-id5421 . -2830) (undo-tree-id5422 . -2925) (undo-tree-id5423 . -2925) (undo-tree-id5424 . -2925) (undo-tree-id5425 . -2925) (undo-tree-id5426 . -3048) (undo-tree-id5427 . -3048) (undo-tree-id5428 . -3048) (undo-tree-id5429 . -3048) (undo-tree-id5430 . -3171) (undo-tree-id5431 . -3171) (undo-tree-id5432 . -3171) (undo-tree-id5433 . -3169) (undo-tree-id5434 . -3139) (undo-tree-id5435 . -3115) (undo-tree-id5436 . -3063) (undo-tree-id5437 . -3036) (undo-tree-id5438 . -2992) (undo-tree-id5439 . -2968) (undo-tree-id5440 . -2940) (undo-tree-id5441 . -2915) (undo-tree-id5442 . -2877) (undo-tree-id5443 . -2853) (undo-tree-id5444 . -2849) (undo-tree-id5445 . -2824) (undo-tree-id5446 . -2802) (undo-tree-id5447 . -2746) (undo-tree-id5448 . -2721) (undo-tree-id5449 . -2705) (undo-tree-id5450 . -2705) (undo-tree-id5451 . -2705) (undo-tree-id5452 . -2704) (undo-tree-id5453 . -2673) (undo-tree-id5454 . -2627) (undo-tree-id5455 . -2553) (undo-tree-id5456 . -2529) (undo-tree-id5457 . -2477) (undo-tree-id5458 . -2477) (undo-tree-id5459 . -2477) (undo-tree-id5460 . -2477) (undo-tree-id5461 . -2477) (undo-tree-id5462 . -2477) (undo-tree-id5463 . -2477) (undo-tree-id5464 . -2477) (undo-tree-id5465 . -2477) (undo-tree-id5466 . -2477) (undo-tree-id5467 . -2477) (undo-tree-id5468 . -1894) (undo-tree-id5469 . -2477) (undo-tree-id5470 . -2477) (undo-tree-id5471 . -2477) (undo-tree-id5472 . -2477) (undo-tree-id5473 . -2477) (undo-tree-id5474 . -2477) (undo-tree-id5475 . -2529) (undo-tree-id5476 . -2529) (undo-tree-id5477 . -2529) (undo-tree-id5478 . -2529) (undo-tree-id5479 . -2529) (undo-tree-id5480 . -2553) (undo-tree-id5481 . -2627) (undo-tree-id5482 . -2673) (undo-tree-id5483 . -2704) (undo-tree-id5484 . -2705) (undo-tree-id5485 . -2721) (undo-tree-id5486 . -2746) (undo-tree-id5487 . -2802) (undo-tree-id5488 . -2824) (undo-tree-id5489 . -2849) (undo-tree-id5490 . -2853) (undo-tree-id5491 . -2877) (undo-tree-id5492 . -2915) (undo-tree-id5493 . -2940) (undo-tree-id5494 . -2968) (undo-tree-id5495 . -2992) (undo-tree-id5496 . -3036) (undo-tree-id5497 . -3063) (undo-tree-id5498 . -3115) (undo-tree-id5499 . -3139) (undo-tree-id5500 . -3169) (undo-tree-id5501 . -3169) (undo-tree-id5502 . -3169) (undo-tree-id5503 . -3171) (undo-tree-id5504 . -3195) (undo-tree-id5505 . -3225) (undo-tree-id5506 . -3250) (undo-tree-id5507 . -3268) (undo-tree-id5508 . -3292) (undo-tree-id5509 . -3322) (undo-tree-id5510 . -3347) (undo-tree-id5511 . -3377) (undo-tree-id5512 . -3401) (undo-tree-id5513 . -3436) (undo-tree-id5514 . -3436) (undo-tree-id5515 . -3436) (undo-tree-id5516 . -3436) (undo-tree-id5517 . -3436) (undo-tree-id5518 . -3436) (undo-tree-id5519 . -3436) (undo-tree-id5520 . -3436) (undo-tree-id5521 . -3452) (undo-tree-id5522 . -3476) (undo-tree-id5523 . -3515) (undo-tree-id5524 . -3530) (undo-tree-id5525 . -3554) (undo-tree-id5526 . -3554) (undo-tree-id5527 . -3554) (undo-tree-id5528 . -3626) (undo-tree-id5529 . -3659) (undo-tree-id5530 . -3686) (undo-tree-id5531 . -3687) (undo-tree-id5532 . -3688) (undo-tree-id5533 . -3688) (undo-tree-id5534 . -3688) (undo-tree-id5535 . -3688) (undo-tree-id5536 . -3688) (undo-tree-id5537 . -3688) (undo-tree-id5538 . -3688) (undo-tree-id5539 . -3687) (undo-tree-id5540 . -3688) (undo-tree-id5541 . -3688) (undo-tree-id5542 . -3688) (undo-tree-id5543 . -3688) (undo-tree-id5544 . -3688) (undo-tree-id5545 . -3688) (undo-tree-id5546 . -3688) (undo-tree-id5547 . -3688) (undo-tree-id5548 . -3688) (undo-tree-id5549 . -3688) (undo-tree-id5550 . -3688) (undo-tree-id5551 . -3688) (undo-tree-id5552 . -3688) (undo-tree-id5553 . -3688) (undo-tree-id5554 . -3688) (undo-tree-id5555 . -3688) (undo-tree-id5556 . -3688) (undo-tree-id5557 . -3688) (undo-tree-id5558 . -3688) (undo-tree-id5559 . -3688) (undo-tree-id5560 . -3688) (undo-tree-id5561 . -3688) (undo-tree-id5562 . -3688) (undo-tree-id5563 . -3688) (undo-tree-id5564 . -3688) (undo-tree-id5565 . -3688) (undo-tree-id5566 . -3688) (undo-tree-id5567 . -3688) (undo-tree-id5568 . -3688) (undo-tree-id5569 . -3688) (undo-tree-id5570 . -3688) (undo-tree-id5571 . -3688) (undo-tree-id5572 . -3688) (undo-tree-id5573 . -3688) (undo-tree-id5574 . -3152) (undo-tree-id5575 . -3688) (undo-tree-id5576 . -3688) (undo-tree-id5577 . -3688) (undo-tree-id5578 . -3688) (undo-tree-id5579 . -3688) (undo-tree-id5580 . -3688) (undo-tree-id5581 . -3688) (undo-tree-id5582 . -3688) (undo-tree-id5583 . -3688) (undo-tree-id5584 . -3688) (undo-tree-id5585 . -3688) (undo-tree-id5586 . -3688) (undo-tree-id5587 . -3688) (undo-tree-id5588 . -3688) (undo-tree-id5589 . -3688) (undo-tree-id5590 . -3688) (undo-tree-id5591 . -3688) (undo-tree-id5592 . -3688) (undo-tree-id5593 . -3688) (undo-tree-id5594 . -3688) (undo-tree-id5595 . -3688) (undo-tree-id5596 . -3688) (undo-tree-id5597 . -3688) (undo-tree-id5598 . -3688) (undo-tree-id5599 . -3688) (undo-tree-id5600 . -3688) (undo-tree-id5601 . -3688) (undo-tree-id5602 . -3688) (undo-tree-id5603 . -3688) (undo-tree-id5604 . -3688) (undo-tree-id5605 . -3688) (undo-tree-id5606 . -3688) (undo-tree-id5607 . -3688) (undo-tree-id5608 . -3688) (undo-tree-id5609 . -3688) (undo-tree-id5610 . -3688) (undo-tree-id5611 . -3688) (undo-tree-id5612 . -3688) (undo-tree-id5613 . -3688) (undo-tree-id5614 . -3688) (undo-tree-id5615 . -3688) (undo-tree-id5616 . -3688) (undo-tree-id5617 . -3688) (undo-tree-id5618 . -3688) (undo-tree-id5619 . -3688) (undo-tree-id5620 . -3688) (undo-tree-id5621 . -3688) (undo-tree-id5622 . -3688) (undo-tree-id5623 . -3688) (undo-tree-id5624 . -3688) (undo-tree-id5625 . -3688) (undo-tree-id5626 . -3688) (undo-tree-id5627 . -3688) (undo-tree-id5628 . -3688) (undo-tree-id5629 . -3688) (undo-tree-id5630 . -3688) (undo-tree-id5631 . -3688) (undo-tree-id5632 . -3688) (undo-tree-id5633 . -3688) (undo-tree-id5634 . -3688) (undo-tree-id5635 . -3688) (undo-tree-id5636 . -3688) (undo-tree-id5637 . -3688) (undo-tree-id5638 . -3688) (undo-tree-id5639 . -3688) (undo-tree-id5640 . -3688) (undo-tree-id5641 . -3688) (undo-tree-id5642 . -3688) (undo-tree-id5643 . -3688) (undo-tree-id5644 . -3688) (undo-tree-id5645 . -3688) (undo-tree-id5646 . -3688) (undo-tree-id5647 . -3688) (undo-tree-id5648 . -3688) (undo-tree-id5649 . -3688) (undo-tree-id5650 . -3688) (undo-tree-id5651 . -3688) (undo-tree-id5652 . -3688) (undo-tree-id5653 . -3688) (undo-tree-id5654 . -3688) (undo-tree-id5655 . -3688) (undo-tree-id5656 . -3688) (undo-tree-id5657 . -3688) (undo-tree-id5658 . -3688) (undo-tree-id5659 . -4574) (undo-tree-id5660 . -3734) (undo-tree-id5661 . -3734) (undo-tree-id5662 . -3734) (undo-tree-id5663 . -3734) (undo-tree-id5664 . -3915) (undo-tree-id5665 . -3734) (undo-tree-id5666 . -3688) (undo-tree-id5667 . -3729) (undo-tree-id5668 . -3688) (undo-tree-id5669 . -3729) (undo-tree-id5670 . -3688) (undo-tree-id5671 . -3688) (undo-tree-id5672 . -3688) (undo-tree-id5673 . -3688) (undo-tree-id5674 . -3688) (undo-tree-id5675 . -3955) (undo-tree-id5676 . -3955) (undo-tree-id5677 . -3955) (undo-tree-id5678 . -3955) (undo-tree-id5679 . -4074) (undo-tree-id5680 . -4074) (undo-tree-id5681 . -4074) (undo-tree-id5682 . -4074) (undo-tree-id5683 . -4457) (undo-tree-id5684 . -4457) (undo-tree-id5685 . -4514) (undo-tree-id5686 . -4514) (undo-tree-id5687 . -4591) (undo-tree-id5688 . -4591) (undo-tree-id5689 . -4591) (undo-tree-id5690 . 1555) (undo-tree-id5691 . -4592) (undo-tree-id5692 . 1560) (undo-tree-id5693 . -4587) (undo-tree-id5694 . -38) (undo-tree-id5695 . -44) (undo-tree-id5696 . -106) (undo-tree-id5697 . -110) (undo-tree-id5698 . -871) (undo-tree-id5699 . -876) (undo-tree-id5700 . -1097) (undo-tree-id5701 . -1101) (undo-tree-id5702 . -1187) (undo-tree-id5703 . -1188) (undo-tree-id5704 . -1355) (undo-tree-id5705 . -1356) (undo-tree-id5706 . -1626) (undo-tree-id5707 . -1629) (undo-tree-id5708 . -1971) (undo-tree-id5709 . -1976) (undo-tree-id5710 . -2198) (undo-tree-id5711 . -2199) (undo-tree-id5712 . -2284) (undo-tree-id5713 . -2285) (undo-tree-id5714 . -2447) (undo-tree-id5715 . -2449) (undo-tree-id5716 . -3801) (undo-tree-id5717 . -3802) (undo-tree-id5718 . -4028) (undo-tree-id5719 . -4029) (undo-tree-id5720 . -4148) (undo-tree-id5721 . -4152) (undo-tree-id5722 . -4155) (undo-tree-id5723 . -4156) (undo-tree-id5724 . -4282) (undo-tree-id5725 . -4283) (undo-tree-id5726 . -4357) (undo-tree-id5727 . -4358) (undo-tree-id5728 . -4421) (undo-tree-id5729 . -4422) (undo-tree-id5730 . -4478) (undo-tree-id5731 . -4479) (undo-tree-id5732 . -4533) (undo-tree-id5733 . -4534) (undo-tree-id5734 . -4673) (undo-tree-id5735 . -4680) (undo-tree-id5736 . -5830) (undo-tree-id5737 . -5837) (undo-tree-id5738 . -4591) (undo-tree-id5739 . -4591) (undo-tree-id5740 . -4591) (undo-tree-id5741 . -5166) (undo-tree-id5742 . -5166) (undo-tree-id5743 . -5166) (undo-tree-id5744 . -4591) (undo-tree-id5745 . -4591) (undo-tree-id5746 . -4591) (undo-tree-id5747 . -4591) (undo-tree-id5748 . -4591) (undo-tree-id5749 . -4591) (undo-tree-id5750 . -4591) (undo-tree-id5751 . -4591) (undo-tree-id5752 . -4591) (undo-tree-id5753 . -4591) (undo-tree-id5754 . -4591) (undo-tree-id5755 . -4160) (undo-tree-id5756 . -4591) (undo-tree-id5757 . -4591) (undo-tree-id5758 . -4160) (undo-tree-id5759 . -4591) (undo-tree-id5760 . -4591) (undo-tree-id5761 . -4591) (undo-tree-id5762 . -4591)) nil (25759 41448 897423 138000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 4706 . 4707) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -4786) (4706 . 4787) 4661 (t 25759 41448 912548 393000)) nil (25759 41495 88244 400000) 0 nil])
([nil nil ((4706 . 4707) 4657) nil (25759 41495 88238 439000) 0 nil])
([nil nil ((4789 . 4810) (4788 . 4789) (4787 . 4788) (t 25759 41495 104667 398000) 4708) nil (25759 41509 756486 225000) 0 nil])
([nil nil ((5120 . 5122) (5119 . 5120) (t 25759 41509 817928 300000) 5040) nil (25759 41542 649703 164000) 0 nil])
([nil nil ((5121 . 5122)) nil (25759 41542 649702 29000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -5124) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) 5125 (5124 . 5125)) nil (25759 41542 649700 221000) 0 nil])
([nil nil ((1 . 6223) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate  second wave by applying another sinusoidal function to the time array
    # Similar to first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise  by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#  
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential(
    [keras.layers.Flatten(input_shape=[50, 1]), keras.layers.Dense(1)]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))


model.evaluate(X_valid, y_valid)


###############################################################################
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (face font-lock-comment-delimiter-face fontified t) 504 505 (face font-lock-comment-face fontified t) 3269 3273 (fontified t) 3273 3275 (fontified t face font-lock-comment-delimiter-face) 3275 3308 (fontified t face font-lock-comment-face) 3308 3312 (fontified t) 3312 3314 (fontified t face font-lock-keyword-face) 3314 3324 (fontified t) 3324 3342 (fontified t) 3342 3343 (fontified t face (rainbow-delimiters-depth-1-face)) 3343 3375 (fontified t) 3375 3376 (fontified t face (rainbow-delimiters-depth-1-face)) 3376 3382 (fontified t) 3382 3384 (fontified t face font-lock-comment-delimiter-face) 3384 3413 (fontified t face font-lock-comment-face) 3413 3427 (fontified t) 3427 3428 (fontified t face (rainbow-delimiters-depth-1-face)) 3428 3450 (fontified t) 3450 3451 (fontified t face (rainbow-delimiters-depth-1-face)) 3451 3452 (fontified t) 3452 3453 (fontified t) 3453 3457 (fontified t) 3457 3459 (fontified t face font-lock-comment-delimiter-face) 3459 3492 (fontified t face font-lock-comment-face) 3492 3504 (fontified t) 3504 3505 (fontified t face (rainbow-delimiters-depth-1-face)) 3505 3506 (fontified t face (rainbow-delimiters-depth-2-face)) 3506 3527 (fontified t) 3527 3528 (fontified t face (rainbow-delimiters-depth-2-face)) 3528 3529 (fontified t face (rainbow-delimiters-depth-1-face)) 3529 3535 (fontified t) 3535 3537 (fontified t face font-lock-comment-delimiter-face) 3537 3603 (fontified t face font-lock-comment-face) 3603 3607 (fontified t) 3607 3609 (fontified t face font-lock-keyword-face) 3609 3617 (fontified t) 3617 3620 (fontified t face font-lock-keyword-face) 3620 3621 (fontified t) 3621 3622 (fontified t face (rainbow-delimiters-depth-1-face)) 3622 3624 (fontified t) 3624 3626 (fontified t face font-lock-keyword-face) 3626 3633 (fontified t) 3633 3634 (fontified t face (rainbow-delimiters-depth-1-face)) 3634 3636 (fontified t) 3636 3654 (fontified t) 3654 3655 (fontified t face (rainbow-delimiters-depth-1-face)) 3655 3672 (fontified t) 3672 3684 (fontified t face font-lock-string-face) 3684 3685 (fontified t face (rainbow-delimiters-depth-1-face)) 3685 3688 (fontified t) 3688 3691 (fontified t face font-lock-keyword-face) 3691 3692 (fontified t) 3692 3712 (fontified t face font-lock-function-name-face) 3712 3713 (fontified t face (rainbow-delimiters-depth-1-face)) 3713 3727 (fontified t) 3727 3728 (fontified t face (rainbow-delimiters-depth-1-face)) 3728 3734 (fontified t) 3734 3735 (syntax-table (15) fontified t face font-lock-doc-face) 3735 3910 (fontified t face font-lock-doc-face) 3910 3911 (syntax-table (15) fontified t face font-lock-doc-face) 3911 3916 (fontified t) 3916 3918 (fontified t face font-lock-comment-delimiter-face) 3918 3947 (fontified t face font-lock-comment-face) 3947 3959 (fontified t) 3959 3960 (fontified t face (rainbow-delimiters-depth-1-face)) 3960 3969 (fontified t) 3969 3970 (fontified t face (rainbow-delimiters-depth-2-face)) 3970 3973 (fontified t face font-lock-builtin-face) 3973 3974 (fontified t face (rainbow-delimiters-depth-3-face)) 3974 3978 (fontified t) 3978 3979 (fontified t face (rainbow-delimiters-depth-3-face)) 3979 3980 (fontified t face (rainbow-delimiters-depth-2-face)) 3980 3994 (fontified t) 3994 3999 (fontified t face font-lock-string-face) 3999 4007 (fontified t) 4007 4022 (fontified t face font-lock-string-face) 4022 4023 (fontified t face (rainbow-delimiters-depth-1-face)) 4023 4029 (fontified t) 4029 4031 (fontified t face font-lock-comment-delimiter-face) 4031 4062 (fontified t face font-lock-comment-face) 4062 4074 (fontified t) 4074 4075 (fontified t face (rainbow-delimiters-depth-1-face)) 4075 4084 (fontified t) 4084 4085 (fontified t face (rainbow-delimiters-depth-2-face)) 4085 4088 (fontified t face font-lock-builtin-face) 4088 4089 (fontified t face (rainbow-delimiters-depth-3-face)) 4089 4097 (fontified t) 4097 4098 (fontified t face (rainbow-delimiters-depth-3-face)) 4098 4099 (fontified t face (rainbow-delimiters-depth-2-face)) 4099 4115 (fontified t) 4115 4120 (fontified t face font-lock-string-face) 4120 4128 (fontified t) 4128 4145 (fontified t face font-lock-string-face) 4145 4146 (fontified t face (rainbow-delimiters-depth-1-face)) 4146 4147 (fontified t) 4147 4148 (fontified t) 4148 4152 (fontified t) 4152 4154 (fontified t face font-lock-comment-delimiter-face) 4154 4160 (fontified t face font-lock-comment-face) 4160 4194 (fontified t face font-lock-comment-face) 4194 4205 (fontified t) 4205 4206 (fontified t face (rainbow-delimiters-depth-1-face)) 4206 4207 (fontified t face (rainbow-delimiters-depth-1-face)) 4207 4231 (fontified t) 4231 4232 (fontified t face (rainbow-delimiters-depth-1-face)) 4232 4254 (fontified t) 4254 4255 (fontified t face (rainbow-delimiters-depth-2-face)) 4255 4263 (fontified t) 4263 4267 (fontified t face font-lock-constant-face) 4267 4268 (fontified t face (rainbow-delimiters-depth-2-face)) 4268 4269 (fontified t face (rainbow-delimiters-depth-1-face)) 4269 4275 (fontified t) 4275 4277 (fontified t face font-lock-comment-delimiter-face) 4277 4310 (fontified t face font-lock-comment-face) 4310 4322 (fontified t) 4322 4323 (fontified t face (rainbow-delimiters-depth-1-face)) 4323 4324 (fontified t face (rainbow-delimiters-depth-2-face)) 4324 4338 (fontified t) 4338 4339 (fontified t face (rainbow-delimiters-depth-2-face)) 4339 4340 (fontified t face (rainbow-delimiters-depth-1-face)) 4340 4346 (fontified t) 4346 4348 (fontified t face font-lock-comment-delimiter-face) 4348 4373 (fontified t face font-lock-comment-face) 4373 4387 (fontified t) 4387 4388 (fontified t face (rainbow-delimiters-depth-1-face)) 4388 4399 (fontified t) 4399 4400 (fontified t face (rainbow-delimiters-depth-1-face)) 4400 4406 (fontified t) 4406 4408 (fontified t face font-lock-comment-delimiter-face) 4408 4429 (fontified t face font-lock-comment-face) 4429 4443 (fontified t) 4443 4444 (fontified t face (rainbow-delimiters-depth-1-face)) 4444 4452 (fontified t face font-lock-string-face) 4452 4453 (fontified t face (rainbow-delimiters-depth-1-face)) 4453 4459 (fontified t) 4459 4461 (fontified t face font-lock-comment-delimiter-face) 4461 4482 (fontified t face font-lock-comment-face) 4482 4496 (fontified t) 4496 4497 (fontified t face (rainbow-delimiters-depth-1-face)) 4497 4503 (fontified t face font-lock-string-face) 4503 4504 (fontified t face (rainbow-delimiters-depth-1-face)) 4504 4510 (fontified t) 4510 4512 (fontified t face font-lock-comment-delimiter-face) 4512 4542 (fontified t face font-lock-comment-face) 4542 4554 (fontified t) 4554 4555 (fontified t face (rainbow-delimiters-depth-1-face)) 4555 4559 (fontified t face font-lock-constant-face) 4559 4560 (fontified t face (rainbow-delimiters-depth-1-face)) 4560 4563 (fontified t) 4563 4642 (fontified t face font-lock-comment-delimiter-face) 4642 4643 (fontified t face font-lock-comment-face) 4643 4648 (fontified t face font-lock-variable-name-face) 4648 4650 (face font-lock-variable-name-face fontified t) 4650 4656 (fontified t) 4656 4660 (fontified t face font-lock-variable-name-face) 4660 4662 (fontified t face font-lock-variable-name-face) 4662 4685 (fontified t) 4685 4686 (fontified t face (rainbow-delimiters-depth-1-face)) 4686 4704 (fontified t) 4704 4705 (fontified t face (rainbow-delimiters-depth-1-face)) 4705 4706 (fontified t) 4706 4707 (fontified t rear-nonsticky t) 4707 4786 (fontified t face font-lock-comment-delimiter-face) 4786 4787 (fontified t face font-lock-comment-face) 4787 4789 (fontified t face font-lock-comment-delimiter-face) 4789 4809 (fontified t face font-lock-comment-face) 4809 4810 (fontified t face font-lock-comment-face) 4810 4817 (fontified t face font-lock-variable-name-face) 4817 4819 (fontified t) 4819 4826 (fontified t face font-lock-variable-name-face) 4826 4835 (fontified t) 4835 4836 (fontified t face (rainbow-delimiters-depth-1-face)) 4836 4851 (fontified t) 4851 4852 (fontified t face (rainbow-delimiters-depth-1-face)) 4852 4860 (fontified t) 4860 4861 (fontified t face (rainbow-delimiters-depth-1-face)) 4861 4870 (fontified t) 4870 4871 (fontified t face (rainbow-delimiters-depth-1-face)) 4871 4872 (fontified t) 4872 4879 (fontified t face font-lock-variable-name-face) 4879 4881 (fontified t) 4881 4888 (fontified t face font-lock-variable-name-face) 4888 4897 (fontified t) 4897 4898 (fontified t face (rainbow-delimiters-depth-1-face)) 4898 4917 (fontified t) 4917 4918 (fontified t face (rainbow-delimiters-depth-1-face)) 4918 4926 (fontified t) 4926 4927 (fontified t face (rainbow-delimiters-depth-1-face)) 4927 4940 (fontified t) 4940 4941 (fontified t face (rainbow-delimiters-depth-1-face)) 4941 4942 (fontified t) 4942 4948 (fontified t face font-lock-variable-name-face) 4948 4950 (fontified t) 4950 4956 (fontified t face font-lock-variable-name-face) 4956 4965 (fontified t) 4965 4966 (fontified t face (rainbow-delimiters-depth-1-face)) 4966 4981 (fontified t) 4981 4982 (fontified t face (rainbow-delimiters-depth-1-face)) 4982 4990 (fontified t) 4990 4991 (fontified t face (rainbow-delimiters-depth-1-face)) 4991 5000 (fontified t) 5000 5001 (fontified t face (rainbow-delimiters-depth-1-face)) 5001 5002 (fontified t) 5002 5007 (fontified t face font-lock-keyword-face) 5007 5008 (fontified t face (rainbow-delimiters-depth-1-face)) 5008 5036 (fontified t) 5036 5037 (fontified t face (rainbow-delimiters-depth-1-face)) 5037 5039 (fontified t) 5039 5118 (fontified t face font-lock-comment-delimiter-face) 5118 5119 (fontified t face font-lock-comment-face) 5119 5122 (fontified t face font-lock-comment-delimiter-face) 5122 5123 (fontified t face font-lock-comment-face) 5123 5126 (fontified t face font-lock-variable-name-face) 5126 5128 (fontified t) 5128 5132 (fontified t face font-lock-variable-name-face) 5132 5147 (fontified t) 5147 5148 (fontified t face (rainbow-delimiters-depth-1-face)) 5148 5173 (fontified t) 5173 5177 (fontified t face font-lock-constant-face) 5177 5187 (fontified t) 5187 5188 (fontified t face (rainbow-delimiters-depth-2-face)) 5188 5193 (fontified t) 5193 5194 (fontified t face (rainbow-delimiters-depth-2-face)) 5194 5195 (fontified t face (rainbow-delimiters-depth-1-face)) 5195 5196 (fontified t) 5196 5199 (fontified t face font-lock-keyword-face) 5199 5204 (fontified t) 5204 5206 (fontified t face font-lock-keyword-face) 5206 5207 (fontified t) 5207 5212 (fontified t face font-lock-builtin-face) 5212 5213 (fontified t face (rainbow-delimiters-depth-1-face)) 5213 5214 (fontified t) 5214 5215 (fontified t face (rainbow-delimiters-depth-1-face)) 5215 5228 (fontified t) 5228 5229 (fontified t face (rainbow-delimiters-depth-1-face)) 5229 5233 (fontified t) 5233 5234 (fontified t face (rainbow-delimiters-depth-2-face)) 5234 5237 (fontified t) 5237 5238 (fontified t face (rainbow-delimiters-depth-2-face)) 5238 5239 (fontified t face (rainbow-delimiters-depth-1-face)) 5239 5240 (fontified t) 5240 5255 (fontified t) 5255 5256 (fontified t face (rainbow-delimiters-depth-1-face)) 5256 5264 (fontified t) 5264 5272 (fontified t) 5272 5273 (fontified t face (rainbow-delimiters-depth-2-face)) 5273 5282 (fontified t) 5282 5283 (fontified t face (rainbow-delimiters-depth-2-face)) 5283 5285 (fontified t) 5285 5300 (fontified t) 5300 5301 (fontified t face (rainbow-delimiters-depth-2-face)) 5301 5307 (fontified t) 5307 5308 (fontified t face (rainbow-delimiters-depth-2-face)) 5308 5314 (fontified t) 5314 5326 (fontified t) 5326 5327 (fontified t face (rainbow-delimiters-depth-2-face)) 5327 5335 (fontified t face font-lock-string-face) 5335 5336 (fontified t) 5336 5338 (fontified t face font-lock-keyword-face) 5338 5348 (fontified t) 5348 5352 (fontified t face font-lock-keyword-face) 5352 5353 (fontified t) 5353 5357 (fontified t face font-lock-constant-face) 5357 5358 (fontified t face (rainbow-delimiters-depth-2-face)) 5358 5360 (fontified t) 5360 5375 (fontified t) 5375 5376 (fontified t face (rainbow-delimiters-depth-2-face)) 5376 5384 (fontified t) 5384 5385 (fontified t face (rainbow-delimiters-depth-2-face)) 5385 5391 (fontified t) 5391 5392 (fontified t face (rainbow-delimiters-depth-1-face)) 5392 5401 (fontified t) 5401 5402 (fontified t face (rainbow-delimiters-depth-1-face)) 5402 5403 (fontified t face (rainbow-delimiters-depth-1-face)) 5403 5405 (fontified t) 5405 5411 (fontified t face font-lock-variable-name-face) 5411 5421 (fontified t) 5421 5422 (fontified t face (rainbow-delimiters-depth-1-face)) 5422 5427 (fontified t) 5427 5428 (fontified t face (rainbow-delimiters-depth-1-face)) 5428 5436 (fontified t) 5436 5437 (fontified t face (rainbow-delimiters-depth-1-face)) 5437 5468 (fontified t) 5468 5469 (fontified t face (rainbow-delimiters-depth-2-face)) 5469 5484 (fontified t) 5484 5485 (fontified t face (rainbow-delimiters-depth-2-face)) 5485 5486 (fontified t face (rainbow-delimiters-depth-1-face)) 5486 5488 (fontified t) 5488 5567 (fontified t face font-lock-comment-delimiter-face) 5567 5568 (fontified t face font-lock-comment-face) 5568 5579 (fontified t) 5579 5580 (fontified t face (rainbow-delimiters-depth-1-face)) 5580 5587 (fontified t) 5587 5588 (fontified t face (rainbow-delimiters-depth-2-face)) 5588 5595 (fontified t) 5595 5596 (fontified t face (rainbow-delimiters-depth-2-face)) 5596 5605 (fontified t) 5605 5606 (fontified t face (rainbow-delimiters-depth-2-face)) 5606 5610 (fontified t) 5610 5611 (fontified t face (rainbow-delimiters-depth-2-face)) 5611 5619 (fontified t) 5619 5620 (fontified t face (rainbow-delimiters-depth-2-face)) 5620 5623 (fontified t) 5623 5624 (fontified t) 5624 5625 (fontified t face (rainbow-delimiters-depth-2-face)) 5625 5626 (fontified t face (rainbow-delimiters-depth-1-face)) 5626 5627 (fontified t) 5627 5635 (fontified t) 5635 5636 (fontified t face (rainbow-delimiters-depth-1-face)) 5636 5637 (fontified t face (rainbow-delimiters-depth-1-face)) 5637 5653 (fontified t) 5653 5654 (fontified t face (rainbow-delimiters-depth-1-face)) 5654 5656 (fontified t) 5656 5657 (fontified t face (rainbow-delimiters-depth-1-face)) 5657 5676 (fontified t) 5676 5677 (fontified t face (rainbow-delimiters-depth-1-face)) 5677 5679 (fontified t) 5679 5680 (fontified t face (rainbow-delimiters-depth-1-face)) 5680 5682 (fontified t) 5682 5687 (fontified t face font-lock-variable-name-face) 5687 5696 (fontified t) 5696 5713 (fontified t) 5713 5714 (face (rainbow-delimiters-depth-1-face) fontified t) 5714 5715 (fontified t) 5719 5720 (face (rainbow-delimiters-depth-2-face)) 5740 5741 (face (rainbow-delimiters-depth-3-face)) 5753 5754 (face (rainbow-delimiters-depth-4-face)) 5759 5760 (face (rainbow-delimiters-depth-4-face)) 5760 5761 (face (rainbow-delimiters-depth-3-face)) 5781 5782 (face (rainbow-delimiters-depth-3-face)) 5783 5784 (face (rainbow-delimiters-depth-3-face)) 5784 5785 (face (rainbow-delimiters-depth-2-face)) 5786 5787 (face (rainbow-delimiters-depth-1-face)) 5795 5802 (face font-lock-builtin-face) 5802 5803 (face (rainbow-delimiters-depth-1-face)) 5808 5813 (face font-lock-string-face) 5825 5831 (face font-lock-string-face) 5831 5832 (face (rainbow-delimiters-depth-1-face)) 5833 5840 (face font-lock-variable-name-face) 5852 5853 (face (rainbow-delimiters-depth-1-face)) 5898 5899 (face (rainbow-delimiters-depth-2-face)) 5915 5916 (face (rainbow-delimiters-depth-2-face)) 5916 5917 (face (rainbow-delimiters-depth-1-face)) 5934 5935 (face (rainbow-delimiters-depth-1-face)) 5951 5952 (face (rainbow-delimiters-depth-1-face)) 5955 6034 (face font-lock-comment-delimiter-face) 6034 6035 (face font-lock-comment-face) 6055 6056 (face (rainbow-delimiters-depth-1-face)) 6071 6072 (face (rainbow-delimiters-depth-2-face)) 6072 6078 (face font-lock-string-face) 6078 6079 (face (rainbow-delimiters-depth-2-face)) 6096 6097 (face (rainbow-delimiters-depth-2-face)) 6097 6107 (face font-lock-string-face) 6107 6108 (face (rainbow-delimiters-depth-2-face)) 6108 6109 (face (rainbow-delimiters-depth-1-face)) 6118 6119 (face (rainbow-delimiters-depth-1-face)) 6119 6120 (face (rainbow-delimiters-depth-1-face)) 6122 6127 (face font-lock-variable-name-face) 6127 6128 (face font-lock-variable-name-face) 6144 6145 (face (rainbow-delimiters-depth-1-face)) 6152 6153 (face (rainbow-delimiters-depth-1-face)) 6165 6166 (face (rainbow-delimiters-depth-1-face)) 6173 6174 (face (rainbow-delimiters-depth-2-face)) 6181 6182 (face (rainbow-delimiters-depth-2-face)) 6191 6192 (face (rainbow-delimiters-depth-2-face)) 6196 6197 (face (rainbow-delimiters-depth-2-face)) 6205 6206 (face (rainbow-delimiters-depth-2-face)) 6210 6211 (face (rainbow-delimiters-depth-2-face)) 6211 6212 (face (rainbow-delimiters-depth-1-face)) 6221 6222 (face (rainbow-delimiters-depth-1-face)) 6222 6223 (face (rainbow-delimiters-depth-1-face))) . 1) (undo-tree-id5850 . 1101) (undo-tree-id5851 . -5123) (undo-tree-id5852 . -5403) (undo-tree-id5853 . -4271) (undo-tree-id5854 . -4806) (undo-tree-id5855 . -5393) (undo-tree-id5856 . -5123) (undo-tree-id5857 . 820) (undo-tree-id5858 . -4808) (undo-tree-id5859 . -4808) (undo-tree-id5860 . -4808) (undo-tree-id5861 . -4808) (undo-tree-id5862 . -4810) (undo-tree-id5863 . -5789) (undo-tree-id5864 . -5789) (undo-tree-id5865 . -5789) (undo-tree-id5866 . -5789) (undo-tree-id5867 . -6035) (undo-tree-id5868 . -6035) (undo-tree-id5869 . -6035) (undo-tree-id5870 . -6035) (undo-tree-id5871 . -4872) (undo-tree-id5872 . -4872) (undo-tree-id5873 . -4872) (undo-tree-id5874 . -4872) (undo-tree-id5875 . -4872) (undo-tree-id5876 . -4942) (undo-tree-id5877 . -4942) (undo-tree-id5878 . -4942) (undo-tree-id5879 . -4942) (undo-tree-id5880 . -5002) (undo-tree-id5881 . -5038) (undo-tree-id5882 . -5039) (undo-tree-id5883 . -5123) (undo-tree-id5884 . -5196) (undo-tree-id5885 . -5217) (undo-tree-id5886 . -5217) (undo-tree-id5887 . -5217) (undo-tree-id5888 . -5217) (undo-tree-id5889 . -5217) (undo-tree-id5890 . -5240) (undo-tree-id5891 . -5257) (undo-tree-id5892 . -5257) (undo-tree-id5893 . -5257) (undo-tree-id5894 . -5285) (undo-tree-id5895 . -5285) (undo-tree-id5896 . -5285) (undo-tree-id5897 . -5285) (undo-tree-id5898 . -5285) (undo-tree-id5899 . -5285) (undo-tree-id5900 . -5285) (undo-tree-id5901 . -5285) (undo-tree-id5902 . -4563) (undo-tree-id5903 . -5285) (undo-tree-id5904 . -5285) (undo-tree-id5905 . -5285) (undo-tree-id5906 . -5285) (undo-tree-id5907 . -5285) (undo-tree-id5908 . -5285) (undo-tree-id5909 . -5257) (undo-tree-id5910 . -5240) (undo-tree-id5911 . -5217) (undo-tree-id5912 . -5196) (undo-tree-id5913 . -5123) (undo-tree-id5914 . -5039) (undo-tree-id5915 . -5039) (undo-tree-id5916 . -5039) (undo-tree-id5917 . -5039) (undo-tree-id5918 . -5039) (undo-tree-id5919 . -5039) (undo-tree-id5920 . -5119) (undo-tree-id5921 . -5039) (undo-tree-id5922 . -5119) (undo-tree-id5923 . -5119) (undo-tree-id5924 . -5119) (undo-tree-id5925 . -5119) (undo-tree-id5926 . -5119) (undo-tree-id5927 . -5119) (undo-tree-id5928 . -5244) (undo-tree-id5929 . -5244) (undo-tree-id5930 . -5244) (undo-tree-id5931 . -5789) (undo-tree-id5932 . -5789) (undo-tree-id5933 . -5789) (undo-tree-id5934 . -5789) (undo-tree-id5935 . -6035) (undo-tree-id5936 . -6035) (undo-tree-id5937 . -6035) (undo-tree-id5938 . -6035) (undo-tree-id5939 . -5119) (undo-tree-id5940 . -5119) (undo-tree-id5941 . -5119) (undo-tree-id5942 . -38) (undo-tree-id5943 . -44) (undo-tree-id5944 . -106) (undo-tree-id5945 . -110) (undo-tree-id5946 . -871) (undo-tree-id5947 . -876) (undo-tree-id5948 . -1097) (undo-tree-id5949 . -1101) (undo-tree-id5950 . -1187) (undo-tree-id5951 . -1188) (undo-tree-id5952 . -1355) (undo-tree-id5953 . -1356) (undo-tree-id5954 . -1626) (undo-tree-id5955 . -1629) (undo-tree-id5956 . -1971) (undo-tree-id5957 . -1976) (undo-tree-id5958 . -2198) (undo-tree-id5959 . -2199) (undo-tree-id5960 . -2284) (undo-tree-id5961 . -2285) (undo-tree-id5962 . -2447) (undo-tree-id5963 . -2449) (undo-tree-id5964 . -4140) (undo-tree-id5965 . -4144) (undo-tree-id5966 . -5908) (undo-tree-id5967 . -5915) (undo-tree-id5968 . -5119) (undo-tree-id5969 . -5119) (undo-tree-id5970 . -5119) (undo-tree-id5971 . -5120) (undo-tree-id5972 . -5120) (undo-tree-id5973 . -5244) (undo-tree-id5974 . -5244) (undo-tree-id5975 . -5244) (undo-tree-id5976 . -5789) (undo-tree-id5977 . -5789) (undo-tree-id5978 . -5789) (undo-tree-id5979 . -5789) (undo-tree-id5980 . -6035) (undo-tree-id5981 . -6035) (undo-tree-id5982 . -6035) (undo-tree-id5983 . -6035) (undo-tree-id5984 . -5120) (undo-tree-id5985 . -5120) (undo-tree-id5986 . -5120) (undo-tree-id5987 . -5120) (undo-tree-id5988 . -5122) (undo-tree-id5989 . -5122) (undo-tree-id5990 . -5244) (undo-tree-id5991 . -5244) (undo-tree-id5992 . -5244) (undo-tree-id5993 . -5789) (undo-tree-id5994 . -5789) (undo-tree-id5995 . -5789) (undo-tree-id5996 . -5789) (undo-tree-id5997 . -6035) (undo-tree-id5998 . -6035) (undo-tree-id5999 . -6035) (undo-tree-id6000 . -6035) (undo-tree-id6001 . -5122) (undo-tree-id6002 . -5122) (undo-tree-id6003 . -5122) (undo-tree-id6004 . -5122) (undo-tree-id6005 . -5120) (undo-tree-id6006 . -5120) (undo-tree-id6007 . -5120) (undo-tree-id6008 . -5120) (undo-tree-id6009 . -5120) (undo-tree-id6010 . -5120) (undo-tree-id6011 . -5120) (undo-tree-id6012 . -5120) (undo-tree-id6013 . -5120) (undo-tree-id6014 . -5123) (undo-tree-id6015 . -5123) (undo-tree-id6016 . -5123) (undo-tree-id6017 . -5123) (undo-tree-id6018 . -5123) (undo-tree-id6019 . -5123) (undo-tree-id6020 . -5123) (undo-tree-id6021 . -5123) (undo-tree-id6022 . -5119) (undo-tree-id6023 . -5119) (undo-tree-id6024 . -5119) (undo-tree-id6025 . -5119) (undo-tree-id6026 . -5119) (undo-tree-id6027 . -1) (undo-tree-id6028 . -38) (undo-tree-id6029 . -44) (undo-tree-id6030 . -106) (undo-tree-id6031 . -110) (undo-tree-id6032 . -106) (undo-tree-id6033 . -110) (undo-tree-id6034 . -563) (undo-tree-id6035 . -570) (undo-tree-id6036 . -526) (undo-tree-id6037 . -529) (undo-tree-id6038 . -947) (undo-tree-id6039 . -953) (undo-tree-id6040 . -1663) (undo-tree-id6041 . -1670) (undo-tree-id6042 . -1626) (undo-tree-id6043 . -1629) (undo-tree-id6044 . -1626) (undo-tree-id6045 . -1629) (undo-tree-id6046 . -2047) (undo-tree-id6047 . -2053) (undo-tree-id6048 . -2706) (undo-tree-id6049 . -2709) (undo-tree-id6050 . -2706) (undo-tree-id6051 . -2709) (undo-tree-id6052 . -2727) (undo-tree-id6053 . -2733) (undo-tree-id6054 . -2743) (undo-tree-id6055 . -2749) (undo-tree-id6056 . -2735) (undo-tree-id6057 . -2736) (undo-tree-id6058 . -4643) (undo-tree-id6059 . -4650) (undo-tree-id6060 . -5833) (undo-tree-id6061 . -5840) (undo-tree-id6062 . -5119) (undo-tree-id6063 . -5119) (undo-tree-id6064 . -5119) (undo-tree-id6065 . -5120) (undo-tree-id6066 . -5120) (undo-tree-id6067 . -5120) (undo-tree-id6068 . -5120) (undo-tree-id6069 . -5120) (undo-tree-id6070 . -5120) (undo-tree-id6071 . -5120) (undo-tree-id6072 . -5121) (undo-tree-id6073 . -5121) (undo-tree-id6074 . -5244) (undo-tree-id6075 . -5244) (undo-tree-id6076 . -5244) (undo-tree-id6077 . -5789) (undo-tree-id6078 . -5789) (undo-tree-id6079 . -5789) (undo-tree-id6080 . -5789) (undo-tree-id6081 . -6035) (undo-tree-id6082 . -6035) (undo-tree-id6083 . -6035) (undo-tree-id6084 . -6035) (undo-tree-id6085 . -5121) (undo-tree-id6086 . -5121) (undo-tree-id6087 . -5121) (undo-tree-id6088 . -5121) (undo-tree-id6089 . -5120) (undo-tree-id6090 . -5120) (undo-tree-id6091 . -5120) (undo-tree-id6092 . -5120) (undo-tree-id6093 . -5120) (undo-tree-id6094 . -5123) (undo-tree-id6095 . -5123) (undo-tree-id6096 . -5123) (undo-tree-id6097 . -5123) (undo-tree-id6098 . -5123) (undo-tree-id6099 . -5123) (undo-tree-id6100 . -5123) (undo-tree-id6101 . -5123) (undo-tree-id6102 . -5123) (undo-tree-id6103 . -5123) (undo-tree-id6104 . -5123) (undo-tree-id6105 . -5196) (undo-tree-id6106 . -5196) (undo-tree-id6107 . -5196) (undo-tree-id6108 . -5196) (undo-tree-id6109 . -5196) (undo-tree-id6110 . -5196) (undo-tree-id6111 . -5217) (undo-tree-id6112 . -5240) (undo-tree-id6113 . -5257) (undo-tree-id6114 . -5285) (undo-tree-id6115 . -5310) (undo-tree-id6116 . -5360) (undo-tree-id6117 . -5387) (undo-tree-id6118 . -5393) (undo-tree-id6119 . -5123) (undo-tree-id6120 . -5123) (undo-tree-id6121 . -5123) (undo-tree-id6122 . -5123) (undo-tree-id6123 . -5123) (undo-tree-id6124 . -5123) (undo-tree-id6125 . -5123) (undo-tree-id6126 . -5123) (undo-tree-id6127 . -5244) (undo-tree-id6128 . -5244) (undo-tree-id6129 . -5244) (undo-tree-id6130 . -5123) (undo-tree-id6131 . -5123) (undo-tree-id6132 . -5123) (undo-tree-id6133 . -5123) (undo-tree-id6134 . -5123) (undo-tree-id6135 . -5123) (undo-tree-id6136 . -5123) (undo-tree-id6137 . -5123) (undo-tree-id6138 . -5123) (undo-tree-id6139 . -5123) (undo-tree-id6140 . -5123) (undo-tree-id6141 . -5123) (undo-tree-id6142 . -5123) (undo-tree-id6143 . -5123) (undo-tree-id6144 . -5123) (undo-tree-id6145 . -5123) (undo-tree-id6146 . -5123) (undo-tree-id6147 . -5244) (undo-tree-id6148 . -5244) (undo-tree-id6149 . -5244) (undo-tree-id6150 . -5123) (undo-tree-id6151 . -5123) (undo-tree-id6152 . -5123) (undo-tree-id6153 . -5123) (undo-tree-id6154 . -5126) (undo-tree-id6155 . -5123) (undo-tree-id6156 . -5123) (undo-tree-id6157 . -5123) (undo-tree-id6158 . -5123) (undo-tree-id6159 . -5123) (undo-tree-id6160 . -5123) (undo-tree-id6161 . -5123) (undo-tree-id6162 . -4563) (undo-tree-id6163 . -5123) (undo-tree-id6164 . -5123) (undo-tree-id6165 . -4563) (undo-tree-id6166 . -5123) (undo-tree-id6167 . -5123) (undo-tree-id6168 . -5123) (undo-tree-id6169 . -5123)) nil (25759 41542 649679 252000) 0 nil])
([nil nil ((#("
def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate  second wave by applying another sinusoidal function to the time array
    # Similar to first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise  by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)
" 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 25 (fontified t face font-lock-function-name-face) 25 26 (fontified t face (rainbow-delimiters-depth-1-face)) 26 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 52 (fontified t) 52 54 (fontified t face font-lock-comment-delimiter-face) 54 105 (fontified t face font-lock-comment-face) 105 109 (fontified t) 109 114 (fontified t face font-lock-variable-name-face) 114 116 (fontified t) 116 121 (fontified t face font-lock-variable-name-face) 121 123 (fontified t) 123 131 (fontified t face font-lock-variable-name-face) 131 133 (fontified t) 133 141 (fontified t face font-lock-variable-name-face) 141 158 (fontified t) 158 159 (fontified t face (rainbow-delimiters-depth-1-face)) 159 175 (fontified t) 175 176 (fontified t face (rainbow-delimiters-depth-1-face)) 176 182 (fontified t) 182 184 (fontified t face font-lock-comment-delimiter-face) 184 231 (fontified t face font-lock-comment-face) 231 235 (fontified t) 235 239 (fontified t face font-lock-variable-name-face) 239 253 (fontified t) 253 254 (fontified t face (rainbow-delimiters-depth-1-face)) 254 267 (fontified t) 267 268 (fontified t face (rainbow-delimiters-depth-1-face)) 268 269 (fontified t) 269 270 (fontified t) 270 274 (fontified t) 274 276 (fontified t face font-lock-comment-delimiter-face) 276 352 (fontified t face font-lock-comment-face) 352 356 (fontified t) 356 358 (fontified t face font-lock-comment-delimiter-face) 358 418 (fontified t face font-lock-comment-face) 418 422 (fontified t) 422 428 (fontified t face font-lock-variable-name-face) 428 443 (fontified t) 443 444 (fontified t face (rainbow-delimiters-depth-1-face)) 444 445 (fontified t face (rainbow-delimiters-depth-2-face)) 445 460 (fontified t) 460 461 (fontified t face (rainbow-delimiters-depth-2-face)) 461 464 (fontified t) 464 465 (fontified t face (rainbow-delimiters-depth-2-face)) 465 480 (fontified t) 480 481 (fontified t face (rainbow-delimiters-depth-2-face)) 481 482 (fontified t face (rainbow-delimiters-depth-1-face)) 482 484 (fontified t) 484 486 (fontified t face font-lock-comment-delimiter-face) 486 493 (fontified t face font-lock-comment-face) 493 498 (fontified t) 498 500 (fontified t face font-lock-comment-delimiter-face) 500 580 (fontified t face font-lock-comment-face) 580 584 (fontified t) 584 586 (fontified t face font-lock-comment-delimiter-face) 586 665 (fontified t face font-lock-comment-face) 665 669 (fontified t) 669 675 (fontified t face font-lock-variable-name-face) 675 691 (fontified t) 691 692 (fontified t face (rainbow-delimiters-depth-1-face)) 692 693 (fontified t face (rainbow-delimiters-depth-2-face)) 693 708 (fontified t) 708 709 (fontified t face (rainbow-delimiters-depth-2-face)) 709 712 (fontified t) 712 713 (fontified t face (rainbow-delimiters-depth-2-face)) 713 728 (fontified t) 728 729 (fontified t face (rainbow-delimiters-depth-2-face)) 729 730 (fontified t face (rainbow-delimiters-depth-1-face)) 730 732 (fontified t) 732 734 (fontified t face font-lock-comment-delimiter-face) 734 743 (fontified t face font-lock-comment-face) 743 748 (fontified t) 748 750 (fontified t face font-lock-comment-delimiter-face) 750 770 (fontified t face font-lock-comment-face) 770 829 (face font-lock-comment-face fontified t) 829 833 (fontified t) 833 839 (fontified t face font-lock-variable-name-face) 839 849 (fontified t) 849 850 (fontified t face (rainbow-delimiters-depth-1-face)) 850 864 (fontified t) 864 865 (fontified t face (rainbow-delimiters-depth-2-face)) 865 884 (fontified t) 884 885 (fontified t face (rainbow-delimiters-depth-2-face)) 885 891 (fontified t) 891 892 (fontified t face (rainbow-delimiters-depth-1-face)) 892 894 (fontified t) 894 896 (fontified t face font-lock-comment-delimiter-face) 896 904 (fontified t face font-lock-comment-face) 904 909 (fontified t) 909 911 (fontified t face font-lock-comment-delimiter-face) 911 979 (fontified t face font-lock-comment-face) 979 983 (fontified t) 983 985 (fontified t face font-lock-comment-delimiter-face) 985 1025 (fontified t face font-lock-comment-face) 1025 1029 (fontified t) 1029 1035 (fontified t face font-lock-keyword-face) 1035 1042 (fontified t) 1042 1043 (fontified t face (rainbow-delimiters-depth-1-face)) 1043 1058 (fontified t) 1058 1059 (fontified t face (rainbow-delimiters-depth-1-face)) 1059 1066 (fontified t) 1066 1067 (fontified t face (rainbow-delimiters-depth-1-face)) 1067 1077 (fontified t) 1077 1078 (fontified t face (rainbow-delimiters-depth-1-face)) 1078 1079 (fontified t)) . 1626) (undo-tree-id6617 . -1078) (undo-tree-id6618 . -1078) (undo-tree-id6619 . -1) (undo-tree-id6620 . -4) (undo-tree-id6621 . -346) (undo-tree-id6622 . -351) (undo-tree-id6623 . -573) (undo-tree-id6624 . -574) (undo-tree-id6625 . -659) (undo-tree-id6626 . -660) (undo-tree-id6627 . -822) (undo-tree-id6628 . -824) (undo-tree-id6629 . -38) (undo-tree-id6630 . -45) (undo-tree-id6631 . -1) (undo-tree-id6632 . -4) (undo-tree-id6633 . -1) (undo-tree-id6634 . -4) (undo-tree-id6635 . -422) (undo-tree-id6636 . -428) (undo-tree-id6637 . -1078) (undo-tree-id6638 . -4) (undo-tree-id6639 . -4) (undo-tree-id6640 . -4) (undo-tree-id6641 . -4) (undo-tree-id6642 . -4) (undo-tree-id6643 . -4) (undo-tree-id6644 . -4) (undo-tree-id6645 . -4) (undo-tree-id6646 . -4) (undo-tree-id6647 . -4) (undo-tree-id6648 . -4) (undo-tree-id6649 . -4) (undo-tree-id6650 . -4) (undo-tree-id6651 . -4) (undo-tree-id6652 . -4) (undo-tree-id6653 . -4) (undo-tree-id6654 . -4) (undo-tree-id6655 . -4) (undo-tree-id6656 . -4) (undo-tree-id6657 . -4) (undo-tree-id6658 . -4) (undo-tree-id6659 . -4) (undo-tree-id6660 . -4) (undo-tree-id6661 . -4) (undo-tree-id6662 . -4) (undo-tree-id6663 . -4) (undo-tree-id6664 . -4) (undo-tree-id6665 . -4) (undo-tree-id6666 . -4) (undo-tree-id6667 . -4) (undo-tree-id6668 . -4) (undo-tree-id6669 . -4) (undo-tree-id6670 . -4) (undo-tree-id6671 . -4) (undo-tree-id6672 . -4) (undo-tree-id6673 . -4) (undo-tree-id6674 . -4) (undo-tree-id6675 . -4) (undo-tree-id6676 . -4) (undo-tree-id6677 . -4) (undo-tree-id6678 . -4) (undo-tree-id6679 . -4) (undo-tree-id6680 . -4) (undo-tree-id6681 . -4) (undo-tree-id6682 . -4) (undo-tree-id6683 . -4) (undo-tree-id6684 . -4) (undo-tree-id6685 . -4) (undo-tree-id6686 . -4) (undo-tree-id6687 . -4) (undo-tree-id6688 . -4) (undo-tree-id6689 . -4) (undo-tree-id6690 . -4) (undo-tree-id6691 . -4) (undo-tree-id6692 . -4) (undo-tree-id6693 . -4) (undo-tree-id6694 . -4) (undo-tree-id6695 . -4) (undo-tree-id6696 . -4) (undo-tree-id6697 . -4) (undo-tree-id6698 . -4) (undo-tree-id6699 . -4) (undo-tree-id6700 . -4) (undo-tree-id6701 . -4) (undo-tree-id6702 . -4) (undo-tree-id6703 . -4) (undo-tree-id6704 . -4) (undo-tree-id6705 . -4) (undo-tree-id6706 . -4) (undo-tree-id6707 . -4) (undo-tree-id6708 . -4) (undo-tree-id6709 . -4) (undo-tree-id6710 . -4) (undo-tree-id6711 . -4) (undo-tree-id6712 . -4) (undo-tree-id6713 . -4) (undo-tree-id6714 . -4) (undo-tree-id6715 . -4) (undo-tree-id6716 . -4) (undo-tree-id6717 . -4) (undo-tree-id6718 . -4) (undo-tree-id6719 . -4) (undo-tree-id6720 . -4) (undo-tree-id6721 . -4) (undo-tree-id6722 . -4) (undo-tree-id6723 . -4) (undo-tree-id6724 . -4) (undo-tree-id6725 . -4) (undo-tree-id6726 . -4) (undo-tree-id6727 . -4) (undo-tree-id6728 . -4) (undo-tree-id6729 . -1025) (undo-tree-id6730 . -1025) (undo-tree-id6731 . -1025) (undo-tree-id6732 . -1025) (undo-tree-id6733 . -1025) (undo-tree-id6734 . -1025) (undo-tree-id6735 . -1025) (undo-tree-id6736 . -1025) (undo-tree-id6737 . -1025) (undo-tree-id6738 . -1025) (undo-tree-id6739 . -1025) (undo-tree-id6740 . -1025) (undo-tree-id6741 . -1025) (undo-tree-id6742 . -1025) (undo-tree-id6743 . -1025) (undo-tree-id6744 . -1025) (undo-tree-id6745 . -1025) (undo-tree-id6746 . -1025) (undo-tree-id6747 . -1025) (undo-tree-id6748 . -1025) (undo-tree-id6749 . -1025) (undo-tree-id6750 . -1025) (undo-tree-id6751 . -1025) (undo-tree-id6752 . -1025) (undo-tree-id6753 . -1025) (undo-tree-id6754 . -1025) (undo-tree-id6755 . -1025) (undo-tree-id6756 . -1025) (undo-tree-id6757 . -1025) (undo-tree-id6758 . -1025) (undo-tree-id6759 . -1025) (undo-tree-id6760 . -1025) (undo-tree-id6761 . -1025) (undo-tree-id6762 . -1025) (undo-tree-id6763 . -1025) (undo-tree-id6764 . -1025) (undo-tree-id6765 . -1025) (undo-tree-id6766 . -1025) (undo-tree-id6767 . -1025) (undo-tree-id6768 . -1025) (undo-tree-id6769 . -1025) (undo-tree-id6770 . -1025) (undo-tree-id6771 . -1025) (undo-tree-id6772 . -1025) (undo-tree-id6773 . -1025) (undo-tree-id6774 . -1025) (undo-tree-id6775 . -1025) (undo-tree-id6776 . -1025) (undo-tree-id6777 . -1025) (undo-tree-id6778 . -1025) (undo-tree-id6779 . -1025) (undo-tree-id6780 . -1025) (undo-tree-id6781 . -1025) (undo-tree-id6782 . -1078) (undo-tree-id6783 . -1079) (undo-tree-id6784 . -1079) (undo-tree-id6785 . -1079) (undo-tree-id6786 . -1079) (undo-tree-id6787 . -1079) (undo-tree-id6788 . -1079) (undo-tree-id6789 . -1025) (undo-tree-id6790 . -1078) (undo-tree-id6791 . -1078) (undo-tree-id6792 . -1078) (undo-tree-id6793 . -1078) (undo-tree-id6794 . -1078) (undo-tree-id6795 . -1078) (undo-tree-id6796 . -1079) 2704 (t 25759 41542 664659 431000)) nil (25759 42181 752662 165000) 0 nil])
([nil nil ((1 . 5143) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)



def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential(
    [keras.layers.Flatten(input_shape=[50, 1]), keras.layers.Dense(1)]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))


model.evaluate(X_valid, y_valid)


###############################################################################
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 1018 1023 (fontified t) 1023 1025 (fontified t face font-lock-comment-delimiter-face) 1025 1108 (fontified t face font-lock-comment-face) 1108 1112 (fontified t) 1112 1114 (fontified t face font-lock-comment-delimiter-face) 1114 1197 (fontified t face font-lock-comment-face) 1197 1201 (fontified t) 1201 1207 (fontified t face font-lock-variable-name-face) 1207 1223 (fontified t) 1223 1224 (fontified t face (rainbow-delimiters-depth-1-face)) 1224 1225 (fontified t face (rainbow-delimiters-depth-2-face)) 1225 1240 (fontified t) 1240 1241 (fontified t face (rainbow-delimiters-depth-2-face)) 1241 1244 (fontified t) 1244 1245 (fontified t face (rainbow-delimiters-depth-2-face)) 1245 1260 (fontified t) 1260 1261 (fontified t face (rainbow-delimiters-depth-2-face)) 1261 1262 (fontified t face (rainbow-delimiters-depth-1-face)) 1262 1264 (fontified t) 1264 1266 (fontified t face font-lock-comment-delimiter-face) 1266 1275 (fontified t face font-lock-comment-face) 1275 1280 (fontified t) 1280 1282 (fontified t face font-lock-comment-delimiter-face) 1282 1374 (fontified t face font-lock-comment-face) 1374 1378 (fontified t) 1378 1384 (fontified t face font-lock-variable-name-face) 1384 1394 (fontified t) 1394 1395 (fontified t face (rainbow-delimiters-depth-1-face)) 1395 1409 (fontified t) 1409 1410 (fontified t face (rainbow-delimiters-depth-2-face)) 1410 1429 (fontified t) 1429 1430 (fontified t face (rainbow-delimiters-depth-2-face)) 1430 1436 (fontified t) 1436 1437 (fontified t face (rainbow-delimiters-depth-1-face)) 1437 1439 (fontified t) 1439 1441 (fontified t face font-lock-comment-delimiter-face) 1441 1449 (fontified t face font-lock-comment-face) 1449 1454 (fontified t) 1454 1456 (fontified t face font-lock-comment-delimiter-face) 1456 1518 (fontified t face font-lock-comment-face) 1518 1524 (fontified t face font-lock-comment-face) 1524 1528 (fontified t) 1528 1530 (fontified t face font-lock-comment-delimiter-face) 1530 1570 (fontified t face font-lock-comment-face) 1570 1574 (fontified t) 1574 1580 (fontified t face font-lock-keyword-face) 1580 1587 (fontified t) 1587 1588 (fontified t face (rainbow-delimiters-depth-1-face)) 1588 1603 (fontified t) 1603 1604 (fontified t face (rainbow-delimiters-depth-1-face)) 1604 1611 (fontified t) 1611 1612 (fontified t face (rainbow-delimiters-depth-1-face)) 1612 1622 (fontified t) 1622 1623 (fontified t face (rainbow-delimiters-depth-1-face)) 1623 1625 (fontified t) 1625 1626 (fontified t) 1626 1627 (fontified t) 1627 1630 (fontified t face font-lock-keyword-face) 1630 1631 (fontified t) 1631 1642 (fontified t face font-lock-function-name-face) 1642 1643 (fontified t face (rainbow-delimiters-depth-1-face)) 1643 1658 (fontified t) 1658 1662 (fontified t face font-lock-constant-face) 1662 1671 (fontified t) 1671 1675 (fontified t face font-lock-constant-face) 1675 1685 (fontified t) 1685 1690 (fontified t face font-lock-string-face) 1690 1700 (fontified t) 1700 1708 (fontified t face font-lock-string-face) 1708 1717 (fontified t) 1717 1721 (fontified t face font-lock-constant-face) 1721 1722 (fontified t) 1722 1723 (fontified t face (rainbow-delimiters-depth-1-face)) 1723 1729 (fontified t) 1729 1731 (fontified t face font-lock-comment-delimiter-face) 1731 1747 (fontified t face font-lock-comment-face) 1747 1759 (fontified t) 1759 1760 (fontified t face (rainbow-delimiters-depth-1-face)) 1760 1768 (fontified t) 1768 1772 (fontified t face font-lock-string-face) 1772 1773 (fontified t face (rainbow-delimiters-depth-1-face)) 1773 1779 (fontified t) 1779 1781 (fontified t face font-lock-comment-delimiter-face) 1781 1816 (fontified t face font-lock-comment-face) 1816 1820 (fontified t) 1820 1822 (fontified t face font-lock-keyword-face) 1822 1825 (fontified t) 1825 1827 (fontified t face font-lock-keyword-face) 1827 1828 (fontified t) 1828 1831 (fontified t face font-lock-keyword-face) 1831 1832 (fontified t) 1832 1836 (fontified t face font-lock-constant-face) 1836 1838 (fontified t) 1838 1854 (fontified t) 1854 1855 (fontified t face (rainbow-delimiters-depth-1-face)) 1855 1867 (fontified t) 1867 1871 (fontified t face font-lock-string-face) 1871 1879 (fontified t) 1879 1887 (fontified t face font-lock-string-face) 1887 1888 (fontified t face (rainbow-delimiters-depth-1-face)) 1888 1889 (fontified t) 1889 1894 (fontified t) 1894 1896 (fontified t face font-lock-comment-delimiter-face) 1896 1934 (fontified t face font-lock-comment-face) 1934 1938 (fontified t) 1938 1940 (fontified t face font-lock-keyword-face) 1940 1948 (fontified t) 1948 1950 (fontified t face font-lock-keyword-face) 1950 1951 (fontified t) 1951 1954 (fontified t face font-lock-keyword-face) 1954 1955 (fontified t) 1955 1959 (fontified t face font-lock-constant-face) 1959 1977 (fontified t) 1977 1978 (fontified t face (rainbow-delimiters-depth-1-face)) 1978 1995 (fontified t) 1995 1999 (fontified t face font-lock-string-face) 1999 2022 (fontified t) 2022 2034 (fontified t face font-lock-string-face) 2034 2035 (fontified t face (rainbow-delimiters-depth-1-face)) 2035 2036 (fontified t) 2036 2037 (fontified t) 2037 2041 (fontified t) 2041 2043 (fontified t face font-lock-comment-delimiter-face) 2043 2073 (fontified t face font-lock-comment-face) 2073 2085 (fontified t) 2085 2086 (fontified t face (rainbow-delimiters-depth-1-face)) 2086 2090 (fontified t face font-lock-constant-face) 2090 2091 (fontified t face (rainbow-delimiters-depth-1-face)) 2091 2097 (fontified t) 2097 2099 (fontified t face font-lock-comment-delimiter-face) 2099 2126 (fontified t face font-lock-comment-face) 2126 2132 (face font-lock-comment-face fontified t) 2132 2136 (fontified t) 2136 2138 (fontified t face font-lock-keyword-face) 2138 2166 (fontified t) 2166 2167 (fontified t face (rainbow-delimiters-depth-1-face)) 2167 2187 (fontified t) 2187 2188 (fontified t face (rainbow-delimiters-depth-1-face)) 2188 2194 (fontified t) 2194 2196 (fontified t face font-lock-comment-delimiter-face) 2196 2229 (fontified t face font-lock-comment-face) 2229 2233 (fontified t) 2233 2235 (fontified t face font-lock-keyword-face) 2235 2263 (fontified t) 2263 2264 (fontified t face (rainbow-delimiters-depth-1-face)) 2264 2296 (fontified t) 2296 2297 (fontified t face (rainbow-delimiters-depth-1-face)) 2297 2303 (fontified t) 2303 2305 (fontified t face font-lock-comment-delimiter-face) 2305 2334 (fontified t face font-lock-comment-face) 2334 2348 (fontified t) 2348 2349 (fontified t face (rainbow-delimiters-depth-1-face)) 2349 2371 (fontified t) 2371 2372 (fontified t face (rainbow-delimiters-depth-1-face)) 2372 2378 (fontified t) 2378 2380 (fontified t face font-lock-comment-delimiter-face) 2380 2413 (fontified t face font-lock-comment-face) 2413 2425 (fontified t) 2425 2426 (fontified t face (rainbow-delimiters-depth-1-face)) 2426 2427 (fontified t face (rainbow-delimiters-depth-2-face)) 2427 2448 (fontified t) 2448 2449 (fontified t face (rainbow-delimiters-depth-2-face)) 2449 2450 (fontified t face (rainbow-delimiters-depth-1-face)) 2450 2456 (fontified t) 2456 2458 (fontified t face font-lock-comment-delimiter-face) 2458 2524 (fontified t face font-lock-comment-face) 2524 2528 (fontified t) 2528 2530 (fontified t face font-lock-keyword-face) 2530 2537 (fontified t) 2537 2538 (fontified t) 2538 2541 (fontified t face font-lock-keyword-face) 2541 2542 (fontified t) 2542 2543 (fontified t face (rainbow-delimiters-depth-1-face)) 2543 2545 (fontified t) 2545 2547 (fontified t face font-lock-keyword-face) 2547 2554 (fontified t) 2554 2555 (fontified t face (rainbow-delimiters-depth-1-face)) 2555 2557 (fontified t) 2557 2575 (fontified t) 2575 2576 (fontified t face (rainbow-delimiters-depth-1-face)) 2576 2593 (fontified t) 2593 2605 (fontified t face font-lock-string-face) 2605 2606 (fontified t face (rainbow-delimiters-depth-1-face)) 2606 2607 (fontified t) 2607 2609 (fontified t) 2609 2612 (fontified t face font-lock-keyword-face) 2612 2613 (fontified t) 2613 2632 (fontified t face font-lock-function-name-face) 2632 2633 (face font-lock-function-name-face fontified t) 2633 2634 (face (rainbow-delimiters-depth-1-face) fontified t) 2634 2648 (fontified t) 2648 2649 (face (rainbow-delimiters-depth-1-face) fontified t) 2649 2651 (fontified t) 2655 2656 (face font-lock-doc-face syntax-table (15)) 2656 2831 (face font-lock-doc-face) 2831 2832 (face font-lock-doc-face syntax-table (15)) 2837 2839 (face font-lock-comment-delimiter-face) 2839 2868 (face font-lock-comment-face) 2880 2881 (face (rainbow-delimiters-depth-1-face)) 2890 2891 (face (rainbow-delimiters-depth-2-face)) 2891 2894 (face font-lock-builtin-face) 2894 2895 (face (rainbow-delimiters-depth-3-face)) 2899 2900 (face (rainbow-delimiters-depth-3-face)) 2900 2901 (face (rainbow-delimiters-depth-2-face)) 2915 2920 (face font-lock-string-face) 2928 2943 (face font-lock-string-face) 2943 2944 (face (rainbow-delimiters-depth-1-face)) 2950 2952 (face font-lock-comment-delimiter-face) 2952 2983 (face font-lock-comment-face) 2995 2996 (face (rainbow-delimiters-depth-1-face)) 3005 3006 (face (rainbow-delimiters-depth-2-face)) 3006 3009 (face font-lock-builtin-face) 3009 3010 (face (rainbow-delimiters-depth-3-face)) 3018 3019 (face (rainbow-delimiters-depth-3-face)) 3019 3020 (face (rainbow-delimiters-depth-2-face)) 3036 3041 (face font-lock-string-face) 3049 3066 (face font-lock-string-face) 3066 3067 (face (rainbow-delimiters-depth-1-face)) 3073 3075 (face font-lock-comment-delimiter-face) 3075 3115 (face font-lock-comment-face) 3126 3127 (face (rainbow-delimiters-depth-1-face)) 3127 3128 (face (rainbow-delimiters-depth-1-face)) 3152 3153 (face (rainbow-delimiters-depth-1-face)) 3175 3176 (face (rainbow-delimiters-depth-2-face)) 3184 3188 (face font-lock-constant-face) 3188 3189 (face (rainbow-delimiters-depth-2-face)) 3189 3190 (face (rainbow-delimiters-depth-1-face)) 3196 3198 (face font-lock-comment-delimiter-face) 3198 3231 (face font-lock-comment-face) 3243 3244 (face (rainbow-delimiters-depth-1-face)) 3244 3245 (face (rainbow-delimiters-depth-2-face)) 3259 3260 (face (rainbow-delimiters-depth-2-face)) 3260 3261 (face (rainbow-delimiters-depth-1-face)) 3267 3269 (face font-lock-comment-delimiter-face) 3269 3294 (face font-lock-comment-face) 3308 3309 (face (rainbow-delimiters-depth-1-face)) 3320 3321 (face (rainbow-delimiters-depth-1-face)) 3327 3329 (face font-lock-comment-delimiter-face) 3329 3350 (face font-lock-comment-face) 3364 3365 (face (rainbow-delimiters-depth-1-face)) 3365 3373 (face font-lock-string-face) 3373 3374 (face (rainbow-delimiters-depth-1-face)) 3380 3382 (face font-lock-comment-delimiter-face) 3382 3403 (face font-lock-comment-face) 3417 3418 (face (rainbow-delimiters-depth-1-face)) 3418 3424 (face font-lock-string-face) 3424 3425 (face (rainbow-delimiters-depth-1-face)) 3431 3433 (face font-lock-comment-delimiter-face) 3433 3463 (face font-lock-comment-face) 3475 3476 (face (rainbow-delimiters-depth-1-face)) 3476 3480 (face font-lock-constant-face) 3480 3481 (face (rainbow-delimiters-depth-1-face)) 3484 3563 (face font-lock-comment-delimiter-face) 3563 3564 (face font-lock-comment-face) 3564 3571 (face font-lock-variable-name-face) 3577 3583 (face font-lock-variable-name-face) 3606 3607 (face (rainbow-delimiters-depth-1-face)) 3625 3626 (face (rainbow-delimiters-depth-1-face)) 3628 3707 (face font-lock-comment-delimiter-face) 3707 3708 (face font-lock-comment-face) 3708 3710 (face font-lock-comment-delimiter-face) 3710 3731 (face font-lock-comment-face) 3731 3738 (face font-lock-variable-name-face) 3740 3747 (face font-lock-variable-name-face) 3756 3757 (face (rainbow-delimiters-depth-1-face)) 3772 3773 (face (rainbow-delimiters-depth-1-face)) 3781 3782 (face (rainbow-delimiters-depth-1-face)) 3791 3792 (face (rainbow-delimiters-depth-1-face)) 3793 3800 (face font-lock-variable-name-face) 3802 3809 (face font-lock-variable-name-face) 3818 3819 (face (rainbow-delimiters-depth-1-face)) 3838 3839 (face (rainbow-delimiters-depth-1-face)) 3847 3848 (face (rainbow-delimiters-depth-1-face)) 3861 3862 (face (rainbow-delimiters-depth-1-face)) 3863 3869 (face font-lock-variable-name-face) 3871 3877 (face font-lock-variable-name-face) 3886 3887 (face (rainbow-delimiters-depth-1-face)) 3902 3903 (face (rainbow-delimiters-depth-1-face)) 3911 3912 (face (rainbow-delimiters-depth-1-face)) 3921 3922 (face (rainbow-delimiters-depth-1-face)) 3923 3928 (face font-lock-keyword-face) 3928 3929 (face (rainbow-delimiters-depth-1-face)) 3957 3958 (face (rainbow-delimiters-depth-1-face)) 3960 3984 (face font-lock-comment-delimiter-face) 3984 4039 (face font-lock-comment-delimiter-face) 4039 4040 (face font-lock-comment-face) 4040 4041 (face font-lock-comment-delimiter-face) 4041 4042 (face font-lock-comment-face) 4042 4045 (face font-lock-variable-name-face) 4047 4051 (face font-lock-variable-name-face) 4066 4067 (face (rainbow-delimiters-depth-1-face)) 4092 4096 (face font-lock-constant-face) 4106 4107 (face (rainbow-delimiters-depth-2-face)) 4112 4113 (face (rainbow-delimiters-depth-2-face)) 4113 4114 (face (rainbow-delimiters-depth-1-face)) 4115 4118 (face font-lock-keyword-face) 4123 4125 (face font-lock-keyword-face) 4126 4131 (face font-lock-builtin-face) 4131 4132 (face (rainbow-delimiters-depth-1-face)) 4133 4134 (face (rainbow-delimiters-depth-1-face)) 4147 4148 (face (rainbow-delimiters-depth-1-face)) 4152 4153 (face (rainbow-delimiters-depth-2-face)) 4156 4157 (face (rainbow-delimiters-depth-2-face)) 4157 4158 (face (rainbow-delimiters-depth-1-face)) 4174 4175 (face (rainbow-delimiters-depth-1-face)) 4191 4192 (face (rainbow-delimiters-depth-2-face)) 4201 4202 (face (rainbow-delimiters-depth-2-face)) 4219 4220 (face (rainbow-delimiters-depth-2-face)) 4226 4227 (face (rainbow-delimiters-depth-2-face)) 4245 4246 (face (rainbow-delimiters-depth-2-face)) 4246 4254 (face font-lock-string-face) 4255 4257 (face font-lock-keyword-face) 4267 4271 (face font-lock-keyword-face) 4272 4276 (face font-lock-constant-face) 4276 4277 (face (rainbow-delimiters-depth-2-face)) 4294 4295 (face (rainbow-delimiters-depth-2-face)) 4303 4304 (face (rainbow-delimiters-depth-2-face)) 4310 4311 (face (rainbow-delimiters-depth-1-face)) 4320 4321 (face (rainbow-delimiters-depth-1-face)) 4321 4322 (face (rainbow-delimiters-depth-1-face)) 4324 4330 (face font-lock-variable-name-face) 4340 4341 (face (rainbow-delimiters-depth-1-face)) 4346 4347 (face (rainbow-delimiters-depth-1-face)) 4355 4356 (face (rainbow-delimiters-depth-1-face)) 4387 4388 (face (rainbow-delimiters-depth-2-face)) 4403 4404 (face (rainbow-delimiters-depth-2-face)) 4404 4405 (face (rainbow-delimiters-depth-1-face)) 4407 4486 (face font-lock-comment-delimiter-face) 4486 4487 (face font-lock-comment-face) 4498 4499 (face (rainbow-delimiters-depth-1-face)) 4506 4507 (face (rainbow-delimiters-depth-2-face)) 4514 4515 (face (rainbow-delimiters-depth-2-face)) 4524 4525 (face (rainbow-delimiters-depth-2-face)) 4529 4530 (face (rainbow-delimiters-depth-2-face)) 4538 4539 (face (rainbow-delimiters-depth-2-face)) 4543 4544 (face (rainbow-delimiters-depth-2-face)) 4544 4545 (face (rainbow-delimiters-depth-1-face)) 4554 4555 (face (rainbow-delimiters-depth-1-face)) 4555 4556 (face (rainbow-delimiters-depth-1-face)) 4572 4573 (face (rainbow-delimiters-depth-1-face)) 4575 4576 (face (rainbow-delimiters-depth-1-face)) 4595 4596 (face (rainbow-delimiters-depth-1-face)) 4598 4599 (face (rainbow-delimiters-depth-1-face)) 4601 4606 (face font-lock-variable-name-face) 4632 4633 (face (rainbow-delimiters-depth-1-face)) 4638 4639 (face (rainbow-delimiters-depth-2-face)) 4659 4660 (face (rainbow-delimiters-depth-3-face)) 4672 4673 (face (rainbow-delimiters-depth-4-face)) 4678 4679 (face (rainbow-delimiters-depth-4-face)) 4679 4680 (face (rainbow-delimiters-depth-3-face)) 4700 4701 (face (rainbow-delimiters-depth-3-face)) 4702 4703 (face (rainbow-delimiters-depth-3-face)) 4703 4704 (face (rainbow-delimiters-depth-2-face)) 4705 4706 (face (rainbow-delimiters-depth-1-face)) 4714 4721 (face font-lock-builtin-face) 4721 4722 (face (rainbow-delimiters-depth-1-face)) 4727 4732 (face font-lock-string-face) 4744 4750 (face font-lock-string-face) 4750 4751 (face (rainbow-delimiters-depth-1-face)) 4752 4759 (face font-lock-variable-name-face) 4771 4772 (face (rainbow-delimiters-depth-1-face)) 4817 4818 (face (rainbow-delimiters-depth-2-face)) 4834 4835 (face (rainbow-delimiters-depth-2-face)) 4835 4836 (face (rainbow-delimiters-depth-1-face)) 4853 4854 (face (rainbow-delimiters-depth-1-face)) 4870 4871 (face (rainbow-delimiters-depth-1-face)) 4874 4953 (face font-lock-comment-delimiter-face) 4953 4954 (face font-lock-comment-face) 4974 4975 (face (rainbow-delimiters-depth-1-face)) 4990 4991 (face (rainbow-delimiters-depth-2-face)) 4991 4997 (face font-lock-string-face) 4997 4998 (face (rainbow-delimiters-depth-2-face)) 5015 5016 (face (rainbow-delimiters-depth-2-face)) 5016 5026 (face font-lock-string-face) 5026 5027 (face (rainbow-delimiters-depth-2-face)) 5027 5028 (face (rainbow-delimiters-depth-1-face)) 5037 5038 (face (rainbow-delimiters-depth-1-face)) 5038 5039 (face (rainbow-delimiters-depth-1-face)) 5041 5046 (face font-lock-variable-name-face) 5046 5047 (face font-lock-variable-name-face) 5063 5064 (face (rainbow-delimiters-depth-1-face)) 5071 5072 (face (rainbow-delimiters-depth-1-face)) 5084 5085 (face (rainbow-delimiters-depth-1-face)) 5092 5093 (face (rainbow-delimiters-depth-2-face)) 5100 5101 (face (rainbow-delimiters-depth-2-face)) 5110 5111 (face (rainbow-delimiters-depth-2-face)) 5115 5116 (face (rainbow-delimiters-depth-2-face)) 5124 5125 (face (rainbow-delimiters-depth-2-face)) 5129 5130 (face (rainbow-delimiters-depth-2-face)) 5130 5131 (face (rainbow-delimiters-depth-1-face)) 5140 5141 (face (rainbow-delimiters-depth-1-face)) 5141 5142 (face (rainbow-delimiters-depth-1-face))) . 1) (undo-tree-id6182 . -1625) (undo-tree-id6183 . -1625) (undo-tree-id6184 . -525) (undo-tree-id6185 . -1625) (undo-tree-id6186 . 3518) (undo-tree-id6187 . -4175) (undo-tree-id6188 . -38) (undo-tree-id6189 . -44) (undo-tree-id6190 . -106) (undo-tree-id6191 . -110) (undo-tree-id6192 . -871) (undo-tree-id6193 . -876) (undo-tree-id6194 . -1097) (undo-tree-id6195 . -1101) (undo-tree-id6196 . -1187) (undo-tree-id6197 . -1188) (undo-tree-id6198 . -1355) (undo-tree-id6199 . -1356) (undo-tree-id6200 . -1625) (undo-tree-id6201 . -1625) (undo-tree-id6202 . -1625) (undo-tree-id6203 . -1625) (undo-tree-id6204 . -1625) (undo-tree-id6205 . -1625) (undo-tree-id6206 . -1625) (undo-tree-id6207 . -1625) (undo-tree-id6208 . -1625) (undo-tree-id6209 . -1625) (undo-tree-id6210 . -3061) (undo-tree-id6211 . -3065) (undo-tree-id6212 . -4827) (undo-tree-id6213 . -4834) (undo-tree-id6214 . -1) (undo-tree-id6215 . -38) (undo-tree-id6216 . -44) (undo-tree-id6217 . -106) (undo-tree-id6218 . -110) (undo-tree-id6219 . -106) (undo-tree-id6220 . -110) (undo-tree-id6221 . -563) (undo-tree-id6222 . -570) (undo-tree-id6223 . -526) (undo-tree-id6224 . -529) (undo-tree-id6225 . -947) (undo-tree-id6226 . -953) (undo-tree-id6227 . -1625) (undo-tree-id6228 . -1625) (undo-tree-id6229 . -1625) (undo-tree-id6230 . -1625) (undo-tree-id6231 . -1625) (undo-tree-id6232 . -1625) (undo-tree-id6233 . -1625) (undo-tree-id6234 . -1625) (undo-tree-id6235 . -1627) (undo-tree-id6236 . -1630) (undo-tree-id6237 . -1627) (undo-tree-id6238 . -1630) (undo-tree-id6239 . -1648) (undo-tree-id6240 . -1654) (undo-tree-id6241 . -1664) (undo-tree-id6242 . -1670) (undo-tree-id6243 . -1656) (undo-tree-id6244 . -1657) (undo-tree-id6245 . -3564) (undo-tree-id6246 . -3571) (undo-tree-id6247 . -4752) (undo-tree-id6248 . -4759) (undo-tree-id6249 . -943) (undo-tree-id6250 . -943) (undo-tree-id6251 . -943) (undo-tree-id6252 . -943) (undo-tree-id6253 . -943) (undo-tree-id6254 . -943) (undo-tree-id6255 . -943) (undo-tree-id6256 . -943) (undo-tree-id6257 . -943) (undo-tree-id6258 . -943) (undo-tree-id6259 . -943) (undo-tree-id6260 . -943) (undo-tree-id6261 . -943) (undo-tree-id6262 . -943) (undo-tree-id6263 . -943) (undo-tree-id6264 . -943) (undo-tree-id6265 . -943) (undo-tree-id6266 . -943) (undo-tree-id6267 . -943) (undo-tree-id6268 . -943) (undo-tree-id6269 . -943) (undo-tree-id6270 . -943) (undo-tree-id6271 . -943) (undo-tree-id6272 . -943) (undo-tree-id6273 . -943) (undo-tree-id6274 . -943) (undo-tree-id6275 . -943) (undo-tree-id6276 . -524) (undo-tree-id6277 . -524) (undo-tree-id6278 . -524) (undo-tree-id6279 . -524) (undo-tree-id6280 . -524) (undo-tree-id6281 . -524) (undo-tree-id6282 . -524) (undo-tree-id6283 . -524) (undo-tree-id6284 . -524) (undo-tree-id6285 . -524) (undo-tree-id6286 . -524) (undo-tree-id6287 . -524) (undo-tree-id6288 . -524) (undo-tree-id6289 . -524) (undo-tree-id6290 . -524) (undo-tree-id6291 . -524) (undo-tree-id6292 . -524) (undo-tree-id6293 . -524) (undo-tree-id6294 . -524) (undo-tree-id6295 . -524) (undo-tree-id6296 . -524) (undo-tree-id6297 . -524) (undo-tree-id6298 . -524) (undo-tree-id6299 . -524) (undo-tree-id6300 . -524) (undo-tree-id6301 . -524) (undo-tree-id6302 . -524) (undo-tree-id6303 . -524) (undo-tree-id6304 . -524) (undo-tree-id6305 . -524) (undo-tree-id6306 . -524) (undo-tree-id6307 . -524) (undo-tree-id6308 . -524) (undo-tree-id6309 . -877) (undo-tree-id6310 . -877) (undo-tree-id6311 . -877) (undo-tree-id6312 . -877) (undo-tree-id6313 . -877) (undo-tree-id6314 . -877) (undo-tree-id6315 . -877) (undo-tree-id6316 . -877) (undo-tree-id6317 . -877) (undo-tree-id6318 . -877) (undo-tree-id6319 . -877) (undo-tree-id6320 . -877) (undo-tree-id6321 . -877) (undo-tree-id6322 . -877) (undo-tree-id6323 . -877) (undo-tree-id6324 . -877) (undo-tree-id6325 . -877) (undo-tree-id6326 . -877) (undo-tree-id6327 . -877) (undo-tree-id6328 . -877) (undo-tree-id6329 . -877) (undo-tree-id6330 . -877) (undo-tree-id6331 . -877) (undo-tree-id6332 . -877) (undo-tree-id6333 . -877) (undo-tree-id6334 . -1625) (undo-tree-id6335 . -1625) (undo-tree-id6336 . -1625) (undo-tree-id6337 . -1625) (undo-tree-id6338 . -1625) (undo-tree-id6339 . -1625) (undo-tree-id6340 . -1625) (undo-tree-id6341 . -1625) (undo-tree-id6342 . -1625) (undo-tree-id6343 . -1625) (undo-tree-id6344 . -1625) (undo-tree-id6345 . -1625) (undo-tree-id6346 . -1625) (undo-tree-id6347 . -1625) (undo-tree-id6348 . -1625) (undo-tree-id6349 . -1625) (undo-tree-id6350 . -1625) (undo-tree-id6351 . -1625) (undo-tree-id6352 . -1625) (undo-tree-id6353 . -1625) (undo-tree-id6354 . -1625) (undo-tree-id6355 . -1625) (undo-tree-id6356 . -1625) (undo-tree-id6357 . -1625) (undo-tree-id6358 . -1625) (undo-tree-id6359 . -1625) (undo-tree-id6360 . -1625) (undo-tree-id6361 . -1625) (undo-tree-id6362 . -1625) (undo-tree-id6363 . -1625) (undo-tree-id6364 . -1625) (undo-tree-id6365 . -1625) (undo-tree-id6366 . -1625) (undo-tree-id6367 . -1625) (undo-tree-id6368 . -1625) (undo-tree-id6369 . -1625) (undo-tree-id6370 . -1625) (undo-tree-id6371 . -1625) (undo-tree-id6372 . -1625) (undo-tree-id6373 . -1625) (undo-tree-id6374 . -1625) (undo-tree-id6375 . -1625) (undo-tree-id6376 . -1625) (undo-tree-id6377 . -1625) (undo-tree-id6378 . -1625) (undo-tree-id6379 . -1625) (undo-tree-id6380 . -1625) (undo-tree-id6381 . -1625) (undo-tree-id6382 . -1625) (undo-tree-id6383 . -1625) (undo-tree-id6384 . -1625) (undo-tree-id6385 . -1625) (undo-tree-id6386 . -1625) (undo-tree-id6387 . -1625) (undo-tree-id6388 . -1625) (undo-tree-id6389 . -1625) (undo-tree-id6390 . -1625) (undo-tree-id6391 . -1625) (undo-tree-id6392 . -1625) (undo-tree-id6393 . -1625) (undo-tree-id6394 . -1625) (undo-tree-id6395 . -1625) (undo-tree-id6396 . -1625) (undo-tree-id6397 . -1625) (undo-tree-id6398 . -1625) (undo-tree-id6399 . -1625) (undo-tree-id6400 . -1625) (undo-tree-id6401 . -1625) (undo-tree-id6402 . -1625) (undo-tree-id6403 . -1625) (undo-tree-id6404 . -1625) (undo-tree-id6405 . -1625) (undo-tree-id6406 . -1625) (undo-tree-id6407 . -1625) (undo-tree-id6408 . -1625) (undo-tree-id6409 . -1625) (undo-tree-id6410 . -1625) (undo-tree-id6411 . -1625) (undo-tree-id6412 . -1625) (undo-tree-id6413 . -1625) (undo-tree-id6414 . -1625) (undo-tree-id6415 . -1625) (undo-tree-id6416 . -1625) (undo-tree-id6417 . -1625) (undo-tree-id6418 . -1625) (undo-tree-id6419 . -1625) (undo-tree-id6420 . -1625) (undo-tree-id6421 . -1625) (undo-tree-id6422 . -1625) (undo-tree-id6423 . -1625) (undo-tree-id6424 . -1625) (undo-tree-id6425 . -1625) (undo-tree-id6426 . -1625) (undo-tree-id6427 . -1625) (undo-tree-id6428 . -1625) (undo-tree-id6429 . -1625) (undo-tree-id6430 . -1625) (undo-tree-id6431 . -1625) (undo-tree-id6432 . -1625) (undo-tree-id6433 . -1625) (undo-tree-id6434 . -1625) (undo-tree-id6435 . -1625) (undo-tree-id6436 . -1625) (undo-tree-id6437 . -1625) (undo-tree-id6438 . -1625) (undo-tree-id6439 . -1625) (undo-tree-id6440 . -1625) (undo-tree-id6441 . -1625) (undo-tree-id6442 . -1625) (undo-tree-id6443 . -1625) (undo-tree-id6444 . -1625) (undo-tree-id6445 . -1625) (undo-tree-id6446 . -1625) (undo-tree-id6447 . -1625) (undo-tree-id6448 . -1625) (undo-tree-id6449 . -1625) (undo-tree-id6450 . -1625) (undo-tree-id6451 . -1625) (undo-tree-id6452 . -1625) (undo-tree-id6453 . -1625) (undo-tree-id6454 . -1625) (undo-tree-id6455 . -1625) (undo-tree-id6456 . -1625) (undo-tree-id6457 . -1625) (undo-tree-id6458 . -1625) (undo-tree-id6459 . -1625) (undo-tree-id6460 . -1625) (undo-tree-id6461 . -1625) (undo-tree-id6462 . -1625) (undo-tree-id6463 . -1625) (undo-tree-id6464 . -1625) (undo-tree-id6465 . -1625) (undo-tree-id6466 . -1625) (undo-tree-id6467 . -1625) (undo-tree-id6468 . -1625) (undo-tree-id6469 . -1625) (undo-tree-id6470 . -1625) (undo-tree-id6471 . -1625) (undo-tree-id6472 . -1625) (undo-tree-id6473 . -1625) (undo-tree-id6474 . -1625) (undo-tree-id6475 . -1625) (undo-tree-id6476 . -1625) (undo-tree-id6477 . -1625) (undo-tree-id6478 . -1625) (undo-tree-id6479 . -1625) (undo-tree-id6480 . -1625) (undo-tree-id6481 . -1625) (undo-tree-id6482 . -1625) (undo-tree-id6483 . -1625) (undo-tree-id6484 . -1625) (undo-tree-id6485 . -1625) (undo-tree-id6486 . -1625) (undo-tree-id6487 . -1625) (undo-tree-id6488 . -1625) (undo-tree-id6489 . -1625) (undo-tree-id6490 . -1625) (undo-tree-id6491 . -1625) (undo-tree-id6492 . -1625) (undo-tree-id6493 . -1625) (undo-tree-id6494 . -1625) (undo-tree-id6495 . -1625) (undo-tree-id6496 . -1625) (undo-tree-id6497 . -1625) (undo-tree-id6498 . -1625) (undo-tree-id6499 . -1625) (undo-tree-id6500 . -1625) (undo-tree-id6501 . -1625) (undo-tree-id6502 . -1625) (undo-tree-id6503 . -1625) (undo-tree-id6504 . -1625) (undo-tree-id6505 . -1625) (undo-tree-id6506 . -1625) (undo-tree-id6507 . -1625) (undo-tree-id6508 . -1625) (undo-tree-id6509 . -1625) (undo-tree-id6510 . -1625) (undo-tree-id6511 . -1625) (undo-tree-id6512 . -1625) (undo-tree-id6513 . -1625) (undo-tree-id6514 . -1625) (undo-tree-id6515 . -1625) (undo-tree-id6516 . -1627) (undo-tree-id6517 . -1627) (undo-tree-id6518 . -1627) (undo-tree-id6519 . -1627) (undo-tree-id6520 . -1627) (undo-tree-id6521 . -1627) (undo-tree-id6522 . -1751) (undo-tree-id6523 . -1751) (undo-tree-id6524 . -1846) (undo-tree-id6525 . -1846) (undo-tree-id6526 . -1846) (undo-tree-id6527 . -1846) (undo-tree-id6528 . -1969) (undo-tree-id6529 . -1969) (undo-tree-id6530 . -1969) (undo-tree-id6531 . -1969) (undo-tree-id6532 . -2565) (undo-tree-id6533 . -2565) (undo-tree-id6534 . -1625) (undo-tree-id6535 . -1625) (undo-tree-id6536 . -1625) (undo-tree-id6537 . -1625) (undo-tree-id6538 . -1625) (undo-tree-id6539 . -1625) (undo-tree-id6540 . -1625) (undo-tree-id6541 . -1625) (undo-tree-id6542 . -1625) (undo-tree-id6543 . -1625) (undo-tree-id6544 . -1625) (undo-tree-id6545 . -1625) (undo-tree-id6546 . -1625) (undo-tree-id6547 . -1625) (undo-tree-id6548 . -1625) (undo-tree-id6549 . -1625) (undo-tree-id6550 . -1625) (undo-tree-id6551 . -1625) (undo-tree-id6552 . -1625) (undo-tree-id6553 . -1625) (undo-tree-id6554 . -1625) (undo-tree-id6555 . -1625) (undo-tree-id6556 . -1625) (undo-tree-id6557 . -1625) (undo-tree-id6558 . -1625) (undo-tree-id6559 . -1625) (undo-tree-id6560 . -1625) (undo-tree-id6561 . -1625) (undo-tree-id6562 . -1625) (undo-tree-id6563 . -1625) (undo-tree-id6564 . -1625) (undo-tree-id6565 . -1625) (undo-tree-id6566 . -1625) (undo-tree-id6567 . -1625) (undo-tree-id6568 . -1625) (undo-tree-id6569 . -1625) (undo-tree-id6570 . -1625) (undo-tree-id6571 . -1625) (undo-tree-id6572 . -1625) (undo-tree-id6573 . -1625) (undo-tree-id6574 . -1625) (undo-tree-id6575 . -1625) (undo-tree-id6576 . -1625) (undo-tree-id6577 . -1625) (undo-tree-id6578 . -1625) (undo-tree-id6579 . -1625) (undo-tree-id6580 . -1625) (undo-tree-id6581 . -1625) (undo-tree-id6582 . -1625) (undo-tree-id6583 . -1625) (undo-tree-id6584 . -1625) (undo-tree-id6585 . -1625) (undo-tree-id6586 . -1625) (undo-tree-id6587 . -1625) (undo-tree-id6588 . -1625) (undo-tree-id6589 . -1625) (undo-tree-id6590 . -1625) (undo-tree-id6591 . -1625) (undo-tree-id6592 . -1625) (undo-tree-id6593 . -1625) (undo-tree-id6594 . -525) (undo-tree-id6595 . -525) (undo-tree-id6596 . -525) (undo-tree-id6597 . -525) (undo-tree-id6598 . -525) (undo-tree-id6599 . -525) (undo-tree-id6600 . -525) (undo-tree-id6601 . -525) (undo-tree-id6602 . -525) (undo-tree-id6603 . -525) (undo-tree-id6604 . -525) (undo-tree-id6605 . -525) (undo-tree-id6606 . -525) (undo-tree-id6607 . -525) (undo-tree-id6608 . -525) (undo-tree-id6609 . -382) (undo-tree-id6610 . -525) (undo-tree-id6611 . -525) (undo-tree-id6612 . -382) (undo-tree-id6613 . -525) (undo-tree-id6614 . -525) (undo-tree-id6615 . -525) (undo-tree-id6616 . -525)) nil (25759 42627 534137 297000) 0 nil])
([nil nil ((#("np.random.seed(42)
" 0 14 (fontified t) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-1-face)) 18 19 (fontified t)) . 4558) (undo-tree-id6876 . -18) (undo-tree-id6877 . -18) (undo-tree-id6878 . -18) (undo-tree-id6879 . -17) (undo-tree-id6880 . -17) (undo-tree-id6881 . -17) (undo-tree-id6882 . -17) (undo-tree-id6883 . -17) (undo-tree-id6884 . -17) (undo-tree-id6885 . -17) (undo-tree-id6886 . -17) (undo-tree-id6887 . -17) (undo-tree-id6888 . -17) (undo-tree-id6889 . -17) (undo-tree-id6890 . -17) (undo-tree-id6891 . -17) (undo-tree-id6892 . -17) (undo-tree-id6893 . -17) (undo-tree-id6894 . -17) (undo-tree-id6895 . -17) (undo-tree-id6896 . -17) (undo-tree-id6897 . -17) (undo-tree-id6898 . -17) (undo-tree-id6899 . -17) (undo-tree-id6900 . -17) (undo-tree-id6901 . -17) (undo-tree-id6902 . -17) (undo-tree-id6903 . -17) (undo-tree-id6904 . -17) (undo-tree-id6905 . -17) (undo-tree-id6906 . -17) (undo-tree-id6907 . -17) (undo-tree-id6908 . -17) (undo-tree-id6909 . -17) (undo-tree-id6910 . -17) (undo-tree-id6911 . -17) (undo-tree-id6912 . -17) (undo-tree-id6913 . -17) (undo-tree-id6914 . -17) (undo-tree-id6915 . -17) (undo-tree-id6916 . -17) (undo-tree-id6917 . -17) (undo-tree-id6918 . -17) (undo-tree-id6919 . -17) (undo-tree-id6920 . -17) (undo-tree-id6921 . -17) (undo-tree-id6922 . -17) (undo-tree-id6923 . -17) (undo-tree-id6924 . -17) (undo-tree-id6925 . -17) (undo-tree-id6926 . -17) (undo-tree-id6927 . -19) (undo-tree-id6928 . -19) (t 25759 42181 826435 782000)) nil (25759 43408 725459 750000) 0 nil] [nil nil ((#("    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2
" 0 4 (fontified t) 4 10 (fontified t face font-lock-variable-name-face) 10 26 (fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-1-face)) 27 28 (fontified t face (rainbow-delimiters-depth-2-face)) 28 43 (fontified t) 43 44 (fontified t face (rainbow-delimiters-depth-2-face)) 44 47 (fontified t) 47 48 (fontified t face (rainbow-delimiters-depth-2-face)) 48 63 (fontified t) 63 64 (fontified t face (rainbow-delimiters-depth-2-face)) 64 65 (fontified t face (rainbow-delimiters-depth-1-face)) 65 67 (fontified t) 67 69 (fontified t face font-lock-comment-delimiter-face) 69 78 (fontified t face font-lock-comment-face)) . 1198) (undo-tree-id6797 . -77) (undo-tree-id6798 . -18) (undo-tree-id6799 . -3) (undo-tree-id6800 . 59) (undo-tree-id6801 . -18) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -2) (undo-tree-id6807 . -2) (undo-tree-id6808 . -1) (undo-tree-id6809 . -2) (undo-tree-id6810 . -2) (undo-tree-id6811 . -2) (undo-tree-id6812 . -2) (undo-tree-id6813 . -2) (undo-tree-id6814 . -2) (undo-tree-id6815 . -2) (undo-tree-id6816 . -2) (undo-tree-id6817 . -3) (undo-tree-id6818 . -18) (undo-tree-id6819 . -3) (undo-tree-id6820 . -3) (undo-tree-id6821 . -3) (undo-tree-id6822 . -3) (undo-tree-id6823 . -3) (undo-tree-id6824 . -19) (undo-tree-id6825 . -3) (undo-tree-id6826 . -3) (undo-tree-id6827 . -78) (undo-tree-id6828 . -78) (undo-tree-id6829 . -78) (undo-tree-id6830 . -19) (undo-tree-id6831 . -18) (undo-tree-id6832 . -18) (undo-tree-id6833 . -18) (undo-tree-id6834 . -18) (undo-tree-id6835 . -18) (undo-tree-id6836 . -18) (undo-tree-id6837 . -18) (undo-tree-id6838 . -18) (undo-tree-id6839 . -18) (undo-tree-id6840 . -18) (undo-tree-id6841 . -18) (undo-tree-id6842 . -18) (undo-tree-id6843 . -18) (undo-tree-id6844 . -18) (undo-tree-id6845 . -18) (undo-tree-id6846 . -18) (undo-tree-id6847 . -18) (undo-tree-id6848 . -18) (undo-tree-id6849 . -18) (undo-tree-id6850 . -18) (undo-tree-id6851 . -18) (undo-tree-id6852 . -18) (undo-tree-id6853 . -18) (undo-tree-id6854 . -18) (undo-tree-id6855 . -18) (undo-tree-id6856 . -18) (undo-tree-id6857 . -18) (undo-tree-id6858 . -18) (undo-tree-id6859 . -18) (undo-tree-id6860 . -19) (undo-tree-id6861 . -78) 1216 (t 25759 42181 826435 782000)) ((1198 . 1276)) (25759 42627 533009 540000) 0 nil])
([nil nil ((#("tf.random.set_seed(42)
" 0 18 (fontified t) 18 19 (fontified t face (rainbow-delimiters-depth-1-face)) 19 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 23 (fontified t)) . 4558) (undo-tree-id6870 . -22) (undo-tree-id6871 . -23) (undo-tree-id6872 . -23) (undo-tree-id6873 . -23) (undo-tree-id6874 . -22) (undo-tree-id6875 . -23)) nil (25759 43408 725424 132000) 0 nil])
nil
([nil nil ((4558 . 4559)) nil (25759 43408 725419 811000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 4558) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1)) nil (25759 43408 725417 817000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4636 . 4637) (nil fontified nil 4636 . 4637) (4636 . 4637) (nil rear-nonsticky nil 4635 . 4636) (nil fontified nil 4635 . 4636) (4635 . 4636) (nil rear-nonsticky nil 4634 . 4635) (nil fontified nil 4634 . 4635) (4634 . 4635) (nil rear-nonsticky nil 4633 . 4634) (nil fontified nil 4633 . 4634) (4633 . 4634) (nil rear-nonsticky nil 4632 . 4633) (nil fontified nil 4632 . 4633) (4632 . 4633) (nil rear-nonsticky nil 4631 . 4632) (nil fontified nil 4631 . 4632) (4631 . 4632) (nil rear-nonsticky nil 4630 . 4631) (nil fontified nil 4630 . 4631) (4630 . 4631) (nil rear-nonsticky nil 4629 . 4630) (nil fontified nil 4629 . 4630) (4629 . 4630) (nil rear-nonsticky nil 4628 . 4629) (nil fontified nil 4628 . 4629) (4628 . 4629) (nil rear-nonsticky nil 4627 . 4628) (nil fontified nil 4627 . 4628) (4627 . 4628) (nil rear-nonsticky nil 4626 . 4627) (nil fontified nil 4626 . 4627) (4626 . 4627) (nil rear-nonsticky nil 4625 . 4626) (nil fontified nil 4625 . 4626) (4625 . 4626) (nil rear-nonsticky nil 4624 . 4625) (nil fontified nil 4624 . 4625) (4624 . 4625) (nil rear-nonsticky nil 4623 . 4624) (nil fontified nil 4623 . 4624) (4623 . 4624) (nil rear-nonsticky nil 4622 . 4623) (nil fontified nil 4622 . 4623) (4622 . 4623) (nil rear-nonsticky nil 4621 . 4622) (nil fontified nil 4621 . 4622) (4621 . 4622) (nil rear-nonsticky nil 4620 . 4621) (nil fontified nil 4620 . 4621) (4620 . 4621) (nil rear-nonsticky nil 4619 . 4620) (nil fontified nil 4619 . 4620) (4619 . 4620) (nil rear-nonsticky nil 4618 . 4619) (nil fontified nil 4618 . 4619) (4618 . 4619) (nil rear-nonsticky nil 4617 . 4618) (nil fontified nil 4617 . 4618) (4617 . 4618) (nil rear-nonsticky nil 4616 . 4617) (nil fontified nil 4616 . 4617) (4616 . 4617) (nil rear-nonsticky nil 4615 . 4616) (nil fontified nil 4615 . 4616) (4615 . 4616) (nil rear-nonsticky nil 4614 . 4615) (nil fontified nil 4614 . 4615) (4614 . 4615) (nil rear-nonsticky nil 4613 . 4614) (nil fontified nil 4613 . 4614) (4613 . 4614) (nil rear-nonsticky nil 4612 . 4613) (nil fontified nil 4612 . 4613) (4612 . 4613) (nil rear-nonsticky nil 4611 . 4612) (nil fontified nil 4611 . 4612) (4611 . 4612) (nil rear-nonsticky nil 4610 . 4611) (nil fontified nil 4610 . 4611) (4610 . 4611) (nil rear-nonsticky nil 4609 . 4610) (nil fontified nil 4609 . 4610) (4609 . 4610) (nil rear-nonsticky nil 4608 . 4609) (nil fontified nil 4608 . 4609) (4608 . 4609) (nil rear-nonsticky nil 4607 . 4608) (nil fontified nil 4607 . 4608) (4607 . 4608) (nil rear-nonsticky nil 4606 . 4607) (nil fontified nil 4606 . 4607) (4606 . 4607) (nil rear-nonsticky nil 4605 . 4606) (nil fontified nil 4605 . 4606) (4605 . 4606) (nil rear-nonsticky nil 4604 . 4605) (nil fontified nil 4604 . 4605) (4604 . 4605) (nil rear-nonsticky nil 4603 . 4604) (nil fontified nil 4603 . 4604) (4603 . 4604) (nil rear-nonsticky nil 4602 . 4603) (nil fontified nil 4602 . 4603) (4602 . 4603) (nil rear-nonsticky nil 4601 . 4602) (nil fontified nil 4601 . 4602) (4601 . 4602) (nil rear-nonsticky nil 4600 . 4601) (nil fontified nil 4600 . 4601) (4600 . 4601) (nil rear-nonsticky nil 4599 . 4600) (nil fontified nil 4599 . 4600) (4599 . 4600) (nil rear-nonsticky nil 4598 . 4599) (nil fontified nil 4598 . 4599) (4598 . 4599) (nil rear-nonsticky nil 4597 . 4598) (nil fontified nil 4597 . 4598) (4597 . 4598) (nil rear-nonsticky nil 4596 . 4597) (nil fontified nil 4596 . 4597) (4596 . 4597) (nil rear-nonsticky nil 4595 . 4596) (nil fontified nil 4595 . 4596) (4595 . 4596) (nil rear-nonsticky nil 4594 . 4595) (nil fontified nil 4594 . 4595) (4594 . 4595) (nil rear-nonsticky nil 4593 . 4594) (nil fontified nil 4593 . 4594) (4593 . 4594) (nil rear-nonsticky nil 4592 . 4593) (nil fontified nil 4592 . 4593) (4592 . 4593) (nil rear-nonsticky nil 4591 . 4592) (nil fontified nil 4591 . 4592) (4591 . 4592) (nil rear-nonsticky nil 4590 . 4591) (nil fontified nil 4590 . 4591) (4590 . 4591) (nil rear-nonsticky nil 4589 . 4590) (nil fontified nil 4589 . 4590) (4589 . 4590) (nil rear-nonsticky nil 4588 . 4589) (nil fontified nil 4588 . 4589) (4588 . 4589) (nil rear-nonsticky nil 4587 . 4588) (nil fontified nil 4587 . 4588) (4587 . 4588) (nil rear-nonsticky nil 4586 . 4587) (nil fontified nil 4586 . 4587) (4586 . 4587) (nil rear-nonsticky nil 4585 . 4586) (nil fontified nil 4585 . 4586) (4585 . 4586) (nil rear-nonsticky nil 4584 . 4585) (nil fontified nil 4584 . 4585) (4584 . 4585) (nil rear-nonsticky nil 4583 . 4584) (nil fontified nil 4583 . 4584) (4583 . 4584) (nil rear-nonsticky nil 4582 . 4583) (nil fontified nil 4582 . 4583) (4582 . 4583) (nil rear-nonsticky nil 4581 . 4582) (nil fontified nil 4581 . 4582) (4581 . 4582) (nil rear-nonsticky nil 4580 . 4581) (nil fontified nil 4580 . 4581) (4580 . 4581) (nil rear-nonsticky nil 4579 . 4580) (nil fontified nil 4579 . 4580) (4579 . 4580) (nil rear-nonsticky nil 4578 . 4579) (nil fontified nil 4578 . 4579) (4578 . 4579) (nil rear-nonsticky nil 4577 . 4578) (nil fontified nil 4577 . 4578) (4577 . 4578) (nil rear-nonsticky nil 4576 . 4577) (nil fontified nil 4576 . 4577) (4576 . 4577) (nil rear-nonsticky nil 4575 . 4576) (nil fontified nil 4575 . 4576) (4575 . 4576) (nil rear-nonsticky nil 4574 . 4575) (nil fontified nil 4574 . 4575) (4574 . 4575) (nil rear-nonsticky nil 4573 . 4574) (nil fontified nil 4573 . 4574) (4573 . 4574) (nil rear-nonsticky nil 4572 . 4573) (nil fontified nil 4572 . 4573) (4572 . 4573) (nil rear-nonsticky nil 4571 . 4572) (nil fontified nil 4571 . 4572) (4571 . 4572) (nil rear-nonsticky nil 4570 . 4571) (nil fontified nil 4570 . 4571) (4570 . 4571) (nil rear-nonsticky nil 4569 . 4570) (nil fontified nil 4569 . 4570) (4569 . 4570) (nil rear-nonsticky nil 4568 . 4569) (nil fontified nil 4568 . 4569) (4568 . 4569) (nil rear-nonsticky nil 4567 . 4568) (nil fontified nil 4567 . 4568) (4567 . 4568) (nil rear-nonsticky nil 4566 . 4567) (nil fontified nil 4566 . 4567) (4566 . 4567) (nil rear-nonsticky nil 4565 . 4566) (nil fontified nil 4565 . 4566) (4565 . 4566) (nil rear-nonsticky nil 4564 . 4565) (nil fontified nil 4564 . 4565) (4564 . 4565) (nil rear-nonsticky nil 4563 . 4564) (nil fontified nil 4563 . 4564) (4563 . 4564) (nil rear-nonsticky nil 4562 . 4563) (nil fontified nil 4562 . 4563) (4562 . 4563) (nil rear-nonsticky nil 4561 . 4562) (nil fontified nil 4561 . 4562) (4561 . 4562) (nil rear-nonsticky nil 4560 . 4561) (nil fontified nil 4560 . 4561) (4560 . 4561) (nil rear-nonsticky nil 4559 . 4560) (nil fontified nil 4559 . 4560) (4559 . 4560) (nil rear-nonsticky nil 4558 . 4559) (nil fontified nil 4558 . 4559) (4558 . 4559)) nil (25759 43408 725393 542000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4931 . 4932) (nil fontified nil 4638 . 4932) (4638 . 4932) (#("model = keras.models.Sequential(
    [keras.layers.Flatten(input_shape=[50, 1]), keras.layers.Dense(1)]
)
" 0 5 (fontified t face font-lock-variable-name-face) 5 14 (fontified t) 14 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-1-face)) 32 33 (fontified t) 33 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-2-face)) 38 58 (fontified t) 58 59 (fontified t face (rainbow-delimiters-depth-3-face)) 59 71 (fontified t) 71 72 (fontified t face (rainbow-delimiters-depth-4-face)) 72 77 (fontified t) 77 78 (fontified t face (rainbow-delimiters-depth-4-face)) 78 79 (fontified t face (rainbow-delimiters-depth-3-face)) 79 99 (fontified t) 99 100 (fontified t face (rainbow-delimiters-depth-3-face)) 100 101 (fontified t) 101 102 (fontified t face (rainbow-delimiters-depth-3-face)) 102 103 (fontified t face (rainbow-delimiters-depth-2-face)) 103 104 (fontified t) 104 105 (fontified t face (rainbow-delimiters-depth-1-face)) 105 106 (fontified t)) . 4638) (undo-tree-id7302 . -105) (undo-tree-id7303 . -106) (undo-tree-id7304 . -32) (undo-tree-id7305 . -104) (undo-tree-id7306 . -33) (undo-tree-id7307 . -91) (undo-tree-id7308 . -104) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -106) (undo-tree-id7366 . -104) (undo-tree-id7367 . -33) (undo-tree-id7368 . -91) (undo-tree-id7369 . -104) (undo-tree-id7370 . 2) (undo-tree-id7371 . -105) (undo-tree-id7372 . 75) (undo-tree-id7373 . -32) (undo-tree-id7374 . -106) (undo-tree-id7375 . -106) (undo-tree-id7376 . -106) 4744 (t 25759 43408 740486 894000)) nil (25759 43444 190326 143000) 0 nil])
([nil nil ((1 . 5359) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################
model = keras.models.Sequential(
    [
        # Flatten layer to flatten the input shape of [50, 1] to a 1D array of size 50
        keras.layers.Flatten(input_shape=[50, 1]), 
        
        # Dense layer with 1 unit, representing a single output value
        keras.layers.Dense(1)
    ]
)
model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))


model.evaluate(X_valid, y_valid)


###############################################################################
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 882 (fontified t face font-lock-comment-delimiter-face) 882 883 (face font-lock-comment-delimiter-face fontified t) 883 943 (face font-lock-comment-face fontified t) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 1018 1023 (fontified t) 1023 1025 (fontified t face font-lock-comment-delimiter-face) 1025 1108 (fontified t face font-lock-comment-face) 1108 1112 (fontified t) 1112 1114 (fontified t face font-lock-comment-delimiter-face) 1114 1197 (fontified t face font-lock-comment-face) 1197 1201 (fontified t) 1201 1207 (fontified t face font-lock-variable-name-face) 1207 1223 (fontified t) 1223 1224 (fontified t face (rainbow-delimiters-depth-1-face)) 1224 1225 (fontified t face (rainbow-delimiters-depth-2-face)) 1225 1240 (fontified t) 1240 1241 (fontified t face (rainbow-delimiters-depth-2-face)) 1241 1244 (fontified t) 1244 1245 (fontified t face (rainbow-delimiters-depth-2-face)) 1245 1260 (fontified t) 1260 1261 (fontified t face (rainbow-delimiters-depth-2-face)) 1261 1262 (fontified t face (rainbow-delimiters-depth-1-face)) 1262 1264 (fontified t) 1264 1266 (fontified t face font-lock-comment-delimiter-face) 1266 1275 (fontified t face font-lock-comment-face) 1275 1276 (fontified t) 1276 1280 (fontified t) 1280 1282 (fontified t face font-lock-comment-delimiter-face) 1282 1374 (fontified t face font-lock-comment-face) 1374 1378 (fontified t) 1378 1384 (fontified t face font-lock-variable-name-face) 1384 1394 (fontified t) 1394 1395 (fontified t face (rainbow-delimiters-depth-1-face)) 1395 1409 (fontified t) 1409 1410 (fontified t face (rainbow-delimiters-depth-2-face)) 1410 1429 (fontified t) 1429 1430 (fontified t face (rainbow-delimiters-depth-2-face)) 1430 1436 (fontified t) 1436 1437 (fontified t face (rainbow-delimiters-depth-1-face)) 1437 1439 (fontified t) 1439 1441 (fontified t face font-lock-comment-delimiter-face) 1441 1443 (fontified t face font-lock-comment-face) 1443 1449 (fontified t face font-lock-comment-face) 1449 1454 (fontified t) 1454 1456 (fontified t face font-lock-comment-delimiter-face) 1456 1524 (fontified t face font-lock-comment-face) 1524 1528 (fontified t) 1528 1530 (fontified t face font-lock-comment-delimiter-face) 1530 1570 (fontified t face font-lock-comment-face) 1570 1574 (fontified t) 1574 1580 (fontified t face font-lock-keyword-face) 1580 1587 (fontified t) 1587 1588 (fontified t face (rainbow-delimiters-depth-1-face)) 1588 1603 (fontified t) 1603 1604 (fontified t face (rainbow-delimiters-depth-1-face)) 1604 1611 (fontified t) 1611 1612 (fontified t face (rainbow-delimiters-depth-1-face)) 1612 1622 (fontified t) 1622 1623 (fontified t face (rainbow-delimiters-depth-1-face)) 1623 1626 (fontified t) 1626 1629 (fontified t face font-lock-keyword-face) 1629 1630 (fontified t) 1630 1641 (fontified t face font-lock-function-name-face) 1641 1642 (fontified t face (rainbow-delimiters-depth-1-face)) 1642 1657 (fontified t) 1657 1661 (fontified t face font-lock-constant-face) 1661 1670 (fontified t) 1670 1674 (fontified t face font-lock-constant-face) 1674 1684 (fontified t) 1684 1689 (fontified t face font-lock-string-face) 1689 1699 (fontified t) 1699 1707 (fontified t face font-lock-string-face) 1707 1716 (fontified t) 1716 1720 (fontified t face font-lock-constant-face) 1720 1721 (fontified t) 1721 1722 (fontified t face (rainbow-delimiters-depth-1-face)) 1722 1728 (fontified t) 1728 1730 (fontified t face font-lock-comment-delimiter-face) 1730 1746 (fontified t face font-lock-comment-face) 1746 1758 (fontified t) 1758 1759 (fontified t face (rainbow-delimiters-depth-1-face)) 1759 1767 (fontified t) 1767 1771 (fontified t face font-lock-string-face) 1771 1772 (fontified t face (rainbow-delimiters-depth-1-face)) 1772 1776 (fontified t) 1776 1778 (fontified t) 1778 1780 (face font-lock-comment-delimiter-face fontified t) 1780 1815 (face font-lock-comment-face fontified t) 1815 1819 (fontified t) 1819 1821 (fontified t face font-lock-keyword-face) 1821 1824 (fontified t) 1824 1826 (fontified t face font-lock-keyword-face) 1826 1827 (fontified t) 1827 1830 (fontified t face font-lock-keyword-face) 1830 1831 (fontified t) 1831 1835 (fontified t face font-lock-constant-face) 1835 1853 (fontified t) 1853 1854 (fontified t face (rainbow-delimiters-depth-1-face)) 1854 1866 (fontified t) 1866 1870 (fontified t face font-lock-string-face) 1870 1878 (fontified t) 1878 1886 (fontified t face font-lock-string-face) 1886 1887 (fontified t face (rainbow-delimiters-depth-1-face)) 1887 1893 (fontified t) 1893 1895 (fontified t face font-lock-comment-delimiter-face) 1895 1933 (fontified t face font-lock-comment-face) 1933 1937 (fontified t) 1937 1939 (fontified t face font-lock-keyword-face) 1939 1947 (fontified t) 1947 1949 (fontified t face font-lock-keyword-face) 1949 1950 (fontified t) 1950 1953 (fontified t face font-lock-keyword-face) 1953 1954 (fontified t) 1954 1958 (fontified t face font-lock-constant-face) 1958 1960 (fontified t) 1960 1976 (fontified t) 1976 1977 (fontified t face (rainbow-delimiters-depth-1-face)) 1977 1994 (fontified t) 1994 1998 (fontified t face font-lock-string-face) 1998 2021 (fontified t) 2021 2033 (fontified t face font-lock-string-face) 2033 2034 (fontified t face (rainbow-delimiters-depth-1-face)) 2034 2040 (fontified t) 2040 2042 (fontified t face font-lock-comment-delimiter-face) 2042 2072 (fontified t face font-lock-comment-face) 2072 2084 (fontified t) 2084 2085 (fontified t face (rainbow-delimiters-depth-1-face)) 2085 2089 (fontified t face font-lock-constant-face) 2089 2090 (fontified t face (rainbow-delimiters-depth-1-face)) 2090 2096 (fontified t) 2096 2098 (fontified t face font-lock-comment-delimiter-face) 2098 2131 (fontified t face font-lock-comment-face) 2131 2135 (fontified t) 2135 2137 (fontified t face font-lock-keyword-face) 2137 2165 (fontified t) 2165 2166 (fontified t face (rainbow-delimiters-depth-1-face)) 2166 2186 (fontified t) 2186 2187 (fontified t face (rainbow-delimiters-depth-1-face)) 2187 2193 (fontified t) 2193 2195 (fontified t face font-lock-comment-delimiter-face) 2195 2228 (fontified t face font-lock-comment-face) 2228 2232 (fontified t) 2232 2234 (fontified t face font-lock-keyword-face) 2234 2262 (fontified t) 2262 2263 (fontified t face (rainbow-delimiters-depth-1-face)) 2263 2295 (fontified t) 2295 2296 (fontified t face (rainbow-delimiters-depth-1-face)) 2296 2302 (fontified t) 2302 2304 (fontified t face font-lock-comment-delimiter-face) 2304 2315 (fontified t face font-lock-comment-face) 2315 2333 (face font-lock-comment-face fontified t) 2333 2347 (fontified t) 2347 2348 (fontified t face (rainbow-delimiters-depth-1-face)) 2348 2370 (fontified t) 2370 2371 (fontified t face (rainbow-delimiters-depth-1-face)) 2371 2377 (fontified t) 2377 2379 (fontified t face font-lock-comment-delimiter-face) 2379 2412 (fontified t face font-lock-comment-face) 2412 2424 (fontified t) 2424 2425 (fontified t face (rainbow-delimiters-depth-1-face)) 2425 2426 (fontified t face (rainbow-delimiters-depth-2-face)) 2426 2447 (fontified t) 2447 2448 (fontified t face (rainbow-delimiters-depth-2-face)) 2448 2449 (fontified t face (rainbow-delimiters-depth-1-face)) 2449 2455 (fontified t) 2455 2457 (fontified t face font-lock-comment-delimiter-face) 2457 2460 (fontified t face font-lock-comment-face) 2460 2523 (fontified t face font-lock-comment-face) 2523 2527 (fontified t) 2527 2529 (fontified t face font-lock-keyword-face) 2529 2537 (fontified t) 2537 2540 (fontified t face font-lock-keyword-face) 2540 2541 (fontified t) 2541 2542 (fontified t face (rainbow-delimiters-depth-1-face)) 2542 2544 (fontified t) 2544 2546 (fontified t face font-lock-keyword-face) 2546 2553 (fontified t) 2553 2554 (fontified t face (rainbow-delimiters-depth-1-face)) 2554 2574 (fontified t) 2574 2575 (fontified t face (rainbow-delimiters-depth-1-face)) 2575 2592 (fontified t) 2592 2604 (fontified t face font-lock-string-face) 2604 2605 (fontified t face (rainbow-delimiters-depth-1-face)) 2605 2608 (fontified t) 2608 2611 (fontified t face font-lock-keyword-face) 2611 2612 (fontified t) 2612 2632 (fontified t face font-lock-function-name-face) 2632 2633 (fontified t face (rainbow-delimiters-depth-1-face)) 2633 2647 (fontified t) 2647 2648 (fontified t face (rainbow-delimiters-depth-1-face)) 2648 2654 (fontified t) 2654 2655 (syntax-table (15) fontified t face font-lock-doc-face) 2655 2830 (fontified t face font-lock-doc-face) 2830 2831 (syntax-table (15) fontified t face font-lock-doc-face) 2831 2833 (fontified t) 2833 2836 (fontified t) 2836 2838 (face font-lock-comment-delimiter-face fontified t) 2838 2867 (face font-lock-comment-face fontified t) 2867 2879 (fontified t) 2879 2880 (fontified t face (rainbow-delimiters-depth-1-face)) 2880 2889 (fontified t) 2889 2890 (fontified t face (rainbow-delimiters-depth-2-face)) 2890 2893 (fontified t face font-lock-builtin-face) 2893 2894 (fontified t face (rainbow-delimiters-depth-3-face)) 2894 2898 (fontified t) 2898 2899 (fontified t face (rainbow-delimiters-depth-3-face)) 2899 2900 (fontified t face (rainbow-delimiters-depth-2-face)) 2900 2914 (fontified t) 2914 2919 (fontified t face font-lock-string-face) 2919 2927 (fontified t) 2927 2942 (fontified t face font-lock-string-face) 2942 2943 (fontified t face (rainbow-delimiters-depth-1-face)) 2943 2949 (fontified t) 2949 2951 (fontified t face font-lock-comment-delimiter-face) 2951 2982 (fontified t face font-lock-comment-face) 2982 2994 (fontified t) 2994 2995 (fontified t face (rainbow-delimiters-depth-1-face)) 2995 3004 (fontified t) 3004 3005 (fontified t face (rainbow-delimiters-depth-2-face)) 3005 3008 (fontified t face font-lock-builtin-face) 3008 3009 (fontified t face (rainbow-delimiters-depth-3-face)) 3009 3017 (fontified t) 3017 3018 (fontified t face (rainbow-delimiters-depth-3-face)) 3018 3019 (fontified t face (rainbow-delimiters-depth-2-face)) 3019 3023 (fontified t) 3023 3035 (fontified t) 3035 3040 (fontified t face font-lock-string-face) 3040 3048 (fontified t) 3048 3065 (fontified t face font-lock-string-face) 3065 3066 (fontified t face (rainbow-delimiters-depth-1-face)) 3066 3067 (fontified t) 3067 3072 (fontified t) 3072 3074 (fontified t face font-lock-comment-delimiter-face) 3074 3114 (fontified t face font-lock-comment-face) 3114 3125 (fontified t) 3125 3126 (fontified t face (rainbow-delimiters-depth-1-face)) 3126 3127 (fontified t face (rainbow-delimiters-depth-1-face)) 3127 3151 (fontified t) 3151 3152 (fontified t face (rainbow-delimiters-depth-1-face)) 3152 3174 (fontified t) 3174 3175 (fontified t face (rainbow-delimiters-depth-2-face)) 3175 3183 (fontified t) 3183 3187 (fontified t face font-lock-constant-face) 3187 3188 (fontified t face (rainbow-delimiters-depth-2-face)) 3188 3189 (fontified t face (rainbow-delimiters-depth-1-face)) 3189 3195 (fontified t) 3195 3197 (fontified t face font-lock-comment-delimiter-face) 3197 3230 (fontified t face font-lock-comment-face) 3230 3242 (fontified t) 3242 3243 (fontified t face (rainbow-delimiters-depth-1-face)) 3243 3244 (fontified t face (rainbow-delimiters-depth-2-face)) 3244 3258 (fontified t) 3258 3259 (fontified t face (rainbow-delimiters-depth-2-face)) 3259 3260 (fontified t face (rainbow-delimiters-depth-1-face)) 3260 3266 (fontified t) 3266 3268 (fontified t face font-lock-comment-delimiter-face) 3268 3293 (fontified t face font-lock-comment-face) 3293 3307 (fontified t) 3307 3308 (fontified t face (rainbow-delimiters-depth-1-face)) 3308 3319 (fontified t) 3319 3320 (fontified t face (rainbow-delimiters-depth-1-face)) 3320 3326 (fontified t) 3326 3328 (fontified t face font-lock-comment-delimiter-face) 3328 3349 (fontified t face font-lock-comment-face) 3349 3363 (fontified t) 3363 3364 (fontified t face (rainbow-delimiters-depth-1-face)) 3364 3367 (fontified t face font-lock-string-face) 3367 3372 (face font-lock-string-face fontified t) 3372 3373 (face (rainbow-delimiters-depth-1-face) fontified t) 3373 3374 (fontified t) 3374 3379 (fontified t) 3379 3381 (fontified t face font-lock-comment-delimiter-face) 3381 3402 (fontified t face font-lock-comment-face) 3402 3416 (fontified t) 3416 3417 (fontified t face (rainbow-delimiters-depth-1-face)) 3417 3423 (fontified t face font-lock-string-face) 3423 3424 (fontified t face (rainbow-delimiters-depth-1-face)) 3424 3430 (fontified t) 3430 3432 (fontified t face font-lock-comment-delimiter-face) 3432 3462 (fontified t face font-lock-comment-face) 3462 3474 (fontified t) 3474 3475 (fontified t face (rainbow-delimiters-depth-1-face)) 3475 3479 (fontified t face font-lock-constant-face) 3479 3480 (fontified t face (rainbow-delimiters-depth-1-face)) 3480 3483 (fontified t) 3483 3562 (fontified t face font-lock-comment-delimiter-face) 3562 3563 (fontified t face font-lock-comment-face) 3563 3567 (fontified t face font-lock-variable-name-face) 3567 3570 (fontified t face font-lock-variable-name-face) 3570 3576 (fontified t) 3576 3582 (fontified t face font-lock-variable-name-face) 3582 3605 (fontified t) 3605 3606 (fontified t face (rainbow-delimiters-depth-1-face)) 3606 3624 (fontified t) 3624 3625 (fontified t face (rainbow-delimiters-depth-1-face)) 3625 3627 (fontified t) 3627 3706 (fontified t face font-lock-comment-delimiter-face) 3706 3707 (fontified t face font-lock-comment-face) 3707 3709 (fontified t face font-lock-comment-delimiter-face) 3709 3730 (fontified t face font-lock-comment-face) 3730 3737 (fontified t face font-lock-variable-name-face) 3737 3739 (fontified t) 3739 3746 (fontified t face font-lock-variable-name-face) 3746 3755 (fontified t) 3755 3756 (fontified t face (rainbow-delimiters-depth-1-face)) 3756 3771 (fontified t) 3771 3772 (fontified t face (rainbow-delimiters-depth-1-face)) 3772 3780 (fontified t) 3780 3781 (fontified t face (rainbow-delimiters-depth-1-face)) 3781 3790 (fontified t) 3790 3791 (fontified t face (rainbow-delimiters-depth-1-face)) 3791 3792 (fontified t) 3792 3799 (fontified t face font-lock-variable-name-face) 3799 3801 (fontified t) 3801 3808 (fontified t face font-lock-variable-name-face) 3808 3817 (fontified t) 3817 3818 (fontified t face (rainbow-delimiters-depth-1-face)) 3818 3837 (fontified t) 3837 3838 (fontified t face (rainbow-delimiters-depth-1-face)) 3838 3846 (fontified t) 3846 3847 (fontified t face (rainbow-delimiters-depth-1-face)) 3847 3860 (fontified t) 3860 3861 (fontified t face (rainbow-delimiters-depth-1-face)) 3861 3862 (fontified t) 3862 3868 (fontified t face font-lock-variable-name-face) 3868 3870 (fontified t) 3870 3874 (fontified t face font-lock-variable-name-face) 3874 3876 (face font-lock-variable-name-face fontified t) 3876 3885 (fontified t) 3885 3886 (face (rainbow-delimiters-depth-1-face) fontified t) 3886 3901 (fontified t) 3901 3902 (face (rainbow-delimiters-depth-1-face) fontified t) 3902 3910 (fontified t) 3910 3911 (face (rainbow-delimiters-depth-1-face) fontified t) 3911 3920 (fontified t) 3920 3921 (face (rainbow-delimiters-depth-1-face) fontified t) 3921 3922 (fontified t) 3922 3927 (fontified t face font-lock-keyword-face) 3927 3928 (fontified t face (rainbow-delimiters-depth-1-face)) 3928 3956 (fontified t) 3956 3957 (fontified t face (rainbow-delimiters-depth-1-face)) 3957 3959 (fontified t) 3959 4038 (fontified t face font-lock-comment-delimiter-face) 4038 4039 (fontified t face font-lock-comment-face) 4039 4040 (fontified t face font-lock-comment-delimiter-face) 4040 4041 (fontified t face font-lock-comment-face) 4041 4044 (fontified t face font-lock-variable-name-face) 4044 4046 (fontified t) 4046 4050 (fontified t face font-lock-variable-name-face) 4050 4065 (fontified t) 4065 4066 (fontified t face (rainbow-delimiters-depth-1-face)) 4066 4076 (fontified t) 4076 4091 (fontified t) 4091 4095 (fontified t face font-lock-constant-face) 4095 4105 (fontified t) 4105 4106 (fontified t face (rainbow-delimiters-depth-2-face)) 4106 4111 (fontified t) 4111 4112 (fontified t face (rainbow-delimiters-depth-2-face)) 4112 4113 (fontified t face (rainbow-delimiters-depth-1-face)) 4113 4114 (fontified t) 4114 4117 (fontified t face font-lock-keyword-face) 4117 4122 (fontified t) 4122 4124 (fontified t face font-lock-keyword-face) 4124 4125 (fontified t) 4125 4130 (fontified t face font-lock-builtin-face) 4130 4131 (fontified t face (rainbow-delimiters-depth-1-face)) 4131 4132 (fontified t) 4132 4133 (fontified t face (rainbow-delimiters-depth-1-face)) 4133 4146 (fontified t) 4146 4147 (fontified t face (rainbow-delimiters-depth-1-face)) 4147 4151 (fontified t) 4151 4152 (fontified t face (rainbow-delimiters-depth-2-face)) 4152 4155 (fontified t) 4155 4156 (fontified t face (rainbow-delimiters-depth-2-face)) 4156 4157 (fontified t face (rainbow-delimiters-depth-1-face)) 4157 4173 (fontified t) 4173 4174 (fontified t face (rainbow-delimiters-depth-1-face)) 4174 4190 (fontified t) 4190 4191 (fontified t face (rainbow-delimiters-depth-2-face)) 4191 4200 (fontified t) 4200 4201 (fontified t face (rainbow-delimiters-depth-2-face)) 4201 4218 (fontified t) 4218 4219 (fontified t face (rainbow-delimiters-depth-2-face)) 4219 4225 (fontified t) 4225 4226 (fontified t face (rainbow-delimiters-depth-2-face)) 4226 4244 (fontified t) 4244 4245 (fontified t face (rainbow-delimiters-depth-2-face)) 4245 4253 (fontified t face font-lock-string-face) 4253 4254 (fontified t) 4254 4256 (fontified t face font-lock-keyword-face) 4256 4266 (fontified t) 4266 4270 (fontified t face font-lock-keyword-face) 4270 4271 (fontified t) 4271 4275 (fontified t face font-lock-constant-face) 4275 4276 (fontified t face (rainbow-delimiters-depth-2-face)) 4276 4293 (fontified t) 4293 4294 (fontified t face (rainbow-delimiters-depth-2-face)) 4294 4302 (fontified t) 4302 4303 (fontified t face (rainbow-delimiters-depth-2-face)) 4303 4309 (fontified t) 4309 4310 (fontified t face (rainbow-delimiters-depth-1-face)) 4310 4319 (fontified t) 4319 4320 (fontified t face (rainbow-delimiters-depth-1-face)) 4320 4321 (fontified t face (rainbow-delimiters-depth-1-face)) 4321 4323 (fontified t) 4323 4329 (fontified t face font-lock-variable-name-face) 4329 4339 (fontified t) 4339 4340 (fontified t face (rainbow-delimiters-depth-1-face)) 4340 4345 (fontified t) 4345 4346 (fontified t face (rainbow-delimiters-depth-1-face)) 4346 4354 (fontified t) 4354 4355 (fontified t face (rainbow-delimiters-depth-1-face)) 4355 4386 (fontified t) 4386 4387 (fontified t face (rainbow-delimiters-depth-2-face)) 4387 4402 (fontified t) 4402 4403 (fontified t face (rainbow-delimiters-depth-2-face)) 4403 4404 (fontified t face (rainbow-delimiters-depth-1-face)) 4404 4406 (fontified t) 4406 4422 (fontified t face font-lock-comment-delimiter-face) 4422 4485 (face font-lock-comment-delimiter-face fontified t) 4485 4486 (face font-lock-comment-face fontified t) 4486 4497 (fontified t) 4497 4498 (fontified t face (rainbow-delimiters-depth-1-face)) 4498 4505 (fontified t) 4505 4506 (fontified t face (rainbow-delimiters-depth-2-face)) 4506 4513 (fontified t) 4513 4514 (fontified t face (rainbow-delimiters-depth-2-face)) 4514 4523 (fontified t) 4523 4524 (fontified t face (rainbow-delimiters-depth-2-face)) 4524 4528 (fontified t) 4528 4529 (fontified t face (rainbow-delimiters-depth-2-face)) 4529 4537 (fontified t) 4537 4538 (fontified t face (rainbow-delimiters-depth-2-face)) 4538 4542 (fontified t) 4542 4543 (fontified t face (rainbow-delimiters-depth-2-face)) 4543 4544 (fontified t face (rainbow-delimiters-depth-1-face)) 4544 4553 (fontified t) 4553 4554 (fontified t face (rainbow-delimiters-depth-1-face)) 4554 4555 (fontified t face (rainbow-delimiters-depth-1-face)) 4555 4557 (fontified t) 4557 4558 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4558 4559 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4559 4560 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4560 4561 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4561 4562 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4562 4563 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4563 4564 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4564 4565 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4565 4566 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4566 4567 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4567 4568 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4568 4569 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4569 4570 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4570 4571 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4571 4572 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4572 4573 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4573 4574 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4574 4575 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4575 4576 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4576 4577 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4577 4578 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4578 4579 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4579 4580 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4580 4581 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4581 4582 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4582 4583 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4583 4584 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4584 4585 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4585 4586 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4586 4587 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4587 4588 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4588 4589 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4589 4590 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4590 4591 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4591 4592 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4592 4593 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4593 4594 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4594 4595 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4595 4596 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4596 4597 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4597 4598 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4598 4599 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4599 4600 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4600 4601 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4601 4602 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4602 4603 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4603 4604 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4604 4605 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4605 4606 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4606 4607 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4607 4608 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4608 4609 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4609 4610 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4610 4611 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4611 4612 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4612 4613 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4613 4614 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4614 4615 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4615 4616 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4616 4617 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4617 4618 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4618 4619 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4619 4620 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4620 4621 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4621 4622 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4622 4623 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4623 4624 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4624 4625 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4625 4626 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4626 4627 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4627 4628 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4628 4629 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4629 4630 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4630 4631 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4631 4632 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4632 4633 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4633 4634 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4634 4635 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4635 4636 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 4636 4637 (fontified t face font-lock-comment-face) 4637 4642 (fontified t face font-lock-variable-name-face) 4642 4668 (fontified t) 4668 4669 (fontified t face (rainbow-delimiters-depth-1-face)) 4669 4674 (fontified t) 4674 4675 (fontified t face (rainbow-delimiters-depth-2-face)) 4675 4684 (fontified t) 4684 4686 (fontified t face font-lock-comment-delimiter-face) 4686 4763 (fontified t face font-lock-comment-face) 4763 4791 (fontified t) 4791 4792 (fontified t face (rainbow-delimiters-depth-3-face)) 4792 4804 (fontified t) 4804 4805 (fontified t face (rainbow-delimiters-depth-4-face)) 4805 4810 (fontified t) 4810 4811 (fontified t face (rainbow-delimiters-depth-4-face)) 4811 4812 (fontified t face (rainbow-delimiters-depth-3-face)) 4812 4832 (fontified t) 4832 4834 (fontified t face font-lock-comment-delimiter-face) 4834 4894 (fontified t face font-lock-comment-face) 4894 4920 (fontified t) 4920 4921 (fontified t face (rainbow-delimiters-depth-3-face)) 4921 4922 (fontified t) 4922 4923 (fontified t face (rainbow-delimiters-depth-3-face)) 4923 4928 (fontified t) 4928 4929 (fontified t face (rainbow-delimiters-depth-2-face)) 4929 4930 (fontified t) 4930 4931 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 4931 4932 (fontified t) 4932 4938 (fontified t) 4938 4945 (fontified t face font-lock-builtin-face) 4945 4946 (fontified t face (rainbow-delimiters-depth-1-face)) 4946 4951 (fontified t) 4951 4956 (fontified t face font-lock-string-face) 4956 4968 (fontified t) 4968 4974 (fontified t face font-lock-string-face) 4974 4975 (fontified t face (rainbow-delimiters-depth-1-face)) 4975 4976 (fontified t) 4976 4983 (fontified t face font-lock-variable-name-face) 4983 4995 (fontified t) 4995 4996 (fontified t face (rainbow-delimiters-depth-1-face)) 4996 5041 (fontified t) 5041 5042 (fontified t face (rainbow-delimiters-depth-2-face)) 5042 5058 (fontified t) 5058 5059 (fontified t face (rainbow-delimiters-depth-2-face)) 5059 5060 (fontified t face (rainbow-delimiters-depth-1-face)) 5060 5077 (fontified t) 5077 5078 (fontified t face (rainbow-delimiters-depth-1-face)) 5078 5094 (fontified t) 5094 5095 (fontified t face (rainbow-delimiters-depth-1-face)) 5095 5098 (fontified t) 5098 5177 (fontified t face font-lock-comment-delimiter-face) 5177 5178 (fontified t face font-lock-comment-face) 5178 5198 (fontified t) 5198 5199 (fontified t face (rainbow-delimiters-depth-1-face)) 5199 5211 (fontified t) 5211 5214 (fontified t) 5214 5215 (fontified t face (rainbow-delimiters-depth-2-face)) 5215 5221 (fontified t face font-lock-string-face) 5221 5222 (fontified t face (rainbow-delimiters-depth-2-face)) 5222 5239 (fontified t) 5239 5240 (fontified t face (rainbow-delimiters-depth-2-face)) 5240 5250 (fontified t face font-lock-string-face) 5250 5251 (fontified t face (rainbow-delimiters-depth-2-face)) 5251 5252 (fontified t face (rainbow-delimiters-depth-1-face)) 5252 5253 (fontified t) 5253 5261 (fontified t) 5261 5262 (fontified t face (rainbow-delimiters-depth-1-face)) 5262 5263 (fontified t face (rainbow-delimiters-depth-1-face)) 5263 5265 (fontified t) 5265 5271 (fontified t face font-lock-variable-name-face) 5271 5287 (fontified t) 5287 5288 (fontified t face (rainbow-delimiters-depth-1-face)) 5288 5295 (fontified t) 5295 5296 (fontified t face (rainbow-delimiters-depth-1-face)) 5296 5308 (fontified t) 5308 5309 (fontified t face (rainbow-delimiters-depth-1-face)) 5309 5316 (fontified t) 5316 5317 (fontified t face (rainbow-delimiters-depth-2-face)) 5317 5324 (fontified t) 5324 5325 (fontified t face (rainbow-delimiters-depth-2-face)) 5325 5334 (fontified t) 5334 5335 (fontified t face (rainbow-delimiters-depth-2-face)) 5335 5339 (fontified t) 5339 5340 (fontified t face (rainbow-delimiters-depth-2-face)) 5340 5348 (fontified t) 5348 5349 (fontified t face (rainbow-delimiters-depth-2-face)) 5349 5353 (fontified t) 5353 5354 (fontified t face (rainbow-delimiters-depth-2-face)) 5354 5355 (fontified t face (rainbow-delimiters-depth-1-face)) 5355 5356 (fontified t) 5356 5364 (fontified t) 5364 5365 (fontified t face (rainbow-delimiters-depth-1-face)) 5365 5366 (fontified t face (rainbow-delimiters-depth-1-face)) 5366 5367 (fontified t)) . 1) (undo-tree-id6929 . 731) (undo-tree-id6930 . -4637) (undo-tree-id6931 . -4930) (undo-tree-id6932 . -4637) (undo-tree-id6933 . -4637) (undo-tree-id6934 . 436) (undo-tree-id6935 . -1486) (undo-tree-id6936 . -1497) (undo-tree-id6937 . -1497) (undo-tree-id6938 . -4310) (undo-tree-id6939 . -4557) (undo-tree-id6940 . -4557) (undo-tree-id6941 . -4557) (undo-tree-id6942 . -4557) (undo-tree-id6943 . -4557) (undo-tree-id6944 . -4557) (undo-tree-id6945 . -4557) (undo-tree-id6946 . -4557) (undo-tree-id6947 . -4557) (undo-tree-id6948 . -4557) (undo-tree-id6949 . -4557) (undo-tree-id6950 . -4557) (undo-tree-id6951 . -4557) (undo-tree-id6952 . -4557) (undo-tree-id6953 . -4557) (undo-tree-id6954 . -4557) (undo-tree-id6955 . -4557) (undo-tree-id6956 . -4557) (undo-tree-id6957 . -4557) (undo-tree-id6958 . -4557) (undo-tree-id6959 . -4557) (undo-tree-id6960 . -4557) (undo-tree-id6961 . -4557) (undo-tree-id6962 . -4557) (undo-tree-id6963 . -4557) (undo-tree-id6964 . -4557) (undo-tree-id6965 . -4557) (undo-tree-id6966 . -4557) (undo-tree-id6967 . -4557) (undo-tree-id6968 . -4557) (undo-tree-id6969 . -4557) (undo-tree-id6970 . -4557) (undo-tree-id6971 . -4557) (undo-tree-id6972 . -4557) (undo-tree-id6973 . -4557) (undo-tree-id6974 . -4557) (undo-tree-id6975 . -4557) (undo-tree-id6976 . -4557) (undo-tree-id6977 . -4557) (undo-tree-id6978 . -4557) (undo-tree-id6979 . -4557) (undo-tree-id6980 . -4557) (undo-tree-id6981 . -4557) (undo-tree-id6982 . -4557) (undo-tree-id6983 . -4557) (undo-tree-id6984 . -4557) (undo-tree-id6985 . -4557) (undo-tree-id6986 . -4557) (undo-tree-id6987 . -4557) (undo-tree-id6988 . -4557) (undo-tree-id6989 . -4557) (undo-tree-id6990 . -4557) (undo-tree-id6991 . -4557) (undo-tree-id6992 . -4557) (undo-tree-id6993 . -4557) (undo-tree-id6994 . -4557) (undo-tree-id6995 . -4557) (undo-tree-id6996 . -4557) (undo-tree-id6997 . -4557) (undo-tree-id6998 . -4557) (undo-tree-id6999 . -4557) (undo-tree-id7000 . -4637) (undo-tree-id7001 . -4635) (undo-tree-id7002 . -4635) (undo-tree-id7003 . -4635) (undo-tree-id7004 . -38) (undo-tree-id7005 . -44) (undo-tree-id7006 . -106) (undo-tree-id7007 . -110) (undo-tree-id7008 . -871) (undo-tree-id7009 . -876) (undo-tree-id7010 . -1097) (undo-tree-id7011 . -1101) (undo-tree-id7012 . -1187) (undo-tree-id7013 . -1188) (undo-tree-id7014 . -1355) (undo-tree-id7015 . -1356) (undo-tree-id7016 . -3060) (undo-tree-id7017 . -3064) (undo-tree-id7018 . -5051) (undo-tree-id7019 . -5058) (undo-tree-id7020 . -4635) (undo-tree-id7021 . -4635) (undo-tree-id7022 . -4635) (undo-tree-id7023 . -4635) (undo-tree-id7024 . -4635) (undo-tree-id7025 . -4635) (undo-tree-id7026 . -4635) (undo-tree-id7027 . -4635) (undo-tree-id7028 . -4635) (undo-tree-id7029 . -4635) (undo-tree-id7030 . -4635) (undo-tree-id7031 . -4635) (undo-tree-id7032 . -4635) (undo-tree-id7033 . -4635) (undo-tree-id7034 . -4635) (undo-tree-id7035 . -4635) (undo-tree-id7036 . -4635) (undo-tree-id7037 . -4635) (undo-tree-id7038 . -4635) (undo-tree-id7039 . -4635) (undo-tree-id7040 . -4635) (undo-tree-id7041 . -4635) (undo-tree-id7042 . -4635) (undo-tree-id7043 . -4635) (undo-tree-id7044 . -4635) (undo-tree-id7045 . -4635) (undo-tree-id7046 . -4635) (undo-tree-id7047 . -4635) (undo-tree-id7048 . -4635) (undo-tree-id7049 . -4635) (undo-tree-id7050 . -4635) (undo-tree-id7051 . -4635) (undo-tree-id7052 . -4635) (undo-tree-id7053 . -4635) (undo-tree-id7054 . -4635) (undo-tree-id7055 . -4635) (undo-tree-id7056 . -4635) (undo-tree-id7057 . -4635) (undo-tree-id7058 . -4635) (undo-tree-id7059 . -4635) (undo-tree-id7060 . -4635) (undo-tree-id7061 . -4635) (undo-tree-id7062 . -4635) (undo-tree-id7063 . -4635) (undo-tree-id7064 . -4635) (undo-tree-id7065 . -4635) (undo-tree-id7066 . -4635) (undo-tree-id7067 . -4635) (undo-tree-id7068 . -4635) (undo-tree-id7069 . -4635) (undo-tree-id7070 . -4635) (undo-tree-id7071 . -4635) (undo-tree-id7072 . -4635) (undo-tree-id7073 . -4635) (undo-tree-id7074 . -4635) (undo-tree-id7075 . -4635) (undo-tree-id7076 . -4635) (undo-tree-id7077 . -4635) (undo-tree-id7078 . -4635) (undo-tree-id7079 . -4635) (undo-tree-id7080 . -4635) (undo-tree-id7081 . -4635) (undo-tree-id7082 . -4635) (undo-tree-id7083 . -4635) (undo-tree-id7084 . -4635) (undo-tree-id7085 . -4635) (undo-tree-id7086 . -4635) (undo-tree-id7087 . -4635) (undo-tree-id7088 . -4635) (undo-tree-id7089 . -4635) (undo-tree-id7090 . -4635) (undo-tree-id7091 . -4635) (undo-tree-id7092 . -4635) (undo-tree-id7093 . -4635) (undo-tree-id7094 . -4635) (undo-tree-id7095 . -4635) (undo-tree-id7096 . -4635) (undo-tree-id7097 . -4637) (undo-tree-id7098 . -4637) (undo-tree-id7099 . -4637) (undo-tree-id7100 . -4637) (undo-tree-id7101 . -4637) (undo-tree-id7102 . -4637) (undo-tree-id7103 . -4637) (undo-tree-id7104 . -4637) (undo-tree-id7105 . -4637) (undo-tree-id7106 . -4637) (undo-tree-id7107 . -4637) (undo-tree-id7108 . -4637) (undo-tree-id7109 . -4637) (undo-tree-id7110 . -4637) (undo-tree-id7111 . -4637) (undo-tree-id7112 . -4637) (undo-tree-id7113 . -1) (undo-tree-id7114 . -38) (undo-tree-id7115 . -44) (undo-tree-id7116 . -106) (undo-tree-id7117 . -110) (undo-tree-id7118 . -106) (undo-tree-id7119 . -110) (undo-tree-id7120 . -563) (undo-tree-id7121 . -570) (undo-tree-id7122 . -526) (undo-tree-id7123 . -529) (undo-tree-id7124 . -947) (undo-tree-id7125 . -953) (undo-tree-id7126 . -1626) (undo-tree-id7127 . -1629) (undo-tree-id7128 . -1626) (undo-tree-id7129 . -1629) (undo-tree-id7130 . -1647) (undo-tree-id7131 . -1653) (undo-tree-id7132 . -1663) (undo-tree-id7133 . -1669) (undo-tree-id7134 . -1655) (undo-tree-id7135 . -1656) (undo-tree-id7136 . -3563) (undo-tree-id7137 . -3570) (undo-tree-id7138 . -4976) (undo-tree-id7139 . -4983) (undo-tree-id7140 . -4637) (undo-tree-id7141 . -4637) (undo-tree-id7142 . -4637) (undo-tree-id7143 . -4637) (undo-tree-id7144 . -4637) (undo-tree-id7145 . -4637) (undo-tree-id7146 . -4637) (undo-tree-id7147 . -4637) (undo-tree-id7148 . -4637) (undo-tree-id7149 . -4637) (undo-tree-id7150 . -4637) (undo-tree-id7151 . -4637) (undo-tree-id7152 . -4637) (undo-tree-id7153 . -4637) (undo-tree-id7154 . -4637) (undo-tree-id7155 . -4637) (undo-tree-id7156 . -4637) (undo-tree-id7157 . -4637) (undo-tree-id7158 . -4637) (undo-tree-id7159 . -4637) (undo-tree-id7160 . -4637) (undo-tree-id7161 . -4637) (undo-tree-id7162 . -4637) (undo-tree-id7163 . -4637) (undo-tree-id7164 . -4637) (undo-tree-id7165 . -4637) (undo-tree-id7166 . -4637) (undo-tree-id7167 . -4637) (undo-tree-id7168 . -4637) (undo-tree-id7169 . -4637) (undo-tree-id7170 . -4637) (undo-tree-id7171 . -4637) (undo-tree-id7172 . -4637) (undo-tree-id7173 . -4637) (undo-tree-id7174 . -4637) (undo-tree-id7175 . -4637) (undo-tree-id7176 . -4637) (undo-tree-id7177 . -4637) (undo-tree-id7178 . -4637) (undo-tree-id7179 . -4637) (undo-tree-id7180 . -4637) (undo-tree-id7181 . -4637) (undo-tree-id7182 . -4637) (undo-tree-id7183 . -4637) (undo-tree-id7184 . -4637) (undo-tree-id7185 . -4637) (undo-tree-id7186 . -4637) (undo-tree-id7187 . -4637) (undo-tree-id7188 . -4637) (undo-tree-id7189 . -4637) (undo-tree-id7190 . -4637) (undo-tree-id7191 . -4637) (undo-tree-id7192 . -4637) (undo-tree-id7193 . -4637) (undo-tree-id7194 . -4637) (undo-tree-id7195 . -4637) (undo-tree-id7196 . -4637) (undo-tree-id7197 . -4637) (undo-tree-id7198 . -4637) (undo-tree-id7199 . -4637) (undo-tree-id7200 . -4637) (undo-tree-id7201 . -4637) (undo-tree-id7202 . -4637) (undo-tree-id7203 . -4637) (undo-tree-id7204 . -4637) (undo-tree-id7205 . -4637) (undo-tree-id7206 . -4637) (undo-tree-id7207 . -4637) (undo-tree-id7208 . -4637) (undo-tree-id7209 . -4637) (undo-tree-id7210 . -4637) (undo-tree-id7211 . -4637) (undo-tree-id7212 . -4637) (undo-tree-id7213 . -4637) (undo-tree-id7214 . -4636) (undo-tree-id7215 . -4636) (undo-tree-id7216 . -4636) (undo-tree-id7217 . -4636) (undo-tree-id7218 . -4636) (undo-tree-id7219 . -4636) (undo-tree-id7220 . -4635) (undo-tree-id7221 . -4635) (undo-tree-id7222 . -4635) (undo-tree-id7223 . -4635) (undo-tree-id7224 . -4635) (undo-tree-id7225 . -4637) (undo-tree-id7226 . -4637) (undo-tree-id7227 . -4637) (undo-tree-id7228 . -4637) (undo-tree-id7229 . -4637) (undo-tree-id7230 . -4637) (undo-tree-id7231 . -4637) (undo-tree-id7232 . -4637) (undo-tree-id7233 . -4637) (undo-tree-id7234 . -4637) (undo-tree-id7235 . -4637) (undo-tree-id7236 . -4637) (undo-tree-id7237 . -4637) (undo-tree-id7238 . -4637) (undo-tree-id7239 . -4637) (undo-tree-id7240 . -4637) (undo-tree-id7241 . -4637) (undo-tree-id7242 . -4637) (undo-tree-id7243 . -4637) (undo-tree-id7244 . -4930) (undo-tree-id7245 . -4930) (undo-tree-id7246 . -4930) (undo-tree-id7247 . -4930) (undo-tree-id7248 . -38) (undo-tree-id7249 . -44) (undo-tree-id7250 . -106) (undo-tree-id7251 . -110) (undo-tree-id7252 . -871) (undo-tree-id7253 . -876) (undo-tree-id7254 . -1097) (undo-tree-id7255 . -1101) (undo-tree-id7256 . -1187) (undo-tree-id7257 . -1188) (undo-tree-id7258 . -1355) (undo-tree-id7259 . -1356) (undo-tree-id7260 . -3060) (undo-tree-id7261 . -3064) (undo-tree-id7262 . -4755) (undo-tree-id7263 . -4759) (undo-tree-id7264 . -4813) (undo-tree-id7265 . -4814) (undo-tree-id7266 . -4815) (undo-tree-id7267 . -4816) (undo-tree-id7268 . -5051) (undo-tree-id7269 . -5058) (undo-tree-id7270 . -4930) (undo-tree-id7271 . -4930) (undo-tree-id7272 . -4930) (undo-tree-id7273 . -4932) (undo-tree-id7274 . -4932) (undo-tree-id7275 . -4932) (undo-tree-id7276 . -4932) (undo-tree-id7277 . -5178) (undo-tree-id7278 . -5178) (undo-tree-id7279 . -5178) (undo-tree-id7280 . -5178) (undo-tree-id7281 . -4930) (undo-tree-id7282 . -4930) (undo-tree-id7283 . -4930) (undo-tree-id7284 . -4930) (undo-tree-id7285 . -4930) (undo-tree-id7286 . -4930) (undo-tree-id7287 . -4930) (undo-tree-id7288 . -4930) (undo-tree-id7289 . -4930) (undo-tree-id7290 . -4930) (undo-tree-id7291 . -4930) (undo-tree-id7292 . -4406) (undo-tree-id7293 . -4930) (undo-tree-id7294 . -4930) (undo-tree-id7295 . -4406) (undo-tree-id7296 . -4930) (undo-tree-id7297 . -4930) (undo-tree-id7298 . -4930) (undo-tree-id7299 . -4930) (undo-tree-id7300 . -4930) (undo-tree-id7301 . -4930)) nil (25759 43444 190264 327000) 0 nil])
([nil nil ((4923 . 4924) (t 25759 43444 209008 393000)) nil (25759 43522 768004 291000) 0 nil])
([nil nil ((4637 . 4638) 4616) nil (25759 43522 768002 739000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5169 . 5170) (nil fontified nil 4926 . 5170) (4926 . 5170) (#("model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))


model.evaluate(X_valid, y_valid)

" 0 6 (fontified t) 6 13 (fontified t face font-lock-builtin-face) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 19 (fontified t) 19 24 (fontified t face font-lock-string-face) 24 36 (fontified t) 36 42 (fontified t face font-lock-string-face) 42 43 (fontified t face (rainbow-delimiters-depth-1-face)) 43 44 (fontified t) 44 51 (fontified t face font-lock-variable-name-face) 51 63 (fontified t) 63 64 (fontified t face (rainbow-delimiters-depth-1-face)) 64 109 (fontified t) 109 110 (fontified t face (rainbow-delimiters-depth-2-face)) 110 126 (fontified t) 126 127 (fontified t face (rainbow-delimiters-depth-2-face)) 127 128 (fontified t face (rainbow-delimiters-depth-1-face)) 128 145 (fontified t) 145 146 (fontified t face (rainbow-delimiters-depth-1-face)) 146 162 (fontified t) 162 163 (fontified t face (rainbow-delimiters-depth-1-face)) 163 165 (fontified t)) . 4926) (undo-tree-id7377 . -164) (undo-tree-id7378 . -165) (undo-tree-id7379 . -7) (undo-tree-id7380 . -7) (undo-tree-id7381 . -7) (undo-tree-id7382 . -164) (undo-tree-id7383 . -44) (undo-tree-id7384 . -102) (undo-tree-id7385 . -129) (undo-tree-id7386 . -102) (undo-tree-id7387 . -44) (undo-tree-id7388 . -44) (undo-tree-id7389 . -44) (undo-tree-id7390 . -44) (undo-tree-id7391 . -102) (undo-tree-id7392 . -119) (undo-tree-id7393 . -126) (undo-tree-id7394 . -102) (undo-tree-id7395 . -102) (undo-tree-id7396 . -102) (undo-tree-id7397 . -129) (undo-tree-id7398 . -130) (undo-tree-id7399 . -131) (undo-tree-id7400 . -44) (undo-tree-id7401 . -51) (undo-tree-id7402 . -165) (undo-tree-id7403 . -164) (undo-tree-id7404 . -44) (undo-tree-id7405 . -102) (undo-tree-id7406 . -129) (undo-tree-id7407 . -130) (undo-tree-id7408 . -131) (undo-tree-id7409 . -164) (undo-tree-id7410 . -165) (undo-tree-id7411 . -165) (undo-tree-id7412 . -165) 5091) nil (25759 43522 767996 97000) 0 nil])
([nil nil ((5250 . 5251) (t 25759 43522 790186 925000) 5249) nil (25759 43561 16300 181000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5637 . 5638) (nil fontified nil 5252 . 5638) (5252 . 5638) (#("plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()
" 0 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-1-face)) 21 36 (fontified t) 36 37 (fontified t face (rainbow-delimiters-depth-2-face)) 37 43 (fontified t face font-lock-string-face) 43 44 (fontified t face (rainbow-delimiters-depth-2-face)) 44 61 (fontified t) 61 62 (fontified t face (rainbow-delimiters-depth-2-face)) 62 72 (fontified t face font-lock-string-face) 72 73 (fontified t face (rainbow-delimiters-depth-2-face)) 73 74 (fontified t face (rainbow-delimiters-depth-1-face)) 74 83 (fontified t) 83 84 (fontified t face (rainbow-delimiters-depth-1-face)) 84 85 (fontified t face (rainbow-delimiters-depth-1-face)) 85 87 (fontified t) 87 93 (fontified t face font-lock-variable-name-face) 93 109 (fontified t) 109 110 (fontified t face (rainbow-delimiters-depth-1-face)) 110 117 (fontified t) 117 118 (fontified t face (rainbow-delimiters-depth-1-face)) 118 130 (fontified t) 130 131 (fontified t face (rainbow-delimiters-depth-1-face)) 131 138 (fontified t) 138 139 (fontified t face (rainbow-delimiters-depth-2-face)) 139 146 (fontified t) 146 147 (fontified t face (rainbow-delimiters-depth-2-face)) 147 156 (fontified t) 156 157 (fontified t face (rainbow-delimiters-depth-2-face)) 157 161 (fontified t) 161 162 (fontified t face (rainbow-delimiters-depth-2-face)) 162 170 (fontified t) 170 171 (fontified t face (rainbow-delimiters-depth-2-face)) 171 175 (fontified t) 175 176 (fontified t face (rainbow-delimiters-depth-2-face)) 176 177 (fontified t face (rainbow-delimiters-depth-1-face)) 177 186 (fontified t) 186 187 (fontified t face (rainbow-delimiters-depth-1-face)) 187 188 (fontified t face (rainbow-delimiters-depth-1-face)) 188 189 (fontified t)) . 5252) (undo-tree-id7413 . -188) (undo-tree-id7414 . -189) (undo-tree-id7415 . -178) (undo-tree-id7416 . -189) (undo-tree-id7417 . -189) (undo-tree-id7418 . -189) (undo-tree-id7419 . -189) (undo-tree-id7420 . -189) (undo-tree-id7421 . -189) (undo-tree-id7422 . -189) (undo-tree-id7423 . -189) (undo-tree-id7424 . -189) (undo-tree-id7425 . -189) (undo-tree-id7426 . -189) (undo-tree-id7427 . -189) (undo-tree-id7428 . -189) (undo-tree-id7429 . -178) (undo-tree-id7430 . -119) (undo-tree-id7431 . -87) (undo-tree-id7432 . -87) (undo-tree-id7433 . -87) (undo-tree-id7434 . -87) (undo-tree-id7435 . -87) (undo-tree-id7436 . -87) (undo-tree-id7437 . -87) (undo-tree-id7438 . -87) (undo-tree-id7439 . -87) (undo-tree-id7440 . -87) (undo-tree-id7441 . -87) (undo-tree-id7442 . -87) (undo-tree-id7443 . -87) (undo-tree-id7444 . -87) (undo-tree-id7445 . -87) (undo-tree-id7446 . -86) (undo-tree-id7447 . -75) (undo-tree-id7448 . -58) (undo-tree-id7449 . -189) (undo-tree-id7450 . -178) (undo-tree-id7451 . -58) (undo-tree-id7452 . -75) (undo-tree-id7453 . -86) (undo-tree-id7454 . -87) (undo-tree-id7455 . -119) (undo-tree-id7456 . -178) (undo-tree-id7457 . -189) (undo-tree-id7458 . -189) (undo-tree-id7459 . -189) 5441 (t 25759 43561 39266 279000)) nil (25759 43588 811612 867000) 0 nil])
([nil nil ((5638 . 5639)) nil (25759 43588 811228 997000) 0 nil])
([nil nil ((#("I have added comments to explain the purpose and functionality of each section of the code:
" 0 45 (fontified t) 45 48 (fontified t face font-lock-keyword-face) 48 92 (fontified t)) . 5528) (undo-tree-id7486 . -91) (undo-tree-id7487 . -92) (undo-tree-id7488 . -92) (undo-tree-id7489 . -92) (undo-tree-id7490 . -92) (undo-tree-id7491 . -92) (undo-tree-id7492 . -92) (undo-tree-id7493 . -92) (undo-tree-id7494 . -92) (undo-tree-id7495 . -92) (undo-tree-id7496 . -92) (undo-tree-id7497 . -92) (undo-tree-id7498 . -74) (undo-tree-id7499 . -74) (undo-tree-id7500 . -16) (undo-tree-id7501 . -2) (undo-tree-id7502 . -6) (undo-tree-id7503 . -58) (undo-tree-id7504 . -92) (undo-tree-id7505 . -92) (undo-tree-id7506 . -58) (undo-tree-id7507 . -1) (undo-tree-id7508 . -92) (t 25759 43588 829293 549000)) nil (25759 43601 626483 970000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5528) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1)) nil (25759 43601 626460 778000) 0 nil])
([nil nil ((#("plot_learning_cur
" 0 16 (fontified t) 16 17 (rear-nonsticky t fontified t) 17 18 (fontified t)) . 5528) (undo-tree-id7460 . -17) (undo-tree-id7461 . -16) (undo-tree-id7462 . -16) (undo-tree-id7463 . -16) (undo-tree-id7464 . -16) (undo-tree-id7465 . -17) (undo-tree-id7466 . -18)) nil (25759 43601 626439 733000) 0 nil])
([nil nil ((5528 . 5529) (5527 . 5528) (t 25759 43601 648423 771000) 5526) nil (25759 43631 208245 932000) 0 nil])
([nil nil ((1 . 5528) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################

model = keras.models.Sequential(
    [
        # Flatten layer to flatten the input shape of [50, 1] to a 1D array of size 50
        keras.layers.Flatten(input_shape=[50, 1]),
        # Dense layer with 1 unit, representing a single output value
        keras.layers.Dense(1),
    ]
)

# Compile the model
model.compile(loss=\"mse\", optimizer=\"adam\")

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

# Evaluate the model on the validation set
model.evaluate(X_valid, y_valid)
###############################################################################

# Plot the learning curves
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

# Make predictions on the validation set
y_pred = model.predict(X_valid)

# Plot the series
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()


" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 2654 2655 (syntax-table (15)) 2830 2831 (syntax-table (15)) 4406 4485 (fontified t face font-lock-comment-delimiter-face) 4485 4486 (fontified t face font-lock-comment-face) 4486 4497 (fontified t) 4497 4498 (fontified t face (rainbow-delimiters-depth-1-face)) 4498 4505 (fontified t) 4505 4506 (fontified t face (rainbow-delimiters-depth-2-face)) 4506 4513 (fontified t) 4513 4514 (fontified t face (rainbow-delimiters-depth-2-face)) 4514 4523 (fontified t) 4523 4524 (fontified t face (rainbow-delimiters-depth-2-face)) 4524 4528 (fontified t) 4528 4529 (fontified t face (rainbow-delimiters-depth-2-face)) 4529 4537 (fontified t) 4537 4538 (fontified t face (rainbow-delimiters-depth-2-face)) 4538 4542 (fontified t) 4542 4543 (fontified t face (rainbow-delimiters-depth-2-face)) 4543 4544 (fontified t face (rainbow-delimiters-depth-1-face)) 4544 4553 (fontified t) 4553 4554 (fontified t face (rainbow-delimiters-depth-1-face)) 4554 4555 (fontified t face (rainbow-delimiters-depth-1-face)) 4555 4557 (fontified t) 4557 4636 (fontified t face font-lock-comment-delimiter-face) 4636 4637 (fontified t face font-lock-comment-face) 4637 4638 (fontified t) 4638 4643 (fontified t face font-lock-variable-name-face) 4643 4669 (fontified t) 4669 4670 (fontified t face (rainbow-delimiters-depth-1-face)) 4670 4675 (fontified t) 4675 4676 (fontified t face (rainbow-delimiters-depth-2-face)) 4676 4685 (fontified t) 4685 4687 (fontified t face font-lock-comment-delimiter-face) 4687 4764 (fontified t face font-lock-comment-face) 4764 4792 (fontified t) 4792 4793 (fontified t face (rainbow-delimiters-depth-3-face)) 4793 4805 (fontified t) 4805 4806 (fontified t face (rainbow-delimiters-depth-4-face)) 4806 4811 (fontified t) 4811 4812 (fontified t face (rainbow-delimiters-depth-4-face)) 4812 4813 (fontified t face (rainbow-delimiters-depth-3-face)) 4813 4823 (fontified t) 4823 4825 (fontified t face font-lock-comment-delimiter-face) 4825 4885 (fontified t face font-lock-comment-face) 4885 4907 (fontified t) 4907 4911 (fontified t) 4911 4912 (fontified t face (rainbow-delimiters-depth-3-face)) 4912 4913 (fontified t) 4913 4914 (fontified t face (rainbow-delimiters-depth-3-face)) 4914 4916 (fontified t) 4916 4920 (fontified t) 4920 4921 (fontified t face (rainbow-delimiters-depth-2-face)) 4921 4922 (fontified t) 4922 4923 (fontified t face (rainbow-delimiters-depth-1-face)) 4923 4924 (fontified t) 4924 4925 (fontified t) 4925 4927 (fontified t face font-lock-comment-delimiter-face) 4927 4945 (fontified t face font-lock-comment-face) 4945 4951 (fontified t) 4951 4958 (fontified t face font-lock-builtin-face) 4958 4959 (fontified t face (rainbow-delimiters-depth-1-face)) 4959 4964 (fontified t) 4964 4969 (fontified t face font-lock-string-face) 4969 4981 (fontified t) 4981 4987 (fontified t face font-lock-string-face) 4987 4988 (fontified t face (rainbow-delimiters-depth-1-face)) 4988 4990 (fontified t) 4990 4992 (fontified t face font-lock-comment-delimiter-face) 4992 5008 (fontified t face font-lock-comment-face) 5008 5015 (fontified t face font-lock-variable-name-face) 5015 5027 (fontified t) 5027 5028 (fontified t face (rainbow-delimiters-depth-1-face)) 5028 5073 (fontified t) 5073 5074 (fontified t face (rainbow-delimiters-depth-2-face)) 5074 5090 (fontified t) 5090 5091 (fontified t face (rainbow-delimiters-depth-2-face)) 5091 5092 (fontified t face (rainbow-delimiters-depth-1-face)) 5092 5094 (fontified t) 5094 5096 (fontified t face font-lock-comment-delimiter-face) 5096 5137 (fontified t face font-lock-comment-face) 5137 5151 (fontified t) 5151 5152 (fontified t face (rainbow-delimiters-depth-1-face)) 5152 5168 (fontified t) 5168 5169 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 5169 5170 (fontified t) 5170 5217 (fontified t face font-lock-comment-delimiter-face) 5217 5249 (fontified t face font-lock-comment-delimiter-face) 5249 5250 (fontified t face font-lock-comment-face) 5250 5251 (fontified t) 5251 5253 (fontified t face font-lock-comment-delimiter-face) 5253 5278 (fontified t face font-lock-comment-face) 5278 5298 (fontified t) 5298 5299 (fontified t face (rainbow-delimiters-depth-1-face)) 5299 5314 (fontified t) 5314 5315 (fontified t face (rainbow-delimiters-depth-2-face)) 5315 5321 (fontified t face font-lock-string-face) 5321 5322 (fontified t face (rainbow-delimiters-depth-2-face)) 5322 5339 (fontified t) 5339 5340 (fontified t face (rainbow-delimiters-depth-2-face)) 5340 5350 (fontified t face font-lock-string-face) 5350 5351 (fontified t face (rainbow-delimiters-depth-2-face)) 5351 5352 (fontified t face (rainbow-delimiters-depth-1-face)) 5352 5361 (fontified t) 5361 5362 (fontified t face (rainbow-delimiters-depth-1-face)) 5362 5363 (fontified t face (rainbow-delimiters-depth-1-face)) 5363 5365 (fontified t) 5365 5367 (fontified t face font-lock-comment-delimiter-face) 5367 5406 (fontified t face font-lock-comment-face) 5406 5412 (fontified t face font-lock-variable-name-face) 5412 5428 (fontified t) 5428 5429 (fontified t face (rainbow-delimiters-depth-1-face)) 5429 5436 (fontified t) 5436 5437 (fontified t face (rainbow-delimiters-depth-1-face)) 5437 5439 (fontified t) 5439 5441 (fontified t face font-lock-comment-delimiter-face) 5441 5457 (fontified t face font-lock-comment-face) 5457 5468 (fontified t) 5468 5469 (fontified t face (rainbow-delimiters-depth-1-face)) 5469 5476 (fontified t) 5476 5477 (fontified t face (rainbow-delimiters-depth-2-face)) 5477 5484 (fontified t) 5484 5485 (fontified t face (rainbow-delimiters-depth-2-face)) 5485 5494 (fontified t) 5494 5495 (fontified t face (rainbow-delimiters-depth-2-face)) 5495 5499 (fontified t) 5499 5500 (fontified t face (rainbow-delimiters-depth-2-face)) 5500 5508 (fontified t) 5508 5509 (fontified t face (rainbow-delimiters-depth-2-face)) 5509 5513 (fontified t) 5513 5514 (fontified t face (rainbow-delimiters-depth-2-face)) 5514 5515 (fontified t face (rainbow-delimiters-depth-1-face)) 5515 5516 (fontified t) 5516 5524 (fontified t) 5524 5525 (fontified t face (rainbow-delimiters-depth-1-face)) 5525 5526 (fontified t face (rainbow-delimiters-depth-1-face)) 5526 5527 (fontified t) 5527 5528 (fontified t) 5528 5529 (fontified t)) . 1) (undo-tree-id7509 . 1) (undo-tree-id7510 . -5529) (undo-tree-id7511 . -5529) (undo-tree-id7512 . -5251) (undo-tree-id7513 . -5251) (undo-tree-id7514 . -4925) (undo-tree-id7515 . -5251) (undo-tree-id7516 . -5529) (undo-tree-id7517 . -5529) (undo-tree-id7518 . -5529) (undo-tree-id7519 . -5529) (undo-tree-id7520 . -5529) (undo-tree-id7521 . -5529) (undo-tree-id7522 . -5529) (undo-tree-id7523 . -5529) (undo-tree-id7524 . -5529) (undo-tree-id7525 . -5529) (undo-tree-id7526 . -5529) (undo-tree-id7527 . -5529) (undo-tree-id7528 . -5529) (undo-tree-id7529 . -5529) (undo-tree-id7530 . -5529) (undo-tree-id7531 . -5529) (undo-tree-id7532 . -5529) (undo-tree-id7533 . -5529) (undo-tree-id7534 . -5529) (undo-tree-id7535 . -5529) (undo-tree-id7536 . -5529) (undo-tree-id7537 . -5529) (undo-tree-id7538 . -5529) (undo-tree-id7539 . -5529) (undo-tree-id7540 . -5529) (undo-tree-id7541 . -5529) (undo-tree-id7542 . -5529) (undo-tree-id7543 . -5529) (undo-tree-id7544 . -5529) (undo-tree-id7545 . -5529) (undo-tree-id7546 . -5529) (undo-tree-id7547 . -5529) (undo-tree-id7548 . -5529) (undo-tree-id7549 . -5529) (undo-tree-id7550 . -5529) (undo-tree-id7551 . -5529) (undo-tree-id7552 . -5529) (undo-tree-id7553 . -5529) (undo-tree-id7554 . -5529) (undo-tree-id7555 . -5529) (undo-tree-id7556 . -5529) (undo-tree-id7557 . -5529) (undo-tree-id7558 . -5529) (undo-tree-id7559 . -38) (undo-tree-id7560 . -44) (undo-tree-id7561 . -106) (undo-tree-id7562 . -110) (undo-tree-id7563 . -871) (undo-tree-id7564 . -876) (undo-tree-id7565 . -1097) (undo-tree-id7566 . -1101) (undo-tree-id7567 . -1187) (undo-tree-id7568 . -1188) (undo-tree-id7569 . -1355) (undo-tree-id7570 . -1356) (undo-tree-id7571 . -3060) (undo-tree-id7572 . -3064) (undo-tree-id7573 . -4756) (undo-tree-id7574 . -4760) (undo-tree-id7575 . -5083) (undo-tree-id7576 . -5090) (undo-tree-id7577 . -5529) (undo-tree-id7578 . -5529) (undo-tree-id7579 . -5529) (undo-tree-id7580 . -5529) (undo-tree-id7581 . -5529) (undo-tree-id7582 . -5529) (undo-tree-id7583 . -5529) (undo-tree-id7584 . -5516) (undo-tree-id7585 . -5516) (undo-tree-id7586 . -5516) (undo-tree-id7587 . -5516) (undo-tree-id7588 . -5516) (undo-tree-id7589 . -5516) (undo-tree-id7590 . -5516) (undo-tree-id7591 . -5457) (undo-tree-id7592 . -5457) (undo-tree-id7593 . -5439) (undo-tree-id7594 . -5438) (undo-tree-id7595 . -5406) (undo-tree-id7596 . -5365) (undo-tree-id7597 . -5364) (undo-tree-id7598 . -5353) (undo-tree-id7599 . -5336) (undo-tree-id7600 . -5278) (undo-tree-id7601 . -5251) (undo-tree-id7602 . -5251) (undo-tree-id7603 . -5251) (undo-tree-id7604 . -5251) (undo-tree-id7605 . -5251) (undo-tree-id7606 . -5251) (undo-tree-id7607 . -5278) (undo-tree-id7608 . -5278) (undo-tree-id7609 . -5278) (undo-tree-id7610 . -5278) (undo-tree-id7611 . -5278) (undo-tree-id7612 . -5278) (undo-tree-id7613 . -5336) (undo-tree-id7614 . -5336) (undo-tree-id7615 . -5336) (undo-tree-id7616 . -5336) (undo-tree-id7617 . -5336) (undo-tree-id7618 . -5336) (undo-tree-id7619 . -5336) (undo-tree-id7620 . -5336) (undo-tree-id7621 . -5353) (undo-tree-id7622 . -5353) (undo-tree-id7623 . -5353) (undo-tree-id7624 . -5353) (undo-tree-id7625 . -5353) (undo-tree-id7626 . -5353) (undo-tree-id7627 . -5364) (undo-tree-id7628 . -5365) (undo-tree-id7629 . -5406) (undo-tree-id7630 . -5406) (undo-tree-id7631 . -5406) (undo-tree-id7632 . -5406) (undo-tree-id7633 . -5406) (undo-tree-id7634 . -5406) (undo-tree-id7635 . -5406) (undo-tree-id7636 . -5406) (undo-tree-id7637 . -5406) (undo-tree-id7638 . -5406) (undo-tree-id7639 . -5406) (undo-tree-id7640 . -4873) (undo-tree-id7641 . -5406) (undo-tree-id7642 . -5406) (undo-tree-id7643 . -5406) (undo-tree-id7644 . -5406) (undo-tree-id7645 . -5406) (undo-tree-id7646 . -5406) (undo-tree-id7647 . -5406) (undo-tree-id7648 . -5406) (undo-tree-id7649 . -5406) (undo-tree-id7650 . -5406) (undo-tree-id7651 . -5365) (undo-tree-id7652 . -1) (undo-tree-id7653 . -38) (undo-tree-id7654 . -44) (undo-tree-id7655 . -106) (undo-tree-id7656 . -110) (undo-tree-id7657 . -106) (undo-tree-id7658 . -110) (undo-tree-id7659 . -563) (undo-tree-id7660 . -570) (undo-tree-id7661 . -526) (undo-tree-id7662 . -529) (undo-tree-id7663 . -947) (undo-tree-id7664 . -953) (undo-tree-id7665 . -1626) (undo-tree-id7666 . -1629) (undo-tree-id7667 . -1626) (undo-tree-id7668 . -1629) (undo-tree-id7669 . -1647) (undo-tree-id7670 . -1653) (undo-tree-id7671 . -1663) (undo-tree-id7672 . -1669) (undo-tree-id7673 . -1655) (undo-tree-id7674 . -1656) (undo-tree-id7675 . -3563) (undo-tree-id7676 . -3570) (undo-tree-id7677 . -5008) (undo-tree-id7678 . -5015) (undo-tree-id7679 . -5367) (undo-tree-id7680 . -5367) (undo-tree-id7681 . -5367) (undo-tree-id7682 . -5372) (undo-tree-id7683 . -5384) (undo-tree-id7684 . -5387) (undo-tree-id7685 . -5391) (undo-tree-id7686 . -5402) (undo-tree-id7687 . -5406) (undo-tree-id7688 . -5407) (undo-tree-id7689 . -5438) (undo-tree-id7690 . -5440) (undo-tree-id7691 . -5458) (undo-tree-id7692 . -5461) (undo-tree-id7693 . -5462) (undo-tree-id7694 . -5468) (undo-tree-id7695 . -5469) (undo-tree-id7696 . -5469) (undo-tree-id7697 . -5469) (undo-tree-id7698 . -5469) (undo-tree-id7699 . -5469) (undo-tree-id7700 . -5470) (undo-tree-id7701 . -5470) (undo-tree-id7702 . -5470) (undo-tree-id7703 . -5470) (undo-tree-id7704 . -5475) (undo-tree-id7705 . -5476) (undo-tree-id7706 . -5476) (undo-tree-id7707 . -5476) (undo-tree-id7708 . -5476) (undo-tree-id7709 . -5476) (undo-tree-id7710 . -5477) (undo-tree-id7711 . -5477) (undo-tree-id7712 . -5477) (undo-tree-id7713 . -5477) (undo-tree-id7714 . -5478) (undo-tree-id7715 . -5481) (undo-tree-id7716 . -5481) (undo-tree-id7717 . -5481) (undo-tree-id7718 . -5481) (undo-tree-id7719 . -5481) (undo-tree-id7720 . -5481) (undo-tree-id7721 . -5480) (undo-tree-id7722 . -5480) (undo-tree-id7723 . -5480) (undo-tree-id7724 . -5480) (undo-tree-id7725 . -5480) (undo-tree-id7726 . -5480) (undo-tree-id7727 . -5481) (undo-tree-id7728 . -5483) (undo-tree-id7729 . -5485) (undo-tree-id7730 . -5487) (undo-tree-id7731 . -5487) (undo-tree-id7732 . -5487) (undo-tree-id7733 . -5487) (undo-tree-id7734 . -5487) (undo-tree-id7735 . -5488) (undo-tree-id7736 . -5488) (undo-tree-id7737 . -5488) (undo-tree-id7738 . -5488) (undo-tree-id7739 . -5493) (undo-tree-id7740 . -5494) (undo-tree-id7741 . -5495) (undo-tree-id7742 . -5496) (undo-tree-id7743 . -5498) (undo-tree-id7744 . -5500) (undo-tree-id7745 . -5500) (undo-tree-id7746 . -5500) (undo-tree-id7747 . -5500) (undo-tree-id7748 . -5500) (undo-tree-id7749 . -5500) (undo-tree-id7750 . -5500) (undo-tree-id7751 . -5500) (undo-tree-id7752 . -5502) (undo-tree-id7753 . -5503) (undo-tree-id7754 . -5507) (undo-tree-id7755 . -5508) (undo-tree-id7756 . -5509) (undo-tree-id7757 . -5510) (undo-tree-id7758 . -5512) (undo-tree-id7759 . -5512) (undo-tree-id7760 . -5512) (undo-tree-id7761 . -5512) (undo-tree-id7762 . -5512) (undo-tree-id7763 . -5512) (undo-tree-id7764 . -5512) (undo-tree-id7765 . -5512) (undo-tree-id7766 . -5512) (undo-tree-id7767 . -5512) (undo-tree-id7768 . -5512) (undo-tree-id7769 . -4873) (undo-tree-id7770 . -5512) (undo-tree-id7771 . -5512) (undo-tree-id7772 . -5512) (undo-tree-id7773 . -5512) (undo-tree-id7774 . -5512) (undo-tree-id7775 . -5512) (undo-tree-id7776 . -5513) (undo-tree-id7777 . -5513) (undo-tree-id7778 . -5513) (undo-tree-id7779 . -5525) (undo-tree-id7780 . -5525) (undo-tree-id7781 . -5525) (undo-tree-id7782 . -5525) (undo-tree-id7783 . -5525) (undo-tree-id7784 . -5525) (undo-tree-id7785 . -5525) (undo-tree-id7786 . -5525) (undo-tree-id7787 . -5525) (undo-tree-id7788 . -5525) (undo-tree-id7789 . -5525) (undo-tree-id7790 . -5527) (undo-tree-id7791 . -5516) (undo-tree-id7792 . -5516) (undo-tree-id7793 . -5527) (undo-tree-id7794 . -5527) (undo-tree-id7795 . -5527) (undo-tree-id7796 . -38) (undo-tree-id7797 . -44) (undo-tree-id7798 . -106) (undo-tree-id7799 . -110) (undo-tree-id7800 . -871) (undo-tree-id7801 . -876) (undo-tree-id7802 . -1097) (undo-tree-id7803 . -1101) (undo-tree-id7804 . -1187) (undo-tree-id7805 . -1188) (undo-tree-id7806 . -1355) (undo-tree-id7807 . -1356) (undo-tree-id7808 . -3060) (undo-tree-id7809 . -3064) (undo-tree-id7810 . -4756) (undo-tree-id7811 . -4760) (undo-tree-id7812 . -5083) (undo-tree-id7813 . -5090) (undo-tree-id7814 . -5527) (undo-tree-id7815 . -5529) (undo-tree-id7816 . -5527) (undo-tree-id7817 . -5527) (undo-tree-id7818 . -5527) (undo-tree-id7819 . -5527) (undo-tree-id7820 . -5527) (undo-tree-id7821 . -5527) (undo-tree-id7822 . -5527) (undo-tree-id7823 . 2) (undo-tree-id7824 . -5528) (undo-tree-id7825 . -5516) (undo-tree-id7826 . -5516) (undo-tree-id7827 . -5528) (undo-tree-id7828 . -5528) (undo-tree-id7829 . -5527) (undo-tree-id7830 . -5527) (undo-tree-id7831 . -5528) (undo-tree-id7832 . -5528) (undo-tree-id7833 . -5528) (undo-tree-id7834 . -5528) (undo-tree-id7835 . -5528) (undo-tree-id7836 . -5528) (undo-tree-id7837 . -5528) (undo-tree-id7838 . -5528) (undo-tree-id7839 . -5528) (undo-tree-id7840 . -5528) (undo-tree-id7841 . -5528) (undo-tree-id7842 . -5528) (undo-tree-id7843 . -5528) (undo-tree-id7844 . -5528) (undo-tree-id7845 . -4873) (undo-tree-id7846 . -5528) (undo-tree-id7847 . -5528) (undo-tree-id7848 . -4873) (undo-tree-id7849 . -5528) (undo-tree-id7850 . -5528) (undo-tree-id7851 . -5528) (undo-tree-id7852 . -5528) (undo-tree-id7853 . -5528) (undo-tree-id7854 . -5528)) nil (25759 43631 208228 699000) 0 nil])
([nil nil ((5528 . 5529) (t 25759 43631 230509 162000)) nil (25759 43739 816690 153000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5879 . 5880) (nil fontified nil 5529 . 5880) (5529 . 5880)) nil (25759 43739 816687 877000) 0 nil])
([nil nil ((5576 . 5577)) nil (25759 43739 816685 912000) 0 nil])
([nil nil ((#("np.random.seed(42)
" 0 14 (fontified t) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-1-face)) 18 19 (fontified t)) . 5529) (undo-tree-id8230 . -18) (undo-tree-id8231 . -4) (undo-tree-id8232 . -17) (undo-tree-id8233 . -17) (undo-tree-id8234 . -4) (undo-tree-id8235 . -4) (undo-tree-id8236 . -4) (undo-tree-id8237 . -4) (undo-tree-id8238 . -19) 5533) nil (25759 43739 816683 608000) 0 nil])
([nil nil ((#("tf.random.set_seed(42)
" 0 18 (fontified t) 18 19 (fontified t face (rainbow-delimiters-depth-1-face)) 19 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 23 (fontified t)) . 5529) (undo-tree-id8199 . -22) (undo-tree-id8200 . -4) (undo-tree-id8201 . -23) (undo-tree-id8202 . -21) (undo-tree-id8203 . -21) (undo-tree-id8204 . -23) (undo-tree-id8205 . -23) (undo-tree-id8206 . -23) (undo-tree-id8207 . -4) (undo-tree-id8208 . -4) (undo-tree-id8209 . -4) (undo-tree-id8210 . -22) (undo-tree-id8211 . -4) (undo-tree-id8212 . -4) (undo-tree-id8213 . -4) (undo-tree-id8214 . -4) (undo-tree-id8215 . -4) (undo-tree-id8216 . -4) (undo-tree-id8217 . -4) (undo-tree-id8218 . -4) (undo-tree-id8219 . -4) (undo-tree-id8220 . -4) (undo-tree-id8221 . -4) (undo-tree-id8222 . -4) (undo-tree-id8223 . -4) (undo-tree-id8224 . -4) (undo-tree-id8225 . -4) (undo-tree-id8226 . -4) (undo-tree-id8227 . -4) (undo-tree-id8228 . -4) (undo-tree-id8229 . -23) 5533) nil (25759 43739 816671 640000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 5530) (undo-tree-id8168 . -3) (undo-tree-id8169 . -4) (undo-tree-id8170 . -4) (undo-tree-id8171 . -4) (undo-tree-id8172 . -4) (undo-tree-id8173 . -4) (undo-tree-id8174 . -4) (undo-tree-id8175 . -4) (undo-tree-id8176 . -4) (undo-tree-id8177 . -4) (undo-tree-id8178 . -4) (undo-tree-id8179 . -4) (undo-tree-id8180 . -4) (undo-tree-id8181 . -4) (undo-tree-id8182 . -4) (undo-tree-id8183 . -4) (undo-tree-id8184 . -4) (undo-tree-id8185 . -4) (undo-tree-id8186 . -4) (undo-tree-id8187 . -4) (undo-tree-id8188 . -4) (undo-tree-id8189 . -4) (undo-tree-id8190 . -4) (undo-tree-id8191 . -4) (undo-tree-id8192 . -4) (undo-tree-id8193 . -4) (undo-tree-id8194 . -4) (undo-tree-id8195 . -4) (undo-tree-id8196 . -4) (undo-tree-id8197 . -4) (undo-tree-id8198 . -4)) nil (25759 43739 816063 369000) 0 nil])
([nil nil ((1 . 5802) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################

model = keras.models.Sequential(
    [
        # Flatten layer to flatten the input shape of [50, 1] to a 1D array of size 50
        keras.layers.Flatten(input_shape=[50, 1]),
        # Dense layer with 1 unit, representing a single output value
        keras.layers.Dense(1),
    ]
)

# Compile the model
model.compile(loss=\"mse\", optimizer=\"adam\")

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

# Evaluate the model on the validation set
model.evaluate(X_valid, y_valid)
###############################################################################

# Plot the learning curves
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

# Make predictions on the validation set
y_pred = model.predict(X_valid)

# Plot the series
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()


model = keras.models.Sequential([
        keras.layers.SimpleRNN(1, input_shape=[None, 1])
    ])

optimizer = keras.optimizers.Adam(learning_rate=0.005)
model.compile(loss=\"mse\", optimizer=optimizer)
history = model.fit(X_train, y_train, epochs=20,
                    validation_data=(X_valid, y_valid))
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 2654 2655 (syntax-table (15)) 2830 2831 (syntax-table (15)) 4815 4823 (fontified t) 4823 4825 (face font-lock-comment-delimiter-face fontified t) 4825 4873 (face font-lock-comment-face fontified t) 4873 4885 (fontified t face font-lock-comment-face) 4885 4911 (fontified t) 4911 4912 (fontified t face (rainbow-delimiters-depth-3-face)) 4912 4913 (fontified t) 4913 4914 (fontified t face (rainbow-delimiters-depth-3-face)) 4914 4920 (fontified t) 4920 4921 (fontified t face (rainbow-delimiters-depth-2-face)) 4921 4922 (fontified t) 4922 4923 (fontified t face (rainbow-delimiters-depth-1-face)) 4923 4925 (fontified t) 4925 4927 (fontified t face font-lock-comment-delimiter-face) 4927 4945 (fontified t face font-lock-comment-face) 4945 4951 (fontified t) 4951 4958 (fontified t face font-lock-builtin-face) 4958 4959 (fontified t face (rainbow-delimiters-depth-1-face)) 4959 4964 (fontified t) 4964 4969 (fontified t face font-lock-string-face) 4969 4981 (fontified t) 4981 4987 (fontified t face font-lock-string-face) 4987 4988 (fontified t face (rainbow-delimiters-depth-1-face)) 4988 4990 (fontified t) 4990 4992 (fontified t face font-lock-comment-delimiter-face) 4992 5008 (fontified t face font-lock-comment-face) 5008 5015 (fontified t face font-lock-variable-name-face) 5015 5027 (fontified t) 5027 5028 (fontified t face (rainbow-delimiters-depth-1-face)) 5028 5073 (fontified t) 5073 5074 (fontified t face (rainbow-delimiters-depth-2-face)) 5074 5090 (fontified t) 5090 5091 (fontified t face (rainbow-delimiters-depth-2-face)) 5091 5092 (fontified t face (rainbow-delimiters-depth-1-face)) 5092 5094 (fontified t) 5094 5096 (fontified t face font-lock-comment-delimiter-face) 5096 5137 (fontified t face font-lock-comment-face) 5137 5151 (fontified t) 5151 5152 (fontified t face (rainbow-delimiters-depth-1-face)) 5152 5168 (fontified t) 5168 5169 (fontified t face (rainbow-delimiters-depth-1-face)) 5169 5170 (fontified t) 5170 5249 (fontified t face font-lock-comment-delimiter-face) 5249 5250 (fontified t face font-lock-comment-face) 5250 5251 (fontified t) 5251 5253 (fontified t face font-lock-comment-delimiter-face) 5253 5278 (fontified t face font-lock-comment-face) 5278 5298 (fontified t) 5298 5299 (fontified t face (rainbow-delimiters-depth-1-face)) 5299 5314 (fontified t) 5314 5315 (fontified t face (rainbow-delimiters-depth-2-face)) 5315 5321 (fontified t face font-lock-string-face) 5321 5322 (fontified t face (rainbow-delimiters-depth-2-face)) 5322 5339 (fontified t) 5339 5340 (fontified t face (rainbow-delimiters-depth-2-face)) 5340 5350 (fontified t face font-lock-string-face) 5350 5351 (fontified t face (rainbow-delimiters-depth-2-face)) 5351 5352 (fontified t face (rainbow-delimiters-depth-1-face)) 5352 5361 (fontified t) 5361 5362 (fontified t face (rainbow-delimiters-depth-1-face)) 5362 5363 (fontified t face (rainbow-delimiters-depth-1-face)) 5363 5365 (fontified t) 5365 5367 (fontified t face font-lock-comment-delimiter-face) 5367 5373 (fontified t face font-lock-comment-face) 5373 5406 (face font-lock-comment-face fontified t) 5406 5412 (fontified t face font-lock-variable-name-face) 5412 5428 (fontified t) 5428 5429 (fontified t face (rainbow-delimiters-depth-1-face)) 5429 5436 (fontified t) 5436 5437 (fontified t face (rainbow-delimiters-depth-1-face)) 5437 5439 (fontified t) 5439 5441 (fontified t face font-lock-comment-delimiter-face) 5441 5457 (fontified t face font-lock-comment-face) 5457 5468 (fontified t) 5468 5469 (fontified t face (rainbow-delimiters-depth-1-face)) 5469 5476 (fontified t) 5476 5477 (fontified t face (rainbow-delimiters-depth-2-face)) 5477 5484 (fontified t) 5484 5485 (fontified t face (rainbow-delimiters-depth-2-face)) 5485 5494 (fontified t) 5494 5495 (fontified t face (rainbow-delimiters-depth-2-face)) 5495 5499 (fontified t) 5499 5500 (fontified t face (rainbow-delimiters-depth-2-face)) 5500 5508 (fontified t) 5508 5509 (fontified t face (rainbow-delimiters-depth-2-face)) 5509 5513 (fontified t) 5513 5514 (fontified t face (rainbow-delimiters-depth-2-face)) 5514 5515 (fontified t face (rainbow-delimiters-depth-1-face)) 5515 5524 (fontified t) 5524 5525 (fontified t face (rainbow-delimiters-depth-1-face)) 5525 5526 (fontified t face (rainbow-delimiters-depth-1-face)) 5526 5527 (fontified t) 5527 5528 (fontified t) 5528 5529 (fontified t) 5529 5530 (fontified t face font-lock-variable-name-face) 5530 5534 (fontified t face font-lock-variable-name-face) 5534 5560 (fontified t) 5560 5561 (fontified t face (rainbow-delimiters-depth-1-face)) 5561 5562 (fontified t face (rainbow-delimiters-depth-2-face)) 5562 5563 (fontified t) 5563 5593 (fontified t) 5593 5594 (fontified t face (rainbow-delimiters-depth-3-face)) 5594 5609 (fontified t) 5609 5610 (fontified t face (rainbow-delimiters-depth-4-face)) 5610 5614 (fontified t face font-lock-constant-face) 5614 5617 (fontified t) 5617 5618 (fontified t face (rainbow-delimiters-depth-4-face)) 5618 5619 (fontified t face (rainbow-delimiters-depth-3-face)) 5619 5624 (fontified t) 5624 5625 (fontified t face (rainbow-delimiters-depth-2-face)) 5625 5626 (fontified t face (rainbow-delimiters-depth-1-face)) 5626 5628 (fontified t) 5628 5637 (fontified t face font-lock-variable-name-face) 5637 5661 (fontified t) 5661 5662 (fontified t face (rainbow-delimiters-depth-1-face)) 5662 5681 (fontified t) 5681 5682 (fontified t face (rainbow-delimiters-depth-1-face)) 5682 5689 (fontified t) 5689 5696 (fontified t face font-lock-builtin-face) 5696 5697 (fontified t face (rainbow-delimiters-depth-1-face)) 5697 5702 (fontified t) 5702 5707 (fontified t face font-lock-string-face) 5707 5728 (fontified t) 5728 5729 (fontified t face (rainbow-delimiters-depth-1-face)) 5729 5730 (fontified t) 5730 5737 (fontified t face font-lock-variable-name-face) 5737 5749 (fontified t) 5749 5750 (fontified t face (rainbow-delimiters-depth-1-face)) 5750 5779 (fontified t) 5779 5815 (fontified nil) 5815 5816 (fontified nil face (rainbow-delimiters-depth-2-face)) 5816 5832 (fontified nil) 5832 5833 (fontified nil face (rainbow-delimiters-depth-2-face)) 5833 5834 (rear-nonsticky t fontified nil face (rainbow-delimiters-depth-1-face)) 5834 5835 (fontified nil)) . 1) (undo-tree-id7855 . 305) (undo-tree-id7856 . -5529) (undo-tree-id7857 . -5529) (undo-tree-id7858 . -5777) (undo-tree-id7859 . -5527) (undo-tree-id7860 . -4815) (undo-tree-id7861 . -4873) (undo-tree-id7862 . -189) (undo-tree-id7863 . -189) (undo-tree-id7864 . -218) (undo-tree-id7865 . -218) (undo-tree-id7866 . -248) (undo-tree-id7867 . -248) (undo-tree-id7868 . -5527) (undo-tree-id7869 . -5527) (undo-tree-id7870 . -5527) (undo-tree-id7871 . -5527) (undo-tree-id7872 . -5527) (undo-tree-id7873 . -5527) (undo-tree-id7874 . -5527) (undo-tree-id7875 . -5527) (undo-tree-id7876 . -5527) (undo-tree-id7877 . -5527) (undo-tree-id7878 . -5527) (undo-tree-id7879 . -5527) (undo-tree-id7880 . -5527) (undo-tree-id7881 . -5527) (undo-tree-id7882 . -5527) (undo-tree-id7883 . -5527) (undo-tree-id7884 . -4945) (undo-tree-id7885 . -4945) (undo-tree-id7886 . -4945) (undo-tree-id7887 . -4945) (undo-tree-id7888 . -5278) (undo-tree-id7889 . -5278) (undo-tree-id7890 . -5278) (undo-tree-id7891 . -5278) (undo-tree-id7892 . -4815) (undo-tree-id7893 . -4873) (undo-tree-id7894 . -5527) (undo-tree-id7895 . -5527) (undo-tree-id7896 . -5527) (undo-tree-id7897 . -5527) (undo-tree-id7898 . -5527) (undo-tree-id7899 . -5527) (undo-tree-id7900 . -5527) (undo-tree-id7901 . -5527) (undo-tree-id7902 . -5527) (undo-tree-id7903 . -5527) (undo-tree-id7904 . -5527) (undo-tree-id7905 . -5527) (undo-tree-id7906 . -5527) (undo-tree-id7907 . -5527) (undo-tree-id7908 . -5527) (undo-tree-id7909 . -5527) (undo-tree-id7910 . -5527) (undo-tree-id7911 . -5527) (undo-tree-id7912 . -5527) (undo-tree-id7913 . -5527) (undo-tree-id7914 . -5527) (undo-tree-id7915 . -5527) (undo-tree-id7916 . -5527) (undo-tree-id7917 . -5527) (undo-tree-id7918 . -5527) (undo-tree-id7919 . -5527) (undo-tree-id7920 . -5527) (undo-tree-id7921 . -5527) (undo-tree-id7922 . -5527) (undo-tree-id7923 . -5527) (undo-tree-id7924 . -5527) (undo-tree-id7925 . -5527) (undo-tree-id7926 . -5527) (undo-tree-id7927 . -5527) (undo-tree-id7928 . -5527) (undo-tree-id7929 . -5527) (undo-tree-id7930 . -5527) (undo-tree-id7931 . -5527) (undo-tree-id7932 . -5527) (undo-tree-id7933 . -5527) (undo-tree-id7934 . -5527) (undo-tree-id7935 . -5527) (undo-tree-id7936 . -5527) (undo-tree-id7937 . -5527) (undo-tree-id7938 . -5527) (undo-tree-id7939 . -5527) (undo-tree-id7940 . -5527) (undo-tree-id7941 . -5527) (undo-tree-id7942 . -5527) (undo-tree-id7943 . -5527) (undo-tree-id7944 . -5527) (undo-tree-id7945 . -5527) (undo-tree-id7946 . -5527) (undo-tree-id7947 . -5527) (undo-tree-id7948 . -5527) (undo-tree-id7949 . -5527) (undo-tree-id7950 . -5527) (undo-tree-id7951 . -5527) (undo-tree-id7952 . -5527) (undo-tree-id7953 . -5527) (undo-tree-id7954 . -5527) (undo-tree-id7955 . 308) (undo-tree-id7956 . -5528) (undo-tree-id7957 . -5516) (undo-tree-id7958 . -5516) (undo-tree-id7959 . -5528) (undo-tree-id7960 . -5528) (undo-tree-id7961 . -5528) (undo-tree-id7962 . -5528) (undo-tree-id7963 . -5528) (undo-tree-id7964 . -5528) (undo-tree-id7965 . -5528) (undo-tree-id7966 . -5528) (undo-tree-id7967 . -5528) (undo-tree-id7968 . -5528) (undo-tree-id7969 . -5528) (undo-tree-id7970 . -5527) (undo-tree-id7971 . -5683) (undo-tree-id7972 . -5683) (undo-tree-id7973 . -5833) (undo-tree-id7974 . -5833) (undo-tree-id7975 . -5833) (undo-tree-id7976 . -5833) (undo-tree-id7977 . -5833) (undo-tree-id7978 . -5833) (undo-tree-id7979 . -5833) (undo-tree-id7980 . -5833) (undo-tree-id7981 . -5528) (undo-tree-id7982 . -5777) (undo-tree-id7983 . -5777) (undo-tree-id7984 . -5777) (undo-tree-id7985 . -5777) (undo-tree-id7986 . -5777) (undo-tree-id7987 . -5777) (undo-tree-id7988 . -5728) (undo-tree-id7989 . -5681) (undo-tree-id7990 . -5627) (undo-tree-id7991 . -5627) (undo-tree-id7992 . -5627) (undo-tree-id7993 . -5627) (undo-tree-id7994 . -5627) (undo-tree-id7995 . -5625) (undo-tree-id7996 . -5617) (undo-tree-id7997 . -5561) (undo-tree-id7998 . -5528) (undo-tree-id7999 . -5528) (undo-tree-id8000 . -5528) (undo-tree-id8001 . -5527) (undo-tree-id8002 . -5525) (undo-tree-id8003 . -5511) (undo-tree-id8004 . -5455) (undo-tree-id8005 . -5438) (undo-tree-id8006 . -5436) (undo-tree-id8007 . -5404) (undo-tree-id8008 . -5404) (undo-tree-id8009 . -5404) (undo-tree-id8010 . -5404) (undo-tree-id8011 . -5404) (undo-tree-id8012 . -5404) (undo-tree-id8013 . -5404) (undo-tree-id8014 . -5404) (undo-tree-id8015 . -5436) (undo-tree-id8016 . -5436) (undo-tree-id8017 . -5436) (undo-tree-id8018 . -5436) (undo-tree-id8019 . -5436) (undo-tree-id8020 . -5436) (undo-tree-id8021 . -5438) (undo-tree-id8022 . -5438) (undo-tree-id8023 . -5438) (undo-tree-id8024 . -5455) (undo-tree-id8025 . -5511) (undo-tree-id8026 . -5525) (undo-tree-id8027 . -5527) (undo-tree-id8028 . -5528) (undo-tree-id8029 . -5528) (undo-tree-id8030 . -5528) (undo-tree-id8031 . -5561) (undo-tree-id8032 . -5617) (undo-tree-id8033 . -5625) (undo-tree-id8034 . -5627) (undo-tree-id8035 . -5681) (undo-tree-id8036 . -5728) (undo-tree-id8037 . -5728) (undo-tree-id8038 . -5728) (undo-tree-id8039 . -5777) (undo-tree-id8040 . -5833) (undo-tree-id8041 . -5833) (undo-tree-id8042 . -5833) (undo-tree-id8043 . -5833) (undo-tree-id8044 . -5833) (undo-tree-id8045 . -5833) (undo-tree-id8046 . -5833) (undo-tree-id8047 . -5833) (undo-tree-id8048 . -5833) (undo-tree-id8049 . -5833) (undo-tree-id8050 . -5833) (undo-tree-id8051 . -5777) (undo-tree-id8052 . -5728) (undo-tree-id8053 . -5681) (undo-tree-id8054 . -5627) (undo-tree-id8055 . -5625) (undo-tree-id8056 . -5617) (undo-tree-id8057 . -5561) (undo-tree-id8058 . -5528) (undo-tree-id8059 . -5529) (undo-tree-id8060 . -5529) (undo-tree-id8061 . -5529) (undo-tree-id8062 . -5529) (undo-tree-id8063 . -5529) (undo-tree-id8064 . -5529) (undo-tree-id8065 . -5529) (undo-tree-id8066 . -5529) (undo-tree-id8067 . -5529) (undo-tree-id8068 . -5529) (undo-tree-id8069 . -5529) (undo-tree-id8070 . -5530) (undo-tree-id8071 . -5530) (undo-tree-id8072 . -5683) (undo-tree-id8073 . -5683) (undo-tree-id8074 . -5530) (undo-tree-id8075 . -5530) (undo-tree-id8076 . -5529) (undo-tree-id8077 . -5529) (undo-tree-id8078 . -5529) (undo-tree-id8079 . -5529) (undo-tree-id8080 . -5529) (undo-tree-id8081 . -5529) (undo-tree-id8082 . -5529) (undo-tree-id8083 . -5529) (undo-tree-id8084 . -5529) (undo-tree-id8085 . -5529) (undo-tree-id8086 . -5529) (undo-tree-id8087 . -5529) (undo-tree-id8088 . -5529) (undo-tree-id8089 . -5529) (undo-tree-id8090 . -5529) (undo-tree-id8091 . -5529) (undo-tree-id8092 . -5529) (undo-tree-id8093 . -5529) (undo-tree-id8094 . -5528) (undo-tree-id8095 . -5528) (undo-tree-id8096 . -5528) (undo-tree-id8097 . -5528) (undo-tree-id8098 . -5528) (undo-tree-id8099 . -5528) (undo-tree-id8100 . -5528) (undo-tree-id8101 . -5528) (undo-tree-id8102 . -5528) (undo-tree-id8103 . -5528) (undo-tree-id8104 . -5528) (undo-tree-id8105 . -5528) (undo-tree-id8106 . -5528) (undo-tree-id8107 . -5528) (undo-tree-id8108 . -5528) (undo-tree-id8109 . -5528) (undo-tree-id8110 . -5528) (undo-tree-id8111 . -5528) (undo-tree-id8112 . -5528) (undo-tree-id8113 . -5528) (undo-tree-id8114 . -5528) (undo-tree-id8115 . -5528) (undo-tree-id8116 . -5528) (undo-tree-id8117 . -5528) (undo-tree-id8118 . -5528) (undo-tree-id8119 . -5528) (undo-tree-id8120 . -5528) (undo-tree-id8121 . -5528) (undo-tree-id8122 . -5528) (undo-tree-id8123 . -5683) (undo-tree-id8124 . -5683) (undo-tree-id8125 . -5528) (undo-tree-id8126 . -5528) (undo-tree-id8127 . -5528) (undo-tree-id8128 . -5528) (undo-tree-id8129 . -5529) (undo-tree-id8130 . -5529) (undo-tree-id8131 . -5567) (undo-tree-id8132 . -5568) (undo-tree-id8133 . -5529) (undo-tree-id8134 . -5529) (undo-tree-id8135 . -5529) (undo-tree-id8136 . -5529) (undo-tree-id8137 . -5529) (undo-tree-id8138 . -5529) (undo-tree-id8139 . -5529) (undo-tree-id8140 . -5529) (undo-tree-id8141 . -5529) (undo-tree-id8142 . -5529) (undo-tree-id8143 . -5529) (undo-tree-id8144 . -5529) (undo-tree-id8145 . -5529) (undo-tree-id8146 . -5683) (undo-tree-id8147 . -5683) (undo-tree-id8148 . -5529) (undo-tree-id8149 . -5529) (undo-tree-id8150 . -5529) (undo-tree-id8151 . -5529) (undo-tree-id8152 . -5529) (undo-tree-id8153 . -5529) (undo-tree-id8154 . -5529) (undo-tree-id8155 . -5529) (undo-tree-id8156 . -5529) (undo-tree-id8157 . -5529) (undo-tree-id8158 . -5364) (undo-tree-id8159 . -5529) (undo-tree-id8160 . -5529) (undo-tree-id8161 . -5364) (undo-tree-id8162 . -5529) (undo-tree-id8163 . -5529) (undo-tree-id8164 . -5529) (undo-tree-id8165 . -5529) (undo-tree-id8166 . -5529) (undo-tree-id8167 . -5529) (5835 . 5836)) nil (25759 43739 815946 200000) 0 nil])
([nil nil ((5530 . 5549) (5528 . 5530) (t 25759 43739 836485 128000)) nil (25759 43757 26030 63000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6006 . 6007) (nil fontified nil 5551 . 6007) (5551 . 6007) (#("model = keras.models.Sequential([keras.layers.SimpleRNN(1, input_shape=[None, 1])])

optimizer = keras.optimizers.Adam(learning_rate=0.005)
model.compile(loss=\"mse\", optimizer=optimizer)
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))
" 0 5 (fontified t face font-lock-variable-name-face) 5 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-1-face)) 32 33 (fontified t face (rainbow-delimiters-depth-2-face)) 33 55 (fontified t) 55 56 (fontified t face (rainbow-delimiters-depth-3-face)) 56 71 (fontified t) 71 72 (fontified t face (rainbow-delimiters-depth-4-face)) 72 76 (fontified t face font-lock-constant-face) 76 79 (fontified t) 79 80 (fontified t face (rainbow-delimiters-depth-4-face)) 80 81 (fontified t face (rainbow-delimiters-depth-3-face)) 81 82 (fontified t face (rainbow-delimiters-depth-2-face)) 82 83 (fontified t face (rainbow-delimiters-depth-1-face)) 83 85 (fontified t) 85 94 (fontified t face font-lock-variable-name-face) 94 118 (fontified t) 118 119 (fontified t face (rainbow-delimiters-depth-1-face)) 119 138 (fontified t) 138 139 (fontified t face (rainbow-delimiters-depth-1-face)) 139 146 (fontified t) 146 153 (fontified t face font-lock-builtin-face) 153 154 (fontified t face (rainbow-delimiters-depth-1-face)) 154 159 (fontified t) 159 164 (fontified t face font-lock-string-face) 164 185 (fontified t) 185 186 (fontified t face (rainbow-delimiters-depth-1-face)) 186 187 (fontified t) 187 194 (fontified t face font-lock-variable-name-face) 194 206 (fontified t) 206 207 (fontified t face (rainbow-delimiters-depth-1-face)) 207 252 (fontified t) 252 253 (fontified t face (rainbow-delimiters-depth-2-face)) 253 269 (fontified t) 269 270 (fontified t face (rainbow-delimiters-depth-2-face)) 270 271 (fontified t face (rainbow-delimiters-depth-1-face)) 271 272 (fontified t)) . 5551) (undo-tree-id8610 . -271) (undo-tree-id8611 . -272) (undo-tree-id8612 . -58) (undo-tree-id8613 . -84) (undo-tree-id8614 . -85) (undo-tree-id8615 . -85) (undo-tree-id8616 . -85) (undo-tree-id8617 . -85) (undo-tree-id8618 . -85) (undo-tree-id8619 . -140) (undo-tree-id8620 . -187) (undo-tree-id8621 . -187) (undo-tree-id8622 . -187) (undo-tree-id8623 . -187) (undo-tree-id8624 . -245) (undo-tree-id8625 . -272) (undo-tree-id8626 . -245) (undo-tree-id8627 . -79) (undo-tree-id8628 . -80) (undo-tree-id8629 . -262) (undo-tree-id8630 . -269) (undo-tree-id8631 . -187) (undo-tree-id8632 . -194) (undo-tree-id8633 . -272) (undo-tree-id8634 . -272) (undo-tree-id8635 . -272) (undo-tree-id8636 . -272) (undo-tree-id8637 . -272) (undo-tree-id8638 . -272) (undo-tree-id8639 . -272) (undo-tree-id8640 . -272) (undo-tree-id8641 . -272) (undo-tree-id8642 . -272) (undo-tree-id8643 . -272) (undo-tree-id8644 . -272) (undo-tree-id8645 . -272) (undo-tree-id8646 . -272) (undo-tree-id8647 . -245) (undo-tree-id8648 . -187) (undo-tree-id8649 . -140) (undo-tree-id8650 . -85) (undo-tree-id8651 . -85) (undo-tree-id8652 . -85) (undo-tree-id8653 . -85) (undo-tree-id8654 . -85) (undo-tree-id8655 . -85) (undo-tree-id8656 . -85) (undo-tree-id8657 . -85) (undo-tree-id8658 . -85) (undo-tree-id8659 . -85) (undo-tree-id8660 . -85) (undo-tree-id8661 . -84) (undo-tree-id8662 . -58) (undo-tree-id8663 . -58) (undo-tree-id8664 . -58) (undo-tree-id8665 . -58) (undo-tree-id8666 . -58) (undo-tree-id8667 . -272) (undo-tree-id8668 . -245) (undo-tree-id8669 . -58) (undo-tree-id8670 . -84) (undo-tree-id8671 . -85) (undo-tree-id8672 . -140) (undo-tree-id8673 . -187) (undo-tree-id8674 . -187) (undo-tree-id8675 . -245) (undo-tree-id8676 . -245) (undo-tree-id8677 . -245) (undo-tree-id8678 . -245) (undo-tree-id8679 . -236) (undo-tree-id8680 . -251) (undo-tree-id8681 . -245) (undo-tree-id8682 . -245) (undo-tree-id8683 . -245) (undo-tree-id8684 . -272) (undo-tree-id8685 . -272) (undo-tree-id8686 . -272) 5823 (t 25759 43757 51661 325000)) nil (25759 43801 323651 635000) 0 nil])
([nil nil ((#("import tensorflow as tf
" 0 6 (fontified t face font-lock-keyword-face) 6 18 (fontified t) 18 20 (fontified t face font-lock-keyword-face) 20 24 (fontified t)) . 5551) (undo-tree-id8601 . -23) (undo-tree-id8602 . -22) (undo-tree-id8603 . -6) (undo-tree-id8604 . -24) (undo-tree-id8605 . -22) (undo-tree-id8606 . -22) (undo-tree-id8607 . -22) (undo-tree-id8608 . -22) (undo-tree-id8609 . -24) 5573) nil (25759 43801 323599 542000) 0 nil])
([nil nil ((#("from tensorflow import keras
" 0 4 (fontified t face font-lock-keyword-face) 4 16 (fontified t) 16 22 (fontified t face font-lock-keyword-face) 22 28 (fontified t) 28 29 (fontified t)) . 5551) (undo-tree-id8588 . -28) (undo-tree-id8589 . -22) (undo-tree-id8590 . -4) (undo-tree-id8591 . -29) (undo-tree-id8592 . -25) (undo-tree-id8593 . -28) (undo-tree-id8594 . -22) (undo-tree-id8595 . -22) (undo-tree-id8596 . -22) (undo-tree-id8597 . -22) (undo-tree-id8598 . -22) (undo-tree-id8599 . -22) (undo-tree-id8600 . -29) 5573) nil (25759 43801 323592 11000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5551) (undo-tree-id8587 . -1)) nil (25759 43801 323580 461000) 0 nil])
([nil nil ((1 . 5948) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################

model = keras.models.Sequential(
    [
        # Flatten layer to flatten the input shape of [50, 1] to a 1D array of size 50
        keras.layers.Flatten(input_shape=[50, 1]),
        # Dense layer with 1 unit, representing a single output value
        keras.layers.Dense(1),
    ]
)

# Compile the model
model.compile(loss=\"mse\", optimizer=\"adam\")

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

# Evaluate the model on the validation set
model.evaluate(X_valid, y_valid)
###############################################################################

# Plot the learning curves
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

# Make predictions on the validation set
y_pred = model.predict(X_valid)

# Plot the series
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()


# Using a Simpl RNN

# Define the model architecture
model = keras.models.Sequential([
    keras.layers.SimpleRNN(1, input_shape=[None, 1])
])

# Define the optimizer with a specific learning rate
optimizer = keras.optimizers.Adam(learning_rate=0.005)

# Compile the model
model.compile(loss=\"mse\", optimizer=optimizer)

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 2654 2655 (syntax-table (15)) 2830 2831 (syntax-table (15)) 5364 5365 (fontified t) 5365 5367 (fontified t face font-lock-comment-delimiter-face) 5367 5406 (fontified t face font-lock-comment-face) 5406 5412 (fontified t face font-lock-variable-name-face) 5412 5428 (fontified t) 5428 5429 (fontified t face (rainbow-delimiters-depth-1-face)) 5429 5436 (fontified t) 5436 5437 (fontified t face (rainbow-delimiters-depth-1-face)) 5437 5439 (fontified t) 5439 5441 (fontified t face font-lock-comment-delimiter-face) 5441 5457 (fontified t face font-lock-comment-face) 5457 5468 (fontified t) 5468 5469 (fontified t face (rainbow-delimiters-depth-1-face)) 5469 5476 (fontified t) 5476 5477 (fontified t face (rainbow-delimiters-depth-2-face)) 5477 5484 (fontified t) 5484 5485 (fontified t face (rainbow-delimiters-depth-2-face)) 5485 5494 (fontified t) 5494 5495 (fontified t face (rainbow-delimiters-depth-2-face)) 5495 5499 (fontified t) 5499 5500 (fontified t face (rainbow-delimiters-depth-2-face)) 5500 5508 (fontified t) 5508 5509 (fontified t face (rainbow-delimiters-depth-2-face)) 5509 5513 (fontified t) 5513 5514 (fontified t face (rainbow-delimiters-depth-2-face)) 5514 5515 (fontified t face (rainbow-delimiters-depth-1-face)) 5515 5524 (fontified t) 5524 5525 (fontified t face (rainbow-delimiters-depth-1-face)) 5525 5526 (fontified t face (rainbow-delimiters-depth-1-face)) 5526 5527 (fontified t) 5527 5528 (fontified t) 5528 5529 (fontified t) 5529 5531 (fontified t face font-lock-comment-delimiter-face) 5531 5548 (fontified t face font-lock-comment-face) 5548 5549 (fontified t face font-lock-comment-face) 5549 5550 (fontified t) 5550 5552 (fontified t face font-lock-comment-delimiter-face) 5552 5581 (fontified t face font-lock-comment-face) 5581 5582 (fontified t face font-lock-comment-face) 5582 5587 (fontified t face font-lock-variable-name-face) 5587 5613 (fontified t) 5613 5614 (fontified t face (rainbow-delimiters-depth-1-face)) 5614 5615 (fontified t face (rainbow-delimiters-depth-2-face)) 5615 5642 (fontified t) 5642 5643 (fontified t face (rainbow-delimiters-depth-3-face)) 5643 5658 (fontified t) 5658 5659 (fontified t face (rainbow-delimiters-depth-4-face)) 5659 5663 (fontified t face font-lock-constant-face) 5663 5666 (fontified t) 5666 5667 (fontified t face (rainbow-delimiters-depth-4-face)) 5667 5668 (fontified t face (rainbow-delimiters-depth-3-face)) 5668 5669 (fontified t) 5669 5670 (fontified t face (rainbow-delimiters-depth-2-face)) 5670 5671 (fontified t face (rainbow-delimiters-depth-1-face)) 5671 5673 (fontified t) 5673 5675 (fontified t face font-lock-comment-delimiter-face) 5675 5726 (fontified t face font-lock-comment-face) 5726 5735 (fontified t face font-lock-variable-name-face) 5735 5759 (fontified t) 5759 5760 (fontified t face (rainbow-delimiters-depth-1-face)) 5760 5779 (fontified t) 5779 5780 (fontified t face (rainbow-delimiters-depth-1-face)) 5780 5782 (fontified t) 5782 5784 (fontified t face font-lock-comment-delimiter-face) 5784 5802 (fontified t face font-lock-comment-face) 5802 5808 (fontified t) 5808 5815 (fontified t face font-lock-builtin-face) 5815 5816 (fontified t face (rainbow-delimiters-depth-1-face)) 5816 5821 (fontified t) 5821 5826 (fontified t face font-lock-string-face) 5826 5847 (fontified t) 5847 5848 (fontified t face (rainbow-delimiters-depth-1-face)) 5848 5850 (fontified t) 5850 5852 (fontified t face font-lock-comment-delimiter-face) 5852 5868 (fontified t face font-lock-comment-face) 5868 5875 (fontified nil face font-lock-variable-name-face) 5875 5887 (fontified nil) 5887 5888 (fontified nil face (rainbow-delimiters-depth-1-face)) 5888 5933 (fontified nil) 5933 5934 (fontified nil face (rainbow-delimiters-depth-2-face)) 5934 5950 (fontified nil) 5950 5951 (fontified nil face (rainbow-delimiters-depth-2-face)) 5951 5952 (rear-nonsticky t fontified nil face (rainbow-delimiters-depth-1-face)) 5952 5953 (fontified nil)) . 1) (undo-tree-id8239 . 405) (undo-tree-id8240 . -5550) (undo-tree-id8241 . -5550) (undo-tree-id8242 . -5364) (undo-tree-id8243 . -5547) (undo-tree-id8244 . -5951) (undo-tree-id8245 . -5550) (undo-tree-id8246 . -5547) (undo-tree-id8247 . -5547) (undo-tree-id8248 . -5547) (undo-tree-id8249 . -5547) (undo-tree-id8250 . -5549) (undo-tree-id8251 . -5550) (undo-tree-id8252 . -5550) (undo-tree-id8253 . -5550) (undo-tree-id8254 . -5550) (undo-tree-id8255 . -5550) (undo-tree-id8256 . -5550) (undo-tree-id8257 . -5550) (undo-tree-id8258 . -5550) (undo-tree-id8259 . -5550) (undo-tree-id8260 . -5550) (undo-tree-id8261 . -5550) (undo-tree-id8262 . -5550) (undo-tree-id8263 . -5550) (undo-tree-id8264 . -5550) (undo-tree-id8265 . -5550) (undo-tree-id8266 . -5550) (undo-tree-id8267 . -5550) (undo-tree-id8268 . -5550) (undo-tree-id8269 . -5550) (undo-tree-id8270 . -5550) (undo-tree-id8271 . -5550) (undo-tree-id8272 . -5550) (undo-tree-id8273 . -5550) (undo-tree-id8274 . -5550) (undo-tree-id8275 . -5550) (undo-tree-id8276 . -5550) (undo-tree-id8277 . -5550) (undo-tree-id8278 . -5550) (undo-tree-id8279 . -5550) (undo-tree-id8280 . -5550) (undo-tree-id8281 . -5550) (undo-tree-id8282 . -5550) (undo-tree-id8283 . -5550) (undo-tree-id8284 . -5550) (undo-tree-id8285 . -5550) (undo-tree-id8286 . -5550) (undo-tree-id8287 . -5550) (undo-tree-id8288 . -5550) (undo-tree-id8289 . -5364) (undo-tree-id8290 . -5550) (undo-tree-id8291 . -5550) (undo-tree-id8292 . -5550) (undo-tree-id8293 . -5550) (undo-tree-id8294 . -5550) (undo-tree-id8295 . -5550) (undo-tree-id8296 . -5550) (undo-tree-id8297 . -5550) (undo-tree-id8298 . -5550) (undo-tree-id8299 . -5550) (undo-tree-id8300 . -5550) (undo-tree-id8301 . -5550) (undo-tree-id8302 . -5550) (undo-tree-id8303 . -5550) (undo-tree-id8304 . -5550) (undo-tree-id8305 . -5550) (undo-tree-id8306 . -5550) (undo-tree-id8307 . -5550) (undo-tree-id8308 . -5550) (undo-tree-id8309 . -5550) (undo-tree-id8310 . -5550) (undo-tree-id8311 . -5550) (undo-tree-id8312 . -5550) (undo-tree-id8313 . -38) (undo-tree-id8314 . -44) (undo-tree-id8315 . -106) (undo-tree-id8316 . -110) (undo-tree-id8317 . -871) (undo-tree-id8318 . -876) (undo-tree-id8319 . -1097) (undo-tree-id8320 . -1101) (undo-tree-id8321 . -1187) (undo-tree-id8322 . -1188) (undo-tree-id8323 . -1355) (undo-tree-id8324 . -1356) (undo-tree-id8325 . -3060) (undo-tree-id8326 . -3064) (undo-tree-id8327 . -4756) (undo-tree-id8328 . -4760) (undo-tree-id8329 . -5083) (undo-tree-id8330 . -5090) (undo-tree-id8331 . -5550) (undo-tree-id8332 . -5550) (undo-tree-id8333 . -5550) (undo-tree-id8334 . -5550) (undo-tree-id8335 . -5550) (undo-tree-id8336 . -5550) (undo-tree-id8337 . -1) (undo-tree-id8338 . -38) (undo-tree-id8339 . -44) (undo-tree-id8340 . -106) (undo-tree-id8341 . -110) (undo-tree-id8342 . -106) (undo-tree-id8343 . -110) (undo-tree-id8344 . -563) (undo-tree-id8345 . -570) (undo-tree-id8346 . -526) (undo-tree-id8347 . -529) (undo-tree-id8348 . -947) (undo-tree-id8349 . -953) (undo-tree-id8350 . -1626) (undo-tree-id8351 . -1629) (undo-tree-id8352 . -1626) (undo-tree-id8353 . -1629) (undo-tree-id8354 . -1647) (undo-tree-id8355 . -1653) (undo-tree-id8356 . -1663) (undo-tree-id8357 . -1669) (undo-tree-id8358 . -1655) (undo-tree-id8359 . -1656) (undo-tree-id8360 . -3563) (undo-tree-id8361 . -3570) (undo-tree-id8362 . -5008) (undo-tree-id8363 . -5015) (undo-tree-id8364 . -5550) (undo-tree-id8365 . -5550) (undo-tree-id8366 . -5550) (undo-tree-id8367 . -5550) (undo-tree-id8368 . -5550) (undo-tree-id8369 . -5550) (undo-tree-id8370 . -5550) (undo-tree-id8371 . -5550) (undo-tree-id8372 . -5550) (undo-tree-id8373 . -5550) (undo-tree-id8374 . -5550) (undo-tree-id8375 . -5550) (undo-tree-id8376 . -5550) (undo-tree-id8377 . -5550) (undo-tree-id8378 . -5550) (undo-tree-id8379 . -5550) (undo-tree-id8380 . -5550) (undo-tree-id8381 . -5550) (undo-tree-id8382 . -5550) (undo-tree-id8383 . -5550) (undo-tree-id8384 . -5550) (undo-tree-id8385 . -5550) (undo-tree-id8386 . -5550) (undo-tree-id8387 . -5550) (undo-tree-id8388 . -5550) (undo-tree-id8389 . -5550) (undo-tree-id8390 . -5550) (undo-tree-id8391 . -5550) (undo-tree-id8392 . -5550) (undo-tree-id8393 . -5550) (undo-tree-id8394 . -5550) (undo-tree-id8395 . -5550) (undo-tree-id8396 . -5550) (undo-tree-id8397 . -5550) (undo-tree-id8398 . -5550) (undo-tree-id8399 . -5550) (undo-tree-id8400 . -5550) (undo-tree-id8401 . -5550) (undo-tree-id8402 . -5550) (undo-tree-id8403 . -5550) (undo-tree-id8404 . -5550) (undo-tree-id8405 . -5550) (undo-tree-id8406 . -5550) (undo-tree-id8407 . -5550) (undo-tree-id8408 . -5550) (undo-tree-id8409 . -5550) (undo-tree-id8410 . -5550) (undo-tree-id8411 . -5550) (undo-tree-id8412 . -5550) (undo-tree-id8413 . -5550) (undo-tree-id8414 . -5550) (undo-tree-id8415 . -5550) (undo-tree-id8416 . -5550) (undo-tree-id8417 . -5550) (undo-tree-id8418 . -5550) (undo-tree-id8419 . -5550) (undo-tree-id8420 . -5550) (undo-tree-id8421 . -5550) (undo-tree-id8422 . -5550) (undo-tree-id8423 . -5550) (undo-tree-id8424 . -5550) (undo-tree-id8425 . -5550) (undo-tree-id8426 . -5550) (undo-tree-id8427 . -5550) (undo-tree-id8428 . -5550) (undo-tree-id8429 . -5550) (undo-tree-id8430 . -5550) (undo-tree-id8431 . -5550) (undo-tree-id8432 . -5550) (undo-tree-id8433 . -5550) (undo-tree-id8434 . -5550) (undo-tree-id8435 . -5550) (undo-tree-id8436 . -5550) (undo-tree-id8437 . -5550) (undo-tree-id8438 . -5550) (undo-tree-id8439 . -5550) (undo-tree-id8440 . -5550) (undo-tree-id8441 . -5550) (undo-tree-id8442 . -5550) (undo-tree-id8443 . -5550) (undo-tree-id8444 . -5550) (undo-tree-id8445 . -5550) (undo-tree-id8446 . -5550) (undo-tree-id8447 . -5550) (undo-tree-id8448 . -5550) (undo-tree-id8449 . -5550) (undo-tree-id8450 . -5550) (undo-tree-id8451 . -5550) (undo-tree-id8452 . -5550) (undo-tree-id8453 . -5550) (undo-tree-id8454 . -5550) (undo-tree-id8455 . -5550) (undo-tree-id8456 . -5550) (undo-tree-id8457 . -5550) (undo-tree-id8458 . -5550) (undo-tree-id8459 . -5550) (undo-tree-id8460 . -5550) (undo-tree-id8461 . -5550) (undo-tree-id8462 . -5550) (undo-tree-id8463 . -5550) (undo-tree-id8464 . -5550) (undo-tree-id8465 . -5550) (undo-tree-id8466 . -5550) (undo-tree-id8467 . -5802) (undo-tree-id8468 . -5802) (undo-tree-id8469 . -5951) (undo-tree-id8470 . -5951) (undo-tree-id8471 . -38) (undo-tree-id8472 . -44) (undo-tree-id8473 . -106) (undo-tree-id8474 . -110) (undo-tree-id8475 . -871) (undo-tree-id8476 . -876) (undo-tree-id8477 . -1097) (undo-tree-id8478 . -1101) (undo-tree-id8479 . -1187) (undo-tree-id8480 . -1188) (undo-tree-id8481 . -1355) (undo-tree-id8482 . -1356) (undo-tree-id8483 . -3060) (undo-tree-id8484 . -3064) (undo-tree-id8485 . -4756) (undo-tree-id8486 . -4760) (undo-tree-id8487 . -5083) (undo-tree-id8488 . -5090) (undo-tree-id8489 . -5550) (undo-tree-id8490 . -5550) (undo-tree-id8491 . -5550) (undo-tree-id8492 . -5550) (undo-tree-id8493 . -5943) (undo-tree-id8494 . -5950) (undo-tree-id8495 . -5951) (undo-tree-id8496 . -5952) (undo-tree-id8497 . -5951) (undo-tree-id8498 . -5951) (undo-tree-id8499 . -5951) (undo-tree-id8500 . -5951) (undo-tree-id8501 . -5951) (undo-tree-id8502 . -5550) (undo-tree-id8503 . -5893) (undo-tree-id8504 . -5893) (undo-tree-id8505 . -5893) (undo-tree-id8506 . -5893) (undo-tree-id8507 . -5893) (undo-tree-id8508 . -5893) (undo-tree-id8509 . -5893) (undo-tree-id8510 . -5893) (undo-tree-id8511 . -5866) (undo-tree-id8512 . -5866) (undo-tree-id8513 . -5866) (undo-tree-id8514 . -5866) (undo-tree-id8515 . -5866) (undo-tree-id8516 . -5866) (undo-tree-id8517 . -5866) (undo-tree-id8518 . -5866) (undo-tree-id8519 . -5866) (undo-tree-id8520 . -5849) (undo-tree-id8521 . -5827) (undo-tree-id8522 . -5800) (undo-tree-id8523 . -5781) (undo-tree-id8524 . -5751) (undo-tree-id8525 . -5698) (undo-tree-id8526 . -5672) (undo-tree-id8527 . -5670) (undo-tree-id8528 . -5641) (undo-tree-id8529 . -5607) (undo-tree-id8530 . -5575) (undo-tree-id8531 . -5550) (undo-tree-id8532 . -5550) (undo-tree-id8533 . -5549) (undo-tree-id8534 . -5549) (undo-tree-id8535 . -5528) (undo-tree-id8536 . -5528) (undo-tree-id8537 . -5527) (undo-tree-id8538 . -5527) (undo-tree-id8539 . -5550) (undo-tree-id8540 . -5550) (undo-tree-id8541 . -5550) (undo-tree-id8542 . -5550) (undo-tree-id8543 . -5550) (undo-tree-id8544 . -5550) (undo-tree-id8545 . -5550) (undo-tree-id8546 . -5550) (undo-tree-id8547 . -5550) (undo-tree-id8548 . -5550) (undo-tree-id8549 . -5550) (undo-tree-id8550 . -5550) (undo-tree-id8551 . -5550) (undo-tree-id8552 . -5550) (undo-tree-id8553 . -5550) (undo-tree-id8554 . -5550) (undo-tree-id8555 . -5550) (undo-tree-id8556 . -5550) (undo-tree-id8557 . -5550) (undo-tree-id8558 . -5550) (undo-tree-id8559 . -5802) (undo-tree-id8560 . -5802) (undo-tree-id8561 . -5550) (undo-tree-id8562 . -5550) (undo-tree-id8563 . -5581) (undo-tree-id8564 . -5550) (undo-tree-id8565 . -5550) (undo-tree-id8566 . -5550) (undo-tree-id8567 . -5550) (undo-tree-id8568 . -5550) (undo-tree-id8569 . -5550) (undo-tree-id8570 . -5802) (undo-tree-id8571 . -5802) (undo-tree-id8572 . -5550) (undo-tree-id8573 . -5550) (undo-tree-id8574 . -5550) (undo-tree-id8575 . -5550) (undo-tree-id8576 . -5550) (undo-tree-id8577 . -5364) (undo-tree-id8578 . -5550) (undo-tree-id8579 . -5550) (undo-tree-id8580 . -5364) (undo-tree-id8581 . -5550) (undo-tree-id8582 . -5550) (undo-tree-id8583 . -5550) (undo-tree-id8584 . -5550) (undo-tree-id8585 . -5550) (undo-tree-id8586 . -5550) (5953 . 5954)) nil (25759 43801 323557 232000) 0 nil])
([nil nil ((5665 . 5666) (t 25759 43801 345689 109000)) nil (25759 43820 758309 654000) 0 nil])
([nil nil ((1 . 5955) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################

model = keras.models.Sequential(
    [
        # Flatten layer to flatten the input shape of [50, 1] to a 1D array of size 50
        keras.layers.Flatten(input_shape=[50, 1]),
        # Dense layer with 1 unit, representing a single output value
        keras.layers.Dense(1),
    ]
)

# Compile the model
model.compile(loss=\"mse\", optimizer=\"adam\")

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

# Evaluate the model on the validation set
model.evaluate(X_valid, y_valid)
###############################################################################

# Plot the learning curves
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

# Make predictions on the validation set
y_pred = model.predict(X_valid)

# Plot the series
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()


# Using a Simpl RNN

# Define the model architecture
model = keras.models.Sequential([keras.layers.SimpleRNN(1, input_shape=[None, 1])],)

# Define the optimizer with a specific learning rate
optimizer = keras.optimizers.Adam(learning_rate=0.005)

# Compile the model
model.compile(loss=\"mse\", optimizer=optimizer)

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 2654 2655 (syntax-table (15)) 2830 2831 (syntax-table (15)) 5364 5365 (fontified t) 5365 5367 (fontified t face font-lock-comment-delimiter-face) 5367 5406 (fontified t face font-lock-comment-face) 5406 5412 (fontified t face font-lock-variable-name-face) 5412 5428 (fontified t) 5428 5429 (fontified t face (rainbow-delimiters-depth-1-face)) 5429 5436 (fontified t) 5436 5437 (fontified t face (rainbow-delimiters-depth-1-face)) 5437 5439 (fontified t) 5439 5441 (fontified t face font-lock-comment-delimiter-face) 5441 5457 (fontified t face font-lock-comment-face) 5457 5468 (fontified t) 5468 5469 (fontified t face (rainbow-delimiters-depth-1-face)) 5469 5476 (fontified t) 5476 5477 (fontified t face (rainbow-delimiters-depth-2-face)) 5477 5484 (fontified t) 5484 5485 (fontified t face (rainbow-delimiters-depth-2-face)) 5485 5494 (fontified t) 5494 5495 (fontified t face (rainbow-delimiters-depth-2-face)) 5495 5499 (fontified t) 5499 5500 (fontified t face (rainbow-delimiters-depth-2-face)) 5500 5508 (fontified t) 5508 5509 (fontified t face (rainbow-delimiters-depth-2-face)) 5509 5513 (fontified t) 5513 5514 (fontified t face (rainbow-delimiters-depth-2-face)) 5514 5515 (fontified t face (rainbow-delimiters-depth-1-face)) 5515 5524 (fontified t) 5524 5525 (fontified t face (rainbow-delimiters-depth-1-face)) 5525 5526 (fontified t face (rainbow-delimiters-depth-1-face)) 5526 5529 (fontified t) 5529 5531 (fontified t face font-lock-comment-delimiter-face) 5531 5549 (fontified t face font-lock-comment-face) 5549 5550 (fontified t) 5550 5552 (fontified t face font-lock-comment-delimiter-face) 5552 5582 (fontified t face font-lock-comment-face) 5582 5587 (fontified t face font-lock-variable-name-face) 5587 5613 (fontified t) 5613 5614 (fontified t face (rainbow-delimiters-depth-1-face)) 5614 5615 (fontified t face (rainbow-delimiters-depth-2-face)) 5615 5637 (fontified t) 5637 5638 (fontified t face (rainbow-delimiters-depth-3-face)) 5638 5653 (fontified t) 5653 5654 (fontified t face (rainbow-delimiters-depth-4-face)) 5654 5658 (fontified t face font-lock-constant-face) 5658 5661 (fontified t) 5661 5662 (fontified t face (rainbow-delimiters-depth-4-face)) 5662 5663 (fontified t face (rainbow-delimiters-depth-3-face)) 5663 5664 (fontified t face (rainbow-delimiters-depth-2-face)) 5664 5665 (fontified t) 5665 5666 (fontified t face (rainbow-delimiters-depth-1-face)) 5666 5667 (fontified t) 5667 5668 (fontified t) 5668 5670 (fontified t face font-lock-comment-delimiter-face) 5670 5721 (fontified t face font-lock-comment-face) 5721 5730 (fontified t face font-lock-variable-name-face) 5730 5754 (fontified t) 5754 5755 (fontified t face (rainbow-delimiters-depth-1-face)) 5755 5774 (fontified t) 5774 5775 (fontified t face (rainbow-delimiters-depth-1-face)) 5775 5777 (fontified t) 5777 5779 (fontified t face font-lock-comment-delimiter-face) 5779 5797 (fontified t face font-lock-comment-face) 5797 5803 (fontified t) 5803 5810 (fontified t face font-lock-builtin-face) 5810 5811 (fontified t face (rainbow-delimiters-depth-1-face)) 5811 5816 (fontified t) 5816 5821 (fontified t face font-lock-string-face) 5821 5842 (fontified t) 5842 5843 (fontified t face (rainbow-delimiters-depth-1-face)) 5843 5845 (fontified t) 5845 5847 (fontified t face font-lock-comment-delimiter-face) 5847 5863 (fontified t face font-lock-comment-face) 5863 5865 (fontified t face font-lock-variable-name-face) 5865 5870 (fontified t face font-lock-variable-name-face) 5870 5882 (fontified t) 5882 5883 (fontified t face (rainbow-delimiters-depth-1-face)) 5883 5928 (fontified t) 5928 5929 (fontified t face (rainbow-delimiters-depth-2-face)) 5929 5945 (fontified t) 5945 5946 (fontified t face (rainbow-delimiters-depth-2-face)) 5946 5947 (fontified t face (rainbow-delimiters-depth-1-face)) 5947 5948 (fontified t)) . 1) (undo-tree-id8687 . 283) (undo-tree-id8688 . -5948) (undo-tree-id8689 . -5948) (undo-tree-id8690 . -5527) (undo-tree-id8691 . -5664) (undo-tree-id8692 . -189) (undo-tree-id8693 . -189) (undo-tree-id8694 . -218) (undo-tree-id8695 . -218) (undo-tree-id8696 . -248) (undo-tree-id8697 . -248) (undo-tree-id8698 . -5550) (undo-tree-id8699 . -5550) (undo-tree-id8700 . -5550) (undo-tree-id8701 . -5797) (undo-tree-id8702 . -5797) (undo-tree-id8703 . -5550) (undo-tree-id8704 . -5550) (undo-tree-id8705 . -5550) (undo-tree-id8706 . -5550) (undo-tree-id8707 . -5550) (undo-tree-id8708 . -5550) (undo-tree-id8709 . -5550) (undo-tree-id8710 . -5550) (undo-tree-id8711 . -5550) (undo-tree-id8712 . -5550) (undo-tree-id8713 . -5948) (undo-tree-id8714 . -5948) (undo-tree-id8715 . -5948) (undo-tree-id8716 . -5948) (undo-tree-id8717 . -5948) (undo-tree-id8718 . -5948) (undo-tree-id8719 . -5948) (undo-tree-id8720 . -5948) (undo-tree-id8721 . -5948) (undo-tree-id8722 . -5948) (undo-tree-id8723 . -5948) (undo-tree-id8724 . -5527) (undo-tree-id8725 . -5948) (undo-tree-id8726 . -5948) (undo-tree-id8727 . -5948) (undo-tree-id8728 . -5948) (undo-tree-id8729 . -5948) (undo-tree-id8730 . -5948) (undo-tree-id8731 . -5921) (undo-tree-id8732 . -5921) (undo-tree-id8733 . -5921) (undo-tree-id8734 . -5921) (undo-tree-id8735 . -5921) (undo-tree-id8736 . -5921) (undo-tree-id8737 . -5921) (undo-tree-id8738 . -5921) (undo-tree-id8739 . -5863) (undo-tree-id8740 . -5845) (undo-tree-id8741 . -5844) (undo-tree-id8742 . -5797) (undo-tree-id8743 . -5777) (undo-tree-id8744 . -5776) (undo-tree-id8745 . -5721) (undo-tree-id8746 . -5668) (undo-tree-id8747 . -5667) (undo-tree-id8748 . -5640) (undo-tree-id8749 . -5582) (undo-tree-id8750 . -5550) (undo-tree-id8751 . -5550) (undo-tree-id8752 . -5550) (undo-tree-id8753 . -5550) (undo-tree-id8754 . -5550) (undo-tree-id8755 . -5550) (undo-tree-id8756 . -1) (undo-tree-id8757 . -38) (undo-tree-id8758 . -44) (undo-tree-id8759 . -106) (undo-tree-id8760 . -110) (undo-tree-id8761 . -106) (undo-tree-id8762 . -110) (undo-tree-id8763 . -563) (undo-tree-id8764 . -570) (undo-tree-id8765 . -526) (undo-tree-id8766 . -529) (undo-tree-id8767 . -947) (undo-tree-id8768 . -953) (undo-tree-id8769 . -1626) (undo-tree-id8770 . -1629) (undo-tree-id8771 . -1626) (undo-tree-id8772 . -1629) (undo-tree-id8773 . -1647) (undo-tree-id8774 . -1653) (undo-tree-id8775 . -1663) (undo-tree-id8776 . -1669) (undo-tree-id8777 . -1655) (undo-tree-id8778 . -1656) (undo-tree-id8779 . -3563) (undo-tree-id8780 . -3570) (undo-tree-id8781 . -5008) (undo-tree-id8782 . -5015) (undo-tree-id8783 . -5550) (undo-tree-id8784 . -5551) (undo-tree-id8785 . -5550) (undo-tree-id8786 . -5551) (undo-tree-id8787 . -5550) (undo-tree-id8788 . -5551) (undo-tree-id8789 . -5582) (undo-tree-id8790 . -5587) (undo-tree-id8791 . -5582) (undo-tree-id8792 . -5587) (undo-tree-id8793 . -5947) (undo-tree-id8794 . -5948) (undo-tree-id8795 . -5947) (undo-tree-id8796 . -5948) (undo-tree-id8797 . -5552) (undo-tree-id8798 . -5552) (undo-tree-id8799 . -38) (undo-tree-id8800 . -44) (undo-tree-id8801 . -106) (undo-tree-id8802 . -110) (undo-tree-id8803 . -871) (undo-tree-id8804 . -876) (undo-tree-id8805 . -1097) (undo-tree-id8806 . -1101) (undo-tree-id8807 . -1187) (undo-tree-id8808 . -1188) (undo-tree-id8809 . -1355) (undo-tree-id8810 . -1356) (undo-tree-id8811 . -3060) (undo-tree-id8812 . -3064) (undo-tree-id8813 . -4756) (undo-tree-id8814 . -4760) (undo-tree-id8815 . -5083) (undo-tree-id8816 . -5090) (undo-tree-id8817 . -5661) (undo-tree-id8818 . -5662) (undo-tree-id8819 . -5938) (undo-tree-id8820 . -5945) (undo-tree-id8821 . -5552) (undo-tree-id8822 . -5552) (undo-tree-id8823 . -5552) (undo-tree-id8824 . -5559) (undo-tree-id8825 . -5559) (undo-tree-id8826 . -5559) (undo-tree-id8827 . -5559) (undo-tree-id8828 . -5559) (undo-tree-id8829 . -5559) (undo-tree-id8830 . -5563) (undo-tree-id8831 . -5563) (undo-tree-id8832 . -5563) (undo-tree-id8833 . -5563) (undo-tree-id8834 . -5563) (undo-tree-id8835 . -5563) (undo-tree-id8836 . -5569) (undo-tree-id8837 . -5582) (undo-tree-id8838 . -5549) (undo-tree-id8839 . -5549) (undo-tree-id8840 . -5528) (undo-tree-id8841 . -5528) (undo-tree-id8842 . -5582) (undo-tree-id8843 . -5588) (undo-tree-id8844 . -5588) (undo-tree-id8845 . -5588) (undo-tree-id8846 . -5588) (undo-tree-id8847 . -5588) (undo-tree-id8848 . -5588) (undo-tree-id8849 . -5590) (undo-tree-id8850 . -5590) (undo-tree-id8851 . -5590) (undo-tree-id8852 . -5590) (undo-tree-id8853 . -5590) (undo-tree-id8854 . -5590) (undo-tree-id8855 . -5594) (undo-tree-id8856 . -5595) (undo-tree-id8857 . -5601) (undo-tree-id8858 . -5602) (undo-tree-id8859 . -5612) (undo-tree-id8860 . -5614) (undo-tree-id8861 . -5619) (undo-tree-id8862 . -5619) (undo-tree-id8863 . -5619) (undo-tree-id8864 . -5619) (undo-tree-id8865 . -5619) (undo-tree-id8866 . -5620) (undo-tree-id8867 . -5620) (undo-tree-id8868 . -5620) (undo-tree-id8869 . -5620) (undo-tree-id8870 . -5620) (undo-tree-id8871 . -5620) (undo-tree-id8872 . -5620) (undo-tree-id8873 . -5620) (undo-tree-id8874 . -5620) (undo-tree-id8875 . -5620) (undo-tree-id8876 . -5619) (undo-tree-id8877 . -5618) (undo-tree-id8878 . -5618) (undo-tree-id8879 . -5618) (undo-tree-id8880 . -5618) (undo-tree-id8881 . -5618) (undo-tree-id8882 . -5618) (undo-tree-id8883 . -5618) (undo-tree-id8884 . -5618) (undo-tree-id8885 . -5618) (undo-tree-id8886 . -5618) (undo-tree-id8887 . -5618) (undo-tree-id8888 . -5618) (undo-tree-id8889 . -5618) (undo-tree-id8890 . -5664) (undo-tree-id8891 . -5664) (undo-tree-id8892 . -5664) (undo-tree-id8893 . -5664) (undo-tree-id8894 . -5664) (undo-tree-id8895 . -5664) (undo-tree-id8896 . -5664) (undo-tree-id8897 . -5664) (undo-tree-id8898 . -5664) (undo-tree-id8899 . -5664) (undo-tree-id8900 . -5664) (undo-tree-id8901 . -5665) (undo-tree-id8902 . -5665) (undo-tree-id8903 . -5665) (undo-tree-id8904 . -5665) (undo-tree-id8905 . -5665) (undo-tree-id8906 . -5665) (undo-tree-id8907 . -5665) (undo-tree-id8908 . -5665) (undo-tree-id8909 . -5665) (undo-tree-id8910 . -5664) (undo-tree-id8911 . -5664) (undo-tree-id8912 . -5582) (undo-tree-id8913 . -5664) (undo-tree-id8914 . -5664) (undo-tree-id8915 . -5664) (undo-tree-id8916 . -5664) (undo-tree-id8917 . -5664) (undo-tree-id8918 . -5797) (undo-tree-id8919 . -5797) (undo-tree-id8920 . -5664) (undo-tree-id8921 . -5664) (undo-tree-id8922 . -5664) (undo-tree-id8923 . -5664) (undo-tree-id8924 . -5664) (undo-tree-id8925 . -5664) (undo-tree-id8926 . -5664) (undo-tree-id8927 . -5664) (undo-tree-id8928 . -5664) (undo-tree-id8929 . -5664) (undo-tree-id8930 . -5527) (undo-tree-id8931 . -5664) (undo-tree-id8932 . -5664) (undo-tree-id8933 . -5527) (undo-tree-id8934 . -5664) (undo-tree-id8935 . -5664) (undo-tree-id8936 . -5664) (undo-tree-id8937 . -5664) (undo-tree-id8938 . -5664) (undo-tree-id8939 . -5664)) nil (25759 43820 758258 793000) 0 nil])
([nil nil ((5669 . 5670) (t 25759 43820 776887 464000)) nil (25759 43827 603043 254000) 0 nil])
([nil nil ((1 . 5970) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################

model = keras.models.Sequential(
    [
        # Flatten layer to flatten the input shape of [50, 1] to a 1D array of size 50
        keras.layers.Flatten(input_shape=[50, 1]),
        # Dense layer with 1 unit, representing a single output value
        keras.layers.Dense(1),
    ]
)

# Compile the model
model.compile(loss=\"mse\", optimizer=\"adam\")

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

# Evaluate the model on the validation set
model.evaluate(X_valid, y_valid)
###############################################################################

# Plot the learning curves
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

# Make predictions on the validation set
y_pred = model.predict(X_valid)

# Plot the series
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()


# Using a Simpl RNN

# Define the model architecture
model = keras.models.Sequential(
    [keras.layers.SimpleRNN(1, input_shape=[None, 1]),],
)

# Define the optimizer with a specific learning rate
optimizer = keras.optimizers.Adam(learning_rate=0.005)

# Compile the model
model.compile(loss=\"mse\", optimizer=optimizer)

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 2654 2655 (syntax-table (15)) 2830 2831 (syntax-table (15)) 5527 5529 (fontified t) 5529 5531 (fontified t face font-lock-comment-delimiter-face) 5531 5549 (fontified t face font-lock-comment-face) 5549 5550 (fontified t) 5550 5552 (fontified t face font-lock-comment-delimiter-face) 5552 5582 (fontified t face font-lock-comment-face) 5582 5587 (fontified t face font-lock-variable-name-face) 5587 5613 (fontified t) 5613 5614 (fontified t face (rainbow-delimiters-depth-1-face)) 5614 5615 (fontified t) 5615 5619 (fontified t) 5619 5620 (fontified t face (rainbow-delimiters-depth-2-face)) 5620 5642 (fontified t) 5642 5643 (fontified t face (rainbow-delimiters-depth-3-face)) 5643 5658 (fontified t) 5658 5659 (fontified t face (rainbow-delimiters-depth-4-face)) 5659 5663 (fontified t face font-lock-constant-face) 5663 5666 (fontified t) 5666 5667 (fontified t face (rainbow-delimiters-depth-4-face)) 5667 5668 (fontified t face (rainbow-delimiters-depth-3-face)) 5668 5669 (fontified t) 5669 5670 (fontified t face (rainbow-delimiters-depth-2-face)) 5670 5672 (fontified t) 5672 5673 (fontified t face (rainbow-delimiters-depth-1-face)) 5673 5675 (fontified t) 5675 5677 (fontified t face font-lock-comment-delimiter-face) 5677 5728 (fontified t face font-lock-comment-face) 5728 5737 (fontified t face font-lock-variable-name-face) 5737 5761 (fontified t) 5761 5762 (fontified t face (rainbow-delimiters-depth-1-face)) 5762 5781 (fontified t) 5781 5782 (fontified t face (rainbow-delimiters-depth-1-face)) 5782 5784 (fontified t) 5784 5786 (fontified t face font-lock-comment-delimiter-face) 5786 5804 (fontified t face font-lock-comment-face) 5804 5810 (fontified t) 5810 5817 (fontified t face font-lock-builtin-face) 5817 5818 (fontified t face (rainbow-delimiters-depth-1-face)) 5818 5823 (fontified t) 5823 5828 (fontified t face font-lock-string-face) 5828 5849 (fontified t) 5849 5850 (fontified t face (rainbow-delimiters-depth-1-face)) 5850 5852 (fontified t) 5852 5854 (fontified t face font-lock-comment-delimiter-face) 5854 5870 (fontified t face font-lock-comment-face) 5870 5877 (fontified t face font-lock-variable-name-face) 5877 5889 (fontified t) 5889 5890 (fontified t face (rainbow-delimiters-depth-1-face)) 5890 5935 (fontified t) 5935 5936 (fontified t face (rainbow-delimiters-depth-2-face)) 5936 5952 (fontified t) 5952 5953 (fontified t face (rainbow-delimiters-depth-2-face)) 5953 5954 (fontified t face (rainbow-delimiters-depth-1-face)) 5954 5955 (fontified t)) . 1) (undo-tree-id8940 . 286) (undo-tree-id8941 . -5955) (undo-tree-id8942 . -5955) (undo-tree-id8943 . -5527) (undo-tree-id8944 . -5668) (undo-tree-id8945 . -189) (undo-tree-id8946 . -189) (undo-tree-id8947 . -218) (undo-tree-id8948 . -218) (undo-tree-id8949 . -248) (undo-tree-id8950 . -248) (undo-tree-id8951 . -5664) (undo-tree-id8952 . -5664) (undo-tree-id8953 . -1) (undo-tree-id8954 . -38) (undo-tree-id8955 . -44) (undo-tree-id8956 . -106) (undo-tree-id8957 . -110) (undo-tree-id8958 . -106) (undo-tree-id8959 . -110) (undo-tree-id8960 . -563) (undo-tree-id8961 . -570) (undo-tree-id8962 . -526) (undo-tree-id8963 . -529) (undo-tree-id8964 . -947) (undo-tree-id8965 . -953) (undo-tree-id8966 . -1626) (undo-tree-id8967 . -1629) (undo-tree-id8968 . -1626) (undo-tree-id8969 . -1629) (undo-tree-id8970 . -1647) (undo-tree-id8971 . -1653) (undo-tree-id8972 . -1663) (undo-tree-id8973 . -1669) (undo-tree-id8974 . -1655) (undo-tree-id8975 . -1656) (undo-tree-id8976 . -3563) (undo-tree-id8977 . -3570) (undo-tree-id8978 . -5008) (undo-tree-id8979 . -5015) (undo-tree-id8980 . -5851) (undo-tree-id8981 . -5852) (undo-tree-id8982 . -5664) (undo-tree-id8983 . -5664) (undo-tree-id8984 . -38) (undo-tree-id8985 . -44) (undo-tree-id8986 . -106) (undo-tree-id8987 . -110) (undo-tree-id8988 . -871) (undo-tree-id8989 . -876) (undo-tree-id8990 . -1097) (undo-tree-id8991 . -1101) (undo-tree-id8992 . -1187) (undo-tree-id8993 . -1188) (undo-tree-id8994 . -1355) (undo-tree-id8995 . -1356) (undo-tree-id8996 . -3060) (undo-tree-id8997 . -3064) (undo-tree-id8998 . -4756) (undo-tree-id8999 . -4760) (undo-tree-id9000 . -5083) (undo-tree-id9001 . -5090) (undo-tree-id9002 . -5945) (undo-tree-id9003 . -5952) (undo-tree-id9004 . -5664) (undo-tree-id9005 . -5664) (undo-tree-id9006 . -5664) (undo-tree-id9007 . -5804) (undo-tree-id9008 . -5804) (undo-tree-id9009 . -5664) (undo-tree-id9010 . -5664) (undo-tree-id9011 . -5664) (undo-tree-id9012 . -5664) (undo-tree-id9013 . -5665) (undo-tree-id9014 . -5670) (undo-tree-id9015 . -5670) (undo-tree-id9016 . -5670) (undo-tree-id9017 . -5670) (undo-tree-id9018 . -5670) (undo-tree-id9019 . -5670) (undo-tree-id9020 . -5670) (undo-tree-id9021 . -5670) (undo-tree-id9022 . -5668) (undo-tree-id9023 . -5670) (undo-tree-id9024 . -5670) (undo-tree-id9025 . -5670) (undo-tree-id9026 . -5670) (undo-tree-id9027 . -5670) (undo-tree-id9028 . -5670) (undo-tree-id9029 . -5670) (undo-tree-id9030 . -5668) (undo-tree-id9031 . -5668) (undo-tree-id9032 . -5668) (undo-tree-id9033 . -5668) (undo-tree-id9034 . -5668) (undo-tree-id9035 . -5668) (undo-tree-id9036 . -5668) (undo-tree-id9037 . -5668) (undo-tree-id9038 . -5669) (undo-tree-id9039 . -5669) (undo-tree-id9040 . -5669) (undo-tree-id9041 . -5669) (undo-tree-id9042 . -5669) (undo-tree-id9043 . -5669) (undo-tree-id9044 . -5669) (undo-tree-id9045 . -5669) (undo-tree-id9046 . -5668) (undo-tree-id9047 . -5668) (undo-tree-id9048 . -5615) (undo-tree-id9049 . -5668) (undo-tree-id9050 . -5668) (undo-tree-id9051 . -5668) (undo-tree-id9052 . -5668) (undo-tree-id9053 . -5668) (undo-tree-id9054 . -5804) (undo-tree-id9055 . -5804) (undo-tree-id9056 . -5668) (undo-tree-id9057 . -5668) (undo-tree-id9058 . -5668) (undo-tree-id9059 . -5668) (undo-tree-id9060 . -5668) (undo-tree-id9061 . -5668) (undo-tree-id9062 . -5668) (undo-tree-id9063 . -5668) (undo-tree-id9064 . -5668) (undo-tree-id9065 . -5668) (undo-tree-id9066 . -5527) (undo-tree-id9067 . -5668) (undo-tree-id9068 . -5668) (undo-tree-id9069 . -5527) (undo-tree-id9070 . -5668) (undo-tree-id9071 . -5668) (undo-tree-id9072 . -5668) (undo-tree-id9073 . -5668) (undo-tree-id9074 . -5668) (undo-tree-id9075 . -5668)) nil (25759 43827 603032 571000) 0 nil])
([nil nil ((5968 . 5969) (t 25759 43827 632613 461000)) nil (25759 43888 188963 164000) 0 nil])
([nil nil ((1 . 5989) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################

model = keras.models.Sequential(
    [
        # Flatten layer to flatten the input shape of [50, 1] to a 1D array of size 50
        keras.layers.Flatten(input_shape=[50, 1]),
        # Dense layer with 1 unit, representing a single output value
        keras.layers.Dense(1),
    ]
)

# Compile the model
model.compile(loss=\"mse\", optimizer=\"adam\")

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

# Evaluate the model on the validation set
model.evaluate(X_valid, y_valid)
###############################################################################

# Plot the learning curves
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

# Make predictions on the validation set
y_pred = model.predict(X_valid)

# Plot the series
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()


# Using a Simpl RNN

# Define the model architecture
model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(1, input_shape=[None, 1]),
    ],
)

# Define the optimizer with a specific learning rate
optimizer = keras.optimizers.Adam(learning_rate=0.005)

# Compile the model
model.compile(loss=\"mse\", optimizer=optimizer)

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid),)
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 2654 2655 (syntax-table (15)) 2830 2831 (syntax-table (15)) 5527 5529 (fontified t) 5529 5531 (fontified t face font-lock-comment-delimiter-face) 5531 5549 (fontified t face font-lock-comment-face) 5549 5550 (fontified t) 5550 5552 (fontified t face font-lock-comment-delimiter-face) 5552 5582 (fontified t face font-lock-comment-face) 5582 5587 (fontified t face font-lock-variable-name-face) 5587 5613 (fontified t) 5613 5614 (fontified t face (rainbow-delimiters-depth-1-face)) 5614 5619 (fontified t) 5619 5620 (fontified t face (rainbow-delimiters-depth-2-face)) 5620 5651 (fontified t) 5651 5652 (fontified t face (rainbow-delimiters-depth-3-face)) 5652 5667 (fontified t) 5667 5668 (fontified t face (rainbow-delimiters-depth-4-face)) 5668 5672 (fontified t face font-lock-constant-face) 5672 5675 (fontified t) 5675 5676 (fontified t face (rainbow-delimiters-depth-4-face)) 5676 5677 (fontified t face (rainbow-delimiters-depth-3-face)) 5677 5683 (fontified t) 5683 5684 (fontified t face (rainbow-delimiters-depth-2-face)) 5684 5686 (fontified t) 5686 5687 (fontified t face (rainbow-delimiters-depth-1-face)) 5687 5689 (fontified t) 5689 5691 (fontified t face font-lock-comment-delimiter-face) 5691 5742 (fontified t face font-lock-comment-face) 5742 5751 (fontified t face font-lock-variable-name-face) 5751 5775 (fontified t) 5775 5776 (fontified t face (rainbow-delimiters-depth-1-face)) 5776 5795 (fontified t) 5795 5796 (fontified t face (rainbow-delimiters-depth-1-face)) 5796 5798 (fontified t) 5798 5800 (fontified t face font-lock-comment-delimiter-face) 5800 5818 (fontified t face font-lock-comment-face) 5818 5824 (fontified t) 5824 5831 (fontified t face font-lock-builtin-face) 5831 5832 (fontified t face (rainbow-delimiters-depth-1-face)) 5832 5837 (fontified t) 5837 5842 (fontified t face font-lock-string-face) 5842 5863 (fontified t) 5863 5864 (fontified t face (rainbow-delimiters-depth-1-face)) 5864 5866 (fontified t) 5866 5868 (fontified t face font-lock-comment-delimiter-face) 5868 5884 (fontified t face font-lock-comment-face) 5884 5891 (fontified t face font-lock-variable-name-face) 5891 5903 (fontified t) 5903 5904 (fontified t face (rainbow-delimiters-depth-1-face)) 5904 5949 (fontified t) 5949 5950 (fontified t face (rainbow-delimiters-depth-2-face)) 5950 5966 (fontified t) 5966 5967 (fontified t face (rainbow-delimiters-depth-2-face)) 5967 5968 (fontified t) 5968 5969 (fontified t face (rainbow-delimiters-depth-1-face)) 5969 5970 (fontified t)) . 1) (undo-tree-id9076 . 2) (undo-tree-id9077 . -5970) (undo-tree-id9078 . -5970) (undo-tree-id9079 . -5798) (undo-tree-id9080 . -5967) (undo-tree-id9081 . -189) (undo-tree-id9082 . -189) (undo-tree-id9083 . -218) (undo-tree-id9084 . -218) (undo-tree-id9085 . -248) (undo-tree-id9086 . -248) (undo-tree-id9087 . -5668) (undo-tree-id9088 . -5668) (undo-tree-id9089 . -5668) (undo-tree-id9090 . -5818) (undo-tree-id9091 . -5818) (undo-tree-id9092 . -5668) (undo-tree-id9093 . -5668) (undo-tree-id9094 . -5668) (undo-tree-id9095 . -5668) (undo-tree-id9096 . -5668) (undo-tree-id9097 . -5668) (undo-tree-id9098 . -5668) (undo-tree-id9099 . -5668) (undo-tree-id9100 . -5668) (undo-tree-id9101 . -5668) (undo-tree-id9102 . -5527) (undo-tree-id9103 . -5668) (undo-tree-id9104 . -5668) (undo-tree-id9105 . -5668) (undo-tree-id9106 . -5668) (undo-tree-id9107 . -5668) (undo-tree-id9108 . -5668) (undo-tree-id9109 . -5668) (undo-tree-id9110 . -5668) (undo-tree-id9111 . -5668) (undo-tree-id9112 . -5668) (undo-tree-id9113 . -5668) (undo-tree-id9114 . -5672) (undo-tree-id9115 . -5674) (undo-tree-id9116 . -5675) (undo-tree-id9117 . -5683) (undo-tree-id9118 . -5683) (undo-tree-id9119 . -5683) (undo-tree-id9120 . -5683) (undo-tree-id9121 . -5683) (undo-tree-id9122 . -5683) (undo-tree-id9123 . -5683) (undo-tree-id9124 . -5683) (undo-tree-id9125 . -5686) (undo-tree-id9126 . -5686) (undo-tree-id9127 . -38) (undo-tree-id9128 . -44) (undo-tree-id9129 . -106) (undo-tree-id9130 . -110) (undo-tree-id9131 . -871) (undo-tree-id9132 . -876) (undo-tree-id9133 . -1097) (undo-tree-id9134 . -1101) (undo-tree-id9135 . -1187) (undo-tree-id9136 . -1188) (undo-tree-id9137 . -1355) (undo-tree-id9138 . -1356) (undo-tree-id9139 . -3060) (undo-tree-id9140 . -3064) (undo-tree-id9141 . -4756) (undo-tree-id9142 . -4760) (undo-tree-id9143 . -5083) (undo-tree-id9144 . -5090) (undo-tree-id9145 . -5959) (undo-tree-id9146 . -5966) (undo-tree-id9147 . -5686) (undo-tree-id9148 . -5686) (undo-tree-id9149 . -5686) (undo-tree-id9150 . -5686) (undo-tree-id9151 . -5686) (undo-tree-id9152 . -5686) (undo-tree-id9153 . -5686) (undo-tree-id9154 . -5686) (undo-tree-id9155 . -5686) (undo-tree-id9156 . -5686) (undo-tree-id9157 . -5686) (undo-tree-id9158 . -5686) (undo-tree-id9159 . -5686) (undo-tree-id9160 . -5527) (undo-tree-id9161 . -5686) (undo-tree-id9162 . -5686) (undo-tree-id9163 . -5686) (undo-tree-id9164 . -5686) (undo-tree-id9165 . -5686) (undo-tree-id9166 . -5686) (undo-tree-id9167 . -5686) (undo-tree-id9168 . -5686) (undo-tree-id9169 . -5686) (undo-tree-id9170 . -5686) (undo-tree-id9171 . -5679) (undo-tree-id9172 . -5621) (undo-tree-id9173 . -5615) (undo-tree-id9174 . -5615) (undo-tree-id9175 . -5615) (undo-tree-id9176 . -5615) (undo-tree-id9177 . -5615) (undo-tree-id9178 . -5621) (undo-tree-id9179 . -5621) (undo-tree-id9180 . -5621) (undo-tree-id9181 . -5621) (undo-tree-id9182 . -1) (undo-tree-id9183 . -38) (undo-tree-id9184 . -44) (undo-tree-id9185 . -106) (undo-tree-id9186 . -110) (undo-tree-id9187 . -106) (undo-tree-id9188 . -110) (undo-tree-id9189 . -563) (undo-tree-id9190 . -570) (undo-tree-id9191 . -526) (undo-tree-id9192 . -529) (undo-tree-id9193 . -947) (undo-tree-id9194 . -953) (undo-tree-id9195 . -1626) (undo-tree-id9196 . -1629) (undo-tree-id9197 . -1626) (undo-tree-id9198 . -1629) (undo-tree-id9199 . -1647) (undo-tree-id9200 . -1653) (undo-tree-id9201 . -1663) (undo-tree-id9202 . -1669) (undo-tree-id9203 . -1655) (undo-tree-id9204 . -1656) (undo-tree-id9205 . -3563) (undo-tree-id9206 . -3570) (undo-tree-id9207 . -5008) (undo-tree-id9208 . -5015) (undo-tree-id9209 . -5884) (undo-tree-id9210 . -5891) (undo-tree-id9211 . -5621) (undo-tree-id9212 . -5621) (undo-tree-id9213 . -5621) (undo-tree-id9214 . -5633) (undo-tree-id9215 . -5634) (undo-tree-id9216 . -5640) (undo-tree-id9217 . -5641) (undo-tree-id9218 . -5650) (undo-tree-id9219 . -5651) (undo-tree-id9220 . -5651) (undo-tree-id9221 . -5651) (undo-tree-id9222 . -5651) (undo-tree-id9223 . -5651) (undo-tree-id9224 . -5652) (undo-tree-id9225 . -5652) (undo-tree-id9226 . -5652) (undo-tree-id9227 . -5653) (undo-tree-id9228 . -5659) (undo-tree-id9229 . -5659) (undo-tree-id9230 . -5659) (undo-tree-id9231 . -5659) (undo-tree-id9232 . -5659) (undo-tree-id9233 . -5659) (undo-tree-id9234 . -5660) (undo-tree-id9235 . -5660) (undo-tree-id9236 . -5660) (undo-tree-id9237 . -5660) (undo-tree-id9238 . -5660) (undo-tree-id9239 . -5665) (undo-tree-id9240 . -5667) (undo-tree-id9241 . -5671) (undo-tree-id9242 . -5672) (undo-tree-id9243 . -5674) (undo-tree-id9244 . -5677) (undo-tree-id9245 . -5684) (undo-tree-id9246 . -5686) (undo-tree-id9247 . -5688) (undo-tree-id9248 . -5689) (undo-tree-id9249 . -5696) (undo-tree-id9250 . -5700) (undo-tree-id9251 . -5700) (undo-tree-id9252 . -5700) (undo-tree-id9253 . -5700) (undo-tree-id9254 . -5700) (undo-tree-id9255 . -5700) (undo-tree-id9256 . -5710) (undo-tree-id9257 . -5715) (undo-tree-id9258 . -5717) (undo-tree-id9259 . -5726) (undo-tree-id9260 . -5735) (undo-tree-id9261 . -5740) (undo-tree-id9262 . -5750) (undo-tree-id9263 . -5752) (undo-tree-id9264 . -5752) (undo-tree-id9265 . -5752) (undo-tree-id9266 . -5752) (undo-tree-id9267 . -5752) (undo-tree-id9268 . -5752) (undo-tree-id9269 . -5758) (undo-tree-id9270 . -5759) (undo-tree-id9271 . -5769) (undo-tree-id9272 . -5770) (undo-tree-id9273 . -5770) (undo-tree-id9274 . -5770) (undo-tree-id9275 . -5770) (undo-tree-id9276 . -5770) (undo-tree-id9277 . -5774) (undo-tree-id9278 . -5774) (undo-tree-id9279 . -5774) (undo-tree-id9280 . -5774) (undo-tree-id9281 . -5775) (undo-tree-id9282 . -5783) (undo-tree-id9283 . -5783) (undo-tree-id9284 . -5783) (undo-tree-id9285 . -5783) (undo-tree-id9286 . -5783) (undo-tree-id9287 . -5783) (undo-tree-id9288 . -5783) (undo-tree-id9289 . -5783) (undo-tree-id9290 . -5730) (undo-tree-id9291 . -5730) (undo-tree-id9292 . -5730) (undo-tree-id9293 . -5730) (undo-tree-id9294 . -5730) (undo-tree-id9295 . -5730) (undo-tree-id9296 . -5688) (undo-tree-id9297 . -5688) (undo-tree-id9298 . -5688) (undo-tree-id9299 . -5688) (undo-tree-id9300 . -5688) (undo-tree-id9301 . -5730) (undo-tree-id9302 . -5783) (undo-tree-id9303 . -5783) (undo-tree-id9304 . -5783) (undo-tree-id9305 . -5783) (undo-tree-id9306 . -5783) (undo-tree-id9307 . -5783) (undo-tree-id9308 . -5783) (undo-tree-id9309 . -5783) (undo-tree-id9310 . -5730) (undo-tree-id9311 . -5730) (undo-tree-id9312 . -5730) (undo-tree-id9313 . -5730) (undo-tree-id9314 . -5730) (undo-tree-id9315 . -5730) (undo-tree-id9316 . -5783) (undo-tree-id9317 . -5797) (undo-tree-id9318 . -5816) (undo-tree-id9319 . -5816) (undo-tree-id9320 . -5816) (undo-tree-id9321 . -5816) (undo-tree-id9322 . -5816) (undo-tree-id9323 . -5816) (undo-tree-id9324 . -5816) (undo-tree-id9325 . -5816) (undo-tree-id9326 . -5797) (undo-tree-id9327 . -5783) (undo-tree-id9328 . -5783) (undo-tree-id9329 . -5783) (undo-tree-id9330 . -5783) (undo-tree-id9331 . -5783) (undo-tree-id9332 . -5783) (undo-tree-id9333 . -5783) (undo-tree-id9334 . -5783) (undo-tree-id9335 . -5730) (undo-tree-id9336 . -5730) (undo-tree-id9337 . -5730) (undo-tree-id9338 . -5730) (undo-tree-id9339 . -5730) (undo-tree-id9340 . -5730) (undo-tree-id9341 . -5730) (undo-tree-id9342 . -5730) (undo-tree-id9343 . -5730) (undo-tree-id9344 . -5730) (undo-tree-id9345 . -5730) (undo-tree-id9346 . -5730) (undo-tree-id9347 . -5730) (undo-tree-id9348 . -5737) (undo-tree-id9349 . -5737) (undo-tree-id9350 . -5737) (undo-tree-id9351 . -5737) (undo-tree-id9352 . -5737) (undo-tree-id9353 . -5737) (undo-tree-id9354 . -5742) (undo-tree-id9355 . -5752) (undo-tree-id9356 . -5752) (undo-tree-id9357 . -5752) (undo-tree-id9358 . -5752) (undo-tree-id9359 . -5752) (undo-tree-id9360 . -5752) (undo-tree-id9361 . -5797) (undo-tree-id9362 . -5808) (undo-tree-id9363 . -5828) (undo-tree-id9364 . -5865) (undo-tree-id9365 . -5865) (undo-tree-id9366 . -5865) (undo-tree-id9367 . -5865) (undo-tree-id9368 . -5865) (undo-tree-id9369 . -5865) (undo-tree-id9370 . -5865) (undo-tree-id9371 . -5865) (undo-tree-id9372 . -5527) (undo-tree-id9373 . -5865) (undo-tree-id9374 . -5865) (undo-tree-id9375 . -5865) (undo-tree-id9376 . -5865) (undo-tree-id9377 . -5865) (undo-tree-id9378 . -5865) (undo-tree-id9379 . -5865) (undo-tree-id9380 . -5865) (undo-tree-id9381 . -5865) (undo-tree-id9382 . -5865) (undo-tree-id9383 . -5866) (undo-tree-id9384 . -5866) (undo-tree-id9385 . -5866) (undo-tree-id9386 . -5866) (undo-tree-id9387 . -5866) (undo-tree-id9388 . -5866) (undo-tree-id9389 . -5883) (undo-tree-id9390 . -5883) (undo-tree-id9391 . -5884) (undo-tree-id9392 . -5884) (undo-tree-id9393 . -5884) (undo-tree-id9394 . -5884) (undo-tree-id9395 . -5884) (undo-tree-id9396 . -5884) (undo-tree-id9397 . -5884) (undo-tree-id9398 . -5884) (undo-tree-id9399 . -5884) (undo-tree-id9400 . -5884) (undo-tree-id9401 . -5884) (undo-tree-id9402 . -5527) (undo-tree-id9403 . -5884) (undo-tree-id9404 . -5884) (undo-tree-id9405 . -5884) (undo-tree-id9406 . -5884) (undo-tree-id9407 . -5884) (undo-tree-id9408 . -5884) (undo-tree-id9409 . -5884) (undo-tree-id9410 . -5884) (undo-tree-id9411 . -5884) (undo-tree-id9412 . -5884) (undo-tree-id9413 . -5942) (undo-tree-id9414 . -5942) (undo-tree-id9415 . -5942) (undo-tree-id9416 . -5942) (undo-tree-id9417 . -5942) (undo-tree-id9418 . -5942) (undo-tree-id9419 . -5943) (undo-tree-id9420 . -5947) (undo-tree-id9421 . -5947) (undo-tree-id9422 . -5947) (undo-tree-id9423 . -5947) (undo-tree-id9424 . -5947) (undo-tree-id9425 . -5947) (undo-tree-id9426 . -5949) (undo-tree-id9427 . -5950) (undo-tree-id9428 . -5951) (undo-tree-id9429 . -5956) (undo-tree-id9430 . -5957) (undo-tree-id9431 . -5959) (undo-tree-id9432 . -5960) (undo-tree-id9433 . -5965) (undo-tree-id9434 . -5967) (undo-tree-id9435 . -5967) (undo-tree-id9436 . -5967) (undo-tree-id9437 . -5967) (undo-tree-id9438 . -5967) (undo-tree-id9439 . -5967) (undo-tree-id9440 . -5967) (undo-tree-id9441 . -5967) (undo-tree-id9442 . -5967) (undo-tree-id9443 . -5967) (undo-tree-id9444 . -5967) (undo-tree-id9445 . -5968) (undo-tree-id9446 . -5968) (undo-tree-id9447 . -5968) (undo-tree-id9448 . -5968) (undo-tree-id9449 . -5968) (undo-tree-id9450 . -5968) (undo-tree-id9451 . -5968) (undo-tree-id9452 . -5968) (undo-tree-id9453 . -5968) (undo-tree-id9454 . -5967) (undo-tree-id9455 . -5967) (undo-tree-id9456 . -5967) (undo-tree-id9457 . -5967) (undo-tree-id9458 . -5967) (undo-tree-id9459 . -5967) (undo-tree-id9460 . -5967) (undo-tree-id9461 . -5967) (undo-tree-id9462 . -5967) (undo-tree-id9463 . -5967) (undo-tree-id9464 . -5967) (undo-tree-id9465 . -5967) (undo-tree-id9466 . -5967) (undo-tree-id9467 . -5967) (undo-tree-id9468 . -5884) (undo-tree-id9469 . -5967) (undo-tree-id9470 . -5967) (undo-tree-id9471 . -5967) (undo-tree-id9472 . -5967) (undo-tree-id9473 . -5967) (undo-tree-id9474 . -5967) (undo-tree-id9475 . -5967) (undo-tree-id9476 . -5967) (undo-tree-id9477 . -5967) (undo-tree-id9478 . -5967) (undo-tree-id9479 . -5967) (undo-tree-id9480 . -5967) (undo-tree-id9481 . -5798) (undo-tree-id9482 . -5967) (undo-tree-id9483 . -5967) (undo-tree-id9484 . -5798) (undo-tree-id9485 . -5967) (undo-tree-id9486 . -5967) (undo-tree-id9487 . -5967) (undo-tree-id9488 . -5967) (undo-tree-id9489 . -5967) (undo-tree-id9490 . -5967)) nil (25759 43888 188937 732000) 0 nil])
([nil nil ((5989 . 5990) (t 25759 43888 206381 669000)) nil (25759 43962 10242 124000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6021 . 6022) (nil fontified nil 5990 . 6022) (5990 . 6022)) nil (25759 43962 10240 620000) 0 nil])
([nil nil ((6022 . 6024)) nil (25759 43962 10238 471000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6108 . 6109) (nil fontified nil 6024 . 6109) (6024 . 6109)) nil (25759 43962 10236 510000) 0 nil])
([nil nil ((6109 . 6110)) nil (25759 43962 10229 393000) 0 nil])
([nil nil ((5989 . 5990) (t 25759 43962 40080 969000)) nil (25759 43975 227724 345000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5607 . 5608) (nil fontified nil 5607 . 5608) (5607 . 5608) (nil rear-nonsticky nil 5606 . 5607) (nil fontified nil 5606 . 5607) (5606 . 5607) (nil rear-nonsticky nil 5605 . 5606) (nil fontified nil 5605 . 5606) (5605 . 5606) (nil rear-nonsticky nil 5604 . 5605) (nil fontified nil 5604 . 5605) (5604 . 5605) (nil rear-nonsticky nil 5603 . 5604) (nil fontified nil 5603 . 5604) (5603 . 5604) (nil rear-nonsticky nil 5602 . 5603) (nil fontified nil 5602 . 5603) (5602 . 5603) (nil rear-nonsticky nil 5601 . 5602) (nil fontified nil 5601 . 5602) (5601 . 5602) (nil rear-nonsticky nil 5600 . 5601) (nil fontified nil 5600 . 5601) (5600 . 5601) (nil rear-nonsticky nil 5599 . 5600) (nil fontified nil 5599 . 5600) (5599 . 5600) (nil rear-nonsticky nil 5598 . 5599) (nil fontified nil 5598 . 5599) (5598 . 5599) (nil rear-nonsticky nil 5597 . 5598) (nil fontified nil 5597 . 5598) (5597 . 5598) (nil rear-nonsticky nil 5596 . 5597) (nil fontified nil 5596 . 5597) (5596 . 5597) (nil rear-nonsticky nil 5595 . 5596) (nil fontified nil 5595 . 5596) (5595 . 5596) (nil rear-nonsticky nil 5594 . 5595) (nil fontified nil 5594 . 5595) (5594 . 5595) (nil rear-nonsticky nil 5593 . 5594) (nil fontified nil 5593 . 5594) (5593 . 5594) (nil rear-nonsticky nil 5592 . 5593) (nil fontified nil 5592 . 5593) (5592 . 5593) (nil rear-nonsticky nil 5591 . 5592) (nil fontified nil 5591 . 5592) (5591 . 5592) (nil rear-nonsticky nil 5590 . 5591) (nil fontified nil 5590 . 5591) (5590 . 5591) (nil rear-nonsticky nil 5589 . 5590) (nil fontified nil 5589 . 5590) (5589 . 5590) (nil rear-nonsticky nil 5588 . 5589) (nil fontified nil 5588 . 5589) (5588 . 5589) (nil rear-nonsticky nil 5587 . 5588) (nil fontified nil 5587 . 5588) (5587 . 5588) (nil rear-nonsticky nil 5586 . 5587) (nil fontified nil 5586 . 5587) (5586 . 5587) (nil rear-nonsticky nil 5585 . 5586) (nil fontified nil 5585 . 5586) (5585 . 5586) (nil rear-nonsticky nil 5584 . 5585) (nil fontified nil 5584 . 5585) (5584 . 5585) (nil rear-nonsticky nil 5583 . 5584) (nil fontified nil 5583 . 5584) (5583 . 5584) (nil rear-nonsticky nil 5582 . 5583) (nil fontified nil 5582 . 5583) (5582 . 5583) (nil rear-nonsticky nil 5581 . 5582) (nil fontified nil 5581 . 5582) (5581 . 5582) (nil rear-nonsticky nil 5580 . 5581) (nil fontified nil 5580 . 5581) (5580 . 5581) (nil rear-nonsticky nil 5579 . 5580) (nil fontified nil 5579 . 5580) (5579 . 5580) (nil rear-nonsticky nil 5578 . 5579) (nil fontified nil 5578 . 5579) (5578 . 5579) (nil rear-nonsticky nil 5577 . 5578) (nil fontified nil 5577 . 5578) (5577 . 5578) (nil rear-nonsticky nil 5576 . 5577) (nil fontified nil 5576 . 5577) (5576 . 5577) (nil rear-nonsticky nil 5575 . 5576) (nil fontified nil 5575 . 5576) (5575 . 5576) (nil rear-nonsticky nil 5574 . 5575) (nil fontified nil 5574 . 5575) (5574 . 5575) (nil rear-nonsticky nil 5573 . 5574) (nil fontified nil 5573 . 5574) (5573 . 5574) (nil rear-nonsticky nil 5572 . 5573) (nil fontified nil 5572 . 5573) (5572 . 5573) (nil rear-nonsticky nil 5571 . 5572) (nil fontified nil 5571 . 5572) (5571 . 5572) (nil rear-nonsticky nil 5570 . 5571) (nil fontified nil 5570 . 5571) (5570 . 5571) (nil rear-nonsticky nil 5569 . 5570) (nil fontified nil 5569 . 5570) (5569 . 5570) (nil rear-nonsticky nil 5568 . 5569) (nil fontified nil 5568 . 5569) (5568 . 5569) (nil rear-nonsticky nil 5567 . 5568) (nil fontified nil 5567 . 5568) (5567 . 5568) (nil rear-nonsticky nil 5566 . 5567) (nil fontified nil 5566 . 5567) (5566 . 5567) (nil rear-nonsticky nil 5565 . 5566) (nil fontified nil 5565 . 5566) (5565 . 5566) (nil rear-nonsticky nil 5564 . 5565) (nil fontified nil 5564 . 5565) (5564 . 5565) (nil rear-nonsticky nil 5563 . 5564) (nil fontified nil 5563 . 5564) (5563 . 5564) (nil rear-nonsticky nil 5562 . 5563) (nil fontified nil 5562 . 5563) (5562 . 5563) (nil rear-nonsticky nil 5561 . 5562) (nil fontified nil 5561 . 5562) (5561 . 5562) (nil rear-nonsticky nil 5560 . 5561) (nil fontified nil 5560 . 5561) (5560 . 5561) (nil rear-nonsticky nil 5559 . 5560) (nil fontified nil 5559 . 5560) (5559 . 5560) (nil rear-nonsticky nil 5558 . 5559) (nil fontified nil 5558 . 5559) (5558 . 5559) (nil rear-nonsticky nil 5557 . 5558) (nil fontified nil 5557 . 5558) (5557 . 5558) (nil rear-nonsticky nil 5556 . 5557) (nil fontified nil 5556 . 5557) (5556 . 5557) (nil rear-nonsticky nil 5555 . 5556) (nil fontified nil 5555 . 5556) (5555 . 5556) (nil rear-nonsticky nil 5554 . 5555) (nil fontified nil 5554 . 5555) (5554 . 5555) (nil rear-nonsticky nil 5553 . 5554) (nil fontified nil 5553 . 5554) (5553 . 5554) (nil rear-nonsticky nil 5552 . 5553) (nil fontified nil 5552 . 5553) (5552 . 5553) (nil rear-nonsticky nil 5551 . 5552) (nil fontified nil 5551 . 5552) (5551 . 5552) (nil rear-nonsticky nil 5550 . 5551) (nil fontified nil 5550 . 5551) (5550 . 5551) (nil rear-nonsticky nil 5549 . 5550) (nil fontified nil 5549 . 5550) (5549 . 5550) (nil rear-nonsticky nil 5548 . 5549) (nil fontified nil 5548 . 5549) (5548 . 5549) (nil rear-nonsticky nil 5547 . 5548) (nil fontified nil 5547 . 5548) (5547 . 5548) (nil rear-nonsticky nil 5546 . 5547) (nil fontified nil 5546 . 5547) (5546 . 5547) (nil rear-nonsticky nil 5545 . 5546) (nil fontified nil 5545 . 5546) (5545 . 5546) (nil rear-nonsticky nil 5544 . 5545) (nil fontified nil 5544 . 5545) (5544 . 5545) (nil rear-nonsticky nil 5543 . 5544) (nil fontified nil 5543 . 5544) (5543 . 5544) (nil rear-nonsticky nil 5542 . 5543) (nil fontified nil 5542 . 5543) (5542 . 5543) (nil rear-nonsticky nil 5541 . 5542) (nil fontified nil 5541 . 5542) (5541 . 5542) (nil rear-nonsticky nil 5540 . 5541) (nil fontified nil 5540 . 5541) (5540 . 5541) (nil rear-nonsticky nil 5539 . 5540) (nil fontified nil 5539 . 5540) (5539 . 5540) (nil rear-nonsticky nil 5538 . 5539) (nil fontified nil 5538 . 5539) (5538 . 5539) (nil rear-nonsticky nil 5537 . 5538) (nil fontified nil 5537 . 5538) (5537 . 5538) (nil rear-nonsticky nil 5536 . 5537) (nil fontified nil 5536 . 5537) (5536 . 5537) (nil rear-nonsticky nil 5535 . 5536) (nil fontified nil 5535 . 5536) (5535 . 5536) (nil rear-nonsticky nil 5534 . 5535) (nil fontified nil 5534 . 5535) (5534 . 5535) (nil rear-nonsticky nil 5533 . 5534) (nil fontified nil 5533 . 5534) (5533 . 5534) (nil rear-nonsticky nil 5532 . 5533) (nil fontified nil 5532 . 5533) (5532 . 5533) (nil rear-nonsticky nil 5531 . 5532) (nil fontified nil 5531 . 5532) (5531 . 5532) (nil rear-nonsticky nil 5530 . 5531) (nil fontified nil 5530 . 5531) (5530 . 5531) (nil rear-nonsticky nil 5529 . 5530) (nil fontified nil 5529 . 5530) (5529 . 5530)) nil (25759 43979 509388 764000) 0 nil] [nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 5530) (undo-tree-id9491 . -1) (undo-tree-id9492 . -1)) ((5530 . 5531)) (25759 43975 227480 729000) 0 nil])
([nil nil ((6190 . 6192) (t 25759 43979 535596 965000)) nil (25759 44019 169427 809000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 6292 . 6293) (nil fontified nil 6192 . 6293) (6192 . 6293)) nil (25759 44019 169424 663000) 0 nil])
([nil nil ((6293 . 6294)) nil (25759 44019 169411 910000) 0 nil])
([nil nil ((6295 . 6306) (6294 . 6295) (t 25759 44019 202579 222000) 6294) nil (25759 44184 408123 189000) 0 nil])
([nil nil ((1 . 6306) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################

model = keras.models.Sequential(
    [
        # Flatten layer to flatten the input shape of [50, 1] to a 1D array of size 50
        keras.layers.Flatten(input_shape=[50, 1]),
        # Dense layer with 1 unit, representing a single output value
        keras.layers.Dense(1),
    ]
)

# Compile the model
model.compile(loss=\"mse\", optimizer=\"adam\")

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

# Evaluate the model on the validation set
model.evaluate(X_valid, y_valid)
###############################################################################

# Plot the learning curves
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

# Make predictions on the validation set
y_pred = model.predict(X_valid)

# Plot the series
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################
# Using a Simpl RNN

# Define the model architecture
model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(1, input_shape=[None, 1]),
    ],
)

# Define the optimizer with a specific learning rate
optimizer = keras.optimizers.Adam(learning_rate=0.005)

# Compile the model
model.compile(loss=\"mse\", optimizer=optimizer)

# Train the model
history = model.fit(
    X_train,
    y_train,
    epochs=20,
    validation_data=(X_valid, y_valid),
)


model.evaluate(X_valid, y_valid)

plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()


y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

# Deep RNN 
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 1018 1023 (fontified t) 1023 1025 (fontified t face font-lock-comment-delimiter-face) 1025 1108 (fontified t face font-lock-comment-face) 1108 1112 (fontified t) 1112 1114 (fontified t face font-lock-comment-delimiter-face) 1114 1197 (fontified t face font-lock-comment-face) 1197 1201 (fontified t) 1201 1207 (fontified t face font-lock-variable-name-face) 1207 1223 (fontified t) 1223 1224 (fontified t face (rainbow-delimiters-depth-1-face)) 1224 1225 (fontified t face (rainbow-delimiters-depth-2-face)) 1225 1240 (fontified t) 1240 1241 (fontified t face (rainbow-delimiters-depth-2-face)) 1241 1244 (fontified t) 1244 1245 (fontified t face (rainbow-delimiters-depth-2-face)) 1245 1260 (fontified t) 1260 1261 (fontified t face (rainbow-delimiters-depth-2-face)) 1261 1262 (fontified t face (rainbow-delimiters-depth-1-face)) 1262 1264 (fontified t) 1264 1266 (fontified t face font-lock-comment-delimiter-face) 1266 1275 (fontified t face font-lock-comment-face) 1275 1280 (fontified t) 1280 1282 (fontified t face font-lock-comment-delimiter-face) 1282 1374 (fontified t face font-lock-comment-face) 1374 1378 (fontified t) 1378 1384 (fontified t face font-lock-variable-name-face) 1384 1394 (fontified t) 1394 1395 (fontified t face (rainbow-delimiters-depth-1-face)) 1395 1409 (fontified t) 1409 1410 (fontified t face (rainbow-delimiters-depth-2-face)) 1410 1429 (fontified t) 1429 1430 (fontified t face (rainbow-delimiters-depth-2-face)) 1430 1436 (fontified t) 1436 1437 (fontified t face (rainbow-delimiters-depth-1-face)) 1437 1439 (fontified t) 1439 1441 (fontified t face font-lock-comment-delimiter-face) 1441 1449 (fontified t face font-lock-comment-face) 1449 1454 (fontified t) 1454 1456 (fontified t face font-lock-comment-delimiter-face) 1456 1518 (fontified t face font-lock-comment-face) 1518 1524 (face font-lock-comment-face fontified t) 1524 1528 (fontified t) 1528 1530 (fontified t face font-lock-comment-delimiter-face) 1530 1570 (fontified t face font-lock-comment-face) 1570 1574 (fontified t) 1574 1580 (fontified t face font-lock-keyword-face) 1580 1587 (fontified t) 1587 1588 (fontified t face (rainbow-delimiters-depth-1-face)) 1588 1603 (fontified t) 1603 1604 (fontified t face (rainbow-delimiters-depth-1-face)) 1604 1611 (fontified t) 1611 1612 (fontified t face (rainbow-delimiters-depth-1-face)) 1612 1622 (fontified t) 1622 1623 (fontified t face (rainbow-delimiters-depth-1-face)) 1623 1625 (fontified t) 1625 1626 (fontified t) 1626 1629 (fontified t face font-lock-keyword-face) 1629 1630 (fontified t) 1630 1641 (fontified t face font-lock-function-name-face) 1641 1642 (fontified t face (rainbow-delimiters-depth-1-face)) 1642 1657 (fontified t) 1657 1661 (fontified t face font-lock-constant-face) 1661 1670 (fontified t) 1670 1674 (fontified t face font-lock-constant-face) 1674 1684 (fontified t) 1684 1689 (fontified t face font-lock-string-face) 1689 1699 (fontified t) 1699 1707 (fontified t face font-lock-string-face) 1707 1716 (fontified t) 1716 1720 (fontified t face font-lock-constant-face) 1720 1721 (fontified t) 1721 1722 (fontified t face (rainbow-delimiters-depth-1-face)) 1722 1728 (fontified t) 1728 1730 (fontified t face font-lock-comment-delimiter-face) 1730 1746 (fontified t face font-lock-comment-face) 1746 1758 (fontified t) 1758 1759 (fontified t face (rainbow-delimiters-depth-1-face)) 1759 1767 (fontified t) 1767 1771 (fontified t face font-lock-string-face) 1771 1772 (fontified t face (rainbow-delimiters-depth-1-face)) 1772 1778 (fontified t) 1778 1780 (fontified t face font-lock-comment-delimiter-face) 1780 1815 (fontified t face font-lock-comment-face) 1815 1819 (fontified t) 1819 1821 (fontified t face font-lock-keyword-face) 1821 1824 (fontified t) 1824 1826 (fontified t face font-lock-keyword-face) 1826 1827 (fontified t) 1827 1830 (fontified t face font-lock-keyword-face) 1830 1831 (fontified t) 1831 1835 (fontified t face font-lock-constant-face) 1835 1853 (fontified t) 1853 1854 (fontified t face (rainbow-delimiters-depth-1-face)) 1854 1866 (fontified t) 1866 1870 (fontified t face font-lock-string-face) 1870 1878 (fontified t) 1878 1886 (fontified t face font-lock-string-face) 1886 1887 (fontified t face (rainbow-delimiters-depth-1-face)) 1887 1893 (fontified t) 1893 1895 (fontified t face font-lock-comment-delimiter-face) 1895 1933 (fontified t face font-lock-comment-face) 1933 1937 (fontified t) 1937 1939 (fontified t face font-lock-keyword-face) 1939 1947 (fontified t) 1947 1949 (fontified t face font-lock-keyword-face) 1949 1950 (fontified t) 1950 1953 (fontified t face font-lock-keyword-face) 1953 1954 (fontified t) 1954 1958 (fontified t face font-lock-constant-face) 1958 1976 (fontified t) 1976 1977 (fontified t face (rainbow-delimiters-depth-1-face)) 1977 1994 (fontified t) 1994 1998 (fontified t face font-lock-string-face) 1998 2021 (fontified t) 2021 2033 (fontified t face font-lock-string-face) 2033 2034 (fontified t face (rainbow-delimiters-depth-1-face)) 2034 2040 (fontified t) 2040 2042 (fontified t face font-lock-comment-delimiter-face) 2042 2072 (fontified t face font-lock-comment-face) 2072 2084 (fontified t) 2084 2085 (fontified t face (rainbow-delimiters-depth-1-face)) 2085 2089 (fontified t face font-lock-constant-face) 2089 2090 (fontified t face (rainbow-delimiters-depth-1-face)) 2090 2096 (fontified t) 2096 2098 (fontified t face font-lock-comment-delimiter-face) 2098 2125 (fontified t face font-lock-comment-face) 2125 2131 (face font-lock-comment-face fontified t) 2131 2135 (fontified t) 2135 2137 (fontified t face font-lock-keyword-face) 2137 2165 (fontified t) 2165 2166 (fontified t face (rainbow-delimiters-depth-1-face)) 2166 2186 (fontified t) 2186 2187 (fontified t face (rainbow-delimiters-depth-1-face)) 2187 2193 (fontified t) 2193 2195 (fontified t face font-lock-comment-delimiter-face) 2195 2228 (fontified t face font-lock-comment-face) 2228 2232 (fontified t) 2232 2234 (fontified t face font-lock-keyword-face) 2234 2262 (fontified t) 2262 2263 (fontified t face (rainbow-delimiters-depth-1-face)) 2263 2295 (fontified t) 2295 2296 (fontified t face (rainbow-delimiters-depth-1-face)) 2296 2302 (fontified t) 2302 2304 (fontified t face font-lock-comment-delimiter-face) 2304 2333 (fontified t face font-lock-comment-face) 2333 2347 (fontified t) 2347 2348 (fontified t face (rainbow-delimiters-depth-1-face)) 2348 2370 (fontified t) 2370 2371 (fontified t face (rainbow-delimiters-depth-1-face)) 2371 2377 (fontified t) 2377 2379 (fontified t face font-lock-comment-delimiter-face) 2379 2412 (fontified t face font-lock-comment-face) 2412 2424 (fontified t) 2424 2425 (fontified t face (rainbow-delimiters-depth-1-face)) 2425 2426 (fontified t face (rainbow-delimiters-depth-2-face)) 2426 2447 (fontified t) 2447 2448 (fontified t face (rainbow-delimiters-depth-2-face)) 2448 2449 (fontified t face (rainbow-delimiters-depth-1-face)) 2449 2455 (fontified t) 2455 2457 (fontified t face font-lock-comment-delimiter-face) 2457 2523 (fontified t face font-lock-comment-face) 2523 2527 (fontified t) 2527 2529 (fontified t face font-lock-keyword-face) 2529 2537 (fontified t) 2537 2540 (fontified t face font-lock-keyword-face) 2540 2541 (fontified t) 2541 2542 (fontified t face (rainbow-delimiters-depth-1-face)) 2542 2544 (fontified t) 2544 2546 (fontified t face font-lock-keyword-face) 2546 2553 (fontified t) 2553 2554 (fontified t face (rainbow-delimiters-depth-1-face)) 2554 2574 (fontified t) 2574 2575 (fontified t face (rainbow-delimiters-depth-1-face)) 2575 2592 (fontified t) 2592 2604 (fontified t face font-lock-string-face) 2604 2605 (fontified t face (rainbow-delimiters-depth-1-face)) 2605 2608 (fontified t) 2608 2611 (fontified t face font-lock-keyword-face) 2611 2612 (fontified t) 2612 2632 (fontified t face font-lock-function-name-face) 2632 2633 (fontified t face (rainbow-delimiters-depth-1-face)) 2633 2647 (fontified t) 2647 2648 (fontified t face (rainbow-delimiters-depth-1-face)) 2648 2654 (fontified t) 2654 2655 (syntax-table (15) fontified t face font-lock-doc-face) 2655 2721 (fontified t face font-lock-doc-face) 2721 2830 (fontified t face font-lock-doc-face) 2830 2831 (syntax-table (15) fontified t face font-lock-doc-face) 2831 2836 (fontified t) 2836 2838 (fontified t face font-lock-comment-delimiter-face) 2838 2867 (fontified t face font-lock-comment-face) 2867 2879 (fontified t) 2879 2880 (fontified t face (rainbow-delimiters-depth-1-face)) 2880 2889 (fontified t) 2889 2890 (fontified t face (rainbow-delimiters-depth-2-face)) 2890 2893 (fontified t face font-lock-builtin-face) 2893 2894 (fontified t face (rainbow-delimiters-depth-3-face)) 2894 2898 (fontified t) 2898 2899 (fontified t face (rainbow-delimiters-depth-3-face)) 2899 2900 (fontified t face (rainbow-delimiters-depth-2-face)) 2900 2914 (fontified t) 2914 2919 (fontified t face font-lock-string-face) 2919 2927 (fontified t) 2927 2942 (fontified t face font-lock-string-face) 2942 2943 (fontified t face (rainbow-delimiters-depth-1-face)) 2943 2949 (fontified t) 2949 2951 (fontified t face font-lock-comment-delimiter-face) 2951 2982 (fontified t face font-lock-comment-face) 2982 2994 (fontified t) 2994 2995 (fontified t face (rainbow-delimiters-depth-1-face)) 2995 3004 (fontified t) 3004 3005 (fontified t face (rainbow-delimiters-depth-2-face)) 3005 3008 (fontified t face font-lock-builtin-face) 3008 3009 (fontified t face (rainbow-delimiters-depth-3-face)) 3009 3017 (fontified t) 3017 3018 (fontified t face (rainbow-delimiters-depth-3-face)) 3018 3019 (fontified t face (rainbow-delimiters-depth-2-face)) 3019 3035 (fontified t) 3035 3040 (fontified t face font-lock-string-face) 3040 3048 (fontified t) 3048 3065 (fontified t face font-lock-string-face) 3065 3066 (fontified t face (rainbow-delimiters-depth-1-face)) 3066 3072 (fontified t) 3072 3074 (fontified t face font-lock-comment-delimiter-face) 3074 3114 (fontified t face font-lock-comment-face) 3114 3125 (fontified t) 3125 3126 (fontified t face (rainbow-delimiters-depth-1-face)) 3126 3127 (fontified t face (rainbow-delimiters-depth-1-face)) 3127 3151 (fontified t) 3151 3152 (fontified t face (rainbow-delimiters-depth-1-face)) 3152 3174 (fontified t) 3174 3175 (fontified t face (rainbow-delimiters-depth-2-face)) 3175 3183 (fontified t) 3183 3187 (fontified t face font-lock-constant-face) 3187 3188 (fontified t face (rainbow-delimiters-depth-2-face)) 3188 3189 (fontified t face (rainbow-delimiters-depth-1-face)) 3189 3191 (fontified t) 3191 3195 (fontified t) 3195 3197 (fontified t face font-lock-comment-delimiter-face) 3197 3230 (fontified t face font-lock-comment-face) 3230 3242 (fontified t) 3242 3243 (fontified t face (rainbow-delimiters-depth-1-face)) 3243 3244 (fontified t face (rainbow-delimiters-depth-2-face)) 3244 3258 (fontified t) 3258 3259 (fontified t face (rainbow-delimiters-depth-2-face)) 3259 3260 (fontified t face (rainbow-delimiters-depth-1-face)) 3260 3266 (fontified t) 3266 3268 (fontified t face font-lock-comment-delimiter-face) 3268 3293 (fontified t face font-lock-comment-face) 3293 3307 (fontified t) 3307 3308 (fontified t face (rainbow-delimiters-depth-1-face)) 3308 3319 (fontified t) 3319 3320 (fontified t face (rainbow-delimiters-depth-1-face)) 3320 3326 (fontified t) 3326 3328 (fontified t face font-lock-comment-delimiter-face) 3328 3349 (fontified t face font-lock-comment-face) 3349 3363 (fontified t) 3363 3364 (fontified t face (rainbow-delimiters-depth-1-face)) 3364 3372 (fontified t face font-lock-string-face) 3372 3373 (fontified t face (rainbow-delimiters-depth-1-face)) 3373 3375 (fontified t) 3375 3379 (fontified t) 3379 3381 (fontified t face font-lock-comment-delimiter-face) 3381 3402 (fontified t face font-lock-comment-face) 3402 3416 (fontified t) 3416 3417 (fontified t face (rainbow-delimiters-depth-1-face)) 3417 3423 (fontified t face font-lock-string-face) 3423 3424 (fontified t face (rainbow-delimiters-depth-1-face)) 3424 3430 (fontified t) 3430 3432 (fontified t face font-lock-comment-delimiter-face) 3432 3462 (fontified t face font-lock-comment-face) 3462 3474 (fontified t) 3474 3475 (fontified t face (rainbow-delimiters-depth-1-face)) 3475 3479 (fontified t face font-lock-constant-face) 3479 3480 (fontified t face (rainbow-delimiters-depth-1-face)) 3480 3483 (fontified t) 3483 3562 (fontified t face font-lock-comment-delimiter-face) 3562 3563 (fontified t face font-lock-comment-face) 3563 3570 (fontified t face font-lock-variable-name-face) 3570 3576 (fontified t) 3576 3582 (fontified t face font-lock-variable-name-face) 3582 3605 (fontified t) 3605 3606 (fontified t face (rainbow-delimiters-depth-1-face)) 3606 3624 (fontified t) 3624 3625 (fontified t face (rainbow-delimiters-depth-1-face)) 3625 3627 (fontified t) 3627 3706 (fontified t face font-lock-comment-delimiter-face) 3706 3707 (fontified t face font-lock-comment-face) 3707 3709 (fontified t face font-lock-comment-delimiter-face) 3709 3730 (fontified t face font-lock-comment-face) 3730 3737 (fontified t face font-lock-variable-name-face) 3737 3739 (fontified t) 3739 3746 (fontified t face font-lock-variable-name-face) 3746 3755 (fontified t) 3755 3756 (fontified t face (rainbow-delimiters-depth-1-face)) 3756 3771 (fontified t) 3771 3772 (fontified t face (rainbow-delimiters-depth-1-face)) 3772 3780 (fontified t) 3780 3781 (fontified t face (rainbow-delimiters-depth-1-face)) 3781 3790 (fontified t) 3790 3791 (fontified t face (rainbow-delimiters-depth-1-face)) 3791 3792 (fontified t) 3792 3799 (fontified t face font-lock-variable-name-face) 3799 3801 (fontified t) 3801 3808 (fontified t face font-lock-variable-name-face) 3808 3817 (fontified t) 3817 3818 (fontified t face (rainbow-delimiters-depth-1-face)) 3818 3837 (fontified t) 3837 3838 (fontified t face (rainbow-delimiters-depth-1-face)) 3838 3846 (fontified t) 3846 3847 (fontified t face (rainbow-delimiters-depth-1-face)) 3847 3860 (fontified t) 3860 3861 (fontified t face (rainbow-delimiters-depth-1-face)) 3861 3862 (fontified t) 3862 3868 (fontified t face font-lock-variable-name-face) 3868 3870 (fontified t) 3870 3875 (fontified t face font-lock-variable-name-face) 3875 3876 (face font-lock-variable-name-face fontified t) 3876 3885 (fontified t) 3885 3886 (face (rainbow-delimiters-depth-1-face) fontified t) 3886 3901 (fontified t) 3901 3902 (face (rainbow-delimiters-depth-1-face) fontified t) 3902 3910 (fontified t) 3910 3911 (face (rainbow-delimiters-depth-1-face) fontified t) 3911 3920 (fontified t) 3920 3921 (face (rainbow-delimiters-depth-1-face) fontified t) 3921 3922 (fontified t) 3922 3927 (fontified t face font-lock-keyword-face) 3927 3928 (fontified t face (rainbow-delimiters-depth-1-face)) 3928 3956 (fontified t) 3956 3957 (fontified t face (rainbow-delimiters-depth-1-face)) 3957 3959 (fontified t) 3959 4038 (fontified t face font-lock-comment-delimiter-face) 4038 4039 (fontified t face font-lock-comment-face) 4039 4040 (fontified t face font-lock-comment-delimiter-face) 4040 4041 (fontified t face font-lock-comment-face) 4041 4044 (fontified t face font-lock-variable-name-face) 4044 4046 (fontified t) 4046 4050 (fontified t face font-lock-variable-name-face) 4050 4065 (fontified t) 4065 4066 (fontified t face (rainbow-delimiters-depth-1-face)) 4066 4091 (fontified t) 4091 4095 (fontified t face font-lock-constant-face) 4095 4105 (fontified t) 4105 4106 (fontified t face (rainbow-delimiters-depth-2-face)) 4106 4111 (fontified t) 4111 4112 (fontified t face (rainbow-delimiters-depth-2-face)) 4112 4113 (fontified t face (rainbow-delimiters-depth-1-face)) 4113 4114 (fontified t) 4114 4117 (fontified t face font-lock-keyword-face) 4117 4122 (fontified t) 4122 4124 (fontified t face font-lock-keyword-face) 4124 4125 (fontified t) 4125 4130 (fontified t face font-lock-builtin-face) 4130 4131 (fontified t face (rainbow-delimiters-depth-1-face)) 4131 4132 (fontified t) 4132 4133 (fontified t face (rainbow-delimiters-depth-1-face)) 4133 4146 (fontified t) 4146 4147 (fontified t face (rainbow-delimiters-depth-1-face)) 4147 4151 (fontified t) 4151 4152 (fontified t face (rainbow-delimiters-depth-2-face)) 4152 4155 (fontified t) 4155 4156 (fontified t face (rainbow-delimiters-depth-2-face)) 4156 4157 (fontified t face (rainbow-delimiters-depth-1-face)) 4157 4173 (fontified t) 4173 4174 (fontified t face (rainbow-delimiters-depth-1-face)) 4174 4190 (fontified t) 4190 4191 (fontified t face (rainbow-delimiters-depth-2-face)) 4191 4200 (fontified t) 4200 4201 (fontified t face (rainbow-delimiters-depth-2-face)) 4201 4218 (fontified t) 4218 4219 (fontified t face (rainbow-delimiters-depth-2-face)) 4219 4225 (fontified t) 4225 4226 (fontified t face (rainbow-delimiters-depth-2-face)) 4226 4228 (fontified t) 4228 4244 (fontified t) 4244 4245 (fontified t face (rainbow-delimiters-depth-2-face)) 4245 4253 (fontified t face font-lock-string-face) 4253 4254 (fontified t) 4254 4256 (fontified t face font-lock-keyword-face) 4256 4266 (fontified t) 4266 4270 (fontified t face font-lock-keyword-face) 4270 4271 (fontified t) 4271 4275 (fontified t face font-lock-constant-face) 4275 4276 (fontified t face (rainbow-delimiters-depth-2-face)) 4276 4293 (fontified t) 4293 4294 (fontified t face (rainbow-delimiters-depth-2-face)) 4294 4302 (fontified t) 4302 4303 (fontified t face (rainbow-delimiters-depth-2-face)) 4303 4309 (fontified t) 4309 4310 (fontified t face (rainbow-delimiters-depth-1-face)) 4310 4319 (fontified t) 4319 4320 (fontified t face (rainbow-delimiters-depth-1-face)) 4320 4321 (fontified t face (rainbow-delimiters-depth-1-face)) 4321 4323 (fontified t) 4323 4329 (fontified t face font-lock-variable-name-face) 4329 4339 (fontified t) 4339 4340 (fontified t face (rainbow-delimiters-depth-1-face)) 4340 4345 (fontified t) 4345 4346 (fontified t face (rainbow-delimiters-depth-1-face)) 4346 4354 (fontified t) 4354 4355 (fontified t face (rainbow-delimiters-depth-1-face)) 4355 4386 (fontified t) 4386 4387 (fontified t face (rainbow-delimiters-depth-2-face)) 4387 4402 (fontified t) 4402 4403 (fontified t face (rainbow-delimiters-depth-2-face)) 4403 4404 (fontified t face (rainbow-delimiters-depth-1-face)) 4404 4406 (fontified t) 4406 4485 (fontified t face font-lock-comment-delimiter-face) 4485 4486 (fontified t face font-lock-comment-face) 4486 4497 (fontified t) 4497 4498 (fontified t face (rainbow-delimiters-depth-1-face)) 4498 4505 (fontified t) 4505 4506 (fontified t face (rainbow-delimiters-depth-2-face)) 4506 4513 (fontified t) 4513 4514 (fontified t face (rainbow-delimiters-depth-2-face)) 4514 4523 (fontified t) 4523 4524 (fontified t face (rainbow-delimiters-depth-2-face)) 4524 4528 (fontified t) 4528 4529 (fontified t face (rainbow-delimiters-depth-2-face)) 4529 4537 (fontified t) 4537 4538 (fontified t face (rainbow-delimiters-depth-2-face)) 4538 4542 (fontified t) 4542 4543 (fontified t face (rainbow-delimiters-depth-2-face)) 4543 4544 (fontified t face (rainbow-delimiters-depth-1-face)) 4544 4553 (fontified t) 4553 4554 (fontified t face (rainbow-delimiters-depth-1-face)) 4554 4555 (fontified t face (rainbow-delimiters-depth-1-face)) 4555 4557 (fontified t) 4557 4636 (fontified t face font-lock-comment-delimiter-face) 4636 4637 (fontified t face font-lock-comment-face) 4637 4638 (fontified t) 4638 4643 (fontified t face font-lock-variable-name-face) 4643 4669 (fontified t) 4669 4670 (fontified t face (rainbow-delimiters-depth-1-face)) 4670 4675 (fontified t) 4675 4676 (fontified t face (rainbow-delimiters-depth-2-face)) 4676 4685 (fontified t) 4685 4687 (fontified t face font-lock-comment-delimiter-face) 4687 4728 (fontified t face font-lock-comment-face) 4728 4764 (face font-lock-comment-face fontified t) 4764 4792 (fontified t) 4792 4793 (fontified t face (rainbow-delimiters-depth-3-face)) 4793 4805 (fontified t) 4805 4806 (fontified t face (rainbow-delimiters-depth-4-face)) 4806 4811 (fontified t) 4811 4812 (fontified t face (rainbow-delimiters-depth-4-face)) 4812 4813 (fontified t face (rainbow-delimiters-depth-3-face)) 4813 4823 (fontified t) 4823 4825 (fontified t face font-lock-comment-delimiter-face) 4825 4885 (fontified t face font-lock-comment-face) 4885 4911 (fontified t) 4911 4912 (fontified t face (rainbow-delimiters-depth-3-face)) 4912 4913 (fontified t) 4913 4914 (fontified t face (rainbow-delimiters-depth-3-face)) 4914 4920 (fontified t) 4920 4921 (fontified t face (rainbow-delimiters-depth-2-face)) 4921 4922 (fontified t) 4922 4923 (fontified t face (rainbow-delimiters-depth-1-face)) 4923 4924 (fontified t) 4924 4925 (fontified t) 4925 4927 (fontified t face font-lock-comment-delimiter-face) 4927 4945 (fontified t face font-lock-comment-face) 4945 4951 (fontified t) 4951 4958 (fontified t face font-lock-builtin-face) 4958 4959 (fontified t face (rainbow-delimiters-depth-1-face)) 4959 4964 (fontified t) 4964 4969 (fontified t face font-lock-string-face) 4969 4981 (fontified t) 4981 4987 (fontified t face font-lock-string-face) 4987 4988 (fontified t face (rainbow-delimiters-depth-1-face)) 4988 4990 (fontified t) 4990 4992 (fontified t face font-lock-comment-delimiter-face) 4992 5008 (fontified t face font-lock-comment-face) 5008 5015 (fontified t face font-lock-variable-name-face) 5015 5027 (fontified t) 5027 5028 (fontified t face (rainbow-delimiters-depth-1-face)) 5028 5073 (fontified t) 5073 5074 (fontified t face (rainbow-delimiters-depth-2-face)) 5074 5090 (fontified t) 5090 5091 (fontified t face (rainbow-delimiters-depth-2-face)) 5091 5092 (fontified t face (rainbow-delimiters-depth-1-face)) 5092 5094 (fontified t) 5094 5096 (fontified t face font-lock-comment-delimiter-face) 5096 5137 (fontified t face font-lock-comment-face) 5137 5151 (fontified t) 5151 5152 (fontified t face (rainbow-delimiters-depth-1-face)) 5152 5168 (fontified t) 5168 5169 (fontified t face (rainbow-delimiters-depth-1-face)) 5169 5170 (fontified t) 5170 5249 (fontified t face font-lock-comment-delimiter-face) 5249 5250 (fontified t face font-lock-comment-face) 5250 5251 (fontified t) 5251 5253 (fontified t face font-lock-comment-delimiter-face) 5253 5278 (fontified t face font-lock-comment-face) 5278 5298 (fontified t) 5298 5299 (fontified t face (rainbow-delimiters-depth-1-face)) 5299 5314 (fontified t) 5314 5315 (fontified t face (rainbow-delimiters-depth-2-face)) 5315 5321 (fontified t face font-lock-string-face) 5321 5322 (fontified t face (rainbow-delimiters-depth-2-face)) 5322 5339 (fontified t) 5339 5340 (fontified t face (rainbow-delimiters-depth-2-face)) 5340 5350 (fontified t face font-lock-string-face) 5350 5351 (fontified t face (rainbow-delimiters-depth-2-face)) 5351 5352 (fontified t face (rainbow-delimiters-depth-1-face)) 5352 5361 (fontified t) 5361 5362 (fontified t face (rainbow-delimiters-depth-1-face)) 5362 5363 (fontified t face (rainbow-delimiters-depth-1-face)) 5363 5365 (fontified t) 5365 5367 (fontified t face font-lock-comment-delimiter-face) 5367 5406 (fontified t face font-lock-comment-face) 5406 5412 (fontified t face font-lock-variable-name-face) 5412 5424 (fontified t) 5424 5428 (fontified t) 5428 5429 (face (rainbow-delimiters-depth-1-face) fontified t) 5429 5436 (fontified t) 5436 5437 (face (rainbow-delimiters-depth-1-face) fontified t) 5437 5438 (fontified t) 5438 5439 (fontified t) 5439 5441 (fontified t face font-lock-comment-delimiter-face) 5441 5457 (fontified t face font-lock-comment-face) 5457 5468 (fontified t) 5468 5469 (fontified t face (rainbow-delimiters-depth-1-face)) 5469 5476 (fontified t) 5476 5477 (fontified t face (rainbow-delimiters-depth-2-face)) 5477 5484 (fontified t) 5484 5485 (fontified t face (rainbow-delimiters-depth-2-face)) 5485 5494 (fontified t) 5494 5495 (fontified t face (rainbow-delimiters-depth-2-face)) 5495 5499 (fontified t) 5499 5500 (fontified t face (rainbow-delimiters-depth-2-face)) 5500 5508 (fontified t) 5508 5509 (fontified t face (rainbow-delimiters-depth-2-face)) 5509 5513 (fontified t) 5513 5514 (fontified t face (rainbow-delimiters-depth-2-face)) 5514 5515 (fontified t face (rainbow-delimiters-depth-1-face)) 5515 5524 (fontified t) 5524 5525 (fontified t face (rainbow-delimiters-depth-1-face)) 5525 5526 (fontified t face (rainbow-delimiters-depth-1-face)) 5526 5528 (fontified t) 5528 5529 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5529 5530 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5530 5531 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5531 5532 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5532 5533 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5533 5534 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5534 5535 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5535 5536 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5536 5537 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5537 5538 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5538 5539 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5539 5540 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5540 5541 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5541 5542 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5542 5543 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5543 5544 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5544 5545 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5545 5546 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5546 5547 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5547 5548 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5548 5549 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5549 5550 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5550 5551 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5551 5552 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5552 5553 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5553 5554 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5554 5555 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5555 5556 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5556 5557 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5557 5558 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5558 5559 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5559 5560 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5560 5561 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5561 5562 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5562 5563 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5563 5564 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5564 5565 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5565 5566 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5566 5567 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5567 5568 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5568 5569 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5569 5570 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5570 5571 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5571 5572 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5572 5573 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5573 5574 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5574 5575 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5575 5576 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5576 5577 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5577 5578 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5578 5579 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5579 5580 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5580 5581 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5581 5582 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5582 5583 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5583 5584 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5584 5585 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5585 5586 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5586 5587 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5587 5588 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5588 5589 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5589 5590 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5590 5591 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5591 5592 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5592 5593 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5593 5594 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5594 5595 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5595 5596 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5596 5597 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5597 5598 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5598 5599 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5599 5600 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5600 5601 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5601 5602 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5602 5603 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5603 5604 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5604 5605 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5605 5606 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5606 5607 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 5607 5608 (fontified t face font-lock-comment-face) 5608 5609 (fontified t face font-lock-comment-delimiter-face) 5609 5610 (fontified t face font-lock-comment-delimiter-face) 5610 5628 (fontified t face font-lock-comment-face) 5628 5629 (fontified t) 5629 5631 (fontified t face font-lock-comment-delimiter-face) 5631 5661 (fontified t face font-lock-comment-face) 5661 5666 (fontified t face font-lock-variable-name-face) 5666 5692 (fontified t) 5692 5693 (fontified t face (rainbow-delimiters-depth-1-face)) 5693 5698 (fontified t) 5698 5699 (fontified t face (rainbow-delimiters-depth-2-face)) 5699 5730 (fontified t) 5730 5731 (fontified t face (rainbow-delimiters-depth-3-face)) 5731 5746 (fontified t) 5746 5747 (fontified t face (rainbow-delimiters-depth-4-face)) 5747 5751 (fontified t face font-lock-constant-face) 5751 5754 (fontified t) 5754 5755 (fontified t face (rainbow-delimiters-depth-4-face)) 5755 5756 (fontified t face (rainbow-delimiters-depth-3-face)) 5756 5762 (fontified t) 5762 5763 (fontified t face (rainbow-delimiters-depth-2-face)) 5763 5765 (fontified t) 5765 5766 (fontified t face (rainbow-delimiters-depth-1-face)) 5766 5768 (fontified t) 5768 5770 (fontified t face font-lock-comment-delimiter-face) 5770 5821 (fontified t face font-lock-comment-face) 5821 5830 (fontified t face font-lock-variable-name-face) 5830 5854 (fontified t) 5854 5855 (fontified t face (rainbow-delimiters-depth-1-face)) 5855 5874 (fontified t) 5874 5875 (fontified t face (rainbow-delimiters-depth-1-face)) 5875 5876 (fontified t) 5876 5877 (fontified t) 5877 5879 (fontified t face font-lock-comment-delimiter-face) 5879 5897 (fontified t face font-lock-comment-face) 5897 5903 (fontified t) 5903 5910 (fontified t face font-lock-builtin-face) 5910 5911 (fontified t face (rainbow-delimiters-depth-1-face)) 5911 5916 (fontified t) 5916 5921 (fontified t face font-lock-string-face) 5921 5942 (fontified t) 5942 5943 (fontified t face (rainbow-delimiters-depth-1-face)) 5943 5945 (fontified t) 5945 5947 (fontified t face font-lock-comment-delimiter-face) 5947 5963 (fontified t face font-lock-comment-face) 5963 5970 (fontified t face font-lock-variable-name-face) 5970 5982 (fontified t) 5982 5983 (fontified t face (rainbow-delimiters-depth-1-face)) 5983 6045 (fontified t) 6045 6046 (fontified t face (rainbow-delimiters-depth-2-face)) 6046 6062 (fontified t) 6062 6063 (fontified t face (rainbow-delimiters-depth-2-face)) 6063 6065 (fontified t) 6065 6066 (fontified t face (rainbow-delimiters-depth-1-face)) 6066 6067 (fontified t) 6067 6068 (fontified t) 6068 6069 (fontified t) 6069 6083 (fontified t) 6083 6084 (fontified t face (rainbow-delimiters-depth-1-face)) 6084 6100 (fontified t) 6100 6101 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face)) 6101 6102 (fontified t) 6102 6103 (fontified t) 6103 6108 (fontified t) 6108 6123 (fontified t) 6123 6124 (face (rainbow-delimiters-depth-1-face) fontified t) 6124 6128 (fontified t) 6128 6139 (fontified t) 6139 6140 (face (rainbow-delimiters-depth-2-face) fontified t) 6140 6146 (face font-lock-string-face fontified t) 6146 6147 (face (rainbow-delimiters-depth-2-face) fontified t) 6147 6164 (fontified t) 6164 6165 (face (rainbow-delimiters-depth-2-face) fontified t) 6165 6175 (face font-lock-string-face fontified t) 6175 6176 (face (rainbow-delimiters-depth-2-face) fontified t) 6176 6177 (face (rainbow-delimiters-depth-1-face) fontified t) 6177 6178 (fontified t) 6178 6186 (fontified t) 6186 6187 (fontified t face (rainbow-delimiters-depth-1-face)) 6187 6188 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face)) 6188 6189 (fontified t) 6189 6190 (fontified t) 6190 6191 (fontified t) 6191 6197 (fontified t face font-lock-variable-name-face) 6197 6213 (fontified t) 6213 6214 (fontified t face (rainbow-delimiters-depth-1-face)) 6214 6221 (fontified t) 6221 6222 (fontified t face (rainbow-delimiters-depth-1-face)) 6222 6234 (fontified t) 6234 6235 (fontified t face (rainbow-delimiters-depth-1-face)) 6235 6242 (fontified t) 6242 6243 (fontified t face (rainbow-delimiters-depth-2-face)) 6243 6250 (fontified t) 6250 6251 (fontified t face (rainbow-delimiters-depth-2-face)) 6251 6260 (fontified t) 6260 6261 (fontified t face (rainbow-delimiters-depth-2-face)) 6261 6265 (fontified t) 6265 6266 (fontified t face (rainbow-delimiters-depth-2-face)) 6266 6274 (fontified t) 6274 6275 (fontified t face (rainbow-delimiters-depth-2-face)) 6275 6279 (fontified t) 6279 6280 (fontified t face (rainbow-delimiters-depth-2-face)) 6280 6281 (fontified t face (rainbow-delimiters-depth-1-face)) 6281 6282 (fontified t) 6282 6290 (fontified t) 6290 6291 (fontified t face (rainbow-delimiters-depth-1-face)) 6291 6292 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 6292 6293 (fontified t) 6293 6294 (fontified t) 6294 6296 (fontified nil face font-lock-comment-delimiter-face) 6296 6305 (fontified nil face font-lock-comment-face) 6305 6306 (fontified nil)) . 1) (undo-tree-id9493 . -6293) (undo-tree-id9494 . -6293) (undo-tree-id9495 . -6178) (undo-tree-id9496 . -6303) (undo-tree-id9497 . -6293) (undo-tree-id9498 . -6189) (undo-tree-id9499 . -6067) (undo-tree-id9500 . -6069) (undo-tree-id9501 . -6103) (undo-tree-id9502 . -6189) (undo-tree-id9503 . -6291) (undo-tree-id9504 . -6291) (undo-tree-id9505 . -6291) (undo-tree-id9506 . -6291) (undo-tree-id9507 . -6291) (undo-tree-id9508 . -6291) (undo-tree-id9509 . -6291) (undo-tree-id9510 . -6291) (undo-tree-id9511 . -6291) (undo-tree-id9512 . -6291) (undo-tree-id9513 . -6291) (undo-tree-id9514 . -6291) (undo-tree-id9515 . -6291) (undo-tree-id9516 . -6291) (undo-tree-id9517 . -6291) (undo-tree-id9518 . -6291) (undo-tree-id9519 . -6291) (undo-tree-id9520 . -6291) (undo-tree-id9521 . -6291) (undo-tree-id9522 . -6291) (undo-tree-id9523 . -6291) (undo-tree-id9524 . -6291) (undo-tree-id9525 . -6291) (undo-tree-id9526 . -6291) (undo-tree-id9527 . -6291) (undo-tree-id9528 . -6291) (undo-tree-id9529 . -6291) (undo-tree-id9530 . -6291) (undo-tree-id9531 . -6291) (undo-tree-id9532 . -6291) (undo-tree-id9533 . -6291) (undo-tree-id9534 . -6291) (undo-tree-id9535 . -6291) (undo-tree-id9536 . -6291) (undo-tree-id9537 . -6291) (undo-tree-id9538 . -6291) (undo-tree-id9539 . -6291) (undo-tree-id9540 . -6291) (undo-tree-id9541 . -6291) (undo-tree-id9542 . -38) (undo-tree-id9543 . -44) (undo-tree-id9544 . -106) (undo-tree-id9545 . -110) (undo-tree-id9546 . -871) (undo-tree-id9547 . -876) (undo-tree-id9548 . -1097) (undo-tree-id9549 . -1101) (undo-tree-id9550 . -1187) (undo-tree-id9551 . -1188) (undo-tree-id9552 . -1355) (undo-tree-id9553 . -1356) (undo-tree-id9554 . -3060) (undo-tree-id9555 . -3064) (undo-tree-id9556 . -4756) (undo-tree-id9557 . -4760) (undo-tree-id9558 . -5083) (undo-tree-id9559 . -5090) (undo-tree-id9560 . -6291) (undo-tree-id9561 . -6291) (undo-tree-id9562 . -1) (undo-tree-id9563 . -38) (undo-tree-id9564 . -44) (undo-tree-id9565 . -106) (undo-tree-id9566 . -110) (undo-tree-id9567 . -106) (undo-tree-id9568 . -110) (undo-tree-id9569 . -563) (undo-tree-id9570 . -570) (undo-tree-id9571 . -526) (undo-tree-id9572 . -529) (undo-tree-id9573 . -947) (undo-tree-id9574 . -953) (undo-tree-id9575 . -1626) (undo-tree-id9576 . -1629) (undo-tree-id9577 . -1626) (undo-tree-id9578 . -1629) (undo-tree-id9579 . -1647) (undo-tree-id9580 . -1653) (undo-tree-id9581 . -1663) (undo-tree-id9582 . -1669) (undo-tree-id9583 . -1655) (undo-tree-id9584 . -1656) (undo-tree-id9585 . -3563) (undo-tree-id9586 . -3570) (undo-tree-id9587 . -5008) (undo-tree-id9588 . -5015) (undo-tree-id9589 . -5963) (undo-tree-id9590 . -5970) (undo-tree-id9591 . -6291) (undo-tree-id9592 . -6291) (undo-tree-id9593 . -6291) (undo-tree-id9594 . -6291) (undo-tree-id9595 . -6291) (undo-tree-id9596 . -6291) (undo-tree-id9597 . -6291) (undo-tree-id9598 . -6291) (undo-tree-id9599 . -6291) (undo-tree-id9600 . -6291) (undo-tree-id9601 . -6291) (undo-tree-id9602 . -6291) (undo-tree-id9603 . -6291) (undo-tree-id9604 . -6291) (undo-tree-id9605 . -6291) (undo-tree-id9606 . -6291) (undo-tree-id9607 . -6291) (undo-tree-id9608 . -6291) (undo-tree-id9609 . -6291) (undo-tree-id9610 . -6291) (undo-tree-id9611 . -6291) (undo-tree-id9612 . -6291) (undo-tree-id9613 . -6291) (undo-tree-id9614 . -6291) (undo-tree-id9615 . -6291) (undo-tree-id9616 . -6291) (undo-tree-id9617 . -6291) (undo-tree-id9618 . -6291) (undo-tree-id9619 . -6291) (undo-tree-id9620 . -6291) (undo-tree-id9621 . -6291) (undo-tree-id9622 . -6291) (undo-tree-id9623 . -6291) (undo-tree-id9624 . -6291) (undo-tree-id9625 . -6293) (undo-tree-id9626 . -6293) (undo-tree-id9627 . -6293) (undo-tree-id9628 . -6293) (undo-tree-id9629 . -6293) (undo-tree-id9630 . -6293) (undo-tree-id9631 . -6293) (undo-tree-id9632 . -6293) (undo-tree-id9633 . -6293) (undo-tree-id9634 . -6293) (undo-tree-id9635 . -6293) (undo-tree-id9636 . -6293) (undo-tree-id9637 . -6293) (undo-tree-id9638 . -6293) (undo-tree-id9639 . -6293) (undo-tree-id9640 . -6293) (undo-tree-id9641 . -6293) (undo-tree-id9642 . -6293) (undo-tree-id9643 . -6293) (undo-tree-id9644 . -6161) (undo-tree-id9645 . -6161) (undo-tree-id9646 . -6161) (undo-tree-id9647 . -6161) (undo-tree-id9648 . -4945) (undo-tree-id9649 . -4945) (undo-tree-id9650 . -4945) (undo-tree-id9651 . -4945) (undo-tree-id9652 . -5278) (undo-tree-id9653 . -5278) (undo-tree-id9654 . -5278) (undo-tree-id9655 . -5278) (undo-tree-id9656 . -5765) (undo-tree-id9657 . -5765) (undo-tree-id9658 . -5765) (undo-tree-id9659 . -5765) (undo-tree-id9660 . -4162) (undo-tree-id9661 . -4162) (undo-tree-id9662 . -4162) (undo-tree-id9663 . -5137) (undo-tree-id9664 . -5137) (undo-tree-id9665 . -5137) (undo-tree-id9666 . -5137) (undo-tree-id9667 . -3406) (undo-tree-id9668 . -3406) (undo-tree-id9669 . -4323) (undo-tree-id9670 . -4323) (undo-tree-id9671 . -4323) (undo-tree-id9672 . -4323) (undo-tree-id9673 . -4323) (undo-tree-id9674 . -4323) (undo-tree-id9675 . -4323) (undo-tree-id9676 . -4228) (undo-tree-id9677 . -4228) (undo-tree-id9678 . -4228) (undo-tree-id9679 . -4228) (undo-tree-id9680 . -3353) (undo-tree-id9681 . -3353) (undo-tree-id9682 . -3959) (undo-tree-id9683 . -2654) (undo-tree-id9684 . -2654) (undo-tree-id9685 . -2654) (undo-tree-id9686 . -2654) (undo-tree-id9687 . -2831) (undo-tree-id9688 . -2654) (undo-tree-id9689 . -2608) (undo-tree-id9690 . -2649) (undo-tree-id9691 . -2608) (undo-tree-id9692 . -2649) (undo-tree-id9693 . -2608) (undo-tree-id9694 . -2608) (undo-tree-id9695 . -2608) (undo-tree-id9696 . -2608) (undo-tree-id9697 . -2608) (undo-tree-id9698 . -2871) (undo-tree-id9699 . -2871) (undo-tree-id9700 . -2871) (undo-tree-id9701 . -2871) (undo-tree-id9702 . -2986) (undo-tree-id9703 . -2986) (undo-tree-id9704 . -2986) (undo-tree-id9705 . -2986) (undo-tree-id9706 . -3541) (undo-tree-id9707 . -2564) (undo-tree-id9708 . -2564) (undo-tree-id9709 . -2654) (undo-tree-id9710 . -2654) (undo-tree-id9711 . -2654) (undo-tree-id9712 . -2654) (undo-tree-id9713 . -2831) (undo-tree-id9714 . -2654) (undo-tree-id9715 . -2608) (undo-tree-id9716 . -2649) (undo-tree-id9717 . -2608) (undo-tree-id9718 . -2649) (undo-tree-id9719 . -2608) (undo-tree-id9720 . -2608) (undo-tree-id9721 . -2608) (undo-tree-id9722 . -2608) (undo-tree-id9723 . -2608) (undo-tree-id9724 . -3114) (undo-tree-id9725 . -3114) (undo-tree-id9726 . -3114) (undo-tree-id9727 . -3114) (undo-tree-id9728 . -1626) (undo-tree-id9729 . -1626) (undo-tree-id9730 . -1626) (undo-tree-id9731 . -1626) (undo-tree-id9732 . -1626) (undo-tree-id9733 . -1626) (undo-tree-id9734 . -1750) (undo-tree-id9735 . -1750) (undo-tree-id9736 . -1845) (undo-tree-id9737 . -1845) (undo-tree-id9738 . -1845) (undo-tree-id9739 . -1845) (undo-tree-id9740 . -1968) (undo-tree-id9741 . -1968) (undo-tree-id9742 . -1968) (undo-tree-id9743 . -1968) (undo-tree-id9744 . -2450) (undo-tree-id9745 . -2450) (undo-tree-id9746 . -2450) (undo-tree-id9747 . -2450) (undo-tree-id9748 . -1701) (undo-tree-id9749 . -1701) (undo-tree-id9750 . -1701) (undo-tree-id9751 . -1701) (undo-tree-id9752 . -794) (undo-tree-id9753 . -794) (undo-tree-id9754 . -794) (undo-tree-id9755 . -794) (undo-tree-id9756 . -794) (undo-tree-id9757 . -794) (undo-tree-id9758 . -794) (undo-tree-id9759 . -794) (undo-tree-id9760 . -794) (undo-tree-id9761 . -794) (undo-tree-id9762 . -794) (undo-tree-id9763 . -794) (undo-tree-id9764 . -794) (undo-tree-id9765 . -794) (undo-tree-id9766 . -794) (undo-tree-id9767 . -794) (undo-tree-id9768 . -794) (undo-tree-id9769 . -794) (undo-tree-id9770 . -794) (undo-tree-id9771 . -794) (undo-tree-id9772 . -794) (undo-tree-id9773 . -794) (undo-tree-id9774 . -794) (undo-tree-id9775 . -794) (undo-tree-id9776 . -794) (undo-tree-id9777 . -794) (undo-tree-id9778 . -794) (undo-tree-id9779 . -794) (undo-tree-id9780 . -794) (undo-tree-id9781 . -794) (undo-tree-id9782 . -794) (undo-tree-id9783 . -794) (undo-tree-id9784 . -794) (undo-tree-id9785 . -794) (undo-tree-id9786 . -794) (undo-tree-id9787 . -794) (undo-tree-id9788 . -794) (undo-tree-id9789 . -794) (undo-tree-id9790 . -794) (undo-tree-id9791 . -794) (undo-tree-id9792 . -794) (undo-tree-id9793 . -794) (undo-tree-id9794 . -794) (undo-tree-id9795 . -794) (undo-tree-id9796 . -1449) (undo-tree-id9797 . -1449) (undo-tree-id9798 . -1449) (undo-tree-id9799 . -1449) (undo-tree-id9800 . -1449) (undo-tree-id9801 . -1449) (undo-tree-id9802 . -1449) (undo-tree-id9803 . -1449) (undo-tree-id9804 . -1624) (undo-tree-id9805 . -1624) (undo-tree-id9806 . -1624) (undo-tree-id9807 . -1624) (undo-tree-id9808 . -1815) (undo-tree-id9809 . -1815) (undo-tree-id9810 . -1815) (undo-tree-id9811 . -1815) (undo-tree-id9812 . -2189) (undo-tree-id9813 . -2189) (undo-tree-id9814 . -2189) (undo-tree-id9815 . -2189) (undo-tree-id9816 . -2189) (undo-tree-id9817 . -2189) (undo-tree-id9818 . -2189) (undo-tree-id9819 . -2721) (undo-tree-id9820 . -2721) (undo-tree-id9821 . -2721) (undo-tree-id9822 . -2721) (undo-tree-id9823 . -3374) (undo-tree-id9824 . -3374) (undo-tree-id9825 . -3374) (undo-tree-id9826 . -3374) (undo-tree-id9827 . -4135) (undo-tree-id9828 . -4135) (undo-tree-id9829 . -4135) (undo-tree-id9830 . -4135) (undo-tree-id9831 . -5008) (undo-tree-id9832 . -5008) (undo-tree-id9833 . -5008) (undo-tree-id9834 . -5008) (undo-tree-id9835 . -6293) (undo-tree-id9836 . -5997) (undo-tree-id9837 . -5997) (undo-tree-id9838 . -5997) (undo-tree-id9839 . -5997) (undo-tree-id9840 . -5997) (undo-tree-id9841 . -5997) (undo-tree-id9842 . -5997) (undo-tree-id9843 . -5997) (undo-tree-id9844 . -5997) (undo-tree-id9845 . -5997) (undo-tree-id9846 . -6293) (undo-tree-id9847 . -6293) (undo-tree-id9848 . -6293) (undo-tree-id9849 . -6293) (undo-tree-id9850 . -6293) (undo-tree-id9851 . -6293) (undo-tree-id9852 . -6293) (undo-tree-id9853 . -6293) (undo-tree-id9854 . -6293) (undo-tree-id9855 . -6293) (undo-tree-id9856 . -6293) (undo-tree-id9857 . -6293) (undo-tree-id9858 . -6293) (undo-tree-id9859 . -6293) (undo-tree-id9860 . -6293) (undo-tree-id9861 . -6293) (undo-tree-id9862 . -6293) (undo-tree-id9863 . -6293) (undo-tree-id9864 . -6293) (undo-tree-id9865 . -6293) (undo-tree-id9866 . -6293) (undo-tree-id9867 . -6293) (undo-tree-id9868 . -6293) (undo-tree-id9869 . -6293) (undo-tree-id9870 . -6293) (undo-tree-id9871 . -6293) (undo-tree-id9872 . -6293) (undo-tree-id9873 . -6293) (undo-tree-id9874 . -6293) (undo-tree-id9875 . -6293) (undo-tree-id9876 . -6293) (undo-tree-id9877 . -6293) (undo-tree-id9878 . -6293) (undo-tree-id9879 . -6293) (undo-tree-id9880 . -6293) (undo-tree-id9881 . -6293) (undo-tree-id9882 . -6293) (undo-tree-id9883 . -6293) (undo-tree-id9884 . -6293) (undo-tree-id9885 . -6293) (undo-tree-id9886 . -6293) (undo-tree-id9887 . -6293) (undo-tree-id9888 . -6293) (undo-tree-id9889 . -6293) (undo-tree-id9890 . -6293) (undo-tree-id9891 . -6293) (undo-tree-id9892 . -6293) (undo-tree-id9893 . -6293) (undo-tree-id9894 . -6293) (undo-tree-id9895 . -6293) (undo-tree-id9896 . -6293) (undo-tree-id9897 . -6293) (undo-tree-id9898 . -6293) (undo-tree-id9899 . -6293) (undo-tree-id9900 . -6293) (undo-tree-id9901 . -6293) (undo-tree-id9902 . -6293) (undo-tree-id9903 . -6293) (undo-tree-id9904 . -6293) (undo-tree-id9905 . -6293) (undo-tree-id9906 . -6293) (undo-tree-id9907 . -6293) (undo-tree-id9908 . -6293) (undo-tree-id9909 . -6293) (undo-tree-id9910 . -6293) (undo-tree-id9911 . -6293) (undo-tree-id9912 . -6293) (undo-tree-id9913 . -6293) (undo-tree-id9914 . -6293) (undo-tree-id9915 . -6293) (undo-tree-id9916 . -6189) (undo-tree-id9917 . -6189) (undo-tree-id9918 . -6189) (undo-tree-id9919 . -6189) (undo-tree-id9920 . -5944) (undo-tree-id9921 . -5944) (undo-tree-id9922 . -5944) (undo-tree-id9923 . -5944) (undo-tree-id9924 . -5439) (undo-tree-id9925 . -5439) (undo-tree-id9926 . -5439) (undo-tree-id9927 . -5439) (undo-tree-id9928 . -4873) (undo-tree-id9929 . -4873) (undo-tree-id9930 . -4873) (undo-tree-id9931 . -4873) (undo-tree-id9932 . -4873) (undo-tree-id9933 . -4873) (undo-tree-id9934 . -4873) (undo-tree-id9935 . -4873) (undo-tree-id9936 . -4873) (undo-tree-id9937 . -4873) (undo-tree-id9938 . -4873) (undo-tree-id9939 . -4873) (undo-tree-id9940 . -4873) (undo-tree-id9941 . -4873) (undo-tree-id9942 . -4873) (undo-tree-id9943 . -4873) (undo-tree-id9944 . -4873) (undo-tree-id9945 . -4873) (undo-tree-id9946 . -4873) (undo-tree-id9947 . -4873) (undo-tree-id9948 . -4873) (undo-tree-id9949 . -4873) (undo-tree-id9950 . -4873) (undo-tree-id9951 . -4873) (undo-tree-id9952 . -4873) (undo-tree-id9953 . -4873) (undo-tree-id9954 . -4873) (undo-tree-id9955 . -4873) (undo-tree-id9956 . -4873) (undo-tree-id9957 . -4873) (undo-tree-id9958 . -4873) (undo-tree-id9959 . -4873) (undo-tree-id9960 . -4873) (undo-tree-id9961 . -4873) (undo-tree-id9962 . -4873) (undo-tree-id9963 . -4873) (undo-tree-id9964 . -4873) (undo-tree-id9965 . -4873) (undo-tree-id9966 . -4873) (undo-tree-id9967 . -4873) (undo-tree-id9968 . -4873) (undo-tree-id9969 . -4873) (undo-tree-id9970 . -4873) (undo-tree-id9971 . -4873) (undo-tree-id9972 . -4873) (undo-tree-id9973 . -4873) (undo-tree-id9974 . -4873) (undo-tree-id9975 . -4873) (undo-tree-id9976 . -4873) (undo-tree-id9977 . -4873) (undo-tree-id9978 . -4873) (undo-tree-id9979 . -4873) (undo-tree-id9980 . -4873) (undo-tree-id9981 . -4873) (undo-tree-id9982 . -4873) (undo-tree-id9983 . -4873) (undo-tree-id9984 . -4873) (undo-tree-id9985 . -4873) (undo-tree-id9986 . -4873) (undo-tree-id9987 . -4873) (undo-tree-id9988 . -4873) (undo-tree-id9989 . -4873) (undo-tree-id9990 . -4873) (undo-tree-id9991 . -4873) (undo-tree-id9992 . -4873) (undo-tree-id9993 . -4873) (undo-tree-id9994 . -4873) (undo-tree-id9995 . -4873) (undo-tree-id9996 . -4873) (undo-tree-id9997 . -4873) (undo-tree-id9998 . -4873) (undo-tree-id9999 . -4873) (undo-tree-id10000 . -4873) (undo-tree-id10001 . -4873) (undo-tree-id10002 . -4873) (undo-tree-id10003 . -4873) (undo-tree-id10004 . -4873) (undo-tree-id10005 . -4873) (undo-tree-id10006 . -4873) (undo-tree-id10007 . -4873) (undo-tree-id10008 . -4873) (undo-tree-id10009 . -4671) (undo-tree-id10010 . -4671) (undo-tree-id10011 . -4671) (undo-tree-id10012 . -4671) (undo-tree-id10013 . -4405) (undo-tree-id10014 . -4405) (undo-tree-id10015 . -4405) (undo-tree-id10016 . -4405) (undo-tree-id10017 . -4405) (undo-tree-id10018 . -4405) (undo-tree-id10019 . -4405) (undo-tree-id10020 . -4405) (undo-tree-id10021 . -4405) (undo-tree-id10022 . -4405) (undo-tree-id10023 . -4405) (undo-tree-id10024 . -4405) (undo-tree-id10025 . -4405) (undo-tree-id10026 . -4405) (undo-tree-id10027 . -4405) (undo-tree-id10028 . -4405) (undo-tree-id10029 . -4405) (undo-tree-id10030 . -4405) (undo-tree-id10031 . -4405) (undo-tree-id10032 . -4405) (undo-tree-id10033 . -4405) (undo-tree-id10034 . -4405) (undo-tree-id10035 . -4405) (undo-tree-id10036 . -4405) (undo-tree-id10037 . -4405) (undo-tree-id10038 . -4405) (undo-tree-id10039 . -4545) (undo-tree-id10040 . -4545) (undo-tree-id10041 . -4545) (undo-tree-id10042 . -4545) (undo-tree-id10043 . -4815) (undo-tree-id10044 . -4815) (undo-tree-id10045 . -4815) (undo-tree-id10046 . -4815) (undo-tree-id10047 . -4815) (undo-tree-id10048 . -4815) (undo-tree-id10049 . -4815) (undo-tree-id10050 . -4815) (undo-tree-id10051 . -4924) (undo-tree-id10052 . -4924) (undo-tree-id10053 . -4924) (undo-tree-id10054 . -4924) (undo-tree-id10055 . -5170) (undo-tree-id10056 . -5170) (undo-tree-id10057 . -5170) (undo-tree-id10058 . -5170) (undo-tree-id10059 . -5170) (undo-tree-id10060 . -5170) (undo-tree-id10061 . -5170) (undo-tree-id10062 . -5170) (undo-tree-id10063 . -5170) (undo-tree-id10064 . -5170) (undo-tree-id10065 . -5170) (undo-tree-id10066 . -5170) (undo-tree-id10067 . -5170) (undo-tree-id10068 . -5170) (undo-tree-id10069 . -5170) (undo-tree-id10070 . -5170) (undo-tree-id10071 . -5170) (undo-tree-id10072 . -5170) (undo-tree-id10073 . -5170) (undo-tree-id10074 . -5170) (undo-tree-id10075 . -5170) (undo-tree-id10076 . -5170) (undo-tree-id10077 . -5170) (undo-tree-id10078 . -5170) (undo-tree-id10079 . -5170) (undo-tree-id10080 . -5170) (undo-tree-id10081 . -5170) (undo-tree-id10082 . -5170) (undo-tree-id10083 . -5170) (undo-tree-id10084 . -5170) (undo-tree-id10085 . -5170) (undo-tree-id10086 . -5170) (undo-tree-id10087 . -5170) (undo-tree-id10088 . -5170) (undo-tree-id10089 . -5170) (undo-tree-id10090 . -5170) (undo-tree-id10091 . -5170) (undo-tree-id10092 . -5170) (undo-tree-id10093 . -5170) (undo-tree-id10094 . -5170) (undo-tree-id10095 . -5170) (undo-tree-id10096 . -5170) (undo-tree-id10097 . -5170) (undo-tree-id10098 . -5170) (undo-tree-id10099 . -5170) (undo-tree-id10100 . -5170) (undo-tree-id10101 . -5170) (undo-tree-id10102 . -5170) (undo-tree-id10103 . -5170) (undo-tree-id10104 . -5170) (undo-tree-id10105 . -5170) (undo-tree-id10106 . -5170) (undo-tree-id10107 . -5170) (undo-tree-id10108 . -5170) (undo-tree-id10109 . -5170) (undo-tree-id10110 . -5170) (undo-tree-id10111 . -5170) (undo-tree-id10112 . -5170) (undo-tree-id10113 . -5170) (undo-tree-id10114 . -5170) (undo-tree-id10115 . -5170) (undo-tree-id10116 . -5170) (undo-tree-id10117 . -5170) (undo-tree-id10118 . -5170) (undo-tree-id10119 . -5170) (undo-tree-id10120 . -5170) (undo-tree-id10121 . -5170) (undo-tree-id10122 . -5170) (undo-tree-id10123 . -5170) (undo-tree-id10124 . -5170) (undo-tree-id10125 . -5170) (undo-tree-id10126 . -5170) (undo-tree-id10127 . -5170) (undo-tree-id10128 . -5170) (undo-tree-id10129 . -5170) (undo-tree-id10130 . -5170) (undo-tree-id10131 . -5170) (undo-tree-id10132 . -5170) (undo-tree-id10133 . -5170) (undo-tree-id10134 . -5170) (undo-tree-id10135 . -5170) (undo-tree-id10136 . -5170) (undo-tree-id10137 . -5170) (undo-tree-id10138 . -5170) (undo-tree-id10139 . -5170) (undo-tree-id10140 . -5170) (undo-tree-id10141 . -5170) (undo-tree-id10142 . -5170) (undo-tree-id10143 . -5170) (undo-tree-id10144 . -5170) (undo-tree-id10145 . -5170) (undo-tree-id10146 . -5170) (undo-tree-id10147 . -5336) (undo-tree-id10148 . -5336) (undo-tree-id10149 . -5336) (undo-tree-id10150 . -5336) (undo-tree-id10151 . -5528) (undo-tree-id10152 . -5528) (undo-tree-id10153 . -5528) (undo-tree-id10154 . -5528) (undo-tree-id10155 . -5897) (undo-tree-id10156 . -5897) (undo-tree-id10157 . -5897) (undo-tree-id10158 . -5897) (undo-tree-id10159 . -6282) (undo-tree-id10160 . -6282) (undo-tree-id10161 . -6282) (undo-tree-id10162 . -6282) (undo-tree-id10163 . -6282) (undo-tree-id10164 . -6282) (undo-tree-id10165 . -6282) (undo-tree-id10166 . -6282) (undo-tree-id10167 . -6282) (undo-tree-id10168 . -6282) (undo-tree-id10169 . -6282) (undo-tree-id10170 . -6282) (undo-tree-id10171 . -6282) (undo-tree-id10172 . -6282) (undo-tree-id10173 . -6282) (undo-tree-id10174 . -6282) (undo-tree-id10175 . -6282) (undo-tree-id10176 . -6282) (undo-tree-id10177 . -6282) (undo-tree-id10178 . -6282) (undo-tree-id10179 . -6282) (undo-tree-id10180 . -6282) (undo-tree-id10181 . -6282) (undo-tree-id10182 . -6282) (undo-tree-id10183 . -6282) (undo-tree-id10184 . -6282) (undo-tree-id10185 . -6282) (undo-tree-id10186 . -6282) (undo-tree-id10187 . -6282) (undo-tree-id10188 . -6282) (undo-tree-id10189 . -6282) (undo-tree-id10190 . -6282) (undo-tree-id10191 . -6282) (undo-tree-id10192 . -6282) (undo-tree-id10193 . -6282) (undo-tree-id10194 . -6282) (undo-tree-id10195 . -6282) (undo-tree-id10196 . -6282) (undo-tree-id10197 . -6282) (undo-tree-id10198 . -6282) (undo-tree-id10199 . -6282) (undo-tree-id10200 . -6282) (undo-tree-id10201 . -6282) (undo-tree-id10202 . -6282) (undo-tree-id10203 . -6282) (undo-tree-id10204 . -6282) (undo-tree-id10205 . -6282) (undo-tree-id10206 . -6282) (undo-tree-id10207 . -6282) (undo-tree-id10208 . -6282) (undo-tree-id10209 . -6282) (undo-tree-id10210 . -6282) (undo-tree-id10211 . -6282) (undo-tree-id10212 . -6282) (undo-tree-id10213 . -6282) (undo-tree-id10214 . -6282) (undo-tree-id10215 . -6282) (undo-tree-id10216 . -6282) (undo-tree-id10217 . -6282) (undo-tree-id10218 . -6282) (undo-tree-id10219 . -6282) (undo-tree-id10220 . -6282) (undo-tree-id10221 . -6282) (undo-tree-id10222 . -6282) (undo-tree-id10223 . -6282) (undo-tree-id10224 . -6282) (undo-tree-id10225 . -6282) (undo-tree-id10226 . -6282) (undo-tree-id10227 . -6282) (undo-tree-id10228 . -6282) (undo-tree-id10229 . -6282) (undo-tree-id10230 . -6282) (undo-tree-id10231 . -6282) (undo-tree-id10232 . -6282) (undo-tree-id10233 . -6282) (undo-tree-id10234 . -6282) (undo-tree-id10235 . -6282) (undo-tree-id10236 . -6293) (undo-tree-id10237 . -6293) (undo-tree-id10238 . -6293) (undo-tree-id10239 . -6293) (undo-tree-id10240 . -6293) (undo-tree-id10241 . -6293) (undo-tree-id10242 . -6293) (undo-tree-id10243 . -6293) (undo-tree-id10244 . -6293) (undo-tree-id10245 . -6293) (undo-tree-id10246 . -6293) (undo-tree-id10247 . -6293) (undo-tree-id10248 . -6293) (undo-tree-id10249 . -6293) (undo-tree-id10250 . -6293) (undo-tree-id10251 . -6294) (undo-tree-id10252 . -6282) (undo-tree-id10253 . -6282) (undo-tree-id10254 . -6294) (undo-tree-id10255 . -6294) (undo-tree-id10256 . -6294) (undo-tree-id10257 . -38) (undo-tree-id10258 . -44) (undo-tree-id10259 . -106) (undo-tree-id10260 . -110) (undo-tree-id10261 . -871) (undo-tree-id10262 . -876) (undo-tree-id10263 . -1097) (undo-tree-id10264 . -1101) (undo-tree-id10265 . -1187) (undo-tree-id10266 . -1188) (undo-tree-id10267 . -1355) (undo-tree-id10268 . -1356) (undo-tree-id10269 . -3060) (undo-tree-id10270 . -3064) (undo-tree-id10271 . -4756) (undo-tree-id10272 . -4760) (undo-tree-id10273 . -5083) (undo-tree-id10274 . -5090) (undo-tree-id10275 . -6293) (undo-tree-id10276 . -6294) (undo-tree-id10277 . -6294) (undo-tree-id10278 . -6294) (undo-tree-id10279 . -6294) (undo-tree-id10280 . -6294) (undo-tree-id10281 . -6294) (undo-tree-id10282 . -6294) (undo-tree-id10283 . -6294) (undo-tree-id10284 . -6294) (undo-tree-id10285 . -6294) (undo-tree-id10286 . -6294) (undo-tree-id10287 . -6295) (undo-tree-id10288 . -6295) (undo-tree-id10289 . -6296) (undo-tree-id10290 . -6296) (undo-tree-id10291 . -6296) (undo-tree-id10292 . -6296) (undo-tree-id10293 . -6296) (undo-tree-id10294 . -6296) (undo-tree-id10295 . -6296) (undo-tree-id10296 . -6296) (undo-tree-id10297 . -6296) (undo-tree-id10298 . -6297) (undo-tree-id10299 . -6297) (undo-tree-id10300 . -6297) (undo-tree-id10301 . -6297) (undo-tree-id10302 . -6297) (undo-tree-id10303 . -6297) (undo-tree-id10304 . -6298) (undo-tree-id10305 . -6298) (undo-tree-id10306 . -6298) (undo-tree-id10307 . -6299) (undo-tree-id10308 . -6299) (undo-tree-id10309 . -6299) (undo-tree-id10310 . -6300) (undo-tree-id10311 . -6300) (undo-tree-id10312 . -6300) (undo-tree-id10313 . -6300) (undo-tree-id10314 . -6300) (undo-tree-id10315 . -6300) (undo-tree-id10316 . -6301) (undo-tree-id10317 . -6301) (undo-tree-id10318 . -6301) (undo-tree-id10319 . -6301) (undo-tree-id10320 . -6301) (undo-tree-id10321 . -6301) (undo-tree-id10322 . -6301) (undo-tree-id10323 . -6301) (undo-tree-id10324 . -6301) (undo-tree-id10325 . -6301) (undo-tree-id10326 . -6302) (undo-tree-id10327 . -6302) (undo-tree-id10328 . -6302) (undo-tree-id10329 . -6302) (undo-tree-id10330 . -6302) (undo-tree-id10331 . -6302) (undo-tree-id10332 . -6303) (undo-tree-id10333 . -6303) (undo-tree-id10334 . -6303) (undo-tree-id10335 . -6304) (undo-tree-id10336 . -6304) (undo-tree-id10337 . -6304) (undo-tree-id10338 . -6304) (undo-tree-id10339 . -6304) (undo-tree-id10340 . -6304) (undo-tree-id10341 . -6305) (undo-tree-id10342 . -6305) (undo-tree-id10343 . -6305) (undo-tree-id10344 . -6304) (undo-tree-id10345 . -6304) (undo-tree-id10346 . -6294) (undo-tree-id10347 . -6304) (undo-tree-id10348 . -6304) (undo-tree-id10349 . -6304) (undo-tree-id10350 . -6304) (undo-tree-id10351 . -6304) (undo-tree-id10352 . -6304) (undo-tree-id10353 . -6304) (undo-tree-id10354 . -6304) (undo-tree-id10355 . -6304) (undo-tree-id10356 . -6304) (undo-tree-id10357 . -6178) (undo-tree-id10358 . -6304) (undo-tree-id10359 . -6304) (undo-tree-id10360 . -6178) (undo-tree-id10361 . -6304) (undo-tree-id10362 . -6304) (undo-tree-id10363 . -6304) (undo-tree-id10364 . -6304) (undo-tree-id10365 . -6304) (undo-tree-id10366 . -6304) (6306 . 6307)) nil (25759 44184 408069 394000) 0 nil])
([nil nil ((6307 . 6308) (6306 . 6307) (t 25759 44184 431372 212000) 6306) nil (25759 44195 644085 173000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6699 . 6700) (nil fontified nil 6308 . 6700) (6308 . 6700)) nil (25759 44195 644083 137000) 0 nil])
([nil nil ((1 . 6704) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################

model = keras.models.Sequential(
    [
        # Flatten layer to flatten the input shape of [50, 1] to a 1D array of size 50
        keras.layers.Flatten(input_shape=[50, 1]),
        # Dense layer with 1 unit, representing a single output value
        keras.layers.Dense(1),
    ]
)

# Compile the model
model.compile(loss=\"mse\", optimizer=\"adam\")

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

# Evaluate the model on the validation set
model.evaluate(X_valid, y_valid)
###############################################################################

# Plot the learning curves
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

# Make predictions on the validation set
y_pred = model.predict(X_valid)

# Plot the series
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################
# Using a Simpl RNN

# Define the model architecture
model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(1, input_shape=[None, 1]),
    ],
)

# Define the optimizer with a specific learning rate
optimizer = keras.optimizers.Adam(learning_rate=0.005)

# Compile the model
model.compile(loss=\"mse\", optimizer=optimizer)

# Train the model
history = model.fit(
    X_train,
    y_train,
    epochs=20,
    validation_data=(X_valid, y_valid),
)


model.evaluate(X_valid, y_valid)

plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()


y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

# Deep RNN


np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential([
    keras.layers.SimpleRNN(20, return_sequences=True, input_shape=[None, 1]),
    keras.layers.SimpleRNN(20, return_sequences=True),
    keras.layers.SimpleRNN(1)
])

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20,
                    validation_data=(X_valid, y_valid))
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (face font-lock-comment-delimiter-face fontified t) 504 505 (face font-lock-comment-face fontified t) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (face (rainbow-delimiters-depth-2-face) fontified t) 1006 1007 (face (rainbow-delimiters-depth-1-face) fontified t) 1007 1009 (fontified t) 1009 1011 (face font-lock-comment-delimiter-face fontified t) 1011 1018 (face font-lock-comment-face fontified t) 2654 2655 (syntax-table (15)) 2830 2831 (syntax-table (15)) 6178 6186 (fontified t) 6186 6187 (fontified t face (rainbow-delimiters-depth-1-face)) 6187 6188 (fontified t face (rainbow-delimiters-depth-1-face)) 6188 6191 (fontified t) 6191 6197 (fontified t face font-lock-variable-name-face) 6197 6213 (fontified t) 6213 6214 (fontified t face (rainbow-delimiters-depth-1-face)) 6214 6221 (fontified t) 6221 6222 (fontified t face (rainbow-delimiters-depth-1-face)) 6222 6234 (fontified t) 6234 6235 (fontified t face (rainbow-delimiters-depth-1-face)) 6235 6242 (fontified t) 6242 6243 (fontified t face (rainbow-delimiters-depth-2-face)) 6243 6250 (fontified t) 6250 6251 (fontified t face (rainbow-delimiters-depth-2-face)) 6251 6260 (fontified t) 6260 6261 (fontified t face (rainbow-delimiters-depth-2-face)) 6261 6265 (fontified t) 6265 6266 (fontified t face (rainbow-delimiters-depth-2-face)) 6266 6274 (fontified t) 6274 6275 (fontified t face (rainbow-delimiters-depth-2-face)) 6275 6279 (fontified t) 6279 6280 (fontified t face (rainbow-delimiters-depth-2-face)) 6280 6281 (fontified t face (rainbow-delimiters-depth-1-face)) 6281 6290 (fontified t) 6290 6291 (fontified t face (rainbow-delimiters-depth-1-face)) 6291 6292 (fontified t face (rainbow-delimiters-depth-1-face)) 6292 6294 (fontified t) 6294 6296 (fontified t face font-lock-comment-delimiter-face) 6296 6305 (fontified t face font-lock-comment-face) 6305 6306 (fontified t) 6306 6307 (fontified t) 6307 6321 (fontified t) 6321 6322 (fontified t face (rainbow-delimiters-depth-1-face)) 6322 6324 (fontified t) 6324 6325 (fontified t face (rainbow-delimiters-depth-1-face)) 6325 6344 (fontified t) 6344 6345 (fontified t face (rainbow-delimiters-depth-1-face)) 6345 6347 (fontified t) 6347 6348 (fontified t face (rainbow-delimiters-depth-1-face)) 6348 6350 (fontified t) 6350 6355 (fontified t face font-lock-variable-name-face) 6355 6381 (fontified t) 6381 6382 (fontified t face (rainbow-delimiters-depth-1-face)) 6382 6383 (fontified t face (rainbow-delimiters-depth-2-face)) 6383 6410 (fontified t) 6410 6411 (fontified t face (rainbow-delimiters-depth-3-face)) 6411 6432 (fontified t) 6432 6436 (fontified t face font-lock-constant-face) 6436 6450 (fontified t) 6450 6451 (fontified t face (rainbow-delimiters-depth-4-face)) 6451 6455 (fontified t face font-lock-constant-face) 6455 6458 (fontified t) 6458 6459 (fontified t face (rainbow-delimiters-depth-4-face)) 6459 6460 (fontified t face (rainbow-delimiters-depth-3-face)) 6460 6488 (fontified t) 6488 6489 (fontified t face (rainbow-delimiters-depth-3-face)) 6489 6510 (fontified t) 6510 6514 (fontified t face font-lock-constant-face) 6514 6515 (fontified t face (rainbow-delimiters-depth-3-face)) 6515 6543 (fontified t) 6543 6544 (fontified t face (rainbow-delimiters-depth-3-face)) 6544 6545 (fontified t) 6545 6546 (fontified t face (rainbow-delimiters-depth-3-face)) 6546 6547 (fontified t) 6547 6548 (fontified t face (rainbow-delimiters-depth-2-face)) 6548 6549 (fontified t face (rainbow-delimiters-depth-1-face)) 6549 6557 (fontified t) 6557 6564 (fontified t face font-lock-builtin-face) 6564 6565 (fontified t face (rainbow-delimiters-depth-1-face)) 6565 6570 (fontified t) 6570 6575 (fontified t face font-lock-string-face) 6575 6587 (fontified t) 6587 6593 (fontified t face font-lock-string-face) 6593 6594 (fontified t face (rainbow-delimiters-depth-1-face)) 6594 6595 (fontified t) 6595 6602 (fontified t face font-lock-variable-name-face) 6602 6614 (fontified t) 6614 6615 (fontified t face (rainbow-delimiters-depth-1-face)) 6615 6644 (fontified t) 6644 6680 (fontified nil) 6680 6681 (fontified nil face (rainbow-delimiters-depth-2-face)) 6681 6697 (fontified nil) 6697 6698 (fontified nil face (rainbow-delimiters-depth-2-face)) 6698 6699 (fontified nil rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 6699 6700 (fontified nil)) . 1) (undo-tree-id10367 . -6307) (undo-tree-id10368 . -6698) (undo-tree-id10369 . -6307) (undo-tree-id10370 . -6305) (undo-tree-id10371 . -189) (undo-tree-id10372 . -189) (undo-tree-id10373 . -218) (undo-tree-id10374 . -218) (undo-tree-id10375 . -248) (undo-tree-id10376 . -248) (undo-tree-id10377 . -6303) (undo-tree-id10378 . -6303) (undo-tree-id10379 . -6303) (undo-tree-id10380 . -6303) (undo-tree-id10381 . -6303) (undo-tree-id10382 . -6303) (undo-tree-id10383 . -6303) (undo-tree-id10384 . -6303) (undo-tree-id10385 . -6303) (undo-tree-id10386 . -6303) (undo-tree-id10387 . -6303) (undo-tree-id10388 . -6303) (undo-tree-id10389 . -6303) (undo-tree-id10390 . -6303) (undo-tree-id10391 . -6303) (undo-tree-id10392 . -6303) (undo-tree-id10393 . -6303) (undo-tree-id10394 . -6303) (undo-tree-id10395 . -6303) (undo-tree-id10396 . -6303) (undo-tree-id10397 . -6303) (undo-tree-id10398 . -6303) (undo-tree-id10399 . -6303) (undo-tree-id10400 . -6303) (undo-tree-id10401 . -6303) (undo-tree-id10402 . -6303) (undo-tree-id10403 . -6303) (undo-tree-id10404 . -6303) (undo-tree-id10405 . -6303) (undo-tree-id10406 . -1) (undo-tree-id10407 . -38) (undo-tree-id10408 . -44) (undo-tree-id10409 . -106) (undo-tree-id10410 . -110) (undo-tree-id10411 . -106) (undo-tree-id10412 . -110) (undo-tree-id10413 . -563) (undo-tree-id10414 . -570) (undo-tree-id10415 . -526) (undo-tree-id10416 . -529) (undo-tree-id10417 . -947) (undo-tree-id10418 . -953) (undo-tree-id10419 . -1626) (undo-tree-id10420 . -1629) (undo-tree-id10421 . -1626) (undo-tree-id10422 . -1629) (undo-tree-id10423 . -1647) (undo-tree-id10424 . -1653) (undo-tree-id10425 . -1663) (undo-tree-id10426 . -1669) (undo-tree-id10427 . -1655) (undo-tree-id10428 . -1656) (undo-tree-id10429 . -3563) (undo-tree-id10430 . -3570) (undo-tree-id10431 . -5008) (undo-tree-id10432 . -5015) (undo-tree-id10433 . -5963) (undo-tree-id10434 . -5970) (undo-tree-id10435 . -6293) (undo-tree-id10436 . -6294) (undo-tree-id10437 . -6303) (undo-tree-id10438 . -6303) (undo-tree-id10439 . -38) (undo-tree-id10440 . -44) (undo-tree-id10441 . -106) (undo-tree-id10442 . -110) (undo-tree-id10443 . -871) (undo-tree-id10444 . -876) (undo-tree-id10445 . -1097) (undo-tree-id10446 . -1101) (undo-tree-id10447 . -1187) (undo-tree-id10448 . -1188) (undo-tree-id10449 . -1355) (undo-tree-id10450 . -1356) (undo-tree-id10451 . -3060) (undo-tree-id10452 . -3064) (undo-tree-id10453 . -4756) (undo-tree-id10454 . -4760) (undo-tree-id10455 . -5083) (undo-tree-id10456 . -5090) (undo-tree-id10457 . -6303) (undo-tree-id10458 . -6303) (undo-tree-id10459 . -6303) (undo-tree-id10460 . -6303) (undo-tree-id10461 . -6303) (undo-tree-id10462 . -6303) (undo-tree-id10463 . -6303) (undo-tree-id10464 . -6303) (undo-tree-id10465 . -6303) (undo-tree-id10466 . -6303) (undo-tree-id10467 . -6303) (undo-tree-id10468 . -6303) (undo-tree-id10469 . -6303) (undo-tree-id10470 . -6303) (undo-tree-id10471 . -6303) (undo-tree-id10472 . -6303) (undo-tree-id10473 . -6303) (undo-tree-id10474 . -6303) (undo-tree-id10475 . -6305) (undo-tree-id10476 . -6305) (undo-tree-id10477 . -6305) (undo-tree-id10478 . -6305) (undo-tree-id10479 . -6305) (undo-tree-id10480 . -6305) (undo-tree-id10481 . -6305) (undo-tree-id10482 . -6305) (undo-tree-id10483 . -6305) (undo-tree-id10484 . -6305) (undo-tree-id10485 . -6305) (undo-tree-id10486 . -6305) (undo-tree-id10487 . -6305) (undo-tree-id10488 . -6305) (undo-tree-id10489 . -6305) (undo-tree-id10490 . -6305) (undo-tree-id10491 . -6305) (undo-tree-id10492 . -6305) (undo-tree-id10493 . -6305) (undo-tree-id10494 . -6305) (undo-tree-id10495 . -6305) (undo-tree-id10496 . -6306) (undo-tree-id10497 . -6294) (undo-tree-id10498 . -6306) (undo-tree-id10499 . -6306) (undo-tree-id10500 . -6306) (undo-tree-id10501 . -6306) (undo-tree-id10502 . 394) (undo-tree-id10503 . -6307) (undo-tree-id10504 . -6294) (undo-tree-id10505 . -6307) (undo-tree-id10506 . -6307) (undo-tree-id10507 . -6307) (undo-tree-id10508 . -6307) (undo-tree-id10509 . -6307) (undo-tree-id10510 . -6307) (undo-tree-id10511 . -6307) (undo-tree-id10512 . -6307) (undo-tree-id10513 . -6307) (undo-tree-id10514 . -6307) (undo-tree-id10515 . -6307) (undo-tree-id10516 . -6307) (undo-tree-id10517 . -6307) (undo-tree-id10518 . -6307) (undo-tree-id10519 . -6307) (undo-tree-id10520 . -6305) (undo-tree-id10521 . -6644) (undo-tree-id10522 . -6551) (undo-tree-id10523 . -6551) (undo-tree-id10524 . -6551) (undo-tree-id10525 . -6551) (undo-tree-id10526 . -6698) (undo-tree-id10527 . -6698) (undo-tree-id10528 . -6698) (undo-tree-id10529 . -6698) (undo-tree-id10530 . -6698) (undo-tree-id10531 . -6698) (undo-tree-id10532 . -6698) (undo-tree-id10533 . -6178) (undo-tree-id10534 . -6698) (undo-tree-id10535 . -6698) (undo-tree-id10536 . -6178) (undo-tree-id10537 . -6698) (undo-tree-id10538 . -6698) (undo-tree-id10539 . -6698) (undo-tree-id10540 . -6698) (undo-tree-id10541 . -6698) (undo-tree-id10542 . -6698) (6700 . 6701)) nil (25759 44195 644067 541000) 0 nil])
([nil nil ((6704 . 6705) (t 25759 44195 671206 554000)) nil (25759 44234 446944 519000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6736 . 6737) (nil fontified nil 6705 . 6737) (6705 . 6737)) nil (25759 44234 446943 297000) 0 nil])
([nil nil ((6737 . 6739)) nil (25759 44234 446941 320000) 0 nil])
([nil nil ((1 . 6738) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################

model = keras.models.Sequential(
    [
        # Flatten layer to flatten the input shape of [50, 1] to a 1D array of size 50
        keras.layers.Flatten(input_shape=[50, 1]),
        # Dense layer with 1 unit, representing a single output value
        keras.layers.Dense(1),
    ]
)

# Compile the model
model.compile(loss=\"mse\", optimizer=\"adam\")

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

# Evaluate the model on the validation set
model.evaluate(X_valid, y_valid)
###############################################################################

# Plot the learning curves
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

# Make predictions on the validation set
y_pred = model.predict(X_valid)

# Plot the series
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################
# Using a Simpl RNN

# Define the model architecture
model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(1, input_shape=[None, 1]),
    ],
)

# Define the optimizer with a specific learning rate
optimizer = keras.optimizers.Adam(learning_rate=0.005)

# Compile the model
model.compile(loss=\"mse\", optimizer=optimizer)

# Train the model
history = model.fit(
    X_train,
    y_train,
    epochs=20,
    validation_data=(X_valid, y_valid),
)


model.evaluate(X_valid, y_valid)

plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()


y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

# Deep RNN


np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(20, return_sequences=True, input_shape=[None, 1]),
        keras.layers.SimpleRNN(20, return_sequences=True),
        keras.layers.SimpleRNN(1),
    ]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

model.evaluate(X_valid, y_valid)

" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 2654 2655 (syntax-table (15)) 2830 2831 (syntax-table (15)) 6178 6186 (fontified t) 6186 6187 (fontified t face (rainbow-delimiters-depth-1-face)) 6187 6188 (fontified t face (rainbow-delimiters-depth-1-face)) 6188 6191 (fontified t) 6191 6197 (fontified t face font-lock-variable-name-face) 6197 6213 (fontified t) 6213 6214 (fontified t face (rainbow-delimiters-depth-1-face)) 6214 6221 (fontified t) 6221 6222 (fontified t face (rainbow-delimiters-depth-1-face)) 6222 6234 (fontified t) 6234 6235 (fontified t face (rainbow-delimiters-depth-1-face)) 6235 6242 (fontified t) 6242 6243 (fontified t face (rainbow-delimiters-depth-2-face)) 6243 6250 (fontified t) 6250 6251 (fontified t face (rainbow-delimiters-depth-2-face)) 6251 6260 (fontified t) 6260 6261 (fontified t face (rainbow-delimiters-depth-2-face)) 6261 6265 (fontified t) 6265 6266 (fontified t face (rainbow-delimiters-depth-2-face)) 6266 6274 (fontified t) 6274 6275 (fontified t face (rainbow-delimiters-depth-2-face)) 6275 6279 (fontified t) 6279 6280 (fontified t face (rainbow-delimiters-depth-2-face)) 6280 6281 (fontified t face (rainbow-delimiters-depth-1-face)) 6281 6290 (fontified t) 6290 6291 (fontified t face (rainbow-delimiters-depth-1-face)) 6291 6292 (fontified t face (rainbow-delimiters-depth-1-face)) 6292 6294 (fontified t) 6294 6296 (fontified t face font-lock-comment-delimiter-face) 6296 6305 (fontified t face font-lock-comment-face) 6305 6321 (fontified t) 6321 6322 (fontified t face (rainbow-delimiters-depth-1-face)) 6322 6324 (fontified t) 6324 6325 (fontified t face (rainbow-delimiters-depth-1-face)) 6325 6344 (fontified t) 6344 6345 (fontified t face (rainbow-delimiters-depth-1-face)) 6345 6347 (fontified t) 6347 6348 (fontified t face (rainbow-delimiters-depth-1-face)) 6348 6350 (fontified t) 6350 6355 (fontified t face font-lock-variable-name-face) 6355 6381 (fontified t) 6381 6382 (fontified t face (rainbow-delimiters-depth-1-face)) 6382 6387 (fontified t) 6387 6388 (fontified t face (rainbow-delimiters-depth-2-face)) 6388 6419 (fontified t) 6419 6420 (fontified t face (rainbow-delimiters-depth-3-face)) 6420 6441 (fontified t) 6441 6445 (fontified t face font-lock-constant-face) 6445 6459 (fontified t) 6459 6460 (fontified t face (rainbow-delimiters-depth-4-face)) 6460 6464 (fontified t face font-lock-constant-face) 6464 6467 (fontified t) 6467 6468 (fontified t face (rainbow-delimiters-depth-4-face)) 6468 6469 (fontified t face (rainbow-delimiters-depth-3-face)) 6469 6501 (fontified t) 6501 6502 (fontified t face (rainbow-delimiters-depth-3-face)) 6502 6523 (fontified t) 6523 6527 (fontified t face font-lock-constant-face) 6527 6528 (fontified t face (rainbow-delimiters-depth-3-face)) 6528 6560 (fontified t) 6560 6561 (fontified t face (rainbow-delimiters-depth-3-face)) 6561 6562 (fontified t) 6562 6563 (fontified t face (rainbow-delimiters-depth-3-face)) 6563 6569 (fontified t) 6569 6570 (fontified t face (rainbow-delimiters-depth-2-face)) 6570 6571 (fontified t) 6571 6572 (fontified t face (rainbow-delimiters-depth-1-face)) 6572 6580 (fontified t) 6580 6587 (fontified t face font-lock-builtin-face) 6587 6588 (fontified t face (rainbow-delimiters-depth-1-face)) 6588 6593 (fontified t) 6593 6598 (fontified t face font-lock-string-face) 6598 6610 (fontified t) 6610 6616 (fontified t face font-lock-string-face) 6616 6617 (fontified t face (rainbow-delimiters-depth-1-face)) 6617 6618 (fontified t) 6618 6625 (fontified t face font-lock-variable-name-face) 6625 6637 (fontified t) 6637 6638 (fontified t face (rainbow-delimiters-depth-1-face)) 6638 6678 (fontified t) 6678 6683 (fontified t) 6683 6684 (face (rainbow-delimiters-depth-2-face) fontified t) 6684 6700 (fontified t) 6700 6701 (face (rainbow-delimiters-depth-2-face) fontified t) 6701 6702 (face (rainbow-delimiters-depth-1-face) fontified t) 6702 6703 (fontified t) 6703 6704 (fontified t) 6704 6718 (fontified t) 6718 6719 (fontified t face (rainbow-delimiters-depth-1-face)) 6719 6735 (fontified t) 6735 6736 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 6736 6737 (fontified t) 6737 6738 (fontified t)) . -1) (undo-tree-id10543 . -6704) (undo-tree-id10544 . -6735) (undo-tree-id10545 . -6704) (undo-tree-id10546 . -189) (undo-tree-id10547 . -189) (undo-tree-id10548 . -218) (undo-tree-id10549 . -218) (undo-tree-id10550 . -248) (undo-tree-id10551 . -248) (undo-tree-id10552 . -6698) (undo-tree-id10553 . -6698) (undo-tree-id10554 . -6698) (undo-tree-id10555 . -6574) (undo-tree-id10556 . -6574) (undo-tree-id10557 . -6574) (undo-tree-id10558 . -6574) (undo-tree-id10559 . -6698) (undo-tree-id10560 . -6698) (undo-tree-id10561 . -6698) (undo-tree-id10562 . -6698) (undo-tree-id10563 . -6698) (undo-tree-id10564 . -6698) (undo-tree-id10565 . -6698) (undo-tree-id10566 . -6698) (undo-tree-id10567 . -6698) (undo-tree-id10568 . -6698) (undo-tree-id10569 . -6178) (undo-tree-id10570 . -6698) (undo-tree-id10571 . -6698) (undo-tree-id10572 . -6698) (undo-tree-id10573 . -6698) (undo-tree-id10574 . -6698) (undo-tree-id10575 . -6698) (undo-tree-id10576 . -6640) (undo-tree-id10577 . -6596) (undo-tree-id10578 . -6596) (undo-tree-id10579 . -6596) (undo-tree-id10580 . -6596) (undo-tree-id10581 . -6596) (undo-tree-id10582 . -6596) (undo-tree-id10583 . -6573) (undo-tree-id10584 . -6571) (undo-tree-id10585 . -6569) (undo-tree-id10586 . -6552) (undo-tree-id10587 . -6493) (undo-tree-id10588 . -6469) (undo-tree-id10589 . -6411) (undo-tree-id10590 . -6387) (undo-tree-id10591 . -6372) (undo-tree-id10592 . -6349) (undo-tree-id10593 . -6347) (undo-tree-id10594 . -6324) (undo-tree-id10595 . -6306) (undo-tree-id10596 . -6307) (undo-tree-id10597 . -6307) (undo-tree-id10598 . -6307) (undo-tree-id10599 . -6307) (undo-tree-id10600 . -6307) (undo-tree-id10601 . -6307) (undo-tree-id10602 . -6307) (undo-tree-id10603 . -6307) (undo-tree-id10604 . -6307) (undo-tree-id10605 . -6307) (undo-tree-id10606 . -6307) (undo-tree-id10607 . -6178) (undo-tree-id10608 . -6307) (undo-tree-id10609 . -6307) (undo-tree-id10610 . -6307) (undo-tree-id10611 . -6307) (undo-tree-id10612 . -6307) (undo-tree-id10613 . -6307) (undo-tree-id10614 . -6307) (undo-tree-id10615 . -6307) (undo-tree-id10616 . -6307) (undo-tree-id10617 . -6307) (undo-tree-id10618 . -6307) (undo-tree-id10619 . -38) (undo-tree-id10620 . -44) (undo-tree-id10621 . -106) (undo-tree-id10622 . -110) (undo-tree-id10623 . -871) (undo-tree-id10624 . -876) (undo-tree-id10625 . -1097) (undo-tree-id10626 . -1101) (undo-tree-id10627 . -1187) (undo-tree-id10628 . -1188) (undo-tree-id10629 . -1355) (undo-tree-id10630 . -1356) (undo-tree-id10631 . -3060) (undo-tree-id10632 . -3064) (undo-tree-id10633 . -4756) (undo-tree-id10634 . -4760) (undo-tree-id10635 . -5083) (undo-tree-id10636 . -5090) (undo-tree-id10637 . -6468) (undo-tree-id10638 . -6469) (undo-tree-id10639 . -6693) (undo-tree-id10640 . -6700) (undo-tree-id10641 . -6307) (undo-tree-id10642 . -6307) (undo-tree-id10643 . -6307) (undo-tree-id10644 . -6307) (undo-tree-id10645 . -6307) (undo-tree-id10646 . -6307) (undo-tree-id10647 . -6307) (undo-tree-id10648 . -6307) (undo-tree-id10649 . -6307) (undo-tree-id10650 . -6307) (undo-tree-id10651 . -6307) (undo-tree-id10652 . -6307) (undo-tree-id10653 . -6307) (undo-tree-id10654 . -6307) (undo-tree-id10655 . -6307) (undo-tree-id10656 . -6307) (undo-tree-id10657 . -6307) (undo-tree-id10658 . -6307) (undo-tree-id10659 . -6307) (undo-tree-id10660 . -6307) (undo-tree-id10661 . -6307) (undo-tree-id10662 . -6307) (undo-tree-id10663 . -6307) (undo-tree-id10664 . -6307) (undo-tree-id10665 . -6307) (undo-tree-id10666 . -6307) (undo-tree-id10667 . -6307) (undo-tree-id10668 . -6307) (undo-tree-id10669 . -6307) (undo-tree-id10670 . -6307) (undo-tree-id10671 . -6307) (undo-tree-id10672 . -6307) (undo-tree-id10673 . -6307) (undo-tree-id10674 . -6307) (undo-tree-id10675 . -6307) (undo-tree-id10676 . -6307) (undo-tree-id10677 . -6307) (undo-tree-id10678 . -6307) (undo-tree-id10679 . -6307) (undo-tree-id10680 . -6307) (undo-tree-id10681 . -6307) (undo-tree-id10682 . -6307) (undo-tree-id10683 . -6307) (undo-tree-id10684 . -6307) (undo-tree-id10685 . -6307) (undo-tree-id10686 . -6307) (undo-tree-id10687 . -6307) (undo-tree-id10688 . -6307) (undo-tree-id10689 . -6307) (undo-tree-id10690 . -6307) (undo-tree-id10691 . -6307) (undo-tree-id10692 . -6307) (undo-tree-id10693 . -6307) (undo-tree-id10694 . -6307) (undo-tree-id10695 . -6307) (undo-tree-id10696 . -6307) (undo-tree-id10697 . -6307) (undo-tree-id10698 . -6307) (undo-tree-id10699 . -6307) (undo-tree-id10700 . -6307) (undo-tree-id10701 . -6307) (undo-tree-id10702 . -6307) (undo-tree-id10703 . -6307) (undo-tree-id10704 . -6307) (undo-tree-id10705 . -6307) (undo-tree-id10706 . -6307) (undo-tree-id10707 . -6307) (undo-tree-id10708 . -6307) (undo-tree-id10709 . -6307) (undo-tree-id10710 . -6307) (undo-tree-id10711 . -6307) (undo-tree-id10712 . -6307) (undo-tree-id10713 . -6307) (undo-tree-id10714 . -6307) (undo-tree-id10715 . -6307) (undo-tree-id10716 . -6307) (undo-tree-id10717 . -6307) (undo-tree-id10718 . -6307) (undo-tree-id10719 . -6307) (undo-tree-id10720 . -6307) (undo-tree-id10721 . -6307) (undo-tree-id10722 . -6307) (undo-tree-id10723 . -6307) (undo-tree-id10724 . -6307) (undo-tree-id10725 . -6307) (undo-tree-id10726 . -6307) (undo-tree-id10727 . -6307) (undo-tree-id10728 . -6307) (undo-tree-id10729 . -6307) (undo-tree-id10730 . -6307) (undo-tree-id10731 . -6307) (undo-tree-id10732 . -6307) (undo-tree-id10733 . -6307) (undo-tree-id10734 . -6307) (undo-tree-id10735 . -6307) (undo-tree-id10736 . -6307) (undo-tree-id10737 . -6307) (undo-tree-id10738 . -6307) (undo-tree-id10739 . -6307) (undo-tree-id10740 . -6307) (undo-tree-id10741 . -6307) (undo-tree-id10742 . -6307) (undo-tree-id10743 . -6307) (undo-tree-id10744 . -6307) (undo-tree-id10745 . -6307) (undo-tree-id10746 . -6307) (undo-tree-id10747 . -6307) (undo-tree-id10748 . -6307) (undo-tree-id10749 . -6307) (undo-tree-id10750 . -6307) (undo-tree-id10751 . -6307) (undo-tree-id10752 . -6307) (undo-tree-id10753 . -6307) (undo-tree-id10754 . -6307) (undo-tree-id10755 . -6307) (undo-tree-id10756 . -6307) (undo-tree-id10757 . -6307) (undo-tree-id10758 . -6307) (undo-tree-id10759 . -6307) (undo-tree-id10760 . -6307) (undo-tree-id10761 . -6307) (undo-tree-id10762 . -6307) (undo-tree-id10763 . -6307) (undo-tree-id10764 . -6307) (undo-tree-id10765 . -6307) (undo-tree-id10766 . -6307) (undo-tree-id10767 . -6307) (undo-tree-id10768 . -6307) (undo-tree-id10769 . -6307) (undo-tree-id10770 . -6307) (undo-tree-id10771 . -6307) (undo-tree-id10772 . -6307) (undo-tree-id10773 . -6307) (undo-tree-id10774 . -6307) (undo-tree-id10775 . -6307) (undo-tree-id10776 . -6307) (undo-tree-id10777 . -6307) (undo-tree-id10778 . -6307) (undo-tree-id10779 . -6307) (undo-tree-id10780 . -6307) (undo-tree-id10781 . -6307) (undo-tree-id10782 . -6307) (undo-tree-id10783 . -6307) (undo-tree-id10784 . -6307) (undo-tree-id10785 . -6307) (undo-tree-id10786 . -6307) (undo-tree-id10787 . -6307) (undo-tree-id10788 . -6307) (undo-tree-id10789 . -6307) (undo-tree-id10790 . -6307) (undo-tree-id10791 . -6307) (undo-tree-id10792 . -6178) (undo-tree-id10793 . -6307) (undo-tree-id10794 . -6307) (undo-tree-id10795 . -6307) (undo-tree-id10796 . -6307) (undo-tree-id10797 . -6307) (undo-tree-id10798 . -6307) (undo-tree-id10799 . -6307) (undo-tree-id10800 . -6307) (undo-tree-id10801 . -6307) (undo-tree-id10802 . -6307) (undo-tree-id10803 . -6326) (undo-tree-id10804 . -6349) (undo-tree-id10805 . -6350) (undo-tree-id10806 . -6350) (undo-tree-id10807 . -6350) (undo-tree-id10808 . -6350) (undo-tree-id10809 . -6350) (undo-tree-id10810 . -6350) (undo-tree-id10811 . -6350) (undo-tree-id10812 . -6350) (undo-tree-id10813 . -6350) (undo-tree-id10814 . -6350) (undo-tree-id10815 . -6350) (undo-tree-id10816 . -6350) (undo-tree-id10817 . -6350) (undo-tree-id10818 . -6350) (undo-tree-id10819 . -6350) (undo-tree-id10820 . -6350) (undo-tree-id10821 . -6350) (undo-tree-id10822 . -6350) (undo-tree-id10823 . -6350) (undo-tree-id10824 . -1) (undo-tree-id10825 . -38) (undo-tree-id10826 . -44) (undo-tree-id10827 . -106) (undo-tree-id10828 . -110) (undo-tree-id10829 . -106) (undo-tree-id10830 . -110) (undo-tree-id10831 . -563) (undo-tree-id10832 . -570) (undo-tree-id10833 . -526) (undo-tree-id10834 . -529) (undo-tree-id10835 . -947) (undo-tree-id10836 . -953) (undo-tree-id10837 . -1626) (undo-tree-id10838 . -1629) (undo-tree-id10839 . -1626) (undo-tree-id10840 . -1629) (undo-tree-id10841 . -1647) (undo-tree-id10842 . -1653) (undo-tree-id10843 . -1663) (undo-tree-id10844 . -1669) (undo-tree-id10845 . -1655) (undo-tree-id10846 . -1656) (undo-tree-id10847 . -3563) (undo-tree-id10848 . -3570) (undo-tree-id10849 . -5008) (undo-tree-id10850 . -5015) (undo-tree-id10851 . -5963) (undo-tree-id10852 . -5970) (undo-tree-id10853 . -6618) (undo-tree-id10854 . -6625) (undo-tree-id10855 . -6350) (undo-tree-id10856 . -6350) (undo-tree-id10857 . -6350) (undo-tree-id10858 . -6350) (undo-tree-id10859 . -6350) (undo-tree-id10860 . -6350) (undo-tree-id10861 . -6350) (undo-tree-id10862 . -6350) (undo-tree-id10863 . -6350) (undo-tree-id10864 . -6350) (undo-tree-id10865 . -6350) (undo-tree-id10866 . -6350) (undo-tree-id10867 . -6350) (undo-tree-id10868 . -6350) (undo-tree-id10869 . -6350) (undo-tree-id10870 . -6350) (undo-tree-id10871 . -6350) (undo-tree-id10872 . -6350) (undo-tree-id10873 . -6350) (undo-tree-id10874 . -6350) (undo-tree-id10875 . -6350) (undo-tree-id10876 . -6350) (undo-tree-id10877 . -6350) (undo-tree-id10878 . -6350) (undo-tree-id10879 . -6350) (undo-tree-id10880 . -6350) (undo-tree-id10881 . -6350) (undo-tree-id10882 . -6350) (undo-tree-id10883 . -6350) (undo-tree-id10884 . -6350) (undo-tree-id10885 . -6350) (undo-tree-id10886 . -6350) (undo-tree-id10887 . -6350) (undo-tree-id10888 . -6350) (undo-tree-id10889 . -6350) (undo-tree-id10890 . -6350) (undo-tree-id10891 . -6350) (undo-tree-id10892 . -6703) (undo-tree-id10893 . -6703) (undo-tree-id10894 . -6703) (undo-tree-id10895 . -6703) (undo-tree-id10896 . -6703) (undo-tree-id10897 . -6703) (undo-tree-id10898 . -6703) (undo-tree-id10899 . -6703) (undo-tree-id10900 . -6703) (undo-tree-id10901 . -6703) (undo-tree-id10902 . -6703) (undo-tree-id10903 . -6703) (undo-tree-id10904 . -6703) (undo-tree-id10905 . -6703) (undo-tree-id10906 . -6703) (undo-tree-id10907 . 35) (undo-tree-id10908 . -6704) (undo-tree-id10909 . -6618) (undo-tree-id10910 . -6618) (undo-tree-id10911 . -6704) (undo-tree-id10912 . -6704) (undo-tree-id10913 . -6704) (undo-tree-id10914 . -38) (undo-tree-id10915 . -44) (undo-tree-id10916 . -106) (undo-tree-id10917 . -110) (undo-tree-id10918 . -871) (undo-tree-id10919 . -876) (undo-tree-id10920 . -1097) (undo-tree-id10921 . -1101) (undo-tree-id10922 . -1187) (undo-tree-id10923 . -1188) (undo-tree-id10924 . -1355) (undo-tree-id10925 . -1356) (undo-tree-id10926 . -3060) (undo-tree-id10927 . -3064) (undo-tree-id10928 . -4756) (undo-tree-id10929 . -4760) (undo-tree-id10930 . -5083) (undo-tree-id10931 . -5090) (undo-tree-id10932 . -6468) (undo-tree-id10933 . -6469) (undo-tree-id10934 . -6693) (undo-tree-id10935 . -6700) (undo-tree-id10936 . -6703) (undo-tree-id10937 . -6704) (undo-tree-id10938 . -6704) (undo-tree-id10939 . -6704) (undo-tree-id10940 . -6704) (undo-tree-id10941 . -6704) (undo-tree-id10942 . -6704) (undo-tree-id10943 . -6704) (undo-tree-id10944 . -6704) (undo-tree-id10945 . -6704) (undo-tree-id10946 . -6703) (undo-tree-id10947 . -6735) (undo-tree-id10948 . -6735) (undo-tree-id10949 . -6736) (undo-tree-id10950 . -6736) (undo-tree-id10951 . -6736) (undo-tree-id10952 . -6736) (undo-tree-id10953 . -6736) (undo-tree-id10954 . -6736) (undo-tree-id10955 . -6736) (undo-tree-id10956 . 2) (undo-tree-id10957 . -6737) (undo-tree-id10958 . -6704) (undo-tree-id10959 . -6704) (undo-tree-id10960 . -6737) (undo-tree-id10961 . -6737) (undo-tree-id10962 . -6737) (undo-tree-id10963 . 1) (undo-tree-id10964 . -6738) (undo-tree-id10965 . -6704) (undo-tree-id10966 . -6704) (undo-tree-id10967 . -6738) (undo-tree-id10968 . -6738) (undo-tree-id10969 . -6738) (undo-tree-id10970 . -6738) (undo-tree-id10971 . -6738) (undo-tree-id10972 . -6738) (undo-tree-id10973 . -6738) (undo-tree-id10974 . -6738) (undo-tree-id10975 . -6738) (undo-tree-id10976 . -6738) (undo-tree-id10977 . -6738) (undo-tree-id10978 . -6738) (undo-tree-id10979 . -6738) (undo-tree-id10980 . -6738) (undo-tree-id10981 . -6738) (undo-tree-id10982 . -6738) (undo-tree-id10983 . -6738) (undo-tree-id10984 . -6738) (undo-tree-id10985 . -6738) (undo-tree-id10986 . -6738) (undo-tree-id10987 . -6738) (undo-tree-id10988 . -6178) (undo-tree-id10989 . -6738) (undo-tree-id10990 . -6738) (undo-tree-id10991 . -6178) (undo-tree-id10992 . -6738) (undo-tree-id10993 . -6738) (undo-tree-id10994 . -6738) (undo-tree-id10995 . -6738)) nil (25759 44234 446912 667000) 0 nil])
([nil nil ((6738 . 6739) (t 25759 44234 478679 145000)) nil (25759 44246 517471 742000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6823 . 6824) (nil fontified nil 6739 . 6824) (6739 . 6824)) nil (25759 44246 517470 777000) 0 nil])
([nil nil ((6824 . 6827)) nil (25759 44246 517468 989000) 0 nil])
([nil nil ((1 . 6825) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################

model = keras.models.Sequential(
    [
        # Flatten layer to flatten the input shape of [50, 1] to a 1D array of size 50
        keras.layers.Flatten(input_shape=[50, 1]),
        # Dense layer with 1 unit, representing a single output value
        keras.layers.Dense(1),
    ]
)

# Compile the model
model.compile(loss=\"mse\", optimizer=\"adam\")

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

# Evaluate the model on the validation set
model.evaluate(X_valid, y_valid)
###############################################################################

# Plot the learning curves
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

# Make predictions on the validation set
y_pred = model.predict(X_valid)

# Plot the series
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################
# Using a Simpl RNN

# Define the model architecture
model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(1, input_shape=[None, 1]),
    ],
)

# Define the optimizer with a specific learning rate
optimizer = keras.optimizers.Adam(learning_rate=0.005)

# Compile the model
model.compile(loss=\"mse\", optimizer=optimizer)

# Train the model
history = model.fit(
    X_train,
    y_train,
    epochs=20,
    validation_data=(X_valid, y_valid),
)


model.evaluate(X_valid, y_valid)

plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()


y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

# Deep RNN


np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(20, return_sequences=True, input_shape=[None, 1]),
        keras.layers.SimpleRNN(20, return_sequences=True),
        keras.layers.SimpleRNN(1),
    ]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

model.evaluate(X_valid, y_valid)

plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()


" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 2654 2655 (syntax-table (15)) 2830 2831 (syntax-table (15)) 6178 6186 (fontified t) 6186 6187 (fontified t face (rainbow-delimiters-depth-1-face)) 6187 6188 (fontified t face (rainbow-delimiters-depth-1-face)) 6188 6191 (fontified t) 6191 6197 (fontified t face font-lock-variable-name-face) 6197 6213 (fontified t) 6213 6214 (fontified t face (rainbow-delimiters-depth-1-face)) 6214 6221 (fontified t) 6221 6222 (fontified t face (rainbow-delimiters-depth-1-face)) 6222 6234 (fontified t) 6234 6235 (fontified t face (rainbow-delimiters-depth-1-face)) 6235 6242 (fontified t) 6242 6243 (fontified t face (rainbow-delimiters-depth-2-face)) 6243 6250 (fontified t) 6250 6251 (fontified t face (rainbow-delimiters-depth-2-face)) 6251 6260 (fontified t) 6260 6261 (fontified t face (rainbow-delimiters-depth-2-face)) 6261 6265 (fontified t) 6265 6266 (fontified t face (rainbow-delimiters-depth-2-face)) 6266 6274 (fontified t) 6274 6275 (fontified t face (rainbow-delimiters-depth-2-face)) 6275 6279 (fontified t) 6279 6280 (fontified t face (rainbow-delimiters-depth-2-face)) 6280 6281 (fontified t face (rainbow-delimiters-depth-1-face)) 6281 6290 (fontified t) 6290 6291 (fontified t face (rainbow-delimiters-depth-1-face)) 6291 6292 (fontified t face (rainbow-delimiters-depth-1-face)) 6292 6294 (fontified t) 6294 6296 (fontified t face font-lock-comment-delimiter-face) 6296 6305 (fontified t face font-lock-comment-face) 6305 6321 (fontified t) 6321 6322 (fontified t face (rainbow-delimiters-depth-1-face)) 6322 6324 (fontified t) 6324 6325 (fontified t face (rainbow-delimiters-depth-1-face)) 6325 6344 (fontified t) 6344 6345 (fontified t face (rainbow-delimiters-depth-1-face)) 6345 6347 (fontified t) 6347 6348 (fontified t face (rainbow-delimiters-depth-1-face)) 6348 6350 (fontified t) 6350 6355 (fontified t face font-lock-variable-name-face) 6355 6381 (fontified t) 6381 6382 (fontified t face (rainbow-delimiters-depth-1-face)) 6382 6387 (fontified t) 6387 6388 (fontified t face (rainbow-delimiters-depth-2-face)) 6388 6419 (fontified t) 6419 6420 (fontified t face (rainbow-delimiters-depth-3-face)) 6420 6441 (fontified t) 6441 6445 (fontified t face font-lock-constant-face) 6445 6459 (fontified t) 6459 6460 (fontified t face (rainbow-delimiters-depth-4-face)) 6460 6464 (fontified t face font-lock-constant-face) 6464 6467 (fontified t) 6467 6468 (fontified t face (rainbow-delimiters-depth-4-face)) 6468 6469 (fontified t face (rainbow-delimiters-depth-3-face)) 6469 6501 (fontified t) 6501 6502 (fontified t face (rainbow-delimiters-depth-3-face)) 6502 6523 (fontified t) 6523 6527 (fontified t face font-lock-constant-face) 6527 6528 (fontified t face (rainbow-delimiters-depth-3-face)) 6528 6560 (fontified t) 6560 6561 (fontified t face (rainbow-delimiters-depth-3-face)) 6561 6562 (fontified t) 6562 6563 (fontified t face (rainbow-delimiters-depth-3-face)) 6563 6569 (fontified t) 6569 6570 (fontified t face (rainbow-delimiters-depth-2-face)) 6570 6571 (fontified t) 6571 6572 (fontified t face (rainbow-delimiters-depth-1-face)) 6572 6580 (fontified t) 6580 6587 (fontified t face font-lock-builtin-face) 6587 6588 (fontified t face (rainbow-delimiters-depth-1-face)) 6588 6593 (fontified t) 6593 6598 (fontified t face font-lock-string-face) 6598 6610 (fontified t) 6610 6616 (fontified t face font-lock-string-face) 6616 6617 (fontified t face (rainbow-delimiters-depth-1-face)) 6617 6618 (fontified t) 6618 6625 (fontified t face font-lock-variable-name-face) 6625 6637 (fontified t) 6637 6638 (fontified t face (rainbow-delimiters-depth-1-face)) 6638 6678 (fontified t) 6678 6683 (fontified t) 6683 6684 (face (rainbow-delimiters-depth-2-face) fontified t) 6684 6700 (fontified t) 6700 6701 (face (rainbow-delimiters-depth-2-face) fontified t) 6701 6702 (face (rainbow-delimiters-depth-1-face) fontified t) 6702 6703 (fontified t) 6703 6718 (fontified t) 6718 6719 (fontified t face (rainbow-delimiters-depth-1-face)) 6719 6735 (fontified t) 6735 6736 (fontified t face (rainbow-delimiters-depth-1-face)) 6736 6737 (fontified t) 6737 6738 (fontified t) 6738 6758 (fontified t) 6758 6759 (fontified t face (rainbow-delimiters-depth-1-face)) 6759 6774 (fontified t) 6774 6775 (fontified t face (rainbow-delimiters-depth-2-face)) 6775 6781 (fontified t face font-lock-string-face) 6781 6782 (fontified t face (rainbow-delimiters-depth-2-face)) 6782 6799 (fontified t) 6799 6800 (fontified t face (rainbow-delimiters-depth-2-face)) 6800 6810 (fontified t face font-lock-string-face) 6810 6811 (fontified t face (rainbow-delimiters-depth-2-face)) 6811 6812 (fontified t face (rainbow-delimiters-depth-1-face)) 6812 6813 (fontified t) 6813 6821 (fontified t) 6821 6822 (fontified t face (rainbow-delimiters-depth-1-face)) 6822 6823 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 6823 6824 (fontified t) 6824 6825 (fontified t) 6825 6826 (fontified t)) . -1) (undo-tree-id10996 . -6738) (undo-tree-id10997 . -6822) (undo-tree-id10998 . -6738) (undo-tree-id10999 . -189) (undo-tree-id11000 . -189) (undo-tree-id11001 . -218) (undo-tree-id11002 . -218) (undo-tree-id11003 . -248) (undo-tree-id11004 . -248) (undo-tree-id11005 . -6737) (undo-tree-id11006 . -6737) (undo-tree-id11007 . -6737) (undo-tree-id11008 . -6574) (undo-tree-id11009 . -6574) (undo-tree-id11010 . -6574) (undo-tree-id11011 . -6574) (undo-tree-id11012 . -6737) (undo-tree-id11013 . -6737) (undo-tree-id11014 . -6737) (undo-tree-id11015 . -6737) (undo-tree-id11016 . -6737) (undo-tree-id11017 . -6737) (undo-tree-id11018 . -6737) (undo-tree-id11019 . -6737) (undo-tree-id11020 . -6737) (undo-tree-id11021 . -6737) (undo-tree-id11022 . -6737) (undo-tree-id11023 . -6737) (undo-tree-id11024 . -6737) (undo-tree-id11025 . -6737) (undo-tree-id11026 . -6737) (undo-tree-id11027 . -6737) (undo-tree-id11028 . -6737) (undo-tree-id11029 . -6737) (undo-tree-id11030 . -6737) (undo-tree-id11031 . -6737) (undo-tree-id11032 . -6737) (undo-tree-id11033 . -6737) (undo-tree-id11034 . -6737) (undo-tree-id11035 . -6737) (undo-tree-id11036 . -6737) (undo-tree-id11037 . -6737) (undo-tree-id11038 . -6737) (undo-tree-id11039 . -6737) (undo-tree-id11040 . -6737) (undo-tree-id11041 . -6737) (undo-tree-id11042 . -6737) (undo-tree-id11043 . -6737) (undo-tree-id11044 . -6737) (undo-tree-id11045 . -6737) (undo-tree-id11046 . -6737) (undo-tree-id11047 . -6737) (undo-tree-id11048 . -6737) (undo-tree-id11049 . -6737) (undo-tree-id11050 . -6737) (undo-tree-id11051 . -6737) (undo-tree-id11052 . -6737) (undo-tree-id11053 . -6737) (undo-tree-id11054 . -6737) (undo-tree-id11055 . -6737) (undo-tree-id11056 . -6737) (undo-tree-id11057 . -6737) (undo-tree-id11058 . -6737) (undo-tree-id11059 . -6737) (undo-tree-id11060 . -6737) (undo-tree-id11061 . -6737) (undo-tree-id11062 . -6737) (undo-tree-id11063 . -6737) (undo-tree-id11064 . -6737) (undo-tree-id11065 . 89) (undo-tree-id11066 . -6738) (undo-tree-id11067 . -6704) (undo-tree-id11068 . -6704) (undo-tree-id11069 . -6738) (undo-tree-id11070 . -6738) (undo-tree-id11071 . -6738) (undo-tree-id11072 . -6738) (undo-tree-id11073 . -6738) (undo-tree-id11074 . -6738) (undo-tree-id11075 . -6738) (undo-tree-id11076 . -6738) (undo-tree-id11077 . -6738) (undo-tree-id11078 . -6738) (undo-tree-id11079 . -6738) (undo-tree-id11080 . -6738) (undo-tree-id11081 . -6822) (undo-tree-id11082 . -6822) (undo-tree-id11083 . -6823) (undo-tree-id11084 . -6823) (undo-tree-id11085 . -6823) (undo-tree-id11086 . 3) (undo-tree-id11087 . -6824) (undo-tree-id11088 . -6813) (undo-tree-id11089 . -6813) (undo-tree-id11090 . -6824) (undo-tree-id11091 . -6824) (undo-tree-id11092 . -1) (undo-tree-id11093 . -38) (undo-tree-id11094 . -44) (undo-tree-id11095 . -106) (undo-tree-id11096 . -110) (undo-tree-id11097 . -106) (undo-tree-id11098 . -110) (undo-tree-id11099 . -563) (undo-tree-id11100 . -570) (undo-tree-id11101 . -526) (undo-tree-id11102 . -529) (undo-tree-id11103 . -947) (undo-tree-id11104 . -953) (undo-tree-id11105 . -1626) (undo-tree-id11106 . -1629) (undo-tree-id11107 . -1626) (undo-tree-id11108 . -1629) (undo-tree-id11109 . -1647) (undo-tree-id11110 . -1653) (undo-tree-id11111 . -1663) (undo-tree-id11112 . -1669) (undo-tree-id11113 . -1655) (undo-tree-id11114 . -1656) (undo-tree-id11115 . -3563) (undo-tree-id11116 . -3570) (undo-tree-id11117 . -5008) (undo-tree-id11118 . -5015) (undo-tree-id11119 . -5963) (undo-tree-id11120 . -5970) (undo-tree-id11121 . -6618) (undo-tree-id11122 . -6625) (undo-tree-id11123 . -6703) (undo-tree-id11124 . -6704) (undo-tree-id11125 . -6824) (undo-tree-id11126 . -6824) (undo-tree-id11127 . -6824) (undo-tree-id11128 . 2) (undo-tree-id11129 . -6825) (undo-tree-id11130 . -6813) (undo-tree-id11131 . -6813) (undo-tree-id11132 . -6825) (undo-tree-id11133 . -6825) (undo-tree-id11134 . -6825) (undo-tree-id11135 . -38) (undo-tree-id11136 . -44) (undo-tree-id11137 . -106) (undo-tree-id11138 . -110) (undo-tree-id11139 . -871) (undo-tree-id11140 . -876) (undo-tree-id11141 . -1097) (undo-tree-id11142 . -1101) (undo-tree-id11143 . -1187) (undo-tree-id11144 . -1188) (undo-tree-id11145 . -1355) (undo-tree-id11146 . -1356) (undo-tree-id11147 . -3060) (undo-tree-id11148 . -3064) (undo-tree-id11149 . -4756) (undo-tree-id11150 . -4760) (undo-tree-id11151 . -5083) (undo-tree-id11152 . -5090) (undo-tree-id11153 . -6468) (undo-tree-id11154 . -6469) (undo-tree-id11155 . -6693) (undo-tree-id11156 . -6700) (undo-tree-id11157 . -6825) (undo-tree-id11158 . -6825) (undo-tree-id11159 . -6825) (undo-tree-id11160 . 1) (undo-tree-id11161 . -6826) (undo-tree-id11162 . -6813) (undo-tree-id11163 . -6813) (undo-tree-id11164 . -6826) (undo-tree-id11165 . -6826) (undo-tree-id11166 . -6826) (undo-tree-id11167 . -6826) (undo-tree-id11168 . -6826) (undo-tree-id11169 . -6826) (undo-tree-id11170 . -6826) (undo-tree-id11171 . -6826) (undo-tree-id11172 . -6826) (undo-tree-id11173 . -6826) (undo-tree-id11174 . -6826) (undo-tree-id11175 . -6826) (undo-tree-id11176 . -6826) (undo-tree-id11177 . -6826) (undo-tree-id11178 . -6826) (undo-tree-id11179 . -6826) (undo-tree-id11180 . -6826) (undo-tree-id11181 . -6826) (undo-tree-id11182 . -6826) (undo-tree-id11183 . -6389) (undo-tree-id11184 . -6826) (undo-tree-id11185 . -6826) (undo-tree-id11186 . -6389) (undo-tree-id11187 . -6826) (undo-tree-id11188 . -6826) (undo-tree-id11189 . -6826) (undo-tree-id11190 . -6826)) nil (25759 44246 517458 541000) 0 nil])
([nil nil ((6825 . 6827) (t 25759 44246 546528 662000)) nil (25759 44256 770633 288000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6927 . 6928) (nil fontified nil 6827 . 6928) (6827 . 6928)) nil (25759 44256 770630 27000) 0 nil])
([nil nil ((6928 . 6929)) nil (25759 44256 770618 809000) 0 nil])
([nil nil ((6928 . 6931) (t 25759 44256 826405 334000)) nil (25759 44259 237476 722000) 0 nil])
([nil nil ((1 . 6929) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################

model = keras.models.Sequential(
    [
        # Flatten layer to flatten the input shape of [50, 1] to a 1D array of size 50
        keras.layers.Flatten(input_shape=[50, 1]),
        # Dense layer with 1 unit, representing a single output value
        keras.layers.Dense(1),
    ]
)

# Compile the model
model.compile(loss=\"mse\", optimizer=\"adam\")

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

# Evaluate the model on the validation set
model.evaluate(X_valid, y_valid)
###############################################################################

# Plot the learning curves
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

# Make predictions on the validation set
y_pred = model.predict(X_valid)

# Plot the series
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################
# Using a Simpl RNN

# Define the model architecture
model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(1, input_shape=[None, 1]),
    ],
)

# Define the optimizer with a specific learning rate
optimizer = keras.optimizers.Adam(learning_rate=0.005)

# Compile the model
model.compile(loss=\"mse\", optimizer=optimizer)

# Train the model
history = model.fit(
    X_train,
    y_train,
    epochs=20,
    validation_data=(X_valid, y_valid),
)


model.evaluate(X_valid, y_valid)

plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()


y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

# Deep RNN


np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(20, return_sequences=True, input_shape=[None, 1]),
        keras.layers.SimpleRNN(20, return_sequences=True),
        keras.layers.SimpleRNN(1),
    ]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

model.evaluate(X_valid, y_valid)

plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()


y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()



" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 2654 2655 (syntax-table (15)) 2830 2831 (syntax-table (15)) 6389 6419 (fontified t) 6419 6420 (fontified t face (rainbow-delimiters-depth-3-face)) 6420 6441 (fontified t) 6441 6445 (fontified t face font-lock-constant-face) 6445 6459 (fontified t) 6459 6460 (fontified t face (rainbow-delimiters-depth-4-face)) 6460 6464 (fontified t face font-lock-constant-face) 6464 6467 (fontified t) 6467 6468 (fontified t face (rainbow-delimiters-depth-4-face)) 6468 6469 (fontified t face (rainbow-delimiters-depth-3-face)) 6469 6501 (fontified t) 6501 6502 (fontified t face (rainbow-delimiters-depth-3-face)) 6502 6523 (fontified t) 6523 6527 (fontified t face font-lock-constant-face) 6527 6528 (fontified t face (rainbow-delimiters-depth-3-face)) 6528 6560 (fontified t) 6560 6561 (fontified t face (rainbow-delimiters-depth-3-face)) 6561 6562 (fontified t) 6562 6563 (fontified t face (rainbow-delimiters-depth-3-face)) 6563 6569 (fontified t) 6569 6570 (fontified t face (rainbow-delimiters-depth-2-face)) 6570 6571 (fontified t) 6571 6572 (fontified t face (rainbow-delimiters-depth-1-face)) 6572 6580 (fontified t) 6580 6587 (fontified t face font-lock-builtin-face) 6587 6588 (fontified t face (rainbow-delimiters-depth-1-face)) 6588 6593 (fontified t) 6593 6598 (fontified t face font-lock-string-face) 6598 6610 (fontified t) 6610 6616 (fontified t face font-lock-string-face) 6616 6617 (fontified t face (rainbow-delimiters-depth-1-face)) 6617 6618 (fontified t) 6618 6625 (fontified t face font-lock-variable-name-face) 6625 6637 (fontified t) 6637 6638 (fontified t face (rainbow-delimiters-depth-1-face)) 6638 6683 (fontified t) 6683 6684 (fontified t face (rainbow-delimiters-depth-2-face)) 6684 6700 (fontified t) 6700 6701 (fontified t face (rainbow-delimiters-depth-2-face)) 6701 6702 (fontified t face (rainbow-delimiters-depth-1-face)) 6702 6718 (fontified t) 6718 6719 (fontified t face (rainbow-delimiters-depth-1-face)) 6719 6735 (fontified t) 6735 6736 (fontified t face (rainbow-delimiters-depth-1-face)) 6736 6758 (fontified t) 6758 6759 (fontified t face (rainbow-delimiters-depth-1-face)) 6759 6774 (fontified t) 6774 6775 (fontified t face (rainbow-delimiters-depth-2-face)) 6775 6781 (fontified t face font-lock-string-face) 6781 6782 (fontified t face (rainbow-delimiters-depth-2-face)) 6782 6799 (fontified t) 6799 6800 (fontified t face (rainbow-delimiters-depth-2-face)) 6800 6810 (fontified t face font-lock-string-face) 6810 6811 (fontified t face (rainbow-delimiters-depth-2-face)) 6811 6812 (fontified t face (rainbow-delimiters-depth-1-face)) 6812 6821 (fontified t) 6821 6822 (fontified t face (rainbow-delimiters-depth-1-face)) 6822 6823 (fontified t face (rainbow-delimiters-depth-1-face)) 6823 6824 (fontified t) 6824 6825 (fontified t) 6825 6826 (fontified t) 6826 6832 (fontified t face font-lock-variable-name-face) 6832 6848 (fontified t) 6848 6849 (fontified t face (rainbow-delimiters-depth-1-face)) 6849 6856 (fontified t) 6856 6857 (fontified t face (rainbow-delimiters-depth-1-face)) 6857 6869 (fontified t) 6869 6870 (fontified t face (rainbow-delimiters-depth-1-face)) 6870 6877 (fontified t) 6877 6878 (fontified t face (rainbow-delimiters-depth-2-face)) 6878 6885 (fontified t) 6885 6886 (fontified t face (rainbow-delimiters-depth-2-face)) 6886 6895 (fontified t) 6895 6896 (fontified t face (rainbow-delimiters-depth-2-face)) 6896 6900 (fontified t) 6900 6901 (fontified t face (rainbow-delimiters-depth-2-face)) 6901 6909 (fontified t) 6909 6910 (fontified t face (rainbow-delimiters-depth-2-face)) 6910 6914 (fontified t) 6914 6915 (fontified t face (rainbow-delimiters-depth-2-face)) 6915 6916 (fontified t face (rainbow-delimiters-depth-1-face)) 6916 6917 (fontified t) 6917 6925 (fontified t) 6925 6926 (fontified t face (rainbow-delimiters-depth-1-face)) 6926 6927 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 6927 6928 (fontified t) 6928 6929 (fontified t) 6929 6930 (fontified t) 6930 6931 (fontified t)) . 1) (undo-tree-id11191 . 1) (undo-tree-id11192 . -6931) (undo-tree-id11193 . -6931) (undo-tree-id11194 . -6826) (undo-tree-id11195 . -6824) (undo-tree-id11196 . -6926) (undo-tree-id11197 . -6926) (undo-tree-id11198 . -6926) (undo-tree-id11199 . -6926) (undo-tree-id11200 . -6927) (undo-tree-id11201 . -6927) (undo-tree-id11202 . -6927) (undo-tree-id11203 . 4) (undo-tree-id11204 . -6928) (undo-tree-id11205 . -6917) (undo-tree-id11206 . -6917) (undo-tree-id11207 . -6928) (undo-tree-id11208 . -6928) (undo-tree-id11209 . -6928) (undo-tree-id11210 . 3) (undo-tree-id11211 . -6929) (undo-tree-id11212 . -6917) (undo-tree-id11213 . -6917) (undo-tree-id11214 . -6929) (undo-tree-id11215 . -6929) (undo-tree-id11216 . -6929) (undo-tree-id11217 . 2) (undo-tree-id11218 . -6930) (undo-tree-id11219 . -6917) (undo-tree-id11220 . -6917) (undo-tree-id11221 . -6930) (undo-tree-id11222 . -6930) (undo-tree-id11223 . -6930) (undo-tree-id11224 . -6930) (undo-tree-id11225 . -6930) (undo-tree-id11226 . -6930) (undo-tree-id11227 . -6930) (undo-tree-id11228 . -6930) (undo-tree-id11229 . -1) (undo-tree-id11230 . -38) (undo-tree-id11231 . -44) (undo-tree-id11232 . -106) (undo-tree-id11233 . -110) (undo-tree-id11234 . -106) (undo-tree-id11235 . -110) (undo-tree-id11236 . -563) (undo-tree-id11237 . -570) (undo-tree-id11238 . -526) (undo-tree-id11239 . -529) (undo-tree-id11240 . -947) (undo-tree-id11241 . -953) (undo-tree-id11242 . -1626) (undo-tree-id11243 . -1629) (undo-tree-id11244 . -1626) (undo-tree-id11245 . -1629) (undo-tree-id11246 . -1647) (undo-tree-id11247 . -1653) (undo-tree-id11248 . -1663) (undo-tree-id11249 . -1669) (undo-tree-id11250 . -1655) (undo-tree-id11251 . -1656) (undo-tree-id11252 . -3563) (undo-tree-id11253 . -3570) (undo-tree-id11254 . -5008) (undo-tree-id11255 . -5015) (undo-tree-id11256 . -5963) (undo-tree-id11257 . -5970) (undo-tree-id11258 . -6618) (undo-tree-id11259 . -6625) (undo-tree-id11260 . -6824) (undo-tree-id11261 . -6825) (undo-tree-id11262 . -6930) (undo-tree-id11263 . -6930) (undo-tree-id11264 . -6930) (undo-tree-id11265 . -6930) (undo-tree-id11266 . -6930) (undo-tree-id11267 . -6930) (undo-tree-id11268 . -6930) (undo-tree-id11269 . -6930) (undo-tree-id11270 . -6930) (undo-tree-id11271 . -6930) (undo-tree-id11272 . -6389) (undo-tree-id11273 . -6930) (undo-tree-id11274 . -6930) (undo-tree-id11275 . -38) (undo-tree-id11276 . -44) (undo-tree-id11277 . -106) (undo-tree-id11278 . -110) (undo-tree-id11279 . -871) (undo-tree-id11280 . -876) (undo-tree-id11281 . -1097) (undo-tree-id11282 . -1101) (undo-tree-id11283 . -1187) (undo-tree-id11284 . -1188) (undo-tree-id11285 . -1355) (undo-tree-id11286 . -1356) (undo-tree-id11287 . -3060) (undo-tree-id11288 . -3064) (undo-tree-id11289 . -4756) (undo-tree-id11290 . -4760) (undo-tree-id11291 . -5083) (undo-tree-id11292 . -5090) (undo-tree-id11293 . -6468) (undo-tree-id11294 . -6469) (undo-tree-id11295 . -6693) (undo-tree-id11296 . -6700) (undo-tree-id11297 . -6930) (undo-tree-id11298 . -6931) (undo-tree-id11299 . -6389) (undo-tree-id11300 . -6930) (undo-tree-id11301 . -6930) (undo-tree-id11302 . -6930) (undo-tree-id11303 . -6930)) nil (25759 44259 237467 403000) 0 nil])
([nil nil ((6929 . 6931) (t 25759 44259 266376 709000)) nil (25759 44273 35109 217000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7295 . 7296) (nil fontified nil 6931 . 7296) (6931 . 7296)) nil (25759 44273 35107 636000) 0 nil])
([nil nil ((1 . 7300) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################

model = keras.models.Sequential(
    [
        # Flatten layer to flatten the input shape of [50, 1] to a 1D array of size 50
        keras.layers.Flatten(input_shape=[50, 1]),
        # Dense layer with 1 unit, representing a single output value
        keras.layers.Dense(1),
    ]
)

# Compile the model
model.compile(loss=\"mse\", optimizer=\"adam\")

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

# Evaluate the model on the validation set
model.evaluate(X_valid, y_valid)
###############################################################################

# Plot the learning curves
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

# Make predictions on the validation set
y_pred = model.predict(X_valid)

# Plot the series
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################
# Using a Simpl RNN

# Define the model architecture
model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(1, input_shape=[None, 1]),
    ],
)

# Define the optimizer with a specific learning rate
optimizer = keras.optimizers.Adam(learning_rate=0.005)

# Compile the model
model.compile(loss=\"mse\", optimizer=optimizer)

# Train the model
history = model.fit(
    X_train,
    y_train,
    epochs=20,
    validation_data=(X_valid, y_valid),
)


model.evaluate(X_valid, y_valid)

plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()


y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

# Deep RNN


np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(20, return_sequences=True, input_shape=[None, 1]),
        keras.layers.SimpleRNN(20, return_sequences=True),
        keras.layers.SimpleRNN(1),
    ]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

model.evaluate(X_valid, y_valid)

plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()


y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()


np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential([
    keras.layers.SimpleRNN(20, return_sequences=True, input_shape=[None, 1]),
    keras.layers.SimpleRNN(20),
    keras.layers.Dense(1)
])

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20,
                    validation_data=(X_valid, y_valid))
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 2654 2655 (syntax-table (15)) 2830 2831 (syntax-table (15)) 6389 6419 (fontified t) 6419 6420 (fontified t face (rainbow-delimiters-depth-3-face)) 6420 6441 (fontified t) 6441 6445 (fontified t face font-lock-constant-face) 6445 6459 (fontified t) 6459 6460 (fontified t face (rainbow-delimiters-depth-4-face)) 6460 6464 (fontified t face font-lock-constant-face) 6464 6467 (fontified t) 6467 6468 (fontified t face (rainbow-delimiters-depth-4-face)) 6468 6469 (fontified t face (rainbow-delimiters-depth-3-face)) 6469 6501 (fontified t) 6501 6502 (fontified t face (rainbow-delimiters-depth-3-face)) 6502 6523 (fontified t) 6523 6527 (fontified t face font-lock-constant-face) 6527 6528 (fontified t face (rainbow-delimiters-depth-3-face)) 6528 6560 (fontified t) 6560 6561 (fontified t face (rainbow-delimiters-depth-3-face)) 6561 6562 (fontified t) 6562 6563 (fontified t face (rainbow-delimiters-depth-3-face)) 6563 6569 (fontified t) 6569 6570 (fontified t face (rainbow-delimiters-depth-2-face)) 6570 6571 (fontified t) 6571 6572 (fontified t face (rainbow-delimiters-depth-1-face)) 6572 6580 (fontified t) 6580 6587 (fontified t face font-lock-builtin-face) 6587 6588 (fontified t face (rainbow-delimiters-depth-1-face)) 6588 6593 (fontified t) 6593 6598 (fontified t face font-lock-string-face) 6598 6610 (fontified t) 6610 6616 (fontified t face font-lock-string-face) 6616 6617 (fontified t face (rainbow-delimiters-depth-1-face)) 6617 6618 (fontified t) 6618 6625 (fontified t face font-lock-variable-name-face) 6625 6637 (fontified t) 6637 6638 (fontified t face (rainbow-delimiters-depth-1-face)) 6638 6683 (fontified t) 6683 6684 (fontified t face (rainbow-delimiters-depth-2-face)) 6684 6700 (fontified t) 6700 6701 (fontified t face (rainbow-delimiters-depth-2-face)) 6701 6702 (fontified t face (rainbow-delimiters-depth-1-face)) 6702 6718 (fontified t) 6718 6719 (fontified t face (rainbow-delimiters-depth-1-face)) 6719 6735 (fontified t) 6735 6736 (fontified t face (rainbow-delimiters-depth-1-face)) 6736 6758 (fontified t) 6758 6759 (fontified t face (rainbow-delimiters-depth-1-face)) 6759 6774 (fontified t) 6774 6775 (fontified t face (rainbow-delimiters-depth-2-face)) 6775 6781 (fontified t face font-lock-string-face) 6781 6782 (fontified t face (rainbow-delimiters-depth-2-face)) 6782 6799 (fontified t) 6799 6800 (fontified t face (rainbow-delimiters-depth-2-face)) 6800 6810 (fontified t face font-lock-string-face) 6810 6811 (fontified t face (rainbow-delimiters-depth-2-face)) 6811 6812 (fontified t face (rainbow-delimiters-depth-1-face)) 6812 6821 (fontified t) 6821 6822 (fontified t face (rainbow-delimiters-depth-1-face)) 6822 6823 (fontified t face (rainbow-delimiters-depth-1-face)) 6823 6826 (fontified t) 6826 6832 (fontified t face font-lock-variable-name-face) 6832 6848 (fontified t) 6848 6849 (fontified t face (rainbow-delimiters-depth-1-face)) 6849 6856 (fontified t) 6856 6857 (fontified t face (rainbow-delimiters-depth-1-face)) 6857 6869 (fontified t) 6869 6870 (fontified t face (rainbow-delimiters-depth-1-face)) 6870 6877 (fontified t) 6877 6878 (fontified t face (rainbow-delimiters-depth-2-face)) 6878 6885 (fontified t) 6885 6886 (fontified t face (rainbow-delimiters-depth-2-face)) 6886 6889 (fontified t) 6889 6895 (fontified t) 6895 6896 (face (rainbow-delimiters-depth-2-face) fontified t) 6896 6900 (fontified t) 6900 6901 (face (rainbow-delimiters-depth-2-face) fontified t) 6901 6909 (fontified t) 6909 6910 (face (rainbow-delimiters-depth-2-face) fontified t) 6910 6914 (fontified t) 6914 6915 (face (rainbow-delimiters-depth-2-face) fontified t) 6915 6916 (face (rainbow-delimiters-depth-1-face) fontified t) 6916 6917 (fontified t) 6917 6925 (fontified t) 6925 6926 (fontified t face (rainbow-delimiters-depth-1-face)) 6926 6927 (fontified t face (rainbow-delimiters-depth-1-face)) 6927 6928 (fontified t) 6928 6929 (fontified t) 6929 6930 (fontified t) 6930 6944 (fontified t) 6944 6945 (fontified t face (rainbow-delimiters-depth-1-face)) 6945 6947 (fontified t) 6947 6948 (fontified t face (rainbow-delimiters-depth-1-face)) 6948 6967 (fontified t) 6967 6968 (fontified t face (rainbow-delimiters-depth-1-face)) 6968 6970 (fontified t) 6970 6971 (fontified t face (rainbow-delimiters-depth-1-face)) 6971 6973 (fontified t) 6973 6978 (fontified t face font-lock-variable-name-face) 6978 7004 (fontified t) 7004 7005 (fontified t face (rainbow-delimiters-depth-1-face)) 7005 7006 (fontified t face (rainbow-delimiters-depth-2-face)) 7006 7033 (fontified t) 7033 7034 (fontified t face (rainbow-delimiters-depth-3-face)) 7034 7055 (fontified t) 7055 7059 (fontified t face font-lock-constant-face) 7059 7073 (fontified t) 7073 7074 (fontified t face (rainbow-delimiters-depth-4-face)) 7074 7078 (fontified t face font-lock-constant-face) 7078 7081 (fontified t) 7081 7082 (fontified t face (rainbow-delimiters-depth-4-face)) 7082 7083 (fontified t face (rainbow-delimiters-depth-3-face)) 7083 7111 (fontified t) 7111 7112 (fontified t face (rainbow-delimiters-depth-3-face)) 7112 7114 (fontified t) 7114 7115 (fontified t face (rainbow-delimiters-depth-3-face)) 7115 7139 (fontified t) 7139 7140 (fontified t face (rainbow-delimiters-depth-3-face)) 7140 7141 (fontified t) 7141 7142 (fontified t face (rainbow-delimiters-depth-3-face)) 7142 7143 (fontified t) 7143 7144 (fontified t face (rainbow-delimiters-depth-2-face)) 7144 7145 (fontified t face (rainbow-delimiters-depth-1-face)) 7145 7153 (fontified t) 7153 7160 (fontified t face font-lock-builtin-face) 7160 7161 (fontified t face (rainbow-delimiters-depth-1-face)) 7161 7166 (fontified t) 7166 7171 (fontified t face font-lock-string-face) 7171 7183 (fontified t) 7183 7189 (fontified t face font-lock-string-face) 7189 7190 (fontified t face (rainbow-delimiters-depth-1-face)) 7190 7191 (fontified t) 7191 7198 (fontified t face font-lock-variable-name-face) 7198 7210 (fontified t) 7210 7211 (fontified t face (rainbow-delimiters-depth-1-face)) 7211 7240 (fontified t) 7240 7276 (fontified nil) 7276 7277 (fontified nil face (rainbow-delimiters-depth-2-face)) 7277 7293 (fontified nil) 7293 7294 (fontified nil face (rainbow-delimiters-depth-2-face)) 7294 7295 (fontified nil rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 7295 7296 (fontified nil)) . 1) (undo-tree-id11304 . -6930) (undo-tree-id11305 . -7294) (undo-tree-id11306 . -6930) (undo-tree-id11307 . -189) (undo-tree-id11308 . -189) (undo-tree-id11309 . -218) (undo-tree-id11310 . -218) (undo-tree-id11311 . -248) (undo-tree-id11312 . -248) (undo-tree-id11313 . -6928) (undo-tree-id11314 . -6928) (undo-tree-id11315 . -6928) (undo-tree-id11316 . -6928) (undo-tree-id11317 . -6928) (undo-tree-id11318 . -6928) (undo-tree-id11319 . -6928) (undo-tree-id11320 . -6928) (undo-tree-id11321 . -6928) (undo-tree-id11322 . -6928) (undo-tree-id11323 . -6928) (undo-tree-id11324 . -6574) (undo-tree-id11325 . -6574) (undo-tree-id11326 . -6574) (undo-tree-id11327 . -6574) (undo-tree-id11328 . -6738) (undo-tree-id11329 . -6738) (undo-tree-id11330 . -6738) (undo-tree-id11331 . -6738) (undo-tree-id11332 . -6928) (undo-tree-id11333 . -6928) (undo-tree-id11334 . -6928) (undo-tree-id11335 . -6928) (undo-tree-id11336 . -6928) (undo-tree-id11337 . -6928) (undo-tree-id11338 . -6928) (undo-tree-id11339 . -6928) (undo-tree-id11340 . -6928) (undo-tree-id11341 . -6928) (undo-tree-id11342 . -6928) (undo-tree-id11343 . -6928) (undo-tree-id11344 . -6928) (undo-tree-id11345 . -6928) (undo-tree-id11346 . -6928) (undo-tree-id11347 . -6928) (undo-tree-id11348 . -6928) (undo-tree-id11349 . -6928) (undo-tree-id11350 . -6928) (undo-tree-id11351 . -6928) (undo-tree-id11352 . -6928) (undo-tree-id11353 . -6928) (undo-tree-id11354 . -6928) (undo-tree-id11355 . -6928) (undo-tree-id11356 . -6928) (undo-tree-id11357 . -6928) (undo-tree-id11358 . -6928) (undo-tree-id11359 . -6928) (undo-tree-id11360 . -6928) (undo-tree-id11361 . -6928) (undo-tree-id11362 . -6928) (undo-tree-id11363 . -6928) (undo-tree-id11364 . -6928) (undo-tree-id11365 . -6928) (undo-tree-id11366 . -6928) (undo-tree-id11367 . -6928) (undo-tree-id11368 . -6928) (undo-tree-id11369 . -6928) (undo-tree-id11370 . -6928) (undo-tree-id11371 . -6928) (undo-tree-id11372 . -6928) (undo-tree-id11373 . -6928) (undo-tree-id11374 . -6928) (undo-tree-id11375 . -6928) (undo-tree-id11376 . -6928) (undo-tree-id11377 . -6928) (undo-tree-id11378 . -6928) (undo-tree-id11379 . -6928) (undo-tree-id11380 . -6928) (undo-tree-id11381 . -6928) (undo-tree-id11382 . 368) (undo-tree-id11383 . -6929) (undo-tree-id11384 . -6917) (undo-tree-id11385 . -6917) (undo-tree-id11386 . -6929) (undo-tree-id11387 . -6929) (undo-tree-id11388 . -6929) (undo-tree-id11389 . 367) (undo-tree-id11390 . -6930) (undo-tree-id11391 . -6917) (undo-tree-id11392 . -6917) (undo-tree-id11393 . -6930) (undo-tree-id11394 . -6930) (undo-tree-id11395 . -6930) (undo-tree-id11396 . -6930) (undo-tree-id11397 . -6930) (undo-tree-id11398 . -6930) (undo-tree-id11399 . -6930) (undo-tree-id11400 . -6930) (undo-tree-id11401 . -6928) (undo-tree-id11402 . -7240) (undo-tree-id11403 . -7147) (undo-tree-id11404 . -7147) (undo-tree-id11405 . -7147) (undo-tree-id11406 . -7147) (undo-tree-id11407 . -7294) (undo-tree-id11408 . -7294) (undo-tree-id11409 . -7294) (undo-tree-id11410 . -7294) (undo-tree-id11411 . -7294) (undo-tree-id11412 . -7294) (undo-tree-id11413 . -7294) (undo-tree-id11414 . -7294) (undo-tree-id11415 . -7294) (undo-tree-id11416 . -7294) (undo-tree-id11417 . -7294) (undo-tree-id11418 . -6858) (undo-tree-id11419 . -7294) (undo-tree-id11420 . -7294) (undo-tree-id11421 . -6858) (undo-tree-id11422 . -7294) (undo-tree-id11423 . -7294) (undo-tree-id11424 . -7294) (undo-tree-id11425 . -7294) (7296 . 7297)) nil (25759 44273 35099 11000) 0 nil])
([nil nil ((7170 . 7174) (t 25759 44273 66219 394000)) nil (25759 44289 987025 751000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7316 . 7317) (nil fontified nil 7174 . 7317) (7174 . 7317) 7173) nil (25759 44289 987020 167000) 0 nil])
([nil nil ((#("https://colab.research.google.com/github/ageron/handson-ml2/blob/master/15_processing_sequences_using_rnns_and_cnns.ipynb#scrollTo=T9T_VEG2m3rd" 0 142 (fontified t face font-lock-comment-face) 142 143 (fontified t rear-nonsticky t face font-lock-comment-face)) . 7174) (undo-tree-id11570 . -142) (undo-tree-id11571 . -142) (undo-tree-id11572 . -142) (undo-tree-id11573 . -142) (undo-tree-id11574 . -142) (undo-tree-id11575 . -72) (undo-tree-id11576 . -115) (undo-tree-id11577 . -142) (undo-tree-id11578 . -142) (undo-tree-id11579 . -142) (undo-tree-id11580 . -142) (undo-tree-id11581 . -142) (undo-tree-id11582 . -77) (undo-tree-id11583 . -77) (undo-tree-id11584 . -77) (undo-tree-id11585 . -77) (undo-tree-id11586 . -77) (undo-tree-id11587 . -77) (undo-tree-id11588 . -77) (undo-tree-id11589 . -77) (undo-tree-id11590 . -77) (undo-tree-id11591 . -12) (undo-tree-id11592 . -13) (undo-tree-id11593 . -13) (undo-tree-id11594 . -13) (undo-tree-id11595 . -13) (undo-tree-id11596 . -13) (undo-tree-id11597 . -13) (undo-tree-id11598 . -8) (undo-tree-id11599 . -5) (undo-tree-id11600 . -143) (undo-tree-id11601 . -143) (t 25759 44290 6036 717000)) nil (25759 44344 70619 419000) 0 nil])
([nil nil ((7230 . 7233) (7225 . 7230) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -7225) (undo-tree-id11426 . -1) (undo-tree-id11427 . -1) (undo-tree-id11428 . -1) (undo-tree-id11429 . -1) (undo-tree-id11430 . -1) 7226 (7215 . 7226) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -7215) (undo-tree-id11431 . -1) (undo-tree-id11432 . -1) (undo-tree-id11433 . -1) (undo-tree-id11434 . -1) (undo-tree-id11435 . -1) (undo-tree-id11436 . -1) (undo-tree-id11437 . -1) (undo-tree-id11438 . -1) (undo-tree-id11439 . -1) (undo-tree-id11440 . -1) (undo-tree-id11441 . -1) (undo-tree-id11442 . -1) (undo-tree-id11443 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -7216) (undo-tree-id11444 . -1) (undo-tree-id11445 . -1) (undo-tree-id11446 . -1) (undo-tree-id11447 . -1) (undo-tree-id11448 . -1) (undo-tree-id11449 . -1) (undo-tree-id11450 . -1) (undo-tree-id11451 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -7217) (undo-tree-id11452 . -1) (undo-tree-id11453 . -1) (undo-tree-id11454 . -1) (undo-tree-id11455 . -1) 7218 (7206 . 7218) (7200 . 7206) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -7200) (undo-tree-id11456 . -1) (undo-tree-id11457 . -1) (undo-tree-id11458 . -1) (undo-tree-id11459 . -1) (undo-tree-id11460 . -1) (undo-tree-id11461 . -1) (undo-tree-id11462 . -1) (undo-tree-id11463 . -1) (undo-tree-id11464 . -1) (undo-tree-id11465 . -1) (undo-tree-id11466 . -1) (undo-tree-id11467 . -1) (undo-tree-id11468 . -1) (undo-tree-id11469 . -1) (undo-tree-id11470 . -1) (undo-tree-id11471 . -1) (undo-tree-id11472 . -1) (undo-tree-id11473 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -7201) (undo-tree-id11474 . -1) (undo-tree-id11475 . -1) (undo-tree-id11476 . -1) (undo-tree-id11477 . -1) (undo-tree-id11478 . -1) (undo-tree-id11479 . -1) (undo-tree-id11480 . -1) (undo-tree-id11481 . -1) (undo-tree-id11482 . -1) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -7202) (undo-tree-id11483 . -1) (undo-tree-id11484 . -1) (undo-tree-id11485 . -1) (undo-tree-id11486 . -1) 7203 (7200 . 7203) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -7200) (undo-tree-id11487 . -1) (undo-tree-id11488 . -1) (undo-tree-id11489 . -1) (undo-tree-id11490 . -1) (undo-tree-id11491 . -1) (undo-tree-id11492 . -1) (undo-tree-id11493 . -1) 7201 (7198 . 7201) (7197 . 7198) (#("M" 0 1 (fontified t face font-lock-comment-face)) . -7197) (undo-tree-id11494 . -1) (undo-tree-id11495 . -1) (undo-tree-id11496 . -1) (undo-tree-id11497 . -1) (undo-tree-id11498 . -1) (undo-tree-id11499 . -1) (undo-tree-id11500 . -1) (undo-tree-id11501 . -1) (undo-tree-id11502 . -1) (undo-tree-id11503 . -1) (undo-tree-id11504 . -1) (undo-tree-id11505 . -1) (undo-tree-id11506 . -1) (undo-tree-id11507 . -1) (undo-tree-id11508 . -1) (undo-tree-id11509 . -1) (undo-tree-id11510 . -1) (#("M" 0 1 (fontified t face font-lock-comment-face)) . -7198) (undo-tree-id11511 . -1) (undo-tree-id11512 . -1) (undo-tree-id11513 . -1) (undo-tree-id11514 . -1) (undo-tree-id11515 . -1) (undo-tree-id11516 . -1) (undo-tree-id11517 . -1) (undo-tree-id11518 . -1) (undo-tree-id11519 . -1) (undo-tree-id11520 . -1) (undo-tree-id11521 . -1) (undo-tree-id11522 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -7199) (undo-tree-id11523 . -1) (undo-tree-id11524 . -1) (undo-tree-id11525 . -1) (undo-tree-id11526 . -1) (undo-tree-id11527 . -1) (undo-tree-id11528 . -1) (undo-tree-id11529 . -1) (undo-tree-id11530 . -1) 7200 (7197 . 7200) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -7197) (undo-tree-id11531 . -1) (undo-tree-id11532 . -1) (undo-tree-id11533 . -1) (undo-tree-id11534 . -1) (undo-tree-id11535 . -1) (undo-tree-id11536 . -1) (undo-tree-id11537 . -1) (undo-tree-id11538 . -1) (undo-tree-id11539 . -1) (undo-tree-id11540 . -1) (undo-tree-id11541 . -1) (undo-tree-id11542 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -7198) (undo-tree-id11543 . -1) (undo-tree-id11544 . -1) (undo-tree-id11545 . -1) (undo-tree-id11546 . -1) (undo-tree-id11547 . -1) (undo-tree-id11548 . -1) 7199 (7190 . 7199) (7187 . 7190) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -7187) (undo-tree-id11549 . -1) (undo-tree-id11550 . -1) (undo-tree-id11551 . -1) (undo-tree-id11552 . -1) (undo-tree-id11553 . -1) (undo-tree-id11554 . -1) (undo-tree-id11555 . -1) (undo-tree-id11556 . -1) 7188 (7187 . 7188) (#("m" 0 1 (fontified t face font-lock-comment-face)) . -7187) (undo-tree-id11557 . -1) (undo-tree-id11558 . -1) (undo-tree-id11559 . -1) (undo-tree-id11560 . -1) (undo-tree-id11561 . -1) (undo-tree-id11562 . -1) (undo-tree-id11563 . -1) (undo-tree-id11564 . -1) (undo-tree-id11565 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -7188) (undo-tree-id11566 . -1) (undo-tree-id11567 . -1) (undo-tree-id11568 . -1) (undo-tree-id11569 . -1) 7189 (7174 . 7189)) nil (25759 44344 70574 806000) 0 nil])
([nil nil ((#("### Make the second SimpleRNN layer return only the last output
" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 4 (fontified t face font-lock-comment-delimiter-face) 4 63 (fontified t face font-lock-comment-face) 63 64 (fontified t face font-lock-comment-face)) . 7170) (undo-tree-id11611 . 1) (undo-tree-id11612 . -63) (undo-tree-id11613 . -59) (undo-tree-id11614 . -4) (undo-tree-id11615 . -4) (undo-tree-id11616 . -4) (undo-tree-id11617 . -4) (undo-tree-id11618 . -4) (undo-tree-id11619 . -4) (undo-tree-id11620 . -4) (undo-tree-id11621 . -4) (undo-tree-id11622 . -4) (undo-tree-id11623 . -4) (undo-tree-id11624 . -4) (undo-tree-id11625 . -4) (undo-tree-id11626 . -4) (undo-tree-id11627 . -4) (undo-tree-id11628 . -4) (undo-tree-id11629 . -4) (undo-tree-id11630 . -4) (undo-tree-id11631 . -4) (undo-tree-id11632 . -4) (undo-tree-id11633 . -4) (undo-tree-id11634 . -4) (undo-tree-id11635 . -4) (undo-tree-id11636 . -4) (undo-tree-id11637 . -4) (undo-tree-id11638 . -4) (undo-tree-id11639 . -4) (undo-tree-id11640 . -17) (undo-tree-id11641 . -17) (undo-tree-id11642 . -17) (undo-tree-id11643 . -17) (undo-tree-id11644 . -17) (undo-tree-id11645 . -17) (undo-tree-id11646 . -17) (undo-tree-id11647 . -17) (undo-tree-id11648 . -17) (undo-tree-id11649 . -17) (undo-tree-id11650 . -17) (undo-tree-id11651 . -17) (undo-tree-id11652 . -17) (undo-tree-id11653 . -27) (undo-tree-id11654 . -27) (undo-tree-id11655 . -27) (undo-tree-id11656 . -27) (undo-tree-id11657 . -27) (undo-tree-id11658 . -27) (undo-tree-id11659 . -27) (undo-tree-id11660 . -27) (undo-tree-id11661 . -27) (undo-tree-id11662 . -27) (undo-tree-id11663 . -27) (undo-tree-id11664 . -27) (undo-tree-id11665 . -27) (undo-tree-id11666 . -27) (undo-tree-id11667 . -27) (undo-tree-id11668 . -27) (undo-tree-id11669 . -27) (undo-tree-id11670 . -27) (undo-tree-id11671 . -27) (undo-tree-id11672 . -27) (undo-tree-id11673 . -27) (undo-tree-id11674 . -27) (undo-tree-id11675 . -27) (undo-tree-id11676 . -27) (undo-tree-id11677 . -30) (undo-tree-id11678 . -30) (undo-tree-id11679 . -30) (undo-tree-id11680 . -30) (undo-tree-id11681 . -30) (undo-tree-id11682 . -30) (undo-tree-id11683 . -30) (undo-tree-id11684 . -30) (undo-tree-id11685 . -30) (undo-tree-id11686 . -30) (undo-tree-id11687 . -30) (undo-tree-id11688 . -30) (undo-tree-id11689 . -30) (undo-tree-id11690 . -30) (undo-tree-id11691 . -30) (undo-tree-id11692 . -30) (undo-tree-id11693 . -30) (undo-tree-id11694 . -30) (undo-tree-id11695 . -30) (undo-tree-id11696 . -45) (undo-tree-id11697 . -45) (undo-tree-id11698 . -45) (undo-tree-id11699 . -45) (undo-tree-id11700 . -45) (undo-tree-id11701 . -45) (undo-tree-id11702 . -45) (undo-tree-id11703 . -45) (undo-tree-id11704 . -45) (undo-tree-id11705 . -45) (undo-tree-id11706 . -45) (undo-tree-id11707 . -55) (undo-tree-id11708 . -55) (undo-tree-id11709 . -55) (undo-tree-id11710 . -62) (undo-tree-id11711 . -62) (undo-tree-id11712 . -62) (undo-tree-id11713 . -62) (undo-tree-id11714 . -64) (undo-tree-id11715 . -1) (undo-tree-id11716 . -64) (undo-tree-id11717 . -64) (undo-tree-id11718 . -64) (undo-tree-id11719 . -5) (undo-tree-id11720 . -5) (undo-tree-id11721 . -5) (undo-tree-id11722 . -5) (undo-tree-id11723 . -5) (undo-tree-id11724 . -5) (undo-tree-id11725 . -5) (undo-tree-id11726 . -5) (undo-tree-id11727 . -5) (undo-tree-id11728 . -5) (undo-tree-id11729 . -5) (undo-tree-id11730 . -5) (undo-tree-id11731 . -5) (undo-tree-id11732 . -5) (undo-tree-id11733 . -5) (undo-tree-id11734 . -5) (undo-tree-id11735 . -5) (undo-tree-id11736 . -5) (undo-tree-id11737 . -5) (undo-tree-id11738 . -5) (undo-tree-id11739 . -5) (undo-tree-id11740 . -5) (undo-tree-id11741 . -5) (undo-tree-id11742 . -5) (undo-tree-id11743 . -5) (undo-tree-id11744 . -5) (undo-tree-id11745 . -5) (undo-tree-id11746 . -5) (undo-tree-id11747 . -5) (undo-tree-id11748 . -5) (undo-tree-id11749 . -5) (undo-tree-id11750 . -5) (undo-tree-id11751 . -5) (undo-tree-id11752 . -5) (undo-tree-id11753 . -5) (undo-tree-id11754 . -5) (undo-tree-id11755 . -5) (undo-tree-id11756 . -5) (undo-tree-id11757 . -5) (undo-tree-id11758 . -5) (undo-tree-id11759 . -5) (undo-tree-id11760 . -5) (undo-tree-id11761 . -5) (undo-tree-id11762 . -5) (undo-tree-id11763 . -5) (undo-tree-id11764 . -5) (undo-tree-id11765 . -5) (undo-tree-id11766 . -5) (undo-tree-id11767 . -5) (undo-tree-id11768 . -5) (undo-tree-id11769 . -5) (undo-tree-id11770 . -5) (undo-tree-id11771 . -5) (undo-tree-id11772 . -5) (undo-tree-id11773 . -5) (undo-tree-id11774 . -5) (undo-tree-id11775 . -5) (undo-tree-id11776 . -5) (undo-tree-id11777 . -5) (undo-tree-id11778 . -5) (undo-tree-id11779 . -5) (undo-tree-id11780 . -5) (undo-tree-id11781 . -5) (undo-tree-id11782 . -5) (undo-tree-id11783 . -5) (undo-tree-id11784 . -5) (undo-tree-id11785 . -5) (undo-tree-id11786 . -5) (undo-tree-id11787 . -5) (undo-tree-id11788 . -5) (undo-tree-id11789 . -5) (undo-tree-id11790 . -5) (undo-tree-id11791 . -5) (undo-tree-id11792 . -5) (undo-tree-id11793 . -5) (undo-tree-id11794 . -5) (undo-tree-id11795 . -5) (undo-tree-id11796 . -5) (undo-tree-id11797 . -5) (undo-tree-id11798 . -5) (undo-tree-id11799 . -5) (undo-tree-id11800 . -5) (undo-tree-id11801 . -5) (undo-tree-id11802 . -5) (undo-tree-id11803 . -5) (undo-tree-id11804 . -5) (undo-tree-id11805 . -5) (undo-tree-id11806 . -5) (undo-tree-id11807 . -5) (undo-tree-id11808 . -5) (undo-tree-id11809 . -5) (undo-tree-id11810 . -5) (undo-tree-id11811 . -5) (undo-tree-id11812 . -5) (undo-tree-id11813 . -5) (undo-tree-id11814 . -5) (undo-tree-id11815 . -5) (undo-tree-id11816 . -5) (undo-tree-id11817 . -5) (undo-tree-id11818 . -5) (undo-tree-id11819 . -5) (undo-tree-id11820 . -5) (undo-tree-id11821 . -5) (undo-tree-id11822 . -5) (undo-tree-id11823 . -5) (undo-tree-id11824 . -5) (undo-tree-id11825 . -5) (undo-tree-id11826 . -5) (undo-tree-id11827 . -5) (undo-tree-id11828 . -5) (undo-tree-id11829 . -5) (undo-tree-id11830 . -5) (undo-tree-id11831 . -5) (undo-tree-id11832 . -5) (undo-tree-id11833 . -5) (undo-tree-id11834 . -5) (undo-tree-id11835 . -5) (undo-tree-id11836 . -5) (undo-tree-id11837 . -5) (undo-tree-id11838 . -64) (t 25759 44344 97526 254000)) nil (25759 44381 734431 338000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6930 . 6931) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -6994) (6930 . 6995)) nil (25759 44381 733587 626000) 0 nil])
([nil nil ((#("np.random.seed(42)
" 0 14 (fontified t) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-1-face)) 18 19 (fontified t)) . 6995) (undo-tree-id11608 . -18) (undo-tree-id11609 . -19) (undo-tree-id11610 . -19)) nil (25759 44381 733586 167000) 0 nil])
([nil nil ((#("tf.random.set_seed(42)
" 0 18 (fontified t) 18 19 (fontified t face (rainbow-delimiters-depth-1-face)) 19 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 23 (fontified t)) . 6995) (undo-tree-id11604 . -22) (undo-tree-id11605 . -23) (undo-tree-id11606 . -22) (undo-tree-id11607 . -23)) nil (25759 44381 733582 197000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6995) (undo-tree-id11602 . -1) (undo-tree-id11603 . -1)) nil (25759 44381 733574 759000) 0 nil])
([nil nil ((6994 . 6995) (t 25759 44381 761231 876000) 6939) nil (25759 44387 750663 339000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7007 . 7008) (nil fontified nil 7007 . 7008) (7007 . 7008) (nil rear-nonsticky nil 7006 . 7007) (nil fontified nil 7006 . 7007) (7006 . 7007) (nil rear-nonsticky nil 7005 . 7006) (nil fontified nil 7005 . 7006) (7005 . 7006) (nil rear-nonsticky nil 7004 . 7005) (nil fontified nil 7004 . 7005) (7004 . 7005) (nil rear-nonsticky nil 7003 . 7004) (nil fontified nil 7003 . 7004) (7003 . 7004) (nil rear-nonsticky nil 7002 . 7003) (nil fontified nil 7002 . 7003) (7002 . 7003) (nil rear-nonsticky nil 7001 . 7002) (nil fontified nil 7001 . 7002) (7001 . 7002) (nil rear-nonsticky nil 7000 . 7001) (nil fontified nil 7000 . 7001) (7000 . 7001) (nil rear-nonsticky nil 6999 . 7000) (nil fontified nil 6999 . 7000) (6999 . 7000) (nil rear-nonsticky nil 6998 . 6999) (nil fontified nil 6998 . 6999) (6998 . 6999) (nil rear-nonsticky nil 6997 . 6998) (nil fontified nil 6997 . 6998) (6997 . 6998) (nil rear-nonsticky nil 6996 . 6997) (nil fontified nil 6996 . 6997) (6996 . 6997) (nil rear-nonsticky nil 6995 . 6996) (nil fontified nil 6995 . 6996) (6995 . 6996) (nil rear-nonsticky nil 6994 . 6995) (nil fontified nil 6994 . 6995) (6994 . 6995) (nil rear-nonsticky nil 6993 . 6994) (nil fontified nil 6993 . 6994) (6993 . 6994) (nil rear-nonsticky nil 6992 . 6993) (nil fontified nil 6992 . 6993) (6992 . 6993) (nil rear-nonsticky nil 6991 . 6992) (nil fontified nil 6991 . 6992) (6991 . 6992) (nil rear-nonsticky nil 6990 . 6991) (nil fontified nil 6990 . 6991) (6990 . 6991) (nil rear-nonsticky nil 6989 . 6990) (nil fontified nil 6989 . 6990) (6989 . 6990) (nil rear-nonsticky nil 6988 . 6989) (nil fontified nil 6988 . 6989) (6988 . 6989) (nil rear-nonsticky nil 6987 . 6988) (nil fontified nil 6987 . 6988) (6987 . 6988) (nil rear-nonsticky nil 6986 . 6987) (nil fontified nil 6986 . 6987) (6986 . 6987) (nil rear-nonsticky nil 6985 . 6986) (nil fontified nil 6985 . 6986) (6985 . 6986) (nil rear-nonsticky nil 6984 . 6985) (nil fontified nil 6984 . 6985) (6984 . 6985) (nil rear-nonsticky nil 6983 . 6984) (nil fontified nil 6983 . 6984) (6983 . 6984) (nil rear-nonsticky nil 6982 . 6983) (nil fontified nil 6982 . 6983) (6982 . 6983) (nil rear-nonsticky nil 6981 . 6982) (nil fontified nil 6981 . 6982) (6981 . 6982) (nil rear-nonsticky nil 6980 . 6981) (nil fontified nil 6980 . 6981) (6980 . 6981) (nil rear-nonsticky nil 6979 . 6980) (nil fontified nil 6979 . 6980) (6979 . 6980) (nil rear-nonsticky nil 6978 . 6979) (nil fontified nil 6978 . 6979) (6978 . 6979) (nil rear-nonsticky nil 6977 . 6978) (nil fontified nil 6977 . 6978) (6977 . 6978) (nil rear-nonsticky nil 6976 . 6977) (nil fontified nil 6976 . 6977) (6976 . 6977) (nil rear-nonsticky nil 6975 . 6976) (nil fontified nil 6975 . 6976) (6975 . 6976) (nil rear-nonsticky nil 6974 . 6975) (nil fontified nil 6974 . 6975) (6974 . 6975) (nil rear-nonsticky nil 6973 . 6974) (nil fontified nil 6973 . 6974) (6973 . 6974) (nil rear-nonsticky nil 6972 . 6973) (nil fontified nil 6972 . 6973) (6972 . 6973) (nil rear-nonsticky nil 6971 . 6972) (nil fontified nil 6971 . 6972) (6971 . 6972) (nil rear-nonsticky nil 6970 . 6971) (nil fontified nil 6970 . 6971) (6970 . 6971) (nil rear-nonsticky nil 6969 . 6970) (nil fontified nil 6969 . 6970) (6969 . 6970) (nil rear-nonsticky nil 6968 . 6969) (nil fontified nil 6968 . 6969) (6968 . 6969) (nil rear-nonsticky nil 6967 . 6968) (nil fontified nil 6967 . 6968) (6967 . 6968) (nil rear-nonsticky nil 6966 . 6967) (nil fontified nil 6966 . 6967) (6966 . 6967) (nil rear-nonsticky nil 6965 . 6966) (nil fontified nil 6965 . 6966) (6965 . 6966) (nil rear-nonsticky nil 6964 . 6965) (nil fontified nil 6964 . 6965) (6964 . 6965) (nil rear-nonsticky nil 6963 . 6964) (nil fontified nil 6963 . 6964) (6963 . 6964) (nil rear-nonsticky nil 6962 . 6963) (nil fontified nil 6962 . 6963) (6962 . 6963) (nil rear-nonsticky nil 6961 . 6962) (nil fontified nil 6961 . 6962) (6961 . 6962) (nil rear-nonsticky nil 6960 . 6961) (nil fontified nil 6960 . 6961) (6960 . 6961) (nil rear-nonsticky nil 6959 . 6960) (nil fontified nil 6959 . 6960) (6959 . 6960) (nil rear-nonsticky nil 6958 . 6959) (nil fontified nil 6958 . 6959) (6958 . 6959) (nil rear-nonsticky nil 6957 . 6958) (nil fontified nil 6957 . 6958) (6957 . 6958) (nil rear-nonsticky nil 6956 . 6957) (nil fontified nil 6956 . 6957) (6956 . 6957) (nil rear-nonsticky nil 6955 . 6956) (nil fontified nil 6955 . 6956) (6955 . 6956) (nil rear-nonsticky nil 6954 . 6955) (nil fontified nil 6954 . 6955) (6954 . 6955) (nil rear-nonsticky nil 6953 . 6954) (nil fontified nil 6953 . 6954) (6953 . 6954) (nil rear-nonsticky nil 6952 . 6953) (nil fontified nil 6952 . 6953) (6952 . 6953) (nil rear-nonsticky nil 6951 . 6952) (nil fontified nil 6951 . 6952) (6951 . 6952) (nil rear-nonsticky nil 6950 . 6951) (nil fontified nil 6950 . 6951) (6950 . 6951) (nil rear-nonsticky nil 6949 . 6950) (nil fontified nil 6949 . 6950) (6949 . 6950) (nil rear-nonsticky nil 6948 . 6949) (nil fontified nil 6948 . 6949) (6948 . 6949) (nil rear-nonsticky nil 6947 . 6948) (nil fontified nil 6947 . 6948) (6947 . 6948) (nil rear-nonsticky nil 6946 . 6947) (nil fontified nil 6946 . 6947) (6946 . 6947) (nil rear-nonsticky nil 6945 . 6946) (nil fontified nil 6945 . 6946) (6945 . 6946) (nil rear-nonsticky nil 6944 . 6945) (nil fontified nil 6944 . 6945) (6944 . 6945) (nil rear-nonsticky nil 6943 . 6944) (nil fontified nil 6943 . 6944) (6943 . 6944) (nil rear-nonsticky nil 6942 . 6943) (nil fontified nil 6942 . 6943) (6942 . 6943) (nil rear-nonsticky nil 6941 . 6942) (nil fontified nil 6941 . 6942) (6941 . 6942) (nil rear-nonsticky nil 6940 . 6941) (nil fontified nil 6940 . 6941) (6940 . 6941) (nil rear-nonsticky nil 6939 . 6940) (nil fontified nil 6939 . 6940) (6939 . 6940) (nil rear-nonsticky nil 6938 . 6939) (nil fontified nil 6938 . 6939) (6938 . 6939) (nil rear-nonsticky nil 6937 . 6938) (nil fontified nil 6937 . 6938) (6937 . 6938) (nil rear-nonsticky nil 6936 . 6937) (nil fontified nil 6936 . 6937) (6936 . 6937) (nil rear-nonsticky nil 6935 . 6936) (nil fontified nil 6935 . 6936) (6935 . 6936) (nil rear-nonsticky nil 6934 . 6935) (nil fontified nil 6934 . 6935) (6934 . 6935) (nil rear-nonsticky nil 6933 . 6934) (nil fontified nil 6933 . 6934) (6933 . 6934) (nil rear-nonsticky nil 6932 . 6933) (nil fontified nil 6932 . 6933) (6932 . 6933) (nil rear-nonsticky nil 6931 . 6932) (nil fontified nil 6931 . 6932) (6931 . 6932) (nil rear-nonsticky nil 6930 . 6931) (nil fontified nil 6930 . 6931) (6930 . 6931) (t 25759 44385 445205 611000)) nil (25759 44392 24485 446000) 0 nil] [nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 6931) (undo-tree-id11839 . -1) (undo-tree-id11840 . -1) (undo-tree-id11841 . -1) (t 25759 44385 445205 611000)) ((6931 . 6932)) (25759 44387 750141 66000) 0 nil])
([nil nil ((7269 . 7270) (t 25759 44392 53159 588000)) nil (25759 44395 626469 975000) 0 nil])
nil
([nil nil ((7401 . 7402) (7400 . 7401) (t 25759 44395 657135 78000) 7400) nil (25759 44398 898133 232000) 0 nil])
([nil nil ((1 . 7400) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################

model = keras.models.Sequential(
    [
        # Flatten layer to flatten the input shape of [50, 1] to a 1D array of size 50
        keras.layers.Flatten(input_shape=[50, 1]),
        # Dense layer with 1 unit, representing a single output value
        keras.layers.Dense(1),
    ]
)

# Compile the model
model.compile(loss=\"mse\", optimizer=\"adam\")

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

# Evaluate the model on the validation set
model.evaluate(X_valid, y_valid)
###############################################################################

# Plot the learning curves
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

# Make predictions on the validation set
y_pred = model.predict(X_valid)

# Plot the series
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################
# Using a Simpl RNN

# Define the model architecture
model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(1, input_shape=[None, 1]),
    ],
)

# Define the optimizer with a specific learning rate
optimizer = keras.optimizers.Adam(learning_rate=0.005)

# Compile the model
model.compile(loss=\"mse\", optimizer=optimizer)

# Train the model
history = model.fit(
    X_train,
    y_train,
    epochs=20,
    validation_data=(X_valid, y_valid),
)


model.evaluate(X_valid, y_valid)

plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()


y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

# Deep RNN


np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(20, return_sequences=True, input_shape=[None, 1]),
        keras.layers.SimpleRNN(20, return_sequences=True),
        keras.layers.SimpleRNN(1),
    ]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

model.evaluate(X_valid, y_valid)

plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()


y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

##############################################################################
### Make the second SimpleRNN layer return only the last output

model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(20, return_sequences=True, input_shape=[None, 1]),
        keras.layers.SimpleRNN(20),
        keras.layers.Dense(1),
    ]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))


" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 2654 2655 (syntax-table (15)) 2830 2831 (syntax-table (15)) 6858 6869 (fontified t) 6869 6870 (fontified t face (rainbow-delimiters-depth-1-face)) 6870 6877 (fontified t) 6877 6878 (fontified t face (rainbow-delimiters-depth-2-face)) 6878 6885 (fontified t) 6885 6886 (fontified t face (rainbow-delimiters-depth-2-face)) 6886 6895 (fontified t) 6895 6896 (fontified t face (rainbow-delimiters-depth-2-face)) 6896 6900 (fontified t) 6900 6901 (fontified t face (rainbow-delimiters-depth-2-face)) 6901 6909 (fontified t) 6909 6910 (fontified t face (rainbow-delimiters-depth-2-face)) 6910 6914 (fontified t) 6914 6915 (fontified t face (rainbow-delimiters-depth-2-face)) 6915 6916 (fontified t face (rainbow-delimiters-depth-1-face)) 6916 6925 (fontified t) 6925 6926 (fontified t face (rainbow-delimiters-depth-1-face)) 6926 6927 (fontified t face (rainbow-delimiters-depth-1-face)) 6927 6929 (fontified t) 6929 6930 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6930 6931 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6931 6932 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6932 6933 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6933 6934 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6934 6935 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6935 6936 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6936 6937 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6937 6938 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6938 6939 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6939 6940 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6940 6941 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6941 6942 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6942 6943 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6943 6944 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6944 6945 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6945 6946 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6946 6947 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6947 6948 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6948 6949 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6949 6950 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6950 6951 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6951 6952 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6952 6953 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6953 6954 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6954 6955 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6955 6956 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6956 6957 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6957 6958 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6958 6959 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6959 6960 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6960 6961 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6961 6962 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6962 6963 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6963 6964 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6964 6965 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6965 6966 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6966 6967 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6967 6968 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6968 6969 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6969 6970 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6970 6971 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6971 6972 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6972 6973 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6973 6974 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6974 6975 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6975 6976 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6976 6977 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6977 6978 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6978 6979 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6979 6980 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6980 6981 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6981 6982 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6982 6983 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6983 6984 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6984 6985 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6985 6986 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6986 6987 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6987 6988 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6988 6989 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6989 6990 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6990 6991 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6991 6992 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6992 6993 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6993 6994 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6994 6995 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6995 6996 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6996 6997 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6997 6998 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6998 6999 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 6999 7000 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 7000 7001 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 7001 7002 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 7002 7003 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 7003 7004 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 7004 7005 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 7005 7006 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 7006 7007 (fontified t rear-nonsticky t face font-lock-comment-delimiter-face) 7007 7008 (fontified t rear-nonsticky t face font-lock-comment-face) 7008 7009 (fontified t face font-lock-comment-delimiter-face) 7009 7011 (fontified t face font-lock-comment-delimiter-face) 7011 7012 (fontified t face font-lock-comment-delimiter-face) 7012 7016 (fontified t face font-lock-comment-face) 7016 7071 (fontified t face font-lock-comment-face) 7071 7072 (fontified t face font-lock-comment-face) 7072 7073 (fontified t) 7073 7078 (fontified t face font-lock-variable-name-face) 7078 7104 (fontified t) 7104 7105 (fontified t face (rainbow-delimiters-depth-1-face)) 7105 7106 (fontified t) 7106 7110 (fontified t) 7110 7111 (fontified t face (rainbow-delimiters-depth-2-face)) 7111 7142 (fontified t) 7142 7143 (fontified t face (rainbow-delimiters-depth-3-face)) 7143 7164 (fontified t) 7164 7168 (fontified t face font-lock-constant-face) 7168 7182 (fontified t) 7182 7183 (fontified t face (rainbow-delimiters-depth-4-face)) 7183 7187 (fontified t face font-lock-constant-face) 7187 7190 (fontified t) 7190 7191 (fontified t face (rainbow-delimiters-depth-4-face)) 7191 7192 (fontified t face (rainbow-delimiters-depth-3-face)) 7192 7224 (fontified t) 7224 7225 (fontified t face (rainbow-delimiters-depth-3-face)) 7225 7227 (fontified t) 7227 7228 (fontified t face (rainbow-delimiters-depth-3-face)) 7228 7256 (fontified t) 7256 7257 (fontified t face (rainbow-delimiters-depth-3-face)) 7257 7258 (fontified t) 7258 7259 (fontified t face (rainbow-delimiters-depth-3-face)) 7259 7265 (fontified t) 7265 7266 (fontified t face (rainbow-delimiters-depth-2-face)) 7266 7267 (fontified t) 7267 7268 (fontified t face (rainbow-delimiters-depth-1-face)) 7268 7269 (fontified t) 7269 7270 (fontified t) 7270 7276 (fontified t) 7276 7283 (fontified t face font-lock-builtin-face) 7283 7284 (fontified t face (rainbow-delimiters-depth-1-face)) 7284 7289 (fontified t) 7289 7294 (fontified t face font-lock-string-face) 7294 7306 (fontified t) 7306 7312 (fontified t face font-lock-string-face) 7312 7313 (fontified t face (rainbow-delimiters-depth-1-face)) 7313 7314 (fontified t) 7314 7321 (fontified t face font-lock-variable-name-face) 7321 7333 (fontified t) 7333 7334 (fontified t face (rainbow-delimiters-depth-1-face)) 7334 7379 (fontified t) 7379 7380 (fontified t face (rainbow-delimiters-depth-2-face)) 7380 7396 (fontified t) 7396 7397 (fontified t face (rainbow-delimiters-depth-2-face)) 7397 7398 (fontified t face (rainbow-delimiters-depth-1-face)) 7398 7399 (fontified t) 7399 7400 (fontified t) 7400 7401 (fontified t)) . -1) (undo-tree-id11842 . -7399) (undo-tree-id11843 . -7399) (undo-tree-id11844 . -6858) (undo-tree-id11845 . -7270) (undo-tree-id11846 . -6929) (undo-tree-id11847 . -7270) (undo-tree-id11848 . -38) (undo-tree-id11849 . -44) (undo-tree-id11850 . -106) (undo-tree-id11851 . -110) (undo-tree-id11852 . -871) (undo-tree-id11853 . -876) (undo-tree-id11854 . -1097) (undo-tree-id11855 . -1101) (undo-tree-id11856 . -1187) (undo-tree-id11857 . -1188) (undo-tree-id11858 . -1355) (undo-tree-id11859 . -1356) (undo-tree-id11860 . -3060) (undo-tree-id11861 . -3064) (undo-tree-id11862 . -4756) (undo-tree-id11863 . -4760) (undo-tree-id11864 . -5083) (undo-tree-id11865 . -5090) (undo-tree-id11866 . -6468) (undo-tree-id11867 . -6469) (undo-tree-id11868 . -6693) (undo-tree-id11869 . -6700) (undo-tree-id11870 . -7008) (undo-tree-id11871 . -7009) (undo-tree-id11872 . -7191) (undo-tree-id11873 . -7192) (undo-tree-id11874 . -7389) (undo-tree-id11875 . -7396) (undo-tree-id11876 . -1) (undo-tree-id11877 . -38) (undo-tree-id11878 . -44) (undo-tree-id11879 . -106) (undo-tree-id11880 . -110) (undo-tree-id11881 . -106) (undo-tree-id11882 . -110) (undo-tree-id11883 . -563) (undo-tree-id11884 . -570) (undo-tree-id11885 . -526) (undo-tree-id11886 . -529) (undo-tree-id11887 . -947) (undo-tree-id11888 . -953) (undo-tree-id11889 . -1626) (undo-tree-id11890 . -1629) (undo-tree-id11891 . -1626) (undo-tree-id11892 . -1629) (undo-tree-id11893 . -1647) (undo-tree-id11894 . -1653) (undo-tree-id11895 . -1663) (undo-tree-id11896 . -1669) (undo-tree-id11897 . -1655) (undo-tree-id11898 . -1656) (undo-tree-id11899 . -3563) (undo-tree-id11900 . -3570) (undo-tree-id11901 . -5008) (undo-tree-id11902 . -5015) (undo-tree-id11903 . -5963) (undo-tree-id11904 . -5970) (undo-tree-id11905 . -6618) (undo-tree-id11906 . -6625) (undo-tree-id11907 . -7398) (undo-tree-id11908 . -7399) (undo-tree-id11909 . -38) (undo-tree-id11910 . -44) (undo-tree-id11911 . -106) (undo-tree-id11912 . -110) (undo-tree-id11913 . -871) (undo-tree-id11914 . -876) (undo-tree-id11915 . -1097) (undo-tree-id11916 . -1101) (undo-tree-id11917 . -1187) (undo-tree-id11918 . -1188) (undo-tree-id11919 . -1355) (undo-tree-id11920 . -1356) (undo-tree-id11921 . -3060) (undo-tree-id11922 . -3064) (undo-tree-id11923 . -4756) (undo-tree-id11924 . -4760) (undo-tree-id11925 . -5083) (undo-tree-id11926 . -5090) (undo-tree-id11927 . -6468) (undo-tree-id11928 . -6469) (undo-tree-id11929 . -6693) (undo-tree-id11930 . -6700) (undo-tree-id11931 . -7008) (undo-tree-id11932 . -7009) (undo-tree-id11933 . -7191) (undo-tree-id11934 . -7192) (undo-tree-id11935 . -7389) (undo-tree-id11936 . -7396) (undo-tree-id11937 . -7071) (undo-tree-id11938 . -7269) (undo-tree-id11939 . -7269) (undo-tree-id11940 . -7269) (undo-tree-id11941 . -7269) (undo-tree-id11942 . -7270) (undo-tree-id11943 . -7314) (undo-tree-id11944 . -7379) (undo-tree-id11945 . -7399) (undo-tree-id11946 . -7399) (undo-tree-id11947 . -7400) (undo-tree-id11948 . -7314) (undo-tree-id11949 . -7314) (undo-tree-id11950 . -7400) (undo-tree-id11951 . -7400) (undo-tree-id11952 . -7400) (undo-tree-id11953 . -7400) (undo-tree-id11954 . 1) (undo-tree-id11955 . -7401) (undo-tree-id11956 . -7314) (undo-tree-id11957 . -7314) (undo-tree-id11958 . -7401) (undo-tree-id11959 . -7401) (undo-tree-id11960 . -7401) (undo-tree-id11961 . -7401) (undo-tree-id11962 . -7401) (undo-tree-id11963 . -7401) (undo-tree-id11964 . -7401) (undo-tree-id11965 . -7401) (undo-tree-id11966 . -7401) (undo-tree-id11967 . -7401) (undo-tree-id11968 . -7401) (undo-tree-id11969 . -7401) (undo-tree-id11970 . -7401) (undo-tree-id11971 . -7401) (undo-tree-id11972 . -7401) (undo-tree-id11973 . -7401) (undo-tree-id11974 . -7401) (undo-tree-id11975 . -7401) (undo-tree-id11976 . -7401) (undo-tree-id11977 . -6858) (undo-tree-id11978 . -7401) (undo-tree-id11979 . -7401) (undo-tree-id11980 . -6858) (undo-tree-id11981 . -7401) (undo-tree-id11982 . -7401) (undo-tree-id11983 . -7401) (undo-tree-id11984 . -7401)) nil (25759 44398 898122 837000) 0 nil])
([nil nil ((7400 . 7401) (t 25759 44398 921113 229000)) nil (25759 44430 137675 108000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7432 . 7433) (nil fontified nil 7401 . 7433) (7401 . 7433)) nil (25759 44430 137672 918000) 0 nil])
([nil nil ((7433 . 7435)) nil (25759 44430 137670 756000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7519 . 7520) (nil fontified nil 7435 . 7520) (7435 . 7520)) nil (25759 44430 137668 326000) 0 nil])
([nil nil ((7520 . 7521)) nil (25759 44430 137661 62000) 0 nil])
([nil nil ((7521 . 7522) (t 25759 44430 164920 725000)) nil (25759 44442 751856 281000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7622 . 7623) (nil fontified nil 7522 . 7623) (7522 . 7623)) nil (25759 44442 751854 128000) 0 nil])
([nil nil ((7623 . 7624)) nil (25759 44442 751848 44000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7801 . 7802) (nil fontified nil 7074 . 7802) (7074 . 7802) (#("model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(20, return_sequences=True, input_shape=[None, 1]),
        keras.layers.SimpleRNN(20),
        keras.layers.Dense(1),
    ]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

model.evaluate(X_valid, y_valid)

plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()
" 0 5 (fontified t face font-lock-variable-name-face) 5 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-1-face)) 32 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-2-face)) 38 69 (fontified t) 69 70 (fontified t face (rainbow-delimiters-depth-3-face)) 70 91 (fontified t) 91 95 (fontified t face font-lock-constant-face) 95 109 (fontified t) 109 110 (fontified t face (rainbow-delimiters-depth-4-face)) 110 114 (fontified t face font-lock-constant-face) 114 117 (fontified t) 117 118 (fontified t face (rainbow-delimiters-depth-4-face)) 118 119 (fontified t face (rainbow-delimiters-depth-3-face)) 119 151 (fontified t) 151 152 (fontified t face (rainbow-delimiters-depth-3-face)) 152 154 (fontified t) 154 155 (fontified t face (rainbow-delimiters-depth-3-face)) 155 183 (fontified t) 183 184 (fontified t face (rainbow-delimiters-depth-3-face)) 184 185 (fontified t) 185 186 (fontified t face (rainbow-delimiters-depth-3-face)) 186 192 (fontified t) 192 193 (fontified t face (rainbow-delimiters-depth-2-face)) 193 194 (fontified t) 194 195 (fontified t face (rainbow-delimiters-depth-1-face)) 195 203 (fontified t) 203 210 (fontified t face font-lock-builtin-face) 210 211 (fontified t face (rainbow-delimiters-depth-1-face)) 211 216 (fontified t) 216 221 (fontified t face font-lock-string-face) 221 233 (fontified t) 233 239 (fontified t face font-lock-string-face) 239 240 (fontified t face (rainbow-delimiters-depth-1-face)) 240 241 (fontified t) 241 248 (fontified t face font-lock-variable-name-face) 248 260 (fontified t) 260 261 (fontified t face (rainbow-delimiters-depth-1-face)) 261 285 (fontified t) 285 306 (fontified t) 306 307 (face (rainbow-delimiters-depth-2-face) fontified t) 307 323 (fontified t) 323 324 (face (rainbow-delimiters-depth-2-face) fontified t) 324 325 (face (rainbow-delimiters-depth-1-face) fontified t) 325 326 (fontified t) 326 327 (fontified t) 327 341 (fontified t) 341 342 (fontified t face (rainbow-delimiters-depth-1-face)) 342 358 (fontified t) 358 359 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 359 360 (fontified t) 360 361 (fontified t) 361 381 (fontified t) 381 382 (fontified t face (rainbow-delimiters-depth-1-face)) 382 397 (fontified t) 397 398 (fontified t face (rainbow-delimiters-depth-2-face)) 398 404 (fontified t face font-lock-string-face) 404 405 (fontified t face (rainbow-delimiters-depth-2-face)) 405 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-2-face)) 423 433 (fontified t face font-lock-string-face) 433 434 (fontified t face (rainbow-delimiters-depth-2-face)) 434 435 (fontified t face (rainbow-delimiters-depth-1-face)) 435 436 (fontified t) 436 444 (fontified t) 444 445 (fontified t face (rainbow-delimiters-depth-1-face)) 445 446 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 446 447 (fontified t) 447 448 (fontified t) 448 454 (fontified t face font-lock-variable-name-face) 454 470 (fontified t) 470 471 (fontified t face (rainbow-delimiters-depth-1-face)) 471 478 (fontified t) 478 479 (fontified t face (rainbow-delimiters-depth-1-face)) 479 491 (fontified t) 491 492 (fontified t face (rainbow-delimiters-depth-1-face)) 492 499 (fontified t) 499 500 (fontified t face (rainbow-delimiters-depth-2-face)) 500 507 (fontified t) 507 508 (fontified t face (rainbow-delimiters-depth-2-face)) 508 517 (fontified t) 517 518 (fontified t face (rainbow-delimiters-depth-2-face)) 518 522 (fontified t) 522 523 (fontified t face (rainbow-delimiters-depth-2-face)) 523 531 (fontified t) 531 532 (fontified t face (rainbow-delimiters-depth-2-face)) 532 536 (fontified t) 536 537 (fontified t face (rainbow-delimiters-depth-2-face)) 537 538 (fontified t face (rainbow-delimiters-depth-1-face)) 538 539 (fontified t) 539 547 (fontified t) 547 548 (fontified t face (rainbow-delimiters-depth-1-face)) 548 549 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 549 550 (fontified t)) . 7074) (undo-tree-id12391 . -549) (undo-tree-id12392 . -550) (undo-tree-id12393 . -326) (undo-tree-id12394 . -359) (undo-tree-id12395 . -359) (undo-tree-id12396 . -447) (undo-tree-id12397 . -548) (undo-tree-id12398 . -548) (undo-tree-id12399 . -548) (undo-tree-id12400 . -548) (undo-tree-id12401 . -548) (undo-tree-id12402 . -548) (undo-tree-id12403 . -548) (undo-tree-id12404 . -548) (undo-tree-id12405 . -548) (undo-tree-id12406 . -548) (undo-tree-id12407 . -548) (undo-tree-id12408 . -550) (undo-tree-id12409 . -550) (undo-tree-id12410 . -550) (undo-tree-id12411 . -550) (undo-tree-id12412 . -550) (undo-tree-id12413 . -550) (undo-tree-id12414 . -550) (undo-tree-id12415 . -550) (undo-tree-id12416 . -550) (undo-tree-id12417 . -550) (undo-tree-id12418 . -550) (undo-tree-id12419 . -550) (undo-tree-id12420 . -550) (undo-tree-id12421 . -550) (undo-tree-id12422 . -550) (undo-tree-id12423 . -550) (undo-tree-id12424 . -550) (undo-tree-id12425 . -550) (undo-tree-id12426 . -550) (undo-tree-id12427 . -550) (undo-tree-id12428 . -550) (undo-tree-id12429 . -550) (undo-tree-id12430 . -550) (undo-tree-id12431 . -550) (undo-tree-id12432 . -550) (undo-tree-id12433 . -550) (undo-tree-id12434 . -550) (undo-tree-id12435 . -550) (undo-tree-id12436 . -550) (undo-tree-id12437 . -550) (undo-tree-id12438 . -550) (undo-tree-id12439 . -550) (undo-tree-id12440 . -550) (undo-tree-id12441 . -550) (undo-tree-id12442 . -550) (undo-tree-id12443 . -550) (undo-tree-id12444 . -550) (undo-tree-id12445 . -550) (undo-tree-id12446 . -550) (undo-tree-id12447 . -550) (undo-tree-id12448 . -550) (undo-tree-id12449 . -550) (undo-tree-id12450 . -550) (undo-tree-id12451 . -550) (undo-tree-id12452 . -550) (undo-tree-id12453 . -550) (undo-tree-id12454 . -550) (undo-tree-id12455 . -550) (undo-tree-id12456 . -550) (undo-tree-id12457 . -550) (undo-tree-id12458 . -550) (undo-tree-id12459 . -550) (undo-tree-id12460 . -550) (undo-tree-id12461 . -550) (undo-tree-id12462 . -118) (undo-tree-id12463 . -119) (undo-tree-id12464 . -316) (undo-tree-id12465 . -323) (undo-tree-id12466 . -550) (undo-tree-id12467 . -550) (undo-tree-id12468 . -550) (undo-tree-id12469 . -550) (undo-tree-id12470 . -550) (undo-tree-id12471 . -550) (undo-tree-id12472 . -33) (undo-tree-id12473 . -33) (undo-tree-id12474 . -33) (undo-tree-id12475 . -33) (undo-tree-id12476 . -33) (undo-tree-id12477 . -39) (undo-tree-id12478 . -104) (undo-tree-id12479 . -121) (undo-tree-id12480 . -157) (undo-tree-id12481 . -188) (undo-tree-id12482 . -194) (undo-tree-id12483 . -196) (undo-tree-id12484 . -197) (undo-tree-id12485 . -241) (undo-tree-id12486 . -306) (undo-tree-id12487 . -326) (undo-tree-id12488 . -327) (undo-tree-id12489 . -360) (undo-tree-id12490 . -361) (undo-tree-id12491 . -426) (undo-tree-id12492 . -436) (undo-tree-id12493 . -447) (undo-tree-id12494 . -448) (undo-tree-id12495 . -480) (undo-tree-id12496 . -539) (undo-tree-id12497 . -550) (undo-tree-id12498 . -550) (undo-tree-id12499 . -241) (undo-tree-id12500 . -248) (undo-tree-id12501 . -11) (undo-tree-id12502 . -11) (undo-tree-id12503 . -11) (undo-tree-id12504 . -11) (undo-tree-id12505 . -12) (undo-tree-id12506 . -12) (undo-tree-id12507 . -11) (undo-tree-id12508 . -550) (undo-tree-id12509 . -550) (undo-tree-id12510 . -33) (undo-tree-id12511 . -33) (undo-tree-id12512 . -33) (undo-tree-id12513 . -33) (undo-tree-id12514 . -33) (undo-tree-id12515 . -39) (undo-tree-id12516 . -104) (undo-tree-id12517 . -121) (undo-tree-id12518 . -157) (undo-tree-id12519 . -188) (undo-tree-id12520 . -194) (undo-tree-id12521 . -196) (undo-tree-id12522 . -197) (undo-tree-id12523 . -241) (undo-tree-id12524 . -306) (undo-tree-id12525 . -326) (undo-tree-id12526 . -327) (undo-tree-id12527 . -360) (undo-tree-id12528 . -361) (undo-tree-id12529 . -426) (undo-tree-id12530 . -436) (undo-tree-id12531 . -447) (undo-tree-id12532 . -448) (undo-tree-id12533 . -480) (undo-tree-id12534 . -539) (undo-tree-id12535 . -550) (undo-tree-id12536 . -550) (undo-tree-id12537 . -550) (undo-tree-id12538 . -550) 7624 (t 25759 44442 784851 242000)) nil (25759 44492 750114 522000) 0 nil])
([nil current ((1 . 7825) (#("# import libraries
import numpy as np
import sklearn
import tensorflow as tf
from tensorflow import keras
from pathlib import Path
import matplotlib as mpl
import matplotlib.pyplot as plt

mpl.rc(\"axes\", labelsize=14)
mpl.rc(\"xtick\", labelsize=12)
mpl.rc(\"ytick\", labelsize=12)

###############################################################################
# setting random seeds
np.random.seed(42)
tf.random.set_seed(42)

###############################################################################
# custom functions


def generate_time_series(batch_size, n_steps):
    # Generate random values for frequencies and offsets
    freq1, freq2, offsets1, offsets2 = np.random.rand(4, batch_size, 1)

    # Generate a time array from 0 to 1 with n_steps
    time = np.linspace(0, 1, n_steps)

    # Generate the first wave by applying a sinusoidal function to the time array
    # The frequency and offset values are used to modify the wave
    series = 0.5 * np.sin((time - offsets1) * (freq1 * 10 + 10))  # wave 1

    # Generate the second wave by applying another sinusoidal function to the time array
    # Similar to the first wave, frequency and offset values are used to modify the wave
    series += 0.2 * np.sin((time - offsets2) * (freq2 * 20 + 20))  # + wave 2

    # Add random noise to the series by subtracting 0.5 from a random array and scaling it by 0.1
    series += 0.1 * (np.random.rand(batch_size, n_steps) - 0.5)  # + noise

    # Reshape the series to have an additional dimension using np.newaxis
    # and convert it to the float32 data type
    return series[..., np.newaxis].astype(np.float32)


def plot_series(
    series, y=None, y_pred=None, x_label=\"$t$\", y_label=\"$x(t)$\", legend=True
):
    # Plot the series
    plt.plot(series, \".-\")

    # Plot the target values if provided
    if y is not None:
        plt.plot(n_steps, y, \"bo\", label=\"Target\")

    # Plot the predicted values if provided
    if y_pred is not None:
        plt.plot(n_steps, y_pred, \"rx\", markersize=10, label=\"Prediction\")

    # Enable grid lines on the plot
    plt.grid(True)

    # Set the x-axis label if provided
    if x_label:
        plt.xlabel(x_label, fontsize=16)

    # Set the y-axis label if provided
    if y_label:
        plt.ylabel(y_label, fontsize=16, rotation=0)

    # Add a horizontal line at y=0
    plt.hlines(0, 0, 100, linewidth=1)

    # Set the axis limits for the plot
    plt.axis([0, n_steps + 1, -1, 1])

    # Add legend if enabled and if there are target or predicted values
    if legend and (y or y_pred):
        plt.legend(fontsize=14, loc=\"upper left\")


def plot_learning_curves(loss, val_loss):
    \"\"\"
    Plot the learning curves for training and validation loss.

    Args:
        loss (list): Training loss values.
        val_loss (list): Validation loss values.
    \"\"\"
    # Plot the training loss curve
    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")

    # Plot the validation loss curve
    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")

    # Set the x-axis to display integers only
    plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))

    # Set the axis limits for the plot
    plt.axis([1, 20, 0, 0.05])

    # Add a legend to the plot
    plt.legend(fontsize=14)

    # Set the x-axis label
    plt.xlabel(\"Epochs\")

    # Set the y-axis label
    plt.ylabel(\"Loss\")

    # Enable grid lines on the plot
    plt.grid(True)


###############################################################################
n_steps = 50
series = generate_time_series(10000, n_steps + 1)

###############################################################################
# test train val split
X_train, y_train = series[:7000, :n_steps], series[:7000, -1]
X_valid, y_valid = series[7000:9000, :n_steps], series[7000:9000, -1]
X_test, y_test = series[9000:, :n_steps], series[9000:, -1]
print(X_train.shape, y_train.shape)

###############################################################################
#
fig, axes = plt.subplots(nrows=1, ncols=3, sharey=True, figsize=(12, 4))
for col in range(3):
    plt.sca(axes[col])
    plot_series(
        X_valid[col, :, 0],
        y_valid[col, 0],
        y_label=(\"$x(t)$\" if col == 0 else None),
        legend=(col == 0),
    )
plt.show()

y_pred = X_valid[:, -1]
np.mean(keras.losses.mean_squared_error(y_valid, y_pred))

###############################################################################
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################

model = keras.models.Sequential(
    [
        # Flatten layer to flatten the input shape of [50, 1] to a 1D array of size 50
        keras.layers.Flatten(input_shape=[50, 1]),
        # Dense layer with 1 unit, representing a single output value
        keras.layers.Dense(1),
    ]
)

# Compile the model
model.compile(loss=\"mse\", optimizer=\"adam\")

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

# Evaluate the model on the validation set
model.evaluate(X_valid, y_valid)
###############################################################################

# Plot the learning curves
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

# Make predictions on the validation set
y_pred = model.predict(X_valid)

# Plot the series
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

###############################################################################
# Using a Simpl RNN

# Define the model architecture
model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(1, input_shape=[None, 1]),
    ],
)

# Define the optimizer with a specific learning rate
optimizer = keras.optimizers.Adam(learning_rate=0.005)

# Compile the model
model.compile(loss=\"mse\", optimizer=optimizer)

# Train the model
history = model.fit(
    X_train,
    y_train,
    epochs=20,
    validation_data=(X_valid, y_valid),
)


model.evaluate(X_valid, y_valid)

plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()


y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

# Deep RNN


np.random.seed(42)
tf.random.set_seed(42)

model = keras.models.Sequential(
    [
        keras.layers.SimpleRNN(20, return_sequences=True, input_shape=[None, 1]),
        keras.layers.SimpleRNN(20, return_sequences=True),
        keras.layers.SimpleRNN(1),
    ]
)

model.compile(loss=\"mse\", optimizer=\"adam\")
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

model.evaluate(X_valid, y_valid)

plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()


y_pred = model.predict(X_valid)
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()

##############################################################################
### Make the second SimpleRNN layer return only the last output

# Define the model architecture
model = keras.models.Sequential([
    keras.layers.SimpleRNN(20, return_sequences=True, input_shape=[None, 1]),
    keras.layers.SimpleRNN(20),
    keras.layers.Dense(1),
])

# Compile the model
model.compile(loss=\"mse\", optimizer=\"adam\")

# Train the model
history = model.fit(X_train, y_train, epochs=20, validation_data=(X_valid, y_valid))

# Evaluate the model on the validation set
model.evaluate(X_valid, y_valid)

# Plot the learning curves
plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])
plt.show()

# Make predictions on the validation set
y_pred = model.predict(X_valid)

# Plot the series
plot_series(X_valid[0, :, 0], y_valid[0, 0], y_pred[0, 0])
plt.show()
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-keyword-face) 25 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 71 (fontified t) 71 73 (fontified t face font-lock-keyword-face) 73 77 (fontified t) 77 81 (fontified t face font-lock-keyword-face) 81 93 (fontified t) 93 99 (fontified t face font-lock-keyword-face) 99 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 119 (fontified t) 119 125 (fontified t face font-lock-keyword-face) 125 131 (fontified t) 131 137 (fontified t face font-lock-keyword-face) 137 149 (fontified t) 149 151 (fontified t face font-lock-keyword-face) 151 156 (fontified t) 156 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 183 (fontified t face font-lock-keyword-face) 183 195 (fontified t) 195 196 (fontified t face (rainbow-delimiters-depth-1-face)) 196 202 (fontified t face font-lock-string-face) 202 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 224 (fontified t) 224 225 (fontified t face (rainbow-delimiters-depth-1-face)) 225 232 (fontified t face font-lock-string-face) 232 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-1-face)) 247 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-1-face)) 255 262 (fontified t face font-lock-string-face) 262 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-1-face)) 277 279 (fontified t) 279 358 (fontified t face font-lock-comment-delimiter-face) 358 359 (fontified t face font-lock-comment-face) 359 361 (fontified t face font-lock-comment-delimiter-face) 361 382 (fontified t face font-lock-comment-face) 382 396 (fontified t) 396 397 (fontified t face (rainbow-delimiters-depth-1-face)) 397 399 (fontified t) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-1-face)) 420 422 (fontified t) 422 423 (fontified t face (rainbow-delimiters-depth-1-face)) 423 425 (fontified t) 425 500 (fontified t face font-lock-comment-delimiter-face) 500 504 (fontified t face font-lock-comment-delimiter-face) 504 505 (fontified t face font-lock-comment-face) 505 507 (fontified t face font-lock-comment-delimiter-face) 507 524 (fontified t face font-lock-comment-face) 524 526 (fontified t) 526 529 (fontified t face font-lock-keyword-face) 529 530 (fontified t) 530 550 (fontified t face font-lock-function-name-face) 550 551 (fontified t face (rainbow-delimiters-depth-1-face)) 551 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 577 (fontified t) 577 579 (fontified t face font-lock-comment-delimiter-face) 579 630 (fontified t face font-lock-comment-face) 630 634 (fontified t) 634 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 646 (fontified t face font-lock-variable-name-face) 646 648 (fontified t) 648 656 (fontified t face font-lock-variable-name-face) 656 658 (fontified t) 658 666 (fontified t face font-lock-variable-name-face) 666 683 (fontified t) 683 684 (fontified t face (rainbow-delimiters-depth-1-face)) 684 700 (fontified t) 700 701 (fontified t face (rainbow-delimiters-depth-1-face)) 701 707 (fontified t) 707 709 (fontified t face font-lock-comment-delimiter-face) 709 756 (fontified t face font-lock-comment-face) 756 760 (fontified t) 760 764 (fontified t face font-lock-variable-name-face) 764 778 (fontified t) 778 779 (fontified t face (rainbow-delimiters-depth-1-face)) 779 792 (fontified t) 792 793 (fontified t face (rainbow-delimiters-depth-1-face)) 793 799 (fontified t) 799 801 (fontified t face font-lock-comment-delimiter-face) 801 877 (fontified t face font-lock-comment-face) 877 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 943 (fontified t face font-lock-comment-face) 943 947 (fontified t) 947 953 (fontified t face font-lock-variable-name-face) 953 968 (fontified t) 968 969 (fontified t face (rainbow-delimiters-depth-1-face)) 969 970 (fontified t face (rainbow-delimiters-depth-2-face)) 970 985 (fontified t) 985 986 (fontified t face (rainbow-delimiters-depth-2-face)) 986 989 (fontified t) 989 990 (fontified t face (rainbow-delimiters-depth-2-face)) 990 1005 (fontified t) 1005 1006 (fontified t face (rainbow-delimiters-depth-2-face)) 1006 1007 (fontified t face (rainbow-delimiters-depth-1-face)) 1007 1009 (fontified t) 1009 1011 (fontified t face font-lock-comment-delimiter-face) 1011 1018 (fontified t face font-lock-comment-face) 2654 2655 (syntax-table (15)) 2830 2831 (syntax-table (15)) 6858 6869 (fontified t) 6869 6870 (fontified t face (rainbow-delimiters-depth-1-face)) 6870 6877 (fontified t) 6877 6878 (fontified t face (rainbow-delimiters-depth-2-face)) 6878 6885 (fontified t) 6885 6886 (fontified t face (rainbow-delimiters-depth-2-face)) 6886 6895 (fontified t) 6895 6896 (fontified t face (rainbow-delimiters-depth-2-face)) 6896 6900 (fontified t) 6900 6901 (fontified t face (rainbow-delimiters-depth-2-face)) 6901 6909 (fontified t) 6909 6910 (fontified t face (rainbow-delimiters-depth-2-face)) 6910 6914 (fontified t) 6914 6915 (fontified t face (rainbow-delimiters-depth-2-face)) 6915 6916 (fontified t face (rainbow-delimiters-depth-1-face)) 6916 6925 (fontified t) 6925 6926 (fontified t face (rainbow-delimiters-depth-1-face)) 6926 6927 (fontified t face (rainbow-delimiters-depth-1-face)) 6927 6929 (fontified t) 6929 7007 (fontified t face font-lock-comment-delimiter-face) 7007 7008 (fontified t face font-lock-comment-face) 7008 7012 (fontified t face font-lock-comment-delimiter-face) 7012 7072 (fontified t face font-lock-comment-face) 7072 7073 (fontified t) 7073 7075 (fontified t face font-lock-comment-delimiter-face) 7075 7105 (fontified t face font-lock-comment-face) 7105 7110 (fontified t face font-lock-variable-name-face) 7110 7136 (fontified t) 7136 7137 (fontified t face (rainbow-delimiters-depth-1-face)) 7137 7138 (fontified t face (rainbow-delimiters-depth-2-face)) 7138 7165 (fontified t) 7165 7166 (fontified t face (rainbow-delimiters-depth-3-face)) 7166 7187 (fontified t) 7187 7191 (fontified t face font-lock-constant-face) 7191 7205 (fontified t) 7205 7206 (fontified t face (rainbow-delimiters-depth-4-face)) 7206 7210 (fontified t face font-lock-constant-face) 7210 7213 (fontified t) 7213 7214 (fontified t face (rainbow-delimiters-depth-4-face)) 7214 7215 (fontified t face (rainbow-delimiters-depth-3-face)) 7215 7243 (fontified t) 7243 7244 (fontified t face (rainbow-delimiters-depth-3-face)) 7244 7246 (fontified t) 7246 7247 (fontified t face (rainbow-delimiters-depth-3-face)) 7247 7271 (fontified t) 7271 7272 (fontified t face (rainbow-delimiters-depth-3-face)) 7272 7273 (fontified t) 7273 7274 (fontified t face (rainbow-delimiters-depth-3-face)) 7274 7276 (fontified t) 7276 7277 (fontified t face (rainbow-delimiters-depth-2-face)) 7277 7278 (fontified t face (rainbow-delimiters-depth-1-face)) 7278 7280 (fontified t) 7280 7282 (fontified t face font-lock-comment-delimiter-face) 7282 7300 (fontified t face font-lock-comment-face) 7300 7306 (fontified t) 7306 7313 (fontified t face font-lock-builtin-face) 7313 7314 (fontified t face (rainbow-delimiters-depth-1-face)) 7314 7319 (fontified t) 7319 7324 (fontified t face font-lock-string-face) 7324 7336 (fontified t) 7336 7342 (fontified t face font-lock-string-face) 7342 7343 (fontified t face (rainbow-delimiters-depth-1-face)) 7343 7345 (fontified t) 7345 7347 (fontified t face font-lock-comment-delimiter-face) 7347 7363 (fontified t face font-lock-comment-face) 7363 7370 (fontified t face font-lock-variable-name-face) 7370 7382 (fontified t) 7382 7383 (fontified t face (rainbow-delimiters-depth-1-face)) 7383 7428 (fontified t) 7428 7429 (fontified t face (rainbow-delimiters-depth-2-face)) 7429 7445 (fontified t) 7445 7446 (fontified t face (rainbow-delimiters-depth-2-face)) 7446 7447 (fontified t face (rainbow-delimiters-depth-1-face)) 7447 7449 (fontified t) 7449 7451 (fontified t face font-lock-comment-delimiter-face) 7451 7492 (fontified t face font-lock-comment-face) 7492 7506 (fontified t) 7506 7507 (fontified t face (rainbow-delimiters-depth-1-face)) 7507 7523 (fontified t) 7523 7524 (fontified t face (rainbow-delimiters-depth-1-face)) 7524 7526 (fontified t) 7526 7528 (fontified t face font-lock-comment-delimiter-face) 7528 7553 (fontified t face font-lock-comment-face) 7553 7573 (fontified t) 7573 7574 (fontified t face (rainbow-delimiters-depth-1-face)) 7574 7589 (fontified t) 7589 7590 (fontified t face (rainbow-delimiters-depth-2-face)) 7590 7596 (fontified t face font-lock-string-face) 7596 7597 (fontified t face (rainbow-delimiters-depth-2-face)) 7597 7614 (fontified t) 7614 7615 (fontified t face (rainbow-delimiters-depth-2-face)) 7615 7625 (fontified t face font-lock-string-face) 7625 7626 (fontified t face (rainbow-delimiters-depth-2-face)) 7626 7627 (fontified t face (rainbow-delimiters-depth-1-face)) 7627 7628 (fontified t) 7628 7636 (fontified t) 7636 7637 (fontified t face (rainbow-delimiters-depth-1-face)) 7637 7638 (fontified t face (rainbow-delimiters-depth-1-face)) 7638 7640 (fontified t) 7640 7642 (fontified t face font-lock-comment-delimiter-face) 7642 7681 (fontified t face font-lock-comment-face) 7681 7687 (fontified t face font-lock-variable-name-face) 7687 7703 (fontified t) 7703 7704 (fontified t face (rainbow-delimiters-depth-1-face)) 7704 7711 (fontified t) 7711 7712 (fontified t face (rainbow-delimiters-depth-1-face)) 7712 7714 (fontified t) 7714 7716 (fontified t face font-lock-comment-delimiter-face) 7716 7732 (fontified t face font-lock-comment-face) 7732 7743 (fontified t) 7743 7744 (fontified t face (rainbow-delimiters-depth-1-face)) 7744 7751 (fontified t) 7751 7752 (fontified t face (rainbow-delimiters-depth-2-face)) 7752 7759 (fontified t) 7759 7760 (fontified t face (rainbow-delimiters-depth-2-face)) 7760 7769 (fontified t) 7769 7770 (fontified t face (rainbow-delimiters-depth-2-face)) 7770 7774 (fontified t) 7774 7775 (fontified t face (rainbow-delimiters-depth-2-face)) 7775 7783 (fontified t) 7783 7784 (fontified t face (rainbow-delimiters-depth-2-face)) 7784 7788 (fontified t) 7788 7789 (fontified t face (rainbow-delimiters-depth-2-face)) 7789 7790 (fontified t face (rainbow-delimiters-depth-1-face)) 7790 7791 (fontified t) 7791 7799 (fontified nil) 7799 7800 (fontified nil face (rainbow-delimiters-depth-1-face)) 7800 7801 (fontified nil rear-nonsticky t face (rainbow-delimiters-depth-1-face)) 7801 7802 (fontified nil)) . 1) (undo-tree-id11985 . -7073) (undo-tree-id11986 . -7800) (undo-tree-id11987 . -7073) (undo-tree-id11988 . -7073) (undo-tree-id11989 . -7073) (undo-tree-id11990 . -7073) (undo-tree-id11991 . -7073) (undo-tree-id11992 . -7073) (undo-tree-id11993 . -7073) (undo-tree-id11994 . -7073) (undo-tree-id11995 . -7073) (undo-tree-id11996 . -7073) (undo-tree-id11997 . -7073) (undo-tree-id11998 . -7073) (undo-tree-id11999 . -7073) (undo-tree-id12000 . -7073) (undo-tree-id12001 . -7073) (undo-tree-id12002 . -7073) (undo-tree-id12003 . -7073) (undo-tree-id12004 . -7073) (undo-tree-id12005 . -7073) (undo-tree-id12006 . -7073) (undo-tree-id12007 . -7073) (undo-tree-id12008 . -7073) (undo-tree-id12009 . -7073) (undo-tree-id12010 . -7073) (undo-tree-id12011 . -7073) (undo-tree-id12012 . -7073) (undo-tree-id12013 . -7073) (undo-tree-id12014 . -7073) (undo-tree-id12015 . -7073) (undo-tree-id12016 . -7073) (undo-tree-id12017 . -7073) (undo-tree-id12018 . -7073) (undo-tree-id12019 . -7073) (undo-tree-id12020 . -7073) (undo-tree-id12021 . -7073) (undo-tree-id12022 . -7073) (undo-tree-id12023 . -7073) (undo-tree-id12024 . -7073) (undo-tree-id12025 . -7073) (undo-tree-id12026 . -7073) (undo-tree-id12027 . -7073) (undo-tree-id12028 . -7073) (undo-tree-id12029 . -7073) (undo-tree-id12030 . -7073) (undo-tree-id12031 . -7073) (undo-tree-id12032 . -7073) (undo-tree-id12033 . -7073) (undo-tree-id12034 . -7073) (undo-tree-id12035 . -7073) (undo-tree-id12036 . -7073) (undo-tree-id12037 . -7073) (undo-tree-id12038 . -7073) (undo-tree-id12039 . -7073) (undo-tree-id12040 . -7073) (undo-tree-id12041 . -7073) (undo-tree-id12042 . -7073) (undo-tree-id12043 . -7073) (undo-tree-id12044 . -7073) (undo-tree-id12045 . -7073) (undo-tree-id12046 . -7073) (undo-tree-id12047 . -7073) (undo-tree-id12048 . -7073) (undo-tree-id12049 . -7073) (undo-tree-id12050 . -7073) (undo-tree-id12051 . -7073) (undo-tree-id12052 . -7073) (undo-tree-id12053 . -7073) (undo-tree-id12054 . -7073) (undo-tree-id12055 . -7073) (undo-tree-id12056 . -7073) (undo-tree-id12057 . -7073) (undo-tree-id12058 . -38) (undo-tree-id12059 . -44) (undo-tree-id12060 . -106) (undo-tree-id12061 . -110) (undo-tree-id12062 . -871) (undo-tree-id12063 . -876) (undo-tree-id12064 . -1097) (undo-tree-id12065 . -1101) (undo-tree-id12066 . -1187) (undo-tree-id12067 . -1188) (undo-tree-id12068 . -1355) (undo-tree-id12069 . -1356) (undo-tree-id12070 . -3060) (undo-tree-id12071 . -3064) (undo-tree-id12072 . -4756) (undo-tree-id12073 . -4760) (undo-tree-id12074 . -5083) (undo-tree-id12075 . -5090) (undo-tree-id12076 . -6468) (undo-tree-id12077 . -6469) (undo-tree-id12078 . -6693) (undo-tree-id12079 . -6700) (undo-tree-id12080 . -7008) (undo-tree-id12081 . -7009) (undo-tree-id12082 . -7073) (undo-tree-id12083 . -7073) (undo-tree-id12084 . -7073) (undo-tree-id12085 . -7073) (undo-tree-id12086 . -7073) (undo-tree-id12087 . -7073) (undo-tree-id12088 . -7073) (undo-tree-id12089 . -7073) (undo-tree-id12090 . -7073) (undo-tree-id12091 . -7073) (undo-tree-id12092 . -7072) (undo-tree-id12093 . -7072) (undo-tree-id12094 . -7072) (undo-tree-id12095 . -7072) (undo-tree-id12096 . -7072) (undo-tree-id12097 . -7072) (undo-tree-id12098 . -7072) (undo-tree-id12099 . -7072) (undo-tree-id12100 . -7072) (undo-tree-id12101 . -7072) (undo-tree-id12102 . -7072) (undo-tree-id12103 . -7073) (undo-tree-id12104 . -7073) (undo-tree-id12105 . -7073) (undo-tree-id12106 . -7073) (undo-tree-id12107 . -7073) (undo-tree-id12108 . -7073) (undo-tree-id12109 . -7073) (undo-tree-id12110 . -7073) (undo-tree-id12111 . -7073) (undo-tree-id12112 . -7073) (undo-tree-id12113 . -7073) (undo-tree-id12114 . -7073) (undo-tree-id12115 . -7073) (undo-tree-id12116 . -7073) (undo-tree-id12117 . -7073) (undo-tree-id12118 . -7073) (undo-tree-id12119 . -7073) (undo-tree-id12120 . -7073) (undo-tree-id12121 . -7073) (undo-tree-id12122 . -7073) (undo-tree-id12123 . -7073) (undo-tree-id12124 . -7073) (undo-tree-id12125 . -7073) (undo-tree-id12126 . -7073) (undo-tree-id12127 . -7073) (undo-tree-id12128 . -7073) (undo-tree-id12129 . -7073) (undo-tree-id12130 . -7073) (undo-tree-id12131 . -7073) (undo-tree-id12132 . -7073) (undo-tree-id12133 . -7073) (undo-tree-id12134 . -7073) (undo-tree-id12135 . -7073) (undo-tree-id12136 . -7073) (undo-tree-id12137 . -7073) (undo-tree-id12138 . -7073) (undo-tree-id12139 . -7073) (undo-tree-id12140 . -7073) (undo-tree-id12141 . -7073) (undo-tree-id12142 . -7073) (undo-tree-id12143 . -7073) (undo-tree-id12144 . -7073) (undo-tree-id12145 . -7073) (undo-tree-id12146 . -7073) (undo-tree-id12147 . -7073) (undo-tree-id12148 . -7073) (undo-tree-id12149 . -7073) (undo-tree-id12150 . -7073) (undo-tree-id12151 . -7073) (undo-tree-id12152 . -7073) (undo-tree-id12153 . -6858) (undo-tree-id12154 . -7073) (undo-tree-id12155 . -7073) (undo-tree-id12156 . -7073) (undo-tree-id12157 . -7073) (undo-tree-id12158 . -7073) (undo-tree-id12159 . -7073) (undo-tree-id12160 . -7073) (undo-tree-id12161 . -7073) (undo-tree-id12162 . -7073) (undo-tree-id12163 . -7073) (undo-tree-id12164 . -7073) (undo-tree-id12165 . -7073) (undo-tree-id12166 . -7073) (undo-tree-id12167 . -7073) (undo-tree-id12168 . -7073) (undo-tree-id12169 . -7073) (undo-tree-id12170 . -7073) (undo-tree-id12171 . -7073) (undo-tree-id12172 . -7073) (undo-tree-id12173 . -7073) (undo-tree-id12174 . -7073) (undo-tree-id12175 . -7073) (undo-tree-id12176 . -7073) (undo-tree-id12177 . -7073) (undo-tree-id12178 . -7073) (undo-tree-id12179 . -7073) (undo-tree-id12180 . -1) (undo-tree-id12181 . -38) (undo-tree-id12182 . -44) (undo-tree-id12183 . -106) (undo-tree-id12184 . -110) (undo-tree-id12185 . -106) (undo-tree-id12186 . -110) (undo-tree-id12187 . -563) (undo-tree-id12188 . -570) (undo-tree-id12189 . -526) (undo-tree-id12190 . -529) (undo-tree-id12191 . -947) (undo-tree-id12192 . -953) (undo-tree-id12193 . -1626) (undo-tree-id12194 . -1629) (undo-tree-id12195 . -1626) (undo-tree-id12196 . -1629) (undo-tree-id12197 . -1647) (undo-tree-id12198 . -1653) (undo-tree-id12199 . -1663) (undo-tree-id12200 . -1669) (undo-tree-id12201 . -1655) (undo-tree-id12202 . -1656) (undo-tree-id12203 . -3563) (undo-tree-id12204 . -3570) (undo-tree-id12205 . -5008) (undo-tree-id12206 . -5015) (undo-tree-id12207 . -5963) (undo-tree-id12208 . -5970) (undo-tree-id12209 . -6618) (undo-tree-id12210 . -6625) (undo-tree-id12211 . -7073) (undo-tree-id12212 . -7073) (undo-tree-id12213 . -7073) (undo-tree-id12214 . -7073) (undo-tree-id12215 . -7073) (undo-tree-id12216 . -7073) (undo-tree-id12217 . -7073) (undo-tree-id12218 . -7073) (undo-tree-id12219 . -7073) (undo-tree-id12220 . -7073) (undo-tree-id12221 . -7073) (undo-tree-id12222 . -7073) (undo-tree-id12223 . -7073) (undo-tree-id12224 . -7073) (undo-tree-id12225 . -7073) (undo-tree-id12226 . -7073) (undo-tree-id12227 . -7073) (undo-tree-id12228 . -7073) (undo-tree-id12229 . -7073) (undo-tree-id12230 . -7073) (undo-tree-id12231 . -7073) (undo-tree-id12232 . -7073) (undo-tree-id12233 . -7073) (undo-tree-id12234 . -7073) (undo-tree-id12235 . -7073) (undo-tree-id12236 . -7073) (undo-tree-id12237 . -7073) (undo-tree-id12238 . -7073) (undo-tree-id12239 . -7073) (undo-tree-id12240 . -7073) (undo-tree-id12241 . -7073) (undo-tree-id12242 . -7073) (undo-tree-id12243 . -7073) (undo-tree-id12244 . -7073) (undo-tree-id12245 . -7073) (undo-tree-id12246 . -7073) (undo-tree-id12247 . -7073) (undo-tree-id12248 . -7073) (undo-tree-id12249 . -7073) (undo-tree-id12250 . -7073) (undo-tree-id12251 . -7073) (undo-tree-id12252 . -7073) (undo-tree-id12253 . -7073) (undo-tree-id12254 . -7073) (undo-tree-id12255 . -7073) (undo-tree-id12256 . -7073) (undo-tree-id12257 . -7073) (undo-tree-id12258 . -7073) (undo-tree-id12259 . -7073) (undo-tree-id12260 . -7073) (undo-tree-id12261 . -7073) (undo-tree-id12262 . -7073) (undo-tree-id12263 . -7073) (undo-tree-id12264 . -7073) (undo-tree-id12265 . -7073) (undo-tree-id12266 . -7073) (undo-tree-id12267 . -7073) (undo-tree-id12268 . -7073) (undo-tree-id12269 . -7073) (undo-tree-id12270 . -7073) (undo-tree-id12271 . -7073) (undo-tree-id12272 . -7073) (undo-tree-id12273 . -7073) (undo-tree-id12274 . -7073) (undo-tree-id12275 . -7073) (undo-tree-id12276 . -7072) (undo-tree-id12277 . -7072) (undo-tree-id12278 . -7072) (undo-tree-id12279 . -7072) (undo-tree-id12280 . -7072) (undo-tree-id12281 . -7072) (undo-tree-id12282 . -7072) (undo-tree-id12283 . -7072) (undo-tree-id12284 . -7072) (undo-tree-id12285 . -7072) (undo-tree-id12286 . -7072) (undo-tree-id12287 . -7072) (undo-tree-id12288 . -7072) (undo-tree-id12289 . -7072) (undo-tree-id12290 . -7073) (undo-tree-id12291 . -7073) (undo-tree-id12292 . -7073) (undo-tree-id12293 . -7073) (undo-tree-id12294 . -7073) (undo-tree-id12295 . -7073) (undo-tree-id12296 . -7073) (undo-tree-id12297 . -7073) (undo-tree-id12298 . -7073) (undo-tree-id12299 . -7073) (undo-tree-id12300 . -7073) (undo-tree-id12301 . -7073) (undo-tree-id12302 . -7073) (undo-tree-id12303 . -7073) (undo-tree-id12304 . -7073) (undo-tree-id12305 . -7073) (undo-tree-id12306 . -7073) (undo-tree-id12307 . -7073) (undo-tree-id12308 . -7073) (undo-tree-id12309 . -7073) (undo-tree-id12310 . -7073) (undo-tree-id12311 . -7073) (undo-tree-id12312 . -7073) (undo-tree-id12313 . -7073) (undo-tree-id12314 . -7073) (undo-tree-id12315 . -7073) (undo-tree-id12316 . -7073) (undo-tree-id12317 . -7073) (undo-tree-id12318 . -7073) (undo-tree-id12319 . -7073) (undo-tree-id12320 . -7073) (undo-tree-id12321 . -7073) (undo-tree-id12322 . -7073) (undo-tree-id12323 . -7073) (undo-tree-id12324 . -7073) (undo-tree-id12325 . -7073) (undo-tree-id12326 . -7073) (undo-tree-id12327 . -7073) (undo-tree-id12328 . -7073) (undo-tree-id12329 . -7791) (undo-tree-id12330 . -7300) (undo-tree-id12331 . -7300) (undo-tree-id12332 . -7300) (undo-tree-id12333 . -7300) (undo-tree-id12334 . -7553) (undo-tree-id12335 . -7553) (undo-tree-id12336 . -7553) (undo-tree-id12337 . -7553) (undo-tree-id12338 . -7800) (undo-tree-id12339 . -7800) (undo-tree-id12340 . -7800) (undo-tree-id12341 . -38) (undo-tree-id12342 . -44) (undo-tree-id12343 . -106) (undo-tree-id12344 . -110) (undo-tree-id12345 . -871) (undo-tree-id12346 . -876) (undo-tree-id12347 . -1097) (undo-tree-id12348 . -1101) (undo-tree-id12349 . -1187) (undo-tree-id12350 . -1188) (undo-tree-id12351 . -1355) (undo-tree-id12352 . -1356) (undo-tree-id12353 . -3060) (undo-tree-id12354 . -3064) (undo-tree-id12355 . -4756) (undo-tree-id12356 . -4760) (undo-tree-id12357 . -5083) (undo-tree-id12358 . -5090) (undo-tree-id12359 . -6468) (undo-tree-id12360 . -6469) (undo-tree-id12361 . -6693) (undo-tree-id12362 . -6700) (undo-tree-id12363 . -7008) (undo-tree-id12364 . -7009) (undo-tree-id12365 . -7438) (undo-tree-id12366 . -7445) (undo-tree-id12367 . -7800) (undo-tree-id12368 . -7801) (undo-tree-id12369 . -7800) (undo-tree-id12370 . -7800) (undo-tree-id12371 . -7731) (undo-tree-id12372 . -7731) (undo-tree-id12373 . -7800) (undo-tree-id12374 . -7800) (undo-tree-id12375 . -7800) (undo-tree-id12376 . -7800) (undo-tree-id12377 . -7800) (undo-tree-id12378 . -7800) (undo-tree-id12379 . -7800) (undo-tree-id12380 . -7800) (undo-tree-id12381 . -7800) (undo-tree-id12382 . -7800) (undo-tree-id12383 . -7345) (undo-tree-id12384 . -7800) (undo-tree-id12385 . -7800) (undo-tree-id12386 . -7345) (undo-tree-id12387 . -7800) (undo-tree-id12388 . -7800) (undo-tree-id12389 . -7800) (undo-tree-id12390 . -7800) (7802 . 7803)) nil (25759 44492 749974 507000) 0 nil])
nil
